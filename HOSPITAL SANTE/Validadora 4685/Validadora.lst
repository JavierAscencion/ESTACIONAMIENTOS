;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 01/12/2022 09:32:28 a. m.
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF04DEFA0  	GOTO        39744
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF04DEFCE  	GOTO        39836
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xF04DEFB2  	GOTO        39780
_I2C_soft_read:
;i2c_soft.h,70 :: 		char I2C_soft_read(bool ACK){
;i2c_soft.h,71 :: 		char i, result = 0;
0x001C	0x0105      	MOVLB       5
0x001E	0x6BA7      	CLRF        I2C_soft_read_result_L0, 1
;i2c_soft.h,74 :: 		I2C_SDAD = 1;
0x0020	0x8A93      	BSF         I2C_SDAD, BitPos(I2C_SDAD+0) 
;i2c_soft.h,76 :: 		for(i = 0; i < 8; i++){
0x0022	0x6A01      	CLRF        R1 
L_I2C_soft_read454:
0x0024	0x0E08      	MOVLW       8
0x0026	0x5C01      	SUBWF       R1, 0 
0x0028	0xE212      	BC          L_I2C_soft_read455
;i2c_soft.h,77 :: 		result <<= 1;
0x002A	0x37A7      	RLCF        I2C_soft_read_result_L0, 1, 1
0x002C	0x91A7      	BCF         I2C_soft_read_result_L0, 0, 1
;i2c_soft.h,78 :: 		I2C_SCL = 1;
0x002E	0x8881      	BSF         I2C_SCL, BitPos(I2C_SCL+0) 
;i2c_soft.h,79 :: 		delay_us(2);
0x0030	0x0000      	NOP
0x0032	0x0000      	NOP
0x0034	0x0000      	NOP
0x0036	0x0000      	NOP
0x0038	0x0000      	NOP
;i2c_soft.h,81 :: 		if(I2C_SDA)
0x003A	0xBA81      	BTFSC       I2C_SDA, BitPos(I2C_SDA+0) 
;i2c_soft.h,82 :: 		result |= 0x01;
0x003C	0x81A7      	BSF         I2C_soft_read_result_L0, 0, 1
L_I2C_soft_read457:
;i2c_soft.h,83 :: 		I2C_SCL = 0;
0x003E	0x9881      	BCF         I2C_SCL, BitPos(I2C_SCL+0) 
;i2c_soft.h,84 :: 		delay_us(2);
0x0040	0x0000      	NOP
0x0042	0x0000      	NOP
0x0044	0x0000      	NOP
0x0046	0x0000      	NOP
0x0048	0x0000      	NOP
;i2c_soft.h,76 :: 		for(i = 0; i < 8; i++){
0x004A	0x2A01      	INCF        R1, 1 
;i2c_soft.h,85 :: 		}
0x004C	0xD7EB      	BRA         L_I2C_soft_read454
L_I2C_soft_read455:
;i2c_soft.h,88 :: 		I2C_SDAD = 0;
0x004E	0x9A93      	BCF         I2C_SDAD, BitPos(I2C_SDAD+0) 
;i2c_soft.h,89 :: 		I2C_SDA = !ACK.B0;  //Señal negada
0x0050	0xB1A6      	BTFSC       FARG_I2C_soft_read_ACK, 0, 1
0x0052	0xD002      	BRA         L__I2C_soft_read1243
0x0054	0x8A81      	BSF         I2C_SDA, BitPos(I2C_SDA+0) 
0x0056	0xD001      	BRA         L__I2C_soft_read1244
L__I2C_soft_read1243:
0x0058	0x9A81      	BCF         I2C_SDA, BitPos(I2C_SDA+0) 
L__I2C_soft_read1244:
;i2c_soft.h,90 :: 		asm nop;
0x005A	0x0000      	NOP
;i2c_soft.h,91 :: 		I2C_SCL = 1;
0x005C	0x8881      	BSF         I2C_SCL, BitPos(I2C_SCL+0) 
;i2c_soft.h,92 :: 		delay_us(2);
0x005E	0x0000      	NOP
0x0060	0x0000      	NOP
0x0062	0x0000      	NOP
0x0064	0x0000      	NOP
0x0066	0x0000      	NOP
;i2c_soft.h,93 :: 		I2C_SCL = 0;
0x0068	0x9881      	BCF         I2C_SCL, BitPos(I2C_SCL+0) 
;i2c_soft.h,95 :: 		return result;
0x006A	0xF000C5A7  	MOVFF       I2C_soft_read_result_L0, R0
;i2c_soft.h,96 :: 		}
L_end_I2C_soft_read:
0x006E	0x0012      	RETURN      0
; end of _I2C_soft_read
_I2C_soft_write:
;i2c_soft.h,45 :: 		bool I2C_soft_write(char dato){
;i2c_soft.h,49 :: 		for(i = 0; i < 8; i++){
0x0070	0x6A01      	CLRF        R1 
L_I2C_soft_write451:
0x0072	0x0E08      	MOVLW       8
0x0074	0x5C01      	SUBWF       R1, 0 
0x0076	0xE216      	BC          L_I2C_soft_write452
;i2c_soft.h,50 :: 		I2C_SDA = dato.B7;  //El valor del bit
0x0078	0x0105      	MOVLB       5
0x007A	0xBFA6      	BTFSC       FARG_I2C_soft_write_dato, 7, 1
0x007C	0xD002      	BRA         L__I2C_soft_write1238
0x007E	0x9A81      	BCF         I2C_SDA, BitPos(I2C_SDA+0) 
0x0080	0xD001      	BRA         L__I2C_soft_write1239
L__I2C_soft_write1238:
0x0082	0x8A81      	BSF         I2C_SDA, BitPos(I2C_SDA+0) 
L__I2C_soft_write1239:
;i2c_soft.h,51 :: 		I2C_SCL = 1;        //Activar dato
0x0084	0x8881      	BSF         I2C_SCL, BitPos(I2C_SCL+0) 
;i2c_soft.h,52 :: 		delay_us(2);
0x0086	0x0000      	NOP
0x0088	0x0000      	NOP
0x008A	0x0000      	NOP
0x008C	0x0000      	NOP
0x008E	0x0000      	NOP
;i2c_soft.h,53 :: 		dato <<= 1;         //Recorro hacia la izquierda
0x0090	0x37A6      	RLCF        FARG_I2C_soft_write_dato, 1, 1
0x0092	0x91A6      	BCF         FARG_I2C_soft_write_dato, 0, 1
;i2c_soft.h,54 :: 		I2C_SCL = 0;
0x0094	0x9881      	BCF         I2C_SCL, BitPos(I2C_SCL+0) 
;i2c_soft.h,55 :: 		delay_us(2);
0x0096	0x0000      	NOP
0x0098	0x0000      	NOP
0x009A	0x0000      	NOP
0x009C	0x0000      	NOP
0x009E	0x0000      	NOP
;i2c_soft.h,49 :: 		for(i = 0; i < 8; i++){
0x00A0	0x2A01      	INCF        R1, 1 
;i2c_soft.h,56 :: 		}
0x00A2	0xD7E7      	BRA         L_I2C_soft_write451
L_I2C_soft_write452:
;i2c_soft.h,59 :: 		I2C_SDAD = 1;
0x00A4	0x8A93      	BSF         I2C_SDAD, BitPos(I2C_SDAD+0) 
;i2c_soft.h,60 :: 		asm nop;
0x00A6	0x0000      	NOP
;i2c_soft.h,61 :: 		I2C_SCL = 1;     //Mandar el púlso para recibir el ACK
0x00A8	0x8881      	BSF         I2C_SCL, BitPos(I2C_SCL+0) 
;i2c_soft.h,62 :: 		delay_us(2);
0x00AA	0x0000      	NOP
0x00AC	0x0000      	NOP
0x00AE	0x0000      	NOP
0x00B0	0x0000      	NOP
0x00B2	0x0000      	NOP
;i2c_soft.h,63 :: 		i.B0 = I2C_SDA;  //Guardo el valor del ACK
0x00B4	0xBA81      	BTFSC       I2C_SDA, BitPos(I2C_SDA+0) 
0x00B6	0xD002      	BRA         L__I2C_soft_write1240
0x00B8	0x9001      	BCF         R1, 0 
0x00BA	0xD001      	BRA         L__I2C_soft_write1241
L__I2C_soft_write1240:
0x00BC	0x8001      	BSF         R1, 0 
L__I2C_soft_write1241:
;i2c_soft.h,64 :: 		I2C_SCL = 0;
0x00BE	0x9881      	BCF         I2C_SCL, BitPos(I2C_SCL+0) 
;i2c_soft.h,65 :: 		I2C_SDAD = 0;    //Configurar como salida el pin
0x00C0	0x9A93      	BCF         I2C_SDAD, BitPos(I2C_SDAD+0) 
;i2c_soft.h,67 :: 		return i.B0;
0x00C2	0x0E00      	MOVLW       0
0x00C4	0xB001      	BTFSC       R1, 0 
0x00C6	0x0E01      	MOVLW       1
0x00C8	0x6E00      	MOVWF       R0 
;i2c_soft.h,68 :: 		}
L_end_I2C_soft_write:
0x00CA	0x0012      	RETURN      0
; end of _I2C_soft_write
_I2C_soft_start:
;i2c_soft.h,22 :: 		void I2C_soft_start(){
;i2c_soft.h,24 :: 		I2C_SDAD = 1;
0x00CC	0x8A93      	BSF         I2C_SDAD, BitPos(I2C_SDAD+0) 
;i2c_soft.h,25 :: 		I2C_SCLD = 1;
0x00CE	0x8893      	BSF         I2C_SCLD, BitPos(I2C_SCLD+0) 
;i2c_soft.h,26 :: 		delay_us(2);
0x00D0	0x0000      	NOP
0x00D2	0x0000      	NOP
0x00D4	0x0000      	NOP
0x00D6	0x0000      	NOP
0x00D8	0x0000      	NOP
;i2c_soft.h,28 :: 		I2C_SDAD = 0;
0x00DA	0x9A93      	BCF         I2C_SDAD, BitPos(I2C_SDAD+0) 
;i2c_soft.h,29 :: 		I2C_SDA = 0;  //Señal en bajo
0x00DC	0x9A81      	BCF         I2C_SDA, BitPos(I2C_SDA+0) 
;i2c_soft.h,30 :: 		delay_us(2);
0x00DE	0x0000      	NOP
0x00E0	0x0000      	NOP
0x00E2	0x0000      	NOP
0x00E4	0x0000      	NOP
0x00E6	0x0000      	NOP
;i2c_soft.h,32 :: 		I2C_SCLD = 0;
0x00E8	0x9893      	BCF         I2C_SCLD, BitPos(I2C_SCLD+0) 
;i2c_soft.h,33 :: 		I2C_SCL = 0;  //Señal en bajo
0x00EA	0x9881      	BCF         I2C_SCL, BitPos(I2C_SCL+0) 
;i2c_soft.h,34 :: 		}
L_end_I2C_soft_start:
0x00EC	0x0012      	RETURN      0
; end of _I2C_soft_start
_I2C_soft_stop:
;i2c_soft.h,36 :: 		void I2C_soft_stop(){
;i2c_soft.h,37 :: 		I2C_SDAD = 0;  //Configuro de salida por seguridad
0x00EE	0x9A93      	BCF         I2C_SDAD, BitPos(I2C_SDAD+0) 
;i2c_soft.h,38 :: 		I2C_SDA = 0;   //Mando cero por el protocolo
0x00F0	0x9A81      	BCF         I2C_SDA, BitPos(I2C_SDA+0) 
;i2c_soft.h,39 :: 		delay_us(2);
0x00F2	0x0000      	NOP
0x00F4	0x0000      	NOP
0x00F6	0x0000      	NOP
0x00F8	0x0000      	NOP
0x00FA	0x0000      	NOP
;i2c_soft.h,40 :: 		I2C_SCLD = 1;
0x00FC	0x8893      	BSF         I2C_SCLD, BitPos(I2C_SCLD+0) 
;i2c_soft.h,41 :: 		delay_us(2);
0x00FE	0x0000      	NOP
0x0100	0x0000      	NOP
0x0102	0x0000      	NOP
0x0104	0x0000      	NOP
0x0106	0x0000      	NOP
;i2c_soft.h,42 :: 		I2C_SDAD = 1;
0x0108	0x8A93      	BSF         I2C_SDAD, BitPos(I2C_SDAD+0) 
;i2c_soft.h,43 :: 		}
L_end_I2C_soft_stop:
0x010A	0x0012      	RETURN      0
; end of _I2C_soft_stop
_SDIV3232L:
;__Lib_Math.c,553 :: 		
;__Lib_Math.c,563 :: 		
0x010C	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,564 :: 		
0x010E	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,565 :: 		
0x0110	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,566 :: 		
0x0112	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,567 :: 		
0x0114	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,568 :: 		
0x0116	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,569 :: 		
0x0118	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,570 :: 		
0x011A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,571 :: 		
0x011C	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,572 :: 		
0x011E	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,573 :: 		
0x0120	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,574 :: 		
0x0122	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,575 :: 		
0x0124	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,576 :: 		
0x0126	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,577 :: 		
0x0128	0x3603      	RLCF        R3, 1, 0
;__Lib_Math.c,579 :: 		
0x012A	0x0E07      	MOVLW       7
;__Lib_Math.c,580 :: 		
0x012C	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,582 :: 		
LOOPS3232A:
;__Lib_Math.c,583 :: 		
0x012E	0x3403      	RLCF        R3, 0, 0
;__Lib_Math.c,584 :: 		
0x0130	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,585 :: 		
0x0132	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,586 :: 		
0x0134	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,587 :: 		
0x0136	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,588 :: 		
0x0138	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,589 :: 		
0x013A	0xA003      	BTFSS       R3, 0, 0
;__Lib_Math.c,590 :: 		
0x013C	0xD00E      	BRA         SADD22LA
;__Lib_Math.c,592 :: 		
0x013E	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,593 :: 		
0x0140	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,594 :: 		
0x0142	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,595 :: 		
0x0144	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,596 :: 		
0x0146	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,597 :: 		
0x0148	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,598 :: 		
0x014A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,599 :: 		
0x014C	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,600 :: 		
0x014E	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,601 :: 		
0x0150	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,602 :: 		
0x0152	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,603 :: 		
0x0154	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,604 :: 		
0x0156	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,605 :: 		
0x0158	0xD00D      	BRA         SOK22LA
;__Lib_Math.c,607 :: 		
SADD22LA:
;__Lib_Math.c,608 :: 		
0x015A	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,609 :: 		
0x015C	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,610 :: 		
0x015E	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,611 :: 		
0x0160	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,612 :: 		
0x0162	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,613 :: 		
0x0164	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,614 :: 		
0x0166	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,615 :: 		
0x0168	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,616 :: 		
0x016A	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,617 :: 		
0x016C	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,618 :: 		
0x016E	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,619 :: 		
0x0170	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,620 :: 		
0x0172	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,622 :: 		
SOK22LA:
;__Lib_Math.c,623 :: 		
0x0174	0x3603      	RLCF        R3, 1, 0
;__Lib_Math.c,625 :: 		
0x0176	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,626 :: 		
0x0178	0xD7DA      	BRA         LOOPS3232A
;__Lib_Math.c,628 :: 		
0x017A	0x3402      	RLCF        R2, 0, 0
;__Lib_Math.c,629 :: 		
0x017C	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,630 :: 		
0x017E	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,631 :: 		
0x0180	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,632 :: 		
0x0182	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,633 :: 		
0x0184	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,634 :: 		
0x0186	0xA003      	BTFSS       R3, 0, 0
;__Lib_Math.c,635 :: 		
0x0188	0xD00E      	BRA         SADD22L8
;__Lib_Math.c,637 :: 		
0x018A	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,638 :: 		
0x018C	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,639 :: 		
0x018E	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,640 :: 		
0x0190	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,641 :: 		
0x0192	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,642 :: 		
0x0194	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,643 :: 		
0x0196	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,644 :: 		
0x0198	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,645 :: 		
0x019A	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,646 :: 		
0x019C	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,647 :: 		
0x019E	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,648 :: 		
0x01A0	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,649 :: 		
0x01A2	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,650 :: 		
0x01A4	0xD00D      	BRA         SOK22L8
;__Lib_Math.c,652 :: 		
SADD22L8:
;__Lib_Math.c,653 :: 		
0x01A6	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,654 :: 		
0x01A8	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,655 :: 		
0x01AA	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,656 :: 		
0x01AC	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,657 :: 		
0x01AE	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,658 :: 		
0x01B0	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,659 :: 		
0x01B2	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,660 :: 		
0x01B4	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,661 :: 		
0x01B6	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,662 :: 		
0x01B8	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,663 :: 		
0x01BA	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,664 :: 		
0x01BC	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,665 :: 		
0x01BE	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,667 :: 		
SOK22L8:
;__Lib_Math.c,668 :: 		
0x01C0	0x3602      	RLCF        R2, 1, 0
;__Lib_Math.c,670 :: 		
0x01C2	0x0E07      	MOVLW       7
;__Lib_Math.c,671 :: 		
0x01C4	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,673 :: 		
LOOPS3232B:
;__Lib_Math.c,674 :: 		
0x01C6	0x3402      	RLCF        R2, 0, 0
;__Lib_Math.c,675 :: 		
0x01C8	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,676 :: 		
0x01CA	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,677 :: 		
0x01CC	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,678 :: 		
0x01CE	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,679 :: 		
0x01D0	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,680 :: 		
0x01D2	0xA002      	BTFSS       R2, 0, 0
;__Lib_Math.c,681 :: 		
0x01D4	0xD00E      	BRA         SADD22LB
;__Lib_Math.c,683 :: 		
0x01D6	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,684 :: 		
0x01D8	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,685 :: 		
0x01DA	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,686 :: 		
0x01DC	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,687 :: 		
0x01DE	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,688 :: 		
0x01E0	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,689 :: 		
0x01E2	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,690 :: 		
0x01E4	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,691 :: 		
0x01E6	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,692 :: 		
0x01E8	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,693 :: 		
0x01EA	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,694 :: 		
0x01EC	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,695 :: 		
0x01EE	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,696 :: 		
0x01F0	0xD00D      	BRA         SOK22LB
;__Lib_Math.c,698 :: 		
SADD22LB:
;__Lib_Math.c,699 :: 		
0x01F2	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,700 :: 		
0x01F4	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,701 :: 		
0x01F6	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,702 :: 		
0x01F8	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,703 :: 		
0x01FA	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,704 :: 		
0x01FC	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,705 :: 		
0x01FE	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,706 :: 		
0x0200	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,707 :: 		
0x0202	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,708 :: 		
0x0204	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,709 :: 		
0x0206	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,710 :: 		
0x0208	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,711 :: 		
0x020A	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,713 :: 		
SOK22LB:
;__Lib_Math.c,714 :: 		
0x020C	0x3602      	RLCF        R2, 1, 0
;__Lib_Math.c,716 :: 		
0x020E	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,717 :: 		
0x0210	0xD7DA      	BRA         LOOPS3232B
;__Lib_Math.c,719 :: 		
0x0212	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,720 :: 		
0x0214	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,721 :: 		
0x0216	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,722 :: 		
0x0218	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,723 :: 		
0x021A	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,724 :: 		
0x021C	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,725 :: 		
0x021E	0xA002      	BTFSS       R2, 0, 0
;__Lib_Math.c,726 :: 		
0x0220	0xD00E      	BRA         SADD22L16
;__Lib_Math.c,728 :: 		
0x0222	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,729 :: 		
0x0224	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,730 :: 		
0x0226	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,731 :: 		
0x0228	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,732 :: 		
0x022A	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,733 :: 		
0x022C	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,734 :: 		
0x022E	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,735 :: 		
0x0230	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,736 :: 		
0x0232	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,737 :: 		
0x0234	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,738 :: 		
0x0236	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,739 :: 		
0x0238	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,740 :: 		
0x023A	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,741 :: 		
0x023C	0xD00D      	BRA         SOK22L16
;__Lib_Math.c,743 :: 		
SADD22L16:
;__Lib_Math.c,744 :: 		
0x023E	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,745 :: 		
0x0240	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,746 :: 		
0x0242	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,747 :: 		
0x0244	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,748 :: 		
0x0246	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,749 :: 		
0x0248	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,750 :: 		
0x024A	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,751 :: 		
0x024C	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,752 :: 		
0x024E	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,753 :: 		
0x0250	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,754 :: 		
0x0252	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,755 :: 		
0x0254	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,756 :: 		
0x0256	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,758 :: 		
SOK22L16:
;__Lib_Math.c,759 :: 		
0x0258	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,761 :: 		
0x025A	0x0E07      	MOVLW       7
;__Lib_Math.c,762 :: 		
0x025C	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,764 :: 		
LOOPS3232C:
;__Lib_Math.c,765 :: 		
0x025E	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,766 :: 		
0x0260	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,767 :: 		
0x0262	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,768 :: 		
0x0264	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,769 :: 		
0x0266	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,770 :: 		
0x0268	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,771 :: 		
0x026A	0xA001      	BTFSS       R1, 0, 0
;__Lib_Math.c,772 :: 		
0x026C	0xD00E      	BRA         SADD22LC
;__Lib_Math.c,774 :: 		
0x026E	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,775 :: 		
0x0270	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,776 :: 		
0x0272	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,777 :: 		
0x0274	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,778 :: 		
0x0276	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,779 :: 		
0x0278	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,780 :: 		
0x027A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,781 :: 		
0x027C	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,782 :: 		
0x027E	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,783 :: 		
0x0280	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,784 :: 		
0x0282	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,785 :: 		
0x0284	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,786 :: 		
0x0286	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,787 :: 		
0x0288	0xD00D      	BRA         SOK22LC
;__Lib_Math.c,789 :: 		
SADD22LC:
;__Lib_Math.c,790 :: 		
0x028A	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,791 :: 		
0x028C	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,792 :: 		
0x028E	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,793 :: 		
0x0290	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,794 :: 		
0x0292	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,795 :: 		
0x0294	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,796 :: 		
0x0296	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,797 :: 		
0x0298	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,798 :: 		
0x029A	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,799 :: 		
0x029C	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,800 :: 		
0x029E	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,801 :: 		
0x02A0	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,802 :: 		
0x02A2	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,804 :: 		
SOK22LC:
;__Lib_Math.c,805 :: 		
0x02A4	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,807 :: 		
0x02A6	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,808 :: 		
0x02A8	0xD7DA      	BRA         LOOPS3232C
;__Lib_Math.c,810 :: 		
0x02AA	0x3400      	RLCF        R0, 0, 0
;__Lib_Math.c,811 :: 		
0x02AC	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,812 :: 		
0x02AE	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,813 :: 		
0x02B0	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,814 :: 		
0x02B2	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,815 :: 		
0x02B4	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,816 :: 		
0x02B6	0xA001      	BTFSS       R1, 0, 0
;__Lib_Math.c,817 :: 		
0x02B8	0xD00E      	BRA         SADD22L24
;__Lib_Math.c,819 :: 		
0x02BA	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,820 :: 		
0x02BC	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,821 :: 		
0x02BE	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,822 :: 		
0x02C0	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,823 :: 		
0x02C2	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,824 :: 		
0x02C4	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,825 :: 		
0x02C6	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,826 :: 		
0x02C8	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,827 :: 		
0x02CA	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,828 :: 		
0x02CC	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,829 :: 		
0x02CE	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,830 :: 		
0x02D0	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,831 :: 		
0x02D2	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,832 :: 		
0x02D4	0xD00D      	BRA         SOK22L24
;__Lib_Math.c,834 :: 		
SADD22L24:
;__Lib_Math.c,835 :: 		
0x02D6	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,836 :: 		
0x02D8	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,837 :: 		
0x02DA	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,838 :: 		
0x02DC	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,839 :: 		
0x02DE	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,840 :: 		
0x02E0	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,841 :: 		
0x02E2	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,842 :: 		
0x02E4	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,843 :: 		
0x02E6	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,844 :: 		
0x02E8	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,845 :: 		
0x02EA	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,846 :: 		
0x02EC	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,847 :: 		
0x02EE	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,849 :: 		
SOK22L24:
;__Lib_Math.c,850 :: 		
0x02F0	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,852 :: 		
0x02F2	0x0E07      	MOVLW       7
;__Lib_Math.c,853 :: 		
0x02F4	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,855 :: 		
LOOPS3232D:
;__Lib_Math.c,856 :: 		
0x02F6	0x3400      	RLCF        R0, 0, 0
;__Lib_Math.c,857 :: 		
0x02F8	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,858 :: 		
0x02FA	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,859 :: 		
0x02FC	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,860 :: 		
0x02FE	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,861 :: 		
0x0300	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,862 :: 		
0x0302	0xA000      	BTFSS       R0, 0, 0
;__Lib_Math.c,863 :: 		
0x0304	0xD00E      	BRA         SADD22LD
;__Lib_Math.c,865 :: 		
0x0306	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,866 :: 		
0x0308	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,867 :: 		
0x030A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,868 :: 		
0x030C	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,869 :: 		
0x030E	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,870 :: 		
0x0310	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,871 :: 		
0x0312	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,872 :: 		
0x0314	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,873 :: 		
0x0316	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,874 :: 		
0x0318	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,875 :: 		
0x031A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,876 :: 		
0x031C	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,877 :: 		
0x031E	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,878 :: 		
0x0320	0xD00D      	BRA         SOK22LD
;__Lib_Math.c,880 :: 		
SADD22LD:
;__Lib_Math.c,881 :: 		
0x0322	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,882 :: 		
0x0324	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,883 :: 		
0x0326	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,884 :: 		
0x0328	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,885 :: 		
0x032A	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,886 :: 		
0x032C	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,887 :: 		
0x032E	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,888 :: 		
0x0330	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,889 :: 		
0x0332	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,890 :: 		
0x0334	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,891 :: 		
0x0336	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,893 :: 		
0x0338	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,894 :: 		
0x033A	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,896 :: 		
SOK22LD:
;__Lib_Math.c,897 :: 		
0x033C	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,899 :: 		
0x033E	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,900 :: 		
0x0340	0xD7DA      	BRA         LOOPS3232D
;__Lib_Math.c,902 :: 		
0x0342	0xB000      	BTFSC       R0, 0, 0
;__Lib_Math.c,903 :: 		
0x0344	0xD00E      	BRA         SOK22L
;__Lib_Math.c,904 :: 		
0x0346	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,905 :: 		
0x0348	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,906 :: 		
0x034A	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,907 :: 		
0x034C	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,908 :: 		
0x034E	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,909 :: 		
0x0350	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,910 :: 		
0x0352	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,911 :: 		
0x0354	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,912 :: 		
0x0356	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,913 :: 		
0x0358	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,914 :: 		
0x035A	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,915 :: 		
0x035C	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,916 :: 		
0x035E	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,917 :: 		
0x0360	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,918 :: 		
SOK22L:
;__Lib_Math.c,920 :: 		
L_end_SDIV3232L:
0x0362	0x0012      	RETURN      0
; end of _SDIV3232L
_eeprom_i2c_read:
;eeprom_i2c_soft.h,52 :: 		void eeprom_i2c_read(unsigned int address, char *datos, char size){
;eeprom_i2c_soft.h,55 :: 		I2C_soft_start();                       // Issue start signal
0x0364	0xDEB3      	RCALL       _I2C_soft_start
;eeprom_i2c_soft.h,57 :: 		I2C_soft_write(EEPROM_ADDRESS_24LC256); //Escritura e multiples bytes
0x0366	0x0EA0      	MOVLW       160
0x0368	0x0105      	MOVLB       5
0x036A	0x6FA6      	MOVWF       FARG_I2C_soft_write_dato, 1
0x036C	0xDE81      	RCALL       _I2C_soft_write
;eeprom_i2c_soft.h,58 :: 		I2C_soft_write(getByte(address,1));     // Start from address hihg
0x036E	0xF5A6C59F  	MOVFF       FARG_eeprom_i2c_read_address+1, FARG_I2C_soft_write_dato
0x0372	0xDE7E      	RCALL       _I2C_soft_write
;eeprom_i2c_soft.h,59 :: 		I2C_soft_write(getByte(address,0));     // Start from address low
0x0374	0xF5A6C59E  	MOVFF       FARG_eeprom_i2c_read_address, FARG_I2C_soft_write_dato
0x0378	0xDE7B      	RCALL       _I2C_soft_write
;eeprom_i2c_soft.h,60 :: 		I2C_soft_start();                       // Issue repeated start signal
0x037A	0xDEA8      	RCALL       _I2C_soft_start
;eeprom_i2c_soft.h,61 :: 		I2C_soft_write(EEPROM_ADDRESS_24LC256|0x01);    // Address EEPROM_ADDRESS_24LC256 for reading R/W=1
0x037C	0x0EA1      	MOVLW       161
0x037E	0x0105      	MOVLB       5
0x0380	0x6FA6      	MOVWF       FARG_I2C_soft_write_dato, 1
0x0382	0xDE76      	RCALL       _I2C_soft_write
;eeprom_i2c_soft.h,63 :: 		for(cont = 0; cont < size-1; cont++)
0x0384	0x0105      	MOVLB       5
0x0386	0x6BA3      	CLRF        eeprom_i2c_read_cont_L0, 1
L_eeprom_i2c_read467:
0x0388	0x05A2      	DECF        FARG_eeprom_i2c_read_size, 0, 1
0x038A	0x6E01      	MOVWF       R1 
0x038C	0x6A02      	CLRF        R2 
0x038E	0x0E00      	MOVLW       0
0x0390	0x5A02      	SUBWFB      R2, 1 
0x0392	0x0E80      	MOVLW       128
0x0394	0x6E00      	MOVWF       R0 
0x0396	0x0E80      	MOVLW       128
0x0398	0x1802      	XORWF       R2, 0 
0x039A	0x5C00      	SUBWF       R0, 0 
0x039C	0xE102      	BNZ         L__eeprom_i2c_read1249
0x039E	0x5001      	MOVF        R1, 0 
0x03A0	0x5DA3      	SUBWF       eeprom_i2c_read_cont_L0, 0, 1
L__eeprom_i2c_read1249:
0x03A2	0xE211      	BC          L_eeprom_i2c_read468
;eeprom_i2c_soft.h,64 :: 		datos[cont] = I2C_soft_read(ACK);
0x03A4	0x51A3      	MOVF        eeprom_i2c_read_cont_L0, 0, 1
0x03A6	0x25A0      	ADDWF       FARG_eeprom_i2c_read_datos, 0, 1
0x03A8	0x6FA4      	MOVWF       FLOC__eeprom_i2c_read, 1
0x03AA	0x0E00      	MOVLW       0
0x03AC	0x21A1      	ADDWFC      FARG_eeprom_i2c_read_datos+1, 0, 1
0x03AE	0x6FA5      	MOVWF       FLOC__eeprom_i2c_read+1, 1
0x03B0	0x0E01      	MOVLW       1
0x03B2	0x6FA6      	MOVWF       FARG_I2C_soft_read_ACK, 1
0x03B4	0xDE33      	RCALL       _I2C_soft_read
0x03B6	0xFFE1C5A4  	MOVFF       FLOC__eeprom_i2c_read, FSR1L
0x03BA	0xFFE2C5A5  	MOVFF       FLOC__eeprom_i2c_read+1, FSR1H
0x03BE	0xFFE6C000  	MOVFF       R0, POSTINC1
;eeprom_i2c_soft.h,63 :: 		for(cont = 0; cont < size-1; cont++)
0x03C2	0x2BA3      	INCF        eeprom_i2c_read_cont_L0, 1, 1
;eeprom_i2c_soft.h,64 :: 		datos[cont] = I2C_soft_read(ACK);
0x03C4	0xD7E1      	BRA         L_eeprom_i2c_read467
L_eeprom_i2c_read468:
;eeprom_i2c_soft.h,65 :: 		datos[cont] = I2C_soft_read(NO_ACK);
0x03C6	0x51A3      	MOVF        eeprom_i2c_read_cont_L0, 0, 1
0x03C8	0x25A0      	ADDWF       FARG_eeprom_i2c_read_datos, 0, 1
0x03CA	0x6FA4      	MOVWF       FLOC__eeprom_i2c_read, 1
0x03CC	0x0E00      	MOVLW       0
0x03CE	0x21A1      	ADDWFC      FARG_eeprom_i2c_read_datos+1, 0, 1
0x03D0	0x6FA5      	MOVWF       FLOC__eeprom_i2c_read+1, 1
0x03D2	0x6BA6      	CLRF        FARG_I2C_soft_read_ACK, 1
0x03D4	0xDE23      	RCALL       _I2C_soft_read
0x03D6	0xFFE1C5A4  	MOVFF       FLOC__eeprom_i2c_read, FSR1L
0x03DA	0xFFE2C5A5  	MOVFF       FLOC__eeprom_i2c_read+1, FSR1H
0x03DE	0xFFE6C000  	MOVFF       R0, POSTINC1
;eeprom_i2c_soft.h,66 :: 		I2C_soft_stop();                                // Issue stop signal
0x03E2	0xDE85      	RCALL       _I2C_soft_stop
;eeprom_i2c_soft.h,67 :: 		}
L_end_eeprom_i2c_read:
0x03E4	0x0012      	RETURN      0
; end of _eeprom_i2c_read
_strncmp:
;__Lib_CString.c,219 :: 		
;__Lib_CString.c,221 :: 		
L_strncmp58:
0x03E6	0xF000C5A2  	MOVFF       FARG_strncmp_len, R0
0x03EA	0x0105      	MOVLB       5
0x03EC	0x07A2      	DECF        FARG_strncmp_len, 1, 1
0x03EE	0x5200      	MOVF        R0, 1 
0x03F0	0xE028      	BZ          L_strncmp59
;__Lib_CString.c,222 :: 		
0x03F2	0xFFE9C59E  	MOVFF       FARG_strncmp_s1, FSR0L
0x03F6	0xFFEAC59F  	MOVFF       FARG_strncmp_s1+1, FSR0H
0x03FA	0x50EE      	MOVF        POSTINC0, 0 
0x03FC	0x0A00      	XORLW       0
0x03FE	0xE00C      	BZ          L__strncmp86
0x0400	0xFFE9C59E  	MOVFF       FARG_strncmp_s1, FSR0L
0x0404	0xFFEAC59F  	MOVFF       FARG_strncmp_s1+1, FSR0H
0x0408	0xFFD9C5A0  	MOVFF       FARG_strncmp_s2, FSR2L
0x040C	0xFFDAC5A1  	MOVFF       FARG_strncmp_s2+1, FSR2H
0x0410	0x50EE      	MOVF        POSTINC0, 0 
0x0412	0x18DE      	XORWF       POSTINC2, 0 
0x0414	0xE101      	BNZ         L__strncmp86
0x0416	0xD00F      	BRA         L_strncmp62
L__strncmp86:
;__Lib_CString.c,223 :: 		
0x0418	0xFFE9C59E  	MOVFF       FARG_strncmp_s1, FSR0L
0x041C	0xFFEAC59F  	MOVFF       FARG_strncmp_s1+1, FSR0H
0x0420	0xFFD9C5A0  	MOVFF       FARG_strncmp_s2, FSR2L
0x0424	0xFFDAC5A1  	MOVFF       FARG_strncmp_s2+1, FSR2H
0x0428	0x50DE      	MOVF        POSTINC2, 0 
0x042A	0x5CEE      	SUBWF       POSTINC0, 0 
0x042C	0x6E00      	MOVWF       R0 
0x042E	0x6A01      	CLRF        R1 
0x0430	0x0E00      	MOVLW       0
0x0432	0x5A01      	SUBWFB      R1, 1 
0x0434	0xD008      	BRA         L_end_strncmp
L_strncmp62:
0x0436	0x0105      	MOVLB       5
;__Lib_CString.c,224 :: 		
0x0438	0x4B9E      	INFSNZ      FARG_strncmp_s1, 1, 1
0x043A	0x2B9F      	INCF        FARG_strncmp_s1+1, 1, 1
;__Lib_CString.c,225 :: 		
0x043C	0x4BA0      	INFSNZ      FARG_strncmp_s2, 1, 1
0x043E	0x2BA1      	INCF        FARG_strncmp_s2+1, 1, 1
;__Lib_CString.c,226 :: 		
0x0440	0xD7D2      	BRA         L_strncmp58
L_strncmp59:
;__Lib_CString.c,227 :: 		
0x0442	0x6A00      	CLRF        R0 
0x0444	0x6A01      	CLRF        R1 
;__Lib_CString.c,228 :: 		
L_end_strncmp:
0x0446	0x0012      	RETURN      0
; end of _strncmp
_COMFREM:
;__Lib_Math.c,922 :: 		
;__Lib_Math.c,927 :: 		
0x0448	0x1E0B      	COMF        R11, 1, 0
;__Lib_Math.c,928 :: 		
0x044A	0x1E0A      	COMF        R10, 1, 0
;__Lib_Math.c,929 :: 		
0x044C	0x1E09      	COMF        R9, 1, 0
;__Lib_Math.c,930 :: 		
0x044E	0x1E08      	COMF        R8, 1, 0
;__Lib_Math.c,931 :: 		
0x0450	0x2A08      	INCF        R8, 1, 0
;__Lib_Math.c,932 :: 		
0x0452	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,933 :: 		
0x0454	0x2A09      	INCF        R9, 1, 0
;__Lib_Math.c,934 :: 		
0x0456	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,935 :: 		
0x0458	0x2A0A      	INCF        R10, 1, 0
;__Lib_Math.c,936 :: 		
0x045A	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,937 :: 		
0x045C	0x2A0B      	INCF        R11, 1, 0
;__Lib_Math.c,939 :: 		
L_end_COMFREM:
0x045E	0x0012      	RETURN      0
; end of _COMFREM
_Delay_5500us:
;__Lib_Delays.c,31 :: 		void Delay_5500us() {
;__Lib_Delays.c,32 :: 		Delay_us(5500);
0x0460	0x0E12      	MOVLW       18
0x0462	0x6E0C      	MOVWF       R12, 0
0x0464	0x0EDA      	MOVLW       218
0x0466	0x6E0D      	MOVWF       R13, 0
L_Delay_5500us5:
0x0468	0x2E0D      	DECFSZ      R13, 1, 0
0x046A	0xD7FE      	BRA         L_Delay_5500us5
0x046C	0x2E0C      	DECFSZ      R12, 1, 0
0x046E	0xD7FC      	BRA         L_Delay_5500us5
0x0470	0x0000      	NOP
;__Lib_Delays.c,33 :: 		}
L_end_Delay_5500us:
0x0472	0x0012      	RETURN      0
; end of _Delay_5500us
_mysql_exist:
;table_eeprom.h,81 :: 		bool mysql_exist(char *name){
;table_eeprom.h,82 :: 		myTable.address = 0x0003;  //Direccion 3 para lectura
0x0474	0x0E03      	MOVLW       3
0x0476	0x0103      	MOVLB       3
0x0478	0x6FB6      	MOVWF       Validadora_myTable+43, 1
0x047A	0x0E00      	MOVLW       0
0x047C	0x6FB7      	MOVWF       Validadora_myTable+44, 1
;table_eeprom.h,83 :: 		myTable.nameColAct[0] = 0; //Resetear mensaje
0x047E	0x6BA2      	CLRF        Validadora_myTable+23, 1
;table_eeprom.h,85 :: 		for(myTable.cont = 0; myTable.cont < myTable.numTables; myTable.cont++){
0x0480	0x6BBA      	CLRF        Validadora_myTable+47, 1
L_mysql_exist470:
0x0482	0x518B      	MOVF        Validadora_myTable, 0, 1
0x0484	0x5DBA      	SUBWF       Validadora_myTable+47, 0, 1
0x0486	0xE235      	BC          L_mysql_exist471
;table_eeprom.h,87 :: 		eeprom_i2c_read(myTable.address, myTable.nameAct, TABLE_MAX_SIZE_NAME+1);
0x0488	0xF59EC3B6  	MOVFF       Validadora_myTable+43, FARG_eeprom_i2c_read_address
0x048C	0xF59FC3B7  	MOVFF       Validadora_myTable+44, FARG_eeprom_i2c_read_address+1
0x0490	0x0E92      	MOVLW       Validadora_myTable+7
0x0492	0x0105      	MOVLB       5
0x0494	0x6FA0      	MOVWF       FARG_eeprom_i2c_read_datos, 1
0x0496	0x0E03      	MOVLW       hi_addr(Validadora_myTable+7)
0x0498	0x6FA1      	MOVWF       FARG_eeprom_i2c_read_datos+1, 1
0x049A	0x0E10      	MOVLW       16
0x049C	0x6FA2      	MOVWF       FARG_eeprom_i2c_read_size, 1
0x049E	0xDF62      	RCALL       _eeprom_i2c_read
;table_eeprom.h,89 :: 		if(!strncmp(name, myTable.nameAct, TABLE_MAX_SIZE_NAME+1))
0x04A0	0xF59EC59C  	MOVFF       FARG_mysql_exist_name, FARG_strncmp_s1
0x04A4	0xF59FC59D  	MOVFF       FARG_mysql_exist_name+1, FARG_strncmp_s1+1
0x04A8	0x0E92      	MOVLW       Validadora_myTable+7
0x04AA	0x6FA0      	MOVWF       FARG_strncmp_s2, 1
0x04AC	0x0E03      	MOVLW       hi_addr(Validadora_myTable+7)
0x04AE	0x6FA1      	MOVWF       FARG_strncmp_s2+1, 1
0x04B0	0x0E10      	MOVLW       16
0x04B2	0x6FA2      	MOVWF       FARG_strncmp_len, 1
0x04B4	0xDF98      	RCALL       _strncmp
0x04B6	0x5000      	MOVF        R0, 0 
0x04B8	0x1001      	IORWF       R1, 0 
0x04BA	0xE101      	BNZ         L_mysql_exist473
;table_eeprom.h,90 :: 		break;
0x04BC	0xD01A      	BRA         L_mysql_exist471
L_mysql_exist473:
;table_eeprom.h,92 :: 		eeprom_i2c_read(myTable.address+TABLE_MAX_SIZE_NAME+1, (char*)&myTable.address, 2);
0x04BE	0x0E0F      	MOVLW       15
0x04C0	0x0103      	MOVLB       3
0x04C2	0x25B6      	ADDWF       Validadora_myTable+43, 0, 1
0x04C4	0x0105      	MOVLB       5
0x04C6	0x6F9E      	MOVWF       FARG_eeprom_i2c_read_address, 1
0x04C8	0x0E00      	MOVLW       0
0x04CA	0x0103      	MOVLB       3
0x04CC	0x21B7      	ADDWFC      Validadora_myTable+44, 0, 1
0x04CE	0x0105      	MOVLB       5
0x04D0	0x6F9F      	MOVWF       FARG_eeprom_i2c_read_address+1, 1
0x04D2	0x4B9E      	INFSNZ      FARG_eeprom_i2c_read_address, 1, 1
0x04D4	0x2B9F      	INCF        FARG_eeprom_i2c_read_address+1, 1, 1
0x04D6	0x0EB6      	MOVLW       Validadora_myTable+43
0x04D8	0x6FA0      	MOVWF       FARG_eeprom_i2c_read_datos, 1
0x04DA	0x0E03      	MOVLW       hi_addr(Validadora_myTable+43)
0x04DC	0x6FA1      	MOVWF       FARG_eeprom_i2c_read_datos+1, 1
0x04DE	0x0E02      	MOVLW       2
0x04E0	0x6FA2      	MOVWF       FARG_eeprom_i2c_read_size, 1
0x04E2	0xDF40      	RCALL       _eeprom_i2c_read
;table_eeprom.h,85 :: 		for(myTable.cont = 0; myTable.cont < myTable.numTables; myTable.cont++){
0x04E4	0x0103      	MOVLB       3
0x04E6	0x51BA      	MOVF        Validadora_myTable+47, 0, 1
0x04E8	0x0F01      	ADDLW       1
0x04EA	0x6E00      	MOVWF       R0 
0x04EC	0xF3BAC000  	MOVFF       R0, Validadora_myTable+47
;table_eeprom.h,93 :: 		}
0x04F0	0xD7C8      	BRA         L_mysql_exist470
L_mysql_exist471:
0x04F2	0x0103      	MOVLB       3
;table_eeprom.h,95 :: 		if(myTable.cont < myTable.numTables){
0x04F4	0x518B      	MOVF        Validadora_myTable, 0, 1
0x04F6	0x5DBA      	SUBWF       Validadora_myTable+47, 0, 1
0x04F8	0xE23F      	BC          L_mysql_exist474
;table_eeprom.h,96 :: 		myTable.addressAct = myTable.address;   //Copiar direccion casa de la tabla
0x04FA	0xF3B8C3B6  	MOVFF       Validadora_myTable+43, Validadora_myTable+45
0x04FE	0xF3B9C3B7  	MOVFF       Validadora_myTable+44, Validadora_myTable+46
;table_eeprom.h,98 :: 		myTable.addressAct += TABLE_MAX_SIZE_NAME+3;
0x0502	0x0E12      	MOVLW       18
0x0504	0x25B6      	ADDWF       Validadora_myTable+43, 0, 1
0x0506	0x6E00      	MOVWF       R0 
0x0508	0x0E00      	MOVLW       0
0x050A	0x21B7      	ADDWFC      Validadora_myTable+44, 0, 1
0x050C	0x6E01      	MOVWF       R1 
0x050E	0xF3B8C000  	MOVFF       R0, Validadora_myTable+45
0x0512	0xF3B9C001  	MOVFF       R1, Validadora_myTable+46
;table_eeprom.h,99 :: 		eeprom_i2c_read(myTable.addressAct,(char*)&myTable.rowAct, 2);
0x0516	0xF59EC000  	MOVFF       R0, FARG_eeprom_i2c_read_address
0x051A	0xF59FC001  	MOVFF       R1, FARG_eeprom_i2c_read_address+1
0x051E	0x0E8F      	MOVLW       Validadora_myTable+4
0x0520	0x0105      	MOVLB       5
0x0522	0x6FA0      	MOVWF       FARG_eeprom_i2c_read_datos, 1
0x0524	0x0E03      	MOVLW       hi_addr(Validadora_myTable+4)
0x0526	0x6FA1      	MOVWF       FARG_eeprom_i2c_read_datos+1, 1
0x0528	0x0E02      	MOVLW       2
0x052A	0x6FA2      	MOVWF       FARG_eeprom_i2c_read_size, 1
0x052C	0xDF1B      	RCALL       _eeprom_i2c_read
;table_eeprom.h,100 :: 		eeprom_i2c_read(myTable.addressAct+2,(char*)&myTable.row, 2);
0x052E	0x0E02      	MOVLW       2
0x0530	0x0103      	MOVLB       3
0x0532	0x25B8      	ADDWF       Validadora_myTable+45, 0, 1
0x0534	0x0105      	MOVLB       5
0x0536	0x6F9E      	MOVWF       FARG_eeprom_i2c_read_address, 1
0x0538	0x0E00      	MOVLW       0
0x053A	0x0103      	MOVLB       3
0x053C	0x21B9      	ADDWFC      Validadora_myTable+46, 0, 1
0x053E	0x0105      	MOVLB       5
0x0540	0x6F9F      	MOVWF       FARG_eeprom_i2c_read_address+1, 1
0x0542	0x0E8D      	MOVLW       Validadora_myTable+2
0x0544	0x6FA0      	MOVWF       FARG_eeprom_i2c_read_datos, 1
0x0546	0x0E03      	MOVLW       hi_addr(Validadora_myTable+2)
0x0548	0x6FA1      	MOVWF       FARG_eeprom_i2c_read_datos+1, 1
0x054A	0x0E02      	MOVLW       2
0x054C	0x6FA2      	MOVWF       FARG_eeprom_i2c_read_size, 1
0x054E	0xDF0A      	RCALL       _eeprom_i2c_read
;table_eeprom.h,101 :: 		eeprom_i2c_read(myTable.addressAct+4,&myTable.col, 1); //Filas totales de busqueda
0x0550	0x0E04      	MOVLW       4
0x0552	0x0103      	MOVLB       3
0x0554	0x25B8      	ADDWF       Validadora_myTable+45, 0, 1
0x0556	0x0105      	MOVLB       5
0x0558	0x6F9E      	MOVWF       FARG_eeprom_i2c_read_address, 1
0x055A	0x0E00      	MOVLW       0
0x055C	0x0103      	MOVLB       3
0x055E	0x21B9      	ADDWFC      Validadora_myTable+46, 0, 1
0x0560	0x0105      	MOVLB       5
0x0562	0x6F9F      	MOVWF       FARG_eeprom_i2c_read_address+1, 1
0x0564	0x0E8C      	MOVLW       Validadora_myTable+1
0x0566	0x6FA0      	MOVWF       FARG_eeprom_i2c_read_datos, 1
0x0568	0x0E03      	MOVLW       hi_addr(Validadora_myTable+1)
0x056A	0x6FA1      	MOVWF       FARG_eeprom_i2c_read_datos+1, 1
0x056C	0x0E01      	MOVLW       1
0x056E	0x6FA2      	MOVWF       FARG_eeprom_i2c_read_size, 1
0x0570	0xDEF9      	RCALL       _eeprom_i2c_read
;table_eeprom.h,102 :: 		return true;
0x0572	0x0E01      	MOVLW       1
0x0574	0x6E00      	MOVWF       R0 
0x0576	0xD003      	BRA         L_end_mysql_exist
;table_eeprom.h,103 :: 		}else{
L_mysql_exist474:
;table_eeprom.h,104 :: 		myTable.nameAct[0] = 0;
0x0578	0x0103      	MOVLB       3
0x057A	0x6B92      	CLRF        Validadora_myTable+7, 1
;table_eeprom.h,105 :: 		return false;
0x057C	0x6A00      	CLRF        R0 
;table_eeprom.h,107 :: 		}
L_end_mysql_exist:
0x057E	0x0012      	RETURN      0
; end of _mysql_exist
_Mul_16X16_U:
;__Lib_Math.c,440 :: 		
;__Lib_Math.c,447 :: 		
0x0580	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,448 :: 		
0x0582	0x6A0A      	CLRF        R10, 0
;__Lib_Math.c,449 :: 		
0x0584	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,450 :: 		
0x0586	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,451 :: 		
0x0588	0x0204      	MULWF       R4, 0
;__Lib_Math.c,453 :: 		
0x058A	0xF009CFF4  	MOVFF       PRODH, R9
;__Lib_Math.c,454 :: 		
0x058E	0xF008CFF3  	MOVFF       PRODL, R8
;__Lib_Math.c,455 :: 		
0x0592	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,456 :: 		
0x0594	0x0205      	MULWF       R5, 0
;__Lib_Math.c,458 :: 		
0x0596	0xF00BCFF4  	MOVFF       PRODH, R11
;__Lib_Math.c,459 :: 		
0x059A	0xF00ACFF3  	MOVFF       PRODL, R10
;__Lib_Math.c,460 :: 		
0x059E	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,461 :: 		
0x05A0	0x0205      	MULWF       R5, 0
;__Lib_Math.c,463 :: 		
0x05A2	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,464 :: 		
0x05A4	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,465 :: 		
0x05A6	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,466 :: 		
0x05A8	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,467 :: 		
0x05AA	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,468 :: 		
0x05AC	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,469 :: 		
0x05AE	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,470 :: 		
0x05B0	0x0204      	MULWF       R4, 0
;__Lib_Math.c,472 :: 		
0x05B2	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,473 :: 		
0x05B4	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,474 :: 		
0x05B6	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,475 :: 		
0x05B8	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,476 :: 		
0x05BA	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,477 :: 		
0x05BC	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,479 :: 		
0x05BE	0xF000C008  	MOVFF       R8, R0
;__Lib_Math.c,480 :: 		
0x05C2	0xF001C009  	MOVFF       R9, R1
;__Lib_Math.c,481 :: 		
0x05C6	0xF002C00A  	MOVFF       R10, R2
;__Lib_Math.c,482 :: 		
0x05CA	0xF003C00B  	MOVFF       R11, R3
;__Lib_Math.c,485 :: 		
L_end_Mul_16X16_U:
0x05CE	0x0012      	RETURN      0
; end of _Mul_16X16_U
_Delay_1us:
;__Lib_Delays.c,7 :: 		void Delay_1us() {
;__Lib_Delays.c,8 :: 		Delay_us(1);
0x05D0	0x0000      	NOP
0x05D2	0x0000      	NOP
;__Lib_Delays.c,9 :: 		}
L_end_Delay_1us:
0x05D4	0x0012      	RETURN      0
; end of _Delay_1us
_Div_32x32_S:
;__Lib_Math.c,942 :: 		
;__Lib_Math.c,955 :: 		
0x05D6	0x5004      	MOVF        R4, 0 
0x05D8	0x0A00      	XORLW       0
0x05DA	0xE112      	BNZ         L_Div_32x32_S6
;__Lib_Math.c,956 :: 		
0x05DC	0x5005      	MOVF        R5, 0 
0x05DE	0x0A00      	XORLW       0
0x05E0	0xE10F      	BNZ         L_Div_32x32_S7
;__Lib_Math.c,957 :: 		
0x05E2	0x5006      	MOVF        R6, 0 
0x05E4	0x0A00      	XORLW       0
0x05E6	0xE10C      	BNZ         L_Div_32x32_S8
;__Lib_Math.c,958 :: 		
0x05E8	0x5007      	MOVF        R7, 0 
0x05EA	0x0A00      	XORLW       0
0x05EC	0xE109      	BNZ         L_Div_32x32_S9
;__Lib_Math.c,959 :: 		
0x05EE	0x0EFF      	MOVLW       255
0x05F0	0x6E00      	MOVWF       R0 
;__Lib_Math.c,960 :: 		
0x05F2	0x0EFF      	MOVLW       255
0x05F4	0x6E01      	MOVWF       R1 
;__Lib_Math.c,961 :: 		
0x05F6	0x0EFF      	MOVLW       255
0x05F8	0x6E02      	MOVWF       R2 
;__Lib_Math.c,962 :: 		
0x05FA	0x0E7F      	MOVLW       127
0x05FC	0x6E03      	MOVWF       R3 
;__Lib_Math.c,963 :: 		
0x05FE	0xD097      	BRA         L_end_Div_32x32_S
;__Lib_Math.c,964 :: 		
L_Div_32x32_S9:
L_Div_32x32_S8:
L_Div_32x32_S7:
L_Div_32x32_S6:
;__Lib_Math.c,968 :: 		
0x0600	0x6A0C      	CLRF        R12, 0
;__Lib_Math.c,969 :: 		
0x0602	0xBE07      	BTFSC       R7, 7, 0
;__Lib_Math.c,970 :: 		
0x0604	0x2A0C      	INCF        R12, 1, 0
;__Lib_Math.c,972 :: 		
0x0606	0x6A0D      	CLRF        R13, 0
;__Lib_Math.c,973 :: 		
0x0608	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,974 :: 		
0x060A	0x6A0A      	CLRF        R10, 0
;__Lib_Math.c,975 :: 		
0x060C	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,976 :: 		
0x060E	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,977 :: 		
0x0610	0x5003      	MOVF        R3, 0, 0
;__Lib_Math.c,978 :: 		
0x0612	0x1002      	IORWF       R2, 0, 0
;__Lib_Math.c,979 :: 		
0x0614	0x1001      	IORWF       R1, 0, 0
;__Lib_Math.c,980 :: 		
0x0616	0x1000      	IORWF       R0, 0, 0
;__Lib_Math.c,981 :: 		
0x0618	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,982 :: 		
0x061A	0xD084      	BRA         END_ALL
;__Lib_Math.c,986 :: 		
0x061C	0x5003      	MOVF        R3, 0, 0
;__Lib_Math.c,987 :: 		
0x061E	0x1807      	XORWF       R7, 0, 0
;__Lib_Math.c,988 :: 		
0x0620	0x6E0E      	MOVWF       R14, 0
;__Lib_Math.c,989 :: 		
0x0622	0xBE0E      	BTFSC       R14, 7, 0
;__Lib_Math.c,990 :: 		
0x0624	0x1E0D      	COMF        R13, 1, 0
;__Lib_Math.c,993 :: 		
0x0626	0xAE07      	BTFSS       R7, 7, 0
;__Lib_Math.c,994 :: 		
0x0628	0xD00B      	BRA         CA3232S
;__Lib_Math.c,996 :: 		
0x062A	0x1E04      	COMF        R4, 1, 0
;__Lib_Math.c,997 :: 		
0x062C	0x1E05      	COMF        R5, 1, 0
;__Lib_Math.c,998 :: 		
0x062E	0x1E06      	COMF        R6, 1, 0
;__Lib_Math.c,999 :: 		
0x0630	0x1E07      	COMF        R7, 1, 0
;__Lib_Math.c,1000 :: 		
0x0632	0x2A04      	INCF        R4, 1, 0
;__Lib_Math.c,1001 :: 		
0x0634	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1002 :: 		
0x0636	0x2A05      	INCF        R5, 1, 0
;__Lib_Math.c,1003 :: 		
0x0638	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1004 :: 		
0x063A	0x2A06      	INCF        R6, 1, 0
;__Lib_Math.c,1005 :: 		
0x063C	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1006 :: 		
0x063E	0x2A07      	INCF        R7, 1, 0
;__Lib_Math.c,1008 :: 		
CA3232S:
;__Lib_Math.c,1009 :: 		
0x0640	0xAE03      	BTFSS       R3, 7, 0
;__Lib_Math.c,1010 :: 		
0x0642	0xD00B      	BRA         C3232SX
;__Lib_Math.c,1012 :: 		
0x0644	0x1E00      	COMF        R0, 1, 0
;__Lib_Math.c,1013 :: 		
0x0646	0x1E01      	COMF        R1, 1, 0
;__Lib_Math.c,1014 :: 		
0x0648	0x1E02      	COMF        R2, 1, 0
;__Lib_Math.c,1015 :: 		
0x064A	0x1E03      	COMF        R3, 1, 0
;__Lib_Math.c,1016 :: 		
0x064C	0x2A00      	INCF        R0, 1, 0
;__Lib_Math.c,1017 :: 		
0x064E	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1018 :: 		
0x0650	0x2A01      	INCF        R1, 1, 0
;__Lib_Math.c,1019 :: 		
0x0652	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1020 :: 		
0x0654	0x2A02      	INCF        R2, 1, 0
;__Lib_Math.c,1021 :: 		
0x0656	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1022 :: 		
0x0658	0x2A03      	INCF        R3, 1, 0
;__Lib_Math.c,1024 :: 		
C3232SX:
;__Lib_Math.c,1025 :: 		
0x065A	0x5003      	MOVF        R3, 0, 0
;__Lib_Math.c,1026 :: 		
0x065C	0x1007      	IORWF       R7, 0, 0
;__Lib_Math.c,1027 :: 		
0x065E	0x6E0E      	MOVWF       R14, 0
;__Lib_Math.c,1028 :: 		
0x0660	0xBE0E      	BTFSC       R14, 7, 0
;__Lib_Math.c,1029 :: 		
0x0662	0xD01C      	BRA         C3232SX1
;__Lib_Math.c,1030 :: 		
C3232S:
;__Lib_Math.c,1034 :: 		
0x0664	0xDD53      	RCALL       _SDIV3232L
;__Lib_Math.c,1038 :: 		
0x0666	0xBE0C      	BTFSC       R12, 7, 0
;__Lib_Math.c,1039 :: 		
0x0668	0xD036      	BRA         C3232SX4
;__Lib_Math.c,1041 :: 		
C3232SOK:
;__Lib_Math.c,1042 :: 		
0x066A	0xAE0D      	BTFSS       R13, 7, 0
;__Lib_Math.c,1043 :: 		
0x066C	0xD05B      	BRA         END_ALL
;__Lib_Math.c,1045 :: 		
0x066E	0x1E00      	COMF        R0, 1, 0
;__Lib_Math.c,1046 :: 		
0x0670	0x1E01      	COMF        R1, 1, 0
;__Lib_Math.c,1047 :: 		
0x0672	0x1E02      	COMF        R2, 1, 0
;__Lib_Math.c,1048 :: 		
0x0674	0x1E03      	COMF        R3, 1, 0
;__Lib_Math.c,1049 :: 		
0x0676	0x2A00      	INCF        R0, 1, 0
;__Lib_Math.c,1050 :: 		
0x0678	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1051 :: 		
0x067A	0x2A01      	INCF        R1, 1, 0
;__Lib_Math.c,1052 :: 		
0x067C	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1053 :: 		
0x067E	0x2A02      	INCF        R2, 1, 0
;__Lib_Math.c,1054 :: 		
0x0680	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1055 :: 		
0x0682	0x2A03      	INCF        R3, 1, 0
;__Lib_Math.c,1057 :: 		
0x0684	0x1E08      	COMF        R8, 1, 0
;__Lib_Math.c,1058 :: 		
0x0686	0x1E09      	COMF        R9, 1, 0
;__Lib_Math.c,1059 :: 		
0x0688	0x1E0A      	COMF        R10, 1, 0
;__Lib_Math.c,1060 :: 		
0x068A	0x1E0B      	COMF        R11, 1, 0
;__Lib_Math.c,1061 :: 		
0x068C	0x2A08      	INCF        R8, 1, 0
;__Lib_Math.c,1062 :: 		
0x068E	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1063 :: 		
0x0690	0x2A09      	INCF        R9, 1, 0
;__Lib_Math.c,1064 :: 		
0x0692	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1065 :: 		
0x0694	0x2A0A      	INCF        R10, 1, 0
;__Lib_Math.c,1066 :: 		
0x0696	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1067 :: 		
0x0698	0x2A0B      	INCF        R11, 1, 0
;__Lib_Math.c,1068 :: 		
0x069A	0xD044      	BRA         END_ALL
;__Lib_Math.c,1069 :: 		
C3232SX1:
;__Lib_Math.c,1072 :: 		
0x069C	0xAE07      	BTFSS       R7, 7, 0
;__Lib_Math.c,1073 :: 		
0x069E	0xD015      	BRA         C3232SX3
;__Lib_Math.c,1074 :: 		
0x06A0	0xBE03      	BTFSC       R3, 7, 0
;__Lib_Math.c,1075 :: 		
0x06A2	0xD00D      	BRA         C3232SX2
;__Lib_Math.c,1076 :: 		
0x06A4	0x5003      	MOVF        R3, 0, 0
;__Lib_Math.c,1077 :: 		
0x06A6	0x6E0B      	MOVWF       R11, 0
;__Lib_Math.c,1078 :: 		
0x06A8	0x5002      	MOVF        R2, 0, 0
;__Lib_Math.c,1079 :: 		
0x06AA	0x6E0A      	MOVWF       R10, 0
;__Lib_Math.c,1080 :: 		
0x06AC	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,1081 :: 		
0x06AE	0x6E09      	MOVWF       R9, 0
;__Lib_Math.c,1082 :: 		
0x06B0	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,1083 :: 		
0x06B2	0x6E08      	MOVWF       R8, 0
;__Lib_Math.c,1084 :: 		
0x06B4	0x6A03      	CLRF        R3, 0
;__Lib_Math.c,1085 :: 		
0x06B6	0x6A02      	CLRF        R2, 0
;__Lib_Math.c,1086 :: 		
0x06B8	0x6A01      	CLRF        R1, 0
;__Lib_Math.c,1087 :: 		
0x06BA	0x6A00      	CLRF        R0, 0
;__Lib_Math.c,1088 :: 		
0x06BC	0xD7D6      	BRA         C3232SOK
;__Lib_Math.c,1089 :: 		
C3232SX2:
;__Lib_Math.c,1090 :: 		
0x06BE	0x6A03      	CLRF        R3, 0
;__Lib_Math.c,1091 :: 		
0x06C0	0x6A02      	CLRF        R2, 0
;__Lib_Math.c,1092 :: 		
0x06C2	0x6A01      	CLRF        R1, 0
;__Lib_Math.c,1093 :: 		
0x06C4	0x6A00      	CLRF        R0, 0
;__Lib_Math.c,1094 :: 		
0x06C6	0x2A00      	INCF        R0, 1, 0
;__Lib_Math.c,1095 :: 		
0x06C8	0x0C00      	RETLW       0
;__Lib_Math.c,1097 :: 		
C3232SX3:
;__Lib_Math.c,1098 :: 		
0x06CA	0x1E03      	COMF        R3, 1, 0
;__Lib_Math.c,1099 :: 		
0x06CC	0x1E02      	COMF        R2, 1, 0
;__Lib_Math.c,1100 :: 		
0x06CE	0x1E01      	COMF        R1, 1, 0
;__Lib_Math.c,1101 :: 		
0x06D0	0x1E00      	COMF        R0, 1, 0
;__Lib_Math.c,1103 :: 		
0x06D2	0x8E0C      	BSF         R12, 7, 0
;__Lib_Math.c,1104 :: 		
0x06D4	0xD7C7      	BRA         C3232S
;__Lib_Math.c,1105 :: 		
C3232SX4:
;__Lib_Math.c,1108 :: 		
0x06D6	0x2A08      	INCF        R8, 1, 0
;__Lib_Math.c,1109 :: 		
0x06D8	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1110 :: 		
0x06DA	0x2A09      	INCF        R9, 1, 0
;__Lib_Math.c,1111 :: 		
0x06DC	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1112 :: 		
0x06DE	0x2A0A      	INCF        R10, 1, 0
;__Lib_Math.c,1113 :: 		
0x06E0	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1114 :: 		
0x06E2	0x2A0B      	INCF        R11, 1, 0
;__Lib_Math.c,1115 :: 		
0x06E4	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1116 :: 		
0x06E6	0x5C08      	SUBWF       R8, 0, 0
;__Lib_Math.c,1117 :: 		
0x06E8	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_Math.c,1118 :: 		
0x06EA	0xD7BF      	BRA         C3232SOK
;__Lib_Math.c,1119 :: 		
0x06EC	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1120 :: 		
0x06EE	0x5C09      	SUBWF       R9, 0, 0
;__Lib_Math.c,1121 :: 		
0x06F0	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_Math.c,1122 :: 		
0x06F2	0xD7BB      	BRA         C3232SOK
;__Lib_Math.c,1123 :: 		
0x06F4	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1124 :: 		
0x06F6	0x5C0A      	SUBWF       R10, 0, 0
;__Lib_Math.c,1125 :: 		
0x06F8	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_Math.c,1126 :: 		
0x06FA	0xD7B7      	BRA         C3232SOK
;__Lib_Math.c,1127 :: 		
0x06FC	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1128 :: 		
0x06FE	0x5C0B      	SUBWF       R11, 0, 0
;__Lib_Math.c,1129 :: 		
0x0700	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_Math.c,1130 :: 		
0x0702	0xD7B3      	BRA         C3232SOK
;__Lib_Math.c,1131 :: 		
0x0704	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,1132 :: 		
0x0706	0x6A0A      	CLRF        R10, 0
;__Lib_Math.c,1133 :: 		
0x0708	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,1134 :: 		
0x070A	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,1135 :: 		
0x070C	0x2A00      	INCF        R0, 1, 0
;__Lib_Math.c,1136 :: 		
0x070E	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1137 :: 		
0x0710	0x2A01      	INCF        R1, 1, 0
;__Lib_Math.c,1138 :: 		
0x0712	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1139 :: 		
0x0714	0x2A02      	INCF        R2, 1, 0
;__Lib_Math.c,1140 :: 		
0x0716	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1141 :: 		
0x0718	0x2A03      	INCF        R3, 1, 0
;__Lib_Math.c,1142 :: 		
0x071A	0xAE03      	BTFSS       R3, 7, 0
;__Lib_Math.c,1143 :: 		
0x071C	0xD7A6      	BRA         C3232SOK
;__Lib_Math.c,1144 :: 		
0x071E	0x6A0E      	CLRF        R14, 0
;__Lib_Math.c,1145 :: 		
0x0720	0x880E      	BSF         R14, 4, 0
;__Lib_Math.c,1146 :: 		
0x0722	0x0CFF      	RETLW       255
;__Lib_Math.c,1147 :: 		
END_ALL:
;__Lib_Math.c,1148 :: 		
0x0724	0x6A0E      	CLRF        R14, 0
;__Lib_Math.c,1149 :: 		
0x0726	0xA00C      	BTFSS       R12, 0, 0
;__Lib_Math.c,1150 :: 		
0x0728	0xD001      	BRA         avoid_comfrem
;__Lib_Math.c,1153 :: 		
0x072A	0xDE8E      	RCALL       _COMFREM
;__Lib_Math.c,1155 :: 		
avoid_comfrem:
;__Lib_Math.c,1156 :: 		
0x072C	0x0F00      	ADDLW       0
;__Lib_Math.c,1158 :: 		
L_end_Div_32x32_S:
0x072E	0x0012      	RETURN      0
; end of _Div_32x32_S
_Delay_50us:
;__Lib_Delays.c,19 :: 		void Delay_50us() {
;__Lib_Delays.c,20 :: 		Delay_us(50);
0x0730	0x0E29      	MOVLW       41
0x0732	0x6E0D      	MOVWF       R13, 0
L_Delay_50us2:
0x0734	0x2E0D      	DECFSZ      R13, 1, 0
0x0736	0xD7FE      	BRA         L_Delay_50us2
0x0738	0x0000      	NOP
;__Lib_Delays.c,21 :: 		}
L_end_Delay_50us:
0x073A	0x0012      	RETURN      0
; end of _Delay_50us
__Lib_SoftI2C_PutZerosToLATSda:
;__Lib_SoftI2C.c,28 :: 		
;__Lib_SoftI2C.c,37 :: 		
0x073C	0xF083EE0F  	LFSR        0, Soft_I2C_Sda
;__Lib_SoftI2C.c,38 :: 		
0x0740	0x50EF      	MOVF        INDF0, 0, 0
;__Lib_SoftI2C.c,39 :: 		
0x0742	0xF000CFEF  	MOVFF       INDF0, R0
;__Lib_SoftI2C.c,41 :: 		
0x0746	0x9C00      	BCF         __Lib_SoftI2C_PutZerosToLATSda_temp_sda_L0, BitPos(Soft_I2C_Sda+0), 0
;__Lib_SoftI2C.c,43 :: 		
0x0748	0xFFEFC000  	MOVFF       R0, INDF0
;__Lib_SoftI2C.c,44 :: 		
L_end_PutZerosToLATSda:
0x074C	0x0012      	RETURN      0
; end of __Lib_SoftI2C_PutZerosToLATSda
__Lib_SoftI2C_PutZerosToLATScl:
;__Lib_SoftI2C.c,45 :: 		
;__Lib_SoftI2C.c,53 :: 		
0x074E	0xF084EE0F  	LFSR        0, Soft_I2C_Scl
;__Lib_SoftI2C.c,54 :: 		
0x0752	0x50EF      	MOVF        INDF0, 0, 0
;__Lib_SoftI2C.c,55 :: 		
0x0754	0xF000CFEF  	MOVFF       INDF0, R0
;__Lib_SoftI2C.c,58 :: 		
0x0758	0x9200      	BCF         __Lib_SoftI2C_PutZerosToLATScl_temp_scl_L0, BitPos(Soft_I2C_Scl+0), 0
;__Lib_SoftI2C.c,60 :: 		
0x075A	0xFFEFC000  	MOVFF       R0, INDF0
;__Lib_SoftI2C.c,61 :: 		
L_end_PutZerosToLATScl:
0x075E	0x0012      	RETURN      0
; end of __Lib_SoftI2C_PutZerosToLATScl
_clamp_shift:
;miscelaneos.h,34 :: 		long clamp_shift(long valor, long min, long max){
;miscelaneos.h,35 :: 		if(valor > max)
0x0760	0x0E80      	MOVLW       128
0x0762	0x0105      	MOVLB       5
0x0764	0x199B      	XORWF       FARG_clamp_shift_max+3, 0, 1
0x0766	0x6E00      	MOVWF       R0 
0x0768	0x0E80      	MOVLW       128
0x076A	0x1993      	XORWF       FARG_clamp_shift_valor+3, 0, 1
0x076C	0x5C00      	SUBWF       R0, 0 
0x076E	0xE108      	BNZ         L__clamp_shift1004
0x0770	0x5192      	MOVF        FARG_clamp_shift_valor+2, 0, 1
0x0772	0x5D9A      	SUBWF       FARG_clamp_shift_max+2, 0, 1
0x0774	0xE105      	BNZ         L__clamp_shift1004
0x0776	0x5191      	MOVF        FARG_clamp_shift_valor+1, 0, 1
0x0778	0x5D99      	SUBWF       FARG_clamp_shift_max+1, 0, 1
0x077A	0xE102      	BNZ         L__clamp_shift1004
0x077C	0x5190      	MOVF        FARG_clamp_shift_valor, 0, 1
0x077E	0x5D98      	SUBWF       FARG_clamp_shift_max, 0, 1
L__clamp_shift1004:
0x0780	0xE209      	BC          L_clamp_shift5
;miscelaneos.h,36 :: 		valor = min;
0x0782	0xF590C594  	MOVFF       FARG_clamp_shift_min, FARG_clamp_shift_valor
0x0786	0xF591C595  	MOVFF       FARG_clamp_shift_min+1, FARG_clamp_shift_valor+1
0x078A	0xF592C596  	MOVFF       FARG_clamp_shift_min+2, FARG_clamp_shift_valor+2
0x078E	0xF593C597  	MOVFF       FARG_clamp_shift_min+3, FARG_clamp_shift_valor+3
0x0792	0xD018      	BRA         L_clamp_shift6
L_clamp_shift5:
;miscelaneos.h,37 :: 		else if(valor < min)
0x0794	0x0E80      	MOVLW       128
0x0796	0x1993      	XORWF       FARG_clamp_shift_valor+3, 0, 1
0x0798	0x6E00      	MOVWF       R0 
0x079A	0x0E80      	MOVLW       128
0x079C	0x1997      	XORWF       FARG_clamp_shift_min+3, 0, 1
0x079E	0x5C00      	SUBWF       R0, 0 
0x07A0	0xE108      	BNZ         L__clamp_shift1005
0x07A2	0x5196      	MOVF        FARG_clamp_shift_min+2, 0, 1
0x07A4	0x5D92      	SUBWF       FARG_clamp_shift_valor+2, 0, 1
0x07A6	0xE105      	BNZ         L__clamp_shift1005
0x07A8	0x5195      	MOVF        FARG_clamp_shift_min+1, 0, 1
0x07AA	0x5D91      	SUBWF       FARG_clamp_shift_valor+1, 0, 1
0x07AC	0xE102      	BNZ         L__clamp_shift1005
0x07AE	0x5194      	MOVF        FARG_clamp_shift_min, 0, 1
0x07B0	0x5D90      	SUBWF       FARG_clamp_shift_valor, 0, 1
L__clamp_shift1005:
0x07B2	0xE208      	BC          L_clamp_shift7
;miscelaneos.h,38 :: 		valor = max;
0x07B4	0xF590C598  	MOVFF       FARG_clamp_shift_max, FARG_clamp_shift_valor
0x07B8	0xF591C599  	MOVFF       FARG_clamp_shift_max+1, FARG_clamp_shift_valor+1
0x07BC	0xF592C59A  	MOVFF       FARG_clamp_shift_max+2, FARG_clamp_shift_valor+2
0x07C0	0xF593C59B  	MOVFF       FARG_clamp_shift_max+3, FARG_clamp_shift_valor+3
L_clamp_shift7:
L_clamp_shift6:
;miscelaneos.h,40 :: 		return valor;
0x07C4	0xF000C590  	MOVFF       FARG_clamp_shift_valor, R0
0x07C8	0xF001C591  	MOVFF       FARG_clamp_shift_valor+1, R1
0x07CC	0xF002C592  	MOVFF       FARG_clamp_shift_valor+2, R2
0x07D0	0xF003C593  	MOVFF       FARG_clamp_shift_valor+3, R3
;miscelaneos.h,41 :: 		}
L_end_clamp_shift:
0x07D4	0x0012      	RETURN      0
; end of _clamp_shift
_eeprom_i2c_write:
;eeprom_i2c_soft.h,24 :: 		void eeprom_i2c_write(unsigned int address, char *datos, char size){
;eeprom_i2c_soft.h,25 :: 		char cont = 0;
0x07D6	0x0105      	MOVLB       5
0x07D8	0x6B95      	CLRF        eeprom_i2c_write_cont_L0, 1
;eeprom_i2c_soft.h,27 :: 		while(cont < size){
L_eeprom_i2c_write458:
0x07DA	0x0105      	MOVLB       5
0x07DC	0x5194      	MOVF        FARG_eeprom_i2c_write_size, 0, 1
0x07DE	0x5D95      	SUBWF       eeprom_i2c_write_cont_L0, 0, 1
0x07E0	0xE237      	BC          L_eeprom_i2c_write459
;eeprom_i2c_soft.h,28 :: 		I2C_soft_start();                       // Issue start signal
0x07E2	0xDC74      	RCALL       _I2C_soft_start
;eeprom_i2c_soft.h,30 :: 		I2C_soft_write(EEPROM_ADDRESS_24LC256); //Escritura e multiples bytes
0x07E4	0x0EA0      	MOVLW       160
0x07E6	0x6FA6      	MOVWF       FARG_I2C_soft_write_dato, 1
0x07E8	0xDC43      	RCALL       _I2C_soft_write
;eeprom_i2c_soft.h,31 :: 		I2C_soft_write(getByte(address,1));     // Start from address hihg
0x07EA	0xF5A6C591  	MOVFF       FARG_eeprom_i2c_write_address+1, FARG_I2C_soft_write_dato
0x07EE	0xDC40      	RCALL       _I2C_soft_write
;eeprom_i2c_soft.h,32 :: 		I2C_soft_write(getByte(address,0));     // Start from address low
0x07F0	0xF5A6C590  	MOVFF       FARG_eeprom_i2c_write_address, FARG_I2C_soft_write_dato
0x07F4	0xDC3D      	RCALL       _I2C_soft_write
;eeprom_i2c_soft.h,34 :: 		for(; cont < size; cont++){
L_eeprom_i2c_write460:
0x07F6	0x0105      	MOVLB       5
0x07F8	0x5194      	MOVF        FARG_eeprom_i2c_write_size, 0, 1
0x07FA	0x5D95      	SUBWF       eeprom_i2c_write_cont_L0, 0, 1
0x07FC	0xE21D      	BC          L_eeprom_i2c_write461
;eeprom_i2c_soft.h,35 :: 		I2C_soft_write(datos[cont]);           // Byte para ser escrito
0x07FE	0x5195      	MOVF        eeprom_i2c_write_cont_L0, 0, 1
0x0800	0x2592      	ADDWF       FARG_eeprom_i2c_write_datos, 0, 1
0x0802	0x6EE9      	MOVWF       FSR0L 
0x0804	0x0E00      	MOVLW       0
0x0806	0x2193      	ADDWFC      FARG_eeprom_i2c_write_datos+1, 0, 1
0x0808	0x6EEA      	MOVWF       FSR0H 
0x080A	0xF5A6CFEE  	MOVFF       POSTINC0, FARG_I2C_soft_write_dato
0x080E	0xDC30      	RCALL       _I2C_soft_write
;eeprom_i2c_soft.h,36 :: 		if(++address%64 == 0){
0x0810	0x0105      	MOVLB       5
0x0812	0x4B90      	INFSNZ      FARG_eeprom_i2c_write_address, 1, 1
0x0814	0x2B91      	INCF        FARG_eeprom_i2c_write_address+1, 1, 1
0x0816	0x0E3F      	MOVLW       63
0x0818	0x1590      	ANDWF       FARG_eeprom_i2c_write_address, 0, 1
0x081A	0x6E01      	MOVWF       R1 
0x081C	0xF002C591  	MOVFF       FARG_eeprom_i2c_write_address+1, R2
0x0820	0x0E00      	MOVLW       0
0x0822	0x1602      	ANDWF       R2, 1 
0x0824	0x0E00      	MOVLW       0
0x0826	0x1802      	XORWF       R2, 0 
0x0828	0xE102      	BNZ         L__eeprom_i2c_write1247
0x082A	0x0E00      	MOVLW       0
0x082C	0x1801      	XORWF       R1, 0 
L__eeprom_i2c_write1247:
0x082E	0xE102      	BNZ         L_eeprom_i2c_write463
;eeprom_i2c_soft.h,37 :: 		cont++;
0x0830	0x2B95      	INCF        eeprom_i2c_write_cont_L0, 1, 1
;eeprom_i2c_soft.h,38 :: 		break;
0x0832	0xD002      	BRA         L_eeprom_i2c_write461
;eeprom_i2c_soft.h,39 :: 		}
L_eeprom_i2c_write463:
;eeprom_i2c_soft.h,34 :: 		for(; cont < size; cont++){
0x0834	0x2B95      	INCF        eeprom_i2c_write_cont_L0, 1, 1
;eeprom_i2c_soft.h,40 :: 		}
0x0836	0xD7DF      	BRA         L_eeprom_i2c_write460
L_eeprom_i2c_write461:
;eeprom_i2c_soft.h,41 :: 		I2C_soft_stop();                         // Issue stop signal
0x0838	0xDC5A      	RCALL       _I2C_soft_stop
;eeprom_i2c_soft.h,43 :: 		while(true){
L_eeprom_i2c_write464:
0x083A	0x0105      	MOVLB       5
;eeprom_i2c_soft.h,44 :: 		I2C_soft_start();
0x083C	0xDC47      	RCALL       _I2C_soft_start
;eeprom_i2c_soft.h,45 :: 		if(!I2C_soft_write(EEPROM_ADDRESS_24LC256))
0x083E	0x0EA0      	MOVLW       160
0x0840	0x6FA6      	MOVWF       FARG_I2C_soft_write_dato, 1
0x0842	0xDC16      	RCALL       _I2C_soft_write
0x0844	0x5200      	MOVF        R0, 1 
0x0846	0xE101      	BNZ         L_eeprom_i2c_write466
;eeprom_i2c_soft.h,46 :: 		break;
0x0848	0xD001      	BRA         L_eeprom_i2c_write465
L_eeprom_i2c_write466:
;eeprom_i2c_soft.h,47 :: 		}
0x084A	0xD7F7      	BRA         L_eeprom_i2c_write464
L_eeprom_i2c_write465:
;eeprom_i2c_soft.h,48 :: 		I2C_soft_stop();      // Issue stop signal
0x084C	0xDC50      	RCALL       _I2C_soft_stop
;eeprom_i2c_soft.h,49 :: 		}
0x084E	0xD7C5      	BRA         L_eeprom_i2c_write458
L_eeprom_i2c_write459:
;eeprom_i2c_soft.h,50 :: 		}
L_end_eeprom_i2c_write:
0x0850	0x0012      	RETURN      0
; end of _eeprom_i2c_write
_Mul_32x32_U:
;__Lib_Math.c,1616 :: 		
;__Lib_Math.c,1631 :: 		
0x0852	0x0E22      	MOVLW       34
;__Lib_Math.c,1632 :: 		
0x0854	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,1633 :: 		
0x0856	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,1634 :: 		
0x0858	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,1635 :: 		
0x085A	0x6A0A      	CLRF        R10, 0
;__Lib_Math.c,1636 :: 		
0x085C	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,1638 :: 		
_NEXT:
;__Lib_Math.c,1642 :: 		
0x085E	0x060C      	DECF        R12, 1, 0
;__Lib_Math.c,1643 :: 		
0x0860	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1644 :: 		
0x0862	0xD01F      	BRA         _EXIT2
;__Lib_Math.c,1645 :: 		
0x0864	0x90D8      	BCF         STATUS, 0, 0
;__Lib_Math.c,1647 :: 		
_LOOP:
;__Lib_Math.c,1656 :: 		
0x0866	0x320B      	RRCF        R11, 1, 0
;__Lib_Math.c,1657 :: 		
0x0868	0x320A      	RRCF        R10, 1, 0
;__Lib_Math.c,1658 :: 		
0x086A	0x3209      	RRCF        R9, 1, 0
;__Lib_Math.c,1659 :: 		
0x086C	0x3208      	RRCF        R8, 1, 0
;__Lib_Math.c,1660 :: 		
0x086E	0x3203      	RRCF        R3, 1, 0
;__Lib_Math.c,1661 :: 		
0x0870	0x3202      	RRCF        R2, 1, 0
;__Lib_Math.c,1662 :: 		
0x0872	0x3201      	RRCF        R1, 1, 0
;__Lib_Math.c,1663 :: 		
0x0874	0x3200      	RRCF        R0, 1, 0
;__Lib_Math.c,1668 :: 		
0x0876	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1669 :: 		
0x0878	0xD7F2      	BRA         _NEXT
;__Lib_Math.c,1670 :: 		
0x087A	0x060C      	DECF        R12, 1, 0
;__Lib_Math.c,1671 :: 		
0x087C	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1672 :: 		
0x087E	0xD009      	BRA         _EXIT1
;__Lib_Math.c,1679 :: 		
0x0880	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1680 :: 		
0x0882	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1681 :: 		
0x0884	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1684 :: 		
0x0886	0x2209      	ADDWFC      R9, 1, 0
;__Lib_Math.c,1685 :: 		
0x0888	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1688 :: 		
0x088A	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,1689 :: 		
0x088C	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1692 :: 		
0x088E	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,1694 :: 		
0x0890	0xD7EA      	BRA         _LOOP
;__Lib_Math.c,1696 :: 		
_EXIT1:
;__Lib_Math.c,1701 :: 		
0x0892	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1702 :: 		
0x0894	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1703 :: 		
0x0896	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1706 :: 		
0x0898	0x2209      	ADDWFC      R9, 1, 0
;__Lib_Math.c,1707 :: 		
0x089A	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1710 :: 		
0x089C	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,1711 :: 		
0x089E	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1714 :: 		
0x08A0	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,1717 :: 		
_EXIT2:
;__Lib_Math.c,1719 :: 		
L_end_Mul_32x32_U:
0x08A2	0x0012      	RETURN      0
; end of _Mul_32x32_U
_numToString:
;string.h,197 :: 		char* numToString(long valor, char *cadena, short digitos){
;string.h,198 :: 		cadena[digitos--] = 0;//Agregar final de cadena
0x08A4	0x0105      	MOVLB       5
0x08A6	0x5196      	MOVF        FARG_numToString_digitos, 0, 1
0x08A8	0x2594      	ADDWF       FARG_numToString_cadena, 0, 1
0x08AA	0x6EE1      	MOVWF       FSR1L 
0x08AC	0x0E00      	MOVLW       0
0x08AE	0xBF96      	BTFSC       FARG_numToString_digitos, 7, 1
0x08B0	0x0EFF      	MOVLW       255
0x08B2	0x2195      	ADDWFC      FARG_numToString_cadena+1, 0, 1
0x08B4	0x6EE2      	MOVWF       FSR1H 
0x08B6	0x6AE6      	CLRF        POSTINC1 
0x08B8	0x0796      	DECF        FARG_numToString_digitos, 1, 1
;string.h,199 :: 		while(digitos >= 0){
L_numToString70:
0x08BA	0x0105      	MOVLB       5
0x08BC	0x0E80      	MOVLW       128
0x08BE	0x1996      	XORWF       FARG_numToString_digitos, 0, 1
0x08C0	0x6E00      	MOVWF       R0 
0x08C2	0x0E80      	MOVLW       128
0x08C4	0x0A00      	XORLW       0
0x08C6	0x5C00      	SUBWF       R0, 0 
0x08C8	0xE341      	BNC         L_numToString71
;string.h,201 :: 		cadena[digitos--] = (valor % 10) + '0';
0x08CA	0x5196      	MOVF        FARG_numToString_digitos, 0, 1
0x08CC	0x2594      	ADDWF       FARG_numToString_cadena, 0, 1
0x08CE	0x6F97      	MOVWF       FLOC__numToString, 1
0x08D0	0x0E00      	MOVLW       0
0x08D2	0xBF96      	BTFSC       FARG_numToString_digitos, 7, 1
0x08D4	0x0EFF      	MOVLW       255
0x08D6	0x2195      	ADDWFC      FARG_numToString_cadena+1, 0, 1
0x08D8	0x6F98      	MOVWF       FLOC__numToString+1, 1
0x08DA	0x0E0A      	MOVLW       10
0x08DC	0x6E04      	MOVWF       R4 
0x08DE	0x0E00      	MOVLW       0
0x08E0	0x6E05      	MOVWF       R5 
0x08E2	0x6E06      	MOVWF       R6 
0x08E4	0x6E07      	MOVWF       R7 
0x08E6	0xF000C590  	MOVFF       FARG_numToString_valor, R0
0x08EA	0xF001C591  	MOVFF       FARG_numToString_valor+1, R1
0x08EE	0xF002C592  	MOVFF       FARG_numToString_valor+2, R2
0x08F2	0xF003C593  	MOVFF       FARG_numToString_valor+3, R3
0x08F6	0xDE6F      	RCALL       _Div_32x32_S
0x08F8	0xF000C008  	MOVFF       R8, R0
0x08FC	0xF001C009  	MOVFF       R9, R1
0x0900	0xF002C00A  	MOVFF       R10, R2
0x0904	0xF003C00B  	MOVFF       R11, R3
0x0908	0x0E30      	MOVLW       48
0x090A	0x2600      	ADDWF       R0, 1 
0x090C	0xFFE1C597  	MOVFF       FLOC__numToString, FSR1L
0x0910	0xFFE2C598  	MOVFF       FLOC__numToString+1, FSR1H
0x0914	0xFFE6C000  	MOVFF       R0, POSTINC1
0x0918	0x0105      	MOVLB       5
0x091A	0x0796      	DECF        FARG_numToString_digitos, 1, 1
;string.h,202 :: 		valor /= 10;
0x091C	0x0E0A      	MOVLW       10
0x091E	0x6E04      	MOVWF       R4 
0x0920	0x0E00      	MOVLW       0
0x0922	0x6E05      	MOVWF       R5 
0x0924	0x6E06      	MOVWF       R6 
0x0926	0x6E07      	MOVWF       R7 
0x0928	0xF000C590  	MOVFF       FARG_numToString_valor, R0
0x092C	0xF001C591  	MOVFF       FARG_numToString_valor+1, R1
0x0930	0xF002C592  	MOVFF       FARG_numToString_valor+2, R2
0x0934	0xF003C593  	MOVFF       FARG_numToString_valor+3, R3
0x0938	0xDE4E      	RCALL       _Div_32x32_S
0x093A	0xF590C000  	MOVFF       R0, FARG_numToString_valor
0x093E	0xF591C001  	MOVFF       R1, FARG_numToString_valor+1
0x0942	0xF592C002  	MOVFF       R2, FARG_numToString_valor+2
0x0946	0xF593C003  	MOVFF       R3, FARG_numToString_valor+3
;string.h,203 :: 		}
0x094A	0xD7B7      	BRA         L_numToString70
L_numToString71:
;string.h,205 :: 		return cadena;
0x094C	0xF000C594  	MOVFF       FARG_numToString_cadena, R0
0x0950	0xF001C595  	MOVFF       FARG_numToString_cadena+1, R1
;string.h,206 :: 		}
L_end_numToString:
0x0954	0x0012      	RETURN      0
; end of _numToString
__mysql_calculate_address:
;table_eeprom.h,457 :: 		char _mysql_calculate_address(char *name, char *column){
;table_eeprom.h,458 :: 		unsigned int addressAux = 0;
0x0956	0x0105      	MOVLB       5
0x0958	0x6B94      	CLRF        _mysql_calculate_address_addressAux_L0, 1
0x095A	0x6B95      	CLRF        _mysql_calculate_address_addressAux_L0+1, 1
;table_eeprom.h,461 :: 		if(strncmp(name, myTable.nameAct, TABLE_MAX_SIZE_NAME+1)){
0x095C	0xF59EC590  	MOVFF       FARG__mysql_calculate_address_name, FARG_strncmp_s1
0x0960	0xF59FC591  	MOVFF       FARG__mysql_calculate_address_name+1, FARG_strncmp_s1+1
0x0964	0x0E92      	MOVLW       Validadora_myTable+7
0x0966	0x6FA0      	MOVWF       FARG_strncmp_s2, 1
0x0968	0x0E03      	MOVLW       hi_addr(Validadora_myTable+7)
0x096A	0x6FA1      	MOVWF       FARG_strncmp_s2+1, 1
0x096C	0x0E10      	MOVLW       16
0x096E	0x6FA2      	MOVWF       FARG_strncmp_len, 1
0x0970	0xDD3A      	RCALL       _strncmp
0x0972	0x5000      	MOVF        R0, 0 
0x0974	0x1001      	IORWF       R1, 0 
0x0976	0xE00A      	BZ          L__mysql_calculate_address565
;table_eeprom.h,462 :: 		if(!mysql_exist(name)){
0x0978	0xF59CC590  	MOVFF       FARG__mysql_calculate_address_name, FARG_mysql_exist_name
0x097C	0xF59DC591  	MOVFF       FARG__mysql_calculate_address_name+1, FARG_mysql_exist_name+1
0x0980	0xDD79      	RCALL       _mysql_exist
0x0982	0x5200      	MOVF        R0, 1 
0x0984	0xE103      	BNZ         L__mysql_calculate_address566
;table_eeprom.h,463 :: 		return TABLE_RW_NO_EXIST_TABLE;  //No existe la tabla buscada
0x0986	0x0E01      	MOVLW       1
0x0988	0x6E00      	MOVWF       R0 
0x098A	0xD0D3      	BRA         L_end__mysql_calculate_address
;table_eeprom.h,464 :: 		}
L__mysql_calculate_address566:
;table_eeprom.h,465 :: 		}
L__mysql_calculate_address565:
;table_eeprom.h,467 :: 		if(strncmp(column, myTable.nameColAct, TABLE_MAX_SIZE_NAME+1)){
0x098C	0xF59EC592  	MOVFF       FARG__mysql_calculate_address_column, FARG_strncmp_s1
0x0990	0xF59FC593  	MOVFF       FARG__mysql_calculate_address_column+1, FARG_strncmp_s1+1
0x0994	0x0EA2      	MOVLW       Validadora_myTable+23
0x0996	0x0105      	MOVLB       5
0x0998	0x6FA0      	MOVWF       FARG_strncmp_s2, 1
0x099A	0x0E03      	MOVLW       hi_addr(Validadora_myTable+23)
0x099C	0x6FA1      	MOVWF       FARG_strncmp_s2+1, 1
0x099E	0x0E10      	MOVLW       16
0x09A0	0x6FA2      	MOVWF       FARG_strncmp_len, 1
0x09A2	0xDD21      	RCALL       _strncmp
0x09A4	0x5000      	MOVF        R0, 0 
0x09A6	0x1001      	IORWF       R1, 0 
0x09A8	0xB4D8      	BTFSC       STATUS, 2 
0x09AA	0xD0C2      	BRA         L__mysql_calculate_address567
;table_eeprom.h,468 :: 		myTable.addressAct = myTable.address;   //Copiar direccion casa de la tabla
0x09AC	0xF3B8C3B6  	MOVFF       Validadora_myTable+43, Validadora_myTable+45
0x09B0	0xF3B9C3B7  	MOVFF       Validadora_myTable+44, Validadora_myTable+46
;table_eeprom.h,470 :: 		myTable.addressAct += TABLE_MAX_SIZE_NAME+3;
0x09B4	0x0E12      	MOVLW       18
0x09B6	0x0103      	MOVLB       3
0x09B8	0x25B6      	ADDWF       Validadora_myTable+43, 0, 1
0x09BA	0x6E00      	MOVWF       R0 
0x09BC	0x0E00      	MOVLW       0
0x09BE	0x21B7      	ADDWFC      Validadora_myTable+44, 0, 1
0x09C0	0x6E01      	MOVWF       R1 
0x09C2	0xF3B8C000  	MOVFF       R0, Validadora_myTable+45
0x09C6	0xF3B9C001  	MOVFF       R1, Validadora_myTable+46
;table_eeprom.h,471 :: 		eeprom_i2c_read(myTable.addressAct,(char*)&myTable.rowAct, 2);
0x09CA	0xF59EC000  	MOVFF       R0, FARG_eeprom_i2c_read_address
0x09CE	0xF59FC001  	MOVFF       R1, FARG_eeprom_i2c_read_address+1
0x09D2	0x0E8F      	MOVLW       Validadora_myTable+4
0x09D4	0x0105      	MOVLB       5
0x09D6	0x6FA0      	MOVWF       FARG_eeprom_i2c_read_datos, 1
0x09D8	0x0E03      	MOVLW       hi_addr(Validadora_myTable+4)
0x09DA	0x6FA1      	MOVWF       FARG_eeprom_i2c_read_datos+1, 1
0x09DC	0x0E02      	MOVLW       2
0x09DE	0x6FA2      	MOVWF       FARG_eeprom_i2c_read_size, 1
0x09E0	0xDCC1      	RCALL       _eeprom_i2c_read
;table_eeprom.h,472 :: 		eeprom_i2c_read(myTable.addressAct+2,(char*)&myTable.row, 2);
0x09E2	0x0E02      	MOVLW       2
0x09E4	0x0103      	MOVLB       3
0x09E6	0x25B8      	ADDWF       Validadora_myTable+45, 0, 1
0x09E8	0x0105      	MOVLB       5
0x09EA	0x6F9E      	MOVWF       FARG_eeprom_i2c_read_address, 1
0x09EC	0x0E00      	MOVLW       0
0x09EE	0x0103      	MOVLB       3
0x09F0	0x21B9      	ADDWFC      Validadora_myTable+46, 0, 1
0x09F2	0x0105      	MOVLB       5
0x09F4	0x6F9F      	MOVWF       FARG_eeprom_i2c_read_address+1, 1
0x09F6	0x0E8D      	MOVLW       Validadora_myTable+2
0x09F8	0x6FA0      	MOVWF       FARG_eeprom_i2c_read_datos, 1
0x09FA	0x0E03      	MOVLW       hi_addr(Validadora_myTable+2)
0x09FC	0x6FA1      	MOVWF       FARG_eeprom_i2c_read_datos+1, 1
0x09FE	0x0E02      	MOVLW       2
0x0A00	0x6FA2      	MOVWF       FARG_eeprom_i2c_read_size, 1
0x0A02	0xDCB0      	RCALL       _eeprom_i2c_read
;table_eeprom.h,473 :: 		eeprom_i2c_read(myTable.addressAct+4,&myTable.col, 1); //Filas totales de busqueda
0x0A04	0x0E04      	MOVLW       4
0x0A06	0x0103      	MOVLB       3
0x0A08	0x25B8      	ADDWF       Validadora_myTable+45, 0, 1
0x0A0A	0x0105      	MOVLB       5
0x0A0C	0x6F9E      	MOVWF       FARG_eeprom_i2c_read_address, 1
0x0A0E	0x0E00      	MOVLW       0
0x0A10	0x0103      	MOVLB       3
0x0A12	0x21B9      	ADDWFC      Validadora_myTable+46, 0, 1
0x0A14	0x0105      	MOVLB       5
0x0A16	0x6F9F      	MOVWF       FARG_eeprom_i2c_read_address+1, 1
0x0A18	0x0E8C      	MOVLW       Validadora_myTable+1
0x0A1A	0x6FA0      	MOVWF       FARG_eeprom_i2c_read_datos, 1
0x0A1C	0x0E03      	MOVLW       hi_addr(Validadora_myTable+1)
0x0A1E	0x6FA1      	MOVWF       FARG_eeprom_i2c_read_datos+1, 1
0x0A20	0x0E01      	MOVLW       1
0x0A22	0x6FA2      	MOVWF       FARG_eeprom_i2c_read_size, 1
0x0A24	0xDC9F      	RCALL       _eeprom_i2c_read
;table_eeprom.h,475 :: 		myTable.addressAct += (4+1);   //Apuntamos a la primera columna name
0x0A26	0x0E05      	MOVLW       5
0x0A28	0x0103      	MOVLB       3
0x0A2A	0x25B8      	ADDWF       Validadora_myTable+45, 0, 1
0x0A2C	0x0105      	MOVLB       5
0x0A2E	0x6F96      	MOVWF       FLOC___mysql_calculate_address, 1
0x0A30	0x0E00      	MOVLW       0
0x0A32	0x0103      	MOVLB       3
0x0A34	0x21B9      	ADDWFC      Validadora_myTable+46, 0, 1
0x0A36	0x0105      	MOVLB       5
0x0A38	0x6F97      	MOVWF       FLOC___mysql_calculate_address+1, 1
0x0A3A	0xF3B8C596  	MOVFF       FLOC___mysql_calculate_address, Validadora_myTable+45
0x0A3E	0xF3B9C597  	MOVFF       FLOC___mysql_calculate_address+1, Validadora_myTable+46
;table_eeprom.h,476 :: 		addressAux = myTable.addressAct;
0x0A42	0xF594C596  	MOVFF       FLOC___mysql_calculate_address, _mysql_calculate_address_addressAux_L0
0x0A46	0xF595C597  	MOVFF       FLOC___mysql_calculate_address+1, _mysql_calculate_address_addressAux_L0+1
;table_eeprom.h,477 :: 		addressAux += myTable.col*(TABLE_MAX_SIZE_NAME+1+1); //Apuntar a los datos
0x0A4A	0xF000C38C  	MOVFF       Validadora_myTable+1, R0
0x0A4E	0x0E00      	MOVLW       0
0x0A50	0x6E01      	MOVWF       R1 
0x0A52	0x0E11      	MOVLW       17
0x0A54	0x6E04      	MOVWF       R4 
0x0A56	0x0E00      	MOVLW       0
0x0A58	0x6E05      	MOVWF       R5 
0x0A5A	0xDD92      	RCALL       _Mul_16X16_U
0x0A5C	0x5000      	MOVF        R0, 0 
0x0A5E	0x2596      	ADDWF       FLOC___mysql_calculate_address, 0, 1
0x0A60	0x6F94      	MOVWF       _mysql_calculate_address_addressAux_L0, 1
0x0A62	0x5001      	MOVF        R1, 0 
0x0A64	0x2197      	ADDWFC      FLOC___mysql_calculate_address+1, 0, 1
0x0A66	0x6F95      	MOVWF       _mysql_calculate_address_addressAux_L0+1, 1
;table_eeprom.h,480 :: 		for(myTable.cont = 0; myTable.cont < myTable.col; myTable.cont++){
0x0A68	0x0103      	MOVLB       3
0x0A6A	0x6BBA      	CLRF        Validadora_myTable+47, 1
L__mysql_calculate_address568:
0x0A6C	0x518C      	MOVF        Validadora_myTable+1, 0, 1
0x0A6E	0x5DBA      	SUBWF       Validadora_myTable+47, 0, 1
0x0A70	0xE253      	BC          L__mysql_calculate_address569
;table_eeprom.h,482 :: 		eeprom_i2c_read(myTable.addressAct, myTable.nameColAct, TABLE_MAX_SIZE_NAME+1);
0x0A72	0xF59EC3B8  	MOVFF       Validadora_myTable+45, FARG_eeprom_i2c_read_address
0x0A76	0xF59FC3B9  	MOVFF       Validadora_myTable+46, FARG_eeprom_i2c_read_address+1
0x0A7A	0x0EA2      	MOVLW       Validadora_myTable+23
0x0A7C	0x0105      	MOVLB       5
0x0A7E	0x6FA0      	MOVWF       FARG_eeprom_i2c_read_datos, 1
0x0A80	0x0E03      	MOVLW       hi_addr(Validadora_myTable+23)
0x0A82	0x6FA1      	MOVWF       FARG_eeprom_i2c_read_datos+1, 1
0x0A84	0x0E10      	MOVLW       16
0x0A86	0x6FA2      	MOVWF       FARG_eeprom_i2c_read_size, 1
0x0A88	0xDC6D      	RCALL       _eeprom_i2c_read
;table_eeprom.h,484 :: 		myTable.addressAct += TABLE_MAX_SIZE_NAME+1;
0x0A8A	0x0E10      	MOVLW       16
0x0A8C	0x0103      	MOVLB       3
0x0A8E	0x25B8      	ADDWF       Validadora_myTable+45, 0, 1
0x0A90	0x6E00      	MOVWF       R0 
0x0A92	0x0E00      	MOVLW       0
0x0A94	0x21B9      	ADDWFC      Validadora_myTable+46, 0, 1
0x0A96	0x6E01      	MOVWF       R1 
0x0A98	0xF3B8C000  	MOVFF       R0, Validadora_myTable+45
0x0A9C	0xF3B9C001  	MOVFF       R1, Validadora_myTable+46
;table_eeprom.h,485 :: 		eeprom_i2c_read(myTable.addressAct, &myTable.tamCol, 1); //1 de esta direccion
0x0AA0	0xF59EC000  	MOVFF       R0, FARG_eeprom_i2c_read_address
0x0AA4	0xF59FC001  	MOVFF       R1, FARG_eeprom_i2c_read_address+1
0x0AA8	0x0E91      	MOVLW       Validadora_myTable+6
0x0AAA	0x0105      	MOVLB       5
0x0AAC	0x6FA0      	MOVWF       FARG_eeprom_i2c_read_datos, 1
0x0AAE	0x0E03      	MOVLW       hi_addr(Validadora_myTable+6)
0x0AB0	0x6FA1      	MOVWF       FARG_eeprom_i2c_read_datos+1, 1
0x0AB2	0x0E01      	MOVLW       1
0x0AB4	0x6FA2      	MOVWF       FARG_eeprom_i2c_read_size, 1
0x0AB6	0xDC56      	RCALL       _eeprom_i2c_read
;table_eeprom.h,486 :: 		myTable.addressAct += 1;
0x0AB8	0x0E01      	MOVLW       1
0x0ABA	0x0103      	MOVLB       3
0x0ABC	0x25B8      	ADDWF       Validadora_myTable+45, 0, 1
0x0ABE	0x6E00      	MOVWF       R0 
0x0AC0	0x0E00      	MOVLW       0
0x0AC2	0x21B9      	ADDWFC      Validadora_myTable+46, 0, 1
0x0AC4	0x6E01      	MOVWF       R1 
0x0AC6	0xF3B8C000  	MOVFF       R0, Validadora_myTable+45
0x0ACA	0xF3B9C001  	MOVFF       R1, Validadora_myTable+46
;table_eeprom.h,488 :: 		if(!strncmp(column, myTable.nameColAct, TABLE_MAX_SIZE_NAME+1))
0x0ACE	0xF59EC592  	MOVFF       FARG__mysql_calculate_address_column, FARG_strncmp_s1
0x0AD2	0xF59FC593  	MOVFF       FARG__mysql_calculate_address_column+1, FARG_strncmp_s1+1
0x0AD6	0x0EA2      	MOVLW       Validadora_myTable+23
0x0AD8	0x0105      	MOVLB       5
0x0ADA	0x6FA0      	MOVWF       FARG_strncmp_s2, 1
0x0ADC	0x0E03      	MOVLW       hi_addr(Validadora_myTable+23)
0x0ADE	0x6FA1      	MOVWF       FARG_strncmp_s2+1, 1
0x0AE0	0x0E10      	MOVLW       16
0x0AE2	0x6FA2      	MOVWF       FARG_strncmp_len, 1
0x0AE4	0xDC80      	RCALL       _strncmp
0x0AE6	0x5000      	MOVF        R0, 0 
0x0AE8	0x1001      	IORWF       R1, 0 
0x0AEA	0xE101      	BNZ         L__mysql_calculate_address571
;table_eeprom.h,489 :: 		break;
0x0AEC	0xD015      	BRA         L__mysql_calculate_address569
L__mysql_calculate_address571:
;table_eeprom.h,491 :: 		addressAux += myTable.tamCol*myTable.row;   //Acumular las columnas para saber la direccion
0x0AEE	0xF000C391  	MOVFF       Validadora_myTable+6, R0
0x0AF2	0x0E00      	MOVLW       0
0x0AF4	0x6E01      	MOVWF       R1 
0x0AF6	0xF004C38D  	MOVFF       Validadora_myTable+2, R4
0x0AFA	0xF005C38E  	MOVFF       Validadora_myTable+3, R5
0x0AFE	0xDD40      	RCALL       _Mul_16X16_U
0x0B00	0x5000      	MOVF        R0, 0 
0x0B02	0x0105      	MOVLB       5
0x0B04	0x2794      	ADDWF       _mysql_calculate_address_addressAux_L0, 1, 1
0x0B06	0x5001      	MOVF        R1, 0 
0x0B08	0x2395      	ADDWFC      _mysql_calculate_address_addressAux_L0+1, 1, 1
;table_eeprom.h,480 :: 		for(myTable.cont = 0; myTable.cont < myTable.col; myTable.cont++){
0x0B0A	0x0103      	MOVLB       3
0x0B0C	0x51BA      	MOVF        Validadora_myTable+47, 0, 1
0x0B0E	0x0F01      	ADDLW       1
0x0B10	0x6E00      	MOVWF       R0 
0x0B12	0xF3BAC000  	MOVFF       R0, Validadora_myTable+47
;table_eeprom.h,493 :: 		}
0x0B16	0xD7AA      	BRA         L__mysql_calculate_address568
L__mysql_calculate_address569:
0x0B18	0x0103      	MOVLB       3
;table_eeprom.h,495 :: 		if(myTable.cont >= myTable.col){
0x0B1A	0x518C      	MOVF        Validadora_myTable+1, 0, 1
0x0B1C	0x5DBA      	SUBWF       Validadora_myTable+47, 0, 1
0x0B1E	0xE304      	BNC         L__mysql_calculate_address572
;table_eeprom.h,496 :: 		myTable.nameColAct[0] = 0;
0x0B20	0x6BA2      	CLRF        Validadora_myTable+23, 1
;table_eeprom.h,497 :: 		return TABLE_RW_NO_EXIST_NAME_COL;
0x0B22	0x0E02      	MOVLW       2
0x0B24	0x6E00      	MOVWF       R0 
0x0B26	0xD005      	BRA         L_end__mysql_calculate_address
;table_eeprom.h,498 :: 		}
L__mysql_calculate_address572:
;table_eeprom.h,499 :: 		myTable.addressAct = addressAux;
0x0B28	0xF3B8C594  	MOVFF       _mysql_calculate_address_addressAux_L0, Validadora_myTable+45
0x0B2C	0xF3B9C595  	MOVFF       _mysql_calculate_address_addressAux_L0+1, Validadora_myTable+46
;table_eeprom.h,500 :: 		}
L__mysql_calculate_address567:
;table_eeprom.h,502 :: 		return TABLE_RW_SUCCESS;
0x0B30	0x6A00      	CLRF        R0 
;table_eeprom.h,503 :: 		}
L_end__mysql_calculate_address:
0x0B32	0x0012      	RETURN      0
; end of __mysql_calculate_address
_Div_8X8_U:
;__Lib_Math.c,77 :: 		
;__Lib_Math.c,84 :: 		
0x0B34	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,85 :: 		
0x0B36	0x0E08      	MOVLW       8
;__Lib_Math.c,86 :: 		
0x0B38	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,87 :: 		
0x0B3A	0x3400      	RLCF        R0, 0, 0
;__Lib_Math.c,88 :: 		
0x0B3C	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,89 :: 		
0x0B3E	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,90 :: 		
0x0B40	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,91 :: 		
0x0B42	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,92 :: 		
0x0B44	0xD002      	BRA         $+6
;__Lib_Math.c,93 :: 		
0x0B46	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,94 :: 		
0x0B48	0x90D8      	BCF         STATUS, 0, 0
;__Lib_Math.c,95 :: 		
0x0B4A	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,96 :: 		
0x0B4C	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,97 :: 		
0x0B4E	0xD7F5      	BRA         $-20
;__Lib_Math.c,99 :: 		
L_end_Div_8X8_U:
0x0B50	0x0012      	RETURN      0
; end of _Div_8X8_U
_Lcd_Cmd:
;__Lib_Lcd.c,18 :: 		
;__Lib_Lcd.c,20 :: 		
0x0B52	0x0105      	MOVLB       5
0x0B54	0xBF90      	BTFSC       FARG_Lcd_Cmd_out_char, 7, 1
0x0B56	0xD002      	BRA         L__Lcd_Cmd21
0x0B58	0x9080      	BCF         LCD_D7, BitPos(LCD_D7+0) 
0x0B5A	0xD001      	BRA         L__Lcd_Cmd22
L__Lcd_Cmd21:
0x0B5C	0x8080      	BSF         LCD_D7, BitPos(LCD_D7+0) 
L__Lcd_Cmd22:
;__Lib_Lcd.c,21 :: 		
0x0B5E	0xBD90      	BTFSC       FARG_Lcd_Cmd_out_char, 6, 1
0x0B60	0xD002      	BRA         L__Lcd_Cmd23
0x0B62	0x9280      	BCF         LCD_D6, BitPos(LCD_D6+0) 
0x0B64	0xD001      	BRA         L__Lcd_Cmd24
L__Lcd_Cmd23:
0x0B66	0x8280      	BSF         LCD_D6, BitPos(LCD_D6+0) 
L__Lcd_Cmd24:
;__Lib_Lcd.c,22 :: 		
0x0B68	0xBB90      	BTFSC       FARG_Lcd_Cmd_out_char, 5, 1
0x0B6A	0xD002      	BRA         L__Lcd_Cmd25
0x0B6C	0x9480      	BCF         LCD_D5, BitPos(LCD_D5+0) 
0x0B6E	0xD001      	BRA         L__Lcd_Cmd26
L__Lcd_Cmd25:
0x0B70	0x8480      	BSF         LCD_D5, BitPos(LCD_D5+0) 
L__Lcd_Cmd26:
;__Lib_Lcd.c,23 :: 		
0x0B72	0xB990      	BTFSC       FARG_Lcd_Cmd_out_char, 4, 1
0x0B74	0xD002      	BRA         L__Lcd_Cmd27
0x0B76	0x9880      	BCF         LCD_D4, BitPos(LCD_D4+0) 
0x0B78	0xD001      	BRA         L__Lcd_Cmd28
L__Lcd_Cmd27:
0x0B7A	0x8880      	BSF         LCD_D4, BitPos(LCD_D4+0) 
L__Lcd_Cmd28:
;__Lib_Lcd.c,25 :: 		
0x0B7C	0x0103      	MOVLB       3
0x0B7E	0xB1BC      	BTFSC       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
0x0B80	0xD002      	BRA         L__Lcd_Cmd29
0x0B82	0x8484      	BSF         LCD_RS, BitPos(LCD_RS+0) 
0x0B84	0xD001      	BRA         L__Lcd_Cmd30
L__Lcd_Cmd29:
0x0B86	0x9484      	BCF         LCD_RS, BitPos(LCD_RS+0) 
L__Lcd_Cmd30:
;__Lib_Lcd.c,28 :: 		
0x0B88	0x8680      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,29 :: 		
0x0B8A	0xDD22      	RCALL       _Delay_1us
;__Lib_Lcd.c,30 :: 		
0x0B8C	0x9680      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,33 :: 		
0x0B8E	0x0105      	MOVLB       5
0x0B90	0xB790      	BTFSC       FARG_Lcd_Cmd_out_char, 3, 1
0x0B92	0xD002      	BRA         L__Lcd_Cmd31
0x0B94	0x9080      	BCF         LCD_D7, BitPos(LCD_D7+0) 
0x0B96	0xD001      	BRA         L__Lcd_Cmd32
L__Lcd_Cmd31:
0x0B98	0x8080      	BSF         LCD_D7, BitPos(LCD_D7+0) 
L__Lcd_Cmd32:
;__Lib_Lcd.c,34 :: 		
0x0B9A	0xB590      	BTFSC       FARG_Lcd_Cmd_out_char, 2, 1
0x0B9C	0xD002      	BRA         L__Lcd_Cmd33
0x0B9E	0x9280      	BCF         LCD_D6, BitPos(LCD_D6+0) 
0x0BA0	0xD001      	BRA         L__Lcd_Cmd34
L__Lcd_Cmd33:
0x0BA2	0x8280      	BSF         LCD_D6, BitPos(LCD_D6+0) 
L__Lcd_Cmd34:
;__Lib_Lcd.c,35 :: 		
0x0BA4	0xB390      	BTFSC       FARG_Lcd_Cmd_out_char, 1, 1
0x0BA6	0xD002      	BRA         L__Lcd_Cmd35
0x0BA8	0x9480      	BCF         LCD_D5, BitPos(LCD_D5+0) 
0x0BAA	0xD001      	BRA         L__Lcd_Cmd36
L__Lcd_Cmd35:
0x0BAC	0x8480      	BSF         LCD_D5, BitPos(LCD_D5+0) 
L__Lcd_Cmd36:
;__Lib_Lcd.c,36 :: 		
0x0BAE	0xB190      	BTFSC       FARG_Lcd_Cmd_out_char, 0, 1
0x0BB0	0xD002      	BRA         L__Lcd_Cmd37
0x0BB2	0x9880      	BCF         LCD_D4, BitPos(LCD_D4+0) 
0x0BB4	0xD001      	BRA         L__Lcd_Cmd38
L__Lcd_Cmd37:
0x0BB6	0x8880      	BSF         LCD_D4, BitPos(LCD_D4+0) 
L__Lcd_Cmd38:
;__Lib_Lcd.c,38 :: 		
0x0BB8	0x0103      	MOVLB       3
0x0BBA	0xB1BC      	BTFSC       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
0x0BBC	0xD002      	BRA         L__Lcd_Cmd39
0x0BBE	0x8484      	BSF         LCD_RS, BitPos(LCD_RS+0) 
0x0BC0	0xD001      	BRA         L__Lcd_Cmd40
L__Lcd_Cmd39:
0x0BC2	0x9484      	BCF         LCD_RS, BitPos(LCD_RS+0) 
L__Lcd_Cmd40:
;__Lib_Lcd.c,40 :: 		
0x0BC4	0x8680      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,41 :: 		
0x0BC6	0xDD04      	RCALL       _Delay_1us
;__Lib_Lcd.c,42 :: 		
0x0BC8	0x9680      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,44 :: 		
0x0BCA	0xA1BC      	BTFSS       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
0x0BCC	0xD002      	BRA         L_Lcd_Cmd0
;__Lib_Lcd.c,45 :: 		
0x0BCE	0xDC48      	RCALL       _Delay_5500us
0x0BD0	0xD001      	BRA         L_Lcd_Cmd1
L_Lcd_Cmd0:
;__Lib_Lcd.c,47 :: 		
0x0BD2	0xDDAE      	RCALL       _Delay_50us
L_Lcd_Cmd1:
;__Lib_Lcd.c,48 :: 		
L_end_Lcd_Cmd:
0x0BD4	0x0012      	RETURN      0
; end of _Lcd_Cmd
_Swap:
;__Lib_System.c,109 :: 		
;__Lib_System.c,110 :: 		
0x0BD6	0xF000C590  	MOVFF       FARG_Swap_input, R0
;__Lib_System.c,111 :: 		
0x0BDA	0x3A00      	SWAPF       R0, 1, 0
;__Lib_System.c,112 :: 		
;__Lib_System.c,113 :: 		
L_end_Swap:
0x0BDC	0x0012      	RETURN      0
; end of _Swap
_Soft_I2C_Start:
;__Lib_SoftI2C.c,146 :: 		
;__Lib_SoftI2C.c,147 :: 		
0x0BDE	0x8C95      	BSF         Soft_I2C_Sda_Direction, BitPos(Soft_I2C_Sda_Direction+0) 
;__Lib_SoftI2C.c,149 :: 		
0x0BE0	0xDCF7      	RCALL       _Delay_1us
0x0BE2	0xDCF6      	RCALL       _Delay_1us
;__Lib_SoftI2C.c,151 :: 		
0x0BE4	0x8296      	BSF         Soft_I2C_Scl_Direction, BitPos(Soft_I2C_Scl_Direction+0) 
;__Lib_SoftI2C.c,153 :: 		
0x0BE6	0xDCF4      	RCALL       _Delay_1us
0x0BE8	0xDCF3      	RCALL       _Delay_1us
;__Lib_SoftI2C.c,155 :: 		
0x0BEA	0xDDA8      	RCALL       __Lib_SoftI2C_PutZerosToLATSda
;__Lib_SoftI2C.c,156 :: 		
0x0BEC	0x9C95      	BCF         Soft_I2C_Sda_Direction, BitPos(Soft_I2C_Sda_Direction+0) 
;__Lib_SoftI2C.c,158 :: 		
0x0BEE	0xDCF0      	RCALL       _Delay_1us
0x0BF0	0xDCEF      	RCALL       _Delay_1us
;__Lib_SoftI2C.c,160 :: 		
0x0BF2	0xDDAD      	RCALL       __Lib_SoftI2C_PutZerosToLATScl
;__Lib_SoftI2C.c,161 :: 		
0x0BF4	0x9296      	BCF         Soft_I2C_Scl_Direction, BitPos(Soft_I2C_Scl_Direction+0) 
;__Lib_SoftI2C.c,164 :: 		
L_end_Soft_I2C_Start:
0x0BF6	0x0012      	RETURN      0
; end of _Soft_I2C_Start
_FIXSIGN32:
;__Lib_MathDouble.c,117 :: 		
;__Lib_MathDouble.c,121 :: 		
0x0BF8	0xAE0A      	BTFSS       R10, 7, 0
;__Lib_MathDouble.c,122 :: 		
0x0BFA	0x9E02      	BCF         R2, 7, 0
;__Lib_MathDouble.c,123 :: 		
0x0BFC	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,125 :: 		
L_end_FIXSIGN32:
0x0BFE	0x0012      	RETURN      0
; end of _FIXSIGN32
_SETFUN32:
;__Lib_MathDouble.c,144 :: 		
;__Lib_MathDouble.c,152 :: 		
0x0C00	0x840B      	BSF         R11, 2, 0
;__Lib_MathDouble.c,153 :: 		
0x0C02	0xAE0B      	BTFSS       R11, 7, 0
;__Lib_MathDouble.c,154 :: 		
0x0C04	0xF006EF0B  	GOTO        SETFUN32EEE
;__Lib_MathDouble.c,156 :: 		
0x0C08	0x0E01      	MOVLW       1
;__Lib_MathDouble.c,157 :: 		
0x0C0A	0x6E03      	MOVWF       R3, 0
;__Lib_MathDouble.c,158 :: 		
0x0C0C	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,159 :: 		
0x0C0E	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,160 :: 		
0x0C10	0x6A00      	CLRF        R0, 0
;__Lib_MathDouble.c,161 :: 		
0x0C12	0x360A      	RLCF        R10, 1, 0
;__Lib_MathDouble.c,162 :: 		
0x0C14	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,163 :: 		
SETFUN32EEE:
;__Lib_MathDouble.c,164 :: 		
0x0C16	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,166 :: 		
L_end_SETFUN32:
0x0C18	0x0012      	RETURN      0
; end of _SETFUN32
_Soft_I2C_Write:
;__Lib_SoftI2C.c,193 :: 		
;__Lib_SoftI2C.c,194 :: 		
0x0C1A	0x0E01      	MOVLW       1
0x0C1C	0x0105      	MOVLB       5
0x0C1E	0x6F89      	MOVWF       Soft_I2C_Write_result_L0, 1
0x0C20	0x0E00      	MOVLW       0
0x0C22	0x6F8A      	MOVWF       Soft_I2C_Write_result_L0+1, 1
;__Lib_SoftI2C.c,196 :: 		
0x0C24	0x0E80      	MOVLW       128
0x0C26	0x6F87      	MOVWF       Soft_I2C_Write_temp_L0, 1
0x0C28	0x0E00      	MOVLW       0
0x0C2A	0x6F88      	MOVWF       Soft_I2C_Write_temp_L0+1, 1
;__Lib_SoftI2C.c,198 :: 		
L_Soft_I2C_Write16:
0x0C2C	0x5187      	MOVF        Soft_I2C_Write_temp_L0, 0, 1
0x0C2E	0x1188      	IORWF       Soft_I2C_Write_temp_L0+1, 0, 1
0x0C30	0xE025      	BZ          L_Soft_I2C_Write17
;__Lib_SoftI2C.c,199 :: 		
0x0C32	0xDCCE      	RCALL       _Delay_1us
0x0C34	0xDCCD      	RCALL       _Delay_1us
;__Lib_SoftI2C.c,200 :: 		
0x0C36	0xDCCC      	RCALL       _Delay_1us
0x0C38	0xDCCB      	RCALL       _Delay_1us
;__Lib_SoftI2C.c,202 :: 		
0x0C3A	0xDD89      	RCALL       __Lib_SoftI2C_PutZerosToLATScl
;__Lib_SoftI2C.c,203 :: 		
0x0C3C	0x9296      	BCF         Soft_I2C_Scl_Direction, BitPos(Soft_I2C_Scl_Direction+0) 
;__Lib_SoftI2C.c,205 :: 		
0x0C3E	0xDCC8      	RCALL       _Delay_1us
0x0C40	0xDCC7      	RCALL       _Delay_1us
;__Lib_SoftI2C.c,207 :: 		
0x0C42	0x5187      	MOVF        Soft_I2C_Write_temp_L0, 0, 1
0x0C44	0x1586      	ANDWF       FARG_Soft_I2C_Write_data_, 0, 1
0x0C46	0x6E00      	MOVWF       R0 
0x0C48	0x0E00      	MOVLW       0
0x0C4A	0x1588      	ANDWF       Soft_I2C_Write_temp_L0+1, 0, 1
0x0C4C	0x6E01      	MOVWF       R1 
0x0C4E	0x5000      	MOVF        R0, 0 
0x0C50	0x1001      	IORWF       R1, 0 
0x0C52	0xE002      	BZ          L_Soft_I2C_Write18
;__Lib_SoftI2C.c,208 :: 		
0x0C54	0x8C95      	BSF         Soft_I2C_Sda_Direction, BitPos(Soft_I2C_Sda_Direction+0) 
;__Lib_SoftI2C.c,209 :: 		
0x0C56	0xD002      	BRA         L_Soft_I2C_Write19
L_Soft_I2C_Write18:
;__Lib_SoftI2C.c,211 :: 		
0x0C58	0xDD71      	RCALL       __Lib_SoftI2C_PutZerosToLATSda
;__Lib_SoftI2C.c,212 :: 		
0x0C5A	0x9C95      	BCF         Soft_I2C_Sda_Direction, BitPos(Soft_I2C_Sda_Direction+0) 
;__Lib_SoftI2C.c,213 :: 		
L_Soft_I2C_Write19:
;__Lib_SoftI2C.c,215 :: 		
0x0C5C	0xDCB9      	RCALL       _Delay_1us
0x0C5E	0xDCB8      	RCALL       _Delay_1us
;__Lib_SoftI2C.c,217 :: 		
0x0C60	0x8296      	BSF         Soft_I2C_Scl_Direction, BitPos(Soft_I2C_Scl_Direction+0) 
;__Lib_SoftI2C.c,219 :: 		
0x0C62	0x0103      	MOVLB       3
0x0C64	0x93BC      	BCF         __Lib_SoftI2C___StopWaiting, BitPos(__Lib_SoftI2C___StopWaiting+0), 1
;__Lib_SoftI2C.c,220 :: 		
L_Soft_I2C_Write20:
0x0C66	0xB284      	BTFSC       Soft_I2C_Scl, BitPos(Soft_I2C_Scl+0) 
0x0C68	0xD004      	BRA         L_Soft_I2C_Write21
;__Lib_SoftI2C.c,221 :: 		
0x0C6A	0xA3BC      	BTFSS       __Lib_SoftI2C___StopWaiting, BitPos(__Lib_SoftI2C___StopWaiting+0), 1
0x0C6C	0xD001      	BRA         L_Soft_I2C_Write22
;__Lib_SoftI2C.c,222 :: 		
0x0C6E	0xD001      	BRA         L_Soft_I2C_Write21
L_Soft_I2C_Write22:
0x0C70	0xD7FA      	BRA         L_Soft_I2C_Write20
L_Soft_I2C_Write21:
;__Lib_SoftI2C.c,224 :: 		
0x0C72	0x0105      	MOVLB       5
0x0C74	0x3388      	RRCF        Soft_I2C_Write_temp_L0+1, 1, 1
0x0C76	0x3387      	RRCF        Soft_I2C_Write_temp_L0, 1, 1
0x0C78	0x9F88      	BCF         Soft_I2C_Write_temp_L0+1, 7, 1
;__Lib_SoftI2C.c,225 :: 		
0x0C7A	0xD7D8      	BRA         L_Soft_I2C_Write16
L_Soft_I2C_Write17:
;__Lib_SoftI2C.c,227 :: 		
0x0C7C	0x6B89      	CLRF        Soft_I2C_Write_result_L0, 1
0x0C7E	0x6B8A      	CLRF        Soft_I2C_Write_result_L0+1, 1
;__Lib_SoftI2C.c,229 :: 		
0x0C80	0xDCA7      	RCALL       _Delay_1us
0x0C82	0xDCA6      	RCALL       _Delay_1us
;__Lib_SoftI2C.c,231 :: 		
0x0C84	0xDD64      	RCALL       __Lib_SoftI2C_PutZerosToLATScl
;__Lib_SoftI2C.c,232 :: 		
0x0C86	0x9296      	BCF         Soft_I2C_Scl_Direction, BitPos(Soft_I2C_Scl_Direction+0) 
;__Lib_SoftI2C.c,234 :: 		
0x0C88	0xDCA3      	RCALL       _Delay_1us
0x0C8A	0xDCA2      	RCALL       _Delay_1us
;__Lib_SoftI2C.c,236 :: 		
0x0C8C	0x8C95      	BSF         Soft_I2C_Sda_Direction, BitPos(Soft_I2C_Sda_Direction+0) 
;__Lib_SoftI2C.c,238 :: 		
0x0C8E	0xDCA0      	RCALL       _Delay_1us
0x0C90	0xDC9F      	RCALL       _Delay_1us
;__Lib_SoftI2C.c,239 :: 		
0x0C92	0xDC9E      	RCALL       _Delay_1us
0x0C94	0xDC9D      	RCALL       _Delay_1us
;__Lib_SoftI2C.c,241 :: 		
0x0C96	0x8296      	BSF         Soft_I2C_Scl_Direction, BitPos(Soft_I2C_Scl_Direction+0) 
;__Lib_SoftI2C.c,243 :: 		
0x0C98	0x0103      	MOVLB       3
0x0C9A	0x93BC      	BCF         __Lib_SoftI2C___StopWaiting, BitPos(__Lib_SoftI2C___StopWaiting+0), 1
;__Lib_SoftI2C.c,244 :: 		
L_Soft_I2C_Write23:
0x0C9C	0xB284      	BTFSC       Soft_I2C_Scl, BitPos(Soft_I2C_Scl+0) 
0x0C9E	0xD004      	BRA         L_Soft_I2C_Write24
;__Lib_SoftI2C.c,245 :: 		
0x0CA0	0xA3BC      	BTFSS       __Lib_SoftI2C___StopWaiting, BitPos(__Lib_SoftI2C___StopWaiting+0), 1
0x0CA2	0xD001      	BRA         L_Soft_I2C_Write25
;__Lib_SoftI2C.c,246 :: 		
0x0CA4	0xD001      	BRA         L_Soft_I2C_Write24
L_Soft_I2C_Write25:
0x0CA6	0xD7FA      	BRA         L_Soft_I2C_Write23
L_Soft_I2C_Write24:
;__Lib_SoftI2C.c,248 :: 		
0x0CA8	0x0105      	MOVLB       5
0x0CAA	0x6B89      	CLRF        Soft_I2C_Write_result_L0, 1
0x0CAC	0x6B8A      	CLRF        Soft_I2C_Write_result_L0+1, 1
;__Lib_SoftI2C.c,250 :: 		
0x0CAE	0xDC90      	RCALL       _Delay_1us
0x0CB0	0xDC8F      	RCALL       _Delay_1us
;__Lib_SoftI2C.c,252 :: 		
0x0CB2	0xBC83      	BTFSC       Soft_I2C_Sda, BitPos(Soft_I2C_Sda+0) 
;__Lib_SoftI2C.c,253 :: 		
0x0CB4	0x8189      	BSF         Soft_I2C_Write_result_L0, 0, 1
L_Soft_I2C_Write26:
;__Lib_SoftI2C.c,255 :: 		
0x0CB6	0xDC8C      	RCALL       _Delay_1us
0x0CB8	0xDC8B      	RCALL       _Delay_1us
;__Lib_SoftI2C.c,256 :: 		
0x0CBA	0xDC8A      	RCALL       _Delay_1us
0x0CBC	0xDC89      	RCALL       _Delay_1us
;__Lib_SoftI2C.c,257 :: 		
0x0CBE	0xDC88      	RCALL       _Delay_1us
0x0CC0	0xDC87      	RCALL       _Delay_1us
;__Lib_SoftI2C.c,258 :: 		
0x0CC2	0xDC86      	RCALL       _Delay_1us
0x0CC4	0xDC85      	RCALL       _Delay_1us
;__Lib_SoftI2C.c,259 :: 		
0x0CC6	0xDC84      	RCALL       _Delay_1us
0x0CC8	0xDC83      	RCALL       _Delay_1us
;__Lib_SoftI2C.c,260 :: 		
0x0CCA	0xDC82      	RCALL       _Delay_1us
0x0CCC	0xDC81      	RCALL       _Delay_1us
;__Lib_SoftI2C.c,261 :: 		
0x0CCE	0xDC80      	RCALL       _Delay_1us
0x0CD0	0xDC7F      	RCALL       _Delay_1us
;__Lib_SoftI2C.c,262 :: 		
0x0CD2	0xDC7E      	RCALL       _Delay_1us
0x0CD4	0xDC7D      	RCALL       _Delay_1us
;__Lib_SoftI2C.c,264 :: 		
0x0CD6	0xDD3B      	RCALL       __Lib_SoftI2C_PutZerosToLATScl
;__Lib_SoftI2C.c,265 :: 		
0x0CD8	0x9296      	BCF         Soft_I2C_Scl_Direction, BitPos(Soft_I2C_Scl_Direction+0) 
;__Lib_SoftI2C.c,266 :: 		
0x0CDA	0xDD30      	RCALL       __Lib_SoftI2C_PutZerosToLATSda
;__Lib_SoftI2C.c,267 :: 		
0x0CDC	0x9C95      	BCF         Soft_I2C_Sda_Direction, BitPos(Soft_I2C_Sda_Direction+0) 
;__Lib_SoftI2C.c,269 :: 		
0x0CDE	0xF000C589  	MOVFF       Soft_I2C_Write_result_L0, R0
;__Lib_SoftI2C.c,270 :: 		
L_end_Soft_I2C_Write:
0x0CE2	0x0012      	RETURN      0
; end of _Soft_I2C_Write
_decToBcd:
;miscelaneos.h,11 :: 		char decToBcd(char dato){
;miscelaneos.h,12 :: 		dato = swap(dato/10) + (dato%10);
0x0CE4	0x0E0A      	MOVLW       10
0x0CE6	0x6E04      	MOVWF       R4 
0x0CE8	0xF000C586  	MOVFF       FARG_decToBcd_dato, R0
0x0CEC	0xDF23      	RCALL       _Div_8X8_U
0x0CEE	0xF590C000  	MOVFF       R0, FARG_Swap_input
0x0CF2	0xDF71      	RCALL       _Swap
0x0CF4	0xF587C000  	MOVFF       R0, FLOC__decToBcd
0x0CF8	0x0E0A      	MOVLW       10
0x0CFA	0x6E04      	MOVWF       R4 
0x0CFC	0xF000C586  	MOVFF       FARG_decToBcd_dato, R0
0x0D00	0xDF19      	RCALL       _Div_8X8_U
0x0D02	0xF000C008  	MOVFF       R8, R0
0x0D06	0x0105      	MOVLB       5
0x0D08	0x5187      	MOVF        FLOC__decToBcd, 0, 1
0x0D0A	0x2600      	ADDWF       R0, 1 
0x0D0C	0xF586C000  	MOVFF       R0, FARG_decToBcd_dato
;miscelaneos.h,14 :: 		return dato;
;miscelaneos.h,15 :: 		}
L_end_decToBcd:
0x0D10	0x0012      	RETURN      0
; end of _decToBcd
_mysql_write_roundTrip:
;table_eeprom.h,353 :: 		char mysql_write_roundTrip(char *name, char *column, char *texto, char bytes){
;table_eeprom.h,354 :: 		char res = _mysql_calculate_address(name, column);
0x0D12	0xF590C586  	MOVFF       FARG_mysql_write_roundTrip_name, FARG__mysql_calculate_address_name
0x0D16	0xF591C587  	MOVFF       FARG_mysql_write_roundTrip_name+1, FARG__mysql_calculate_address_name+1
0x0D1A	0xF592C588  	MOVFF       FARG_mysql_write_roundTrip_column, FARG__mysql_calculate_address_column
0x0D1E	0xF593C589  	MOVFF       FARG_mysql_write_roundTrip_column+1, FARG__mysql_calculate_address_column+1
0x0D22	0xDE19      	RCALL       __mysql_calculate_address
0x0D24	0xF58DC000  	MOVFF       R0, mysql_write_roundTrip_res_L0
;table_eeprom.h,357 :: 		if(res)
0x0D28	0x5200      	MOVF        R0, 1 
0x0D2A	0xE003      	BZ          L_mysql_write_roundTrip538
;table_eeprom.h,358 :: 		return res;
0x0D2C	0xF000C58D  	MOVFF       mysql_write_roundTrip_res_L0, R0
0x0D30	0xD05F      	BRA         L_end_mysql_write_roundTrip
L_mysql_write_roundTrip538:
;table_eeprom.h,361 :: 		if(bytes > myTable.tamCol)
0x0D32	0x0105      	MOVLB       5
0x0D34	0x518C      	MOVF        FARG_mysql_write_roundTrip_bytes, 0, 1
0x0D36	0x0103      	MOVLB       3
0x0D38	0x5D91      	SUBWF       Validadora_myTable+6, 0, 1
0x0D3A	0xE203      	BC          L_mysql_write_roundTrip539
;table_eeprom.h,362 :: 		return TABLE_RW_OUT_RANGE;
0x0D3C	0x0E04      	MOVLW       4
0x0D3E	0x6E00      	MOVWF       R0 
0x0D40	0xD057      	BRA         L_end_mysql_write_roundTrip
L_mysql_write_roundTrip539:
;table_eeprom.h,365 :: 		myTable.rowAct = clamp_shift(++myTable.rowAct, 1, myTable.row);
0x0D42	0x0E01      	MOVLW       1
0x0D44	0x258F      	ADDWF       Validadora_myTable+4, 0, 1
0x0D46	0x6E00      	MOVWF       R0 
0x0D48	0x0E00      	MOVLW       0
0x0D4A	0x2190      	ADDWFC      Validadora_myTable+5, 0, 1
0x0D4C	0x6E01      	MOVWF       R1 
0x0D4E	0xF38FC000  	MOVFF       R0, Validadora_myTable+4
0x0D52	0xF390C001  	MOVFF       R1, Validadora_myTable+5
0x0D56	0xF590C38F  	MOVFF       Validadora_myTable+4, FARG_clamp_shift_valor
0x0D5A	0xF591C390  	MOVFF       Validadora_myTable+5, FARG_clamp_shift_valor+1
0x0D5E	0x0E00      	MOVLW       0
0x0D60	0x0105      	MOVLB       5
0x0D62	0x6F92      	MOVWF       FARG_clamp_shift_valor+2, 1
0x0D64	0x6F93      	MOVWF       FARG_clamp_shift_valor+3, 1
0x0D66	0x0E01      	MOVLW       1
0x0D68	0x6F94      	MOVWF       FARG_clamp_shift_min, 1
0x0D6A	0x0E00      	MOVLW       0
0x0D6C	0x6F95      	MOVWF       FARG_clamp_shift_min+1, 1
0x0D6E	0x6F96      	MOVWF       FARG_clamp_shift_min+2, 1
0x0D70	0x6F97      	MOVWF       FARG_clamp_shift_min+3, 1
0x0D72	0xF598C38D  	MOVFF       Validadora_myTable+2, FARG_clamp_shift_max
0x0D76	0xF599C38E  	MOVFF       Validadora_myTable+3, FARG_clamp_shift_max+1
0x0D7A	0x0E00      	MOVLW       0
0x0D7C	0x6F9A      	MOVWF       FARG_clamp_shift_max+2, 1
0x0D7E	0x6F9B      	MOVWF       FARG_clamp_shift_max+3, 1
0x0D80	0xDCEF      	RCALL       _clamp_shift
0x0D82	0xF38FC000  	MOVFF       R0, Validadora_myTable+4
0x0D86	0xF390C001  	MOVFF       R1, Validadora_myTable+5
;table_eeprom.h,366 :: 		eeprom_i2c_write(myTable.address+TABLE_MAX_SIZE_NAME+3, (char*)&myTable.rowAct, 2);
0x0D8A	0x0E0F      	MOVLW       15
0x0D8C	0x0103      	MOVLB       3
0x0D8E	0x25B6      	ADDWF       Validadora_myTable+43, 0, 1
0x0D90	0x0105      	MOVLB       5
0x0D92	0x6F90      	MOVWF       FARG_eeprom_i2c_write_address, 1
0x0D94	0x0E00      	MOVLW       0
0x0D96	0x0103      	MOVLB       3
0x0D98	0x21B7      	ADDWFC      Validadora_myTable+44, 0, 1
0x0D9A	0x0105      	MOVLB       5
0x0D9C	0x6F91      	MOVWF       FARG_eeprom_i2c_write_address+1, 1
0x0D9E	0x0E03      	MOVLW       3
0x0DA0	0x2790      	ADDWF       FARG_eeprom_i2c_write_address, 1, 1
0x0DA2	0x0E00      	MOVLW       0
0x0DA4	0x2391      	ADDWFC      FARG_eeprom_i2c_write_address+1, 1, 1
0x0DA6	0x0E8F      	MOVLW       Validadora_myTable+4
0x0DA8	0x6F92      	MOVWF       FARG_eeprom_i2c_write_datos, 1
0x0DAA	0x0E03      	MOVLW       hi_addr(Validadora_myTable+4)
0x0DAC	0x6F93      	MOVWF       FARG_eeprom_i2c_write_datos+1, 1
0x0DAE	0x0E02      	MOVLW       2
0x0DB0	0x6F94      	MOVWF       FARG_eeprom_i2c_write_size, 1
0x0DB2	0xDD11      	RCALL       _eeprom_i2c_write
;table_eeprom.h,367 :: 		eeprom_i2c_write(myTable.addressAct+(myTable.rowAct-1)*myTable.tamCol, texto, bytes);
0x0DB4	0x0E01      	MOVLW       1
0x0DB6	0x0103      	MOVLB       3
0x0DB8	0x5D8F      	SUBWF       Validadora_myTable+4, 0, 1
0x0DBA	0x6E00      	MOVWF       R0 
0x0DBC	0x0E00      	MOVLW       0
0x0DBE	0x5990      	SUBWFB      Validadora_myTable+5, 0, 1
0x0DC0	0x6E01      	MOVWF       R1 
0x0DC2	0xF004C391  	MOVFF       Validadora_myTable+6, R4
0x0DC6	0x0E00      	MOVLW       0
0x0DC8	0x6E05      	MOVWF       R5 
0x0DCA	0xF002ECC0  	CALL        _Mul_16X16_U, 0
0x0DCE	0x5000      	MOVF        R0, 0 
0x0DD0	0x25B8      	ADDWF       Validadora_myTable+45, 0, 1
0x0DD2	0x0105      	MOVLB       5
0x0DD4	0x6F90      	MOVWF       FARG_eeprom_i2c_write_address, 1
0x0DD6	0x5001      	MOVF        R1, 0 
0x0DD8	0x0103      	MOVLB       3
0x0DDA	0x21B9      	ADDWFC      Validadora_myTable+46, 0, 1
0x0DDC	0x0105      	MOVLB       5
0x0DDE	0x6F91      	MOVWF       FARG_eeprom_i2c_write_address+1, 1
0x0DE0	0xF592C58A  	MOVFF       FARG_mysql_write_roundTrip_texto, FARG_eeprom_i2c_write_datos
0x0DE4	0xF593C58B  	MOVFF       FARG_mysql_write_roundTrip_texto+1, FARG_eeprom_i2c_write_datos+1
0x0DE8	0xF594C58C  	MOVFF       FARG_mysql_write_roundTrip_bytes, FARG_eeprom_i2c_write_size
0x0DEC	0xDCF4      	RCALL       _eeprom_i2c_write
;table_eeprom.h,369 :: 		return TABLE_RW_SUCCESS;     //Exito en grabacion
0x0DEE	0x6A00      	CLRF        R0 
;table_eeprom.h,370 :: 		}
L_end_mysql_write_roundTrip:
0x0DF0	0x0012      	RETURN      0
; end of _mysql_write_roundTrip
_Lcd_Chr:
;__Lib_Lcd.c,65 :: 		
;__Lib_Lcd.c,66 :: 		
0x0DF2	0xD010      	BRA         L_Lcd_Chr4
;__Lib_Lcd.c,67 :: 		
L_Lcd_Chr6:
0x0DF4	0x0E80      	MOVLW       128
0x0DF6	0x0105      	MOVLB       5
0x0DF8	0x6F86      	MOVWF       FARG_Lcd_Chr_row, 1
0x0DFA	0xD01A      	BRA         L_Lcd_Chr5
;__Lib_Lcd.c,68 :: 		
L_Lcd_Chr7:
0x0DFC	0x0EC0      	MOVLW       192
0x0DFE	0x6F86      	MOVWF       FARG_Lcd_Chr_row, 1
0x0E00	0xD017      	BRA         L_Lcd_Chr5
;__Lib_Lcd.c,69 :: 		
L_Lcd_Chr8:
0x0E02	0x0E94      	MOVLW       148
0x0E04	0x6F86      	MOVWF       FARG_Lcd_Chr_row, 1
0x0E06	0xD014      	BRA         L_Lcd_Chr5
;__Lib_Lcd.c,70 :: 		
L_Lcd_Chr9:
0x0E08	0x0ED4      	MOVLW       212
0x0E0A	0x6F86      	MOVWF       FARG_Lcd_Chr_row, 1
0x0E0C	0xD011      	BRA         L_Lcd_Chr5
;__Lib_Lcd.c,71 :: 		
L_Lcd_Chr10:
0x0E0E	0x0E80      	MOVLW       128
0x0E10	0x6F86      	MOVWF       FARG_Lcd_Chr_row, 1
;__Lib_Lcd.c,72 :: 		
0x0E12	0xD00E      	BRA         L_Lcd_Chr5
L_Lcd_Chr4:
0x0E14	0x0105      	MOVLB       5
0x0E16	0x5186      	MOVF        FARG_Lcd_Chr_row, 0, 1
0x0E18	0x0A01      	XORLW       1
0x0E1A	0xE0EC      	BZ          L_Lcd_Chr6
0x0E1C	0x5186      	MOVF        FARG_Lcd_Chr_row, 0, 1
0x0E1E	0x0A02      	XORLW       2
0x0E20	0xE0ED      	BZ          L_Lcd_Chr7
0x0E22	0x5186      	MOVF        FARG_Lcd_Chr_row, 0, 1
0x0E24	0x0A03      	XORLW       3
0x0E26	0xE0ED      	BZ          L_Lcd_Chr8
0x0E28	0x5186      	MOVF        FARG_Lcd_Chr_row, 0, 1
0x0E2A	0x0A04      	XORLW       4
0x0E2C	0xE0ED      	BZ          L_Lcd_Chr9
0x0E2E	0xD7EF      	BRA         L_Lcd_Chr10
L_Lcd_Chr5:
;__Lib_Lcd.c,74 :: 		
0x0E30	0x0587      	DECF        FARG_Lcd_Chr_column, 0, 1
0x0E32	0x6E00      	MOVWF       R0 
0x0E34	0x5186      	MOVF        FARG_Lcd_Chr_row, 0, 1
0x0E36	0x2600      	ADDWF       R0, 1 
0x0E38	0xF586C000  	MOVFF       R0, FARG_Lcd_Chr_row
;__Lib_Lcd.c,76 :: 		
0x0E3C	0x0103      	MOVLB       3
0x0E3E	0x81BC      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,77 :: 		
0x0E40	0xF590C000  	MOVFF       R0, FARG_Lcd_Cmd_out_char
0x0E44	0xDE86      	RCALL       _Lcd_Cmd
;__Lib_Lcd.c,79 :: 		
0x0E46	0x91BC      	BCF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,80 :: 		
0x0E48	0xF590C588  	MOVFF       FARG_Lcd_Chr_out_char, FARG_Lcd_Cmd_out_char
0x0E4C	0xDE82      	RCALL       _Lcd_Cmd
;__Lib_Lcd.c,81 :: 		
0x0E4E	0x81BC      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,82 :: 		
L_end_Lcd_Chr:
0x0E50	0x0012      	RETURN      0
; end of _Lcd_Chr
_RES032:
;__Lib_MathDouble.c,128 :: 		
;__Lib_MathDouble.c,134 :: 		
0x0E52	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,135 :: 		
0x0E54	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,136 :: 		
0x0E56	0x6A00      	CLRF        R0, 0
;__Lib_MathDouble.c,137 :: 		
0x0E58	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,138 :: 		
0x0E5A	0x6A03      	CLRF        R3, 0
;__Lib_MathDouble.c,139 :: 		
0x0E5C	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,141 :: 		
L_end_RES032:
0x0E5E	0x0012      	RETURN      0
; end of _RES032
_Lcd_Chr_CP:
;__Lib_Lcd.c,50 :: 		
;__Lib_Lcd.c,52 :: 		
0x0E60	0x0103      	MOVLB       3
0x0E62	0x91BC      	BCF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,53 :: 		
0x0E64	0xF590C586  	MOVFF       FARG_Lcd_Chr_CP_out_char, FARG_Lcd_Cmd_out_char
0x0E68	0xDE74      	RCALL       _Lcd_Cmd
;__Lib_Lcd.c,54 :: 		
0x0E6A	0x81BC      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,55 :: 		
L_end_Lcd_Chr_CP:
0x0E6C	0x0012      	RETURN      0
; end of _Lcd_Chr_CP
_strlen:
;__Lib_CString.c,136 :: 		
;__Lib_CString.c,139 :: 		
0x0E6E	0xF002C586  	MOVFF       FARG_strlen_s, R2
0x0E72	0xF003C587  	MOVFF       FARG_strlen_s+1, R3
;__Lib_CString.c,140 :: 		
L_strlen36:
0x0E76	0xF000C002  	MOVFF       R2, R0
0x0E7A	0xF001C003  	MOVFF       R3, R1
0x0E7E	0x4A02      	INFSNZ      R2, 1 
0x0E80	0x2A03      	INCF        R3, 1 
0x0E82	0xFFE9C000  	MOVFF       R0, FSR0L
0x0E86	0xFFEAC001  	MOVFF       R1, FSR0H
0x0E8A	0x52EE      	MOVF        POSTINC0, 1 
0x0E8C	0xE001      	BZ          L_strlen37
;__Lib_CString.c,141 :: 		
0x0E8E	0xD7F3      	BRA         L_strlen36
L_strlen37:
;__Lib_CString.c,142 :: 		
0x0E90	0x0105      	MOVLB       5
0x0E92	0x5186      	MOVF        FARG_strlen_s, 0, 1
0x0E94	0x5C02      	SUBWF       R2, 0 
0x0E96	0x6E00      	MOVWF       R0 
0x0E98	0x5187      	MOVF        FARG_strlen_s+1, 0, 1
0x0E9A	0x5803      	SUBWFB      R3, 0 
0x0E9C	0x6E01      	MOVWF       R1 
0x0E9E	0x0E01      	MOVLW       1
0x0EA0	0x5E00      	SUBWF       R0, 1 
0x0EA2	0x0E00      	MOVLW       0
0x0EA4	0x5A01      	SUBWFB      R1, 1 
;__Lib_CString.c,143 :: 		
L_end_strlen:
0x0EA6	0x0012      	RETURN      0
; end of _strlen
_can_write_text:
;lib_can.h,157 :: 		bool can_write_text(long ipAddress, char *texto, char priority){
;lib_can.h,159 :: 		if(!can.txQueu && !can.rxBusy){
0x0EA8	0x0103      	MOVLB       3
0x0EAA	0x53E0      	MOVF        _can+33, 1, 1
0x0EAC	0xE13C      	BNZ         L_can_write_text193
0x0EAE	0x0104      	MOVLB       4
0x0EB0	0x5329      	MOVF        _can+106, 1, 1
0x0EB2	0xE139      	BNZ         L_can_write_text193
L__can_write_text931:
;lib_can.h,160 :: 		can.txSize = 0;
0x0EB4	0x0103      	MOVLB       3
0x0EB6	0x6BE2      	CLRF        _can+35, 1
;lib_can.h,161 :: 		can.txQueu = true;
0x0EB8	0x0E01      	MOVLW       1
0x0EBA	0x6FE0      	MOVWF       _can+33, 1
;lib_can.h,162 :: 		can.txId = ipAddress;      //Conecta a la red + el id
0x0EBC	0xF3E4C586  	MOVFF       FARG_can_write_text_ipAddress, _can+37
0x0EC0	0xF3E5C587  	MOVFF       FARG_can_write_text_ipAddress+1, _can+38
0x0EC4	0xF3E6C588  	MOVFF       FARG_can_write_text_ipAddress+2, _can+39
0x0EC8	0xF3E7C589  	MOVFF       FARG_can_write_text_ipAddress+3, _can+40
;lib_can.h,163 :: 		can.txPriority = priority;
0x0ECC	0xF3E3C58C  	MOVFF       FARG_can_write_text_priority, _can+36
;lib_can.h,165 :: 		while(true){
L_can_write_text194:
0x0ED0	0x0103      	MOVLB       3
;lib_can.h,166 :: 		can.txBuffer[can.txSize] = texto[can.txSize];
0x0ED2	0x0EE8      	MOVLW       _can+41
0x0ED4	0x6EE1      	MOVWF       FSR1L 
0x0ED6	0x0E03      	MOVLW       hi_addr(_can+41)
0x0ED8	0x6EE2      	MOVWF       FSR1H 
0x0EDA	0x51E2      	MOVF        _can+35, 0, 1
0x0EDC	0x26E1      	ADDWF       FSR1L, 1 
0x0EDE	0xB0D8      	BTFSC       STATUS, 0 
0x0EE0	0x2AE2      	INCF        FSR1H, 1 
0x0EE2	0x51E2      	MOVF        _can+35, 0, 1
0x0EE4	0x0105      	MOVLB       5
0x0EE6	0x258A      	ADDWF       FARG_can_write_text_texto, 0, 1
0x0EE8	0x6EE9      	MOVWF       FSR0L 
0x0EEA	0x0E00      	MOVLW       0
0x0EEC	0x218B      	ADDWFC      FARG_can_write_text_texto+1, 0, 1
0x0EEE	0x6EEA      	MOVWF       FSR0H 
0x0EF0	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
;lib_can.h,168 :: 		if(texto[can.txSize])
0x0EF4	0x0103      	MOVLB       3
0x0EF6	0x51E2      	MOVF        _can+35, 0, 1
0x0EF8	0x0105      	MOVLB       5
0x0EFA	0x258A      	ADDWF       FARG_can_write_text_texto, 0, 1
0x0EFC	0x6EE9      	MOVWF       FSR0L 
0x0EFE	0x0E00      	MOVLW       0
0x0F00	0x218B      	ADDWFC      FARG_can_write_text_texto+1, 0, 1
0x0F02	0x6EEA      	MOVWF       FSR0H 
0x0F04	0x52EE      	MOVF        POSTINC0, 1 
0x0F06	0xE007      	BZ          L_can_write_text196
;lib_can.h,169 :: 		can.txSize++;
0x0F08	0x0103      	MOVLB       3
0x0F0A	0x51E2      	MOVF        _can+35, 0, 1
0x0F0C	0x0F01      	ADDLW       1
0x0F0E	0x6E00      	MOVWF       R0 
0x0F10	0xF3E2C000  	MOVFF       R0, _can+35
0x0F14	0xD001      	BRA         L_can_write_text197
L_can_write_text196:
;lib_can.h,171 :: 		break;
0x0F16	0xD001      	BRA         L_can_write_text195
L_can_write_text197:
;lib_can.h,172 :: 		}
0x0F18	0xD7DB      	BRA         L_can_write_text194
L_can_write_text195:
;lib_can.h,173 :: 		can.temp = 0;
0x0F1A	0x0104      	MOVLB       4
0x0F1C	0x6B6C      	CLRF        _can+173, 1
0x0F1E	0x6B6D      	CLRF        _can+174, 1
;lib_can.h,174 :: 		return true; //Datos encolados
0x0F20	0x0E01      	MOVLW       1
0x0F22	0x6E00      	MOVWF       R0 
0x0F24	0xD001      	BRA         L_end_can_write_text
;lib_can.h,175 :: 		}
L_can_write_text193:
;lib_can.h,177 :: 		return false;
0x0F26	0x6A00      	CLRF        R0 
;lib_can.h,178 :: 		}
L_end_can_write_text:
0x0F28	0x0012      	RETURN      0
; end of _can_write_text
_string_len:
;string.h,96 :: 		char string_len(char *texto){
;string.h,97 :: 		char cont = 0;
0x0F2A	0x0105      	MOVLB       5
0x0F2C	0x6B88      	CLRF        string_len_cont_L0, 1
;string.h,98 :: 		while(texto[cont])
L_string_len30:
0x0F2E	0x5188      	MOVF        string_len_cont_L0, 0, 1
0x0F30	0x2586      	ADDWF       FARG_string_len_texto, 0, 1
0x0F32	0x6EE9      	MOVWF       FSR0L 
0x0F34	0x0E00      	MOVLW       0
0x0F36	0x2187      	ADDWFC      FARG_string_len_texto+1, 0, 1
0x0F38	0x6EEA      	MOVWF       FSR0H 
0x0F3A	0x52EE      	MOVF        POSTINC0, 1 
0x0F3C	0xE002      	BZ          L_string_len31
;string.h,99 :: 		cont++;
0x0F3E	0x2B88      	INCF        string_len_cont_L0, 1, 1
0x0F40	0xD7F6      	BRA         L_string_len30
L_string_len31:
;string.h,101 :: 		return cont;
0x0F42	0xF000C588  	MOVFF       string_len_cont_L0, R0
;string.h,102 :: 		}
L_end_string_len:
0x0F46	0x0012      	RETURN      0
; end of _string_len
_string_isNumeric:
;string.h,156 :: 		bool string_isNumeric(char *cadena){
;string.h,157 :: 		char cont = 0;
0x0F48	0x0105      	MOVLB       5
0x0F4A	0x6B88      	CLRF        string_isNumeric_cont_L0, 1
;string.h,159 :: 		while(cadena[cont] != 0){
L_string_isNumeric56:
0x0F4C	0x5188      	MOVF        string_isNumeric_cont_L0, 0, 1
0x0F4E	0x2586      	ADDWF       FARG_string_isNumeric_cadena, 0, 1
0x0F50	0x6EE9      	MOVWF       FSR0L 
0x0F52	0x0E00      	MOVLW       0
0x0F54	0x2187      	ADDWFC      FARG_string_isNumeric_cadena+1, 0, 1
0x0F56	0x6EEA      	MOVWF       FSR0H 
0x0F58	0x50EE      	MOVF        POSTINC0, 0 
0x0F5A	0x0A00      	XORLW       0
0x0F5C	0xE017      	BZ          L_string_isNumeric57
;string.h,160 :: 		if(cadena[cont] < '0' || cadena[cont] > '9')
0x0F5E	0x5188      	MOVF        string_isNumeric_cont_L0, 0, 1
0x0F60	0x2586      	ADDWF       FARG_string_isNumeric_cadena, 0, 1
0x0F62	0x6EE9      	MOVWF       FSR0L 
0x0F64	0x0E00      	MOVLW       0
0x0F66	0x2187      	ADDWFC      FARG_string_isNumeric_cadena+1, 0, 1
0x0F68	0x6EEA      	MOVWF       FSR0H 
0x0F6A	0x0E30      	MOVLW       48
0x0F6C	0x5CEE      	SUBWF       POSTINC0, 0 
0x0F6E	0xE30A      	BNC         L__string_isNumeric921
0x0F70	0x5188      	MOVF        string_isNumeric_cont_L0, 0, 1
0x0F72	0x2586      	ADDWF       FARG_string_isNumeric_cadena, 0, 1
0x0F74	0x6EE9      	MOVWF       FSR0L 
0x0F76	0x0E00      	MOVLW       0
0x0F78	0x2187      	ADDWFC      FARG_string_isNumeric_cadena+1, 0, 1
0x0F7A	0x6EEA      	MOVWF       FSR0H 
0x0F7C	0x50EE      	MOVF        POSTINC0, 0 
0x0F7E	0x0839      	SUBLW       57
0x0F80	0xE301      	BNC         L__string_isNumeric921
0x0F82	0xD002      	BRA         L_string_isNumeric60
L__string_isNumeric921:
;string.h,161 :: 		return false;
0x0F84	0x6A00      	CLRF        R0 
0x0F86	0xD009      	BRA         L_end_string_isNumeric
L_string_isNumeric60:
;string.h,162 :: 		cont++;
0x0F88	0x2B88      	INCF        string_isNumeric_cont_L0, 1, 1
;string.h,163 :: 		}
0x0F8A	0xD7E0      	BRA         L_string_isNumeric56
L_string_isNumeric57:
;string.h,165 :: 		if(cont != 0)
0x0F8C	0x5188      	MOVF        string_isNumeric_cont_L0, 0, 1
0x0F8E	0x0A00      	XORLW       0
0x0F90	0xE003      	BZ          L_string_isNumeric61
;string.h,166 :: 		return true;
0x0F92	0x0E01      	MOVLW       1
0x0F94	0x6E00      	MOVWF       R0 
0x0F96	0xD001      	BRA         L_end_string_isNumeric
L_string_isNumeric61:
;string.h,168 :: 		return false;
0x0F98	0x6A00      	CLRF        R0 
;string.h,169 :: 		}
L_end_string_isNumeric:
0x0F9A	0x0012      	RETURN      0
; end of _string_isNumeric
_stringToNumN:
;string.h,171 :: 		long stringToNumN(char *cadena, char size){
;string.h,173 :: 		long numero = 0;
0x0F9C	0x0105      	MOVLB       5
0x0F9E	0x6B8A      	CLRF        stringToNumN_numero_L0, 1
0x0FA0	0x6B8B      	CLRF        stringToNumN_numero_L0+1, 1
0x0FA2	0x6B8C      	CLRF        stringToNumN_numero_L0+2, 1
0x0FA4	0x6B8D      	CLRF        stringToNumN_numero_L0+3, 1
;string.h,176 :: 		for(cont = 0; cont < size && cadena[cont] != 0; cont++){
0x0FA6	0x6B89      	CLRF        stringToNumN_cont_L0, 1
L_stringToNumN63:
0x0FA8	0x5188      	MOVF        FARG_stringToNumN_size, 0, 1
0x0FAA	0x5D89      	SUBWF       stringToNumN_cont_L0, 0, 1
0x0FAC	0xE23E      	BC          L_stringToNumN64
0x0FAE	0x5189      	MOVF        stringToNumN_cont_L0, 0, 1
0x0FB0	0x2586      	ADDWF       FARG_stringToNumN_cadena, 0, 1
0x0FB2	0x6EE9      	MOVWF       FSR0L 
0x0FB4	0x0E00      	MOVLW       0
0x0FB6	0x2187      	ADDWFC      FARG_stringToNumN_cadena+1, 0, 1
0x0FB8	0x6EEA      	MOVWF       FSR0H 
0x0FBA	0x50EE      	MOVF        POSTINC0, 0 
0x0FBC	0x0A00      	XORLW       0
0x0FBE	0xE035      	BZ          L_stringToNumN64
L__stringToNumN922:
;string.h,177 :: 		numero *= 10;
0x0FC0	0xF000C58A  	MOVFF       stringToNumN_numero_L0, R0
0x0FC4	0xF001C58B  	MOVFF       stringToNumN_numero_L0+1, R1
0x0FC8	0xF002C58C  	MOVFF       stringToNumN_numero_L0+2, R2
0x0FCC	0xF003C58D  	MOVFF       stringToNumN_numero_L0+3, R3
0x0FD0	0x0E0A      	MOVLW       10
0x0FD2	0x6E04      	MOVWF       R4 
0x0FD4	0x0E00      	MOVLW       0
0x0FD6	0x6E05      	MOVWF       R5 
0x0FD8	0x6E06      	MOVWF       R6 
0x0FDA	0x6E07      	MOVWF       R7 
0x0FDC	0xDC3A      	RCALL       _Mul_32x32_U
0x0FDE	0xF58AC000  	MOVFF       R0, stringToNumN_numero_L0
0x0FE2	0xF58BC001  	MOVFF       R1, stringToNumN_numero_L0+1
0x0FE6	0xF58CC002  	MOVFF       R2, stringToNumN_numero_L0+2
0x0FEA	0xF58DC003  	MOVFF       R3, stringToNumN_numero_L0+3
;string.h,178 :: 		numero += cadena[cont]-'0';
0x0FEE	0x5189      	MOVF        stringToNumN_cont_L0, 0, 1
0x0FF0	0x2586      	ADDWF       FARG_stringToNumN_cadena, 0, 1
0x0FF2	0x6EE9      	MOVWF       FSR0L 
0x0FF4	0x0E00      	MOVLW       0
0x0FF6	0x2187      	ADDWFC      FARG_stringToNumN_cadena+1, 0, 1
0x0FF8	0x6EEA      	MOVWF       FSR0H 
0x0FFA	0x0E30      	MOVLW       48
0x0FFC	0x5CEE      	SUBWF       POSTINC0, 0 
0x0FFE	0x6E04      	MOVWF       R4 
0x1000	0x6A05      	CLRF        R5 
0x1002	0x0E00      	MOVLW       0
0x1004	0x5A05      	SUBWFB      R5, 1 
0x1006	0x5004      	MOVF        R4, 0 
0x1008	0x2400      	ADDWF       R0, 0 
0x100A	0x6F8A      	MOVWF       stringToNumN_numero_L0, 1
0x100C	0x5005      	MOVF        R5, 0 
0x100E	0x2001      	ADDWFC      R1, 0 
0x1010	0x6F8B      	MOVWF       stringToNumN_numero_L0+1, 1
0x1012	0x0E00      	MOVLW       0
0x1014	0xBE05      	BTFSC       R5, 7 
0x1016	0x0EFF      	MOVLW       255
0x1018	0x2002      	ADDWFC      R2, 0 
0x101A	0x6F8C      	MOVWF       stringToNumN_numero_L0+2, 1
0x101C	0x0E00      	MOVLW       0
0x101E	0xBE05      	BTFSC       R5, 7 
0x1020	0x0EFF      	MOVLW       255
0x1022	0x2003      	ADDWFC      R3, 0 
0x1024	0x6F8D      	MOVWF       stringToNumN_numero_L0+3, 1
;string.h,176 :: 		for(cont = 0; cont < size && cadena[cont] != 0; cont++){
0x1026	0x2B89      	INCF        stringToNumN_cont_L0, 1, 1
;string.h,179 :: 		}
0x1028	0xD7BF      	BRA         L_stringToNumN63
L_stringToNumN64:
;string.h,181 :: 		return numero;
0x102A	0xF000C58A  	MOVFF       stringToNumN_numero_L0, R0
0x102E	0xF001C58B  	MOVFF       stringToNumN_numero_L0+1, R1
0x1032	0xF002C58C  	MOVFF       stringToNumN_numero_L0+2, R2
0x1036	0xF003C58D  	MOVFF       stringToNumN_numero_L0+3, R3
;string.h,182 :: 		}
L_end_stringToNumN:
0x103A	0x0012      	RETURN      0
; end of _stringToNumN
_SETFOV32:
;__Lib_MathDouble.c,82 :: 		
;__Lib_MathDouble.c,90 :: 		
0x103C	0x820B      	BSF         R11, 1, 0
;__Lib_MathDouble.c,91 :: 		
0x103E	0xAE0B      	BTFSS       R11, 7, 0
;__Lib_MathDouble.c,92 :: 		
0x1040	0xF008EF28  	GOTO        SETFOV32EEE
;__Lib_MathDouble.c,94 :: 		
0x1044	0x6803      	SETF        R3, 0
;__Lib_MathDouble.c,95 :: 		
0x1046	0x6802      	SETF        R2, 0
;__Lib_MathDouble.c,96 :: 		
0x1048	0x6801      	SETF        R1, 0
;__Lib_MathDouble.c,97 :: 		
0x104A	0x6800      	SETF        R0, 0
;__Lib_MathDouble.c,98 :: 		
0x104C	0x360A      	RLCF        R10, 1, 0
;__Lib_MathDouble.c,99 :: 		
0x104E	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,100 :: 		
SETFOV32EEE:
;__Lib_MathDouble.c,101 :: 		
0x1050	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,103 :: 		
L_end_SETFOV32:
0x1052	0x0012      	RETURN      0
; end of _SETFOV32
_mysql_read_forced:
;table_eeprom.h,258 :: 		char mysql_read_forced(char *name, char *column, int fila, char *result){
;table_eeprom.h,259 :: 		char res = _mysql_calculate_address(name, column);
0x1054	0xF590C586  	MOVFF       FARG_mysql_read_forced_name, FARG__mysql_calculate_address_name
0x1058	0xF591C587  	MOVFF       FARG_mysql_read_forced_name+1, FARG__mysql_calculate_address_name+1
0x105C	0xF592C588  	MOVFF       FARG_mysql_read_forced_column, FARG__mysql_calculate_address_column
0x1060	0xF593C589  	MOVFF       FARG_mysql_read_forced_column+1, FARG__mysql_calculate_address_column+1
0x1064	0xDC78      	RCALL       __mysql_calculate_address
0x1066	0xF58EC000  	MOVFF       R0, mysql_read_forced_res_L0
;table_eeprom.h,262 :: 		if(res)
0x106A	0x5200      	MOVF        R0, 1 
0x106C	0xE003      	BZ          L_mysql_read_forced507
;table_eeprom.h,263 :: 		return res;
0x106E	0xF000C58E  	MOVFF       mysql_read_forced_res_L0, R0
0x1072	0xD037      	BRA         L_end_mysql_read_forced
L_mysql_read_forced507:
;table_eeprom.h,266 :: 		if(fila >= 1 && fila <= myTable.row)
0x1074	0x0E80      	MOVLW       128
0x1076	0x0105      	MOVLB       5
0x1078	0x198B      	XORWF       FARG_mysql_read_forced_fila+1, 0, 1
0x107A	0x6E00      	MOVWF       R0 
0x107C	0x0E80      	MOVLW       128
0x107E	0x5C00      	SUBWF       R0, 0 
0x1080	0xE102      	BNZ         L__mysql_read_forced1264
0x1082	0x0E01      	MOVLW       1
0x1084	0x5D8A      	SUBWF       FARG_mysql_read_forced_fila, 0, 1
L__mysql_read_forced1264:
0x1086	0xE329      	BNC         L_mysql_read_forced510
0x1088	0x518B      	MOVF        FARG_mysql_read_forced_fila+1, 0, 1
0x108A	0x0103      	MOVLB       3
0x108C	0x5D8E      	SUBWF       Validadora_myTable+3, 0, 1
0x108E	0xE104      	BNZ         L__mysql_read_forced1265
0x1090	0x0105      	MOVLB       5
0x1092	0x518A      	MOVF        FARG_mysql_read_forced_fila, 0, 1
0x1094	0x0103      	MOVLB       3
0x1096	0x5D8D      	SUBWF       Validadora_myTable+2, 0, 1
L__mysql_read_forced1265:
0x1098	0xE320      	BNC         L_mysql_read_forced510
L__mysql_read_forced964:
;table_eeprom.h,267 :: 		eeprom_i2c_read(myTable.addressAct+(fila-1)*myTable.tamCol, result, myTable.tamCol);
0x109A	0x0E01      	MOVLW       1
0x109C	0x0105      	MOVLB       5
0x109E	0x5D8A      	SUBWF       FARG_mysql_read_forced_fila, 0, 1
0x10A0	0x6E00      	MOVWF       R0 
0x10A2	0x0E00      	MOVLW       0
0x10A4	0x598B      	SUBWFB      FARG_mysql_read_forced_fila+1, 0, 1
0x10A6	0x6E01      	MOVWF       R1 
0x10A8	0xF004C391  	MOVFF       Validadora_myTable+6, R4
0x10AC	0x0E00      	MOVLW       0
0x10AE	0x6E05      	MOVWF       R5 
0x10B0	0xF002ECC0  	CALL        _Mul_16X16_U, 0
0x10B4	0x5000      	MOVF        R0, 0 
0x10B6	0x0103      	MOVLB       3
0x10B8	0x25B8      	ADDWF       Validadora_myTable+45, 0, 1
0x10BA	0x0105      	MOVLB       5
0x10BC	0x6F9E      	MOVWF       FARG_eeprom_i2c_read_address, 1
0x10BE	0x5001      	MOVF        R1, 0 
0x10C0	0x0103      	MOVLB       3
0x10C2	0x21B9      	ADDWFC      Validadora_myTable+46, 0, 1
0x10C4	0x0105      	MOVLB       5
0x10C6	0x6F9F      	MOVWF       FARG_eeprom_i2c_read_address+1, 1
0x10C8	0xF5A0C58C  	MOVFF       FARG_mysql_read_forced_result, FARG_eeprom_i2c_read_datos
0x10CC	0xF5A1C58D  	MOVFF       FARG_mysql_read_forced_result+1, FARG_eeprom_i2c_read_datos+1
0x10D0	0xF5A2C391  	MOVFF       Validadora_myTable+6, FARG_eeprom_i2c_read_size
0x10D4	0xF001ECB2  	CALL        _eeprom_i2c_read, 0
0x10D8	0xD003      	BRA         L_mysql_read_forced511
L_mysql_read_forced510:
;table_eeprom.h,269 :: 		return TABLE_RW_NO_EXIST_ROW;   //Fila inexistente
0x10DA	0x0E03      	MOVLW       3
0x10DC	0x6E00      	MOVWF       R0 
0x10DE	0xD001      	BRA         L_end_mysql_read_forced
L_mysql_read_forced511:
;table_eeprom.h,271 :: 		return TABLE_RW_SUCCESS;     //Exito en la busqueda
0x10E0	0x6A00      	CLRF        R0 
;table_eeprom.h,272 :: 		}
L_end_mysql_read_forced:
0x10E2	0x0012      	RETURN      0
; end of _mysql_read_forced
_mysql_write_forced:
;table_eeprom.h,333 :: 		char mysql_write_forced(char *name, char *column, int fila, char *texto, char bytes){
;table_eeprom.h,334 :: 		char res = _mysql_calculate_address(name, column);
0x10E4	0xF590C586  	MOVFF       FARG_mysql_write_forced_name, FARG__mysql_calculate_address_name
0x10E8	0xF591C587  	MOVFF       FARG_mysql_write_forced_name+1, FARG__mysql_calculate_address_name+1
0x10EC	0xF592C588  	MOVFF       FARG_mysql_write_forced_column, FARG__mysql_calculate_address_column
0x10F0	0xF593C589  	MOVFF       FARG_mysql_write_forced_column+1, FARG__mysql_calculate_address_column+1
0x10F4	0xDC30      	RCALL       __mysql_calculate_address
0x10F6	0xF58FC000  	MOVFF       R0, mysql_write_forced_res_L0
;table_eeprom.h,337 :: 		if(res)
0x10FA	0x5200      	MOVF        R0, 1 
0x10FC	0xE003      	BZ          L_mysql_write_forced532
;table_eeprom.h,338 :: 		return res;
0x10FE	0xF000C58F  	MOVFF       mysql_write_forced_res_L0, R0
0x1102	0xD03F      	BRA         L_end_mysql_write_forced
L_mysql_write_forced532:
;table_eeprom.h,341 :: 		if(bytes > myTable.tamCol)
0x1104	0x0105      	MOVLB       5
0x1106	0x518E      	MOVF        FARG_mysql_write_forced_bytes, 0, 1
0x1108	0x0103      	MOVLB       3
0x110A	0x5D91      	SUBWF       Validadora_myTable+6, 0, 1
0x110C	0xE203      	BC          L_mysql_write_forced533
;table_eeprom.h,342 :: 		return TABLE_RW_OUT_RANGE;
0x110E	0x0E04      	MOVLW       4
0x1110	0x6E00      	MOVWF       R0 
0x1112	0xD037      	BRA         L_end_mysql_write_forced
L_mysql_write_forced533:
;table_eeprom.h,345 :: 		if(fila >= 1 && fila <= myTable.row)
0x1114	0x0E80      	MOVLW       128
0x1116	0x0105      	MOVLB       5
0x1118	0x198B      	XORWF       FARG_mysql_write_forced_fila+1, 0, 1
0x111A	0x6E00      	MOVWF       R0 
0x111C	0x0E80      	MOVLW       128
0x111E	0x5C00      	SUBWF       R0, 0 
0x1120	0xE102      	BNZ         L__mysql_write_forced1275
0x1122	0x0E01      	MOVLW       1
0x1124	0x5D8A      	SUBWF       FARG_mysql_write_forced_fila, 0, 1
L__mysql_write_forced1275:
0x1126	0xE329      	BNC         L_mysql_write_forced536
0x1128	0x518B      	MOVF        FARG_mysql_write_forced_fila+1, 0, 1
0x112A	0x0103      	MOVLB       3
0x112C	0x5D8E      	SUBWF       Validadora_myTable+3, 0, 1
0x112E	0xE104      	BNZ         L__mysql_write_forced1276
0x1130	0x0105      	MOVLB       5
0x1132	0x518A      	MOVF        FARG_mysql_write_forced_fila, 0, 1
0x1134	0x0103      	MOVLB       3
0x1136	0x5D8D      	SUBWF       Validadora_myTable+2, 0, 1
L__mysql_write_forced1276:
0x1138	0xE320      	BNC         L_mysql_write_forced536
L__mysql_write_forced967:
;table_eeprom.h,346 :: 		eeprom_i2c_write(myTable.addressAct+(fila-1)*myTable.tamCol, texto, bytes);
0x113A	0x0E01      	MOVLW       1
0x113C	0x0105      	MOVLB       5
0x113E	0x5D8A      	SUBWF       FARG_mysql_write_forced_fila, 0, 1
0x1140	0x6E00      	MOVWF       R0 
0x1142	0x0E00      	MOVLW       0
0x1144	0x598B      	SUBWFB      FARG_mysql_write_forced_fila+1, 0, 1
0x1146	0x6E01      	MOVWF       R1 
0x1148	0xF004C391  	MOVFF       Validadora_myTable+6, R4
0x114C	0x0E00      	MOVLW       0
0x114E	0x6E05      	MOVWF       R5 
0x1150	0xF002ECC0  	CALL        _Mul_16X16_U, 0
0x1154	0x5000      	MOVF        R0, 0 
0x1156	0x0103      	MOVLB       3
0x1158	0x25B8      	ADDWF       Validadora_myTable+45, 0, 1
0x115A	0x0105      	MOVLB       5
0x115C	0x6F90      	MOVWF       FARG_eeprom_i2c_write_address, 1
0x115E	0x5001      	MOVF        R1, 0 
0x1160	0x0103      	MOVLB       3
0x1162	0x21B9      	ADDWFC      Validadora_myTable+46, 0, 1
0x1164	0x0105      	MOVLB       5
0x1166	0x6F91      	MOVWF       FARG_eeprom_i2c_write_address+1, 1
0x1168	0xF592C58C  	MOVFF       FARG_mysql_write_forced_texto, FARG_eeprom_i2c_write_datos
0x116C	0xF593C58D  	MOVFF       FARG_mysql_write_forced_texto+1, FARG_eeprom_i2c_write_datos+1
0x1170	0xF594C58E  	MOVFF       FARG_mysql_write_forced_bytes, FARG_eeprom_i2c_write_size
0x1174	0xF003ECEB  	CALL        _eeprom_i2c_write, 0
0x1178	0xD003      	BRA         L_mysql_write_forced537
L_mysql_write_forced536:
;table_eeprom.h,348 :: 		return TABLE_RW_NO_EXIST_ROW;   //Fila inexistente
0x117A	0x0E03      	MOVLW       3
0x117C	0x6E00      	MOVWF       R0 
0x117E	0xD001      	BRA         L_end_mysql_write_forced
L_mysql_write_forced537:
;table_eeprom.h,350 :: 		return TABLE_RW_SUCCESS;     //Exito en grabacion
0x1180	0x6A00      	CLRF        R0 
;table_eeprom.h,351 :: 		}
L_end_mysql_write_forced:
0x1182	0x0012      	RETURN      0
; end of _mysql_write_forced
_Soft_I2C_Read:
;__Lib_SoftI2C.c,85 :: 		
;__Lib_SoftI2C.c,86 :: 		
0x1184	0x0105      	MOVLB       5
0x1186	0x6B88      	CLRF        Soft_I2C_Read_result_L0, 1
0x1188	0x6B89      	CLRF        Soft_I2C_Read_result_L0+1, 1
0x118A	0x0E80      	MOVLW       128
0x118C	0x6F8A      	MOVWF       Soft_I2C_Read_temp_L0, 1
0x118E	0x0E00      	MOVLW       0
0x1190	0x6F8B      	MOVWF       Soft_I2C_Read_temp_L0+1, 1
;__Lib_SoftI2C.c,88 :: 		
L_Soft_I2C_Read3:
0x1192	0x518A      	MOVF        Soft_I2C_Read_temp_L0, 0, 1
0x1194	0x118B      	IORWF       Soft_I2C_Read_temp_L0+1, 0, 1
0x1196	0xE025      	BZ          L_Soft_I2C_Read4
;__Lib_SoftI2C.c,89 :: 		
0x1198	0xF002ECE8  	CALL        _Delay_1us, 0
0x119C	0xF002ECE8  	CALL        _Delay_1us, 0
;__Lib_SoftI2C.c,91 :: 		
0x11A0	0x8C95      	BSF         Soft_I2C_Sda_Direction, BitPos(Soft_I2C_Sda_Direction+0) 
;__Lib_SoftI2C.c,93 :: 		
0x11A2	0xF002ECE8  	CALL        _Delay_1us, 0
0x11A6	0xF002ECE8  	CALL        _Delay_1us, 0
;__Lib_SoftI2C.c,95 :: 		
0x11AA	0x8296      	BSF         Soft_I2C_Scl_Direction, BitPos(Soft_I2C_Scl_Direction+0) 
;__Lib_SoftI2C.c,97 :: 		
0x11AC	0x0103      	MOVLB       3
0x11AE	0x93BC      	BCF         __Lib_SoftI2C___StopWaiting, BitPos(__Lib_SoftI2C___StopWaiting+0), 1
;__Lib_SoftI2C.c,98 :: 		
L_Soft_I2C_Read5:
0x11B0	0xB284      	BTFSC       Soft_I2C_Scl, BitPos(Soft_I2C_Scl+0) 
0x11B2	0xD004      	BRA         L_Soft_I2C_Read6
;__Lib_SoftI2C.c,99 :: 		
0x11B4	0xA3BC      	BTFSS       __Lib_SoftI2C___StopWaiting, BitPos(__Lib_SoftI2C___StopWaiting+0), 1
0x11B6	0xD001      	BRA         L_Soft_I2C_Read7
;__Lib_SoftI2C.c,100 :: 		
0x11B8	0xD001      	BRA         L_Soft_I2C_Read6
L_Soft_I2C_Read7:
0x11BA	0xD7FA      	BRA         L_Soft_I2C_Read5
L_Soft_I2C_Read6:
;__Lib_SoftI2C.c,102 :: 		
0x11BC	0xAC83      	BTFSS       Soft_I2C_Sda, BitPos(Soft_I2C_Sda+0) 
0x11BE	0xD005      	BRA         L_Soft_I2C_Read8
;__Lib_SoftI2C.c,103 :: 		
0x11C0	0x0105      	MOVLB       5
0x11C2	0x518A      	MOVF        Soft_I2C_Read_temp_L0, 0, 1
0x11C4	0x1388      	IORWF       Soft_I2C_Read_result_L0, 1, 1
0x11C6	0x518B      	MOVF        Soft_I2C_Read_temp_L0+1, 0, 1
0x11C8	0x1389      	IORWF       Soft_I2C_Read_result_L0+1, 1, 1
L_Soft_I2C_Read8:
0x11CA	0x0105      	MOVLB       5
;__Lib_SoftI2C.c,105 :: 		
0x11CC	0xF002ECE8  	CALL        _Delay_1us, 0
0x11D0	0xF002ECE8  	CALL        _Delay_1us, 0
;__Lib_SoftI2C.c,107 :: 		
0x11D4	0xF003ECA7  	CALL        __Lib_SoftI2C_PutZerosToLATScl, 0
;__Lib_SoftI2C.c,108 :: 		
0x11D8	0x9296      	BCF         Soft_I2C_Scl_Direction, BitPos(Soft_I2C_Scl_Direction+0) 
;__Lib_SoftI2C.c,110 :: 		
0x11DA	0x338B      	RRCF        Soft_I2C_Read_temp_L0+1, 1, 1
0x11DC	0x338A      	RRCF        Soft_I2C_Read_temp_L0, 1, 1
0x11DE	0x9F8B      	BCF         Soft_I2C_Read_temp_L0+1, 7, 1
;__Lib_SoftI2C.c,111 :: 		
0x11E0	0xD7D8      	BRA         L_Soft_I2C_Read3
L_Soft_I2C_Read4:
;__Lib_SoftI2C.c,113 :: 		
0x11E2	0x8C95      	BSF         Soft_I2C_Sda_Direction, BitPos(Soft_I2C_Sda_Direction+0) 
;__Lib_SoftI2C.c,115 :: 		
0x11E4	0xF002ECE8  	CALL        _Delay_1us, 0
0x11E8	0xF002ECE8  	CALL        _Delay_1us, 0
;__Lib_SoftI2C.c,117 :: 		
0x11EC	0x5186      	MOVF        FARG_Soft_I2C_Read_ack, 0, 1
0x11EE	0x1187      	IORWF       FARG_Soft_I2C_Read_ack+1, 0, 1
0x11F0	0xE003      	BZ          L_Soft_I2C_Read9
;__Lib_SoftI2C.c,118 :: 		
0x11F2	0xF003EC9E  	CALL        __Lib_SoftI2C_PutZerosToLATSda, 0
;__Lib_SoftI2C.c,119 :: 		
0x11F6	0x9C95      	BCF         Soft_I2C_Sda_Direction, BitPos(Soft_I2C_Sda_Direction+0) 
;__Lib_SoftI2C.c,120 :: 		
L_Soft_I2C_Read9:
;__Lib_SoftI2C.c,122 :: 		
0x11F8	0xF002ECE8  	CALL        _Delay_1us, 0
0x11FC	0xF002ECE8  	CALL        _Delay_1us, 0
;__Lib_SoftI2C.c,124 :: 		
0x1200	0x8296      	BSF         Soft_I2C_Scl_Direction, BitPos(Soft_I2C_Scl_Direction+0) 
;__Lib_SoftI2C.c,126 :: 		
0x1202	0x0103      	MOVLB       3
0x1204	0x93BC      	BCF         __Lib_SoftI2C___StopWaiting, BitPos(__Lib_SoftI2C___StopWaiting+0), 1
;__Lib_SoftI2C.c,127 :: 		
L_Soft_I2C_Read10:
0x1206	0xB284      	BTFSC       Soft_I2C_Scl, BitPos(Soft_I2C_Scl+0) 
0x1208	0xD004      	BRA         L_Soft_I2C_Read11
;__Lib_SoftI2C.c,128 :: 		
0x120A	0xA3BC      	BTFSS       __Lib_SoftI2C___StopWaiting, BitPos(__Lib_SoftI2C___StopWaiting+0), 1
0x120C	0xD001      	BRA         L_Soft_I2C_Read12
;__Lib_SoftI2C.c,129 :: 		
0x120E	0xD001      	BRA         L_Soft_I2C_Read11
L_Soft_I2C_Read12:
0x1210	0xD7FA      	BRA         L_Soft_I2C_Read10
L_Soft_I2C_Read11:
;__Lib_SoftI2C.c,131 :: 		
0x1212	0xF002ECE8  	CALL        _Delay_1us, 0
0x1216	0xF002ECE8  	CALL        _Delay_1us, 0
;__Lib_SoftI2C.c,133 :: 		
0x121A	0xF003ECA7  	CALL        __Lib_SoftI2C_PutZerosToLATScl, 0
;__Lib_SoftI2C.c,134 :: 		
0x121E	0x9296      	BCF         Soft_I2C_Scl_Direction, BitPos(Soft_I2C_Scl_Direction+0) 
;__Lib_SoftI2C.c,136 :: 		
0x1220	0xF002ECE8  	CALL        _Delay_1us, 0
0x1224	0xF002ECE8  	CALL        _Delay_1us, 0
;__Lib_SoftI2C.c,138 :: 		
0x1228	0xF003EC9E  	CALL        __Lib_SoftI2C_PutZerosToLATSda, 0
;__Lib_SoftI2C.c,139 :: 		
0x122C	0x9C95      	BCF         Soft_I2C_Sda_Direction, BitPos(Soft_I2C_Sda_Direction+0) 
;__Lib_SoftI2C.c,141 :: 		
0x122E	0xF000C588  	MOVFF       Soft_I2C_Read_result_L0, R0
;__Lib_SoftI2C.c,142 :: 		
L_end_Soft_I2C_Read:
0x1232	0x0012      	RETURN      0
; end of _Soft_I2C_Read
_bcdToDec:
;miscelaneos.h,5 :: 		char bcdToDec(char dato){
;miscelaneos.h,6 :: 		dato = 10*(swap(dato)&0x0F) + (dato&0x0F);
0x1234	0xF590C586  	MOVFF       FARG_bcdToDec_dato, FARG_Swap_input
0x1238	0xDCCE      	RCALL       _Swap
0x123A	0x0E0F      	MOVLW       15
0x123C	0x1600      	ANDWF       R0, 1 
0x123E	0x0E0A      	MOVLW       10
0x1240	0x0200      	MULWF       R0 
0x1242	0xF001CFF3  	MOVFF       PRODL, R1
0x1246	0x0E0F      	MOVLW       15
0x1248	0x0105      	MOVLB       5
0x124A	0x1586      	ANDWF       FARG_bcdToDec_dato, 0, 1
0x124C	0x6E00      	MOVWF       R0 
0x124E	0x5001      	MOVF        R1, 0 
0x1250	0x2600      	ADDWF       R0, 1 
0x1252	0xF586C000  	MOVFF       R0, FARG_bcdToDec_dato
;miscelaneos.h,8 :: 		return dato;
;miscelaneos.h,9 :: 		}
L_end_bcdToDec:
0x1256	0x0012      	RETURN      0
; end of _bcdToDec
_mysql_read:
;table_eeprom.h,234 :: 		char mysql_read(char *name, char *column, int fila, long *result){
;table_eeprom.h,235 :: 		char res = _mysql_calculate_address(name, column);
0x1258	0xF590C586  	MOVFF       FARG_mysql_read_name, FARG__mysql_calculate_address_name
0x125C	0xF591C587  	MOVFF       FARG_mysql_read_name+1, FARG__mysql_calculate_address_name+1
0x1260	0xF592C588  	MOVFF       FARG_mysql_read_column, FARG__mysql_calculate_address_column
0x1264	0xF593C589  	MOVFF       FARG_mysql_read_column+1, FARG__mysql_calculate_address_column+1
0x1268	0xF004ECAB  	CALL        __mysql_calculate_address, 0
0x126C	0xF58EC000  	MOVFF       R0, mysql_read_res_L0
;table_eeprom.h,238 :: 		if(res)
0x1270	0x5200      	MOVF        R0, 1 
0x1272	0xE003      	BZ          L_mysql_read500
;table_eeprom.h,239 :: 		return res;
0x1274	0xF000C58E  	MOVFF       mysql_read_res_L0, R0
0x1278	0xD046      	BRA         L_end_mysql_read
L_mysql_read500:
;table_eeprom.h,242 :: 		*result = 0;
0x127A	0xFFE1C58C  	MOVFF       FARG_mysql_read_result, FSR1L
0x127E	0xFFE2C58D  	MOVFF       FARG_mysql_read_result+1, FSR1H
0x1282	0x6AE6      	CLRF        POSTINC1 
0x1284	0x6AE6      	CLRF        POSTINC1 
0x1286	0x6AE6      	CLRF        POSTINC1 
0x1288	0x6AE6      	CLRF        POSTINC1 
;table_eeprom.h,245 :: 		if(fila >= 1 && fila <= myTable.rowAct){
0x128A	0x0E80      	MOVLW       128
0x128C	0x0105      	MOVLB       5
0x128E	0x198B      	XORWF       FARG_mysql_read_fila+1, 0, 1
0x1290	0x6E00      	MOVWF       R0 
0x1292	0x0E80      	MOVLW       128
0x1294	0x5C00      	SUBWF       R0, 0 
0x1296	0xE102      	BNZ         L__mysql_read1261
0x1298	0x0E01      	MOVLW       1
0x129A	0x5D8A      	SUBWF       FARG_mysql_read_fila, 0, 1
L__mysql_read1261:
0x129C	0xE330      	BNC         L_mysql_read503
0x129E	0x518B      	MOVF        FARG_mysql_read_fila+1, 0, 1
0x12A0	0x0103      	MOVLB       3
0x12A2	0x5D90      	SUBWF       Validadora_myTable+5, 0, 1
0x12A4	0xE104      	BNZ         L__mysql_read1262
0x12A6	0x0105      	MOVLB       5
0x12A8	0x518A      	MOVF        FARG_mysql_read_fila, 0, 1
0x12AA	0x0103      	MOVLB       3
0x12AC	0x5D8F      	SUBWF       Validadora_myTable+4, 0, 1
L__mysql_read1262:
0x12AE	0xE327      	BNC         L_mysql_read503
L__mysql_read963:
;table_eeprom.h,246 :: 		if(myTable.tamCol <= 4)
0x12B0	0x5191      	MOVF        Validadora_myTable+6, 0, 1
0x12B2	0x0804      	SUBLW       4
0x12B4	0xE320      	BNC         L_mysql_read504
;table_eeprom.h,247 :: 		eeprom_i2c_read(myTable.addressAct+(fila-1)*myTable.tamCol, (char*)&(*result), myTable.tamCol);
0x12B6	0x0E01      	MOVLW       1
0x12B8	0x0105      	MOVLB       5
0x12BA	0x5D8A      	SUBWF       FARG_mysql_read_fila, 0, 1
0x12BC	0x6E00      	MOVWF       R0 
0x12BE	0x0E00      	MOVLW       0
0x12C0	0x598B      	SUBWFB      FARG_mysql_read_fila+1, 0, 1
0x12C2	0x6E01      	MOVWF       R1 
0x12C4	0xF004C391  	MOVFF       Validadora_myTable+6, R4
0x12C8	0x0E00      	MOVLW       0
0x12CA	0x6E05      	MOVWF       R5 
0x12CC	0xF002ECC0  	CALL        _Mul_16X16_U, 0
0x12D0	0x5000      	MOVF        R0, 0 
0x12D2	0x0103      	MOVLB       3
0x12D4	0x25B8      	ADDWF       Validadora_myTable+45, 0, 1
0x12D6	0x0105      	MOVLB       5
0x12D8	0x6F9E      	MOVWF       FARG_eeprom_i2c_read_address, 1
0x12DA	0x5001      	MOVF        R1, 0 
0x12DC	0x0103      	MOVLB       3
0x12DE	0x21B9      	ADDWFC      Validadora_myTable+46, 0, 1
0x12E0	0x0105      	MOVLB       5
0x12E2	0x6F9F      	MOVWF       FARG_eeprom_i2c_read_address+1, 1
0x12E4	0xF5A0C58C  	MOVFF       FARG_mysql_read_result, FARG_eeprom_i2c_read_datos
0x12E8	0xF5A1C58D  	MOVFF       FARG_mysql_read_result+1, FARG_eeprom_i2c_read_datos+1
0x12EC	0xF5A2C391  	MOVFF       Validadora_myTable+6, FARG_eeprom_i2c_read_size
0x12F0	0xF001ECB2  	CALL        _eeprom_i2c_read, 0
0x12F4	0xD003      	BRA         L_mysql_read505
L_mysql_read504:
;table_eeprom.h,249 :: 		return TABLE_RW_OUT_RANGE_BYTES;
0x12F6	0x0E06      	MOVLW       6
0x12F8	0x6E00      	MOVWF       R0 
0x12FA	0xD005      	BRA         L_end_mysql_read
;table_eeprom.h,250 :: 		}
L_mysql_read505:
;table_eeprom.h,251 :: 		}else{
0x12FC	0xD003      	BRA         L_mysql_read506
L_mysql_read503:
;table_eeprom.h,252 :: 		return TABLE_RW_NO_EXIST_ROW;   //Fila inexistente
0x12FE	0x0E03      	MOVLW       3
0x1300	0x6E00      	MOVWF       R0 
0x1302	0xD001      	BRA         L_end_mysql_read
;table_eeprom.h,253 :: 		}
L_mysql_read506:
;table_eeprom.h,255 :: 		return TABLE_RW_SUCCESS;
0x1304	0x6A00      	CLRF        R0 
;table_eeprom.h,256 :: 		}
L_end_mysql_read:
0x1306	0x0012      	RETURN      0
; end of _mysql_read
_DS1307_date:
;ds1307.h,148 :: 		char* DS1307_date(DS1307 *myDS, bool formatComplet){
;ds1307.h,149 :: 		char cont = 0;
0x1308	0x0105      	MOVLB       5
0x130A	0x6B89      	CLRF        DS1307_date_cont_L0, 1
;ds1307.h,153 :: 		numToString(myDs->dayOfWeek, &myDs->time[cont++], 1);
0x130C	0x0E03      	MOVLW       3
0x130E	0x2586      	ADDWF       FARG_DS1307_date_myDS, 0, 1
0x1310	0x6EE9      	MOVWF       FSR0L 
0x1312	0x0E00      	MOVLW       0
0x1314	0x2187      	ADDWFC      FARG_DS1307_date_myDS+1, 0, 1
0x1316	0x6EEA      	MOVWF       FSR0H 
0x1318	0xF590CFEE  	MOVFF       POSTINC0, FARG_numToString_valor
0x131C	0x0E00      	MOVLW       0
0x131E	0x6F91      	MOVWF       FARG_numToString_valor+1, 1
0x1320	0x6F92      	MOVWF       FARG_numToString_valor+2, 1
0x1322	0x6F93      	MOVWF       FARG_numToString_valor+3, 1
0x1324	0x0E00      	MOVLW       0
0x1326	0x6F91      	MOVWF       FARG_numToString_valor+1, 1
0x1328	0x6F92      	MOVWF       FARG_numToString_valor+2, 1
0x132A	0x6F93      	MOVWF       FARG_numToString_valor+3, 1
0x132C	0x0E07      	MOVLW       7
0x132E	0x2586      	ADDWF       FARG_DS1307_date_myDS, 0, 1
0x1330	0x6F94      	MOVWF       FARG_numToString_cadena, 1
0x1332	0x0E00      	MOVLW       0
0x1334	0x2187      	ADDWFC      FARG_DS1307_date_myDS+1, 0, 1
0x1336	0x6F95      	MOVWF       FARG_numToString_cadena+1, 1
0x1338	0x5189      	MOVF        DS1307_date_cont_L0, 0, 1
0x133A	0x2794      	ADDWF       FARG_numToString_cadena, 1, 1
0x133C	0x0E00      	MOVLW       0
0x133E	0x2395      	ADDWFC      FARG_numToString_cadena+1, 1, 1
0x1340	0x0E01      	MOVLW       1
0x1342	0x6F96      	MOVWF       FARG_numToString_digitos, 1
0x1344	0xF004EC52  	CALL        _numToString, 0
0x1348	0x0105      	MOVLB       5
0x134A	0x2B89      	INCF        DS1307_date_cont_L0, 1, 1
;ds1307.h,154 :: 		if(formatComplet)
0x134C	0x5388      	MOVF        FARG_DS1307_date_formatComplet, 1, 1
0x134E	0xE00F      	BZ          L_DS1307_date387
;ds1307.h,155 :: 		myDS->time[cont++] = '-';
0x1350	0x0E07      	MOVLW       7
0x1352	0x2586      	ADDWF       FARG_DS1307_date_myDS, 0, 1
0x1354	0x6E00      	MOVWF       R0 
0x1356	0x0E00      	MOVLW       0
0x1358	0x2187      	ADDWFC      FARG_DS1307_date_myDS+1, 0, 1
0x135A	0x6E01      	MOVWF       R1 
0x135C	0x5189      	MOVF        DS1307_date_cont_L0, 0, 1
0x135E	0x2400      	ADDWF       R0, 0 
0x1360	0x6EE1      	MOVWF       FSR1L 
0x1362	0x0E00      	MOVLW       0
0x1364	0x2001      	ADDWFC      R1, 0 
0x1366	0x6EE2      	MOVWF       FSR1H 
0x1368	0x0E2D      	MOVLW       45
0x136A	0x6EE6      	MOVWF       POSTINC1 
0x136C	0x2B89      	INCF        DS1307_date_cont_L0, 1, 1
L_DS1307_date387:
;ds1307.h,157 :: 		numToString(myDs->hours, &myDs->time[cont], 2);
0x136E	0x0E02      	MOVLW       2
0x1370	0x2586      	ADDWF       FARG_DS1307_date_myDS, 0, 1
0x1372	0x6EE9      	MOVWF       FSR0L 
0x1374	0x0E00      	MOVLW       0
0x1376	0x2187      	ADDWFC      FARG_DS1307_date_myDS+1, 0, 1
0x1378	0x6EEA      	MOVWF       FSR0H 
0x137A	0xF590CFEE  	MOVFF       POSTINC0, FARG_numToString_valor
0x137E	0x0E00      	MOVLW       0
0x1380	0x6F91      	MOVWF       FARG_numToString_valor+1, 1
0x1382	0x6F92      	MOVWF       FARG_numToString_valor+2, 1
0x1384	0x6F93      	MOVWF       FARG_numToString_valor+3, 1
0x1386	0x0E00      	MOVLW       0
0x1388	0x6F91      	MOVWF       FARG_numToString_valor+1, 1
0x138A	0x6F92      	MOVWF       FARG_numToString_valor+2, 1
0x138C	0x6F93      	MOVWF       FARG_numToString_valor+3, 1
0x138E	0x0E07      	MOVLW       7
0x1390	0x2586      	ADDWF       FARG_DS1307_date_myDS, 0, 1
0x1392	0x6F94      	MOVWF       FARG_numToString_cadena, 1
0x1394	0x0E00      	MOVLW       0
0x1396	0x2187      	ADDWFC      FARG_DS1307_date_myDS+1, 0, 1
0x1398	0x6F95      	MOVWF       FARG_numToString_cadena+1, 1
0x139A	0x5189      	MOVF        DS1307_date_cont_L0, 0, 1
0x139C	0x2794      	ADDWF       FARG_numToString_cadena, 1, 1
0x139E	0x0E00      	MOVLW       0
0x13A0	0x2395      	ADDWFC      FARG_numToString_cadena+1, 1, 1
0x13A2	0x0E02      	MOVLW       2
0x13A4	0x6F96      	MOVWF       FARG_numToString_digitos, 1
0x13A6	0xF004EC52  	CALL        _numToString, 0
;ds1307.h,158 :: 		cont += 2;
0x13AA	0x0E02      	MOVLW       2
0x13AC	0x0105      	MOVLB       5
0x13AE	0x2789      	ADDWF       DS1307_date_cont_L0, 1, 1
;ds1307.h,159 :: 		if(formatComplet)
0x13B0	0x5388      	MOVF        FARG_DS1307_date_formatComplet, 1, 1
0x13B2	0xE00F      	BZ          L_DS1307_date388
;ds1307.h,160 :: 		myDS->time[cont++] = ':';
0x13B4	0x0E07      	MOVLW       7
0x13B6	0x2586      	ADDWF       FARG_DS1307_date_myDS, 0, 1
0x13B8	0x6E00      	MOVWF       R0 
0x13BA	0x0E00      	MOVLW       0
0x13BC	0x2187      	ADDWFC      FARG_DS1307_date_myDS+1, 0, 1
0x13BE	0x6E01      	MOVWF       R1 
0x13C0	0x5189      	MOVF        DS1307_date_cont_L0, 0, 1
0x13C2	0x2400      	ADDWF       R0, 0 
0x13C4	0x6EE1      	MOVWF       FSR1L 
0x13C6	0x0E00      	MOVLW       0
0x13C8	0x2001      	ADDWFC      R1, 0 
0x13CA	0x6EE2      	MOVWF       FSR1H 
0x13CC	0x0E3A      	MOVLW       58
0x13CE	0x6EE6      	MOVWF       POSTINC1 
0x13D0	0x2B89      	INCF        DS1307_date_cont_L0, 1, 1
L_DS1307_date388:
;ds1307.h,162 :: 		numToString(myDs->minutes, &myDs->time[cont], 2);
0x13D2	0x0E01      	MOVLW       1
0x13D4	0x2586      	ADDWF       FARG_DS1307_date_myDS, 0, 1
0x13D6	0x6EE9      	MOVWF       FSR0L 
0x13D8	0x0E00      	MOVLW       0
0x13DA	0x2187      	ADDWFC      FARG_DS1307_date_myDS+1, 0, 1
0x13DC	0x6EEA      	MOVWF       FSR0H 
0x13DE	0xF590CFEE  	MOVFF       POSTINC0, FARG_numToString_valor
0x13E2	0x0E00      	MOVLW       0
0x13E4	0x6F91      	MOVWF       FARG_numToString_valor+1, 1
0x13E6	0x6F92      	MOVWF       FARG_numToString_valor+2, 1
0x13E8	0x6F93      	MOVWF       FARG_numToString_valor+3, 1
0x13EA	0x0E00      	MOVLW       0
0x13EC	0x6F91      	MOVWF       FARG_numToString_valor+1, 1
0x13EE	0x6F92      	MOVWF       FARG_numToString_valor+2, 1
0x13F0	0x6F93      	MOVWF       FARG_numToString_valor+3, 1
0x13F2	0x0E07      	MOVLW       7
0x13F4	0x2586      	ADDWF       FARG_DS1307_date_myDS, 0, 1
0x13F6	0x6F94      	MOVWF       FARG_numToString_cadena, 1
0x13F8	0x0E00      	MOVLW       0
0x13FA	0x2187      	ADDWFC      FARG_DS1307_date_myDS+1, 0, 1
0x13FC	0x6F95      	MOVWF       FARG_numToString_cadena+1, 1
0x13FE	0x5189      	MOVF        DS1307_date_cont_L0, 0, 1
0x1400	0x2794      	ADDWF       FARG_numToString_cadena, 1, 1
0x1402	0x0E00      	MOVLW       0
0x1404	0x2395      	ADDWFC      FARG_numToString_cadena+1, 1, 1
0x1406	0x0E02      	MOVLW       2
0x1408	0x6F96      	MOVWF       FARG_numToString_digitos, 1
0x140A	0xF004EC52  	CALL        _numToString, 0
;ds1307.h,163 :: 		cont += 2;
0x140E	0x0E02      	MOVLW       2
0x1410	0x0105      	MOVLB       5
0x1412	0x2789      	ADDWF       DS1307_date_cont_L0, 1, 1
;ds1307.h,164 :: 		if(formatComplet)
0x1414	0x5388      	MOVF        FARG_DS1307_date_formatComplet, 1, 1
0x1416	0xE00F      	BZ          L_DS1307_date389
;ds1307.h,165 :: 		myDS->time[cont++] = ':';
0x1418	0x0E07      	MOVLW       7
0x141A	0x2586      	ADDWF       FARG_DS1307_date_myDS, 0, 1
0x141C	0x6E00      	MOVWF       R0 
0x141E	0x0E00      	MOVLW       0
0x1420	0x2187      	ADDWFC      FARG_DS1307_date_myDS+1, 0, 1
0x1422	0x6E01      	MOVWF       R1 
0x1424	0x5189      	MOVF        DS1307_date_cont_L0, 0, 1
0x1426	0x2400      	ADDWF       R0, 0 
0x1428	0x6EE1      	MOVWF       FSR1L 
0x142A	0x0E00      	MOVLW       0
0x142C	0x2001      	ADDWFC      R1, 0 
0x142E	0x6EE2      	MOVWF       FSR1H 
0x1430	0x0E3A      	MOVLW       58
0x1432	0x6EE6      	MOVWF       POSTINC1 
0x1434	0x2B89      	INCF        DS1307_date_cont_L0, 1, 1
L_DS1307_date389:
;ds1307.h,167 :: 		numToString(myDs->seconds, &myDs->time[cont], 2);
0x1436	0xFFE9C586  	MOVFF       FARG_DS1307_date_myDS, FSR0L
0x143A	0xFFEAC587  	MOVFF       FARG_DS1307_date_myDS+1, FSR0H
0x143E	0xF590CFEE  	MOVFF       POSTINC0, FARG_numToString_valor
0x1442	0x0E00      	MOVLW       0
0x1444	0x6F91      	MOVWF       FARG_numToString_valor+1, 1
0x1446	0x6F92      	MOVWF       FARG_numToString_valor+2, 1
0x1448	0x6F93      	MOVWF       FARG_numToString_valor+3, 1
0x144A	0x0E00      	MOVLW       0
0x144C	0x6F91      	MOVWF       FARG_numToString_valor+1, 1
0x144E	0x6F92      	MOVWF       FARG_numToString_valor+2, 1
0x1450	0x6F93      	MOVWF       FARG_numToString_valor+3, 1
0x1452	0x0E07      	MOVLW       7
0x1454	0x2586      	ADDWF       FARG_DS1307_date_myDS, 0, 1
0x1456	0x6F94      	MOVWF       FARG_numToString_cadena, 1
0x1458	0x0E00      	MOVLW       0
0x145A	0x2187      	ADDWFC      FARG_DS1307_date_myDS+1, 0, 1
0x145C	0x6F95      	MOVWF       FARG_numToString_cadena+1, 1
0x145E	0x5189      	MOVF        DS1307_date_cont_L0, 0, 1
0x1460	0x2794      	ADDWF       FARG_numToString_cadena, 1, 1
0x1462	0x0E00      	MOVLW       0
0x1464	0x2395      	ADDWFC      FARG_numToString_cadena+1, 1, 1
0x1466	0x0E02      	MOVLW       2
0x1468	0x6F96      	MOVWF       FARG_numToString_digitos, 1
0x146A	0xF004EC52  	CALL        _numToString, 0
;ds1307.h,168 :: 		cont += 2;
0x146E	0x0E02      	MOVLW       2
0x1470	0x0105      	MOVLB       5
0x1472	0x2789      	ADDWF       DS1307_date_cont_L0, 1, 1
;ds1307.h,169 :: 		if(formatComplet)
0x1474	0x5388      	MOVF        FARG_DS1307_date_formatComplet, 1, 1
0x1476	0xE00F      	BZ          L_DS1307_date390
;ds1307.h,170 :: 		myDS->time[cont++] = ' ';
0x1478	0x0E07      	MOVLW       7
0x147A	0x2586      	ADDWF       FARG_DS1307_date_myDS, 0, 1
0x147C	0x6E00      	MOVWF       R0 
0x147E	0x0E00      	MOVLW       0
0x1480	0x2187      	ADDWFC      FARG_DS1307_date_myDS+1, 0, 1
0x1482	0x6E01      	MOVWF       R1 
0x1484	0x5189      	MOVF        DS1307_date_cont_L0, 0, 1
0x1486	0x2400      	ADDWF       R0, 0 
0x1488	0x6EE1      	MOVWF       FSR1L 
0x148A	0x0E00      	MOVLW       0
0x148C	0x2001      	ADDWFC      R1, 0 
0x148E	0x6EE2      	MOVWF       FSR1H 
0x1490	0x0E20      	MOVLW       32
0x1492	0x6EE6      	MOVWF       POSTINC1 
0x1494	0x2B89      	INCF        DS1307_date_cont_L0, 1, 1
L_DS1307_date390:
;ds1307.h,172 :: 		numToString(myDs->day, &myDs->time[cont], 2);
0x1496	0x0E04      	MOVLW       4
0x1498	0x2586      	ADDWF       FARG_DS1307_date_myDS, 0, 1
0x149A	0x6EE9      	MOVWF       FSR0L 
0x149C	0x0E00      	MOVLW       0
0x149E	0x2187      	ADDWFC      FARG_DS1307_date_myDS+1, 0, 1
0x14A0	0x6EEA      	MOVWF       FSR0H 
0x14A2	0xF590CFEE  	MOVFF       POSTINC0, FARG_numToString_valor
0x14A6	0x0E00      	MOVLW       0
0x14A8	0x6F91      	MOVWF       FARG_numToString_valor+1, 1
0x14AA	0x6F92      	MOVWF       FARG_numToString_valor+2, 1
0x14AC	0x6F93      	MOVWF       FARG_numToString_valor+3, 1
0x14AE	0x0E00      	MOVLW       0
0x14B0	0x6F91      	MOVWF       FARG_numToString_valor+1, 1
0x14B2	0x6F92      	MOVWF       FARG_numToString_valor+2, 1
0x14B4	0x6F93      	MOVWF       FARG_numToString_valor+3, 1
0x14B6	0x0E07      	MOVLW       7
0x14B8	0x2586      	ADDWF       FARG_DS1307_date_myDS, 0, 1
0x14BA	0x6F94      	MOVWF       FARG_numToString_cadena, 1
0x14BC	0x0E00      	MOVLW       0
0x14BE	0x2187      	ADDWFC      FARG_DS1307_date_myDS+1, 0, 1
0x14C0	0x6F95      	MOVWF       FARG_numToString_cadena+1, 1
0x14C2	0x5189      	MOVF        DS1307_date_cont_L0, 0, 1
0x14C4	0x2794      	ADDWF       FARG_numToString_cadena, 1, 1
0x14C6	0x0E00      	MOVLW       0
0x14C8	0x2395      	ADDWFC      FARG_numToString_cadena+1, 1, 1
0x14CA	0x0E02      	MOVLW       2
0x14CC	0x6F96      	MOVWF       FARG_numToString_digitos, 1
0x14CE	0xF004EC52  	CALL        _numToString, 0
;ds1307.h,173 :: 		cont += 2;
0x14D2	0x0E02      	MOVLW       2
0x14D4	0x0105      	MOVLB       5
0x14D6	0x2789      	ADDWF       DS1307_date_cont_L0, 1, 1
;ds1307.h,174 :: 		if(formatComplet)
0x14D8	0x5388      	MOVF        FARG_DS1307_date_formatComplet, 1, 1
0x14DA	0xE00F      	BZ          L_DS1307_date391
;ds1307.h,175 :: 		myDS->time[cont++] = '/';
0x14DC	0x0E07      	MOVLW       7
0x14DE	0x2586      	ADDWF       FARG_DS1307_date_myDS, 0, 1
0x14E0	0x6E00      	MOVWF       R0 
0x14E2	0x0E00      	MOVLW       0
0x14E4	0x2187      	ADDWFC      FARG_DS1307_date_myDS+1, 0, 1
0x14E6	0x6E01      	MOVWF       R1 
0x14E8	0x5189      	MOVF        DS1307_date_cont_L0, 0, 1
0x14EA	0x2400      	ADDWF       R0, 0 
0x14EC	0x6EE1      	MOVWF       FSR1L 
0x14EE	0x0E00      	MOVLW       0
0x14F0	0x2001      	ADDWFC      R1, 0 
0x14F2	0x6EE2      	MOVWF       FSR1H 
0x14F4	0x0E2F      	MOVLW       47
0x14F6	0x6EE6      	MOVWF       POSTINC1 
0x14F8	0x2B89      	INCF        DS1307_date_cont_L0, 1, 1
L_DS1307_date391:
;ds1307.h,177 :: 		numToString(myDs->month, &myDs->time[cont], 2);
0x14FA	0x0E05      	MOVLW       5
0x14FC	0x2586      	ADDWF       FARG_DS1307_date_myDS, 0, 1
0x14FE	0x6EE9      	MOVWF       FSR0L 
0x1500	0x0E00      	MOVLW       0
0x1502	0x2187      	ADDWFC      FARG_DS1307_date_myDS+1, 0, 1
0x1504	0x6EEA      	MOVWF       FSR0H 
0x1506	0xF590CFEE  	MOVFF       POSTINC0, FARG_numToString_valor
0x150A	0x0E00      	MOVLW       0
0x150C	0x6F91      	MOVWF       FARG_numToString_valor+1, 1
0x150E	0x6F92      	MOVWF       FARG_numToString_valor+2, 1
0x1510	0x6F93      	MOVWF       FARG_numToString_valor+3, 1
0x1512	0x0E00      	MOVLW       0
0x1514	0x6F91      	MOVWF       FARG_numToString_valor+1, 1
0x1516	0x6F92      	MOVWF       FARG_numToString_valor+2, 1
0x1518	0x6F93      	MOVWF       FARG_numToString_valor+3, 1
0x151A	0x0E07      	MOVLW       7
0x151C	0x2586      	ADDWF       FARG_DS1307_date_myDS, 0, 1
0x151E	0x6F94      	MOVWF       FARG_numToString_cadena, 1
0x1520	0x0E00      	MOVLW       0
0x1522	0x2187      	ADDWFC      FARG_DS1307_date_myDS+1, 0, 1
0x1524	0x6F95      	MOVWF       FARG_numToString_cadena+1, 1
0x1526	0x5189      	MOVF        DS1307_date_cont_L0, 0, 1
0x1528	0x2794      	ADDWF       FARG_numToString_cadena, 1, 1
0x152A	0x0E00      	MOVLW       0
0x152C	0x2395      	ADDWFC      FARG_numToString_cadena+1, 1, 1
0x152E	0x0E02      	MOVLW       2
0x1530	0x6F96      	MOVWF       FARG_numToString_digitos, 1
0x1532	0xF004EC52  	CALL        _numToString, 0
;ds1307.h,178 :: 		cont += 2;
0x1536	0x0E02      	MOVLW       2
0x1538	0x0105      	MOVLB       5
0x153A	0x2789      	ADDWF       DS1307_date_cont_L0, 1, 1
;ds1307.h,179 :: 		if(formatComplet)
0x153C	0x5388      	MOVF        FARG_DS1307_date_formatComplet, 1, 1
0x153E	0xE00F      	BZ          L_DS1307_date392
;ds1307.h,180 :: 		myDS->time[cont++] = '/';
0x1540	0x0E07      	MOVLW       7
0x1542	0x2586      	ADDWF       FARG_DS1307_date_myDS, 0, 1
0x1544	0x6E00      	MOVWF       R0 
0x1546	0x0E00      	MOVLW       0
0x1548	0x2187      	ADDWFC      FARG_DS1307_date_myDS+1, 0, 1
0x154A	0x6E01      	MOVWF       R1 
0x154C	0x5189      	MOVF        DS1307_date_cont_L0, 0, 1
0x154E	0x2400      	ADDWF       R0, 0 
0x1550	0x6EE1      	MOVWF       FSR1L 
0x1552	0x0E00      	MOVLW       0
0x1554	0x2001      	ADDWFC      R1, 0 
0x1556	0x6EE2      	MOVWF       FSR1H 
0x1558	0x0E2F      	MOVLW       47
0x155A	0x6EE6      	MOVWF       POSTINC1 
0x155C	0x2B89      	INCF        DS1307_date_cont_L0, 1, 1
L_DS1307_date392:
;ds1307.h,182 :: 		numToString(myDs->year, &myDs->time[cont], 2);
0x155E	0x0E06      	MOVLW       6
0x1560	0x2586      	ADDWF       FARG_DS1307_date_myDS, 0, 1
0x1562	0x6EE9      	MOVWF       FSR0L 
0x1564	0x0E00      	MOVLW       0
0x1566	0x2187      	ADDWFC      FARG_DS1307_date_myDS+1, 0, 1
0x1568	0x6EEA      	MOVWF       FSR0H 
0x156A	0xF590CFEE  	MOVFF       POSTINC0, FARG_numToString_valor
0x156E	0x0E00      	MOVLW       0
0x1570	0x6F91      	MOVWF       FARG_numToString_valor+1, 1
0x1572	0x6F92      	MOVWF       FARG_numToString_valor+2, 1
0x1574	0x6F93      	MOVWF       FARG_numToString_valor+3, 1
0x1576	0x0E00      	MOVLW       0
0x1578	0x6F91      	MOVWF       FARG_numToString_valor+1, 1
0x157A	0x6F92      	MOVWF       FARG_numToString_valor+2, 1
0x157C	0x6F93      	MOVWF       FARG_numToString_valor+3, 1
0x157E	0x0E07      	MOVLW       7
0x1580	0x2586      	ADDWF       FARG_DS1307_date_myDS, 0, 1
0x1582	0x6F94      	MOVWF       FARG_numToString_cadena, 1
0x1584	0x0E00      	MOVLW       0
0x1586	0x2187      	ADDWFC      FARG_DS1307_date_myDS+1, 0, 1
0x1588	0x6F95      	MOVWF       FARG_numToString_cadena+1, 1
0x158A	0x5189      	MOVF        DS1307_date_cont_L0, 0, 1
0x158C	0x2794      	ADDWF       FARG_numToString_cadena, 1, 1
0x158E	0x0E00      	MOVLW       0
0x1590	0x2395      	ADDWFC      FARG_numToString_cadena+1, 1, 1
0x1592	0x0E02      	MOVLW       2
0x1594	0x6F96      	MOVWF       FARG_numToString_digitos, 1
0x1596	0xF004EC52  	CALL        _numToString, 0
;ds1307.h,183 :: 		cont += 2;
0x159A	0x0E02      	MOVLW       2
0x159C	0x0105      	MOVLB       5
0x159E	0x2589      	ADDWF       DS1307_date_cont_L0, 0, 1
0x15A0	0x6E02      	MOVWF       R2 
0x15A2	0xF589C002  	MOVFF       R2, DS1307_date_cont_L0
;ds1307.h,184 :: 		myDS->time[cont] = 0;  //Final de cadena
0x15A6	0x0E07      	MOVLW       7
0x15A8	0x2586      	ADDWF       FARG_DS1307_date_myDS, 0, 1
0x15AA	0x6E00      	MOVWF       R0 
0x15AC	0x0E00      	MOVLW       0
0x15AE	0x2187      	ADDWFC      FARG_DS1307_date_myDS+1, 0, 1
0x15B0	0x6E01      	MOVWF       R1 
0x15B2	0x5002      	MOVF        R2, 0 
0x15B4	0x2400      	ADDWF       R0, 0 
0x15B6	0x6EE1      	MOVWF       FSR1L 
0x15B8	0x0E00      	MOVLW       0
0x15BA	0x2001      	ADDWFC      R1, 0 
0x15BC	0x6EE2      	MOVWF       FSR1H 
0x15BE	0x6AE6      	CLRF        POSTINC1 
;ds1307.h,186 :: 		return myDS->time;
0x15C0	0x0E07      	MOVLW       7
0x15C2	0x2586      	ADDWF       FARG_DS1307_date_myDS, 0, 1
0x15C4	0x6E00      	MOVWF       R0 
0x15C6	0x0E00      	MOVLW       0
0x15C8	0x2187      	ADDWFC      FARG_DS1307_date_myDS+1, 0, 1
0x15CA	0x6E01      	MOVWF       R1 
;ds1307.h,187 :: 		}
L_end_DS1307_date:
0x15CC	0x0012      	RETURN      0
; end of _DS1307_date
_Soft_I2C_Stop:
;__Lib_SoftI2C.c,167 :: 		
;__Lib_SoftI2C.c,169 :: 		
0x15CE	0xF003EC9E  	CALL        __Lib_SoftI2C_PutZerosToLATSda, 0
;__Lib_SoftI2C.c,170 :: 		
0x15D2	0x9C95      	BCF         Soft_I2C_Sda_Direction, BitPos(Soft_I2C_Sda_Direction+0) 
;__Lib_SoftI2C.c,172 :: 		
0x15D4	0xF002ECE8  	CALL        _Delay_1us, 0
0x15D8	0xF002ECE8  	CALL        _Delay_1us, 0
;__Lib_SoftI2C.c,174 :: 		
0x15DC	0x8296      	BSF         Soft_I2C_Scl_Direction, BitPos(Soft_I2C_Scl_Direction+0) 
;__Lib_SoftI2C.c,176 :: 		
0x15DE	0x0103      	MOVLB       3
0x15E0	0x93BC      	BCF         __Lib_SoftI2C___StopWaiting, BitPos(__Lib_SoftI2C___StopWaiting+0), 1
;__Lib_SoftI2C.c,177 :: 		
L_Soft_I2C_Stop13:
0x15E2	0xB284      	BTFSC       Soft_I2C_Scl, BitPos(Soft_I2C_Scl+0) 
0x15E4	0xD004      	BRA         L_Soft_I2C_Stop14
;__Lib_SoftI2C.c,178 :: 		
0x15E6	0xA3BC      	BTFSS       __Lib_SoftI2C___StopWaiting, BitPos(__Lib_SoftI2C___StopWaiting+0), 1
0x15E8	0xD001      	BRA         L_Soft_I2C_Stop15
;__Lib_SoftI2C.c,179 :: 		
0x15EA	0xD001      	BRA         L_Soft_I2C_Stop14
L_Soft_I2C_Stop15:
0x15EC	0xD7FA      	BRA         L_Soft_I2C_Stop13
L_Soft_I2C_Stop14:
;__Lib_SoftI2C.c,181 :: 		
0x15EE	0xF002ECE8  	CALL        _Delay_1us, 0
0x15F2	0xF002ECE8  	CALL        _Delay_1us, 0
;__Lib_SoftI2C.c,182 :: 		
0x15F6	0xF002ECE8  	CALL        _Delay_1us, 0
0x15FA	0xF002ECE8  	CALL        _Delay_1us, 0
;__Lib_SoftI2C.c,183 :: 		
0x15FE	0xF002ECE8  	CALL        _Delay_1us, 0
0x1602	0xF002ECE8  	CALL        _Delay_1us, 0
;__Lib_SoftI2C.c,184 :: 		
0x1606	0xF002ECE8  	CALL        _Delay_1us, 0
0x160A	0xF002ECE8  	CALL        _Delay_1us, 0
;__Lib_SoftI2C.c,186 :: 		
0x160E	0x8C95      	BSF         Soft_I2C_Sda_Direction, BitPos(Soft_I2C_Sda_Direction+0) 
;__Lib_SoftI2C.c,188 :: 		
0x1610	0xF002ECE8  	CALL        _Delay_1us, 0
0x1614	0xF002ECE8  	CALL        _Delay_1us, 0
;__Lib_SoftI2C.c,189 :: 		
L_end_Soft_I2C_Stop:
0x1618	0x0012      	RETURN      0
; end of _Soft_I2C_Stop
_mysql_search_forced:
;table_eeprom.h,401 :: 		char mysql_search_forced(char *tabla, char *columna, long buscar, int *fila){
;table_eeprom.h,405 :: 		if(mysql_exist(tabla)){
0x161A	0xF59CC578  	MOVFF       FARG_mysql_search_forced_tabla, FARG_mysql_exist_name
0x161E	0xF59DC579  	MOVFF       FARG_mysql_search_forced_tabla+1, FARG_mysql_exist_name+1
0x1622	0xF002EC3A  	CALL        _mysql_exist, 0
0x1626	0x5200      	MOVF        R0, 1 
0x1628	0xE054      	BZ          L_mysql_search_forced547
;table_eeprom.h,406 :: 		for(*fila = 1; *fila <= myTable.row; (*fila)++){
0x162A	0xFFE1C580  	MOVFF       FARG_mysql_search_forced_fila, FSR1L
0x162E	0xFFE2C581  	MOVFF       FARG_mysql_search_forced_fila+1, FSR1H
0x1632	0x0E01      	MOVLW       1
0x1634	0x6EE6      	MOVWF       POSTINC1 
0x1636	0x0E00      	MOVLW       0
0x1638	0x6EE6      	MOVWF       POSTINC1 
L_mysql_search_forced548:
0x163A	0xFFE9C580  	MOVFF       FARG_mysql_search_forced_fila, FSR0L
0x163E	0xFFEAC581  	MOVFF       FARG_mysql_search_forced_fila+1, FSR0H
0x1642	0xF001CFEE  	MOVFF       POSTINC0, R1
0x1646	0xF002CFEE  	MOVFF       POSTINC0, R2
0x164A	0x5002      	MOVF        R2, 0 
0x164C	0x0103      	MOVLB       3
0x164E	0x5D8E      	SUBWF       Validadora_myTable+3, 0, 1
0x1650	0xE102      	BNZ         L__mysql_search_forced1283
0x1652	0x5001      	MOVF        R1, 0 
0x1654	0x5D8D      	SUBWF       Validadora_myTable+2, 0, 1
L__mysql_search_forced1283:
0x1656	0xE33A      	BNC         L_mysql_search_forced549
;table_eeprom.h,408 :: 		if(!mysql_read(tabla, columna, *fila, &busqueda)){
0x1658	0xF586C578  	MOVFF       FARG_mysql_search_forced_tabla, FARG_mysql_read_name
0x165C	0xF587C579  	MOVFF       FARG_mysql_search_forced_tabla+1, FARG_mysql_read_name+1
0x1660	0xF588C57A  	MOVFF       FARG_mysql_search_forced_columna, FARG_mysql_read_column
0x1664	0xF589C57B  	MOVFF       FARG_mysql_search_forced_columna+1, FARG_mysql_read_column+1
0x1668	0xFFE9C580  	MOVFF       FARG_mysql_search_forced_fila, FSR0L
0x166C	0xFFEAC581  	MOVFF       FARG_mysql_search_forced_fila+1, FSR0H
0x1670	0xF58ACFEE  	MOVFF       POSTINC0, FARG_mysql_read_fila
0x1674	0xF58BCFEE  	MOVFF       POSTINC0, FARG_mysql_read_fila+1
0x1678	0x0E82      	MOVLW       mysql_search_forced_busqueda_L0
0x167A	0x0105      	MOVLB       5
0x167C	0x6F8C      	MOVWF       FARG_mysql_read_result, 1
0x167E	0x0E05      	MOVLW       hi_addr(mysql_search_forced_busqueda_L0)
0x1680	0x6F8D      	MOVWF       FARG_mysql_read_result+1, 1
0x1682	0xDDEA      	RCALL       _mysql_read
0x1684	0x5200      	MOVF        R0, 1 
0x1686	0xE10F      	BNZ         L_mysql_search_forced551
;table_eeprom.h,409 :: 		if(buscar == busqueda)
0x1688	0x0105      	MOVLB       5
0x168A	0x517F      	MOVF        FARG_mysql_search_forced_buscar+3, 0, 1
0x168C	0x1985      	XORWF       mysql_search_forced_busqueda_L0+3, 0, 1
0x168E	0xE108      	BNZ         L__mysql_search_forced1284
0x1690	0x517E      	MOVF        FARG_mysql_search_forced_buscar+2, 0, 1
0x1692	0x1984      	XORWF       mysql_search_forced_busqueda_L0+2, 0, 1
0x1694	0xE105      	BNZ         L__mysql_search_forced1284
0x1696	0x517D      	MOVF        FARG_mysql_search_forced_buscar+1, 0, 1
0x1698	0x1983      	XORWF       mysql_search_forced_busqueda_L0+1, 0, 1
0x169A	0xE102      	BNZ         L__mysql_search_forced1284
0x169C	0x517C      	MOVF        FARG_mysql_search_forced_buscar, 0, 1
0x169E	0x1982      	XORWF       mysql_search_forced_busqueda_L0, 0, 1
L__mysql_search_forced1284:
0x16A0	0xE102      	BNZ         L_mysql_search_forced552
;table_eeprom.h,410 :: 		return TABLE_RW_SUCCESS;
0x16A2	0x6A00      	CLRF        R0 
0x16A4	0xD018      	BRA         L_end_mysql_search_forced
L_mysql_search_forced552:
;table_eeprom.h,411 :: 		}
L_mysql_search_forced551:
;table_eeprom.h,406 :: 		for(*fila = 1; *fila <= myTable.row; (*fila)++){
0x16A6	0xFFE9C580  	MOVFF       FARG_mysql_search_forced_fila, FSR0L
0x16AA	0xFFEAC581  	MOVFF       FARG_mysql_search_forced_fila+1, FSR0H
0x16AE	0xF000CFEE  	MOVFF       POSTINC0, R0
0x16B2	0xF001CFEE  	MOVFF       POSTINC0, R1
0x16B6	0x4A00      	INFSNZ      R0, 1 
0x16B8	0x2A01      	INCF        R1, 1 
0x16BA	0xFFE1C580  	MOVFF       FARG_mysql_search_forced_fila, FSR1L
0x16BE	0xFFE2C581  	MOVFF       FARG_mysql_search_forced_fila+1, FSR1H
0x16C2	0xFFE6C000  	MOVFF       R0, POSTINC1
0x16C6	0xFFE6C001  	MOVFF       R1, POSTINC1
;table_eeprom.h,412 :: 		}
0x16CA	0xD7B7      	BRA         L_mysql_search_forced548
L_mysql_search_forced549:
;table_eeprom.h,413 :: 		return TABLE_RW_NO_EXIST_ROW;
0x16CC	0x0E03      	MOVLW       3
0x16CE	0x6E00      	MOVWF       R0 
0x16D0	0xD002      	BRA         L_end_mysql_search_forced
;table_eeprom.h,414 :: 		}
L_mysql_search_forced547:
;table_eeprom.h,416 :: 		return TABLE_RW_NO_EXIST_TABLE;
0x16D2	0x0E01      	MOVLW       1
0x16D4	0x6E00      	MOVWF       R0 
;table_eeprom.h,417 :: 		}
L_end_mysql_search_forced:
0x16D6	0x0012      	RETURN      0
; end of _mysql_search_forced
_SETFDZ32:
;__Lib_MathDouble.c,106 :: 		
;__Lib_MathDouble.c,110 :: 		
0x16D8	0x6A0B      	CLRF        R11, 0
;__Lib_MathDouble.c,111 :: 		
0x16DA	0x860B      	BSF         R11, 3, 0
;__Lib_MathDouble.c,112 :: 		
0x16DC	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,114 :: 		
L_end_SETFDZ32:
0x16DE	0x0012      	RETURN      0
; end of _SETFDZ32
_DS1307_write_string:
;ds1307.h,84 :: 		bool DS1307_write_string(DS1307 *myDS, char *date){
;ds1307.h,86 :: 		if(string_len(date) != 13 || !string_isNumeric(date))
0x16E0	0xF586C57A  	MOVFF       FARG_DS1307_write_string_date, FARG_string_len_texto
0x16E4	0xF587C57B  	MOVFF       FARG_DS1307_write_string_date+1, FARG_string_len_texto+1
0x16E8	0xDC20      	RCALL       _string_len
0x16EA	0x5000      	MOVF        R0, 0 
0x16EC	0x0A0D      	XORLW       13
0x16EE	0xE108      	BNZ         L__DS1307_write_string954
0x16F0	0xF586C57A  	MOVFF       FARG_DS1307_write_string_date, FARG_string_isNumeric_cadena
0x16F4	0xF587C57B  	MOVFF       FARG_DS1307_write_string_date+1, FARG_string_isNumeric_cadena+1
0x16F8	0xDC27      	RCALL       _string_isNumeric
0x16FA	0x5200      	MOVF        R0, 1 
0x16FC	0xE001      	BZ          L__DS1307_write_string954
0x16FE	0xD002      	BRA         L_DS1307_write_string386
L__DS1307_write_string954:
;ds1307.h,87 :: 		return false;
0x1700	0x6A00      	CLRF        R0 
0x1702	0xD108      	BRA         L_end_DS1307_write_string
L_DS1307_write_string386:
;ds1307.h,90 :: 		myDS->dayOfWeek = stringToNumN(&date[0], 1);
0x1704	0x0E03      	MOVLW       3
0x1706	0x2578      	ADDWF       FARG_DS1307_write_string_myDS, 0, 1
0x1708	0x6F7C      	MOVWF       FLOC__DS1307_write_string, 1
0x170A	0x0E00      	MOVLW       0
0x170C	0x2179      	ADDWFC      FARG_DS1307_write_string_myDS+1, 0, 1
0x170E	0x6F7D      	MOVWF       FLOC__DS1307_write_string+1, 1
0x1710	0xF586C57A  	MOVFF       FARG_DS1307_write_string_date, FARG_stringToNumN_cadena
0x1714	0xF587C57B  	MOVFF       FARG_DS1307_write_string_date+1, FARG_stringToNumN_cadena+1
0x1718	0x0E01      	MOVLW       1
0x171A	0x6F88      	MOVWF       FARG_stringToNumN_size, 1
0x171C	0xDC3F      	RCALL       _stringToNumN
0x171E	0xFFE1C57C  	MOVFF       FLOC__DS1307_write_string, FSR1L
0x1722	0xFFE2C57D  	MOVFF       FLOC__DS1307_write_string+1, FSR1H
0x1726	0xFFE6C000  	MOVFF       R0, POSTINC1
;ds1307.h,91 :: 		myDS->hours = stringToNumN(&date[1], 2);
0x172A	0x0E02      	MOVLW       2
0x172C	0x2578      	ADDWF       FARG_DS1307_write_string_myDS, 0, 1
0x172E	0x6F7C      	MOVWF       FLOC__DS1307_write_string, 1
0x1730	0x0E00      	MOVLW       0
0x1732	0x2179      	ADDWFC      FARG_DS1307_write_string_myDS+1, 0, 1
0x1734	0x6F7D      	MOVWF       FLOC__DS1307_write_string+1, 1
0x1736	0x0E01      	MOVLW       1
0x1738	0x257A      	ADDWF       FARG_DS1307_write_string_date, 0, 1
0x173A	0x6F86      	MOVWF       FARG_stringToNumN_cadena, 1
0x173C	0x0E00      	MOVLW       0
0x173E	0x217B      	ADDWFC      FARG_DS1307_write_string_date+1, 0, 1
0x1740	0x6F87      	MOVWF       FARG_stringToNumN_cadena+1, 1
0x1742	0x0E02      	MOVLW       2
0x1744	0x6F88      	MOVWF       FARG_stringToNumN_size, 1
0x1746	0xDC2A      	RCALL       _stringToNumN
0x1748	0xFFE1C57C  	MOVFF       FLOC__DS1307_write_string, FSR1L
0x174C	0xFFE2C57D  	MOVFF       FLOC__DS1307_write_string+1, FSR1H
0x1750	0xFFE6C000  	MOVFF       R0, POSTINC1
;ds1307.h,92 :: 		myDs->minutes = stringToNumN(&date[3], 2);
0x1754	0x0E01      	MOVLW       1
0x1756	0x2578      	ADDWF       FARG_DS1307_write_string_myDS, 0, 1
0x1758	0x6F7C      	MOVWF       FLOC__DS1307_write_string, 1
0x175A	0x0E00      	MOVLW       0
0x175C	0x2179      	ADDWFC      FARG_DS1307_write_string_myDS+1, 0, 1
0x175E	0x6F7D      	MOVWF       FLOC__DS1307_write_string+1, 1
0x1760	0x0E03      	MOVLW       3
0x1762	0x257A      	ADDWF       FARG_DS1307_write_string_date, 0, 1
0x1764	0x6F86      	MOVWF       FARG_stringToNumN_cadena, 1
0x1766	0x0E00      	MOVLW       0
0x1768	0x217B      	ADDWFC      FARG_DS1307_write_string_date+1, 0, 1
0x176A	0x6F87      	MOVWF       FARG_stringToNumN_cadena+1, 1
0x176C	0x0E02      	MOVLW       2
0x176E	0x6F88      	MOVWF       FARG_stringToNumN_size, 1
0x1770	0xDC15      	RCALL       _stringToNumN
0x1772	0xFFE1C57C  	MOVFF       FLOC__DS1307_write_string, FSR1L
0x1776	0xFFE2C57D  	MOVFF       FLOC__DS1307_write_string+1, FSR1H
0x177A	0xFFE6C000  	MOVFF       R0, POSTINC1
;ds1307.h,93 :: 		myDS->seconds = stringToNumN(&date[5], 2);
0x177E	0xF57CC578  	MOVFF       FARG_DS1307_write_string_myDS, FLOC__DS1307_write_string
0x1782	0xF57DC579  	MOVFF       FARG_DS1307_write_string_myDS+1, FLOC__DS1307_write_string+1
0x1786	0x0E05      	MOVLW       5
0x1788	0x257A      	ADDWF       FARG_DS1307_write_string_date, 0, 1
0x178A	0x6F86      	MOVWF       FARG_stringToNumN_cadena, 1
0x178C	0x0E00      	MOVLW       0
0x178E	0x217B      	ADDWFC      FARG_DS1307_write_string_date+1, 0, 1
0x1790	0x6F87      	MOVWF       FARG_stringToNumN_cadena+1, 1
0x1792	0x0E02      	MOVLW       2
0x1794	0x6F88      	MOVWF       FARG_stringToNumN_size, 1
0x1796	0xDC02      	RCALL       _stringToNumN
0x1798	0xFFE1C57C  	MOVFF       FLOC__DS1307_write_string, FSR1L
0x179C	0xFFE2C57D  	MOVFF       FLOC__DS1307_write_string+1, FSR1H
0x17A0	0xFFE6C000  	MOVFF       R0, POSTINC1
;ds1307.h,94 :: 		myDS->day = stringToNumN(&date[7], 2);
0x17A4	0x0E04      	MOVLW       4
0x17A6	0x2578      	ADDWF       FARG_DS1307_write_string_myDS, 0, 1
0x17A8	0x6F7C      	MOVWF       FLOC__DS1307_write_string, 1
0x17AA	0x0E00      	MOVLW       0
0x17AC	0x2179      	ADDWFC      FARG_DS1307_write_string_myDS+1, 0, 1
0x17AE	0x6F7D      	MOVWF       FLOC__DS1307_write_string+1, 1
0x17B0	0x0E07      	MOVLW       7
0x17B2	0x257A      	ADDWF       FARG_DS1307_write_string_date, 0, 1
0x17B4	0x6F86      	MOVWF       FARG_stringToNumN_cadena, 1
0x17B6	0x0E00      	MOVLW       0
0x17B8	0x217B      	ADDWFC      FARG_DS1307_write_string_date+1, 0, 1
0x17BA	0x6F87      	MOVWF       FARG_stringToNumN_cadena+1, 1
0x17BC	0x0E02      	MOVLW       2
0x17BE	0x6F88      	MOVWF       FARG_stringToNumN_size, 1
0x17C0	0xF007ECCE  	CALL        _stringToNumN, 0
0x17C4	0xFFE1C57C  	MOVFF       FLOC__DS1307_write_string, FSR1L
0x17C8	0xFFE2C57D  	MOVFF       FLOC__DS1307_write_string+1, FSR1H
0x17CC	0xFFE6C000  	MOVFF       R0, POSTINC1
;ds1307.h,95 :: 		myDS->month = stringToNumN(&date[9], 2);
0x17D0	0x0E05      	MOVLW       5
0x17D2	0x2578      	ADDWF       FARG_DS1307_write_string_myDS, 0, 1
0x17D4	0x6F7C      	MOVWF       FLOC__DS1307_write_string, 1
0x17D6	0x0E00      	MOVLW       0
0x17D8	0x2179      	ADDWFC      FARG_DS1307_write_string_myDS+1, 0, 1
0x17DA	0x6F7D      	MOVWF       FLOC__DS1307_write_string+1, 1
0x17DC	0x0E09      	MOVLW       9
0x17DE	0x257A      	ADDWF       FARG_DS1307_write_string_date, 0, 1
0x17E0	0x6F86      	MOVWF       FARG_stringToNumN_cadena, 1
0x17E2	0x0E00      	MOVLW       0
0x17E4	0x217B      	ADDWFC      FARG_DS1307_write_string_date+1, 0, 1
0x17E6	0x6F87      	MOVWF       FARG_stringToNumN_cadena+1, 1
0x17E8	0x0E02      	MOVLW       2
0x17EA	0x6F88      	MOVWF       FARG_stringToNumN_size, 1
0x17EC	0xF007ECCE  	CALL        _stringToNumN, 0
0x17F0	0xFFE1C57C  	MOVFF       FLOC__DS1307_write_string, FSR1L
0x17F4	0xFFE2C57D  	MOVFF       FLOC__DS1307_write_string+1, FSR1H
0x17F8	0xFFE6C000  	MOVFF       R0, POSTINC1
;ds1307.h,96 :: 		myDS->year = stringToNumN(&date[11], 2);
0x17FC	0x0E06      	MOVLW       6
0x17FE	0x2578      	ADDWF       FARG_DS1307_write_string_myDS, 0, 1
0x1800	0x6F7C      	MOVWF       FLOC__DS1307_write_string, 1
0x1802	0x0E00      	MOVLW       0
0x1804	0x2179      	ADDWFC      FARG_DS1307_write_string_myDS+1, 0, 1
0x1806	0x6F7D      	MOVWF       FLOC__DS1307_write_string+1, 1
0x1808	0x0E0B      	MOVLW       11
0x180A	0x257A      	ADDWF       FARG_DS1307_write_string_date, 0, 1
0x180C	0x6F86      	MOVWF       FARG_stringToNumN_cadena, 1
0x180E	0x0E00      	MOVLW       0
0x1810	0x217B      	ADDWFC      FARG_DS1307_write_string_date+1, 0, 1
0x1812	0x6F87      	MOVWF       FARG_stringToNumN_cadena+1, 1
0x1814	0x0E02      	MOVLW       2
0x1816	0x6F88      	MOVWF       FARG_stringToNumN_size, 1
0x1818	0xF007ECCE  	CALL        _stringToNumN, 0
0x181C	0xFFE1C57C  	MOVFF       FLOC__DS1307_write_string, FSR1L
0x1820	0xFFE2C57D  	MOVFF       FLOC__DS1307_write_string+1, FSR1H
0x1824	0xFFE6C000  	MOVFF       R0, POSTINC1
;ds1307.h,98 :: 		Soft_I2C_Start();               // Issue start signal
0x1828	0xF005ECEF  	CALL        _Soft_I2C_Start, 0
;ds1307.h,99 :: 		Soft_I2C_Write(DS1307_ADDRESS); // Address DS1307, see DS1307 datasheet
0x182C	0x0ED0      	MOVLW       208
0x182E	0x6F86      	MOVWF       FARG_Soft_I2C_Write_data_, 1
0x1830	0xF006EC0D  	CALL        _Soft_I2C_Write, 0
;ds1307.h,100 :: 		Soft_I2C_Write(0x00);           // Start from address 0
0x1834	0x6B86      	CLRF        FARG_Soft_I2C_Write_data_, 1
0x1836	0xF006EC0D  	CALL        _Soft_I2C_Write, 0
;ds1307.h,103 :: 		Soft_I2C_Write(decToBcd(myDS->seconds));   //Segundos
0x183A	0xFFE9C578  	MOVFF       FARG_DS1307_write_string_myDS, FSR0L
0x183E	0xFFEAC579  	MOVFF       FARG_DS1307_write_string_myDS+1, FSR0H
0x1842	0xF586CFEE  	MOVFF       POSTINC0, FARG_decToBcd_dato
0x1846	0xF006EC72  	CALL        _decToBcd, 0
0x184A	0xF586C000  	MOVFF       R0, FARG_Soft_I2C_Write_data_
0x184E	0xF006EC0D  	CALL        _Soft_I2C_Write, 0
;ds1307.h,104 :: 		Soft_I2C_Write(decToBcd(myDS->minutes));   //Minutos
0x1852	0x0E01      	MOVLW       1
0x1854	0x2578      	ADDWF       FARG_DS1307_write_string_myDS, 0, 1
0x1856	0x6EE9      	MOVWF       FSR0L 
0x1858	0x0E00      	MOVLW       0
0x185A	0x2179      	ADDWFC      FARG_DS1307_write_string_myDS+1, 0, 1
0x185C	0x6EEA      	MOVWF       FSR0H 
0x185E	0xF586CFEE  	MOVFF       POSTINC0, FARG_decToBcd_dato
0x1862	0xF006EC72  	CALL        _decToBcd, 0
0x1866	0xF586C000  	MOVFF       R0, FARG_Soft_I2C_Write_data_
0x186A	0xF006EC0D  	CALL        _Soft_I2C_Write, 0
;ds1307.h,105 :: 		Soft_I2C_Write(decToBcd(myDs->hours));     //Horas
0x186E	0x0E02      	MOVLW       2
0x1870	0x2578      	ADDWF       FARG_DS1307_write_string_myDS, 0, 1
0x1872	0x6EE9      	MOVWF       FSR0L 
0x1874	0x0E00      	MOVLW       0
0x1876	0x2179      	ADDWFC      FARG_DS1307_write_string_myDS+1, 0, 1
0x1878	0x6EEA      	MOVWF       FSR0H 
0x187A	0xF586CFEE  	MOVFF       POSTINC0, FARG_decToBcd_dato
0x187E	0xF006EC72  	CALL        _decToBcd, 0
0x1882	0xF586C000  	MOVFF       R0, FARG_Soft_I2C_Write_data_
0x1886	0xF006EC0D  	CALL        _Soft_I2C_Write, 0
;ds1307.h,106 :: 		Soft_I2C_Write(decToBcd(myDS->dayOfWeek)); //Dia de la semana
0x188A	0x0E03      	MOVLW       3
0x188C	0x2578      	ADDWF       FARG_DS1307_write_string_myDS, 0, 1
0x188E	0x6EE9      	MOVWF       FSR0L 
0x1890	0x0E00      	MOVLW       0
0x1892	0x2179      	ADDWFC      FARG_DS1307_write_string_myDS+1, 0, 1
0x1894	0x6EEA      	MOVWF       FSR0H 
0x1896	0xF586CFEE  	MOVFF       POSTINC0, FARG_decToBcd_dato
0x189A	0xF006EC72  	CALL        _decToBcd, 0
0x189E	0xF586C000  	MOVFF       R0, FARG_Soft_I2C_Write_data_
0x18A2	0xF006EC0D  	CALL        _Soft_I2C_Write, 0
;ds1307.h,107 :: 		Soft_I2C_Write(decToBcd(myDS->day));       //Dia del mes
0x18A6	0x0E04      	MOVLW       4
0x18A8	0x2578      	ADDWF       FARG_DS1307_write_string_myDS, 0, 1
0x18AA	0x6EE9      	MOVWF       FSR0L 
0x18AC	0x0E00      	MOVLW       0
0x18AE	0x2179      	ADDWFC      FARG_DS1307_write_string_myDS+1, 0, 1
0x18B0	0x6EEA      	MOVWF       FSR0H 
0x18B2	0xF586CFEE  	MOVFF       POSTINC0, FARG_decToBcd_dato
0x18B6	0xF006EC72  	CALL        _decToBcd, 0
0x18BA	0xF586C000  	MOVFF       R0, FARG_Soft_I2C_Write_data_
0x18BE	0xF006EC0D  	CALL        _Soft_I2C_Write, 0
;ds1307.h,108 :: 		Soft_I2C_Write(decToBcd(myDS->month));     //Mes
0x18C2	0x0E05      	MOVLW       5
0x18C4	0x2578      	ADDWF       FARG_DS1307_write_string_myDS, 0, 1
0x18C6	0x6EE9      	MOVWF       FSR0L 
0x18C8	0x0E00      	MOVLW       0
0x18CA	0x2179      	ADDWFC      FARG_DS1307_write_string_myDS+1, 0, 1
0x18CC	0x6EEA      	MOVWF       FSR0H 
0x18CE	0xF586CFEE  	MOVFF       POSTINC0, FARG_decToBcd_dato
0x18D2	0xF006EC72  	CALL        _decToBcd, 0
0x18D6	0xF586C000  	MOVFF       R0, FARG_Soft_I2C_Write_data_
0x18DA	0xF006EC0D  	CALL        _Soft_I2C_Write, 0
;ds1307.h,109 :: 		Soft_I2C_Write(decToBcd(myDS->year));      //Año
0x18DE	0x0E06      	MOVLW       6
0x18E0	0x2578      	ADDWF       FARG_DS1307_write_string_myDS, 0, 1
0x18E2	0x6EE9      	MOVWF       FSR0L 
0x18E4	0x0E00      	MOVLW       0
0x18E6	0x2179      	ADDWFC      FARG_DS1307_write_string_myDS+1, 0, 1
0x18E8	0x6EEA      	MOVWF       FSR0H 
0x18EA	0xF586CFEE  	MOVFF       POSTINC0, FARG_decToBcd_dato
0x18EE	0xF006EC72  	CALL        _decToBcd, 0
0x18F2	0xF586C000  	MOVFF       R0, FARG_Soft_I2C_Write_data_
0x18F6	0xF006EC0D  	CALL        _Soft_I2C_Write, 0
;ds1307.h,110 :: 		Soft_I2C_Write(0x80);                      //Register SQW
0x18FA	0x0E80      	MOVLW       128
0x18FC	0x6F86      	MOVWF       FARG_Soft_I2C_Write_data_, 1
0x18FE	0xF006EC0D  	CALL        _Soft_I2C_Write, 0
;ds1307.h,111 :: 		Soft_I2C_Stop();                           // Issue stop signal
0x1902	0xDE65      	RCALL       _Soft_I2C_Stop
;ds1307.h,114 :: 		DS1307_date(myDS, true);
0x1904	0xF586C578  	MOVFF       FARG_DS1307_write_string_myDS, FARG_DS1307_date_myDS
0x1908	0xF587C579  	MOVFF       FARG_DS1307_write_string_myDS+1, FARG_DS1307_date_myDS+1
0x190C	0x0E01      	MOVLW       1
0x190E	0x0105      	MOVLB       5
0x1910	0x6F88      	MOVWF       FARG_DS1307_date_formatComplet, 1
0x1912	0xDCFA      	RCALL       _DS1307_date
;ds1307.h,115 :: 		}
L_end_DS1307_write_string:
0x1914	0x0012      	RETURN      0
; end of _DS1307_write_string
_mysql_write_string:
;table_eeprom.h,274 :: 		char mysql_write_string(char *name, char *column, int fila, char *texto, bool endWrite){
;table_eeprom.h,275 :: 		char res = _mysql_calculate_address(name, column);
0x1916	0xF590C578  	MOVFF       FARG_mysql_write_string_name, FARG__mysql_calculate_address_name
0x191A	0xF591C579  	MOVFF       FARG_mysql_write_string_name+1, FARG__mysql_calculate_address_name+1
0x191E	0xF592C57A  	MOVFF       FARG_mysql_write_string_column, FARG__mysql_calculate_address_column
0x1922	0xF593C57B  	MOVFF       FARG_mysql_write_string_column+1, FARG__mysql_calculate_address_column+1
0x1926	0xF004ECAB  	CALL        __mysql_calculate_address, 0
0x192A	0xF581C000  	MOVFF       R0, mysql_write_string_res_L0
;table_eeprom.h,278 :: 		if(res)
0x192E	0x5200      	MOVF        R0, 1 
0x1930	0xE003      	BZ          L_mysql_write_string512
;table_eeprom.h,279 :: 		return res;
0x1932	0xF000C581  	MOVFF       mysql_write_string_res_L0, R0
0x1936	0xD093      	BRA         L_end_mysql_write_string
L_mysql_write_string512:
;table_eeprom.h,282 :: 		myTable.cont = strlen(texto)+1;   //Calcular el tamaño de la cadena a escribir
0x1938	0xF586C57E  	MOVFF       FARG_mysql_write_string_texto, FARG_strlen_s
0x193C	0xF587C57F  	MOVFF       FARG_mysql_write_string_texto+1, FARG_strlen_s+1
0x1940	0xF007EC37  	CALL        _strlen, 0
0x1944	0x5000      	MOVF        R0, 0 
0x1946	0x0F01      	ADDLW       1
0x1948	0x6E01      	MOVWF       R1 
0x194A	0xF3BAC001  	MOVFF       R1, Validadora_myTable+47
;table_eeprom.h,284 :: 		if(myTable.cont > myTable.tamCol){
0x194E	0x5001      	MOVF        R1, 0 
0x1950	0x0103      	MOVLB       3
0x1952	0x5D91      	SUBWF       Validadora_myTable+6, 0, 1
0x1954	0xE203      	BC          L_mysql_write_string513
;table_eeprom.h,285 :: 		return TABLE_RW_OUT_RANGE;
0x1956	0x0E04      	MOVLW       4
0x1958	0x6E00      	MOVWF       R0 
0x195A	0xD081      	BRA         L_end_mysql_write_string
;table_eeprom.h,286 :: 		}
L_mysql_write_string513:
;table_eeprom.h,288 :: 		if(endWrite){
0x195C	0x0105      	MOVLB       5
0x195E	0x5380      	MOVF        FARG_mysql_write_string_endWrite, 1, 1
0x1960	0xE047      	BZ          L_mysql_write_string514
;table_eeprom.h,289 :: 		if(myTable.rowAct < myTable.row){
0x1962	0x0103      	MOVLB       3
0x1964	0x518E      	MOVF        Validadora_myTable+3, 0, 1
0x1966	0x5D90      	SUBWF       Validadora_myTable+5, 0, 1
0x1968	0xE102      	BNZ         L__mysql_write_string1267
0x196A	0x518D      	MOVF        Validadora_myTable+2, 0, 1
0x196C	0x5D8F      	SUBWF       Validadora_myTable+4, 0, 1
L__mysql_write_string1267:
0x196E	0xE23C      	BC          L_mysql_write_string515
;table_eeprom.h,290 :: 		eeprom_i2c_write(myTable.addressAct+myTable.rowAct*myTable.tamCol, texto, myTable.cont);
0x1970	0xF000C38F  	MOVFF       Validadora_myTable+4, R0
0x1974	0xF001C390  	MOVFF       Validadora_myTable+5, R1
0x1978	0xF004C391  	MOVFF       Validadora_myTable+6, R4
0x197C	0x0E00      	MOVLW       0
0x197E	0x6E05      	MOVWF       R5 
0x1980	0xF002ECC0  	CALL        _Mul_16X16_U, 0
0x1984	0x5000      	MOVF        R0, 0 
0x1986	0x25B8      	ADDWF       Validadora_myTable+45, 0, 1
0x1988	0x0105      	MOVLB       5
0x198A	0x6F90      	MOVWF       FARG_eeprom_i2c_write_address, 1
0x198C	0x5001      	MOVF        R1, 0 
0x198E	0x0103      	MOVLB       3
0x1990	0x21B9      	ADDWFC      Validadora_myTable+46, 0, 1
0x1992	0x0105      	MOVLB       5
0x1994	0x6F91      	MOVWF       FARG_eeprom_i2c_write_address+1, 1
0x1996	0xF592C57E  	MOVFF       FARG_mysql_write_string_texto, FARG_eeprom_i2c_write_datos
0x199A	0xF593C57F  	MOVFF       FARG_mysql_write_string_texto+1, FARG_eeprom_i2c_write_datos+1
0x199E	0xF594C3BA  	MOVFF       Validadora_myTable+47, FARG_eeprom_i2c_write_size
0x19A2	0xF003ECEB  	CALL        _eeprom_i2c_write, 0
;table_eeprom.h,291 :: 		myTable.rowAct++;
0x19A6	0x0E01      	MOVLW       1
0x19A8	0x0103      	MOVLB       3
0x19AA	0x258F      	ADDWF       Validadora_myTable+4, 0, 1
0x19AC	0x6E00      	MOVWF       R0 
0x19AE	0x0E00      	MOVLW       0
0x19B0	0x2190      	ADDWFC      Validadora_myTable+5, 0, 1
0x19B2	0x6E01      	MOVWF       R1 
0x19B4	0xF38FC000  	MOVFF       R0, Validadora_myTable+4
0x19B8	0xF390C001  	MOVFF       R1, Validadora_myTable+5
;table_eeprom.h,292 :: 		eeprom_i2c_write(myTable.address+TABLE_MAX_SIZE_NAME+3, (char*)&myTable.rowAct, 2);
0x19BC	0x0E0F      	MOVLW       15
0x19BE	0x25B6      	ADDWF       Validadora_myTable+43, 0, 1
0x19C0	0x0105      	MOVLB       5
0x19C2	0x6F90      	MOVWF       FARG_eeprom_i2c_write_address, 1
0x19C4	0x0E00      	MOVLW       0
0x19C6	0x0103      	MOVLB       3
0x19C8	0x21B7      	ADDWFC      Validadora_myTable+44, 0, 1
0x19CA	0x0105      	MOVLB       5
0x19CC	0x6F91      	MOVWF       FARG_eeprom_i2c_write_address+1, 1
0x19CE	0x0E03      	MOVLW       3
0x19D0	0x2790      	ADDWF       FARG_eeprom_i2c_write_address, 1, 1
0x19D2	0x0E00      	MOVLW       0
0x19D4	0x2391      	ADDWFC      FARG_eeprom_i2c_write_address+1, 1, 1
0x19D6	0x0E8F      	MOVLW       Validadora_myTable+4
0x19D8	0x6F92      	MOVWF       FARG_eeprom_i2c_write_datos, 1
0x19DA	0x0E03      	MOVLW       hi_addr(Validadora_myTable+4)
0x19DC	0x6F93      	MOVWF       FARG_eeprom_i2c_write_datos+1, 1
0x19DE	0x0E02      	MOVLW       2
0x19E0	0x6F94      	MOVWF       FARG_eeprom_i2c_write_size, 1
0x19E2	0xF003ECEB  	CALL        _eeprom_i2c_write, 0
;table_eeprom.h,293 :: 		}else{
0x19E6	0xD003      	BRA         L_mysql_write_string516
L_mysql_write_string515:
;table_eeprom.h,294 :: 		return TABLE_RW_TABLE_FULL;   //Memoria llena de la tabla
0x19E8	0x0E05      	MOVLW       5
0x19EA	0x6E00      	MOVWF       R0 
0x19EC	0xD038      	BRA         L_end_mysql_write_string
;table_eeprom.h,295 :: 		}
L_mysql_write_string516:
;table_eeprom.h,296 :: 		}else if(fila >= 1 && fila <= myTable.rowAct)
0x19EE	0xD036      	BRA         L_mysql_write_string517
L_mysql_write_string514:
0x19F0	0x0E80      	MOVLW       128
0x19F2	0x0105      	MOVLB       5
0x19F4	0x197D      	XORWF       FARG_mysql_write_string_fila+1, 0, 1
0x19F6	0x6E00      	MOVWF       R0 
0x19F8	0x0E80      	MOVLW       128
0x19FA	0x5C00      	SUBWF       R0, 0 
0x19FC	0xE102      	BNZ         L__mysql_write_string1268
0x19FE	0x0E01      	MOVLW       1
0x1A00	0x5D7C      	SUBWF       FARG_mysql_write_string_fila, 0, 1
L__mysql_write_string1268:
0x1A02	0xE329      	BNC         L_mysql_write_string520
0x1A04	0x517D      	MOVF        FARG_mysql_write_string_fila+1, 0, 1
0x1A06	0x0103      	MOVLB       3
0x1A08	0x5D90      	SUBWF       Validadora_myTable+5, 0, 1
0x1A0A	0xE104      	BNZ         L__mysql_write_string1269
0x1A0C	0x0105      	MOVLB       5
0x1A0E	0x517C      	MOVF        FARG_mysql_write_string_fila, 0, 1
0x1A10	0x0103      	MOVLB       3
0x1A12	0x5D8F      	SUBWF       Validadora_myTable+4, 0, 1
L__mysql_write_string1269:
0x1A14	0xE320      	BNC         L_mysql_write_string520
L__mysql_write_string965:
;table_eeprom.h,297 :: 		eeprom_i2c_write(myTable.addressAct+(fila-1)*myTable.tamCol, texto, myTable.cont);
0x1A16	0x0E01      	MOVLW       1
0x1A18	0x0105      	MOVLB       5
0x1A1A	0x5D7C      	SUBWF       FARG_mysql_write_string_fila, 0, 1
0x1A1C	0x6E00      	MOVWF       R0 
0x1A1E	0x0E00      	MOVLW       0
0x1A20	0x597D      	SUBWFB      FARG_mysql_write_string_fila+1, 0, 1
0x1A22	0x6E01      	MOVWF       R1 
0x1A24	0xF004C391  	MOVFF       Validadora_myTable+6, R4
0x1A28	0x0E00      	MOVLW       0
0x1A2A	0x6E05      	MOVWF       R5 
0x1A2C	0xF002ECC0  	CALL        _Mul_16X16_U, 0
0x1A30	0x5000      	MOVF        R0, 0 
0x1A32	0x0103      	MOVLB       3
0x1A34	0x25B8      	ADDWF       Validadora_myTable+45, 0, 1
0x1A36	0x0105      	MOVLB       5
0x1A38	0x6F90      	MOVWF       FARG_eeprom_i2c_write_address, 1
0x1A3A	0x5001      	MOVF        R1, 0 
0x1A3C	0x0103      	MOVLB       3
0x1A3E	0x21B9      	ADDWFC      Validadora_myTable+46, 0, 1
0x1A40	0x0105      	MOVLB       5
0x1A42	0x6F91      	MOVWF       FARG_eeprom_i2c_write_address+1, 1
0x1A44	0xF592C57E  	MOVFF       FARG_mysql_write_string_texto, FARG_eeprom_i2c_write_datos
0x1A48	0xF593C57F  	MOVFF       FARG_mysql_write_string_texto+1, FARG_eeprom_i2c_write_datos+1
0x1A4C	0xF594C3BA  	MOVFF       Validadora_myTable+47, FARG_eeprom_i2c_write_size
0x1A50	0xF003ECEB  	CALL        _eeprom_i2c_write, 0
0x1A54	0xD003      	BRA         L_mysql_write_string521
L_mysql_write_string520:
;table_eeprom.h,299 :: 		return TABLE_RW_NO_EXIST_ROW;   //Fila inexistente
0x1A56	0x0E03      	MOVLW       3
0x1A58	0x6E00      	MOVWF       R0 
0x1A5A	0xD001      	BRA         L_end_mysql_write_string
;table_eeprom.h,300 :: 		}
L_mysql_write_string521:
L_mysql_write_string517:
;table_eeprom.h,302 :: 		return TABLE_RW_SUCCESS;     //Exito en grabacion
0x1A5C	0x6A00      	CLRF        R0 
;table_eeprom.h,303 :: 		}
L_end_mysql_write_string:
0x1A5E	0x0012      	RETURN      0
; end of _mysql_write_string
_timer1_reset:
;lib_timer1.h,57 :: 		void timer1_reset(){
;lib_timer1.h,58 :: 		TMR1H = getByte(sampler1,1);
0x1A60	0xFFCFC33E  	MOVFF       _sampler1+1, TMR1H
;lib_timer1.h,59 :: 		TMR1L = getByte(sampler1,0);
0x1A64	0xFFCEC33D  	MOVFF       _sampler1, TMR1L
;lib_timer1.h,60 :: 		}
L_end_timer1_reset:
0x1A68	0x0012      	RETURN      0
; end of _timer1_reset
_string_cpyn:
;string.h,76 :: 		char string_cpyn(char *destino, char *origen, char size){
;string.h,79 :: 		for(cont = 0; cont < size && origen[cont]; cont++)
0x1A6A	0x6A01      	CLRF        R1 
L_string_cpyn23:
0x1A6C	0x0105      	MOVLB       5
0x1A6E	0x517C      	MOVF        FARG_string_cpyn_size, 0, 1
0x1A70	0x5C01      	SUBWF       R1, 0 
0x1A72	0xE218      	BC          L_string_cpyn24
0x1A74	0x5001      	MOVF        R1, 0 
0x1A76	0x257A      	ADDWF       FARG_string_cpyn_origen, 0, 1
0x1A78	0x6EE9      	MOVWF       FSR0L 
0x1A7A	0x0E00      	MOVLW       0
0x1A7C	0x217B      	ADDWFC      FARG_string_cpyn_origen+1, 0, 1
0x1A7E	0x6EEA      	MOVWF       FSR0H 
0x1A80	0x52EE      	MOVF        POSTINC0, 1 
0x1A82	0xE010      	BZ          L_string_cpyn24
L__string_cpyn918:
;string.h,80 :: 		destino[cont] = origen[cont];
0x1A84	0x5001      	MOVF        R1, 0 
0x1A86	0x2578      	ADDWF       FARG_string_cpyn_destino, 0, 1
0x1A88	0x6EE1      	MOVWF       FSR1L 
0x1A8A	0x0E00      	MOVLW       0
0x1A8C	0x2179      	ADDWFC      FARG_string_cpyn_destino+1, 0, 1
0x1A8E	0x6EE2      	MOVWF       FSR1H 
0x1A90	0x5001      	MOVF        R1, 0 
0x1A92	0x257A      	ADDWF       FARG_string_cpyn_origen, 0, 1
0x1A94	0x6EE9      	MOVWF       FSR0L 
0x1A96	0x0E00      	MOVLW       0
0x1A98	0x217B      	ADDWFC      FARG_string_cpyn_origen+1, 0, 1
0x1A9A	0x6EEA      	MOVWF       FSR0H 
0x1A9C	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
;string.h,79 :: 		for(cont = 0; cont < size && origen[cont]; cont++)
0x1AA0	0x2A01      	INCF        R1, 1 
;string.h,80 :: 		destino[cont] = origen[cont];
0x1AA2	0xD7E4      	BRA         L_string_cpyn23
L_string_cpyn24:
;string.h,81 :: 		destino[cont] = 0;              //Final de cadena
0x1AA4	0x5001      	MOVF        R1, 0 
0x1AA6	0x2578      	ADDWF       FARG_string_cpyn_destino, 0, 1
0x1AA8	0x6EE1      	MOVWF       FSR1L 
0x1AAA	0x0E00      	MOVLW       0
0x1AAC	0x2179      	ADDWFC      FARG_string_cpyn_destino+1, 0, 1
0x1AAE	0x6EE2      	MOVWF       FSR1H 
0x1AB0	0x6AE6      	CLRF        POSTINC1 
;string.h,83 :: 		return cont;
0x1AB2	0xF000C001  	MOVFF       R1, R0
;string.h,84 :: 		}
L_end_string_cpyn:
0x1AB6	0x0012      	RETURN      0
; end of _string_cpyn
_stringToNum:
;string.h,184 :: 		long stringToNum(char *cadena){
;string.h,185 :: 		short cont = 0;
0x1AB8	0x0105      	MOVLB       5
0x1ABA	0x6B7A      	CLRF        stringToNum_cont_L0, 1
0x1ABC	0x6B7B      	CLRF        stringToNum_numero_L0, 1
0x1ABE	0x6B7C      	CLRF        stringToNum_numero_L0+1, 1
0x1AC0	0x6B7D      	CLRF        stringToNum_numero_L0+2, 1
0x1AC2	0x6B7E      	CLRF        stringToNum_numero_L0+3, 1
;string.h,189 :: 		while(cadena[cont]){
L_stringToNum68:
0x1AC4	0x517A      	MOVF        stringToNum_cont_L0, 0, 1
0x1AC6	0x2578      	ADDWF       FARG_stringToNum_cadena, 0, 1
0x1AC8	0x6EE9      	MOVWF       FSR0L 
0x1ACA	0x0E00      	MOVLW       0
0x1ACC	0xBF7A      	BTFSC       stringToNum_cont_L0, 7, 1
0x1ACE	0x0EFF      	MOVLW       255
0x1AD0	0x2179      	ADDWFC      FARG_stringToNum_cadena+1, 0, 1
0x1AD2	0x6EEA      	MOVWF       FSR0H 
0x1AD4	0x52EE      	MOVF        POSTINC0, 1 
0x1AD6	0xE038      	BZ          L_stringToNum69
;string.h,190 :: 		numero *= 10;
0x1AD8	0xF000C57B  	MOVFF       stringToNum_numero_L0, R0
0x1ADC	0xF001C57C  	MOVFF       stringToNum_numero_L0+1, R1
0x1AE0	0xF002C57D  	MOVFF       stringToNum_numero_L0+2, R2
0x1AE4	0xF003C57E  	MOVFF       stringToNum_numero_L0+3, R3
0x1AE8	0x0E0A      	MOVLW       10
0x1AEA	0x6E04      	MOVWF       R4 
0x1AEC	0x0E00      	MOVLW       0
0x1AEE	0x6E05      	MOVWF       R5 
0x1AF0	0x6E06      	MOVWF       R6 
0x1AF2	0x6E07      	MOVWF       R7 
0x1AF4	0xF004EC29  	CALL        _Mul_32x32_U, 0
0x1AF8	0xF57BC000  	MOVFF       R0, stringToNum_numero_L0
0x1AFC	0xF57CC001  	MOVFF       R1, stringToNum_numero_L0+1
0x1B00	0xF57DC002  	MOVFF       R2, stringToNum_numero_L0+2
0x1B04	0xF57EC003  	MOVFF       R3, stringToNum_numero_L0+3
;string.h,191 :: 		numero += cadena[cont++]-'0';
0x1B08	0x517A      	MOVF        stringToNum_cont_L0, 0, 1
0x1B0A	0x2578      	ADDWF       FARG_stringToNum_cadena, 0, 1
0x1B0C	0x6EE9      	MOVWF       FSR0L 
0x1B0E	0x0E00      	MOVLW       0
0x1B10	0xBF7A      	BTFSC       stringToNum_cont_L0, 7, 1
0x1B12	0x0EFF      	MOVLW       255
0x1B14	0x2179      	ADDWFC      FARG_stringToNum_cadena+1, 0, 1
0x1B16	0x6EEA      	MOVWF       FSR0H 
0x1B18	0x0E30      	MOVLW       48
0x1B1A	0x5CEE      	SUBWF       POSTINC0, 0 
0x1B1C	0x6E04      	MOVWF       R4 
0x1B1E	0x6A05      	CLRF        R5 
0x1B20	0x0E00      	MOVLW       0
0x1B22	0x5A05      	SUBWFB      R5, 1 
0x1B24	0x5004      	MOVF        R4, 0 
0x1B26	0x2400      	ADDWF       R0, 0 
0x1B28	0x6F7B      	MOVWF       stringToNum_numero_L0, 1
0x1B2A	0x5005      	MOVF        R5, 0 
0x1B2C	0x2001      	ADDWFC      R1, 0 
0x1B2E	0x6F7C      	MOVWF       stringToNum_numero_L0+1, 1
0x1B30	0x0E00      	MOVLW       0
0x1B32	0xBE05      	BTFSC       R5, 7 
0x1B34	0x0EFF      	MOVLW       255
0x1B36	0x2002      	ADDWFC      R2, 0 
0x1B38	0x6F7D      	MOVWF       stringToNum_numero_L0+2, 1
0x1B3A	0x0E00      	MOVLW       0
0x1B3C	0xBE05      	BTFSC       R5, 7 
0x1B3E	0x0EFF      	MOVLW       255
0x1B40	0x2003      	ADDWFC      R3, 0 
0x1B42	0x6F7E      	MOVWF       stringToNum_numero_L0+3, 1
0x1B44	0x2B7A      	INCF        stringToNum_cont_L0, 1, 1
;string.h,192 :: 		}
0x1B46	0xD7BE      	BRA         L_stringToNum68
L_stringToNum69:
;string.h,194 :: 		return numero;
0x1B48	0xF000C57B  	MOVFF       stringToNum_numero_L0, R0
0x1B4C	0xF001C57C  	MOVFF       stringToNum_numero_L0+1, R1
0x1B50	0xF002C57D  	MOVFF       stringToNum_numero_L0+2, R2
0x1B54	0xF003C57E  	MOVFF       stringToNum_numero_L0+3, R3
;string.h,195 :: 		}
L_end_stringToNum:
0x1B58	0x0012      	RETURN      0
; end of _stringToNum
_numToHex:
;string.h,208 :: 		char* numToHex(long valor, char *cadena, char bytes){
;string.h,209 :: 		char cont = 0;
0x1B5A	0x0105      	MOVLB       5
0x1B5C	0x6B7F      	CLRF        numToHex_cont_L0, 1
;string.h,212 :: 		while(bytes--){
L_numToHex72:
0x1B5E	0xF000C57E  	MOVFF       FARG_numToHex_bytes, R0
0x1B62	0x077E      	DECF        FARG_numToHex_bytes, 1, 1
0x1B64	0x5200      	MOVF        R0, 1 
0x1B66	0xB4D8      	BTFSC       STATUS, 2 
0x1B68	0xD090      	BRA         L_numToHex73
;string.h,214 :: 		cadena[cont] = swap(getByte(valor, bytes))&0x0F;
0x1B6A	0x517F      	MOVF        numToHex_cont_L0, 0, 1
0x1B6C	0x257C      	ADDWF       FARG_numToHex_cadena, 0, 1
0x1B6E	0x6F80      	MOVWF       FLOC__numToHex, 1
0x1B70	0x0E00      	MOVLW       0
0x1B72	0x217D      	ADDWFC      FARG_numToHex_cadena+1, 0, 1
0x1B74	0x6F81      	MOVWF       FLOC__numToHex+1, 1
0x1B76	0x0E78      	MOVLW       FARG_numToHex_valor
0x1B78	0x6EE9      	MOVWF       FSR0L 
0x1B7A	0x0E05      	MOVLW       hi_addr(FARG_numToHex_valor)
0x1B7C	0x6EEA      	MOVWF       FSR0H 
0x1B7E	0x517E      	MOVF        FARG_numToHex_bytes, 0, 1
0x1B80	0x26E9      	ADDWF       FSR0L, 1 
0x1B82	0xB0D8      	BTFSC       STATUS, 0 
0x1B84	0x2AEA      	INCF        FSR0H, 1 
0x1B86	0xF590CFEE  	MOVFF       POSTINC0, FARG_Swap_input
0x1B8A	0xF005ECEB  	CALL        _Swap, 0
0x1B8E	0x0E0F      	MOVLW       15
0x1B90	0x1600      	ANDWF       R0, 1 
0x1B92	0xFFE1C580  	MOVFF       FLOC__numToHex, FSR1L
0x1B96	0xFFE2C581  	MOVFF       FLOC__numToHex+1, FSR1H
0x1B9A	0xFFE6C000  	MOVFF       R0, POSTINC1
;string.h,215 :: 		if(cadena[cont] < 0x0A)
0x1B9E	0x517F      	MOVF        numToHex_cont_L0, 0, 1
0x1BA0	0x257C      	ADDWF       FARG_numToHex_cadena, 0, 1
0x1BA2	0x6EE9      	MOVWF       FSR0L 
0x1BA4	0x0E00      	MOVLW       0
0x1BA6	0x217D      	ADDWFC      FARG_numToHex_cadena+1, 0, 1
0x1BA8	0x6EEA      	MOVWF       FSR0H 
0x1BAA	0x0E0A      	MOVLW       10
0x1BAC	0x5CEE      	SUBWF       POSTINC0, 0 
0x1BAE	0xE214      	BC          L_numToHex74
;string.h,216 :: 		cadena[cont] = cadena[cont] + '0';
0x1BB0	0x517F      	MOVF        numToHex_cont_L0, 0, 1
0x1BB2	0x257C      	ADDWF       FARG_numToHex_cadena, 0, 1
0x1BB4	0x6E01      	MOVWF       R1 
0x1BB6	0x0E00      	MOVLW       0
0x1BB8	0x217D      	ADDWFC      FARG_numToHex_cadena+1, 0, 1
0x1BBA	0x6E02      	MOVWF       R2 
0x1BBC	0xFFE9C001  	MOVFF       R1, FSR0L
0x1BC0	0xFFEAC002  	MOVFF       R2, FSR0H
0x1BC4	0x0E30      	MOVLW       48
0x1BC6	0x24EE      	ADDWF       POSTINC0, 0 
0x1BC8	0x6E00      	MOVWF       R0 
0x1BCA	0xFFE1C001  	MOVFF       R1, FSR1L
0x1BCE	0xFFE2C002  	MOVFF       R2, FSR1H
0x1BD2	0xFFE6C000  	MOVFF       R0, POSTINC1
0x1BD6	0xD013      	BRA         L_numToHex75
L_numToHex74:
;string.h,218 :: 		cadena[cont] = cadena[cont] + '7';  //Compenso la letra A
0x1BD8	0x517F      	MOVF        numToHex_cont_L0, 0, 1
0x1BDA	0x257C      	ADDWF       FARG_numToHex_cadena, 0, 1
0x1BDC	0x6E01      	MOVWF       R1 
0x1BDE	0x0E00      	MOVLW       0
0x1BE0	0x217D      	ADDWFC      FARG_numToHex_cadena+1, 0, 1
0x1BE2	0x6E02      	MOVWF       R2 
0x1BE4	0xFFE9C001  	MOVFF       R1, FSR0L
0x1BE8	0xFFEAC002  	MOVFF       R2, FSR0H
0x1BEC	0x0E37      	MOVLW       55
0x1BEE	0x24EE      	ADDWF       POSTINC0, 0 
0x1BF0	0x6E00      	MOVWF       R0 
0x1BF2	0xFFE1C001  	MOVFF       R1, FSR1L
0x1BF6	0xFFE2C002  	MOVFF       R2, FSR1H
0x1BFA	0xFFE6C000  	MOVFF       R0, POSTINC1
L_numToHex75:
;string.h,219 :: 		cont++;
0x1BFE	0x2B7F      	INCF        numToHex_cont_L0, 1, 1
;string.h,221 :: 		cadena[cont] = getByte(valor, bytes)&0x0F;
0x1C00	0x517F      	MOVF        numToHex_cont_L0, 0, 1
0x1C02	0x257C      	ADDWF       FARG_numToHex_cadena, 0, 1
0x1C04	0x6EE1      	MOVWF       FSR1L 
0x1C06	0x0E00      	MOVLW       0
0x1C08	0x217D      	ADDWFC      FARG_numToHex_cadena+1, 0, 1
0x1C0A	0x6EE2      	MOVWF       FSR1H 
0x1C0C	0x0E78      	MOVLW       FARG_numToHex_valor
0x1C0E	0x6EE9      	MOVWF       FSR0L 
0x1C10	0x0E05      	MOVLW       hi_addr(FARG_numToHex_valor)
0x1C12	0x6EEA      	MOVWF       FSR0H 
0x1C14	0x517E      	MOVF        FARG_numToHex_bytes, 0, 1
0x1C16	0x26E9      	ADDWF       FSR0L, 1 
0x1C18	0xB0D8      	BTFSC       STATUS, 0 
0x1C1A	0x2AEA      	INCF        FSR0H, 1 
0x1C1C	0x0E0F      	MOVLW       15
0x1C1E	0x14EE      	ANDWF       POSTINC0, 0 
0x1C20	0x6E00      	MOVWF       R0 
0x1C22	0xFFE6C000  	MOVFF       R0, POSTINC1
;string.h,222 :: 		if(cadena[cont] < 0x0A)
0x1C26	0x517F      	MOVF        numToHex_cont_L0, 0, 1
0x1C28	0x257C      	ADDWF       FARG_numToHex_cadena, 0, 1
0x1C2A	0x6EE9      	MOVWF       FSR0L 
0x1C2C	0x0E00      	MOVLW       0
0x1C2E	0x217D      	ADDWFC      FARG_numToHex_cadena+1, 0, 1
0x1C30	0x6EEA      	MOVWF       FSR0H 
0x1C32	0x0E0A      	MOVLW       10
0x1C34	0x5CEE      	SUBWF       POSTINC0, 0 
0x1C36	0xE214      	BC          L_numToHex76
;string.h,223 :: 		cadena[cont] = cadena[cont] + '0';
0x1C38	0x517F      	MOVF        numToHex_cont_L0, 0, 1
0x1C3A	0x257C      	ADDWF       FARG_numToHex_cadena, 0, 1
0x1C3C	0x6E01      	MOVWF       R1 
0x1C3E	0x0E00      	MOVLW       0
0x1C40	0x217D      	ADDWFC      FARG_numToHex_cadena+1, 0, 1
0x1C42	0x6E02      	MOVWF       R2 
0x1C44	0xFFE9C001  	MOVFF       R1, FSR0L
0x1C48	0xFFEAC002  	MOVFF       R2, FSR0H
0x1C4C	0x0E30      	MOVLW       48
0x1C4E	0x24EE      	ADDWF       POSTINC0, 0 
0x1C50	0x6E00      	MOVWF       R0 
0x1C52	0xFFE1C001  	MOVFF       R1, FSR1L
0x1C56	0xFFE2C002  	MOVFF       R2, FSR1H
0x1C5A	0xFFE6C000  	MOVFF       R0, POSTINC1
0x1C5E	0xD013      	BRA         L_numToHex77
L_numToHex76:
;string.h,225 :: 		cadena[cont] = cadena[cont] + '7';  //Compenso la letra A
0x1C60	0x517F      	MOVF        numToHex_cont_L0, 0, 1
0x1C62	0x257C      	ADDWF       FARG_numToHex_cadena, 0, 1
0x1C64	0x6E01      	MOVWF       R1 
0x1C66	0x0E00      	MOVLW       0
0x1C68	0x217D      	ADDWFC      FARG_numToHex_cadena+1, 0, 1
0x1C6A	0x6E02      	MOVWF       R2 
0x1C6C	0xFFE9C001  	MOVFF       R1, FSR0L
0x1C70	0xFFEAC002  	MOVFF       R2, FSR0H
0x1C74	0x0E37      	MOVLW       55
0x1C76	0x24EE      	ADDWF       POSTINC0, 0 
0x1C78	0x6E00      	MOVWF       R0 
0x1C7A	0xFFE1C001  	MOVFF       R1, FSR1L
0x1C7E	0xFFE2C002  	MOVFF       R2, FSR1H
0x1C82	0xFFE6C000  	MOVFF       R0, POSTINC1
L_numToHex77:
;string.h,226 :: 		cont++;
0x1C86	0x2B7F      	INCF        numToHex_cont_L0, 1, 1
;string.h,227 :: 		}
0x1C88	0xD76A      	BRA         L_numToHex72
L_numToHex73:
;string.h,228 :: 		cadena[cont] = 0;
0x1C8A	0x517F      	MOVF        numToHex_cont_L0, 0, 1
0x1C8C	0x257C      	ADDWF       FARG_numToHex_cadena, 0, 1
0x1C8E	0x6EE1      	MOVWF       FSR1L 
0x1C90	0x0E00      	MOVLW       0
0x1C92	0x217D      	ADDWFC      FARG_numToHex_cadena+1, 0, 1
0x1C94	0x6EE2      	MOVWF       FSR1H 
0x1C96	0x6AE6      	CLRF        POSTINC1 
;string.h,230 :: 		return cadena;
0x1C98	0xF000C57C  	MOVFF       FARG_numToHex_cadena, R0
0x1C9C	0xF001C57D  	MOVFF       FARG_numToHex_cadena+1, R1
;string.h,231 :: 		}
L_end_numToHex:
0x1CA0	0x0012      	RETURN      0
; end of _numToHex
_hexToNum:
;string.h,233 :: 		long hexToNum(char *hex){
;string.h,235 :: 		char ref = strlen(hex)-1;
0x1CA2	0xF586C578  	MOVFF       FARG_hexToNum_hex, FARG_strlen_s
0x1CA6	0xF587C579  	MOVFF       FARG_hexToNum_hex+1, FARG_strlen_s+1
0x1CAA	0xF007EC37  	CALL        _strlen, 0
0x1CAE	0x0E01      	MOVLW       1
0x1CB0	0x5E00      	SUBWF       R0, 1 
0x1CB2	0x0E00      	MOVLW       0
0x1CB4	0x5A01      	SUBWFB      R1, 1 
0x1CB6	0xF57BC000  	MOVFF       R0, hexToNum_ref_L0
;string.h,236 :: 		long valor = 0;
0x1CBA	0x6B7C      	CLRF        hexToNum_valor_L0, 1
0x1CBC	0x6B7D      	CLRF        hexToNum_valor_L0+1, 1
0x1CBE	0x6B7E      	CLRF        hexToNum_valor_L0+2, 1
0x1CC0	0x6B7F      	CLRF        hexToNum_valor_L0+3, 1
;string.h,239 :: 		for(cont = 0; cont < 8 && hex[cont]; cont++, ref--){
0x1CC2	0x6B7A      	CLRF        hexToNum_cont_L0, 1
L_hexToNum78:
0x1CC4	0x0E08      	MOVLW       8
0x1CC6	0x5D7A      	SUBWF       hexToNum_cont_L0, 0, 1
0x1CC8	0xB0D8      	BTFSC       STATUS, 0 
0x1CCA	0xD0D1      	BRA         L_hexToNum79
0x1CCC	0x517A      	MOVF        hexToNum_cont_L0, 0, 1
0x1CCE	0x2578      	ADDWF       FARG_hexToNum_hex, 0, 1
0x1CD0	0x6EE9      	MOVWF       FSR0L 
0x1CD2	0x0E00      	MOVLW       0
0x1CD4	0x2179      	ADDWFC      FARG_hexToNum_hex+1, 0, 1
0x1CD6	0x6EEA      	MOVWF       FSR0H 
0x1CD8	0x52EE      	MOVF        POSTINC0, 1 
0x1CDA	0xB4D8      	BTFSC       STATUS, 2 
0x1CDC	0xD0C8      	BRA         L_hexToNum79
L__hexToNum926:
;string.h,241 :: 		if(hex[cont] >= '0' && hex[cont] <= '9')
0x1CDE	0x517A      	MOVF        hexToNum_cont_L0, 0, 1
0x1CE0	0x2578      	ADDWF       FARG_hexToNum_hex, 0, 1
0x1CE2	0x6EE9      	MOVWF       FSR0L 
0x1CE4	0x0E00      	MOVLW       0
0x1CE6	0x2179      	ADDWFC      FARG_hexToNum_hex+1, 0, 1
0x1CE8	0x6EEA      	MOVWF       FSR0H 
0x1CEA	0x0E30      	MOVLW       48
0x1CEC	0x5CEE      	SUBWF       POSTINC0, 0 
0x1CEE	0xE32B      	BNC         L_hexToNum85
0x1CF0	0x517A      	MOVF        hexToNum_cont_L0, 0, 1
0x1CF2	0x2578      	ADDWF       FARG_hexToNum_hex, 0, 1
0x1CF4	0x6EE9      	MOVWF       FSR0L 
0x1CF6	0x0E00      	MOVLW       0
0x1CF8	0x2179      	ADDWFC      FARG_hexToNum_hex+1, 0, 1
0x1CFA	0x6EEA      	MOVWF       FSR0H 
0x1CFC	0x50EE      	MOVF        POSTINC0, 0 
0x1CFE	0x0839      	SUBLW       57
0x1D00	0xE322      	BNC         L_hexToNum85
L__hexToNum925:
;string.h,242 :: 		getByte(valor, ref/2) |= hex[cont] - '0';
0x1D02	0xF000C57B  	MOVFF       hexToNum_ref_L0, R0
0x1D06	0x3200      	RRCF        R0, 1 
0x1D08	0x9E00      	BCF         R0, 7 
0x1D0A	0x0E7C      	MOVLW       hexToNum_valor_L0
0x1D0C	0x6E01      	MOVWF       R1 
0x1D0E	0x0E05      	MOVLW       hi_addr(hexToNum_valor_L0)
0x1D10	0x6E02      	MOVWF       R2 
0x1D12	0x5000      	MOVF        R0, 0 
0x1D14	0x2601      	ADDWF       R1, 1 
0x1D16	0xB0D8      	BTFSC       STATUS, 0 
0x1D18	0x2A02      	INCF        R2, 1 
0x1D1A	0x517A      	MOVF        hexToNum_cont_L0, 0, 1
0x1D1C	0x2578      	ADDWF       FARG_hexToNum_hex, 0, 1
0x1D1E	0x6EE9      	MOVWF       FSR0L 
0x1D20	0x0E00      	MOVLW       0
0x1D22	0x2179      	ADDWFC      FARG_hexToNum_hex+1, 0, 1
0x1D24	0x6EEA      	MOVWF       FSR0H 
0x1D26	0x0E30      	MOVLW       48
0x1D28	0x5CEE      	SUBWF       POSTINC0, 0 
0x1D2A	0x6E00      	MOVWF       R0 
0x1D2C	0xFFE9C001  	MOVFF       R1, FSR0L
0x1D30	0xFFEAC002  	MOVFF       R2, FSR0H
0x1D34	0x50EE      	MOVF        POSTINC0, 0 
0x1D36	0x1200      	IORWF       R0, 1 
0x1D38	0xFFE1C001  	MOVFF       R1, FSR1L
0x1D3C	0xFFE2C002  	MOVFF       R2, FSR1H
0x1D40	0xFFE6C000  	MOVFF       R0, POSTINC1
0x1D44	0xD06D      	BRA         L_hexToNum86
L_hexToNum85:
;string.h,243 :: 		else if(hex[cont] >= 'a' && hex[cont] <= 'f')
0x1D46	0x517A      	MOVF        hexToNum_cont_L0, 0, 1
0x1D48	0x2578      	ADDWF       FARG_hexToNum_hex, 0, 1
0x1D4A	0x6EE9      	MOVWF       FSR0L 
0x1D4C	0x0E00      	MOVLW       0
0x1D4E	0x2179      	ADDWFC      FARG_hexToNum_hex+1, 0, 1
0x1D50	0x6EEA      	MOVWF       FSR0H 
0x1D52	0x0E61      	MOVLW       97
0x1D54	0x5CEE      	SUBWF       POSTINC0, 0 
0x1D56	0xE32D      	BNC         L_hexToNum89
0x1D58	0x517A      	MOVF        hexToNum_cont_L0, 0, 1
0x1D5A	0x2578      	ADDWF       FARG_hexToNum_hex, 0, 1
0x1D5C	0x6EE9      	MOVWF       FSR0L 
0x1D5E	0x0E00      	MOVLW       0
0x1D60	0x2179      	ADDWFC      FARG_hexToNum_hex+1, 0, 1
0x1D62	0x6EEA      	MOVWF       FSR0H 
0x1D64	0x50EE      	MOVF        POSTINC0, 0 
0x1D66	0x0866      	SUBLW       102
0x1D68	0xE324      	BNC         L_hexToNum89
L__hexToNum924:
;string.h,244 :: 		getByte(valor, ref/2) |= 10+(hex[cont] - 'a');
0x1D6A	0xF000C57B  	MOVFF       hexToNum_ref_L0, R0
0x1D6E	0x3200      	RRCF        R0, 1 
0x1D70	0x9E00      	BCF         R0, 7 
0x1D72	0x0E7C      	MOVLW       hexToNum_valor_L0
0x1D74	0x6E01      	MOVWF       R1 
0x1D76	0x0E05      	MOVLW       hi_addr(hexToNum_valor_L0)
0x1D78	0x6E02      	MOVWF       R2 
0x1D7A	0x5000      	MOVF        R0, 0 
0x1D7C	0x2601      	ADDWF       R1, 1 
0x1D7E	0xB0D8      	BTFSC       STATUS, 0 
0x1D80	0x2A02      	INCF        R2, 1 
0x1D82	0x517A      	MOVF        hexToNum_cont_L0, 0, 1
0x1D84	0x2578      	ADDWF       FARG_hexToNum_hex, 0, 1
0x1D86	0x6EE9      	MOVWF       FSR0L 
0x1D88	0x0E00      	MOVLW       0
0x1D8A	0x2179      	ADDWFC      FARG_hexToNum_hex+1, 0, 1
0x1D8C	0x6EEA      	MOVWF       FSR0H 
0x1D8E	0x0E61      	MOVLW       97
0x1D90	0x5CEE      	SUBWF       POSTINC0, 0 
0x1D92	0x6E00      	MOVWF       R0 
0x1D94	0x0E0A      	MOVLW       10
0x1D96	0x2600      	ADDWF       R0, 1 
0x1D98	0xFFE9C001  	MOVFF       R1, FSR0L
0x1D9C	0xFFEAC002  	MOVFF       R2, FSR0H
0x1DA0	0x50EE      	MOVF        POSTINC0, 0 
0x1DA2	0x1200      	IORWF       R0, 1 
0x1DA4	0xFFE1C001  	MOVFF       R1, FSR1L
0x1DA8	0xFFE2C002  	MOVFF       R2, FSR1H
0x1DAC	0xFFE6C000  	MOVFF       R0, POSTINC1
0x1DB0	0xD037      	BRA         L_hexToNum90
L_hexToNum89:
;string.h,245 :: 		else if(hex[cont] >= 'A' && hex[cont] <= 'F')
0x1DB2	0x517A      	MOVF        hexToNum_cont_L0, 0, 1
0x1DB4	0x2578      	ADDWF       FARG_hexToNum_hex, 0, 1
0x1DB6	0x6EE9      	MOVWF       FSR0L 
0x1DB8	0x0E00      	MOVLW       0
0x1DBA	0x2179      	ADDWFC      FARG_hexToNum_hex+1, 0, 1
0x1DBC	0x6EEA      	MOVWF       FSR0H 
0x1DBE	0x0E41      	MOVLW       65
0x1DC0	0x5CEE      	SUBWF       POSTINC0, 0 
0x1DC2	0xE32D      	BNC         L_hexToNum93
0x1DC4	0x517A      	MOVF        hexToNum_cont_L0, 0, 1
0x1DC6	0x2578      	ADDWF       FARG_hexToNum_hex, 0, 1
0x1DC8	0x6EE9      	MOVWF       FSR0L 
0x1DCA	0x0E00      	MOVLW       0
0x1DCC	0x2179      	ADDWFC      FARG_hexToNum_hex+1, 0, 1
0x1DCE	0x6EEA      	MOVWF       FSR0H 
0x1DD0	0x50EE      	MOVF        POSTINC0, 0 
0x1DD2	0x0846      	SUBLW       70
0x1DD4	0xE324      	BNC         L_hexToNum93
L__hexToNum923:
;string.h,246 :: 		getByte(valor, ref/2) |= 10+(hex[cont] - 'A');
0x1DD6	0xF000C57B  	MOVFF       hexToNum_ref_L0, R0
0x1DDA	0x3200      	RRCF        R0, 1 
0x1DDC	0x9E00      	BCF         R0, 7 
0x1DDE	0x0E7C      	MOVLW       hexToNum_valor_L0
0x1DE0	0x6E01      	MOVWF       R1 
0x1DE2	0x0E05      	MOVLW       hi_addr(hexToNum_valor_L0)
0x1DE4	0x6E02      	MOVWF       R2 
0x1DE6	0x5000      	MOVF        R0, 0 
0x1DE8	0x2601      	ADDWF       R1, 1 
0x1DEA	0xB0D8      	BTFSC       STATUS, 0 
0x1DEC	0x2A02      	INCF        R2, 1 
0x1DEE	0x517A      	MOVF        hexToNum_cont_L0, 0, 1
0x1DF0	0x2578      	ADDWF       FARG_hexToNum_hex, 0, 1
0x1DF2	0x6EE9      	MOVWF       FSR0L 
0x1DF4	0x0E00      	MOVLW       0
0x1DF6	0x2179      	ADDWFC      FARG_hexToNum_hex+1, 0, 1
0x1DF8	0x6EEA      	MOVWF       FSR0H 
0x1DFA	0x0E41      	MOVLW       65
0x1DFC	0x5CEE      	SUBWF       POSTINC0, 0 
0x1DFE	0x6E00      	MOVWF       R0 
0x1E00	0x0E0A      	MOVLW       10
0x1E02	0x2600      	ADDWF       R0, 1 
0x1E04	0xFFE9C001  	MOVFF       R1, FSR0L
0x1E08	0xFFEAC002  	MOVFF       R2, FSR0H
0x1E0C	0x50EE      	MOVF        POSTINC0, 0 
0x1E0E	0x1200      	IORWF       R0, 1 
0x1E10	0xFFE1C001  	MOVFF       R1, FSR1L
0x1E14	0xFFE2C002  	MOVFF       R2, FSR1H
0x1E18	0xFFE6C000  	MOVFF       R0, POSTINC1
0x1E1C	0xD001      	BRA         L_hexToNum94
L_hexToNum93:
;string.h,248 :: 		break;  //Fallo la conversion
0x1E1E	0xD027      	BRA         L_hexToNum79
L_hexToNum94:
L_hexToNum90:
L_hexToNum86:
;string.h,251 :: 		if(ref % 2 == 1)
0x1E20	0x0E01      	MOVLW       1
0x1E22	0x157B      	ANDWF       hexToNum_ref_L0, 0, 1
0x1E24	0x6E01      	MOVWF       R1 
0x1E26	0x5001      	MOVF        R1, 0 
0x1E28	0x0A01      	XORLW       1
0x1E2A	0xE11E      	BNZ         L_hexToNum95
;string.h,252 :: 		getByte(valor, ref/2) = swap(getByte(valor, ref/2));
0x1E2C	0xF000C57B  	MOVFF       hexToNum_ref_L0, R0
0x1E30	0x3200      	RRCF        R0, 1 
0x1E32	0x9E00      	BCF         R0, 7 
0x1E34	0x0E7C      	MOVLW       hexToNum_valor_L0
0x1E36	0x6F80      	MOVWF       FLOC__hexToNum, 1
0x1E38	0x0E05      	MOVLW       hi_addr(hexToNum_valor_L0)
0x1E3A	0x6F81      	MOVWF       FLOC__hexToNum+1, 1
0x1E3C	0x5000      	MOVF        R0, 0 
0x1E3E	0x2780      	ADDWF       FLOC__hexToNum, 1, 1
0x1E40	0xB0D8      	BTFSC       STATUS, 0 
0x1E42	0x2B81      	INCF        FLOC__hexToNum+1, 1, 1
0x1E44	0x0E7C      	MOVLW       hexToNum_valor_L0
0x1E46	0x6EE9      	MOVWF       FSR0L 
0x1E48	0x0E05      	MOVLW       hi_addr(hexToNum_valor_L0)
0x1E4A	0x6EEA      	MOVWF       FSR0H 
0x1E4C	0x5000      	MOVF        R0, 0 
0x1E4E	0x26E9      	ADDWF       FSR0L, 1 
0x1E50	0xB0D8      	BTFSC       STATUS, 0 
0x1E52	0x2AEA      	INCF        FSR0H, 1 
0x1E54	0xF590CFEE  	MOVFF       POSTINC0, FARG_Swap_input
0x1E58	0xF005ECEB  	CALL        _Swap, 0
0x1E5C	0xFFE1C580  	MOVFF       FLOC__hexToNum, FSR1L
0x1E60	0xFFE2C581  	MOVFF       FLOC__hexToNum+1, FSR1H
0x1E64	0xFFE6C000  	MOVFF       R0, POSTINC1
L_hexToNum95:
;string.h,239 :: 		for(cont = 0; cont < 8 && hex[cont]; cont++, ref--){
0x1E68	0x2B7A      	INCF        hexToNum_cont_L0, 1, 1
0x1E6A	0x077B      	DECF        hexToNum_ref_L0, 1, 1
;string.h,253 :: 		}
0x1E6C	0xD72B      	BRA         L_hexToNum78
L_hexToNum79:
;string.h,255 :: 		return valor;
0x1E6E	0xF000C57C  	MOVFF       hexToNum_valor_L0, R0
0x1E72	0xF001C57D  	MOVFF       hexToNum_valor_L0+1, R1
0x1E76	0xF002C57E  	MOVFF       hexToNum_valor_L0+2, R2
0x1E7A	0xF003C57F  	MOVFF       hexToNum_valor_L0+3, R3
;string.h,256 :: 		}
L_end_hexToNum:
0x1E7E	0x0012      	RETURN      0
; end of _hexToNum
_string_addc:
;string.h,50 :: 		char string_addc(char *destino, const char *addEnd){
;string.h,51 :: 		char total = 0, cont = 0;
0x1E80	0x0105      	MOVLB       5
0x1E82	0x6B7D      	CLRF        string_addc_total_L0, 1
0x1E84	0x6B7E      	CLRF        string_addc_cont_L0, 1
;string.h,54 :: 		while(destino[total])
L_string_addc17:
0x1E86	0x517D      	MOVF        string_addc_total_L0, 0, 1
0x1E88	0x2578      	ADDWF       FARG_string_addc_destino, 0, 1
0x1E8A	0x6EE9      	MOVWF       FSR0L 
0x1E8C	0x0E00      	MOVLW       0
0x1E8E	0x2179      	ADDWFC      FARG_string_addc_destino+1, 0, 1
0x1E90	0x6EEA      	MOVWF       FSR0H 
0x1E92	0x52EE      	MOVF        POSTINC0, 1 
0x1E94	0xE002      	BZ          L_string_addc18
;string.h,55 :: 		total++;
0x1E96	0x2B7D      	INCF        string_addc_total_L0, 1, 1
0x1E98	0xD7F6      	BRA         L_string_addc17
L_string_addc18:
;string.h,57 :: 		while(addEnd[cont])
L_string_addc19:
0x1E9A	0x517E      	MOVF        string_addc_cont_L0, 0, 1
0x1E9C	0x257A      	ADDWF       FARG_string_addc_addEnd, 0, 1
0x1E9E	0x6EF6      	MOVWF       4086 
0x1EA0	0x0E00      	MOVLW       0
0x1EA2	0x217B      	ADDWFC      FARG_string_addc_addEnd+1, 0, 1
0x1EA4	0x6EF7      	MOVWF       TBLPTRH 
0x1EA6	0x0E00      	MOVLW       0
0x1EA8	0x217C      	ADDWFC      FARG_string_addc_addEnd+2, 0, 1
0x1EAA	0x6EF8      	MOVWF       TBLPTRU 
0x1EAC	0x0009      	TBLRD*+
0x1EAE	0xF000CFF5  	MOVFF       TABLAT, R0
0x1EB2	0x5200      	MOVF        R0, 1 
0x1EB4	0xE017      	BZ          L_string_addc20
;string.h,58 :: 		destino[total++] = addEnd[cont++];
0x1EB6	0x517D      	MOVF        string_addc_total_L0, 0, 1
0x1EB8	0x2578      	ADDWF       FARG_string_addc_destino, 0, 1
0x1EBA	0x6EE1      	MOVWF       FSR1L 
0x1EBC	0x0E00      	MOVLW       0
0x1EBE	0x2179      	ADDWFC      FARG_string_addc_destino+1, 0, 1
0x1EC0	0x6EE2      	MOVWF       FSR1H 
0x1EC2	0x517E      	MOVF        string_addc_cont_L0, 0, 1
0x1EC4	0x257A      	ADDWF       FARG_string_addc_addEnd, 0, 1
0x1EC6	0x6EF6      	MOVWF       4086 
0x1EC8	0x0E00      	MOVLW       0
0x1ECA	0x217B      	ADDWFC      FARG_string_addc_addEnd+1, 0, 1
0x1ECC	0x6EF7      	MOVWF       TBLPTRH 
0x1ECE	0x0E00      	MOVLW       0
0x1ED0	0x217C      	ADDWFC      FARG_string_addc_addEnd+2, 0, 1
0x1ED2	0x6EF8      	MOVWF       TBLPTRU 
0x1ED4	0x0009      	TBLRD*+
0x1ED6	0xF000CFF5  	MOVFF       TABLAT, R0
0x1EDA	0xFFE6C000  	MOVFF       R0, POSTINC1
0x1EDE	0x2B7D      	INCF        string_addc_total_L0, 1, 1
0x1EE0	0x2B7E      	INCF        string_addc_cont_L0, 1, 1
0x1EE2	0xD7DB      	BRA         L_string_addc19
L_string_addc20:
;string.h,59 :: 		destino[total] = 0;
0x1EE4	0x517D      	MOVF        string_addc_total_L0, 0, 1
0x1EE6	0x2578      	ADDWF       FARG_string_addc_destino, 0, 1
0x1EE8	0x6EE1      	MOVWF       FSR1L 
0x1EEA	0x0E00      	MOVLW       0
0x1EEC	0x2179      	ADDWFC      FARG_string_addc_destino+1, 0, 1
0x1EEE	0x6EE2      	MOVWF       FSR1H 
0x1EF0	0x6AE6      	CLRF        POSTINC1 
;string.h,62 :: 		return total;
0x1EF2	0xF000C57D  	MOVFF       string_addc_total_L0, R0
;string.h,63 :: 		}
L_end_string_addc:
0x1EF6	0x0012      	RETURN      0
; end of _string_addc
_mysql_erase:
;table_eeprom.h,372 :: 		bool mysql_erase(char *name){
;table_eeprom.h,374 :: 		if(!mysql_exist(name))
0x1EF8	0xF59CC578  	MOVFF       FARG_mysql_erase_name, FARG_mysql_exist_name
0x1EFC	0xF59DC579  	MOVFF       FARG_mysql_erase_name+1, FARG_mysql_exist_name+1
0x1F00	0xF002EC3A  	CALL        _mysql_exist, 0
0x1F04	0x5200      	MOVF        R0, 1 
0x1F06	0xE102      	BNZ         L_mysql_erase540
;table_eeprom.h,375 :: 		return false;
0x1F08	0x6A00      	CLRF        R0 
0x1F0A	0xD01A      	BRA         L_end_mysql_erase
L_mysql_erase540:
;table_eeprom.h,378 :: 		myTable.rowAct = 0;
0x1F0C	0x0103      	MOVLB       3
0x1F0E	0x6B8F      	CLRF        Validadora_myTable+4, 1
0x1F10	0x6B90      	CLRF        Validadora_myTable+5, 1
;table_eeprom.h,379 :: 		eeprom_i2c_write(myTable.address+TABLE_MAX_SIZE_NAME+3, (char*)&myTable.rowAct, 2);
0x1F12	0x0E0F      	MOVLW       15
0x1F14	0x25B6      	ADDWF       Validadora_myTable+43, 0, 1
0x1F16	0x0105      	MOVLB       5
0x1F18	0x6F90      	MOVWF       FARG_eeprom_i2c_write_address, 1
0x1F1A	0x0E00      	MOVLW       0
0x1F1C	0x0103      	MOVLB       3
0x1F1E	0x21B7      	ADDWFC      Validadora_myTable+44, 0, 1
0x1F20	0x0105      	MOVLB       5
0x1F22	0x6F91      	MOVWF       FARG_eeprom_i2c_write_address+1, 1
0x1F24	0x0E03      	MOVLW       3
0x1F26	0x2790      	ADDWF       FARG_eeprom_i2c_write_address, 1, 1
0x1F28	0x0E00      	MOVLW       0
0x1F2A	0x2391      	ADDWFC      FARG_eeprom_i2c_write_address+1, 1, 1
0x1F2C	0x0E8F      	MOVLW       Validadora_myTable+4
0x1F2E	0x6F92      	MOVWF       FARG_eeprom_i2c_write_datos, 1
0x1F30	0x0E03      	MOVLW       hi_addr(Validadora_myTable+4)
0x1F32	0x6F93      	MOVWF       FARG_eeprom_i2c_write_datos+1, 1
0x1F34	0x0E02      	MOVLW       2
0x1F36	0x6F94      	MOVWF       FARG_eeprom_i2c_write_size, 1
0x1F38	0xF003ECEB  	CALL        _eeprom_i2c_write, 0
;table_eeprom.h,380 :: 		return true;
0x1F3C	0x0E01      	MOVLW       1
0x1F3E	0x6E00      	MOVWF       R0 
;table_eeprom.h,381 :: 		}
L_end_mysql_erase:
0x1F40	0x0012      	RETURN      0
; end of _mysql_erase
_lcd_clean_row:
;Validadora.c,2048 :: 		void lcd_clean_row(char fila){
;Validadora.c,2049 :: 		char i = 20;
0x1F42	0x0E14      	MOVLW       20
0x1F44	0x0105      	MOVLB       5
0x1F46	0x6F79      	MOVWF       lcd_clean_row_i_L0, 1
;Validadora.c,2051 :: 		while(i)
L_lcd_clean_row898:
0x1F48	0x5379      	MOVF        lcd_clean_row_i_L0, 1, 1
0x1F4A	0xE00B      	BZ          L_lcd_clean_row899
;Validadora.c,2052 :: 		lcd_chr(fila, i--, ' ');
0x1F4C	0xF586C578  	MOVFF       FARG_lcd_clean_row_fila, FARG_Lcd_Chr_row
0x1F50	0xF587C579  	MOVFF       lcd_clean_row_i_L0, FARG_Lcd_Chr_column
0x1F54	0x0E20      	MOVLW       32
0x1F56	0x6F88      	MOVWF       FARG_Lcd_Chr_out_char, 1
0x1F58	0xF006ECF9  	CALL        _Lcd_Chr, 0
0x1F5C	0x0105      	MOVLB       5
0x1F5E	0x0779      	DECF        lcd_clean_row_i_L0, 1, 1
0x1F60	0xD7F3      	BRA         L_lcd_clean_row898
L_lcd_clean_row899:
;Validadora.c,2053 :: 		}
L_end_lcd_clean_row:
0x1F62	0x0012      	RETURN      0
; end of _lcd_clean_row
_Div_16X16_U:
;__Lib_Math.c,102 :: 		
;__Lib_Math.c,109 :: 		
0x1F64	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,110 :: 		
0x1F66	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,111 :: 		
0x1F68	0x0E10      	MOVLW       16
;__Lib_Math.c,112 :: 		
0x1F6A	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,113 :: 		
0x1F6C	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,114 :: 		
0x1F6E	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,115 :: 		
0x1F70	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,116 :: 		
0x1F72	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,117 :: 		
0x1F74	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,118 :: 		
0x1F76	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,119 :: 		
0x1F78	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,120 :: 		
0x1F7A	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,121 :: 		
0x1F7C	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,122 :: 		
0x1F7E	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,123 :: 		
0x1F80	0xD007      	BRA         $+16
;__Lib_Math.c,124 :: 		
0x1F82	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,125 :: 		
0x1F84	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,126 :: 		
0x1F86	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,127 :: 		
0x1F88	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,128 :: 		
0x1F8A	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,129 :: 		
0x1F8C	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,130 :: 		
0x1F8E	0x90D8      	BCF         STATUS, 0, 0
;__Lib_Math.c,131 :: 		
0x1F90	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,132 :: 		
0x1F92	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,133 :: 		
0x1F94	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,134 :: 		
0x1F96	0xD7EA      	BRA         $-42
;__Lib_Math.c,136 :: 		
L_end_Div_16X16_U:
0x1F98	0x0012      	RETURN      0
; end of _Div_16X16_U
_buffer_save_send:
;Validadora.c,2071 :: 		void buffer_save_send(bool guardar, char *buffer){
;Validadora.c,2074 :: 		if(!guardar){
0x1F9A	0x0105      	MOVLB       5
0x1F9C	0x5378      	MOVF        FARG_buffer_save_send_guardar, 1, 1
0x1F9E	0xE114      	BNZ         L_buffer_save_send901
;Validadora.c,2075 :: 		if(!can_write_text(can.ip+canIdTPV, buffer, 0))
0x1FA0	0xF586C3BF  	MOVFF       _can, FARG_can_write_text_ipAddress
0x1FA4	0xF587C3C0  	MOVFF       _can+1, FARG_can_write_text_ipAddress+1
0x1FA8	0xF588C3C1  	MOVFF       _can+2, FARG_can_write_text_ipAddress+2
0x1FAC	0xF589C3C2  	MOVFF       _can+3, FARG_can_write_text_ipAddress+3
0x1FB0	0xF58AC579  	MOVFF       FARG_buffer_save_send_buffer, FARG_can_write_text_texto
0x1FB4	0xF58BC57A  	MOVFF       FARG_buffer_save_send_buffer+1, FARG_can_write_text_texto+1
0x1FB8	0x6B8C      	CLRF        FARG_can_write_text_priority, 1
0x1FBA	0xF007EC54  	CALL        _can_write_text, 0
0x1FBE	0x5200      	MOVF        R0, 1 
0x1FC0	0xE103      	BNZ         L_buffer_save_send902
;Validadora.c,2076 :: 		guardar = true;
0x1FC2	0x0E01      	MOVLW       1
0x1FC4	0x0105      	MOVLB       5
0x1FC6	0x6F78      	MOVWF       FARG_buffer_save_send_guardar, 1
L_buffer_save_send902:
;Validadora.c,2077 :: 		}
L_buffer_save_send901:
0x1FC8	0x0105      	MOVLB       5
;Validadora.c,2079 :: 		if(guardar){
0x1FCA	0x5378      	MOVF        FARG_buffer_save_send_guardar, 1, 1
0x1FCC	0xE048      	BZ          L_buffer_save_send903
;Validadora.c,2080 :: 		if(!mysql_write_roundTrip(tableEventosCAN, eventosRegistro, buffer, strlen(buffer)+1)){
0x1FCE	0xF586C579  	MOVFF       FARG_buffer_save_send_buffer, FARG_strlen_s
0x1FD2	0xF587C57A  	MOVFF       FARG_buffer_save_send_buffer+1, FARG_strlen_s+1
0x1FD6	0xF007EC37  	CALL        _strlen, 0
0x1FDA	0x5000      	MOVF        R0, 0 
0x1FDC	0x0F01      	ADDLW       1
0x1FDE	0x6F8C      	MOVWF       FARG_mysql_write_roundTrip_bytes, 1
0x1FE0	0x0E6D      	MOVLW       _tableEventosCAN
0x1FE2	0x6F86      	MOVWF       FARG_mysql_write_roundTrip_name, 1
0x1FE4	0x0E02      	MOVLW       hi_addr(_tableEventosCAN)
0x1FE6	0x6F87      	MOVWF       FARG_mysql_write_roundTrip_name+1, 1
0x1FE8	0x0E5C      	MOVLW       _eventosRegistro
0x1FEA	0x6F88      	MOVWF       FARG_mysql_write_roundTrip_column, 1
0x1FEC	0x0E02      	MOVLW       hi_addr(_eventosRegistro)
0x1FEE	0x6F89      	MOVWF       FARG_mysql_write_roundTrip_column+1, 1
0x1FF0	0xF58AC579  	MOVFF       FARG_buffer_save_send_buffer, FARG_mysql_write_roundTrip_texto
0x1FF4	0xF58BC57A  	MOVFF       FARG_buffer_save_send_buffer+1, FARG_mysql_write_roundTrip_texto+1
0x1FF8	0xF006EC89  	CALL        _mysql_write_roundTrip, 0
0x1FFC	0x5200      	MOVF        R0, 1 
0x1FFE	0xE12F      	BNZ         L_buffer_save_send904
;Validadora.c,2081 :: 		mysql_read_forced(tableEventosCAN, eventosEstatus, myTable.rowAct, &result);
0x2000	0x0E6D      	MOVLW       _tableEventosCAN
0x2002	0x0105      	MOVLB       5
0x2004	0x6F86      	MOVWF       FARG_mysql_read_forced_name, 1
0x2006	0x0E02      	MOVLW       hi_addr(_tableEventosCAN)
0x2008	0x6F87      	MOVWF       FARG_mysql_read_forced_name+1, 1
0x200A	0x0E65      	MOVLW       _eventosEstatus
0x200C	0x6F88      	MOVWF       FARG_mysql_read_forced_column, 1
0x200E	0x0E02      	MOVLW       hi_addr(_eventosEstatus)
0x2010	0x6F89      	MOVWF       FARG_mysql_read_forced_column+1, 1
0x2012	0xF58AC38F  	MOVFF       Validadora_myTable+4, FARG_mysql_read_forced_fila
0x2016	0xF58BC390  	MOVFF       Validadora_myTable+5, FARG_mysql_read_forced_fila+1
0x201A	0x0E7B      	MOVLW       buffer_save_send_result_L0
0x201C	0x6F8C      	MOVWF       FARG_mysql_read_forced_result, 1
0x201E	0x0E05      	MOVLW       hi_addr(buffer_save_send_result_L0)
0x2020	0x6F8D      	MOVWF       FARG_mysql_read_forced_result+1, 1
0x2022	0xF008EC2A  	CALL        _mysql_read_forced, 0
;Validadora.c,2083 :: 		if(result != '1')
0x2026	0x0105      	MOVLB       5
0x2028	0x517B      	MOVF        buffer_save_send_result_L0, 0, 1
0x202A	0x0A31      	XORLW       49
0x202C	0xE003      	BZ          L_buffer_save_send905
;Validadora.c,2084 :: 		pilaBufferCAN++;
0x202E	0x0103      	MOVLB       3
0x2030	0x4BBD      	INFSNZ      _pilaBufferCAN, 1, 1
0x2032	0x2BBE      	INCF        _pilaBufferCAN+1, 1, 1
L_buffer_save_send905:
;Validadora.c,2085 :: 		mysql_write_forced(tableEventosCAN, eventosEstatus, myTable.rowAct, "1", 1);
0x2034	0x0E6D      	MOVLW       _tableEventosCAN
0x2036	0x0105      	MOVLB       5
0x2038	0x6F86      	MOVWF       FARG_mysql_write_forced_name, 1
0x203A	0x0E02      	MOVLW       hi_addr(_tableEventosCAN)
0x203C	0x6F87      	MOVWF       FARG_mysql_write_forced_name+1, 1
0x203E	0x0E65      	MOVLW       _eventosEstatus
0x2040	0x6F88      	MOVWF       FARG_mysql_write_forced_column, 1
0x2042	0x0E02      	MOVLW       hi_addr(_eventosEstatus)
0x2044	0x6F89      	MOVWF       FARG_mysql_write_forced_column+1, 1
0x2046	0xF58AC38F  	MOVFF       Validadora_myTable+4, FARG_mysql_write_forced_fila
0x204A	0xF58BC390  	MOVFF       Validadora_myTable+5, FARG_mysql_write_forced_fila+1
0x204E	0x0E90      	MOVLW       ?lstr45_Validadora
0x2050	0x6F8C      	MOVWF       FARG_mysql_write_forced_texto, 1
0x2052	0x0E02      	MOVLW       hi_addr(?lstr45_Validadora)
0x2054	0x6F8D      	MOVWF       FARG_mysql_write_forced_texto+1, 1
0x2056	0x0E01      	MOVLW       1
0x2058	0x6F8E      	MOVWF       FARG_mysql_write_forced_bytes, 1
0x205A	0xF008EC72  	CALL        _mysql_write_forced, 0
;Validadora.c,2095 :: 		}
L_buffer_save_send904:
;Validadora.c,2096 :: 		}
L_buffer_save_send903:
;Validadora.c,2097 :: 		}
L_end_buffer_save_send:
0x205E	0x0012      	RETURN      0
; end of _buffer_save_send
_can_get_id:
;lib_can.h,739 :: 		long can_get_id(char *address){
;lib_can.h,740 :: 		long value = 0;
0x2060	0x0105      	MOVLB       5
0x2062	0x6B7A      	CLRF        can_get_id_value_L0, 1
0x2064	0x6B7B      	CLRF        can_get_id_value_L0+1, 1
0x2066	0x6B7C      	CLRF        can_get_id_value_L0+2, 1
0x2068	0x6B7D      	CLRF        can_get_id_value_L0+3, 1
;lib_can.h,743 :: 		getByte(value,0) = address[0];        //EIDL
0x206A	0xFFE9C578  	MOVFF       FARG_can_get_id_address, FSR0L
0x206E	0xFFEAC579  	MOVFF       FARG_can_get_id_address+1, FSR0H
0x2072	0xF57ACFEE  	MOVFF       POSTINC0, can_get_id_value_L0
;lib_can.h,744 :: 		getByte(value,1) = address[-1];        //EIDh
0x2076	0x0EFF      	MOVLW       255
0x2078	0x2578      	ADDWF       FARG_can_get_id_address, 0, 1
0x207A	0x6EE9      	MOVWF       FSR0L 
0x207C	0x0EFF      	MOVLW       255
0x207E	0x2179      	ADDWFC      FARG_can_get_id_address+1, 0, 1
0x2080	0x6EEA      	MOVWF       FSR0H 
0x2082	0xF57BCFEE  	MOVFF       POSTINC0, can_get_id_value_L0+1
;lib_can.h,745 :: 		getByte(value,2) = address[-2] & 0x03; //SIDL, BITS 16,17
0x2086	0x0EFE      	MOVLW       254
0x2088	0x2578      	ADDWF       FARG_can_get_id_address, 0, 1
0x208A	0x6E01      	MOVWF       R1 
0x208C	0x0EFF      	MOVLW       255
0x208E	0x2179      	ADDWFC      FARG_can_get_id_address+1, 0, 1
0x2090	0x6E02      	MOVWF       R2 
0x2092	0xFFE9C001  	MOVFF       R1, FSR0L
0x2096	0xFFEAC002  	MOVFF       R2, FSR0H
0x209A	0x0E03      	MOVLW       3
0x209C	0x14EE      	ANDWF       POSTINC0, 0 
0x209E	0x6F7C      	MOVWF       can_get_id_value_L0+2, 1
;lib_can.h,746 :: 		getByte(value,2).B2 = address[-2].B5;  //SIDL, BITS 18
0x20A0	0xFFE9C001  	MOVFF       R1, FSR0L
0x20A4	0xFFEAC002  	MOVFF       R2, FSR0H
0x20A8	0xF000CFEE  	MOVFF       POSTINC0, R0
0x20AC	0xBA00      	BTFSC       R0, 5 
0x20AE	0xD002      	BRA         L__can_get_id1187
0x20B0	0x957C      	BCF         can_get_id_value_L0+2, 2, 1
0x20B2	0xD001      	BRA         L__can_get_id1188
L__can_get_id1187:
0x20B4	0x857C      	BSF         can_get_id_value_L0+2, 2, 1
L__can_get_id1188:
;lib_can.h,747 :: 		getByte(value,2).B3 = address[-2].B6;  //SIDL, BITS 19
0x20B6	0xFFE9C001  	MOVFF       R1, FSR0L
0x20BA	0xFFEAC002  	MOVFF       R2, FSR0H
0x20BE	0xF000CFEE  	MOVFF       POSTINC0, R0
0x20C2	0xBC00      	BTFSC       R0, 6 
0x20C4	0xD002      	BRA         L__can_get_id1189
0x20C6	0x977C      	BCF         can_get_id_value_L0+2, 3, 1
0x20C8	0xD001      	BRA         L__can_get_id1190
L__can_get_id1189:
0x20CA	0x877C      	BSF         can_get_id_value_L0+2, 3, 1
L__can_get_id1190:
;lib_can.h,748 :: 		getByte(value,2).B4 = address[-2].B7;  //SIDL, BITS 20
0x20CC	0xFFE9C001  	MOVFF       R1, FSR0L
0x20D0	0xFFEAC002  	MOVFF       R2, FSR0H
0x20D4	0xF000CFEE  	MOVFF       POSTINC0, R0
0x20D8	0xBE00      	BTFSC       R0, 7 
0x20DA	0xD002      	BRA         L__can_get_id1191
0x20DC	0x997C      	BCF         can_get_id_value_L0+2, 4, 1
0x20DE	0xD001      	BRA         L__can_get_id1192
L__can_get_id1191:
0x20E0	0x897C      	BSF         can_get_id_value_L0+2, 4, 1
L__can_get_id1192:
;lib_can.h,749 :: 		getByte(value,2).B5 = address[-3].B0;
0x20E2	0x0EFD      	MOVLW       253
0x20E4	0x2578      	ADDWF       FARG_can_get_id_address, 0, 1
0x20E6	0x6E01      	MOVWF       R1 
0x20E8	0x0EFF      	MOVLW       255
0x20EA	0x2179      	ADDWFC      FARG_can_get_id_address+1, 0, 1
0x20EC	0x6E02      	MOVWF       R2 
0x20EE	0xFFE9C001  	MOVFF       R1, FSR0L
0x20F2	0xFFEAC002  	MOVFF       R2, FSR0H
0x20F6	0xF000CFEE  	MOVFF       POSTINC0, R0
0x20FA	0xB000      	BTFSC       R0, 0 
0x20FC	0xD002      	BRA         L__can_get_id1193
0x20FE	0x9B7C      	BCF         can_get_id_value_L0+2, 5, 1
0x2100	0xD001      	BRA         L__can_get_id1194
L__can_get_id1193:
0x2102	0x8B7C      	BSF         can_get_id_value_L0+2, 5, 1
L__can_get_id1194:
;lib_can.h,750 :: 		getByte(value,2).B6 = address[-3].B1;
0x2104	0xFFE9C001  	MOVFF       R1, FSR0L
0x2108	0xFFEAC002  	MOVFF       R2, FSR0H
0x210C	0xF000CFEE  	MOVFF       POSTINC0, R0
0x2110	0xB200      	BTFSC       R0, 1 
0x2112	0xD002      	BRA         L__can_get_id1195
0x2114	0x9D7C      	BCF         can_get_id_value_L0+2, 6, 1
0x2116	0xD001      	BRA         L__can_get_id1196
L__can_get_id1195:
0x2118	0x8D7C      	BSF         can_get_id_value_L0+2, 6, 1
L__can_get_id1196:
;lib_can.h,751 :: 		getByte(value,2).B7 = address[-3].B2;
0x211A	0xFFE9C001  	MOVFF       R1, FSR0L
0x211E	0xFFEAC002  	MOVFF       R2, FSR0H
0x2122	0xF000CFEE  	MOVFF       POSTINC0, R0
0x2126	0xB400      	BTFSC       R0, 2 
0x2128	0xD002      	BRA         L__can_get_id1197
0x212A	0x9F7C      	BCF         can_get_id_value_L0+2, 7, 1
0x212C	0xD001      	BRA         L__can_get_id1198
L__can_get_id1197:
0x212E	0x8F7C      	BSF         can_get_id_value_L0+2, 7, 1
L__can_get_id1198:
;lib_can.h,752 :: 		getByte(value,3) = address[-3]>>3;     //SIDH
0x2130	0xFFE9C001  	MOVFF       R1, FSR0L
0x2134	0xFFEAC002  	MOVFF       R2, FSR0H
0x2138	0xF001CFEE  	MOVFF       POSTINC0, R1
0x213C	0xF57DC001  	MOVFF       R1, can_get_id_value_L0+3
0x2140	0x337D      	RRCF        can_get_id_value_L0+3, 1, 1
0x2142	0x9F7D      	BCF         can_get_id_value_L0+3, 7, 1
0x2144	0x337D      	RRCF        can_get_id_value_L0+3, 1, 1
0x2146	0x9F7D      	BCF         can_get_id_value_L0+3, 7, 1
0x2148	0x337D      	RRCF        can_get_id_value_L0+3, 1, 1
0x214A	0x9F7D      	BCF         can_get_id_value_L0+3, 7, 1
;lib_can.h,761 :: 		}
L_can_get_id367:
;lib_can.h,763 :: 		return value;
0x214C	0xF000C57A  	MOVFF       can_get_id_value_L0, R0
0x2150	0xF001C57B  	MOVFF       can_get_id_value_L0+1, R1
0x2154	0xF002C57C  	MOVFF       can_get_id_value_L0+2, R2
0x2158	0xF003C57D  	MOVFF       can_get_id_value_L0+3, R3
;lib_can.h,764 :: 		}
L_end_can_get_id:
0x215C	0x0012      	RETURN      0
; end of _can_get_id
_can_set_id:
;lib_can.h,717 :: 		void can_set_id(char *address, long value){
;lib_can.h,720 :: 		address[0] = getByte(value, 0);        //EIDL
0x215E	0xFFE1C578  	MOVFF       FARG_can_set_id_address, FSR1L
0x2162	0xFFE2C579  	MOVFF       FARG_can_set_id_address+1, FSR1H
0x2166	0xFFE6C57A  	MOVFF       FARG_can_set_id_value, POSTINC1
;lib_can.h,721 :: 		address[-1] = getByte(value, 1);        //EIDh
0x216A	0x0EFF      	MOVLW       255
0x216C	0x0105      	MOVLB       5
0x216E	0x2578      	ADDWF       FARG_can_set_id_address, 0, 1
0x2170	0x6EE1      	MOVWF       FSR1L 
0x2172	0x0EFF      	MOVLW       255
0x2174	0x2179      	ADDWFC      FARG_can_set_id_address+1, 0, 1
0x2176	0x6EE2      	MOVWF       FSR1H 
0x2178	0xFFE6C57B  	MOVFF       FARG_can_set_id_value+1, POSTINC1
;lib_can.h,722 :: 		address[-2] = getByte(value, 2) & 0x03; //SIDL, BITS 16,17
0x217C	0x0EFE      	MOVLW       254
0x217E	0x2578      	ADDWF       FARG_can_set_id_address, 0, 1
0x2180	0x6EE1      	MOVWF       FSR1L 
0x2182	0x0EFF      	MOVLW       255
0x2184	0x2179      	ADDWFC      FARG_can_set_id_address+1, 0, 1
0x2186	0x6EE2      	MOVWF       FSR1H 
0x2188	0x0E03      	MOVLW       3
0x218A	0x157C      	ANDWF       FARG_can_set_id_value+2, 0, 1
0x218C	0x6E00      	MOVWF       R0 
0x218E	0xFFE6C000  	MOVFF       R0, POSTINC1
;lib_can.h,723 :: 		address[-2].B3 = 1;   //ACEPT MESSAGE SEGUN EL FORMATO STAND Ó EXT
0x2192	0x0EFE      	MOVLW       254
0x2194	0x2578      	ADDWF       FARG_can_set_id_address, 0, 1
0x2196	0x6EE1      	MOVWF       FSR1L 
0x2198	0x0EFF      	MOVLW       255
0x219A	0x2179      	ADDWFC      FARG_can_set_id_address+1, 0, 1
0x219C	0x6EE2      	MOVWF       FSR1H 
0x219E	0x86E6      	BSF         POSTINC1, 3 
;lib_can.h,724 :: 		value <<= 3;         //RECORRE TRES POSIONES A LA IZQUIERDA
0x21A0	0x0E03      	MOVLW       3
0x21A2	0x6E00      	MOVWF       R0 
0x21A4	0x5000      	MOVF        R0, 0 
L__can_set_id1184:
0x21A6	0xE007      	BZ          L__can_set_id1185
0x21A8	0x377A      	RLCF        FARG_can_set_id_value, 1, 1
0x21AA	0x917A      	BCF         FARG_can_set_id_value, 0, 1
0x21AC	0x377B      	RLCF        FARG_can_set_id_value+1, 1, 1
0x21AE	0x377C      	RLCF        FARG_can_set_id_value+2, 1, 1
0x21B0	0x377D      	RLCF        FARG_can_set_id_value+3, 1, 1
0x21B2	0x0FFF      	ADDLW       255
0x21B4	0xD7F8      	BRA         L__can_set_id1184
L__can_set_id1185:
;lib_can.h,725 :: 		address[-2] |= getByte(value, 2) & 0xE0;//SIDL, BITS 18,19,20
0x21B6	0x0EFE      	MOVLW       254
0x21B8	0x2578      	ADDWF       FARG_can_set_id_address, 0, 1
0x21BA	0x6E01      	MOVWF       R1 
0x21BC	0x0EFF      	MOVLW       255
0x21BE	0x2179      	ADDWFC      FARG_can_set_id_address+1, 0, 1
0x21C0	0x6E02      	MOVWF       R2 
0x21C2	0x0EE0      	MOVLW       224
0x21C4	0x157C      	ANDWF       FARG_can_set_id_value+2, 0, 1
0x21C6	0x6E00      	MOVWF       R0 
0x21C8	0xFFE9C001  	MOVFF       R1, FSR0L
0x21CC	0xFFEAC002  	MOVFF       R2, FSR0H
0x21D0	0x50EE      	MOVF        POSTINC0, 0 
0x21D2	0x1200      	IORWF       R0, 1 
0x21D4	0xFFE1C001  	MOVFF       R1, FSR1L
0x21D8	0xFFE2C002  	MOVFF       R2, FSR1H
0x21DC	0xFFE6C000  	MOVFF       R0, POSTINC1
;lib_can.h,726 :: 		address[-3] = getByte(value, 3);        //SIDH 21-27
0x21E0	0x0EFD      	MOVLW       253
0x21E2	0x2578      	ADDWF       FARG_can_set_id_address, 0, 1
0x21E4	0x6EE1      	MOVWF       FSR1L 
0x21E6	0x0EFF      	MOVLW       255
0x21E8	0x2179      	ADDWFC      FARG_can_set_id_address+1, 0, 1
0x21EA	0x6EE2      	MOVWF       FSR1H 
0x21EC	0xFFE6C57D  	MOVFF       FARG_can_set_id_value+3, POSTINC1
;lib_can.h,736 :: 		}
L_can_set_id365:
;lib_can.h,737 :: 		}
L_end_can_set_id:
0x21F0	0x0012      	RETURN      0
; end of _can_set_id
_DS1307_read:
;ds1307.h,117 :: 		char* DS1307_read(DS1307 *myDS, bool formatComplet){
;ds1307.h,118 :: 		Soft_I2C_Start();               // Issue start signal
0x21F2	0xF005ECEF  	CALL        _Soft_I2C_Start, 0
;ds1307.h,119 :: 		Soft_I2C_Write(DS1307_ADDRESS); // Address DS1307, see DS1307 datasheet
0x21F6	0x0ED0      	MOVLW       208
0x21F8	0x0105      	MOVLB       5
0x21FA	0x6F86      	MOVWF       FARG_Soft_I2C_Write_data_, 1
0x21FC	0xF006EC0D  	CALL        _Soft_I2C_Write, 0
;ds1307.h,120 :: 		Soft_I2C_Write(0x00);           // Start from address 0
0x2200	0x6B86      	CLRF        FARG_Soft_I2C_Write_data_, 1
0x2202	0xF006EC0D  	CALL        _Soft_I2C_Write, 0
;ds1307.h,121 :: 		Soft_I2C_Start();               // Issue repeated start signal
0x2206	0xF005ECEF  	CALL        _Soft_I2C_Start, 0
;ds1307.h,122 :: 		Soft_I2C_Write(DS1307_READ);    // Address DS1307 for reading R/W=1
0x220A	0x0ED1      	MOVLW       209
0x220C	0x6F86      	MOVWF       FARG_Soft_I2C_Write_data_, 1
0x220E	0xF006EC0D  	CALL        _Soft_I2C_Write, 0
;ds1307.h,124 :: 		myDS->seconds = Soft_I2C_Read(DS1307_ACK);      // Read seconds
0x2212	0xF57BC578  	MOVFF       FARG_DS1307_read_myDS, FLOC__DS1307_read
0x2216	0xF57CC579  	MOVFF       FARG_DS1307_read_myDS+1, FLOC__DS1307_read+1
0x221A	0x0E01      	MOVLW       1
0x221C	0x6F86      	MOVWF       FARG_Soft_I2C_Read_ack, 1
0x221E	0x0E00      	MOVLW       0
0x2220	0x6F87      	MOVWF       FARG_Soft_I2C_Read_ack+1, 1
0x2222	0xF008ECC2  	CALL        _Soft_I2C_Read, 0
0x2226	0xFFE1C57B  	MOVFF       FLOC__DS1307_read, FSR1L
0x222A	0xFFE2C57C  	MOVFF       FLOC__DS1307_read+1, FSR1H
0x222E	0xFFE6C000  	MOVFF       R0, POSTINC1
;ds1307.h,125 :: 		myDS->minutes = Soft_I2C_Read(DS1307_ACK);      // Read minutes
0x2232	0x0E01      	MOVLW       1
0x2234	0x0105      	MOVLB       5
0x2236	0x2578      	ADDWF       FARG_DS1307_read_myDS, 0, 1
0x2238	0x6F7B      	MOVWF       FLOC__DS1307_read, 1
0x223A	0x0E00      	MOVLW       0
0x223C	0x2179      	ADDWFC      FARG_DS1307_read_myDS+1, 0, 1
0x223E	0x6F7C      	MOVWF       FLOC__DS1307_read+1, 1
0x2240	0x0E01      	MOVLW       1
0x2242	0x6F86      	MOVWF       FARG_Soft_I2C_Read_ack, 1
0x2244	0x0E00      	MOVLW       0
0x2246	0x6F87      	MOVWF       FARG_Soft_I2C_Read_ack+1, 1
0x2248	0xF008ECC2  	CALL        _Soft_I2C_Read, 0
0x224C	0xFFE1C57B  	MOVFF       FLOC__DS1307_read, FSR1L
0x2250	0xFFE2C57C  	MOVFF       FLOC__DS1307_read+1, FSR1H
0x2254	0xFFE6C000  	MOVFF       R0, POSTINC1
;ds1307.h,126 :: 		myDS->hours = Soft_I2C_Read(DS1307_ACK);        // Read hours
0x2258	0x0E02      	MOVLW       2
0x225A	0x0105      	MOVLB       5
0x225C	0x2578      	ADDWF       FARG_DS1307_read_myDS, 0, 1
0x225E	0x6F7B      	MOVWF       FLOC__DS1307_read, 1
0x2260	0x0E00      	MOVLW       0
0x2262	0x2179      	ADDWFC      FARG_DS1307_read_myDS+1, 0, 1
0x2264	0x6F7C      	MOVWF       FLOC__DS1307_read+1, 1
0x2266	0x0E01      	MOVLW       1
0x2268	0x6F86      	MOVWF       FARG_Soft_I2C_Read_ack, 1
0x226A	0x0E00      	MOVLW       0
0x226C	0x6F87      	MOVWF       FARG_Soft_I2C_Read_ack+1, 1
0x226E	0xF008ECC2  	CALL        _Soft_I2C_Read, 0
0x2272	0xFFE1C57B  	MOVFF       FLOC__DS1307_read, FSR1L
0x2276	0xFFE2C57C  	MOVFF       FLOC__DS1307_read+1, FSR1H
0x227A	0xFFE6C000  	MOVFF       R0, POSTINC1
;ds1307.h,127 :: 		myDS->dayOfWeek = Soft_I2C_Read(DS1307_ACK);    // Read day of week
0x227E	0x0E03      	MOVLW       3
0x2280	0x0105      	MOVLB       5
0x2282	0x2578      	ADDWF       FARG_DS1307_read_myDS, 0, 1
0x2284	0x6F7B      	MOVWF       FLOC__DS1307_read, 1
0x2286	0x0E00      	MOVLW       0
0x2288	0x2179      	ADDWFC      FARG_DS1307_read_myDS+1, 0, 1
0x228A	0x6F7C      	MOVWF       FLOC__DS1307_read+1, 1
0x228C	0x0E01      	MOVLW       1
0x228E	0x6F86      	MOVWF       FARG_Soft_I2C_Read_ack, 1
0x2290	0x0E00      	MOVLW       0
0x2292	0x6F87      	MOVWF       FARG_Soft_I2C_Read_ack+1, 1
0x2294	0xF008ECC2  	CALL        _Soft_I2C_Read, 0
0x2298	0xFFE1C57B  	MOVFF       FLOC__DS1307_read, FSR1L
0x229C	0xFFE2C57C  	MOVFF       FLOC__DS1307_read+1, FSR1H
0x22A0	0xFFE6C000  	MOVFF       R0, POSTINC1
;ds1307.h,128 :: 		myDS->day = Soft_I2C_Read(DS1307_ACK);          // Read day of month
0x22A4	0x0E04      	MOVLW       4
0x22A6	0x0105      	MOVLB       5
0x22A8	0x2578      	ADDWF       FARG_DS1307_read_myDS, 0, 1
0x22AA	0x6F7B      	MOVWF       FLOC__DS1307_read, 1
0x22AC	0x0E00      	MOVLW       0
0x22AE	0x2179      	ADDWFC      FARG_DS1307_read_myDS+1, 0, 1
0x22B0	0x6F7C      	MOVWF       FLOC__DS1307_read+1, 1
0x22B2	0x0E01      	MOVLW       1
0x22B4	0x6F86      	MOVWF       FARG_Soft_I2C_Read_ack, 1
0x22B6	0x0E00      	MOVLW       0
0x22B8	0x6F87      	MOVWF       FARG_Soft_I2C_Read_ack+1, 1
0x22BA	0xF008ECC2  	CALL        _Soft_I2C_Read, 0
0x22BE	0xFFE1C57B  	MOVFF       FLOC__DS1307_read, FSR1L
0x22C2	0xFFE2C57C  	MOVFF       FLOC__DS1307_read+1, FSR1H
0x22C6	0xFFE6C000  	MOVFF       R0, POSTINC1
;ds1307.h,129 :: 		myDS->month = Soft_I2C_Read(DS1307_ACK);        // Read mes del año
0x22CA	0x0E05      	MOVLW       5
0x22CC	0x0105      	MOVLB       5
0x22CE	0x2578      	ADDWF       FARG_DS1307_read_myDS, 0, 1
0x22D0	0x6F7B      	MOVWF       FLOC__DS1307_read, 1
0x22D2	0x0E00      	MOVLW       0
0x22D4	0x2179      	ADDWFC      FARG_DS1307_read_myDS+1, 0, 1
0x22D6	0x6F7C      	MOVWF       FLOC__DS1307_read+1, 1
0x22D8	0x0E01      	MOVLW       1
0x22DA	0x6F86      	MOVWF       FARG_Soft_I2C_Read_ack, 1
0x22DC	0x0E00      	MOVLW       0
0x22DE	0x6F87      	MOVWF       FARG_Soft_I2C_Read_ack+1, 1
0x22E0	0xF008ECC2  	CALL        _Soft_I2C_Read, 0
0x22E4	0xFFE1C57B  	MOVFF       FLOC__DS1307_read, FSR1L
0x22E8	0xFFE2C57C  	MOVFF       FLOC__DS1307_read+1, FSR1H
0x22EC	0xFFE6C000  	MOVFF       R0, POSTINC1
;ds1307.h,130 :: 		myDS->year = Soft_I2C_Read(DS1307_NO_ACK);      // Read years
0x22F0	0x0E06      	MOVLW       6
0x22F2	0x0105      	MOVLB       5
0x22F4	0x2578      	ADDWF       FARG_DS1307_read_myDS, 0, 1
0x22F6	0x6F7B      	MOVWF       FLOC__DS1307_read, 1
0x22F8	0x0E00      	MOVLW       0
0x22FA	0x2179      	ADDWFC      FARG_DS1307_read_myDS+1, 0, 1
0x22FC	0x6F7C      	MOVWF       FLOC__DS1307_read+1, 1
0x22FE	0x6B86      	CLRF        FARG_Soft_I2C_Read_ack, 1
0x2300	0x6B87      	CLRF        FARG_Soft_I2C_Read_ack+1, 1
0x2302	0xF008ECC2  	CALL        _Soft_I2C_Read, 0
0x2306	0xFFE1C57B  	MOVFF       FLOC__DS1307_read, FSR1L
0x230A	0xFFE2C57C  	MOVFF       FLOC__DS1307_read+1, FSR1H
0x230E	0xFFE6C000  	MOVFF       R0, POSTINC1
;ds1307.h,131 :: 		Soft_I2C_Stop();                                // Issue stop signal
0x2312	0xF00AECE7  	CALL        _Soft_I2C_Stop, 0
;ds1307.h,134 :: 		myDS->seconds = bcdToDec(0x7F&myDS->seconds);   //Por el canal CH DS1307
0x2316	0xF57BC578  	MOVFF       FARG_DS1307_read_myDS, FLOC__DS1307_read
0x231A	0xF57CC579  	MOVFF       FARG_DS1307_read_myDS+1, FLOC__DS1307_read+1
0x231E	0xFFE9C578  	MOVFF       FARG_DS1307_read_myDS, FSR0L
0x2322	0xFFEAC579  	MOVFF       FARG_DS1307_read_myDS+1, FSR0H
0x2326	0xF000CFEE  	MOVFF       POSTINC0, R0
0x232A	0x0E7F      	MOVLW       127
0x232C	0x1400      	ANDWF       R0, 0 
0x232E	0x0105      	MOVLB       5
0x2330	0x6F86      	MOVWF       FARG_bcdToDec_dato, 1
0x2332	0xF009EC1A  	CALL        _bcdToDec, 0
0x2336	0xFFE1C57B  	MOVFF       FLOC__DS1307_read, FSR1L
0x233A	0xFFE2C57C  	MOVFF       FLOC__DS1307_read+1, FSR1H
0x233E	0xFFE6C000  	MOVFF       R0, POSTINC1
;ds1307.h,135 :: 		myDS->minutes = bcdToDec(myDS->minutes);
0x2342	0x0E01      	MOVLW       1
0x2344	0x2578      	ADDWF       FARG_DS1307_read_myDS, 0, 1
0x2346	0x6F7B      	MOVWF       FLOC__DS1307_read, 1
0x2348	0x0E00      	MOVLW       0
0x234A	0x2179      	ADDWFC      FARG_DS1307_read_myDS+1, 0, 1
0x234C	0x6F7C      	MOVWF       FLOC__DS1307_read+1, 1
0x234E	0xFFE9C57B  	MOVFF       FLOC__DS1307_read, FSR0L
0x2352	0xFFEAC57C  	MOVFF       FLOC__DS1307_read+1, FSR0H
0x2356	0xF586CFEE  	MOVFF       POSTINC0, FARG_bcdToDec_dato
0x235A	0xF009EC1A  	CALL        _bcdToDec, 0
0x235E	0xFFE1C57B  	MOVFF       FLOC__DS1307_read, FSR1L
0x2362	0xFFE2C57C  	MOVFF       FLOC__DS1307_read+1, FSR1H
0x2366	0xFFE6C000  	MOVFF       R0, POSTINC1
;ds1307.h,136 :: 		myDS->hours = bcdToDec(myDS->hours);
0x236A	0x0E02      	MOVLW       2
0x236C	0x2578      	ADDWF       FARG_DS1307_read_myDS, 0, 1
0x236E	0x6F7B      	MOVWF       FLOC__DS1307_read, 1
0x2370	0x0E00      	MOVLW       0
0x2372	0x2179      	ADDWFC      FARG_DS1307_read_myDS+1, 0, 1
0x2374	0x6F7C      	MOVWF       FLOC__DS1307_read+1, 1
0x2376	0xFFE9C57B  	MOVFF       FLOC__DS1307_read, FSR0L
0x237A	0xFFEAC57C  	MOVFF       FLOC__DS1307_read+1, FSR0H
0x237E	0xF586CFEE  	MOVFF       POSTINC0, FARG_bcdToDec_dato
0x2382	0xF009EC1A  	CALL        _bcdToDec, 0
0x2386	0xFFE1C57B  	MOVFF       FLOC__DS1307_read, FSR1L
0x238A	0xFFE2C57C  	MOVFF       FLOC__DS1307_read+1, FSR1H
0x238E	0xFFE6C000  	MOVFF       R0, POSTINC1
;ds1307.h,137 :: 		myDS->dayOfWeek = bcdToDec(myDS->dayOfWeek);
0x2392	0x0E03      	MOVLW       3
0x2394	0x2578      	ADDWF       FARG_DS1307_read_myDS, 0, 1
0x2396	0x6F7B      	MOVWF       FLOC__DS1307_read, 1
0x2398	0x0E00      	MOVLW       0
0x239A	0x2179      	ADDWFC      FARG_DS1307_read_myDS+1, 0, 1
0x239C	0x6F7C      	MOVWF       FLOC__DS1307_read+1, 1
0x239E	0xFFE9C57B  	MOVFF       FLOC__DS1307_read, FSR0L
0x23A2	0xFFEAC57C  	MOVFF       FLOC__DS1307_read+1, FSR0H
0x23A6	0xF586CFEE  	MOVFF       POSTINC0, FARG_bcdToDec_dato
0x23AA	0xF009EC1A  	CALL        _bcdToDec, 0
0x23AE	0xFFE1C57B  	MOVFF       FLOC__DS1307_read, FSR1L
0x23B2	0xFFE2C57C  	MOVFF       FLOC__DS1307_read+1, FSR1H
0x23B6	0xFFE6C000  	MOVFF       R0, POSTINC1
;ds1307.h,138 :: 		myDS->day = bcdToDec(myDS->daY);
0x23BA	0x0E04      	MOVLW       4
0x23BC	0x2578      	ADDWF       FARG_DS1307_read_myDS, 0, 1
0x23BE	0x6F7B      	MOVWF       FLOC__DS1307_read, 1
0x23C0	0x0E00      	MOVLW       0
0x23C2	0x2179      	ADDWFC      FARG_DS1307_read_myDS+1, 0, 1
0x23C4	0x6F7C      	MOVWF       FLOC__DS1307_read+1, 1
0x23C6	0xFFE9C57B  	MOVFF       FLOC__DS1307_read, FSR0L
0x23CA	0xFFEAC57C  	MOVFF       FLOC__DS1307_read+1, FSR0H
0x23CE	0xF586CFEE  	MOVFF       POSTINC0, FARG_bcdToDec_dato
0x23D2	0xF009EC1A  	CALL        _bcdToDec, 0
0x23D6	0xFFE1C57B  	MOVFF       FLOC__DS1307_read, FSR1L
0x23DA	0xFFE2C57C  	MOVFF       FLOC__DS1307_read+1, FSR1H
0x23DE	0xFFE6C000  	MOVFF       R0, POSTINC1
;ds1307.h,139 :: 		myDS->month = bcdToDec(myDS->month);
0x23E2	0x0E05      	MOVLW       5
0x23E4	0x2578      	ADDWF       FARG_DS1307_read_myDS, 0, 1
0x23E6	0x6F7B      	MOVWF       FLOC__DS1307_read, 1
0x23E8	0x0E00      	MOVLW       0
0x23EA	0x2179      	ADDWFC      FARG_DS1307_read_myDS+1, 0, 1
0x23EC	0x6F7C      	MOVWF       FLOC__DS1307_read+1, 1
0x23EE	0xFFE9C57B  	MOVFF       FLOC__DS1307_read, FSR0L
0x23F2	0xFFEAC57C  	MOVFF       FLOC__DS1307_read+1, FSR0H
0x23F6	0xF586CFEE  	MOVFF       POSTINC0, FARG_bcdToDec_dato
0x23FA	0xF009EC1A  	CALL        _bcdToDec, 0
0x23FE	0xFFE1C57B  	MOVFF       FLOC__DS1307_read, FSR1L
0x2402	0xFFE2C57C  	MOVFF       FLOC__DS1307_read+1, FSR1H
0x2406	0xFFE6C000  	MOVFF       R0, POSTINC1
;ds1307.h,140 :: 		myDS->year = bcdToDec(myDS->year);
0x240A	0x0E06      	MOVLW       6
0x240C	0x2578      	ADDWF       FARG_DS1307_read_myDS, 0, 1
0x240E	0x6F7B      	MOVWF       FLOC__DS1307_read, 1
0x2410	0x0E00      	MOVLW       0
0x2412	0x2179      	ADDWFC      FARG_DS1307_read_myDS+1, 0, 1
0x2414	0x6F7C      	MOVWF       FLOC__DS1307_read+1, 1
0x2416	0xFFE9C57B  	MOVFF       FLOC__DS1307_read, FSR0L
0x241A	0xFFEAC57C  	MOVFF       FLOC__DS1307_read+1, FSR0H
0x241E	0xF586CFEE  	MOVFF       POSTINC0, FARG_bcdToDec_dato
0x2422	0xF009EC1A  	CALL        _bcdToDec, 0
0x2426	0xFFE1C57B  	MOVFF       FLOC__DS1307_read, FSR1L
0x242A	0xFFE2C57C  	MOVFF       FLOC__DS1307_read+1, FSR1H
0x242E	0xFFE6C000  	MOVFF       R0, POSTINC1
;ds1307.h,143 :: 		DS1307_date(myDS, formatComplet);
0x2432	0xF586C578  	MOVFF       FARG_DS1307_read_myDS, FARG_DS1307_date_myDS
0x2436	0xF587C579  	MOVFF       FARG_DS1307_read_myDS+1, FARG_DS1307_date_myDS+1
0x243A	0xF588C57A  	MOVFF       FARG_DS1307_read_formatComplet, FARG_DS1307_date_formatComplet
0x243E	0xF009EC84  	CALL        _DS1307_date, 0
;ds1307.h,145 :: 		return myDS->time;
0x2442	0x0E07      	MOVLW       7
0x2444	0x2578      	ADDWF       FARG_DS1307_read_myDS, 0, 1
0x2446	0x6E00      	MOVWF       R0 
0x2448	0x0E00      	MOVLW       0
0x244A	0x2179      	ADDWFC      FARG_DS1307_read_myDS+1, 0, 1
0x244C	0x6E01      	MOVWF       R1 
;ds1307.h,146 :: 		}
L_end_DS1307_read:
0x244E	0x0012      	RETURN      0
; end of _DS1307_read
_string_toUpper:
;string.h,258 :: 		char* string_toUpper(char *cadena){
;string.h,259 :: 		char cont = 0;
0x2450	0x0105      	MOVLB       5
0x2452	0x6B7A      	CLRF        string_toUpper_cont_L0, 1
;string.h,260 :: 		while(cadena[cont] != 0){
L_string_toUpper96:
0x2454	0x517A      	MOVF        string_toUpper_cont_L0, 0, 1
0x2456	0x2578      	ADDWF       FARG_string_toUpper_cadena, 0, 1
0x2458	0x6EE9      	MOVWF       FSR0L 
0x245A	0x0E00      	MOVLW       0
0x245C	0x2179      	ADDWFC      FARG_string_toUpper_cadena+1, 0, 1
0x245E	0x6EEA      	MOVWF       FSR0H 
0x2460	0x50EE      	MOVF        POSTINC0, 0 
0x2462	0x0A00      	XORLW       0
0x2464	0xE027      	BZ          L_string_toUpper97
;string.h,261 :: 		if(cadena[cont] >= 'a' && cadena[cont] <= 'z')
0x2466	0x517A      	MOVF        string_toUpper_cont_L0, 0, 1
0x2468	0x2578      	ADDWF       FARG_string_toUpper_cadena, 0, 1
0x246A	0x6EE9      	MOVWF       FSR0L 
0x246C	0x0E00      	MOVLW       0
0x246E	0x2179      	ADDWFC      FARG_string_toUpper_cadena+1, 0, 1
0x2470	0x6EEA      	MOVWF       FSR0H 
0x2472	0x0E61      	MOVLW       97
0x2474	0x5CEE      	SUBWF       POSTINC0, 0 
0x2476	0xE31C      	BNC         L_string_toUpper100
0x2478	0x517A      	MOVF        string_toUpper_cont_L0, 0, 1
0x247A	0x2578      	ADDWF       FARG_string_toUpper_cadena, 0, 1
0x247C	0x6EE9      	MOVWF       FSR0L 
0x247E	0x0E00      	MOVLW       0
0x2480	0x2179      	ADDWFC      FARG_string_toUpper_cadena+1, 0, 1
0x2482	0x6EEA      	MOVWF       FSR0H 
0x2484	0x50EE      	MOVF        POSTINC0, 0 
0x2486	0x087A      	SUBLW       122
0x2488	0xE313      	BNC         L_string_toUpper100
L__string_toUpper927:
;string.h,262 :: 		cadena[cont] -= 'a'-'A'; //a = 97, A = 65
0x248A	0x517A      	MOVF        string_toUpper_cont_L0, 0, 1
0x248C	0x2578      	ADDWF       FARG_string_toUpper_cadena, 0, 1
0x248E	0x6E01      	MOVWF       R1 
0x2490	0x0E00      	MOVLW       0
0x2492	0x2179      	ADDWFC      FARG_string_toUpper_cadena+1, 0, 1
0x2494	0x6E02      	MOVWF       R2 
0x2496	0xFFE9C001  	MOVFF       R1, FSR0L
0x249A	0xFFEAC002  	MOVFF       R2, FSR0H
0x249E	0x0E20      	MOVLW       32
0x24A0	0x5CEE      	SUBWF       POSTINC0, 0 
0x24A2	0x6E00      	MOVWF       R0 
0x24A4	0xFFE1C001  	MOVFF       R1, FSR1L
0x24A8	0xFFE2C002  	MOVFF       R2, FSR1H
0x24AC	0xFFE6C000  	MOVFF       R0, POSTINC1
L_string_toUpper100:
;string.h,263 :: 		cont++;
0x24B0	0x2B7A      	INCF        string_toUpper_cont_L0, 1, 1
;string.h,264 :: 		}
0x24B2	0xD7D0      	BRA         L_string_toUpper96
L_string_toUpper97:
;string.h,265 :: 		return cadena;
0x24B4	0xF000C578  	MOVFF       FARG_string_toUpper_cadena, R0
0x24B8	0xF001C579  	MOVFF       FARG_string_toUpper_cadena+1, R1
;string.h,266 :: 		}
L_end_string_toUpper:
0x24BC	0x0012      	RETURN      0
; end of _string_toUpper
_timer1_enable:
;lib_timer1.h,45 :: 		void timer1_enable(bool enable){
;lib_timer1.h,46 :: 		PIE1.TMR1IE = enable;
0x24BE	0x0105      	MOVLB       5
0x24C0	0xB178      	BTFSC       FARG_timer1_enable_enable, 0, 1
0x24C2	0xD002      	BRA         L__timer1_enable1041
0x24C4	0x909D      	BCF         PIE1, 0 
0x24C6	0xD001      	BRA         L__timer1_enable1042
L__timer1_enable1041:
0x24C8	0x809D      	BSF         PIE1, 0 
L__timer1_enable1042:
;lib_timer1.h,47 :: 		}
L_end_timer1_enable:
0x24CA	0x0012      	RETURN      0
; end of _timer1_enable
_Lcd_Out:
;__Lib_Lcd.c,184 :: 		
;__Lib_Lcd.c,187 :: 		
0x24CC	0xD010      	BRA         L_Lcd_Out11
;__Lib_Lcd.c,188 :: 		
L_Lcd_Out13:
0x24CE	0x0E80      	MOVLW       128
0x24D0	0x0105      	MOVLB       5
0x24D2	0x6F78      	MOVWF       FARG_Lcd_Out_row, 1
0x24D4	0xD01A      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,189 :: 		
L_Lcd_Out14:
0x24D6	0x0EC0      	MOVLW       192
0x24D8	0x6F78      	MOVWF       FARG_Lcd_Out_row, 1
0x24DA	0xD017      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,190 :: 		
L_Lcd_Out15:
0x24DC	0x0E94      	MOVLW       148
0x24DE	0x6F78      	MOVWF       FARG_Lcd_Out_row, 1
0x24E0	0xD014      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,191 :: 		
L_Lcd_Out16:
0x24E2	0x0ED4      	MOVLW       212
0x24E4	0x6F78      	MOVWF       FARG_Lcd_Out_row, 1
0x24E6	0xD011      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,192 :: 		
L_Lcd_Out17:
0x24E8	0x0E80      	MOVLW       128
0x24EA	0x6F78      	MOVWF       FARG_Lcd_Out_row, 1
;__Lib_Lcd.c,193 :: 		
0x24EC	0xD00E      	BRA         L_Lcd_Out12
L_Lcd_Out11:
0x24EE	0x0105      	MOVLB       5
0x24F0	0x5178      	MOVF        FARG_Lcd_Out_row, 0, 1
0x24F2	0x0A01      	XORLW       1
0x24F4	0xE0EC      	BZ          L_Lcd_Out13
0x24F6	0x5178      	MOVF        FARG_Lcd_Out_row, 0, 1
0x24F8	0x0A02      	XORLW       2
0x24FA	0xE0ED      	BZ          L_Lcd_Out14
0x24FC	0x5178      	MOVF        FARG_Lcd_Out_row, 0, 1
0x24FE	0x0A03      	XORLW       3
0x2500	0xE0ED      	BZ          L_Lcd_Out15
0x2502	0x5178      	MOVF        FARG_Lcd_Out_row, 0, 1
0x2504	0x0A04      	XORLW       4
0x2506	0xE0ED      	BZ          L_Lcd_Out16
0x2508	0xD7EF      	BRA         L_Lcd_Out17
L_Lcd_Out12:
;__Lib_Lcd.c,194 :: 		
0x250A	0x0579      	DECF        FARG_Lcd_Out_column, 0, 1
0x250C	0x6E00      	MOVWF       R0 
0x250E	0x5178      	MOVF        FARG_Lcd_Out_row, 0, 1
0x2510	0x2600      	ADDWF       R0, 1 
0x2512	0xF578C000  	MOVFF       R0, FARG_Lcd_Out_row
;__Lib_Lcd.c,196 :: 		
0x2516	0xF590C000  	MOVFF       R0, FARG_Lcd_Cmd_out_char
0x251A	0xF005ECA9  	CALL        _Lcd_Cmd, 0
;__Lib_Lcd.c,197 :: 		
0x251E	0x91BC      	BCF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,198 :: 		
0x2520	0x0105      	MOVLB       5
0x2522	0x6B7C      	CLRF        Lcd_Out_i_L0, 1
;__Lib_Lcd.c,199 :: 		
L_Lcd_Out18:
0x2524	0x517C      	MOVF        Lcd_Out_i_L0, 0, 1
0x2526	0x257A      	ADDWF       FARG_Lcd_Out_text, 0, 1
0x2528	0x6EE9      	MOVWF       FSR0L 
0x252A	0x0E00      	MOVLW       0
0x252C	0x217B      	ADDWFC      FARG_Lcd_Out_text+1, 0, 1
0x252E	0x6EEA      	MOVWF       FSR0H 
0x2530	0x52EE      	MOVF        POSTINC0, 1 
0x2532	0xE00D      	BZ          L_Lcd_Out19
;__Lib_Lcd.c,200 :: 		
0x2534	0x517C      	MOVF        Lcd_Out_i_L0, 0, 1
0x2536	0x257A      	ADDWF       FARG_Lcd_Out_text, 0, 1
0x2538	0x6EE9      	MOVWF       FSR0L 
0x253A	0x0E00      	MOVLW       0
0x253C	0x217B      	ADDWFC      FARG_Lcd_Out_text+1, 0, 1
0x253E	0x6EEA      	MOVWF       FSR0H 
0x2540	0xF586CFEE  	MOVFF       POSTINC0, FARG_Lcd_Chr_CP_out_char
0x2544	0xF007EC30  	CALL        _Lcd_Chr_CP, 0
0x2548	0x0105      	MOVLB       5
0x254A	0x2B7C      	INCF        Lcd_Out_i_L0, 1, 1
0x254C	0xD7EB      	BRA         L_Lcd_Out18
L_Lcd_Out19:
;__Lib_Lcd.c,201 :: 		
0x254E	0x0103      	MOVLB       3
0x2550	0x81BC      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,202 :: 		
L_end_Lcd_Out:
0x2552	0x0012      	RETURN      0
; end of _Lcd_Out
_Div_32x32_U:
;__Lib_Math.c,1162 :: 		
;__Lib_Math.c,1173 :: 		
0x2554	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,1174 :: 		
0x2556	0x6A0A      	CLRF        R10, 0
;__Lib_Math.c,1175 :: 		
0x2558	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,1176 :: 		
0x255A	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,1178 :: 		
0x255C	0x6A0E      	CLRF        R14, 0
;__Lib_Math.c,1180 :: 		
0x255E	0x3403      	RLCF        R3, 0, 0
;__Lib_Math.c,1181 :: 		
0x2560	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1182 :: 		
0x2562	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1183 :: 		
0x2564	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1184 :: 		
0x2566	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1185 :: 		
0x2568	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1186 :: 		
0x256A	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1187 :: 		
0x256C	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1188 :: 		
0x256E	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1189 :: 		
0x2570	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1190 :: 		
0x2572	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1191 :: 		
0x2574	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1192 :: 		
0x2576	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1193 :: 		
0x2578	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1194 :: 		
0x257A	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1195 :: 		
0x257C	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1197 :: 		
0x257E	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1198 :: 		
0x2580	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1199 :: 		
0x2582	0x0E01      	MOVLW       1
;__Lib_Math.c,1200 :: 		
0x2584	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1201 :: 		
0x2586	0x3603      	RLCF        R3, 1, 0
;__Lib_Math.c,1203 :: 		
0x2588	0x0E07      	MOVLW       7
;__Lib_Math.c,1204 :: 		
0x258A	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,1206 :: 		
LOOPU3232A:
;__Lib_Math.c,1207 :: 		
0x258C	0x3403      	RLCF        R3, 0, 0
;__Lib_Math.c,1208 :: 		
0x258E	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1209 :: 		
0x2590	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,1210 :: 		
0x2592	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,1211 :: 		
0x2594	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,1212 :: 		
0x2596	0x360E      	RLCF        R14, 1, 0
;__Lib_Math.c,1213 :: 		
0x2598	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1214 :: 		
0x259A	0xA003      	BTFSS       R3, 0, 0
;__Lib_Math.c,1215 :: 		
0x259C	0xD012      	BRA         UADD22LA
;__Lib_Math.c,1217 :: 		
0x259E	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1218 :: 		
0x25A0	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1219 :: 		
0x25A2	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1220 :: 		
0x25A4	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1221 :: 		
0x25A6	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1222 :: 		
0x25A8	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1223 :: 		
0x25AA	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1224 :: 		
0x25AC	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1225 :: 		
0x25AE	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1226 :: 		
0x25B0	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1227 :: 		
0x25B2	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1228 :: 		
0x25B4	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1229 :: 		
0x25B6	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1230 :: 		
0x25B8	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1231 :: 		
0x25BA	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1232 :: 		
0x25BC	0x0E01      	MOVLW       1
;__Lib_Math.c,1233 :: 		
0x25BE	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1234 :: 		
0x25C0	0xD011      	BRA         UOK22LA
;__Lib_Math.c,1236 :: 		
UADD22LA:
;__Lib_Math.c,1237 :: 		
0x25C2	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1238 :: 		
0x25C4	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1239 :: 		
0x25C6	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1240 :: 		
0x25C8	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1241 :: 		
0x25CA	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1242 :: 		
0x25CC	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1243 :: 		
0x25CE	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1244 :: 		
0x25D0	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1245 :: 		
0x25D2	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1246 :: 		
0x25D4	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1247 :: 		
0x25D6	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1248 :: 		
0x25D8	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1249 :: 		
0x25DA	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1250 :: 		
0x25DC	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1251 :: 		
0x25DE	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1252 :: 		
0x25E0	0x0E01      	MOVLW       1
;__Lib_Math.c,1253 :: 		
0x25E2	0x260E      	ADDWF       R14, 1, 0
;__Lib_Math.c,1255 :: 		
UOK22LA:
;__Lib_Math.c,1256 :: 		
0x25E4	0x3603      	RLCF        R3, 1, 0
;__Lib_Math.c,1258 :: 		
0x25E6	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,1259 :: 		
0x25E8	0xD7D1      	BRA         LOOPU3232A
;__Lib_Math.c,1261 :: 		
0x25EA	0x3402      	RLCF        R2, 0, 0
;__Lib_Math.c,1262 :: 		
0x25EC	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1263 :: 		
0x25EE	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,1264 :: 		
0x25F0	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,1265 :: 		
0x25F2	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,1266 :: 		
0x25F4	0x360E      	RLCF        R14, 1, 0
;__Lib_Math.c,1267 :: 		
0x25F6	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1268 :: 		
0x25F8	0xA003      	BTFSS       R3, 0, 0
;__Lib_Math.c,1269 :: 		
0x25FA	0xD012      	BRA         UADD22L8
;__Lib_Math.c,1271 :: 		
0x25FC	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1272 :: 		
0x25FE	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1273 :: 		
0x2600	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1274 :: 		
0x2602	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1275 :: 		
0x2604	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1276 :: 		
0x2606	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1277 :: 		
0x2608	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1278 :: 		
0x260A	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1279 :: 		
0x260C	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1280 :: 		
0x260E	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1281 :: 		
0x2610	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1282 :: 		
0x2612	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1283 :: 		
0x2614	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1284 :: 		
0x2616	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1285 :: 		
0x2618	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1286 :: 		
0x261A	0x0E01      	MOVLW       1
;__Lib_Math.c,1287 :: 		
0x261C	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1288 :: 		
0x261E	0xD011      	BRA         UOK22L8
;__Lib_Math.c,1290 :: 		
UADD22L8:
;__Lib_Math.c,1291 :: 		
0x2620	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1292 :: 		
0x2622	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1293 :: 		
0x2624	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1294 :: 		
0x2626	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1295 :: 		
0x2628	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1296 :: 		
0x262A	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1297 :: 		
0x262C	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1298 :: 		
0x262E	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1299 :: 		
0x2630	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1300 :: 		
0x2632	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1301 :: 		
0x2634	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1302 :: 		
0x2636	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1303 :: 		
0x2638	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1304 :: 		
0x263A	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1305 :: 		
0x263C	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1306 :: 		
0x263E	0x0E01      	MOVLW       1
;__Lib_Math.c,1307 :: 		
0x2640	0x260E      	ADDWF       R14, 1, 0
;__Lib_Math.c,1309 :: 		
UOK22L8:
;__Lib_Math.c,1310 :: 		
0x2642	0x3602      	RLCF        R2, 1, 0
;__Lib_Math.c,1312 :: 		
0x2644	0x0E07      	MOVLW       7
;__Lib_Math.c,1313 :: 		
0x2646	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,1315 :: 		
LOOPU3232B:
;__Lib_Math.c,1316 :: 		
0x2648	0x3402      	RLCF        R2, 0, 0
;__Lib_Math.c,1317 :: 		
0x264A	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1318 :: 		
0x264C	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,1319 :: 		
0x264E	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,1320 :: 		
0x2650	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,1321 :: 		
0x2652	0x360E      	RLCF        R14, 1, 0
;__Lib_Math.c,1322 :: 		
0x2654	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1323 :: 		
0x2656	0xA002      	BTFSS       R2, 0, 0
;__Lib_Math.c,1324 :: 		
0x2658	0xD012      	BRA         UADD22LB
;__Lib_Math.c,1326 :: 		
0x265A	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1327 :: 		
0x265C	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1328 :: 		
0x265E	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1329 :: 		
0x2660	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1330 :: 		
0x2662	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1331 :: 		
0x2664	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1332 :: 		
0x2666	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1333 :: 		
0x2668	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1334 :: 		
0x266A	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1335 :: 		
0x266C	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1336 :: 		
0x266E	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1337 :: 		
0x2670	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1338 :: 		
0x2672	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1339 :: 		
0x2674	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1340 :: 		
0x2676	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1341 :: 		
0x2678	0x0E01      	MOVLW       1
;__Lib_Math.c,1342 :: 		
0x267A	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1343 :: 		
0x267C	0xD011      	BRA         UOK22LB
;__Lib_Math.c,1345 :: 		
UADD22LB:
;__Lib_Math.c,1346 :: 		
0x267E	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1347 :: 		
0x2680	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1348 :: 		
0x2682	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1349 :: 		
0x2684	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1350 :: 		
0x2686	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1351 :: 		
0x2688	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1352 :: 		
0x268A	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1353 :: 		
0x268C	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1354 :: 		
0x268E	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1355 :: 		
0x2690	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1356 :: 		
0x2692	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1357 :: 		
0x2694	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1358 :: 		
0x2696	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1359 :: 		
0x2698	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1360 :: 		
0x269A	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1361 :: 		
0x269C	0x0E01      	MOVLW       1
;__Lib_Math.c,1362 :: 		
0x269E	0x260E      	ADDWF       R14, 1, 0
;__Lib_Math.c,1364 :: 		
UOK22LB:
;__Lib_Math.c,1365 :: 		
0x26A0	0x3602      	RLCF        R2, 1, 0
;__Lib_Math.c,1367 :: 		
0x26A2	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,1368 :: 		
0x26A4	0xD7D1      	BRA         LOOPU3232B
;__Lib_Math.c,1370 :: 		
0x26A6	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,1371 :: 		
0x26A8	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1372 :: 		
0x26AA	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,1373 :: 		
0x26AC	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,1374 :: 		
0x26AE	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,1375 :: 		
0x26B0	0x360E      	RLCF        R14, 1, 0
;__Lib_Math.c,1376 :: 		
0x26B2	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1377 :: 		
0x26B4	0xA002      	BTFSS       R2, 0, 0
;__Lib_Math.c,1378 :: 		
0x26B6	0xD012      	BRA         UADD22L16
;__Lib_Math.c,1380 :: 		
0x26B8	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1381 :: 		
0x26BA	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1382 :: 		
0x26BC	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1383 :: 		
0x26BE	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1384 :: 		
0x26C0	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1385 :: 		
0x26C2	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1386 :: 		
0x26C4	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1387 :: 		
0x26C6	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1388 :: 		
0x26C8	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1389 :: 		
0x26CA	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1390 :: 		
0x26CC	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1391 :: 		
0x26CE	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1392 :: 		
0x26D0	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1393 :: 		
0x26D2	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1394 :: 		
0x26D4	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1395 :: 		
0x26D6	0x0E01      	MOVLW       1
;__Lib_Math.c,1396 :: 		
0x26D8	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1397 :: 		
0x26DA	0xD011      	BRA         UOK22L16
;__Lib_Math.c,1399 :: 		
UADD22L16:
;__Lib_Math.c,1400 :: 		
0x26DC	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1401 :: 		
0x26DE	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1402 :: 		
0x26E0	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1403 :: 		
0x26E2	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1404 :: 		
0x26E4	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1405 :: 		
0x26E6	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1406 :: 		
0x26E8	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1407 :: 		
0x26EA	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1408 :: 		
0x26EC	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1409 :: 		
0x26EE	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1410 :: 		
0x26F0	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1411 :: 		
0x26F2	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1412 :: 		
0x26F4	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1413 :: 		
0x26F6	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1414 :: 		
0x26F8	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1415 :: 		
0x26FA	0x0E01      	MOVLW       1
;__Lib_Math.c,1416 :: 		
0x26FC	0x260E      	ADDWF       R14, 1, 0
;__Lib_Math.c,1418 :: 		
UOK22L16:
;__Lib_Math.c,1419 :: 		
0x26FE	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,1421 :: 		
0x2700	0x0E07      	MOVLW       7
;__Lib_Math.c,1422 :: 		
0x2702	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,1424 :: 		
LOOPU3232C:
;__Lib_Math.c,1425 :: 		
0x2704	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,1426 :: 		
0x2706	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1427 :: 		
0x2708	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,1428 :: 		
0x270A	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,1429 :: 		
0x270C	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,1430 :: 		
0x270E	0x360E      	RLCF        R14, 1, 0
;__Lib_Math.c,1431 :: 		
0x2710	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1432 :: 		
0x2712	0xA001      	BTFSS       R1, 0, 0
;__Lib_Math.c,1433 :: 		
0x2714	0xD012      	BRA         UADD22LC
;__Lib_Math.c,1435 :: 		
0x2716	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1436 :: 		
0x2718	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1437 :: 		
0x271A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1438 :: 		
0x271C	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1439 :: 		
0x271E	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1440 :: 		
0x2720	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1441 :: 		
0x2722	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1442 :: 		
0x2724	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1443 :: 		
0x2726	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1444 :: 		
0x2728	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1445 :: 		
0x272A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1446 :: 		
0x272C	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1447 :: 		
0x272E	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1448 :: 		
0x2730	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1449 :: 		
0x2732	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1450 :: 		
0x2734	0x0E01      	MOVLW       1
;__Lib_Math.c,1451 :: 		
0x2736	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1452 :: 		
0x2738	0xD011      	BRA         UOK22LC
;__Lib_Math.c,1454 :: 		
UADD22LC:
;__Lib_Math.c,1455 :: 		
0x273A	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1456 :: 		
0x273C	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1457 :: 		
0x273E	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1458 :: 		
0x2740	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1459 :: 		
0x2742	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1460 :: 		
0x2744	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1461 :: 		
0x2746	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1462 :: 		
0x2748	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1463 :: 		
0x274A	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1464 :: 		
0x274C	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1465 :: 		
0x274E	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1466 :: 		
0x2750	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1467 :: 		
0x2752	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1468 :: 		
0x2754	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1469 :: 		
0x2756	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1470 :: 		
0x2758	0x0E01      	MOVLW       1
;__Lib_Math.c,1471 :: 		
0x275A	0x260E      	ADDWF       R14, 1, 0
;__Lib_Math.c,1473 :: 		
UOK22LC:
;__Lib_Math.c,1474 :: 		
0x275C	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,1476 :: 		
0x275E	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,1477 :: 		
0x2760	0xD7D1      	BRA         LOOPU3232C
;__Lib_Math.c,1479 :: 		
0x2762	0x3400      	RLCF        R0, 0, 0
;__Lib_Math.c,1480 :: 		
0x2764	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1481 :: 		
0x2766	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,1482 :: 		
0x2768	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,1483 :: 		
0x276A	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,1484 :: 		
0x276C	0x360E      	RLCF        R14, 1, 0
;__Lib_Math.c,1485 :: 		
0x276E	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1486 :: 		
0x2770	0xA001      	BTFSS       R1, 0, 0
;__Lib_Math.c,1487 :: 		
0x2772	0xD012      	BRA         UADD22L24
;__Lib_Math.c,1489 :: 		
0x2774	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1490 :: 		
0x2776	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1491 :: 		
0x2778	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1492 :: 		
0x277A	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1493 :: 		
0x277C	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1494 :: 		
0x277E	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1495 :: 		
0x2780	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1496 :: 		
0x2782	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1497 :: 		
0x2784	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1498 :: 		
0x2786	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1499 :: 		
0x2788	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1500 :: 		
0x278A	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1501 :: 		
0x278C	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1502 :: 		
0x278E	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1503 :: 		
0x2790	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1504 :: 		
0x2792	0x0E01      	MOVLW       1
;__Lib_Math.c,1505 :: 		
0x2794	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1506 :: 		
0x2796	0xD011      	BRA         UOK22L24
;__Lib_Math.c,1508 :: 		
UADD22L24:
;__Lib_Math.c,1509 :: 		
0x2798	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1510 :: 		
0x279A	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1511 :: 		
0x279C	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1512 :: 		
0x279E	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1513 :: 		
0x27A0	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1514 :: 		
0x27A2	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1515 :: 		
0x27A4	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1516 :: 		
0x27A6	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1517 :: 		
0x27A8	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1518 :: 		
0x27AA	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1519 :: 		
0x27AC	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1520 :: 		
0x27AE	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1521 :: 		
0x27B0	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1522 :: 		
0x27B2	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1523 :: 		
0x27B4	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1524 :: 		
0x27B6	0x0E01      	MOVLW       1
;__Lib_Math.c,1525 :: 		
0x27B8	0x260E      	ADDWF       R14, 1, 0
;__Lib_Math.c,1527 :: 		
UOK22L24:
;__Lib_Math.c,1528 :: 		
0x27BA	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,1530 :: 		
0x27BC	0x0E07      	MOVLW       7
;__Lib_Math.c,1531 :: 		
0x27BE	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,1533 :: 		
LOOPU3232D:
;__Lib_Math.c,1534 :: 		
0x27C0	0x3400      	RLCF        R0, 0, 0
;__Lib_Math.c,1535 :: 		
0x27C2	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1536 :: 		
0x27C4	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,1537 :: 		
0x27C6	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,1538 :: 		
0x27C8	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,1539 :: 		
0x27CA	0x360E      	RLCF        R14, 1, 0
;__Lib_Math.c,1540 :: 		
0x27CC	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1541 :: 		
0x27CE	0xA000      	BTFSS       R0, 0, 0
;__Lib_Math.c,1542 :: 		
0x27D0	0xD012      	BRA         UADD22LD
;__Lib_Math.c,1544 :: 		
0x27D2	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1545 :: 		
0x27D4	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1546 :: 		
0x27D6	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1547 :: 		
0x27D8	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1548 :: 		
0x27DA	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1549 :: 		
0x27DC	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1550 :: 		
0x27DE	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1551 :: 		
0x27E0	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1552 :: 		
0x27E2	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1553 :: 		
0x27E4	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1554 :: 		
0x27E6	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1555 :: 		
0x27E8	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1556 :: 		
0x27EA	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1557 :: 		
0x27EC	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1558 :: 		
0x27EE	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1559 :: 		
0x27F0	0x0E01      	MOVLW       1
;__Lib_Math.c,1560 :: 		
0x27F2	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1561 :: 		
0x27F4	0xD011      	BRA         UOK22LD
;__Lib_Math.c,1563 :: 		
UADD22LD:
;__Lib_Math.c,1564 :: 		
0x27F6	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1565 :: 		
0x27F8	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1566 :: 		
0x27FA	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1567 :: 		
0x27FC	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1568 :: 		
0x27FE	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1569 :: 		
0x2800	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1570 :: 		
0x2802	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1571 :: 		
0x2804	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1572 :: 		
0x2806	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1573 :: 		
0x2808	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1574 :: 		
0x280A	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1575 :: 		
0x280C	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1576 :: 		
0x280E	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1577 :: 		
0x2810	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1578 :: 		
0x2812	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1579 :: 		
0x2814	0x0E01      	MOVLW       1
;__Lib_Math.c,1580 :: 		
0x2816	0x260E      	ADDWF       R14, 1, 0
;__Lib_Math.c,1582 :: 		
UOK22LD:
;__Lib_Math.c,1583 :: 		
0x2818	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,1585 :: 		
0x281A	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,1586 :: 		
0x281C	0xD7D1      	BRA         LOOPU3232D
;__Lib_Math.c,1588 :: 		
0x281E	0xB000      	BTFSC       R0, 0, 0
;__Lib_Math.c,1589 :: 		
0x2820	0xD00E      	BRA         UOK22L
;__Lib_Math.c,1590 :: 		
0x2822	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1591 :: 		
0x2824	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1592 :: 		
0x2826	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1593 :: 		
0x2828	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1594 :: 		
0x282A	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1595 :: 		
0x282C	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1596 :: 		
0x282E	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1597 :: 		
0x2830	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1598 :: 		
0x2832	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1599 :: 		
0x2834	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1600 :: 		
0x2836	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1601 :: 		
0x2838	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1602 :: 		
0x283A	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1603 :: 		
0x283C	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1605 :: 		
UOK22L:
;__Lib_Math.c,1607 :: 		
L_end_Div_32x32_U:
0x283E	0x0012      	RETURN      0
; end of _Div_32x32_U
_mysql_write:
;table_eeprom.h,305 :: 		char mysql_write(char *name, char *column, int fila, long value, bool endWrite){
;table_eeprom.h,306 :: 		char res = _mysql_calculate_address(name, column);
0x2840	0xF590C578  	MOVFF       FARG_mysql_write_name, FARG__mysql_calculate_address_name
0x2844	0xF591C579  	MOVFF       FARG_mysql_write_name+1, FARG__mysql_calculate_address_name+1
0x2848	0xF592C57A  	MOVFF       FARG_mysql_write_column, FARG__mysql_calculate_address_column
0x284C	0xF593C57B  	MOVFF       FARG_mysql_write_column+1, FARG__mysql_calculate_address_column+1
0x2850	0xF004ECAB  	CALL        __mysql_calculate_address, 0
0x2854	0xF583C000  	MOVFF       R0, mysql_write_res_L0
;table_eeprom.h,309 :: 		if(res)
0x2858	0x5200      	MOVF        R0, 1 
0x285A	0xE003      	BZ          L_mysql_write522
;table_eeprom.h,310 :: 		return res;
0x285C	0xF000C583  	MOVFF       mysql_write_res_L0, R0
0x2860	0xD08A      	BRA         L_end_mysql_write
L_mysql_write522:
;table_eeprom.h,313 :: 		myTable.cont = myTable.tamCol;
0x2862	0xF3BAC391  	MOVFF       Validadora_myTable+6, Validadora_myTable+47
;table_eeprom.h,314 :: 		if(myTable.cont > 4){
0x2866	0x0103      	MOVLB       3
0x2868	0x5191      	MOVF        Validadora_myTable+6, 0, 1
0x286A	0x0804      	SUBLW       4
0x286C	0xE203      	BC          L_mysql_write523
;table_eeprom.h,315 :: 		return TABLE_RW_OUT_RANGE_BYTES;
0x286E	0x0E06      	MOVLW       6
0x2870	0x6E00      	MOVWF       R0 
0x2872	0xD081      	BRA         L_end_mysql_write
;table_eeprom.h,316 :: 		}
L_mysql_write523:
;table_eeprom.h,318 :: 		if(endWrite){
0x2874	0x0105      	MOVLB       5
0x2876	0x5382      	MOVF        FARG_mysql_write_endWrite, 1, 1
0x2878	0xE047      	BZ          L_mysql_write524
;table_eeprom.h,319 :: 		if(myTable.rowAct < myTable.row){
0x287A	0x0103      	MOVLB       3
0x287C	0x518E      	MOVF        Validadora_myTable+3, 0, 1
0x287E	0x5D90      	SUBWF       Validadora_myTable+5, 0, 1
0x2880	0xE102      	BNZ         L__mysql_write1271
0x2882	0x518D      	MOVF        Validadora_myTable+2, 0, 1
0x2884	0x5D8F      	SUBWF       Validadora_myTable+4, 0, 1
L__mysql_write1271:
0x2886	0xE23C      	BC          L_mysql_write525
;table_eeprom.h,320 :: 		eeprom_i2c_write(myTable.addressAct+myTable.rowAct*myTable.tamCol, (char*)&value, myTable.cont);
0x2888	0xF000C38F  	MOVFF       Validadora_myTable+4, R0
0x288C	0xF001C390  	MOVFF       Validadora_myTable+5, R1
0x2890	0xF004C391  	MOVFF       Validadora_myTable+6, R4
0x2894	0x0E00      	MOVLW       0
0x2896	0x6E05      	MOVWF       R5 
0x2898	0xF002ECC0  	CALL        _Mul_16X16_U, 0
0x289C	0x5000      	MOVF        R0, 0 
0x289E	0x25B8      	ADDWF       Validadora_myTable+45, 0, 1
0x28A0	0x0105      	MOVLB       5
0x28A2	0x6F90      	MOVWF       FARG_eeprom_i2c_write_address, 1
0x28A4	0x5001      	MOVF        R1, 0 
0x28A6	0x0103      	MOVLB       3
0x28A8	0x21B9      	ADDWFC      Validadora_myTable+46, 0, 1
0x28AA	0x0105      	MOVLB       5
0x28AC	0x6F91      	MOVWF       FARG_eeprom_i2c_write_address+1, 1
0x28AE	0x0E7E      	MOVLW       FARG_mysql_write_value
0x28B0	0x6F92      	MOVWF       FARG_eeprom_i2c_write_datos, 1
0x28B2	0x0E05      	MOVLW       hi_addr(FARG_mysql_write_value)
0x28B4	0x6F93      	MOVWF       FARG_eeprom_i2c_write_datos+1, 1
0x28B6	0xF594C3BA  	MOVFF       Validadora_myTable+47, FARG_eeprom_i2c_write_size
0x28BA	0xF003ECEB  	CALL        _eeprom_i2c_write, 0
;table_eeprom.h,321 :: 		myTable.rowAct++;
0x28BE	0x0E01      	MOVLW       1
0x28C0	0x0103      	MOVLB       3
0x28C2	0x258F      	ADDWF       Validadora_myTable+4, 0, 1
0x28C4	0x6E00      	MOVWF       R0 
0x28C6	0x0E00      	MOVLW       0
0x28C8	0x2190      	ADDWFC      Validadora_myTable+5, 0, 1
0x28CA	0x6E01      	MOVWF       R1 
0x28CC	0xF38FC000  	MOVFF       R0, Validadora_myTable+4
0x28D0	0xF390C001  	MOVFF       R1, Validadora_myTable+5
;table_eeprom.h,322 :: 		eeprom_i2c_write(myTable.address+TABLE_MAX_SIZE_NAME+3, (char*)&myTable.rowAct, 2);
0x28D4	0x0E0F      	MOVLW       15
0x28D6	0x25B6      	ADDWF       Validadora_myTable+43, 0, 1
0x28D8	0x0105      	MOVLB       5
0x28DA	0x6F90      	MOVWF       FARG_eeprom_i2c_write_address, 1
0x28DC	0x0E00      	MOVLW       0
0x28DE	0x0103      	MOVLB       3
0x28E0	0x21B7      	ADDWFC      Validadora_myTable+44, 0, 1
0x28E2	0x0105      	MOVLB       5
0x28E4	0x6F91      	MOVWF       FARG_eeprom_i2c_write_address+1, 1
0x28E6	0x0E03      	MOVLW       3
0x28E8	0x2790      	ADDWF       FARG_eeprom_i2c_write_address, 1, 1
0x28EA	0x0E00      	MOVLW       0
0x28EC	0x2391      	ADDWFC      FARG_eeprom_i2c_write_address+1, 1, 1
0x28EE	0x0E8F      	MOVLW       Validadora_myTable+4
0x28F0	0x6F92      	MOVWF       FARG_eeprom_i2c_write_datos, 1
0x28F2	0x0E03      	MOVLW       hi_addr(Validadora_myTable+4)
0x28F4	0x6F93      	MOVWF       FARG_eeprom_i2c_write_datos+1, 1
0x28F6	0x0E02      	MOVLW       2
0x28F8	0x6F94      	MOVWF       FARG_eeprom_i2c_write_size, 1
0x28FA	0xF003ECEB  	CALL        _eeprom_i2c_write, 0
;table_eeprom.h,323 :: 		}else
0x28FE	0xD003      	BRA         L_mysql_write526
L_mysql_write525:
;table_eeprom.h,324 :: 		return TABLE_RW_TABLE_FULL;   //Memoria llena de la tabla
0x2900	0x0E05      	MOVLW       5
0x2902	0x6E00      	MOVWF       R0 
0x2904	0xD038      	BRA         L_end_mysql_write
L_mysql_write526:
;table_eeprom.h,325 :: 		}else if(fila >= 1 && fila <= myTable.rowAct)
0x2906	0xD036      	BRA         L_mysql_write527
L_mysql_write524:
0x2908	0x0E80      	MOVLW       128
0x290A	0x0105      	MOVLB       5
0x290C	0x197D      	XORWF       FARG_mysql_write_fila+1, 0, 1
0x290E	0x6E00      	MOVWF       R0 
0x2910	0x0E80      	MOVLW       128
0x2912	0x5C00      	SUBWF       R0, 0 
0x2914	0xE102      	BNZ         L__mysql_write1272
0x2916	0x0E01      	MOVLW       1
0x2918	0x5D7C      	SUBWF       FARG_mysql_write_fila, 0, 1
L__mysql_write1272:
0x291A	0xE329      	BNC         L_mysql_write530
0x291C	0x517D      	MOVF        FARG_mysql_write_fila+1, 0, 1
0x291E	0x0103      	MOVLB       3
0x2920	0x5D90      	SUBWF       Validadora_myTable+5, 0, 1
0x2922	0xE104      	BNZ         L__mysql_write1273
0x2924	0x0105      	MOVLB       5
0x2926	0x517C      	MOVF        FARG_mysql_write_fila, 0, 1
0x2928	0x0103      	MOVLB       3
0x292A	0x5D8F      	SUBWF       Validadora_myTable+4, 0, 1
L__mysql_write1273:
0x292C	0xE320      	BNC         L_mysql_write530
L__mysql_write966:
;table_eeprom.h,326 :: 		eeprom_i2c_write(myTable.addressAct+(fila-1)*myTable.tamCol, (char*)&value, myTable.cont);
0x292E	0x0E01      	MOVLW       1
0x2930	0x0105      	MOVLB       5
0x2932	0x5D7C      	SUBWF       FARG_mysql_write_fila, 0, 1
0x2934	0x6E00      	MOVWF       R0 
0x2936	0x0E00      	MOVLW       0
0x2938	0x597D      	SUBWFB      FARG_mysql_write_fila+1, 0, 1
0x293A	0x6E01      	MOVWF       R1 
0x293C	0xF004C391  	MOVFF       Validadora_myTable+6, R4
0x2940	0x0E00      	MOVLW       0
0x2942	0x6E05      	MOVWF       R5 
0x2944	0xF002ECC0  	CALL        _Mul_16X16_U, 0
0x2948	0x5000      	MOVF        R0, 0 
0x294A	0x0103      	MOVLB       3
0x294C	0x25B8      	ADDWF       Validadora_myTable+45, 0, 1
0x294E	0x0105      	MOVLB       5
0x2950	0x6F90      	MOVWF       FARG_eeprom_i2c_write_address, 1
0x2952	0x5001      	MOVF        R1, 0 
0x2954	0x0103      	MOVLB       3
0x2956	0x21B9      	ADDWFC      Validadora_myTable+46, 0, 1
0x2958	0x0105      	MOVLB       5
0x295A	0x6F91      	MOVWF       FARG_eeprom_i2c_write_address+1, 1
0x295C	0x0E7E      	MOVLW       FARG_mysql_write_value
0x295E	0x6F92      	MOVWF       FARG_eeprom_i2c_write_datos, 1
0x2960	0x0E05      	MOVLW       hi_addr(FARG_mysql_write_value)
0x2962	0x6F93      	MOVWF       FARG_eeprom_i2c_write_datos+1, 1
0x2964	0xF594C3BA  	MOVFF       Validadora_myTable+47, FARG_eeprom_i2c_write_size
0x2968	0xF003ECEB  	CALL        _eeprom_i2c_write, 0
0x296C	0xD003      	BRA         L_mysql_write531
L_mysql_write530:
;table_eeprom.h,328 :: 		return TABLE_RW_NO_EXIST_ROW;   //Fila inexistente
0x296E	0x0E03      	MOVLW       3
0x2970	0x6E00      	MOVWF       R0 
0x2972	0xD001      	BRA         L_end_mysql_write
L_mysql_write531:
L_mysql_write527:
;table_eeprom.h,330 :: 		return TABLE_RW_SUCCESS;     //Exito en grabacion
0x2974	0x6A00      	CLRF        R0 
;table_eeprom.h,331 :: 		}
L_end_mysql_write:
0x2976	0x0012      	RETURN      0
; end of _mysql_write
_string_cpyc:
;string.h,86 :: 		char string_cpyc(char *destino, const char *origen){
;string.h,87 :: 		char cont = 0;
0x2978	0x0105      	MOVLB       5
0x297A	0x6B7D      	CLRF        string_cpyc_cont_L0, 1
;string.h,89 :: 		while(origen[cont])
L_string_cpyc28:
0x297C	0x517D      	MOVF        string_cpyc_cont_L0, 0, 1
0x297E	0x257A      	ADDWF       FARG_string_cpyc_origen, 0, 1
0x2980	0x6EF6      	MOVWF       4086 
0x2982	0x0E00      	MOVLW       0
0x2984	0x217B      	ADDWFC      FARG_string_cpyc_origen+1, 0, 1
0x2986	0x6EF7      	MOVWF       TBLPTRH 
0x2988	0x0E00      	MOVLW       0
0x298A	0x217C      	ADDWFC      FARG_string_cpyc_origen+2, 0, 1
0x298C	0x6EF8      	MOVWF       TBLPTRU 
0x298E	0x0009      	TBLRD*+
0x2990	0xF000CFF5  	MOVFF       TABLAT, R0
0x2994	0x5200      	MOVF        R0, 1 
0x2996	0xE016      	BZ          L_string_cpyc29
;string.h,90 :: 		destino[cont] = origen[cont++];
0x2998	0x517D      	MOVF        string_cpyc_cont_L0, 0, 1
0x299A	0x2578      	ADDWF       FARG_string_cpyc_destino, 0, 1
0x299C	0x6EE1      	MOVWF       FSR1L 
0x299E	0x0E00      	MOVLW       0
0x29A0	0x2179      	ADDWFC      FARG_string_cpyc_destino+1, 0, 1
0x29A2	0x6EE2      	MOVWF       FSR1H 
0x29A4	0x517D      	MOVF        string_cpyc_cont_L0, 0, 1
0x29A6	0x257A      	ADDWF       FARG_string_cpyc_origen, 0, 1
0x29A8	0x6EF6      	MOVWF       4086 
0x29AA	0x0E00      	MOVLW       0
0x29AC	0x217B      	ADDWFC      FARG_string_cpyc_origen+1, 0, 1
0x29AE	0x6EF7      	MOVWF       TBLPTRH 
0x29B0	0x0E00      	MOVLW       0
0x29B2	0x217C      	ADDWFC      FARG_string_cpyc_origen+2, 0, 1
0x29B4	0x6EF8      	MOVWF       TBLPTRU 
0x29B6	0x0009      	TBLRD*+
0x29B8	0xF000CFF5  	MOVFF       TABLAT, R0
0x29BC	0xFFE6C000  	MOVFF       R0, POSTINC1
0x29C0	0x2B7D      	INCF        string_cpyc_cont_L0, 1, 1
0x29C2	0xD7DC      	BRA         L_string_cpyc28
L_string_cpyc29:
;string.h,91 :: 		destino[cont] = 0;              //Final de cadena
0x29C4	0x517D      	MOVF        string_cpyc_cont_L0, 0, 1
0x29C6	0x2578      	ADDWF       FARG_string_cpyc_destino, 0, 1
0x29C8	0x6EE1      	MOVWF       FSR1L 
0x29CA	0x0E00      	MOVLW       0
0x29CC	0x2179      	ADDWFC      FARG_string_cpyc_destino+1, 0, 1
0x29CE	0x6EE2      	MOVWF       FSR1H 
0x29D0	0x6AE6      	CLRF        POSTINC1 
;string.h,93 :: 		return cont;
0x29D2	0xF000C57D  	MOVFF       string_cpyc_cont_L0, R0
;string.h,94 :: 		}
L_end_string_cpyc:
0x29D6	0x0012      	RETURN      0
; end of _string_cpyc
_I2C_soft_init:
;i2c_soft.h,16 :: 		void I2C_soft_init(){
;i2c_soft.h,18 :: 		I2C_SCLD = 1;
0x29D8	0x8893      	BSF         I2C_SCLD, BitPos(I2C_SCLD+0) 
;i2c_soft.h,19 :: 		I2C_SDAD = 1;
0x29DA	0x8A93      	BSF         I2C_SDAD, BitPos(I2C_SDAD+0) 
;i2c_soft.h,20 :: 		}
L_end_I2C_soft_init:
0x29DC	0x0012      	RETURN      0
; end of _I2C_soft_init
_string_push:
;string.h,6 :: 		char string_push(char *texto, char caracter){
;string.h,7 :: 		char cont = 0;
0x29DE	0x0105      	MOVLB       5
0x29E0	0x6B7B      	CLRF        string_push_cont_L0, 1
;string.h,9 :: 		while(texto[cont])
L_string_push8:
0x29E2	0x517B      	MOVF        string_push_cont_L0, 0, 1
0x29E4	0x2578      	ADDWF       FARG_string_push_texto, 0, 1
0x29E6	0x6EE9      	MOVWF       FSR0L 
0x29E8	0x0E00      	MOVLW       0
0x29EA	0x2179      	ADDWFC      FARG_string_push_texto+1, 0, 1
0x29EC	0x6EEA      	MOVWF       FSR0H 
0x29EE	0x52EE      	MOVF        POSTINC0, 1 
0x29F0	0xE002      	BZ          L_string_push9
;string.h,10 :: 		cont++;
0x29F2	0x2B7B      	INCF        string_push_cont_L0, 1, 1
0x29F4	0xD7F6      	BRA         L_string_push8
L_string_push9:
;string.h,12 :: 		texto[cont++] = caracter;
0x29F6	0x517B      	MOVF        string_push_cont_L0, 0, 1
0x29F8	0x2578      	ADDWF       FARG_string_push_texto, 0, 1
0x29FA	0x6EE1      	MOVWF       FSR1L 
0x29FC	0x0E00      	MOVLW       0
0x29FE	0x2179      	ADDWFC      FARG_string_push_texto+1, 0, 1
0x2A00	0x6EE2      	MOVWF       FSR1H 
0x2A02	0xFFE6C57A  	MOVFF       FARG_string_push_caracter, POSTINC1
0x2A06	0x2B7B      	INCF        string_push_cont_L0, 1, 1
;string.h,13 :: 		texto[cont] = 0;  //Agregar final de cadena
0x2A08	0x517B      	MOVF        string_push_cont_L0, 0, 1
0x2A0A	0x2578      	ADDWF       FARG_string_push_texto, 0, 1
0x2A0C	0x6EE1      	MOVWF       FSR1L 
0x2A0E	0x0E00      	MOVLW       0
0x2A10	0x2179      	ADDWFC      FARG_string_push_texto+1, 0, 1
0x2A12	0x6EE2      	MOVWF       FSR1H 
0x2A14	0x6AE6      	CLRF        POSTINC1 
;string.h,15 :: 		return cont;
0x2A16	0xF000C57B  	MOVFF       string_push_cont_L0, R0
;string.h,16 :: 		}
L_end_string_push:
0x2A1A	0x0012      	RETURN      0
; end of _string_push
_mysql_read_string:
;table_eeprom.h,217 :: 		char mysql_read_string(char *name, char *column, int fila, char *result){
;table_eeprom.h,218 :: 		char res = _mysql_calculate_address(name, column);
0x2A1C	0xF590C578  	MOVFF       FARG_mysql_read_string_name, FARG__mysql_calculate_address_name
0x2A20	0xF591C579  	MOVFF       FARG_mysql_read_string_name+1, FARG__mysql_calculate_address_name+1
0x2A24	0xF592C57A  	MOVFF       FARG_mysql_read_string_column, FARG__mysql_calculate_address_column
0x2A28	0xF593C57B  	MOVFF       FARG_mysql_read_string_column+1, FARG__mysql_calculate_address_column+1
0x2A2C	0xF004ECAB  	CALL        __mysql_calculate_address, 0
0x2A30	0xF580C000  	MOVFF       R0, mysql_read_string_res_L0
;table_eeprom.h,221 :: 		if(res)
0x2A34	0x5200      	MOVF        R0, 1 
0x2A36	0xE003      	BZ          L_mysql_read_string495
;table_eeprom.h,222 :: 		return res;
0x2A38	0xF000C580  	MOVFF       mysql_read_string_res_L0, R0
0x2A3C	0xD037      	BRA         L_end_mysql_read_string
L_mysql_read_string495:
;table_eeprom.h,225 :: 		if(fila >= 1 && fila <= myTable.rowAct)
0x2A3E	0x0E80      	MOVLW       128
0x2A40	0x0105      	MOVLB       5
0x2A42	0x197D      	XORWF       FARG_mysql_read_string_fila+1, 0, 1
0x2A44	0x6E00      	MOVWF       R0 
0x2A46	0x0E80      	MOVLW       128
0x2A48	0x5C00      	SUBWF       R0, 0 
0x2A4A	0xE102      	BNZ         L__mysql_read_string1258
0x2A4C	0x0E01      	MOVLW       1
0x2A4E	0x5D7C      	SUBWF       FARG_mysql_read_string_fila, 0, 1
L__mysql_read_string1258:
0x2A50	0xE329      	BNC         L_mysql_read_string498
0x2A52	0x517D      	MOVF        FARG_mysql_read_string_fila+1, 0, 1
0x2A54	0x0103      	MOVLB       3
0x2A56	0x5D90      	SUBWF       Validadora_myTable+5, 0, 1
0x2A58	0xE104      	BNZ         L__mysql_read_string1259
0x2A5A	0x0105      	MOVLB       5
0x2A5C	0x517C      	MOVF        FARG_mysql_read_string_fila, 0, 1
0x2A5E	0x0103      	MOVLB       3
0x2A60	0x5D8F      	SUBWF       Validadora_myTable+4, 0, 1
L__mysql_read_string1259:
0x2A62	0xE320      	BNC         L_mysql_read_string498
L__mysql_read_string962:
;table_eeprom.h,226 :: 		eeprom_i2c_read(myTable.addressAct+(fila-1)*myTable.tamCol, result, myTable.tamCol);
0x2A64	0x0E01      	MOVLW       1
0x2A66	0x0105      	MOVLB       5
0x2A68	0x5D7C      	SUBWF       FARG_mysql_read_string_fila, 0, 1
0x2A6A	0x6E00      	MOVWF       R0 
0x2A6C	0x0E00      	MOVLW       0
0x2A6E	0x597D      	SUBWFB      FARG_mysql_read_string_fila+1, 0, 1
0x2A70	0x6E01      	MOVWF       R1 
0x2A72	0xF004C391  	MOVFF       Validadora_myTable+6, R4
0x2A76	0x0E00      	MOVLW       0
0x2A78	0x6E05      	MOVWF       R5 
0x2A7A	0xF002ECC0  	CALL        _Mul_16X16_U, 0
0x2A7E	0x5000      	MOVF        R0, 0 
0x2A80	0x0103      	MOVLB       3
0x2A82	0x25B8      	ADDWF       Validadora_myTable+45, 0, 1
0x2A84	0x0105      	MOVLB       5
0x2A86	0x6F9E      	MOVWF       FARG_eeprom_i2c_read_address, 1
0x2A88	0x5001      	MOVF        R1, 0 
0x2A8A	0x0103      	MOVLB       3
0x2A8C	0x21B9      	ADDWFC      Validadora_myTable+46, 0, 1
0x2A8E	0x0105      	MOVLB       5
0x2A90	0x6F9F      	MOVWF       FARG_eeprom_i2c_read_address+1, 1
0x2A92	0xF5A0C57E  	MOVFF       FARG_mysql_read_string_result, FARG_eeprom_i2c_read_datos
0x2A96	0xF5A1C57F  	MOVFF       FARG_mysql_read_string_result+1, FARG_eeprom_i2c_read_datos+1
0x2A9A	0xF5A2C391  	MOVFF       Validadora_myTable+6, FARG_eeprom_i2c_read_size
0x2A9E	0xF001ECB2  	CALL        _eeprom_i2c_read, 0
0x2AA2	0xD003      	BRA         L_mysql_read_string499
L_mysql_read_string498:
;table_eeprom.h,228 :: 		return TABLE_RW_NO_EXIST_ROW;   //Fila inexistente
0x2AA4	0x0E03      	MOVLW       3
0x2AA6	0x6E00      	MOVWF       R0 
0x2AA8	0xD001      	BRA         L_end_mysql_read_string
;table_eeprom.h,229 :: 		}
L_mysql_read_string499:
;table_eeprom.h,231 :: 		return TABLE_RW_SUCCESS;     //Exito en la busqueda
0x2AAA	0x6A00      	CLRF        R0 
;table_eeprom.h,232 :: 		}
L_end_mysql_read_string:
0x2AAC	0x0012      	RETURN      0
; end of _mysql_read_string
_NRM4032:
;__Lib_MathDouble.c,174 :: 		
;__Lib_MathDouble.c,183 :: 		
0x2AAE	0xB00C      	BTFSC       R12, 0, 0
;__Lib_MathDouble.c,184 :: 		
0x2AB0	0xF015EF99  	GOTO        NRMRND4032
;__Lib_MathDouble.c,185 :: 		
0x2AB4	0xA20C      	BTFSS       R12, 1, 0
;__Lib_MathDouble.c,186 :: 		
0x2AB6	0xF016EF41  	GOTO        NRM40JPSETFOV32
;__Lib_MathDouble.c,188 :: 		
0x2ABA	0x6A0E      	CLRF        R14, 0
;__Lib_MathDouble.c,189 :: 		
0x2ABC	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,190 :: 		
0x2ABE	0x6402      	CPFSGT      R2, 0
;__Lib_MathDouble.c,191 :: 		
0x2AC0	0xF015EFB0  	GOTO        NRM4032A
;__Lib_MathDouble.c,194 :: 		
0x2AC4	0x0EF0      	MOVLW       240
;__Lib_MathDouble.c,195 :: 		
0x2AC6	0x1402      	ANDWF       R2, 0, 0
;__Lib_MathDouble.c,196 :: 		
0x2AC8	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,197 :: 		
0x2ACA	0xF015EF7B  	GOTO        NORM4032
;__Lib_MathDouble.c,199 :: 		
0x2ACE	0x3A02      	SWAPF       R2, 1, 0
;__Lib_MathDouble.c,200 :: 		
0x2AD0	0x3801      	SWAPF       R1, 0, 0
;__Lib_MathDouble.c,201 :: 		
0x2AD2	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,202 :: 		
0x2AD4	0x2602      	ADDWF       R2, 1, 0
;__Lib_MathDouble.c,204 :: 		
0x2AD6	0x3801      	SWAPF       R1, 0, 0
;__Lib_MathDouble.c,205 :: 		
0x2AD8	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,206 :: 		
0x2ADA	0x6E01      	MOVWF       R1, 0
;__Lib_MathDouble.c,207 :: 		
0x2ADC	0x3800      	SWAPF       R0, 0, 0
;__Lib_MathDouble.c,208 :: 		
0x2ADE	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,209 :: 		
0x2AE0	0x2601      	ADDWF       R1, 1, 0
;__Lib_MathDouble.c,211 :: 		
0x2AE2	0x3800      	SWAPF       R0, 0, 0
;__Lib_MathDouble.c,212 :: 		
0x2AE4	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,213 :: 		
0x2AE6	0x6E00      	MOVWF       R0, 0
;__Lib_MathDouble.c,214 :: 		
0x2AE8	0x3808      	SWAPF       R8, 0, 0
;__Lib_MathDouble.c,215 :: 		
0x2AEA	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,216 :: 		
0x2AEC	0x2600      	ADDWF       R0, 1, 0
;__Lib_MathDouble.c,218 :: 		
0x2AEE	0x3808      	SWAPF       R8, 0, 0
;__Lib_MathDouble.c,219 :: 		
0x2AF0	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,220 :: 		
0x2AF2	0x6E08      	MOVWF       R8, 0
;__Lib_MathDouble.c,222 :: 		
0x2AF4	0x840E      	BSF         R14, 2, 0
;__Lib_MathDouble.c,224 :: 		
NORM4032:
;__Lib_MathDouble.c,225 :: 		
0x2AF6	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,227 :: 		
0x2AF8	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,228 :: 		
0x2AFA	0xF015EF94  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,229 :: 		
0x2AFE	0x3608      	RLCF        R8, 1, 0
;__Lib_MathDouble.c,230 :: 		
0x2B00	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,231 :: 		
0x2B02	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,232 :: 		
0x2B04	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,233 :: 		
0x2B06	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,234 :: 		
0x2B08	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,235 :: 		
0x2B0A	0xF015EF94  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,236 :: 		
0x2B0E	0x3608      	RLCF        R8, 1, 0
;__Lib_MathDouble.c,237 :: 		
0x2B10	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,238 :: 		
0x2B12	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,239 :: 		
0x2B14	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,240 :: 		
0x2B16	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,241 :: 		
0x2B18	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,242 :: 		
0x2B1A	0xF015EF94  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,243 :: 		
0x2B1E	0x3608      	RLCF        R8, 1, 0
;__Lib_MathDouble.c,244 :: 		
0x2B20	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,245 :: 		
0x2B22	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,246 :: 		
0x2B24	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,247 :: 		
0x2B26	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,249 :: 		
TNORMUN4032:
;__Lib_MathDouble.c,250 :: 		
0x2B28	0x500E      	MOVF        R14, 0, 0
;__Lib_MathDouble.c,251 :: 		
0x2B2A	0x6403      	CPFSGT      R3, 0
;__Lib_MathDouble.c,252 :: 		
0x2B2C	0xF016EF35  	GOTO        NRM40JPSETFUN32
;__Lib_MathDouble.c,253 :: 		
0x2B30	0x5E03      	SUBWF       R3, 1, 0
;__Lib_MathDouble.c,255 :: 		
NRMRND4032:
;__Lib_MathDouble.c,256 :: 		
0x2B32	0xBC0B      	BTFSC       R11, 6, 0
;__Lib_MathDouble.c,257 :: 		
0x2B34	0xAE08      	BTFSS       R8, 7, 0
;__Lib_MathDouble.c,258 :: 		
0x2B36	0xF016EF3B  	GOTO        NRM40JPFIXSIGN32
;__Lib_MathDouble.c,259 :: 		
0x2B3A	0x80D8      	BSF         STATUS, 0, 0
;__Lib_MathDouble.c,260 :: 		
0x2B3C	0x0E80      	MOVLW       128
;__Lib_MathDouble.c,261 :: 		
0x2B3E	0x6408      	CPFSGT      R8, 0
;__Lib_MathDouble.c,262 :: 		
0x2B40	0x3000      	RRCF        R0, 0, 0
;__Lib_MathDouble.c,263 :: 		
0x2B42	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,264 :: 		
0x2B44	0x2200      	ADDWFC      R0, 1, 0
;__Lib_MathDouble.c,265 :: 		
0x2B46	0x2201      	ADDWFC      R1, 1, 0
;__Lib_MathDouble.c,266 :: 		
0x2B48	0x2202      	ADDWFC      R2, 1, 0
;__Lib_MathDouble.c,268 :: 		
0x2B4A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,269 :: 		
0x2B4C	0xF016EF3B  	GOTO        NRM40JPFIXSIGN32
;__Lib_MathDouble.c,270 :: 		
0x2B50	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,271 :: 		
0x2B52	0x3201      	RRCF        R1, 1, 0
;__Lib_MathDouble.c,272 :: 		
0x2B54	0x3200      	RRCF        R0, 1, 0
;__Lib_MathDouble.c,273 :: 		
0x2B56	0x4A03      	INFSNZ      R3, 1, 0
;__Lib_MathDouble.c,274 :: 		
0x2B58	0xF016EF41  	GOTO        NRM40JPSETFOV32
;__Lib_MathDouble.c,275 :: 		
0x2B5C	0xF016EF3B  	GOTO        NRM40JPFIXSIGN32
;__Lib_MathDouble.c,277 :: 		
NRM4032A:
;__Lib_MathDouble.c,278 :: 		
0x2B60	0xF002C001  	MOVFF       R1, R2
;__Lib_MathDouble.c,279 :: 		
0x2B64	0xF001C000  	MOVFF       R0, R1
;__Lib_MathDouble.c,280 :: 		
0x2B68	0xF000C008  	MOVFF       R8, R0
;__Lib_MathDouble.c,281 :: 		
0x2B6C	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,282 :: 		
0x2B6E	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,283 :: 		
0x2B70	0x860E      	BSF         R14, 3, 0
;__Lib_MathDouble.c,284 :: 		
0x2B72	0x6402      	CPFSGT      R2, 0
;__Lib_MathDouble.c,285 :: 		
0x2B74	0xF015EFE7  	GOTO        NRM4032B
;__Lib_MathDouble.c,288 :: 		
0x2B78	0x0EF0      	MOVLW       240
;__Lib_MathDouble.c,289 :: 		
0x2B7A	0x1402      	ANDWF       R2, 0, 0
;__Lib_MathDouble.c,290 :: 		
0x2B7C	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,291 :: 		
0x2B7E	0xF015EFCF  	GOTO        NORM4032A
;__Lib_MathDouble.c,292 :: 		
0x2B82	0x3A02      	SWAPF       R2, 1, 0
;__Lib_MathDouble.c,293 :: 		
0x2B84	0x3801      	SWAPF       R1, 0, 0
;__Lib_MathDouble.c,294 :: 		
0x2B86	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,295 :: 		
0x2B88	0x2602      	ADDWF       R2, 1, 0
;__Lib_MathDouble.c,297 :: 		
0x2B8A	0x3801      	SWAPF       R1, 0, 0
;__Lib_MathDouble.c,298 :: 		
0x2B8C	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,299 :: 		
0x2B8E	0x6E01      	MOVWF       R1, 0
;__Lib_MathDouble.c,300 :: 		
0x2B90	0x3800      	SWAPF       R0, 0, 0
;__Lib_MathDouble.c,301 :: 		
0x2B92	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,302 :: 		
0x2B94	0x2601      	ADDWF       R1, 1, 0
;__Lib_MathDouble.c,304 :: 		
0x2B96	0x3800      	SWAPF       R0, 0, 0
;__Lib_MathDouble.c,305 :: 		
0x2B98	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,306 :: 		
0x2B9A	0x6E00      	MOVWF       R0, 0
;__Lib_MathDouble.c,308 :: 		
0x2B9C	0x840E      	BSF         R14, 2, 0
;__Lib_MathDouble.c,310 :: 		
NORM4032A:
;__Lib_MathDouble.c,311 :: 		
0x2B9E	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,313 :: 		
0x2BA0	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,314 :: 		
0x2BA2	0xF015EF94  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,315 :: 		
0x2BA6	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,316 :: 		
0x2BA8	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,317 :: 		
0x2BAA	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,318 :: 		
0x2BAC	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,319 :: 		
0x2BAE	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,320 :: 		
0x2BB0	0xF015EF94  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,321 :: 		
0x2BB4	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,322 :: 		
0x2BB6	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,323 :: 		
0x2BB8	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,324 :: 		
0x2BBA	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,325 :: 		
0x2BBC	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,326 :: 		
0x2BBE	0xF015EF94  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,327 :: 		
0x2BC2	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,328 :: 		
0x2BC4	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,329 :: 		
0x2BC6	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,330 :: 		
0x2BC8	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,331 :: 		
0x2BCA	0xF015EF94  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,333 :: 		
NRM4032B:
;__Lib_MathDouble.c,334 :: 		
0x2BCE	0xF002C001  	MOVFF       R1, R2
;__Lib_MathDouble.c,335 :: 		
0x2BD2	0xF001C000  	MOVFF       R0, R1
;__Lib_MathDouble.c,336 :: 		
0x2BD6	0x6A00      	CLRF        R0, 0
;__Lib_MathDouble.c,337 :: 		
0x2BD8	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,338 :: 		
0x2BDA	0x960E      	BCF         R14, 3, 0
;__Lib_MathDouble.c,339 :: 		
0x2BDC	0x880E      	BSF         R14, 4, 0
;__Lib_MathDouble.c,340 :: 		
0x2BDE	0x6402      	CPFSGT      R2, 0
;__Lib_MathDouble.c,341 :: 		
0x2BE0	0xF016EF14  	GOTO        NRM4032C
;__Lib_MathDouble.c,344 :: 		
0x2BE4	0x0EF0      	MOVLW       240
;__Lib_MathDouble.c,345 :: 		
0x2BE6	0x1402      	ANDWF       R2, 0, 0
;__Lib_MathDouble.c,346 :: 		
0x2BE8	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,347 :: 		
0x2BEA	0xF015EFFF  	GOTO        NORM4032B
;__Lib_MathDouble.c,349 :: 		
0x2BEE	0x3A02      	SWAPF       R2, 1, 0
;__Lib_MathDouble.c,350 :: 		
0x2BF0	0x3801      	SWAPF       R1, 0, 0
;__Lib_MathDouble.c,351 :: 		
0x2BF2	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,352 :: 		
0x2BF4	0x2602      	ADDWF       R2, 1, 0
;__Lib_MathDouble.c,354 :: 		
0x2BF6	0x3801      	SWAPF       R1, 0, 0
;__Lib_MathDouble.c,355 :: 		
0x2BF8	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,356 :: 		
0x2BFA	0x6E01      	MOVWF       R1, 0
;__Lib_MathDouble.c,358 :: 		
0x2BFC	0x840E      	BSF         R14, 2, 0
;__Lib_MathDouble.c,360 :: 		
NORM4032B:
;__Lib_MathDouble.c,361 :: 		
0x2BFE	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,362 :: 		
0x2C00	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,363 :: 		
0x2C02	0xF015EF94  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,364 :: 		
0x2C06	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,365 :: 		
0x2C08	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,366 :: 		
0x2C0A	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,367 :: 		
0x2C0C	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,368 :: 		
0x2C0E	0xF015EF94  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,369 :: 		
0x2C12	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,370 :: 		
0x2C14	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,371 :: 		
0x2C16	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,372 :: 		
0x2C18	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,373 :: 		
0x2C1A	0xF015EF94  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,374 :: 		
0x2C1E	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,375 :: 		
0x2C20	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,376 :: 		
0x2C22	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,377 :: 		
0x2C24	0xF015EF94  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,379 :: 		
NRM4032C:
;__Lib_MathDouble.c,380 :: 		
0x2C28	0xF002C001  	MOVFF       R1, R2
;__Lib_MathDouble.c,381 :: 		
0x2C2C	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,382 :: 		
0x2C2E	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,383 :: 		
0x2C30	0x860E      	BSF         R14, 3, 0
;__Lib_MathDouble.c,384 :: 		
0x2C32	0x6402      	CPFSGT      R2, 0
;__Lib_MathDouble.c,385 :: 		
0x2C34	0xF016EF47  	GOTO        NRM40JPRES032
;__Lib_MathDouble.c,388 :: 		
0x2C38	0x0EF0      	MOVLW       240
;__Lib_MathDouble.c,389 :: 		
0x2C3A	0x1402      	ANDWF       R2, 0, 0
;__Lib_MathDouble.c,390 :: 		
0x2C3C	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,391 :: 		
0x2C3E	0xF016EF23  	GOTO        NORM4032C
;__Lib_MathDouble.c,392 :: 		
0x2C42	0x3A02      	SWAPF       R2, 1, 0
;__Lib_MathDouble.c,394 :: 		
0x2C44	0x840E      	BSF         R14, 2, 0
;__Lib_MathDouble.c,396 :: 		
NORM4032C:
;__Lib_MathDouble.c,397 :: 		
0x2C46	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,399 :: 		
0x2C48	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,400 :: 		
0x2C4A	0xF015EF94  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,401 :: 		
0x2C4E	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,402 :: 		
0x2C50	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,403 :: 		
0x2C52	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,404 :: 		
0x2C54	0xF015EF94  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,405 :: 		
0x2C58	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,406 :: 		
0x2C5A	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,407 :: 		
0x2C5C	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,408 :: 		
0x2C5E	0xF015EF94  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,409 :: 		
0x2C62	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,410 :: 		
0x2C64	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,411 :: 		
0x2C66	0xF015EF94  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,413 :: 		
NRM40JPSETFUN32:
;__Lib_MathDouble.c,414 :: 		
0x2C6A	0x0E01      	MOVLW       1
;__Lib_MathDouble.c,415 :: 		
0x2C6C	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,417 :: 		
0x2C6E	0xF006EC00  	CALL        _SETFUN32, 0
;__Lib_MathDouble.c,419 :: 		
0x2C72	0xF016EF4B  	GOTO        NRM40EEE
;__Lib_MathDouble.c,420 :: 		
NRM40JPFIXSIGN32:
;__Lib_MathDouble.c,421 :: 		
0x2C76	0x0E02      	MOVLW       2
;__Lib_MathDouble.c,422 :: 		
0x2C78	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,424 :: 		
0x2C7A	0xF005ECFC  	CALL        _FIXSIGN32, 0
;__Lib_MathDouble.c,426 :: 		
0x2C7E	0xF016EF4B  	GOTO        NRM40EEE
;__Lib_MathDouble.c,427 :: 		
NRM40JPSETFOV32:
;__Lib_MathDouble.c,428 :: 		
0x2C82	0x0E04      	MOVLW       4
;__Lib_MathDouble.c,429 :: 		
0x2C84	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,431 :: 		
0x2C86	0xF008EC1E  	CALL        _SETFOV32, 0
;__Lib_MathDouble.c,433 :: 		
0x2C8A	0xF016EF4B  	GOTO        NRM40EEE
;__Lib_MathDouble.c,434 :: 		
NRM40JPRES032:
;__Lib_MathDouble.c,435 :: 		
0x2C8E	0x0E08      	MOVLW       8
;__Lib_MathDouble.c,436 :: 		
0x2C90	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,438 :: 		
0x2C92	0xF007EC29  	CALL        _RES032, 0
;__Lib_MathDouble.c,440 :: 		
NRM40EEE:
;__Lib_MathDouble.c,448 :: 		
L_end_NRM4032:
0x2C96	0x0012      	RETURN      0
; end of _NRM4032
_string_add:
;string.h,35 :: 		char string_add(char *destino, char *addEnd){
;string.h,36 :: 		char total = 0, cont = 0;
0x2C98	0x0105      	MOVLB       5
0x2C9A	0x6B7C      	CLRF        string_add_total_L0, 1
0x2C9C	0x6B7D      	CLRF        string_add_cont_L0, 1
;string.h,39 :: 		while(destino[total])
L_string_add13:
0x2C9E	0x517C      	MOVF        string_add_total_L0, 0, 1
0x2CA0	0x2578      	ADDWF       FARG_string_add_destino, 0, 1
0x2CA2	0x6EE9      	MOVWF       FSR0L 
0x2CA4	0x0E00      	MOVLW       0
0x2CA6	0x2179      	ADDWFC      FARG_string_add_destino+1, 0, 1
0x2CA8	0x6EEA      	MOVWF       FSR0H 
0x2CAA	0x52EE      	MOVF        POSTINC0, 1 
0x2CAC	0xE002      	BZ          L_string_add14
;string.h,40 :: 		total++;
0x2CAE	0x2B7C      	INCF        string_add_total_L0, 1, 1
0x2CB0	0xD7F6      	BRA         L_string_add13
L_string_add14:
;string.h,42 :: 		while(addEnd[cont])
L_string_add15:
0x2CB2	0x517D      	MOVF        string_add_cont_L0, 0, 1
0x2CB4	0x257A      	ADDWF       FARG_string_add_addEnd, 0, 1
0x2CB6	0x6EE9      	MOVWF       FSR0L 
0x2CB8	0x0E00      	MOVLW       0
0x2CBA	0x217B      	ADDWFC      FARG_string_add_addEnd+1, 0, 1
0x2CBC	0x6EEA      	MOVWF       FSR0H 
0x2CBE	0x52EE      	MOVF        POSTINC0, 1 
0x2CC0	0xE011      	BZ          L_string_add16
;string.h,43 :: 		destino[total++] = addEnd[cont++];
0x2CC2	0x517C      	MOVF        string_add_total_L0, 0, 1
0x2CC4	0x2578      	ADDWF       FARG_string_add_destino, 0, 1
0x2CC6	0x6EE1      	MOVWF       FSR1L 
0x2CC8	0x0E00      	MOVLW       0
0x2CCA	0x2179      	ADDWFC      FARG_string_add_destino+1, 0, 1
0x2CCC	0x6EE2      	MOVWF       FSR1H 
0x2CCE	0x517D      	MOVF        string_add_cont_L0, 0, 1
0x2CD0	0x257A      	ADDWF       FARG_string_add_addEnd, 0, 1
0x2CD2	0x6EE9      	MOVWF       FSR0L 
0x2CD4	0x0E00      	MOVLW       0
0x2CD6	0x217B      	ADDWFC      FARG_string_add_addEnd+1, 0, 1
0x2CD8	0x6EEA      	MOVWF       FSR0H 
0x2CDA	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x2CDE	0x2B7C      	INCF        string_add_total_L0, 1, 1
0x2CE0	0x2B7D      	INCF        string_add_cont_L0, 1, 1
0x2CE2	0xD7E7      	BRA         L_string_add15
L_string_add16:
;string.h,44 :: 		destino[total] = 0;
0x2CE4	0x517C      	MOVF        string_add_total_L0, 0, 1
0x2CE6	0x2578      	ADDWF       FARG_string_add_destino, 0, 1
0x2CE8	0x6EE1      	MOVWF       FSR1L 
0x2CEA	0x0E00      	MOVLW       0
0x2CEC	0x2179      	ADDWFC      FARG_string_add_destino+1, 0, 1
0x2CEE	0x6EE2      	MOVWF       FSR1H 
0x2CF0	0x6AE6      	CLRF        POSTINC1 
;string.h,47 :: 		return total;
0x2CF2	0xF000C57C  	MOVFF       string_add_total_L0, R0
;string.h,48 :: 		}
L_end_string_add:
0x2CF6	0x0012      	RETURN      0
; end of _string_add
_string_cmpnc:
;string.h,145 :: 		bool string_cmpnc(const char *text1, char *text2, char bytes){
;string.h,148 :: 		for(cont = 0; cont < bytes; cont++){
0x2CF8	0x6A02      	CLRF        R2 
L_string_cmpnc52:
0x2CFA	0x0105      	MOVLB       5
0x2CFC	0x517D      	MOVF        FARG_string_cmpnc_bytes, 0, 1
0x2CFE	0x5C02      	SUBWF       R2, 0 
0x2D00	0xE219      	BC          L_string_cmpnc53
;string.h,149 :: 		if(text1[cont] != text2[cont])
0x2D02	0x5002      	MOVF        R2, 0 
0x2D04	0x2578      	ADDWF       FARG_string_cmpnc_text1, 0, 1
0x2D06	0x6EF6      	MOVWF       4086 
0x2D08	0x0E00      	MOVLW       0
0x2D0A	0x2179      	ADDWFC      FARG_string_cmpnc_text1+1, 0, 1
0x2D0C	0x6EF7      	MOVWF       TBLPTRH 
0x2D0E	0x0E00      	MOVLW       0
0x2D10	0x217A      	ADDWFC      FARG_string_cmpnc_text1+2, 0, 1
0x2D12	0x6EF8      	MOVWF       TBLPTRU 
0x2D14	0x0009      	TBLRD*+
0x2D16	0xF001CFF5  	MOVFF       TABLAT, R1
0x2D1A	0x5002      	MOVF        R2, 0 
0x2D1C	0x257B      	ADDWF       FARG_string_cmpnc_text2, 0, 1
0x2D1E	0x6ED9      	MOVWF       FSR2L 
0x2D20	0x0E00      	MOVLW       0
0x2D22	0x217C      	ADDWFC      FARG_string_cmpnc_text2+1, 0, 1
0x2D24	0x6EDA      	MOVWF       FSR2H 
0x2D26	0x5001      	MOVF        R1, 0 
0x2D28	0x18DE      	XORWF       POSTINC2, 0 
0x2D2A	0xE002      	BZ          L_string_cmpnc55
;string.h,150 :: 		return false;
0x2D2C	0x6A00      	CLRF        R0 
0x2D2E	0xD004      	BRA         L_end_string_cmpnc
L_string_cmpnc55:
;string.h,148 :: 		for(cont = 0; cont < bytes; cont++){
0x2D30	0x2A02      	INCF        R2, 1 
;string.h,151 :: 		}
0x2D32	0xD7E3      	BRA         L_string_cmpnc52
L_string_cmpnc53:
;string.h,153 :: 		return true;
0x2D34	0x0E01      	MOVLW       1
0x2D36	0x6E00      	MOVWF       R0 
;string.h,154 :: 		}
L_end_string_cmpnc:
0x2D38	0x0012      	RETURN      0
; end of _string_cmpnc
_SETIOV3224:
;__Lib_MathDouble.c,530 :: 		
;__Lib_MathDouble.c,537 :: 		
0x2D3A	0x800B      	BSF         R11, 0, 0
;__Lib_MathDouble.c,538 :: 		
0x2D3C	0xAE0B      	BTFSS       R11, 7, 0
;__Lib_MathDouble.c,539 :: 		
0x2D3E	0xF016EFA9  	GOTO        SETIOV3224EEE
;__Lib_MathDouble.c,541 :: 		
0x2D42	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,542 :: 		
0x2D44	0xAE0A      	BTFSS       R10, 7, 0
;__Lib_MathDouble.c,543 :: 		
0x2D46	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,544 :: 		
0x2D48	0x6E02      	MOVWF       R2, 0
;__Lib_MathDouble.c,545 :: 		
0x2D4A	0x6E01      	MOVWF       R1, 0
;__Lib_MathDouble.c,546 :: 		
0x2D4C	0x6E00      	MOVWF       R0, 0
;__Lib_MathDouble.c,547 :: 		
0x2D4E	0x360A      	RLCF        R10, 1, 0
;__Lib_MathDouble.c,548 :: 		
0x2D50	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,549 :: 		
SETIOV3224EEE:
;__Lib_MathDouble.c,550 :: 		
0x2D52	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,552 :: 		
L_end_SETIOV3224:
0x2D54	0x0012      	RETURN      0
; end of _SETIOV3224
_can_set_operation:
;lib_can.h,693 :: 		void can_set_operation(const char CAN_OPERATION){
;lib_can.h,694 :: 		CANCON.REQOP0 = CAN_OPERATION.B0;
0x2D56	0x0105      	MOVLB       5
0x2D58	0xB178      	BTFSC       FARG_can_set_operation_CAN_OPERATION, 0, 1
0x2D5A	0xD002      	BRA         L__can_set_operation1160
0x2D5C	0x9A6F      	BCF         CANCON, 5 
0x2D5E	0xD001      	BRA         L__can_set_operation1161
L__can_set_operation1160:
0x2D60	0x8A6F      	BSF         CANCON, 5 
L__can_set_operation1161:
;lib_can.h,695 :: 		CANCON.REQOP1 = CAN_OPERATION.B1;
0x2D62	0xB378      	BTFSC       FARG_can_set_operation_CAN_OPERATION, 1, 1
0x2D64	0xD002      	BRA         L__can_set_operation1162
0x2D66	0x9C6F      	BCF         CANCON, 6 
0x2D68	0xD001      	BRA         L__can_set_operation1163
L__can_set_operation1162:
0x2D6A	0x8C6F      	BSF         CANCON, 6 
L__can_set_operation1163:
;lib_can.h,696 :: 		CANCON.REQOP2 = CAN_OPERATION.B2;
0x2D6C	0xB578      	BTFSC       FARG_can_set_operation_CAN_OPERATION, 2, 1
0x2D6E	0xD002      	BRA         L__can_set_operation1164
0x2D70	0x9E6F      	BCF         CANCON, 7 
0x2D72	0xD001      	BRA         L__can_set_operation1165
L__can_set_operation1164:
0x2D74	0x8E6F      	BSF         CANCON, 7 
L__can_set_operation1165:
;lib_can.h,698 :: 		while(CANSTAT.OPMODE0 != CANCON.REQOP0 ||
L_can_set_operation360:
;lib_can.h,699 :: 		CANSTAT.OPMODE1 != CANCON.REQOP1 ||
0x2D76	0xBA6E      	BTFSC       CANSTAT, 5 
0x2D78	0xD003      	BRA         L__can_set_operation1166
0x2D7A	0xAA6F      	BTFSS       CANCON, 5 
0x2D7C	0xD003      	BRA         L__can_set_operation1167
0x2D7E	0xD011      	BRA         L__can_set_operation949
L__can_set_operation1166:
0x2D80	0xAA6F      	BTFSS       CANCON, 5 
0x2D82	0xD00F      	BRA         L__can_set_operation949
L__can_set_operation1167:
0x2D84	0xBC6E      	BTFSC       CANSTAT, 6 
0x2D86	0xD003      	BRA         L__can_set_operation1168
0x2D88	0xAC6F      	BTFSS       CANCON, 6 
0x2D8A	0xD003      	BRA         L__can_set_operation1169
0x2D8C	0xD00A      	BRA         L__can_set_operation949
L__can_set_operation1168:
0x2D8E	0xAC6F      	BTFSS       CANCON, 6 
0x2D90	0xD008      	BRA         L__can_set_operation949
L__can_set_operation1169:
;lib_can.h,700 :: 		CANSTAT.OPMODE2 != CANCON.REQOP2);
0x2D92	0xBE6E      	BTFSC       CANSTAT, 7 
0x2D94	0xD003      	BRA         L__can_set_operation1170
0x2D96	0xAE6F      	BTFSS       CANCON, 7 
0x2D98	0xD003      	BRA         L__can_set_operation1171
0x2D9A	0xD003      	BRA         L__can_set_operation949
L__can_set_operation1170:
0x2D9C	0xAE6F      	BTFSS       CANCON, 7 
0x2D9E	0xD001      	BRA         L__can_set_operation949
L__can_set_operation1171:
0x2DA0	0xD001      	BRA         L_can_set_operation361
L__can_set_operation949:
0x2DA2	0xD7E9      	BRA         L_can_set_operation360
L_can_set_operation361:
;lib_can.h,701 :: 		}
L_end_can_set_operation:
0x2DA4	0x0012      	RETURN      0
; end of _can_set_operation
_string_cpy:
;string.h,65 :: 		char string_cpy(char *destino, char *origen){
;string.h,66 :: 		char cont = 0;
0x2DA6	0x0105      	MOVLB       5
0x2DA8	0x6B58      	CLRF        string_cpy_cont_L0, 1
;string.h,68 :: 		while(origen[cont])
L_string_cpy21:
0x2DAA	0x5158      	MOVF        string_cpy_cont_L0, 0, 1
0x2DAC	0x2556      	ADDWF       FARG_string_cpy_origen, 0, 1
0x2DAE	0x6EE9      	MOVWF       FSR0L 
0x2DB0	0x0E00      	MOVLW       0
0x2DB2	0x2157      	ADDWFC      FARG_string_cpy_origen+1, 0, 1
0x2DB4	0x6EEA      	MOVWF       FSR0H 
0x2DB6	0x52EE      	MOVF        POSTINC0, 1 
0x2DB8	0xE010      	BZ          L_string_cpy22
;string.h,69 :: 		destino[cont] = origen[cont++];
0x2DBA	0x5158      	MOVF        string_cpy_cont_L0, 0, 1
0x2DBC	0x2554      	ADDWF       FARG_string_cpy_destino, 0, 1
0x2DBE	0x6EE1      	MOVWF       FSR1L 
0x2DC0	0x0E00      	MOVLW       0
0x2DC2	0x2155      	ADDWFC      FARG_string_cpy_destino+1, 0, 1
0x2DC4	0x6EE2      	MOVWF       FSR1H 
0x2DC6	0x5158      	MOVF        string_cpy_cont_L0, 0, 1
0x2DC8	0x2556      	ADDWF       FARG_string_cpy_origen, 0, 1
0x2DCA	0x6EE9      	MOVWF       FSR0L 
0x2DCC	0x0E00      	MOVLW       0
0x2DCE	0x2157      	ADDWFC      FARG_string_cpy_origen+1, 0, 1
0x2DD0	0x6EEA      	MOVWF       FSR0H 
0x2DD2	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x2DD6	0x2B58      	INCF        string_cpy_cont_L0, 1, 1
0x2DD8	0xD7E8      	BRA         L_string_cpy21
L_string_cpy22:
;string.h,70 :: 		destino[cont] = 0;              //Final de cadena
0x2DDA	0x5158      	MOVF        string_cpy_cont_L0, 0, 1
0x2DDC	0x2554      	ADDWF       FARG_string_cpy_destino, 0, 1
0x2DDE	0x6EE1      	MOVWF       FSR1L 
0x2DE0	0x0E00      	MOVLW       0
0x2DE2	0x2155      	ADDWFC      FARG_string_cpy_destino+1, 0, 1
0x2DE4	0x6EE2      	MOVWF       FSR1H 
0x2DE6	0x6AE6      	CLRF        POSTINC1 
;string.h,73 :: 		return cont;
0x2DE8	0xF000C558  	MOVFF       string_cpy_cont_L0, R0
;string.h,74 :: 		}
L_end_string_cpy:
0x2DEC	0x0012      	RETURN      0
; end of _string_cpy
_can_read:
;lib_can.h,451 :: 		char can_read(long *id, char *datos, char *size){
;lib_can.h,456 :: 		if(RXB0CON.RXFUL){  //Mensaje en buffer
0x2DEE	0xAE60      	BTFSS       RXB0CON, 7 
0x2DF0	0xD031      	BRA         L_can_read258
;lib_can.h,457 :: 		bufferBX = &RXB0CON;
0x2DF2	0x0E60      	MOVLW       RXB0CON
0x2DF4	0x0105      	MOVLB       5
0x2DF6	0x6F64      	MOVWF       can_read_bufferBX_L0, 1
0x2DF8	0x0E0F      	MOVLW       hi_addr(RXB0CON)
0x2DFA	0x6F65      	MOVWF       can_read_bufferBX_L0+1, 1
;lib_can.h,458 :: 		regLen = &RXB0DLC;
0x2DFC	0x0E65      	MOVLW       RXB0DLC
0x2DFE	0x6F60      	MOVWF       can_read_regLen_L0, 1
0x2E00	0x0E0F      	MOVLW       hi_addr(RXB0DLC)
0x2E02	0x6F61      	MOVWF       can_read_regLen_L0+1, 1
;lib_can.h,459 :: 		receptor = &RXB0EIDL;
0x2E04	0x0E64      	MOVLW       RXB0EIDL
0x2E06	0x6F5E      	MOVWF       can_read_receptor_L0, 1
0x2E08	0x0E0F      	MOVLW       hi_addr(RXB0EIDL)
0x2E0A	0x6F5F      	MOVWF       can_read_receptor_L0+1, 1
;lib_can.h,460 :: 		buffer = &RXB0D0;
0x2E0C	0x0E66      	MOVLW       RXB0D0
0x2E0E	0x6F62      	MOVWF       can_read_buffer_L0, 1
0x2E10	0x0E0F      	MOVLW       hi_addr(RXB0D0)
0x2E12	0x6F63      	MOVWF       can_read_buffer_L0+1, 1
;lib_can.h,461 :: 		ref = can.mode == CAN_MODE_LEGACY? 0x00:0x10;
0x2E14	0x0103      	MOVLB       3
0x2E16	0x51CD      	MOVF        _can+14, 0, 1
0x2E18	0x0A00      	XORLW       0
0x2E1A	0xE103      	BNZ         L_can_read259
0x2E1C	0x0105      	MOVLB       5
0x2E1E	0x6B5A      	CLRF        ?FLOC___can_readT990, 1
0x2E20	0xD003      	BRA         L_can_read260
L_can_read259:
0x2E22	0x0105      	MOVLB       5
0x2E24	0x0E10      	MOVLW       16
0x2E26	0x6F5A      	MOVWF       ?FLOC___can_readT990, 1
L_can_read260:
0x2E28	0xF566C55A  	MOVFF       ?FLOC___can_readT990, can_read_ref_L0
;lib_can.h,462 :: 		can.overflow = COMSTAT.RXB0OVFL;
0x2E2C	0x0E00      	MOVLW       0
0x2E2E	0xBE74      	BTFSC       COMSTAT, 7 
0x2E30	0x0E01      	MOVLW       1
0x2E32	0x0103      	MOVLB       3
0x2E34	0x6FCE      	MOVWF       _can+15, 1
;lib_can.h,463 :: 		COMSTAT.RXB0OVFL = 0;  //Limpiar sobreflujo
0x2E36	0x9E74      	BCF         COMSTAT, 7 
;lib_can.h,465 :: 		if(can.mode == CAN_MODE_LEGACY)
0x2E38	0x51CD      	MOVF        _can+14, 0, 1
0x2E3A	0x0A00      	XORLW       0
0x2E3C	0xE105      	BNZ         L_can_read261
;lib_can.h,466 :: 		can.numFilter = RXB0CON.FILHIT0;
0x2E3E	0x0E00      	MOVLW       0
0x2E40	0xB060      	BTFSC       RXB0CON, 0 
0x2E42	0x0E01      	MOVLW       1
0x2E44	0x6FCF      	MOVWF       _can+16, 1
0x2E46	0xD005      	BRA         L_can_read262
L_can_read261:
;lib_can.h,468 :: 		can.numFilter = RXB0CON & 0x1F;
0x2E48	0x0E1F      	MOVLW       31
0x2E4A	0x1460      	ANDWF       RXB0CON, 0 
0x2E4C	0x6E00      	MOVWF       R0 
0x2E4E	0xF3CFC000  	MOVFF       R0, _can+16
L_can_read262:
;lib_can.h,469 :: 		}else if(RXB1CON.RXFUL){  //Mensaje en buffer
0x2E52	0xD051      	BRA         L_can_read263
L_can_read258:
0x2E54	0x010F      	MOVLB       15
0x2E56	0xAF50      	BTFSS       RXB1CON, 7, 1
0x2E58	0xD048      	BRA         L_can_read264
;lib_can.h,470 :: 		bufferBX = &RXB1CON;
0x2E5A	0x0E50      	MOVLW       RXB1CON
0x2E5C	0x0105      	MOVLB       5
0x2E5E	0x6F64      	MOVWF       can_read_bufferBX_L0, 1
0x2E60	0x0E0F      	MOVLW       hi_addr(RXB1CON)
0x2E62	0x6F65      	MOVWF       can_read_bufferBX_L0+1, 1
;lib_can.h,471 :: 		regLen = &RXB0DLC;
0x2E64	0x0E65      	MOVLW       RXB0DLC
0x2E66	0x6F60      	MOVWF       can_read_regLen_L0, 1
0x2E68	0x0E0F      	MOVLW       hi_addr(RXB0DLC)
0x2E6A	0x6F61      	MOVWF       can_read_regLen_L0+1, 1
;lib_can.h,472 :: 		receptor = &RXB1EIDL;
0x2E6C	0x0E54      	MOVLW       RXB1EIDL
0x2E6E	0x6F5E      	MOVWF       can_read_receptor_L0, 1
0x2E70	0x0E0F      	MOVLW       hi_addr(RXB1EIDL)
0x2E72	0x6F5F      	MOVWF       can_read_receptor_L0+1, 1
;lib_can.h,473 :: 		buffer = &RXB1D0;
0x2E74	0x0E56      	MOVLW       RXB1D0
0x2E76	0x6F62      	MOVWF       can_read_buffer_L0, 1
0x2E78	0x0E0F      	MOVLW       hi_addr(RXB1D0)
0x2E7A	0x6F63      	MOVWF       can_read_buffer_L0+1, 1
;lib_can.h,474 :: 		ref = can.mode == CAN_MODE_LEGACY? 0x0A:0x10;          //CHECAR POR EL MODO
0x2E7C	0x0103      	MOVLB       3
0x2E7E	0x51CD      	MOVF        _can+14, 0, 1
0x2E80	0x0A00      	XORLW       0
0x2E82	0xE104      	BNZ         L_can_read265
0x2E84	0x0E0A      	MOVLW       10
0x2E86	0x0105      	MOVLB       5
0x2E88	0x6F5B      	MOVWF       ?FLOC___can_readT1003, 1
0x2E8A	0xD003      	BRA         L_can_read266
L_can_read265:
0x2E8C	0x0105      	MOVLB       5
0x2E8E	0x0E10      	MOVLW       16
0x2E90	0x6F5B      	MOVWF       ?FLOC___can_readT1003, 1
L_can_read266:
0x2E92	0xF566C55B  	MOVFF       ?FLOC___can_readT1003, can_read_ref_L0
;lib_can.h,475 :: 		ref |= can.mode == CAN_MODE_ENHANCED_LEGACY? 0x01:0x00;
0x2E96	0x0103      	MOVLB       3
0x2E98	0x51CD      	MOVF        _can+14, 0, 1
0x2E9A	0x0A01      	XORLW       1
0x2E9C	0xE104      	BNZ         L_can_read267
0x2E9E	0x0E01      	MOVLW       1
0x2EA0	0x0105      	MOVLB       5
0x2EA2	0x6F5C      	MOVWF       ?FLOC___can_readT1005, 1
0x2EA4	0xD002      	BRA         L_can_read268
L_can_read267:
0x2EA6	0x0105      	MOVLB       5
0x2EA8	0x6B5C      	CLRF        ?FLOC___can_readT1005, 1
L_can_read268:
0x2EAA	0x515C      	MOVF        ?FLOC___can_readT1005, 0, 1
0x2EAC	0x1366      	IORWF       can_read_ref_L0, 1, 1
;lib_can.h,476 :: 		can.overflow = COMSTAT.RXB1OVFL;
0x2EAE	0x0E00      	MOVLW       0
0x2EB0	0xBC74      	BTFSC       COMSTAT, 6 
0x2EB2	0x0E01      	MOVLW       1
0x2EB4	0x0103      	MOVLB       3
0x2EB6	0x6FCE      	MOVWF       _can+15, 1
;lib_can.h,477 :: 		COMSTAT.RXB1OVFL = 0;  //Limpiar sobreflujo
0x2EB8	0x9C74      	BCF         COMSTAT, 6 
;lib_can.h,478 :: 		if(can.mode == CAN_MODE_LEGACY)
0x2EBA	0x51CD      	MOVF        _can+14, 0, 1
0x2EBC	0x0A00      	XORLW       0
0x2EBE	0xE10E      	BNZ         L_can_read269
;lib_can.h,479 :: 		can.numFilter = RXB0CON.RXB0DBEN? RXB1CON&0x07: -1;
0x2EC0	0xA460      	BTFSS       RXB0CON, 2 
0x2EC2	0xD006      	BRA         L_can_read270
0x2EC4	0x0E07      	MOVLW       7
0x2EC6	0x010F      	MOVLB       15
0x2EC8	0x1550      	ANDWF       RXB1CON, 0, 1
0x2ECA	0x0105      	MOVLB       5
0x2ECC	0x6F5D      	MOVWF       ?FLOC___can_readT1013, 1
0x2ECE	0xD003      	BRA         L_can_read271
L_can_read270:
0x2ED0	0x0105      	MOVLB       5
0x2ED2	0x0EFF      	MOVLW       255
0x2ED4	0x6F5D      	MOVWF       ?FLOC___can_readT1013, 1
L_can_read271:
0x2ED6	0xF3CFC55D  	MOVFF       ?FLOC___can_readT1013, _can+16
0x2EDA	0xD006      	BRA         L_can_read272
L_can_read269:
;lib_can.h,481 :: 		can.numFilter = RXB1CON & 0x1F;
0x2EDC	0x0E1F      	MOVLW       31
0x2EDE	0x010F      	MOVLB       15
0x2EE0	0x1550      	ANDWF       RXB1CON, 0, 1
0x2EE2	0x6E00      	MOVWF       R0 
0x2EE4	0xF3CFC000  	MOVFF       R0, _can+16
L_can_read272:
;lib_can.h,482 :: 		}else if(can.mode == CAN_MODE_LEGACY){
0x2EE8	0xD006      	BRA         L_can_read273
L_can_read264:
0x2EEA	0x0103      	MOVLB       3
0x2EEC	0x51CD      	MOVF        _can+14, 0, 1
0x2EEE	0x0A00      	XORLW       0
0x2EF0	0xE102      	BNZ         L_can_read274
;lib_can.h,483 :: 		return CAN_RW_EMPTY;  //No se recibio nada
0x2EF2	0x6A00      	CLRF        R0 
0x2EF4	0xD167      	BRA         L_end_can_read
;lib_can.h,484 :: 		}
L_can_read274:
L_can_read273:
L_can_read263:
0x2EF6	0x0103      	MOVLB       3
;lib_can.h,487 :: 		if(can.mode == CAN_MODE_LEGACY){
0x2EF8	0x51CD      	MOVF        _can+14, 0, 1
0x2EFA	0x0A00      	XORLW       0
0x2EFC	0xE106      	BNZ         L_can_read275
;lib_can.h,488 :: 		CANCON &= 0xF1;
0x2EFE	0x0EF1      	MOVLW       241
0x2F00	0x166F      	ANDWF       CANCON, 1 
;lib_can.h,489 :: 		CANCON |= ref;   //BITS WIN
0x2F02	0x0105      	MOVLB       5
0x2F04	0x5166      	MOVF        can_read_ref_L0, 0, 1
0x2F06	0x126F      	IORWF       CANCON, 1 
;lib_can.h,490 :: 		}else{   //MODO 1 Y 2
0x2F08	0xD0F1      	BRA         L_can_read276
L_can_read275:
;lib_can.h,492 :: 		if(!BSEL0.B0TXEN && B0CON.RXFUL){
0x2F0A	0x010D      	MOVLB       13
0x2F0C	0xB5F8      	BTFSC       BSEL0, 2, 1
0x2F0E	0xD024      	BRA         L_can_read279
0x2F10	0x010E      	MOVLB       14
0x2F12	0xAF20      	BTFSS       B0CON, 7, 1
0x2F14	0xD021      	BRA         L_can_read279
L__can_read941:
;lib_can.h,493 :: 		bufferBX = &B0CON;
0x2F16	0x0E20      	MOVLW       B0CON
0x2F18	0x0105      	MOVLB       5
0x2F1A	0x6F64      	MOVWF       can_read_bufferBX_L0, 1
0x2F1C	0x0E0E      	MOVLW       hi_addr(B0CON)
0x2F1E	0x6F65      	MOVWF       can_read_bufferBX_L0+1, 1
;lib_can.h,494 :: 		regLen = &B0DLC;
0x2F20	0x0E25      	MOVLW       B0DLC
0x2F22	0x6F60      	MOVWF       can_read_regLen_L0, 1
0x2F24	0x0E0E      	MOVLW       hi_addr(B0DLC)
0x2F26	0x6F61      	MOVWF       can_read_regLen_L0+1, 1
;lib_can.h,495 :: 		receptor = &B0EIDL;
0x2F28	0x0E24      	MOVLW       B0EIDL
0x2F2A	0x6F5E      	MOVWF       can_read_receptor_L0, 1
0x2F2C	0x0E0E      	MOVLW       hi_addr(B0EIDL)
0x2F2E	0x6F5F      	MOVWF       can_read_receptor_L0+1, 1
;lib_can.h,496 :: 		buffer = &B0D0;
0x2F30	0x0E26      	MOVLW       B0D0
0x2F32	0x6F62      	MOVWF       can_read_buffer_L0, 1
0x2F34	0x0E0E      	MOVLW       hi_addr(B0D0)
0x2F36	0x6F63      	MOVWF       can_read_buffer_L0+1, 1
;lib_can.h,497 :: 		can.overflow = COMSTAT.RXB0OVFL;
0x2F38	0x0E00      	MOVLW       0
0x2F3A	0xBE74      	BTFSC       COMSTAT, 7 
0x2F3C	0x0E01      	MOVLW       1
0x2F3E	0x0103      	MOVLB       3
0x2F40	0x6FCE      	MOVWF       _can+15, 1
;lib_can.h,498 :: 		COMSTAT.RXB0OVFL = 0;  //Limpiar sobreflujo
0x2F42	0x9E74      	BCF         COMSTAT, 7 
;lib_can.h,499 :: 		can.numFilter = B0CON & 0x1F;
0x2F44	0x0E1F      	MOVLW       31
0x2F46	0x010E      	MOVLB       14
0x2F48	0x1520      	ANDWF       B0CON, 0, 1
0x2F4A	0x6E00      	MOVWF       R0 
0x2F4C	0xF3CFC000  	MOVFF       R0, _can+16
;lib_can.h,500 :: 		ref = 0x12;
0x2F50	0x0E12      	MOVLW       18
0x2F52	0x0105      	MOVLB       5
0x2F54	0x6F66      	MOVWF       can_read_ref_L0, 1
;lib_can.h,501 :: 		}else if(!BSEL0.B1TXEN && B1CON.RXFUL){
0x2F56	0xD0C5      	BRA         L_can_read280
L_can_read279:
0x2F58	0x010D      	MOVLB       13
0x2F5A	0xB7F8      	BTFSC       BSEL0, 3, 1
0x2F5C	0xD024      	BRA         L_can_read283
0x2F5E	0x010E      	MOVLB       14
0x2F60	0xAF30      	BTFSS       B1CON, 7, 1
0x2F62	0xD021      	BRA         L_can_read283
L__can_read940:
;lib_can.h,502 :: 		bufferBX = &B1CON;
0x2F64	0x0E30      	MOVLW       B1CON
0x2F66	0x0105      	MOVLB       5
0x2F68	0x6F64      	MOVWF       can_read_bufferBX_L0, 1
0x2F6A	0x0E0E      	MOVLW       hi_addr(B1CON)
0x2F6C	0x6F65      	MOVWF       can_read_bufferBX_L0+1, 1
;lib_can.h,503 :: 		regLen = &B1DLC;
0x2F6E	0x0E35      	MOVLW       B1DLC
0x2F70	0x6F60      	MOVWF       can_read_regLen_L0, 1
0x2F72	0x0E0E      	MOVLW       hi_addr(B1DLC)
0x2F74	0x6F61      	MOVWF       can_read_regLen_L0+1, 1
;lib_can.h,504 :: 		receptor = &B1EIDL;
0x2F76	0x0E34      	MOVLW       B1EIDL
0x2F78	0x6F5E      	MOVWF       can_read_receptor_L0, 1
0x2F7A	0x0E0E      	MOVLW       hi_addr(B1EIDL)
0x2F7C	0x6F5F      	MOVWF       can_read_receptor_L0+1, 1
;lib_can.h,505 :: 		buffer = &B1D0;
0x2F7E	0x0E36      	MOVLW       B1D0
0x2F80	0x6F62      	MOVWF       can_read_buffer_L0, 1
0x2F82	0x0E0E      	MOVLW       hi_addr(B1D0)
0x2F84	0x6F63      	MOVWF       can_read_buffer_L0+1, 1
;lib_can.h,506 :: 		can.overflow = COMSTAT.RXB0OVFL;
0x2F86	0x0E00      	MOVLW       0
0x2F88	0xBE74      	BTFSC       COMSTAT, 7 
0x2F8A	0x0E01      	MOVLW       1
0x2F8C	0x0103      	MOVLB       3
0x2F8E	0x6FCE      	MOVWF       _can+15, 1
;lib_can.h,507 :: 		COMSTAT.RXB0OVFL = 0;  //Limpiar sobreflujo
0x2F90	0x9E74      	BCF         COMSTAT, 7 
;lib_can.h,508 :: 		can.numFilter = B1CON & 0x1F;
0x2F92	0x0E1F      	MOVLW       31
0x2F94	0x010E      	MOVLB       14
0x2F96	0x1530      	ANDWF       B1CON, 0, 1
0x2F98	0x6E00      	MOVWF       R0 
0x2F9A	0xF3CFC000  	MOVFF       R0, _can+16
;lib_can.h,509 :: 		ref = 0x13;
0x2F9E	0x0E13      	MOVLW       19
0x2FA0	0x0105      	MOVLB       5
0x2FA2	0x6F66      	MOVWF       can_read_ref_L0, 1
;lib_can.h,510 :: 		}else if(!BSEL0.B2TXEN && B2CON.RXFUL){
0x2FA4	0xD09E      	BRA         L_can_read284
L_can_read283:
0x2FA6	0x010D      	MOVLB       13
0x2FA8	0xB9F8      	BTFSC       BSEL0, 4, 1
0x2FAA	0xD024      	BRA         L_can_read287
0x2FAC	0x010E      	MOVLB       14
0x2FAE	0xAF40      	BTFSS       B2CON, 7, 1
0x2FB0	0xD021      	BRA         L_can_read287
L__can_read939:
;lib_can.h,511 :: 		bufferBX = &B2CON;
0x2FB2	0x0E40      	MOVLW       B2CON
0x2FB4	0x0105      	MOVLB       5
0x2FB6	0x6F64      	MOVWF       can_read_bufferBX_L0, 1
0x2FB8	0x0E0E      	MOVLW       hi_addr(B2CON)
0x2FBA	0x6F65      	MOVWF       can_read_bufferBX_L0+1, 1
;lib_can.h,512 :: 		regLen = &B2DLC;
0x2FBC	0x0E45      	MOVLW       B2DLC
0x2FBE	0x6F60      	MOVWF       can_read_regLen_L0, 1
0x2FC0	0x0E0E      	MOVLW       hi_addr(B2DLC)
0x2FC2	0x6F61      	MOVWF       can_read_regLen_L0+1, 1
;lib_can.h,513 :: 		receptor = &B2EIDL;
0x2FC4	0x0E44      	MOVLW       B2EIDL
0x2FC6	0x6F5E      	MOVWF       can_read_receptor_L0, 1
0x2FC8	0x0E0E      	MOVLW       hi_addr(B2EIDL)
0x2FCA	0x6F5F      	MOVWF       can_read_receptor_L0+1, 1
;lib_can.h,514 :: 		buffer = &B2D0;
0x2FCC	0x0E46      	MOVLW       B2D0
0x2FCE	0x6F62      	MOVWF       can_read_buffer_L0, 1
0x2FD0	0x0E0E      	MOVLW       hi_addr(B2D0)
0x2FD2	0x6F63      	MOVWF       can_read_buffer_L0+1, 1
;lib_can.h,515 :: 		can.overflow = COMSTAT.RXB0OVFL;
0x2FD4	0x0E00      	MOVLW       0
0x2FD6	0xBE74      	BTFSC       COMSTAT, 7 
0x2FD8	0x0E01      	MOVLW       1
0x2FDA	0x0103      	MOVLB       3
0x2FDC	0x6FCE      	MOVWF       _can+15, 1
;lib_can.h,516 :: 		COMSTAT.RXB0OVFL = 0;  //Limpiar sobreflujo
0x2FDE	0x9E74      	BCF         COMSTAT, 7 
;lib_can.h,517 :: 		can.numFilter = B2CON & 0x1F;
0x2FE0	0x0E1F      	MOVLW       31
0x2FE2	0x010E      	MOVLB       14
0x2FE4	0x1540      	ANDWF       B2CON, 0, 1
0x2FE6	0x6E00      	MOVWF       R0 
0x2FE8	0xF3CFC000  	MOVFF       R0, _can+16
;lib_can.h,518 :: 		ref = 0x14;
0x2FEC	0x0E14      	MOVLW       20
0x2FEE	0x0105      	MOVLB       5
0x2FF0	0x6F66      	MOVWF       can_read_ref_L0, 1
;lib_can.h,519 :: 		}else if(!BSEL0.B3TXEN && B3CON.RXFUL){
0x2FF2	0xD077      	BRA         L_can_read288
L_can_read287:
0x2FF4	0x010D      	MOVLB       13
0x2FF6	0xBBF8      	BTFSC       BSEL0, 5, 1
0x2FF8	0xD024      	BRA         L_can_read291
0x2FFA	0x010E      	MOVLB       14
0x2FFC	0xAF50      	BTFSS       B3CON, 7, 1
0x2FFE	0xD021      	BRA         L_can_read291
L__can_read938:
;lib_can.h,520 :: 		bufferBX = &B3CON;
0x3000	0x0E50      	MOVLW       B3CON
0x3002	0x0105      	MOVLB       5
0x3004	0x6F64      	MOVWF       can_read_bufferBX_L0, 1
0x3006	0x0E0E      	MOVLW       hi_addr(B3CON)
0x3008	0x6F65      	MOVWF       can_read_bufferBX_L0+1, 1
;lib_can.h,521 :: 		regLen = &B3DLC;
0x300A	0x0E55      	MOVLW       B3DLC
0x300C	0x6F60      	MOVWF       can_read_regLen_L0, 1
0x300E	0x0E0E      	MOVLW       hi_addr(B3DLC)
0x3010	0x6F61      	MOVWF       can_read_regLen_L0+1, 1
;lib_can.h,522 :: 		receptor = &B3EIDL;
0x3012	0x0E54      	MOVLW       B3EIDL
0x3014	0x6F5E      	MOVWF       can_read_receptor_L0, 1
0x3016	0x0E0E      	MOVLW       hi_addr(B3EIDL)
0x3018	0x6F5F      	MOVWF       can_read_receptor_L0+1, 1
;lib_can.h,523 :: 		buffer = &B3D0;
0x301A	0x0E56      	MOVLW       B3D0
0x301C	0x6F62      	MOVWF       can_read_buffer_L0, 1
0x301E	0x0E0E      	MOVLW       hi_addr(B3D0)
0x3020	0x6F63      	MOVWF       can_read_buffer_L0+1, 1
;lib_can.h,524 :: 		can.overflow = COMSTAT.RXB0OVFL;
0x3022	0x0E00      	MOVLW       0
0x3024	0xBE74      	BTFSC       COMSTAT, 7 
0x3026	0x0E01      	MOVLW       1
0x3028	0x0103      	MOVLB       3
0x302A	0x6FCE      	MOVWF       _can+15, 1
;lib_can.h,525 :: 		COMSTAT.RXB0OVFL = 0;  //Limpiar sobreflujo
0x302C	0x9E74      	BCF         COMSTAT, 7 
;lib_can.h,526 :: 		can.numFilter = B3CON & 0x1F;
0x302E	0x0E1F      	MOVLW       31
0x3030	0x010E      	MOVLB       14
0x3032	0x1550      	ANDWF       B3CON, 0, 1
0x3034	0x6E00      	MOVWF       R0 
0x3036	0xF3CFC000  	MOVFF       R0, _can+16
;lib_can.h,527 :: 		ref = 0x15;
0x303A	0x0E15      	MOVLW       21
0x303C	0x0105      	MOVLB       5
0x303E	0x6F66      	MOVWF       can_read_ref_L0, 1
;lib_can.h,528 :: 		}else if(!BSEL0.B4TXEN && B4CON.RXFUL){
0x3040	0xD050      	BRA         L_can_read292
L_can_read291:
0x3042	0x010D      	MOVLB       13
0x3044	0xBDF8      	BTFSC       BSEL0, 6, 1
0x3046	0xD024      	BRA         L_can_read295
0x3048	0x010E      	MOVLB       14
0x304A	0xAF60      	BTFSS       B4CON, 7, 1
0x304C	0xD021      	BRA         L_can_read295
L__can_read937:
;lib_can.h,529 :: 		bufferBX = &B4CON;
0x304E	0x0E60      	MOVLW       B4CON
0x3050	0x0105      	MOVLB       5
0x3052	0x6F64      	MOVWF       can_read_bufferBX_L0, 1
0x3054	0x0E0E      	MOVLW       hi_addr(B4CON)
0x3056	0x6F65      	MOVWF       can_read_bufferBX_L0+1, 1
;lib_can.h,530 :: 		regLen = &B4DLC;
0x3058	0x0E65      	MOVLW       B4DLC
0x305A	0x6F60      	MOVWF       can_read_regLen_L0, 1
0x305C	0x0E0E      	MOVLW       hi_addr(B4DLC)
0x305E	0x6F61      	MOVWF       can_read_regLen_L0+1, 1
;lib_can.h,531 :: 		receptor = &B4EIDL;
0x3060	0x0E64      	MOVLW       B4EIDL
0x3062	0x6F5E      	MOVWF       can_read_receptor_L0, 1
0x3064	0x0E0E      	MOVLW       hi_addr(B4EIDL)
0x3066	0x6F5F      	MOVWF       can_read_receptor_L0+1, 1
;lib_can.h,532 :: 		buffer = &B4D0;
0x3068	0x0E66      	MOVLW       B4D0
0x306A	0x6F62      	MOVWF       can_read_buffer_L0, 1
0x306C	0x0E0E      	MOVLW       hi_addr(B4D0)
0x306E	0x6F63      	MOVWF       can_read_buffer_L0+1, 1
;lib_can.h,533 :: 		can.overflow = COMSTAT.RXB0OVFL;
0x3070	0x0E00      	MOVLW       0
0x3072	0xBE74      	BTFSC       COMSTAT, 7 
0x3074	0x0E01      	MOVLW       1
0x3076	0x0103      	MOVLB       3
0x3078	0x6FCE      	MOVWF       _can+15, 1
;lib_can.h,534 :: 		COMSTAT.RXB0OVFL = 0;  //Limpiar sobreflujo
0x307A	0x9E74      	BCF         COMSTAT, 7 
;lib_can.h,535 :: 		can.numFilter = B4CON & 0x1F;
0x307C	0x0E1F      	MOVLW       31
0x307E	0x010E      	MOVLB       14
0x3080	0x1560      	ANDWF       B4CON, 0, 1
0x3082	0x6E00      	MOVWF       R0 
0x3084	0xF3CFC000  	MOVFF       R0, _can+16
;lib_can.h,536 :: 		ref = 0x16;
0x3088	0x0E16      	MOVLW       22
0x308A	0x0105      	MOVLB       5
0x308C	0x6F66      	MOVWF       can_read_ref_L0, 1
;lib_can.h,537 :: 		}else if(!BSEL0.B5TXEN && B5CON.RXFUL){
0x308E	0xD029      	BRA         L_can_read296
L_can_read295:
0x3090	0x010D      	MOVLB       13
0x3092	0xBFF8      	BTFSC       BSEL0, 7, 1
0x3094	0xD024      	BRA         L_can_read299
0x3096	0x010E      	MOVLB       14
0x3098	0xAF70      	BTFSS       B5CON, 7, 1
0x309A	0xD021      	BRA         L_can_read299
L__can_read936:
;lib_can.h,538 :: 		bufferBX = &B5CON;
0x309C	0x0E70      	MOVLW       B5CON
0x309E	0x0105      	MOVLB       5
0x30A0	0x6F64      	MOVWF       can_read_bufferBX_L0, 1
0x30A2	0x0E0E      	MOVLW       hi_addr(B5CON)
0x30A4	0x6F65      	MOVWF       can_read_bufferBX_L0+1, 1
;lib_can.h,539 :: 		regLen = &B5DLC;
0x30A6	0x0E75      	MOVLW       B5DLC
0x30A8	0x6F60      	MOVWF       can_read_regLen_L0, 1
0x30AA	0x0E0E      	MOVLW       hi_addr(B5DLC)
0x30AC	0x6F61      	MOVWF       can_read_regLen_L0+1, 1
;lib_can.h,540 :: 		receptor = &B5EIDL;
0x30AE	0x0E74      	MOVLW       B5EIDL
0x30B0	0x6F5E      	MOVWF       can_read_receptor_L0, 1
0x30B2	0x0E0E      	MOVLW       hi_addr(B5EIDL)
0x30B4	0x6F5F      	MOVWF       can_read_receptor_L0+1, 1
;lib_can.h,541 :: 		buffer = &B5D0;
0x30B6	0x0E76      	MOVLW       B5D0
0x30B8	0x6F62      	MOVWF       can_read_buffer_L0, 1
0x30BA	0x0E0E      	MOVLW       hi_addr(B5D0)
0x30BC	0x6F63      	MOVWF       can_read_buffer_L0+1, 1
;lib_can.h,542 :: 		can.overflow = COMSTAT.RXB0OVFL;
0x30BE	0x0E00      	MOVLW       0
0x30C0	0xBE74      	BTFSC       COMSTAT, 7 
0x30C2	0x0E01      	MOVLW       1
0x30C4	0x0103      	MOVLB       3
0x30C6	0x6FCE      	MOVWF       _can+15, 1
;lib_can.h,543 :: 		COMSTAT.RXB0OVFL = 0;  //Limpiar sobreflujo
0x30C8	0x9E74      	BCF         COMSTAT, 7 
;lib_can.h,544 :: 		can.numFilter = B5CON & 0x1F;
0x30CA	0x0E1F      	MOVLW       31
0x30CC	0x010E      	MOVLB       14
0x30CE	0x1570      	ANDWF       B5CON, 0, 1
0x30D0	0x6E00      	MOVWF       R0 
0x30D2	0xF3CFC000  	MOVFF       R0, _can+16
;lib_can.h,545 :: 		ref = 0x17;
0x30D6	0x0E17      	MOVLW       23
0x30D8	0x0105      	MOVLB       5
0x30DA	0x6F66      	MOVWF       can_read_ref_L0, 1
;lib_can.h,546 :: 		}else{
0x30DC	0xD002      	BRA         L_can_read300
L_can_read299:
;lib_can.h,547 :: 		return CAN_RW_EMPTY;
0x30DE	0x6A00      	CLRF        R0 
0x30E0	0xD071      	BRA         L_end_can_read
;lib_can.h,548 :: 		}
L_can_read300:
L_can_read296:
L_can_read292:
L_can_read288:
L_can_read284:
L_can_read280:
0x30E2	0x0105      	MOVLB       5
;lib_can.h,550 :: 		ECANCON &= 0xE0;
0x30E4	0x0EE0      	MOVLW       224
0x30E6	0x1677      	ANDWF       ECANCON, 1 
;lib_can.h,551 :: 		ECANCON |= ref;     //BITS EWIN
0x30E8	0x5166      	MOVF        can_read_ref_L0, 0, 1
0x30EA	0x1277      	IORWF       ECANCON, 1 
;lib_can.h,552 :: 		}
L_can_read276:
;lib_can.h,555 :: 		*size = (*regLen)&0x0F;
0x30EC	0xFFE9C560  	MOVFF       can_read_regLen_L0, FSR0L
0x30F0	0xFFEAC561  	MOVFF       can_read_regLen_L0+1, FSR0H
0x30F4	0xFFE1C558  	MOVFF       FARG_can_read_size, FSR1L
0x30F8	0xFFE2C559  	MOVFF       FARG_can_read_size+1, FSR1H
0x30FC	0x0E0F      	MOVLW       15
0x30FE	0x14EE      	ANDWF       POSTINC0, 0 
0x3100	0x6EE6      	MOVWF       POSTINC1 
;lib_can.h,556 :: 		can.rxRequest = (*regLen).B6;
0x3102	0xFFE9C560  	MOVFF       can_read_regLen_L0, FSR0L
0x3106	0xFFEAC561  	MOVFF       can_read_regLen_L0+1, FSR0H
0x310A	0xF000CFEE  	MOVFF       POSTINC0, R0
0x310E	0x0E00      	MOVLW       0
0x3110	0xBC00      	BTFSC       R0, 6 
0x3112	0x0E01      	MOVLW       1
0x3114	0x0104      	MOVLB       4
0x3116	0x6F28      	MOVWF       _can+105, 1
;lib_can.h,558 :: 		*id = can_get_id(receptor);
0x3118	0xF578C55E  	MOVFF       can_read_receptor_L0, FARG_can_get_id_address
0x311C	0xF579C55F  	MOVFF       can_read_receptor_L0+1, FARG_can_get_id_address+1
0x3120	0xF010EC30  	CALL        _can_get_id, 0
0x3124	0xFFE1C554  	MOVFF       FARG_can_read_id, FSR1L
0x3128	0xFFE2C555  	MOVFF       FARG_can_read_id+1, FSR1H
0x312C	0xFFE6C000  	MOVFF       R0, POSTINC1
0x3130	0xFFE6C001  	MOVFF       R1, POSTINC1
0x3134	0xFFE6C002  	MOVFF       R2, POSTINC1
0x3138	0xFFE6C003  	MOVFF       R3, POSTINC1
;lib_can.h,560 :: 		for(ref = 0; ref < *size && ref < 8; ref++)
0x313C	0x6B66      	CLRF        can_read_ref_L0, 1
L_can_read301:
0x313E	0xFFD9C558  	MOVFF       FARG_can_read_size, FSR2L
0x3142	0xFFDAC559  	MOVFF       FARG_can_read_size+1, FSR2H
0x3146	0x50DE      	MOVF        POSTINC2, 0 
0x3148	0x5D66      	SUBWF       can_read_ref_L0, 0, 1
0x314A	0xE213      	BC          L_can_read302
0x314C	0x0E08      	MOVLW       8
0x314E	0x5D66      	SUBWF       can_read_ref_L0, 0, 1
0x3150	0xE210      	BC          L_can_read302
L__can_read935:
;lib_can.h,561 :: 		datos[ref] = buffer[ref];
0x3152	0x5166      	MOVF        can_read_ref_L0, 0, 1
0x3154	0x2556      	ADDWF       FARG_can_read_datos, 0, 1
0x3156	0x6EE1      	MOVWF       FSR1L 
0x3158	0x0E00      	MOVLW       0
0x315A	0x2157      	ADDWFC      FARG_can_read_datos+1, 0, 1
0x315C	0x6EE2      	MOVWF       FSR1H 
0x315E	0x5166      	MOVF        can_read_ref_L0, 0, 1
0x3160	0x2562      	ADDWF       can_read_buffer_L0, 0, 1
0x3162	0x6EE9      	MOVWF       FSR0L 
0x3164	0x0E00      	MOVLW       0
0x3166	0x2163      	ADDWFC      can_read_buffer_L0+1, 0, 1
0x3168	0x6EEA      	MOVWF       FSR0H 
0x316A	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
;lib_can.h,560 :: 		for(ref = 0; ref < *size && ref < 8; ref++)
0x316E	0x2B66      	INCF        can_read_ref_L0, 1, 1
;lib_can.h,561 :: 		datos[ref] = buffer[ref];
0x3170	0xD7E6      	BRA         L_can_read301
L_can_read302:
;lib_can.h,564 :: 		(*bufferBX).B7 = 0;    //RESETEAR BANDERA
0x3172	0xFFE1C564  	MOVFF       can_read_bufferBX_L0, FSR1L
0x3176	0xFFE2C565  	MOVFF       can_read_bufferBX_L0+1, FSR1H
0x317A	0x9EE6      	BCF         POSTINC1, 7 
;lib_can.h,567 :: 		if(bufferBX == &RXB0CON)
0x317C	0x5165      	MOVF        can_read_bufferBX_L0+1, 0, 1
0x317E	0x0A0F      	XORLW       hi_addr(RXB0CON)
0x3180	0xE102      	BNZ         L__can_read1150
0x3182	0x0E60      	MOVLW       RXB0CON
0x3184	0x1964      	XORWF       can_read_bufferBX_L0, 0, 1
L__can_read1150:
0x3186	0xE102      	BNZ         L_can_read306
;lib_can.h,568 :: 		PIR3.RXB0IF = 0;     //VERIFICAR EN MODO 2
0x3188	0x90A4      	BCF         PIR3, 0 
0x318A	0xD009      	BRA         L_can_read307
L_can_read306:
;lib_can.h,569 :: 		else if(bufferBX == &RXB1CON)
0x318C	0x5165      	MOVF        can_read_bufferBX_L0+1, 0, 1
0x318E	0x0A0F      	XORLW       hi_addr(RXB1CON)
0x3190	0xE102      	BNZ         L__can_read1151
0x3192	0x0E50      	MOVLW       RXB1CON
0x3194	0x1964      	XORWF       can_read_bufferBX_L0, 0, 1
L__can_read1151:
0x3196	0xE102      	BNZ         L_can_read308
;lib_can.h,570 :: 		PIR3.RXB1IF = 0;     //EN MODO 0, LIMPIA BUFFER BX1
0x3198	0x92A4      	BCF         PIR3, 1 
0x319A	0xD001      	BRA         L_can_read309
L_can_read308:
;lib_can.h,572 :: 		PIR3.RXB1IF = 0;     //MODO 1 y 2, ESTE BIT SIRVE PARA N BUFFERS
0x319C	0x92A4      	BCF         PIR3, 1 
L_can_read309:
L_can_read307:
;lib_can.h,575 :: 		if(can.mode == CAN_MODE_LEGACY){
0x319E	0x0103      	MOVLB       3
0x31A0	0x51CD      	MOVF        _can+14, 0, 1
0x31A2	0x0A00      	XORLW       0
0x31A4	0xE103      	BNZ         L_can_read310
;lib_can.h,576 :: 		CANCON &= 0xF1;
0x31A6	0x0EF1      	MOVLW       241
0x31A8	0x166F      	ANDWF       CANCON, 1 
;lib_can.h,577 :: 		CANCON |= 0x00;   //BITS WIN, LISTEN BUFFER0
;lib_can.h,578 :: 		}else{
0x31AA	0xD004      	BRA         L_can_read311
L_can_read310:
;lib_can.h,579 :: 		ECANCON &= 0xE0;
0x31AC	0x0EE0      	MOVLW       224
0x31AE	0x1677      	ANDWF       ECANCON, 1 
;lib_can.h,580 :: 		ECANCON |= 0x16;  //BITS EWIN, RX0 INTERRUPT
0x31B0	0x0E16      	MOVLW       22
0x31B2	0x1277      	IORWF       ECANCON, 1 
;lib_can.h,581 :: 		}
L_can_read311:
;lib_can.h,583 :: 		if(!can.rxRequest)
0x31B4	0x0104      	MOVLB       4
0x31B6	0x5328      	MOVF        _can+105, 1, 1
0x31B8	0xE103      	BNZ         L_can_read312
;lib_can.h,584 :: 		return CAN_RW_DATA;      //Datos en buffer
0x31BA	0x0E01      	MOVLW       1
0x31BC	0x6E00      	MOVWF       R0 
0x31BE	0xD002      	BRA         L_end_can_read
L_can_read312:
;lib_can.h,586 :: 		return CAN_RW_REQUEST;    //Peticion solicitada
0x31C0	0x0E02      	MOVLW       2
0x31C2	0x6E00      	MOVWF       R0 
;lib_can.h,587 :: 		}
L_end_can_read:
0x31C4	0x0012      	RETURN      0
; end of _can_read
_double2longword:
;__Lib_MathDouble.c,1559 :: 		
;__Lib_MathDouble.c,1569 :: 		
0x31C6	0x6A0B      	CLRF        R11, 0
;__Lib_MathDouble.c,1570 :: 		
0x31C8	0x6A0C      	CLRF        R12, 0
;__Lib_MathDouble.c,1571 :: 		
0x31CA	0x6A0A      	CLRF        R10, 0
;__Lib_MathDouble.c,1573 :: 		
0x31CC	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,1574 :: 		
0x31CE	0x5003      	MOVF        R3, 0, 0
;__Lib_MathDouble.c,1575 :: 		
0x31D0	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1576 :: 		
0x31D2	0xF019EF6B  	GOTO        INT3232UEOK
;__Lib_MathDouble.c,1578 :: 		
0x31D6	0x8E02      	BSF         R2, 7, 0
;__Lib_MathDouble.c,1580 :: 		
0x31D8	0x0E9E      	MOVLW       158
;__Lib_MathDouble.c,1581 :: 		
0x31DA	0x5E03      	SUBWF       R3, 1, 0
;__Lib_MathDouble.c,1582 :: 		
0x31DC	0xBE03      	BTFSC       R3, 7, 0
;__Lib_MathDouble.c,1583 :: 		
0x31DE	0xF018EFF6  	GOTO        SETEXP32U
;__Lib_MathDouble.c,1584 :: 		
0x31E2	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1585 :: 		
0x31E4	0xF018EFF6  	GOTO        SETEXP32U
;__Lib_MathDouble.c,1586 :: 		
0x31E8	0xF019EF5B  	GOTO        SETIOV32U
;__Lib_MathDouble.c,1587 :: 		
SETEXP32U:
;__Lib_MathDouble.c,1588 :: 		
0x31EC	0x6C03      	NEGF        R3, 0
;__Lib_MathDouble.c,1590 :: 		
0x31EE	0x0E08      	MOVLW       8
;__Lib_MathDouble.c,1591 :: 		
0x31F0	0x5C03      	SUBWF       R3, 0, 0
;__Lib_MathDouble.c,1592 :: 		
0x31F2	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1593 :: 		
0x31F4	0xF019EF28  	GOTO        TSHIFT3232U
;__Lib_MathDouble.c,1594 :: 		
0x31F8	0x6E03      	MOVWF       R3, 0
;__Lib_MathDouble.c,1595 :: 		
0x31FA	0x3608      	RLCF        R8, 1, 0
;__Lib_MathDouble.c,1596 :: 		
0x31FC	0xF008C000  	MOVFF       R0, R8
;__Lib_MathDouble.c,1597 :: 		
0x3200	0xF000C001  	MOVFF       R1, R0
;__Lib_MathDouble.c,1598 :: 		
0x3204	0xF001C002  	MOVFF       R2, R1
;__Lib_MathDouble.c,1599 :: 		
0x3208	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,1601 :: 		
0x320A	0x0E08      	MOVLW       8
;__Lib_MathDouble.c,1602 :: 		
0x320C	0x5C03      	SUBWF       R3, 0, 0
;__Lib_MathDouble.c,1603 :: 		
0x320E	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1604 :: 		
0x3210	0xF019EF28  	GOTO        TSHIFT3232U
;__Lib_MathDouble.c,1605 :: 		
0x3214	0x6E03      	MOVWF       R3, 0
;__Lib_MathDouble.c,1606 :: 		
0x3216	0x3608      	RLCF        R8, 1, 0
;__Lib_MathDouble.c,1607 :: 		
0x3218	0xF008C000  	MOVFF       R0, R8
;__Lib_MathDouble.c,1608 :: 		
0x321C	0xF000C001  	MOVFF       R1, R0
;__Lib_MathDouble.c,1609 :: 		
0x3220	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,1611 :: 		
0x3222	0x0E08      	MOVLW       8
;__Lib_MathDouble.c,1612 :: 		
0x3224	0x5C03      	SUBWF       R3, 0, 0
;__Lib_MathDouble.c,1613 :: 		
0x3226	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1614 :: 		
0x3228	0xF019EF28  	GOTO        TSHIFT3232U
;__Lib_MathDouble.c,1615 :: 		
0x322C	0x6E03      	MOVWF       R3, 0
;__Lib_MathDouble.c,1616 :: 		
0x322E	0x3608      	RLCF        R8, 1, 0
;__Lib_MathDouble.c,1617 :: 		
0x3230	0xF008C000  	MOVFF       R0, R8
;__Lib_MathDouble.c,1618 :: 		
0x3234	0x6A00      	CLRF        R0, 0
;__Lib_MathDouble.c,1620 :: 		
0x3236	0x0E08      	MOVLW       8
;__Lib_MathDouble.c,1621 :: 		
0x3238	0x5C03      	SUBWF       R3, 0, 0
;__Lib_MathDouble.c,1622 :: 		
0x323A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1623 :: 		
0x323C	0xF019EF28  	GOTO        TSHIFT3232U
;__Lib_MathDouble.c,1624 :: 		
0x3240	0x6E03      	MOVWF       R3, 0
;__Lib_MathDouble.c,1625 :: 		
0x3242	0x3608      	RLCF        R8, 1, 0
;__Lib_MathDouble.c,1626 :: 		
0x3244	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,1628 :: 		
0x3246	0x5003      	MOVF        R3, 0, 0
;__Lib_MathDouble.c,1629 :: 		
0x3248	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,1630 :: 		
0x324A	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,1631 :: 		
0x324C	0xF019EF34  	GOTO        SHIFT3232UOK
;__Lib_MathDouble.c,1632 :: 		
TSHIFT3232U:
;__Lib_MathDouble.c,1633 :: 		
0x3250	0x5003      	MOVF        R3, 0, 0
;__Lib_MathDouble.c,1634 :: 		
0x3252	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1635 :: 		
0x3254	0xF019EF34  	GOTO        SHIFT3232UOK
;__Lib_MathDouble.c,1636 :: 		
SHIFT3232U:
;__Lib_MathDouble.c,1637 :: 		
0x3258	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,1638 :: 		
0x325A	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,1639 :: 		
0x325C	0x3201      	RRCF        R1, 1, 0
;__Lib_MathDouble.c,1640 :: 		
0x325E	0x3200      	RRCF        R0, 1, 0
;__Lib_MathDouble.c,1641 :: 		
0x3260	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,1642 :: 		
0x3262	0x2E03      	DECFSZ      R3, 1, 0
;__Lib_MathDouble.c,1643 :: 		
0x3264	0xF019EF2C  	GOTO        SHIFT3232U
;__Lib_MathDouble.c,1644 :: 		
SHIFT3232UOK:
;__Lib_MathDouble.c,1645 :: 		
0x3268	0xBC0B      	BTFSC       R11, 6, 0
;__Lib_MathDouble.c,1646 :: 		
0x326A	0xA008      	BTFSS       R8, 0, 0
;__Lib_MathDouble.c,1647 :: 		
0x326C	0xF019EF45  	GOTO        INT3232UOK
;__Lib_MathDouble.c,1648 :: 		
0x3270	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1649 :: 		
0x3272	0xF019EF45  	GOTO        INT3232UOK
;__Lib_MathDouble.c,1650 :: 		
0x3276	0x2A08      	INCF        R8, 1, 0
;__Lib_MathDouble.c,1651 :: 		
0x3278	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1652 :: 		
0x327A	0x2A00      	INCF        R0, 1, 0
;__Lib_MathDouble.c,1653 :: 		
0x327C	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1654 :: 		
0x327E	0x2A01      	INCF        R1, 1, 0
;__Lib_MathDouble.c,1655 :: 		
0x3280	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1656 :: 		
0x3282	0x2A02      	INCF        R2, 1, 0
;__Lib_MathDouble.c,1657 :: 		
0x3284	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,1658 :: 		
0x3286	0xF019EF6F  	GOTO        JPLSETIOV3224
;__Lib_MathDouble.c,1659 :: 		
INT3232UOK:
;__Lib_MathDouble.c,1660 :: 		
0x328A	0xAE0A      	BTFSS       R10, 7, 0
;__Lib_MathDouble.c,1661 :: 		
0x328C	0xF019EF6B  	GOTO        INT3232UEOK
;__Lib_MathDouble.c,1663 :: 		
0x3290	0x1E02      	COMF        R2, 1, 0
;__Lib_MathDouble.c,1664 :: 		
0x3292	0x1E01      	COMF        R1, 1, 0
;__Lib_MathDouble.c,1665 :: 		
0x3294	0x1E00      	COMF        R0, 1, 0
;__Lib_MathDouble.c,1666 :: 		
0x3296	0x1E08      	COMF        R8, 1, 0
;__Lib_MathDouble.c,1667 :: 		
0x3298	0x2A08      	INCF        R8, 1, 0
;__Lib_MathDouble.c,1668 :: 		
0x329A	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1669 :: 		
0x329C	0x2A00      	INCF        R0, 1, 0
;__Lib_MathDouble.c,1670 :: 		
0x329E	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1671 :: 		
0x32A0	0x2A01      	INCF        R1, 1, 0
;__Lib_MathDouble.c,1672 :: 		
0x32A2	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1673 :: 		
0x32A4	0x2A02      	INCF        R2, 1, 0
;__Lib_MathDouble.c,1674 :: 		
0x32A6	0xF019EF6B  	GOTO        INT3232UEOK
;__Lib_MathDouble.c,1676 :: 		
0x32AA	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,1677 :: 		
0x32AC	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,1678 :: 		
0x32AE	0x6A00      	CLRF        R0, 0
;__Lib_MathDouble.c,1679 :: 		
0x32B0	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,1680 :: 		
0x32B2	0xF019EF6B  	GOTO        INT3232UEOK
;__Lib_MathDouble.c,1681 :: 		
SETIOV32U:
;__Lib_MathDouble.c,1682 :: 		
0x32B6	0x800B      	BSF         R11, 0, 0
;__Lib_MathDouble.c,1683 :: 		
0x32B8	0xAE0B      	BTFSS       R11, 7, 0
;__Lib_MathDouble.c,1684 :: 		
0x32BA	0xF019EF74  	GOTO        INT3232UEER
;__Lib_MathDouble.c,1686 :: 		
0x32BE	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,1687 :: 		
0x32C0	0xAE0A      	BTFSS       R10, 7, 0
;__Lib_MathDouble.c,1688 :: 		
0x32C2	0xF019EF74  	GOTO        INT3232UEER
;__Lib_MathDouble.c,1689 :: 		
0x32C6	0x6E02      	MOVWF       R2, 0
;__Lib_MathDouble.c,1690 :: 		
0x32C8	0x6E01      	MOVWF       R1, 0
;__Lib_MathDouble.c,1691 :: 		
0x32CA	0x6E00      	MOVWF       R0, 0
;__Lib_MathDouble.c,1692 :: 		
0x32CC	0x6E08      	MOVWF       R8, 0
;__Lib_MathDouble.c,1693 :: 		
0x32CE	0x360A      	RLCF        R10, 1, 0
;__Lib_MathDouble.c,1694 :: 		
0x32D0	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,1695 :: 		
0x32D2	0xF019EF74  	GOTO        INT3232UEER
;__Lib_MathDouble.c,1697 :: 		
INT3232UEOK:
;__Lib_MathDouble.c,1698 :: 		
0x32D6	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,1699 :: 		
0x32D8	0x6A0C      	CLRF        R12, 0
;__Lib_MathDouble.c,1700 :: 		
0x32DA	0xF019EF75  	GOTO        INT3232UEEE
;__Lib_MathDouble.c,1701 :: 		
JPLSETIOV3224:
;__Lib_MathDouble.c,1702 :: 		
0x32DE	0x0E01      	MOVLW       1
;__Lib_MathDouble.c,1703 :: 		
0x32E0	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,1705 :: 		
0x32E2	0xDD2B      	RCALL       _SETIOV3224
;__Lib_MathDouble.c,1707 :: 		
0x32E4	0xF019EF75  	GOTO        INT3232UEEE
;__Lib_MathDouble.c,1708 :: 		
INT3232UEER:
;__Lib_MathDouble.c,1709 :: 		
0x32E8	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,1710 :: 		
INT3232UEEE:
;__Lib_MathDouble.c,1711 :: 		
0x32EA	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,1712 :: 		
0x32EC	0x6E03      	MOVWF       R3, 0
;__Lib_MathDouble.c,1713 :: 		
0x32EE	0x5001      	MOVF        R1, 0, 0
;__Lib_MathDouble.c,1714 :: 		
0x32F0	0x6E02      	MOVWF       R2, 0
;__Lib_MathDouble.c,1715 :: 		
0x32F2	0x5000      	MOVF        R0, 0, 0
;__Lib_MathDouble.c,1716 :: 		
0x32F4	0x6E01      	MOVWF       R1, 0
;__Lib_MathDouble.c,1717 :: 		
0x32F6	0x5008      	MOVF        R8, 0, 0
;__Lib_MathDouble.c,1718 :: 		
0x32F8	0x6E00      	MOVWF       R0, 0
;__Lib_MathDouble.c,1723 :: 		
L_end_double2longword:
0x32FA	0x0012      	RETURN      0
; end of _double2longword
_clamp:
;miscelaneos.h,25 :: 		long clamp(long valor, long min, long max){
;miscelaneos.h,26 :: 		if(valor > max)
0x32FC	0x0E80      	MOVLW       128
0x32FE	0x0105      	MOVLB       5
0x3300	0x195F      	XORWF       FARG_clamp_max+3, 0, 1
0x3302	0x6E00      	MOVWF       R0 
0x3304	0x0E80      	MOVLW       128
0x3306	0x1957      	XORWF       FARG_clamp_valor+3, 0, 1
0x3308	0x5C00      	SUBWF       R0, 0 
0x330A	0xE108      	BNZ         L__clamp1001
0x330C	0x5156      	MOVF        FARG_clamp_valor+2, 0, 1
0x330E	0x5D5E      	SUBWF       FARG_clamp_max+2, 0, 1
0x3310	0xE105      	BNZ         L__clamp1001
0x3312	0x5155      	MOVF        FARG_clamp_valor+1, 0, 1
0x3314	0x5D5D      	SUBWF       FARG_clamp_max+1, 0, 1
0x3316	0xE102      	BNZ         L__clamp1001
0x3318	0x5154      	MOVF        FARG_clamp_valor, 0, 1
0x331A	0x5D5C      	SUBWF       FARG_clamp_max, 0, 1
L__clamp1001:
0x331C	0xE209      	BC          L_clamp2
;miscelaneos.h,27 :: 		valor = max;
0x331E	0xF554C55C  	MOVFF       FARG_clamp_max, FARG_clamp_valor
0x3322	0xF555C55D  	MOVFF       FARG_clamp_max+1, FARG_clamp_valor+1
0x3326	0xF556C55E  	MOVFF       FARG_clamp_max+2, FARG_clamp_valor+2
0x332A	0xF557C55F  	MOVFF       FARG_clamp_max+3, FARG_clamp_valor+3
0x332E	0xD018      	BRA         L_clamp3
L_clamp2:
;miscelaneos.h,28 :: 		else if(valor < min)
0x3330	0x0E80      	MOVLW       128
0x3332	0x1957      	XORWF       FARG_clamp_valor+3, 0, 1
0x3334	0x6E00      	MOVWF       R0 
0x3336	0x0E80      	MOVLW       128
0x3338	0x195B      	XORWF       FARG_clamp_min+3, 0, 1
0x333A	0x5C00      	SUBWF       R0, 0 
0x333C	0xE108      	BNZ         L__clamp1002
0x333E	0x515A      	MOVF        FARG_clamp_min+2, 0, 1
0x3340	0x5D56      	SUBWF       FARG_clamp_valor+2, 0, 1
0x3342	0xE105      	BNZ         L__clamp1002
0x3344	0x5159      	MOVF        FARG_clamp_min+1, 0, 1
0x3346	0x5D55      	SUBWF       FARG_clamp_valor+1, 0, 1
0x3348	0xE102      	BNZ         L__clamp1002
0x334A	0x5158      	MOVF        FARG_clamp_min, 0, 1
0x334C	0x5D54      	SUBWF       FARG_clamp_valor, 0, 1
L__clamp1002:
0x334E	0xE208      	BC          L_clamp4
;miscelaneos.h,29 :: 		valor = min;
0x3350	0xF554C558  	MOVFF       FARG_clamp_min, FARG_clamp_valor
0x3354	0xF555C559  	MOVFF       FARG_clamp_min+1, FARG_clamp_valor+1
0x3358	0xF556C55A  	MOVFF       FARG_clamp_min+2, FARG_clamp_valor+2
0x335C	0xF557C55B  	MOVFF       FARG_clamp_min+3, FARG_clamp_valor+3
L_clamp4:
L_clamp3:
;miscelaneos.h,31 :: 		return valor;
0x3360	0xF000C554  	MOVFF       FARG_clamp_valor, R0
0x3364	0xF001C555  	MOVFF       FARG_clamp_valor+1, R1
0x3368	0xF002C556  	MOVFF       FARG_clamp_valor+2, R2
0x336C	0xF003C557  	MOVFF       FARG_clamp_valor+3, R3
;miscelaneos.h,32 :: 		}
L_end_clamp:
0x3370	0x0012      	RETURN      0
; end of _clamp
_can_write:
;lib_can.h,589 :: 		bool can_write(long id, char *datos, char size, char priority, bool rtr){
;lib_can.h,595 :: 		if(!TXB0CON.TXREQ){
0x3372	0x010F      	MOVLB       15
0x3374	0xB740      	BTFSC       TXB0CON, 3, 1
0x3376	0xD01F      	BRA         L_can_write314
;lib_can.h,596 :: 		transmisor = &TXB0CON;
0x3378	0x0E40      	MOVLW       TXB0CON
0x337A	0x0105      	MOVLB       5
0x337C	0x6F60      	MOVWF       can_write_transmisor_L0, 1
0x337E	0x0E0F      	MOVLW       hi_addr(TXB0CON)
0x3380	0x6F61      	MOVWF       can_write_transmisor_L0+1, 1
;lib_can.h,597 :: 		mascara = &TXB0EIDL;
0x3382	0x0E44      	MOVLW       TXB0EIDL
0x3384	0x6F62      	MOVWF       can_write_mascara_L0, 1
0x3386	0x0E0F      	MOVLW       hi_addr(TXB0EIDL)
0x3388	0x6F63      	MOVWF       can_write_mascara_L0+1, 1
;lib_can.h,598 :: 		regLen = &TXB0DLC;
0x338A	0x0E45      	MOVLW       TXB0DLC
0x338C	0x6F64      	MOVWF       can_write_regLen_L0, 1
0x338E	0x0E0F      	MOVLW       hi_addr(TXB0DLC)
0x3390	0x6F65      	MOVWF       can_write_regLen_L0+1, 1
;lib_can.h,599 :: 		buffer = &TXB0D0;
0x3392	0x0E46      	MOVLW       TXB0D0
0x3394	0x6F66      	MOVWF       can_write_buffer_L0, 1
0x3396	0x0E0F      	MOVLW       hi_addr(TXB0D0)
0x3398	0x6F67      	MOVWF       can_write_buffer_L0+1, 1
;lib_can.h,600 :: 		ref = can.mode == CAN_MODE_LEGACY? 0x08:0x03;
0x339A	0x0103      	MOVLB       3
0x339C	0x51CD      	MOVF        _can+14, 0, 1
0x339E	0x0A00      	XORLW       0
0x33A0	0xE104      	BNZ         L_can_write315
0x33A2	0x0E08      	MOVLW       8
0x33A4	0x0105      	MOVLB       5
0x33A6	0x6F5D      	MOVWF       ?FLOC___can_writeT1132, 1
0x33A8	0xD003      	BRA         L_can_write316
L_can_write315:
0x33AA	0x0105      	MOVLB       5
0x33AC	0x0E03      	MOVLW       3
0x33AE	0x6F5D      	MOVWF       ?FLOC___can_writeT1132, 1
L_can_write316:
0x33B0	0xF568C55D  	MOVFF       ?FLOC___can_writeT1132, can_write_ref_L0
;lib_can.h,601 :: 		}else if(!TXB1CON.TXREQ){
0x33B4	0xD04A      	BRA         L_can_write317
L_can_write314:
0x33B6	0x010F      	MOVLB       15
0x33B8	0xB730      	BTFSC       TXB1CON, 3, 1
0x33BA	0xD01F      	BRA         L_can_write318
;lib_can.h,602 :: 		transmisor = &TXB1CON;
0x33BC	0x0E30      	MOVLW       TXB1CON
0x33BE	0x0105      	MOVLB       5
0x33C0	0x6F60      	MOVWF       can_write_transmisor_L0, 1
0x33C2	0x0E0F      	MOVLW       hi_addr(TXB1CON)
0x33C4	0x6F61      	MOVWF       can_write_transmisor_L0+1, 1
;lib_can.h,603 :: 		mascara = &TXB1EIDL;
0x33C6	0x0E34      	MOVLW       TXB1EIDL
0x33C8	0x6F62      	MOVWF       can_write_mascara_L0, 1
0x33CA	0x0E0F      	MOVLW       hi_addr(TXB1EIDL)
0x33CC	0x6F63      	MOVWF       can_write_mascara_L0+1, 1
;lib_can.h,604 :: 		regLen = &TXB1DLC;
0x33CE	0x0E35      	MOVLW       TXB1DLC
0x33D0	0x6F64      	MOVWF       can_write_regLen_L0, 1
0x33D2	0x0E0F      	MOVLW       hi_addr(TXB1DLC)
0x33D4	0x6F65      	MOVWF       can_write_regLen_L0+1, 1
;lib_can.h,605 :: 		buffer = &TXB1D0;
0x33D6	0x0E36      	MOVLW       TXB1D0
0x33D8	0x6F66      	MOVWF       can_write_buffer_L0, 1
0x33DA	0x0E0F      	MOVLW       hi_addr(TXB1D0)
0x33DC	0x6F67      	MOVWF       can_write_buffer_L0+1, 1
;lib_can.h,606 :: 		ref = can.mode == CAN_MODE_LEGACY? 0x06:0x04;
0x33DE	0x0103      	MOVLB       3
0x33E0	0x51CD      	MOVF        _can+14, 0, 1
0x33E2	0x0A00      	XORLW       0
0x33E4	0xE104      	BNZ         L_can_write319
0x33E6	0x0E06      	MOVLW       6
0x33E8	0x0105      	MOVLB       5
0x33EA	0x6F5E      	MOVWF       ?FLOC___can_writeT1140, 1
0x33EC	0xD003      	BRA         L_can_write320
L_can_write319:
0x33EE	0x0105      	MOVLB       5
0x33F0	0x0E04      	MOVLW       4
0x33F2	0x6F5E      	MOVWF       ?FLOC___can_writeT1140, 1
L_can_write320:
0x33F4	0xF568C55E  	MOVFF       ?FLOC___can_writeT1140, can_write_ref_L0
;lib_can.h,607 :: 		}else if(!TXB2CON.TXREQ){
0x33F8	0xD028      	BRA         L_can_write321
L_can_write318:
0x33FA	0x010F      	MOVLB       15
0x33FC	0xB720      	BTFSC       TXB2CON, 3, 1
0x33FE	0xD01F      	BRA         L_can_write322
;lib_can.h,608 :: 		transmisor = &TXB2CON;
0x3400	0x0E20      	MOVLW       TXB2CON
0x3402	0x0105      	MOVLB       5
0x3404	0x6F60      	MOVWF       can_write_transmisor_L0, 1
0x3406	0x0E0F      	MOVLW       hi_addr(TXB2CON)
0x3408	0x6F61      	MOVWF       can_write_transmisor_L0+1, 1
;lib_can.h,609 :: 		mascara = &TXB2EIDL;
0x340A	0x0E24      	MOVLW       TXB2EIDL
0x340C	0x6F62      	MOVWF       can_write_mascara_L0, 1
0x340E	0x0E0F      	MOVLW       hi_addr(TXB2EIDL)
0x3410	0x6F63      	MOVWF       can_write_mascara_L0+1, 1
;lib_can.h,610 :: 		regLen = &TXB2DLC;
0x3412	0x0E25      	MOVLW       TXB2DLC
0x3414	0x6F64      	MOVWF       can_write_regLen_L0, 1
0x3416	0x0E0F      	MOVLW       hi_addr(TXB2DLC)
0x3418	0x6F65      	MOVWF       can_write_regLen_L0+1, 1
;lib_can.h,611 :: 		buffer = &TXB2D0;
0x341A	0x0E26      	MOVLW       TXB2D0
0x341C	0x6F66      	MOVWF       can_write_buffer_L0, 1
0x341E	0x0E0F      	MOVLW       hi_addr(TXB2D0)
0x3420	0x6F67      	MOVWF       can_write_buffer_L0+1, 1
;lib_can.h,612 :: 		ref = can.mode == CAN_MODE_LEGACY? 0x04:0x05;
0x3422	0x0103      	MOVLB       3
0x3424	0x51CD      	MOVF        _can+14, 0, 1
0x3426	0x0A00      	XORLW       0
0x3428	0xE104      	BNZ         L_can_write323
0x342A	0x0E04      	MOVLW       4
0x342C	0x0105      	MOVLB       5
0x342E	0x6F5F      	MOVWF       ?FLOC___can_writeT1148, 1
0x3430	0xD003      	BRA         L_can_write324
L_can_write323:
0x3432	0x0105      	MOVLB       5
0x3434	0x0E05      	MOVLW       5
0x3436	0x6F5F      	MOVWF       ?FLOC___can_writeT1148, 1
L_can_write324:
0x3438	0xF568C55F  	MOVFF       ?FLOC___can_writeT1148, can_write_ref_L0
;lib_can.h,613 :: 		}else if(can.mode == CAN_MODE_LEGACY){
0x343C	0xD006      	BRA         L_can_write325
L_can_write322:
0x343E	0x0103      	MOVLB       3
0x3440	0x51CD      	MOVF        _can+14, 0, 1
0x3442	0x0A00      	XORLW       0
0x3444	0xE102      	BNZ         L_can_write326
;lib_can.h,614 :: 		return false;  //No encontro a nadie para enviar en modo legacy
0x3446	0x6A00      	CLRF        R0 
0x3448	0xD105      	BRA         L_end_can_write
;lib_can.h,615 :: 		}
L_can_write326:
L_can_write325:
L_can_write321:
L_can_write317:
0x344A	0x0103      	MOVLB       3
;lib_can.h,617 :: 		if(can.mode == CAN_MODE_LEGACY){
0x344C	0x51CD      	MOVF        _can+14, 0, 1
0x344E	0x0A00      	XORLW       0
0x3450	0xE106      	BNZ         L_can_write327
;lib_can.h,619 :: 		CANCON &= 0xF1;
0x3452	0x0EF1      	MOVLW       241
0x3454	0x166F      	ANDWF       CANCON, 1 
;lib_can.h,620 :: 		CANCON |= ref;   //BITS WIN
0x3456	0x0105      	MOVLB       5
0x3458	0x5168      	MOVF        can_write_ref_L0, 0, 1
0x345A	0x126F      	IORWF       CANCON, 1 
;lib_can.h,621 :: 		}else{  //MODO 1 Y 2
0x345C	0xD0A3      	BRA         L_can_write328
L_can_write327:
;lib_can.h,623 :: 		if(BSEL0.B0TXEN && !B0CON.TXREQ){
0x345E	0x010D      	MOVLB       13
0x3460	0xA5F8      	BTFSS       BSEL0, 2, 1
0x3462	0xD017      	BRA         L_can_write331
0x3464	0x010E      	MOVLB       14
0x3466	0xB720      	BTFSC       B0CON, 3, 1
0x3468	0xD014      	BRA         L_can_write331
L__can_write948:
;lib_can.h,624 :: 		transmisor = &B0CON;
0x346A	0x0E20      	MOVLW       B0CON
0x346C	0x0105      	MOVLB       5
0x346E	0x6F60      	MOVWF       can_write_transmisor_L0, 1
0x3470	0x0E0E      	MOVLW       hi_addr(B0CON)
0x3472	0x6F61      	MOVWF       can_write_transmisor_L0+1, 1
;lib_can.h,625 :: 		mascara = &B0EIDL;
0x3474	0x0E24      	MOVLW       B0EIDL
0x3476	0x6F62      	MOVWF       can_write_mascara_L0, 1
0x3478	0x0E0E      	MOVLW       hi_addr(B0EIDL)
0x347A	0x6F63      	MOVWF       can_write_mascara_L0+1, 1
;lib_can.h,626 :: 		regLen = &B0DLC;
0x347C	0x0E25      	MOVLW       B0DLC
0x347E	0x6F64      	MOVWF       can_write_regLen_L0, 1
0x3480	0x0E0E      	MOVLW       hi_addr(B0DLC)
0x3482	0x6F65      	MOVWF       can_write_regLen_L0+1, 1
;lib_can.h,627 :: 		buffer = &B0D0;
0x3484	0x0E26      	MOVLW       B0D0
0x3486	0x6F66      	MOVWF       can_write_buffer_L0, 1
0x3488	0x0E0E      	MOVLW       hi_addr(B0D0)
0x348A	0x6F67      	MOVWF       can_write_buffer_L0+1, 1
;lib_can.h,628 :: 		ref = 0x12;
0x348C	0x0E12      	MOVLW       18
0x348E	0x6F68      	MOVWF       can_write_ref_L0, 1
;lib_can.h,629 :: 		}else if(BSEL0.B1TXEN && !B1CON.TXREQ){
0x3490	0xD084      	BRA         L_can_write332
L_can_write331:
0x3492	0x010D      	MOVLB       13
0x3494	0xA7F8      	BTFSS       BSEL0, 3, 1
0x3496	0xD017      	BRA         L_can_write335
0x3498	0x010E      	MOVLB       14
0x349A	0xB730      	BTFSC       B1CON, 3, 1
0x349C	0xD014      	BRA         L_can_write335
L__can_write947:
;lib_can.h,630 :: 		transmisor = &B1CON;
0x349E	0x0E30      	MOVLW       B1CON
0x34A0	0x0105      	MOVLB       5
0x34A2	0x6F60      	MOVWF       can_write_transmisor_L0, 1
0x34A4	0x0E0E      	MOVLW       hi_addr(B1CON)
0x34A6	0x6F61      	MOVWF       can_write_transmisor_L0+1, 1
;lib_can.h,631 :: 		mascara = &B1EIDL;
0x34A8	0x0E34      	MOVLW       B1EIDL
0x34AA	0x6F62      	MOVWF       can_write_mascara_L0, 1
0x34AC	0x0E0E      	MOVLW       hi_addr(B1EIDL)
0x34AE	0x6F63      	MOVWF       can_write_mascara_L0+1, 1
;lib_can.h,632 :: 		regLen = &B1DLC;
0x34B0	0x0E35      	MOVLW       B1DLC
0x34B2	0x6F64      	MOVWF       can_write_regLen_L0, 1
0x34B4	0x0E0E      	MOVLW       hi_addr(B1DLC)
0x34B6	0x6F65      	MOVWF       can_write_regLen_L0+1, 1
;lib_can.h,633 :: 		buffer = &B1D0;
0x34B8	0x0E36      	MOVLW       B1D0
0x34BA	0x6F66      	MOVWF       can_write_buffer_L0, 1
0x34BC	0x0E0E      	MOVLW       hi_addr(B1D0)
0x34BE	0x6F67      	MOVWF       can_write_buffer_L0+1, 1
;lib_can.h,634 :: 		ref = 0x13;
0x34C0	0x0E13      	MOVLW       19
0x34C2	0x6F68      	MOVWF       can_write_ref_L0, 1
;lib_can.h,635 :: 		}else if(BSEL0.B2TXEN && !B2CON.TXREQ){
0x34C4	0xD06A      	BRA         L_can_write336
L_can_write335:
0x34C6	0x010D      	MOVLB       13
0x34C8	0xA9F8      	BTFSS       BSEL0, 4, 1
0x34CA	0xD017      	BRA         L_can_write339
0x34CC	0x010E      	MOVLB       14
0x34CE	0xB740      	BTFSC       B2CON, 3, 1
0x34D0	0xD014      	BRA         L_can_write339
L__can_write946:
;lib_can.h,636 :: 		transmisor = &B2CON;
0x34D2	0x0E40      	MOVLW       B2CON
0x34D4	0x0105      	MOVLB       5
0x34D6	0x6F60      	MOVWF       can_write_transmisor_L0, 1
0x34D8	0x0E0E      	MOVLW       hi_addr(B2CON)
0x34DA	0x6F61      	MOVWF       can_write_transmisor_L0+1, 1
;lib_can.h,637 :: 		mascara = &B2EIDL;
0x34DC	0x0E44      	MOVLW       B2EIDL
0x34DE	0x6F62      	MOVWF       can_write_mascara_L0, 1
0x34E0	0x0E0E      	MOVLW       hi_addr(B2EIDL)
0x34E2	0x6F63      	MOVWF       can_write_mascara_L0+1, 1
;lib_can.h,638 :: 		regLen = &B2DLC;
0x34E4	0x0E45      	MOVLW       B2DLC
0x34E6	0x6F64      	MOVWF       can_write_regLen_L0, 1
0x34E8	0x0E0E      	MOVLW       hi_addr(B2DLC)
0x34EA	0x6F65      	MOVWF       can_write_regLen_L0+1, 1
;lib_can.h,639 :: 		buffer = &B2D0;
0x34EC	0x0E46      	MOVLW       B2D0
0x34EE	0x6F66      	MOVWF       can_write_buffer_L0, 1
0x34F0	0x0E0E      	MOVLW       hi_addr(B2D0)
0x34F2	0x6F67      	MOVWF       can_write_buffer_L0+1, 1
;lib_can.h,640 :: 		ref = 0x14;
0x34F4	0x0E14      	MOVLW       20
0x34F6	0x6F68      	MOVWF       can_write_ref_L0, 1
;lib_can.h,641 :: 		}else if(BSEL0.B3TXEN && !B3CON.TXREQ){
0x34F8	0xD050      	BRA         L_can_write340
L_can_write339:
0x34FA	0x010D      	MOVLB       13
0x34FC	0xABF8      	BTFSS       BSEL0, 5, 1
0x34FE	0xD017      	BRA         L_can_write343
0x3500	0x010E      	MOVLB       14
0x3502	0xB750      	BTFSC       B3CON, 3, 1
0x3504	0xD014      	BRA         L_can_write343
L__can_write945:
;lib_can.h,642 :: 		transmisor = &B3CON;
0x3506	0x0E50      	MOVLW       B3CON
0x3508	0x0105      	MOVLB       5
0x350A	0x6F60      	MOVWF       can_write_transmisor_L0, 1
0x350C	0x0E0E      	MOVLW       hi_addr(B3CON)
0x350E	0x6F61      	MOVWF       can_write_transmisor_L0+1, 1
;lib_can.h,643 :: 		mascara = &B3EIDL;
0x3510	0x0E54      	MOVLW       B3EIDL
0x3512	0x6F62      	MOVWF       can_write_mascara_L0, 1
0x3514	0x0E0E      	MOVLW       hi_addr(B3EIDL)
0x3516	0x6F63      	MOVWF       can_write_mascara_L0+1, 1
;lib_can.h,644 :: 		regLen = &B3DLC;
0x3518	0x0E55      	MOVLW       B3DLC
0x351A	0x6F64      	MOVWF       can_write_regLen_L0, 1
0x351C	0x0E0E      	MOVLW       hi_addr(B3DLC)
0x351E	0x6F65      	MOVWF       can_write_regLen_L0+1, 1
;lib_can.h,645 :: 		buffer = &B3D0;
0x3520	0x0E56      	MOVLW       B3D0
0x3522	0x6F66      	MOVWF       can_write_buffer_L0, 1
0x3524	0x0E0E      	MOVLW       hi_addr(B3D0)
0x3526	0x6F67      	MOVWF       can_write_buffer_L0+1, 1
;lib_can.h,646 :: 		ref = 0x15;
0x3528	0x0E15      	MOVLW       21
0x352A	0x6F68      	MOVWF       can_write_ref_L0, 1
;lib_can.h,647 :: 		}else if(BSEL0.B4TXEN && !B4CON.TXREQ){
0x352C	0xD036      	BRA         L_can_write344
L_can_write343:
0x352E	0x010D      	MOVLB       13
0x3530	0xADF8      	BTFSS       BSEL0, 6, 1
0x3532	0xD017      	BRA         L_can_write347
0x3534	0x010E      	MOVLB       14
0x3536	0xB760      	BTFSC       B4CON, 3, 1
0x3538	0xD014      	BRA         L_can_write347
L__can_write944:
;lib_can.h,648 :: 		transmisor = &B4CON;
0x353A	0x0E60      	MOVLW       B4CON
0x353C	0x0105      	MOVLB       5
0x353E	0x6F60      	MOVWF       can_write_transmisor_L0, 1
0x3540	0x0E0E      	MOVLW       hi_addr(B4CON)
0x3542	0x6F61      	MOVWF       can_write_transmisor_L0+1, 1
;lib_can.h,649 :: 		mascara = &B4EIDL;
0x3544	0x0E64      	MOVLW       B4EIDL
0x3546	0x6F62      	MOVWF       can_write_mascara_L0, 1
0x3548	0x0E0E      	MOVLW       hi_addr(B4EIDL)
0x354A	0x6F63      	MOVWF       can_write_mascara_L0+1, 1
;lib_can.h,650 :: 		regLen = &B4DLC;
0x354C	0x0E65      	MOVLW       B4DLC
0x354E	0x6F64      	MOVWF       can_write_regLen_L0, 1
0x3550	0x0E0E      	MOVLW       hi_addr(B4DLC)
0x3552	0x6F65      	MOVWF       can_write_regLen_L0+1, 1
;lib_can.h,651 :: 		buffer = &B4D0;
0x3554	0x0E66      	MOVLW       B4D0
0x3556	0x6F66      	MOVWF       can_write_buffer_L0, 1
0x3558	0x0E0E      	MOVLW       hi_addr(B4D0)
0x355A	0x6F67      	MOVWF       can_write_buffer_L0+1, 1
;lib_can.h,652 :: 		ref = 0x16;
0x355C	0x0E16      	MOVLW       22
0x355E	0x6F68      	MOVWF       can_write_ref_L0, 1
;lib_can.h,653 :: 		}else if(BSEL0.B5TXEN && !B5CON.TXREQ){
0x3560	0xD01C      	BRA         L_can_write348
L_can_write347:
0x3562	0x010D      	MOVLB       13
0x3564	0xAFF8      	BTFSS       BSEL0, 7, 1
0x3566	0xD017      	BRA         L_can_write351
0x3568	0x010E      	MOVLB       14
0x356A	0xB770      	BTFSC       B5CON, 3, 1
0x356C	0xD014      	BRA         L_can_write351
L__can_write943:
;lib_can.h,654 :: 		transmisor = &B5CON;
0x356E	0x0E70      	MOVLW       B5CON
0x3570	0x0105      	MOVLB       5
0x3572	0x6F60      	MOVWF       can_write_transmisor_L0, 1
0x3574	0x0E0E      	MOVLW       hi_addr(B5CON)
0x3576	0x6F61      	MOVWF       can_write_transmisor_L0+1, 1
;lib_can.h,655 :: 		mascara = &B5EIDL;
0x3578	0x0E74      	MOVLW       B5EIDL
0x357A	0x6F62      	MOVWF       can_write_mascara_L0, 1
0x357C	0x0E0E      	MOVLW       hi_addr(B5EIDL)
0x357E	0x6F63      	MOVWF       can_write_mascara_L0+1, 1
;lib_can.h,656 :: 		regLen = &B5DLC;
0x3580	0x0E75      	MOVLW       B5DLC
0x3582	0x6F64      	MOVWF       can_write_regLen_L0, 1
0x3584	0x0E0E      	MOVLW       hi_addr(B5DLC)
0x3586	0x6F65      	MOVWF       can_write_regLen_L0+1, 1
;lib_can.h,657 :: 		buffer = &B5D0;
0x3588	0x0E76      	MOVLW       B5D0
0x358A	0x6F66      	MOVWF       can_write_buffer_L0, 1
0x358C	0x0E0E      	MOVLW       hi_addr(B5D0)
0x358E	0x6F67      	MOVWF       can_write_buffer_L0+1, 1
;lib_can.h,658 :: 		ref = 0x17;
0x3590	0x0E17      	MOVLW       23
0x3592	0x6F68      	MOVWF       can_write_ref_L0, 1
;lib_can.h,659 :: 		}else{
0x3594	0xD002      	BRA         L_can_write352
L_can_write351:
;lib_can.h,660 :: 		return false;
0x3596	0x6A00      	CLRF        R0 
0x3598	0xD05D      	BRA         L_end_can_write
;lib_can.h,661 :: 		}
L_can_write352:
L_can_write348:
L_can_write344:
L_can_write340:
L_can_write336:
L_can_write332:
0x359A	0x0105      	MOVLB       5
;lib_can.h,663 :: 		ECANCON &= 0xE0;
0x359C	0x0EE0      	MOVLW       224
0x359E	0x1677      	ANDWF       ECANCON, 1 
;lib_can.h,664 :: 		ECANCON |= ref;     //BITS EWIN
0x35A0	0x5168      	MOVF        can_write_ref_L0, 0, 1
0x35A2	0x1277      	IORWF       ECANCON, 1 
;lib_can.h,665 :: 		}
L_can_write328:
;lib_can.h,668 :: 		(*transmisor).B0 = priority.B0;  //BIT TXPRI0
0x35A4	0xFFE1C560  	MOVFF       can_write_transmisor_L0, FSR1L
0x35A8	0xFFE2C561  	MOVFF       can_write_transmisor_L0+1, FSR1H
0x35AC	0xB15B      	BTFSC       FARG_can_write_priority, 0, 1
0x35AE	0xD002      	BRA         L__can_write1153
0x35B0	0x90E6      	BCF         POSTINC1, 0 
0x35B2	0xD001      	BRA         L__can_write1154
L__can_write1153:
0x35B4	0x80E6      	BSF         POSTINC1, 0 
L__can_write1154:
;lib_can.h,669 :: 		(*transmisor).B1 = priority.B1;  //BIT TXPRI1
0x35B6	0xFFE1C560  	MOVFF       can_write_transmisor_L0, FSR1L
0x35BA	0xFFE2C561  	MOVFF       can_write_transmisor_L0+1, FSR1H
0x35BE	0xB35B      	BTFSC       FARG_can_write_priority, 1, 1
0x35C0	0xD002      	BRA         L__can_write1155
0x35C2	0x92E6      	BCF         POSTINC1, 1 
0x35C4	0xD001      	BRA         L__can_write1156
L__can_write1155:
0x35C6	0x82E6      	BSF         POSTINC1, 1 
L__can_write1156:
;lib_can.h,671 :: 		can_set_id(mascara, id);
0x35C8	0xF578C562  	MOVFF       can_write_mascara_L0, FARG_can_set_id_address
0x35CC	0xF579C563  	MOVFF       can_write_mascara_L0+1, FARG_can_set_id_address+1
0x35D0	0xF57AC554  	MOVFF       FARG_can_write_id, FARG_can_set_id_value
0x35D4	0xF57BC555  	MOVFF       FARG_can_write_id+1, FARG_can_set_id_value+1
0x35D8	0xF57CC556  	MOVFF       FARG_can_write_id+2, FARG_can_set_id_value+2
0x35DC	0xF57DC557  	MOVFF       FARG_can_write_id+3, FARG_can_set_id_value+3
0x35E0	0xF010ECAF  	CALL        _can_set_id, 0
;lib_can.h,673 :: 		*regLen = size;
0x35E4	0xFFE1C564  	MOVFF       can_write_regLen_L0, FSR1L
0x35E8	0xFFE2C565  	MOVFF       can_write_regLen_L0+1, FSR1H
0x35EC	0xFFE6C55A  	MOVFF       FARG_can_write_size, POSTINC1
;lib_can.h,674 :: 		(*regLen).B6 = rtr; //TXRTR Solicitud remota del receptor
0x35F0	0xFFE1C564  	MOVFF       can_write_regLen_L0, FSR1L
0x35F4	0xFFE2C565  	MOVFF       can_write_regLen_L0+1, FSR1H
0x35F8	0xB15C      	BTFSC       FARG_can_write_rtr, 0, 1
0x35FA	0xD002      	BRA         L__can_write1157
0x35FC	0x9CE6      	BCF         POSTINC1, 6 
0x35FE	0xD001      	BRA         L__can_write1158
L__can_write1157:
0x3600	0x8CE6      	BSF         POSTINC1, 6 
L__can_write1158:
;lib_can.h,676 :: 		for(ref = 0; ref < size && ref < 8; ref++)
0x3602	0x6B68      	CLRF        can_write_ref_L0, 1
L_can_write353:
0x3604	0x515A      	MOVF        FARG_can_write_size, 0, 1
0x3606	0x5D68      	SUBWF       can_write_ref_L0, 0, 1
0x3608	0xE213      	BC          L_can_write354
0x360A	0x0E08      	MOVLW       8
0x360C	0x5D68      	SUBWF       can_write_ref_L0, 0, 1
0x360E	0xE210      	BC          L_can_write354
L__can_write942:
;lib_can.h,677 :: 		buffer[ref] = datos[ref];
0x3610	0x5168      	MOVF        can_write_ref_L0, 0, 1
0x3612	0x2566      	ADDWF       can_write_buffer_L0, 0, 1
0x3614	0x6EE1      	MOVWF       FSR1L 
0x3616	0x0E00      	MOVLW       0
0x3618	0x2167      	ADDWFC      can_write_buffer_L0+1, 0, 1
0x361A	0x6EE2      	MOVWF       FSR1H 
0x361C	0x5168      	MOVF        can_write_ref_L0, 0, 1
0x361E	0x2558      	ADDWF       FARG_can_write_datos, 0, 1
0x3620	0x6EE9      	MOVWF       FSR0L 
0x3622	0x0E00      	MOVLW       0
0x3624	0x2159      	ADDWFC      FARG_can_write_datos+1, 0, 1
0x3626	0x6EEA      	MOVWF       FSR0H 
0x3628	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
;lib_can.h,676 :: 		for(ref = 0; ref < size && ref < 8; ref++)
0x362C	0x2B68      	INCF        can_write_ref_L0, 1, 1
;lib_can.h,677 :: 		buffer[ref] = datos[ref];
0x362E	0xD7EA      	BRA         L_can_write353
L_can_write354:
;lib_can.h,679 :: 		(*transmisor).B3 = 1;  //ACTIVAR PIN TXREQ, LIMPIA BANDERAS TXABT, TXLARB y TXERR
0x3630	0xFFE1C560  	MOVFF       can_write_transmisor_L0, FSR1L
0x3634	0xFFE2C561  	MOVFF       can_write_transmisor_L0+1, FSR1H
0x3638	0x86E6      	BSF         POSTINC1, 3 
;lib_can.h,682 :: 		if(can.mode == CAN_MODE_LEGACY){
0x363A	0x0103      	MOVLB       3
0x363C	0x51CD      	MOVF        _can+14, 0, 1
0x363E	0x0A00      	XORLW       0
0x3640	0xE103      	BNZ         L_can_write358
;lib_can.h,683 :: 		CANCON &= 0xF1;
0x3642	0x0EF1      	MOVLW       241
0x3644	0x166F      	ANDWF       CANCON, 1 
;lib_can.h,684 :: 		CANCON |= 0x00;   //BITS WIN, LISTEN BUFFER0
;lib_can.h,685 :: 		}else{
0x3646	0xD004      	BRA         L_can_write359
L_can_write358:
;lib_can.h,686 :: 		ECANCON &= 0xE0;
0x3648	0x0EE0      	MOVLW       224
0x364A	0x1677      	ANDWF       ECANCON, 1 
;lib_can.h,687 :: 		ECANCON |= 0x16;  //BITS EWIN, RX0 INTERRUPT
0x364C	0x0E16      	MOVLW       22
0x364E	0x1277      	IORWF       ECANCON, 1 
;lib_can.h,688 :: 		}
L_can_write359:
;lib_can.h,690 :: 		return true;
0x3650	0x0E01      	MOVLW       1
0x3652	0x6E00      	MOVWF       R0 
;lib_can.h,691 :: 		}
L_end_can_write:
0x3654	0x0012      	RETURN      0
; end of _can_write
_can_user_guardHeartBeat:
;Validadora.c,2055 :: 		void can_user_guardHeartBeat(char idNodo){
;Validadora.c,2057 :: 		}
L_end_can_user_guardHeartBeat:
0x3656	0x0012      	RETURN      0
; end of _can_user_guardHeartBeat
_can_set_mode:
;lib_can.h,703 :: 		void can_set_mode(const char CAN_MODE){
;lib_can.h,704 :: 		char modeAct = 0;
0x3658	0x0105      	MOVLB       5
0x365A	0x6B55      	CLRF        can_set_mode_modeAct_L0, 1
;lib_can.h,706 :: 		modeAct.B0 = CANSTAT.OPMODE0;
0x365C	0xBA6E      	BTFSC       CANSTAT, 5 
0x365E	0xD002      	BRA         L__can_set_mode1173
0x3660	0x9155      	BCF         can_set_mode_modeAct_L0, 0, 1
0x3662	0xD001      	BRA         L__can_set_mode1174
L__can_set_mode1173:
0x3664	0x8155      	BSF         can_set_mode_modeAct_L0, 0, 1
L__can_set_mode1174:
;lib_can.h,707 :: 		modeAct.B1 = CANSTAT.OPMODE1;
0x3666	0xBC6E      	BTFSC       CANSTAT, 6 
0x3668	0xD002      	BRA         L__can_set_mode1175
0x366A	0x9355      	BCF         can_set_mode_modeAct_L0, 1, 1
0x366C	0xD001      	BRA         L__can_set_mode1176
L__can_set_mode1175:
0x366E	0x8355      	BSF         can_set_mode_modeAct_L0, 1, 1
L__can_set_mode1176:
;lib_can.h,708 :: 		modeAct.B2 = CANSTAT.OPMODE2;
0x3670	0xBE6E      	BTFSC       CANSTAT, 7 
0x3672	0xD002      	BRA         L__can_set_mode1177
0x3674	0x9555      	BCF         can_set_mode_modeAct_L0, 2, 1
0x3676	0xD001      	BRA         L__can_set_mode1178
L__can_set_mode1177:
0x3678	0x8555      	BSF         can_set_mode_modeAct_L0, 2, 1
L__can_set_mode1178:
;lib_can.h,710 :: 		can_set_operation(CAN_OPERATION_CONFIG);  //Se debe poner se en modo config
0x367A	0x0E04      	MOVLW       4
0x367C	0x6F78      	MOVWF       FARG_can_set_operation_CAN_OPERATION, 1
0x367E	0xF016ECAB  	CALL        _can_set_operation, 0
;lib_can.h,711 :: 		ECANCON.MDSEL0 = CAN_MODE.B0;
0x3682	0xB154      	BTFSC       FARG_can_set_mode_CAN_MODE, 0, 1
0x3684	0xD002      	BRA         L__can_set_mode1179
0x3686	0x9C77      	BCF         ECANCON, 6 
0x3688	0xD001      	BRA         L__can_set_mode1180
L__can_set_mode1179:
0x368A	0x8C77      	BSF         ECANCON, 6 
L__can_set_mode1180:
;lib_can.h,712 :: 		ECANCON.MDSEL1 = CAN_MODE.B1;
0x368C	0xB354      	BTFSC       FARG_can_set_mode_CAN_MODE, 1, 1
0x368E	0xD002      	BRA         L__can_set_mode1181
0x3690	0x9E77      	BCF         ECANCON, 7 
0x3692	0xD001      	BRA         L__can_set_mode1182
L__can_set_mode1181:
0x3694	0x8E77      	BSF         ECANCON, 7 
L__can_set_mode1182:
;lib_can.h,713 :: 		can_set_operation(modeAct);
0x3696	0xF578C555  	MOVFF       can_set_mode_modeAct_L0, FARG_can_set_operation_CAN_OPERATION
0x369A	0xF016ECAB  	CALL        _can_set_operation, 0
;lib_can.h,714 :: 		can.mode = CAN_MODE;
0x369E	0xF3CDC554  	MOVFF       FARG_can_set_mode_CAN_MODE, _can+14
;lib_can.h,715 :: 		}
L_end_can_set_mode:
0x36A2	0x0012      	RETURN      0
; end of _can_set_mode
_Soft_I2C_Init:
;__Lib_SoftI2C.c,68 :: 		
;__Lib_SoftI2C.c,74 :: 		
0x36A4	0x8296      	BSF         Soft_I2C_Scl_Direction, BitPos(Soft_I2C_Scl_Direction+0) 
;__Lib_SoftI2C.c,75 :: 		
0x36A6	0x8C95      	BSF         Soft_I2C_Sda_Direction, BitPos(Soft_I2C_Sda_Direction+0) 
;__Lib_SoftI2C.c,77 :: 		
0x36A8	0x0103      	MOVLB       3
0x36AA	0x93BC      	BCF         __Lib_SoftI2C___StopWaiting, BitPos(__Lib_SoftI2C___StopWaiting+0), 1
;__Lib_SoftI2C.c,78 :: 		
L_Soft_I2C_Init0:
0x36AC	0xB284      	BTFSC       Soft_I2C_Scl, BitPos(Soft_I2C_Scl+0) 
0x36AE	0xD004      	BRA         L_Soft_I2C_Init1
;__Lib_SoftI2C.c,79 :: 		
0x36B0	0xA3BC      	BTFSS       __Lib_SoftI2C___StopWaiting, BitPos(__Lib_SoftI2C___StopWaiting+0), 1
0x36B2	0xD001      	BRA         L_Soft_I2C_Init2
;__Lib_SoftI2C.c,80 :: 		
0x36B4	0xD001      	BRA         L_Soft_I2C_Init1
L_Soft_I2C_Init2:
0x36B6	0xD7FA      	BRA         L_Soft_I2C_Init0
L_Soft_I2C_Init1:
;__Lib_SoftI2C.c,82 :: 		
L_end_Soft_I2C_Init:
0x36B8	0x0012      	RETURN      0
; end of _Soft_I2C_Init
_string_cmpn:
;string.h,134 :: 		bool string_cmpn(char *text1, char *text2, char bytes){
;string.h,137 :: 		for(cont = 0; cont < bytes; cont++){
0x36BA	0x6A01      	CLRF        R1 
L_string_cmpn48:
0x36BC	0x0105      	MOVLB       5
0x36BE	0x5158      	MOVF        FARG_string_cmpn_bytes, 0, 1
0x36C0	0x5C01      	SUBWF       R1, 0 
0x36C2	0xE213      	BC          L_string_cmpn49
;string.h,138 :: 		if(text1[cont] != text2[cont])
0x36C4	0x5001      	MOVF        R1, 0 
0x36C6	0x2554      	ADDWF       FARG_string_cmpn_text1, 0, 1
0x36C8	0x6EE9      	MOVWF       FSR0L 
0x36CA	0x0E00      	MOVLW       0
0x36CC	0x2155      	ADDWFC      FARG_string_cmpn_text1+1, 0, 1
0x36CE	0x6EEA      	MOVWF       FSR0H 
0x36D0	0x5001      	MOVF        R1, 0 
0x36D2	0x2556      	ADDWF       FARG_string_cmpn_text2, 0, 1
0x36D4	0x6ED9      	MOVWF       FSR2L 
0x36D6	0x0E00      	MOVLW       0
0x36D8	0x2157      	ADDWFC      FARG_string_cmpn_text2+1, 0, 1
0x36DA	0x6EDA      	MOVWF       FSR2H 
0x36DC	0x50EE      	MOVF        POSTINC0, 0 
0x36DE	0x18DE      	XORWF       POSTINC2, 0 
0x36E0	0xE002      	BZ          L_string_cmpn51
;string.h,139 :: 		return false;
0x36E2	0x6A00      	CLRF        R0 
0x36E4	0xD004      	BRA         L_end_string_cmpn
L_string_cmpn51:
;string.h,137 :: 		for(cont = 0; cont < bytes; cont++){
0x36E6	0x2A01      	INCF        R1, 1 
;string.h,140 :: 		}
0x36E8	0xD7E9      	BRA         L_string_cmpn48
L_string_cmpn49:
;string.h,142 :: 		return true;
0x36EA	0x0E01      	MOVLW       1
0x36EC	0x6E00      	MOVWF       R0 
;string.h,143 :: 		}
L_end_string_cmpn:
0x36EE	0x0012      	RETURN      0
; end of _string_cmpn
_can_set_baud:
;lib_can.h,395 :: 		void can_set_baud(unsigned int speed_us){
;lib_can.h,408 :: 		speed_us *= Clock_Mhz();
0x36F0	0xF000C554  	MOVFF       FARG_can_set_baud_speed_us, R0
0x36F4	0xF001C555  	MOVFF       FARG_can_set_baud_speed_us+1, R1
0x36F8	0x0E0A      	MOVLW       10
0x36FA	0x6E04      	MOVWF       R4 
0x36FC	0x0E00      	MOVLW       0
0x36FE	0x6E05      	MOVWF       R5 
0x3700	0xF002ECC0  	CALL        _Mul_16X16_U, 0
0x3704	0xF554C000  	MOVFF       R0, FARG_can_set_baud_speed_us
0x3708	0xF555C001  	MOVFF       R1, FARG_can_set_baud_speed_us+1
;lib_can.h,409 :: 		speed_us /= 2;
0x370C	0xF554C000  	MOVFF       R0, FARG_can_set_baud_speed_us
0x3710	0xF555C001  	MOVFF       R1, FARG_can_set_baud_speed_us+1
0x3714	0x0105      	MOVLB       5
0x3716	0x3355      	RRCF        FARG_can_set_baud_speed_us+1, 1, 1
0x3718	0x3354      	RRCF        FARG_can_set_baud_speed_us, 1, 1
0x371A	0x9F55      	BCF         FARG_can_set_baud_speed_us+1, 7, 1
;lib_can.h,410 :: 		for(Tqp = 25; Tqp >= 8; Tqp--){
0x371C	0x0E19      	MOVLW       25
0x371E	0x6F56      	MOVWF       can_set_baud_Tqp_L0, 1
L_can_set_baud247:
0x3720	0x0E08      	MOVLW       8
0x3722	0x5D56      	SUBWF       can_set_baud_Tqp_L0, 0, 1
0x3724	0xE32F      	BNC         L_can_set_baud248
;lib_can.h,411 :: 		if(speed_us % Tqp == 0){
0x3726	0xF004C556  	MOVFF       can_set_baud_Tqp_L0, R4
0x372A	0x0E00      	MOVLW       0
0x372C	0x6E05      	MOVWF       R5 
0x372E	0xF000C554  	MOVFF       FARG_can_set_baud_speed_us, R0
0x3732	0xF001C555  	MOVFF       FARG_can_set_baud_speed_us+1, R1
0x3736	0xF00FECB2  	CALL        _Div_16X16_U, 0
0x373A	0xF000C008  	MOVFF       R8, R0
0x373E	0xF001C009  	MOVFF       R9, R1
0x3742	0x0E00      	MOVLW       0
0x3744	0x1801      	XORWF       R1, 0 
0x3746	0xE102      	BNZ         L__can_set_baud1130
0x3748	0x0E00      	MOVLW       0
0x374A	0x1800      	XORWF       R0, 0 
L__can_set_baud1130:
0x374C	0xE119      	BNZ         L_can_set_baud250
;lib_can.h,412 :: 		pre = speed_us/Tqp;
0x374E	0xF004C556  	MOVFF       can_set_baud_Tqp_L0, R4
0x3752	0x0E00      	MOVLW       0
0x3754	0x6E05      	MOVWF       R5 
0x3756	0xF000C554  	MOVFF       FARG_can_set_baud_speed_us, R0
0x375A	0xF001C555  	MOVFF       FARG_can_set_baud_speed_us+1, R1
0x375E	0xF00FECB2  	CALL        _Div_16X16_U, 0
0x3762	0xF557C000  	MOVFF       R0, can_set_baud_pre_L0
;lib_can.h,413 :: 		if(pre >= 1 && pre <= 64){
0x3766	0x0E01      	MOVLW       1
0x3768	0x5C00      	SUBWF       R0, 0 
0x376A	0xE30A      	BNC         L_can_set_baud253
0x376C	0x5157      	MOVF        can_set_baud_pre_L0, 0, 1
0x376E	0x0840      	SUBLW       64
0x3770	0xE307      	BNC         L_can_set_baud253
L__can_set_baud934:
;lib_can.h,415 :: 		BRGCON1 = --pre;            //Bit menos significativo
0x3772	0x0757      	DECF        can_set_baud_pre_L0, 1, 1
0x3774	0xFF70C557  	MOVFF       can_set_baud_pre_L0, BRGCON1
;lib_can.h,416 :: 		BRGCON1.SJW0 = CAN_SYNC_JUMP_WIDTH.B0;
0x3778	0x9C70      	BCF         BRGCON1, 6 
;lib_can.h,417 :: 		BRGCON1.SJW1 = CAN_SYNC_JUMP_WIDTH.B1;
0x377A	0x9E70      	BCF         BRGCON1, 7 
;lib_can.h,418 :: 		Tqp--;                       //Restar 1Tq por SYNC
0x377C	0x0756      	DECF        can_set_baud_Tqp_L0, 1, 1
;lib_can.h,419 :: 		break;
0x377E	0xD002      	BRA         L_can_set_baud248
;lib_can.h,420 :: 		}
L_can_set_baud253:
;lib_can.h,421 :: 		}
L_can_set_baud250:
;lib_can.h,410 :: 		for(Tqp = 25; Tqp >= 8; Tqp--){
0x3780	0x0756      	DECF        can_set_baud_Tqp_L0, 1, 1
;lib_can.h,422 :: 		}
0x3782	0xD7CE      	BRA         L_can_set_baud247
L_can_set_baud248:
;lib_can.h,424 :: 		for(pre = 16; pre >= 2; pre -= 2){
0x3784	0x0E10      	MOVLW       16
0x3786	0x6F57      	MOVWF       can_set_baud_pre_L0, 1
L_can_set_baud254:
0x3788	0x0E02      	MOVLW       2
0x378A	0x5D57      	SUBWF       can_set_baud_pre_L0, 0, 1
0x378C	0xE34C      	BNC         L_can_set_baud255
;lib_can.h,425 :: 		if(Tqp > pre){
0x378E	0x5156      	MOVF        can_set_baud_Tqp_L0, 0, 1
0x3790	0x5D57      	SUBWF       can_set_baud_pre_L0, 0, 1
0x3792	0xE246      	BC          L_can_set_baud257
;lib_can.h,426 :: 		pre >>= 1; //DIVIDE SOBRE DOS
0x3794	0xF000C557  	MOVFF       can_set_baud_pre_L0, R0
0x3798	0x3200      	RRCF        R0, 1 
0x379A	0x9E00      	BCF         R0, 7 
0x379C	0xF557C000  	MOVFF       R0, can_set_baud_pre_L0
;lib_can.h,427 :: 		pre--;     //AJUSTAR VALORES DE 0-7
0x37A0	0x0600      	DECF        R0, 1 
0x37A2	0xF557C000  	MOVFF       R0, can_set_baud_pre_L0
;lib_can.h,429 :: 		BRGCON2.SEG2PHTS = 1;      //PHASE 2 PROGRAMABLE
0x37A6	0x8E71      	BSF         BRGCON2, 7 
;lib_can.h,430 :: 		BRGCON2.SAM = CAN_SAMPLE_THRICE_TIMES.B0;
0x37A8	0x8C71      	BSF         BRGCON2, 6 
;lib_can.h,431 :: 		BRGCON2.SEG1PH0 = pre.B0;
0x37AA	0xB157      	BTFSC       can_set_baud_pre_L0, 0, 1
0x37AC	0xD002      	BRA         L__can_set_baud1131
0x37AE	0x9671      	BCF         BRGCON2, 3 
0x37B0	0xD001      	BRA         L__can_set_baud1132
L__can_set_baud1131:
0x37B2	0x8671      	BSF         BRGCON2, 3 
L__can_set_baud1132:
;lib_can.h,432 :: 		BRGCON2.SEG1PH1 = pre.B1;
0x37B4	0xB357      	BTFSC       can_set_baud_pre_L0, 1, 1
0x37B6	0xD002      	BRA         L__can_set_baud1133
0x37B8	0x9871      	BCF         BRGCON2, 4 
0x37BA	0xD001      	BRA         L__can_set_baud1134
L__can_set_baud1133:
0x37BC	0x8871      	BSF         BRGCON2, 4 
L__can_set_baud1134:
;lib_can.h,433 :: 		BRGCON2.SEG1PH2 = pre.B2;
0x37BE	0xB557      	BTFSC       can_set_baud_pre_L0, 2, 1
0x37C0	0xD002      	BRA         L__can_set_baud1135
0x37C2	0x9A71      	BCF         BRGCON2, 5 
0x37C4	0xD001      	BRA         L__can_set_baud1136
L__can_set_baud1135:
0x37C6	0x8A71      	BSF         BRGCON2, 5 
L__can_set_baud1136:
;lib_can.h,435 :: 		BRGCON3.WAKDIS = !CAN_WAKE_UP_IN_ACTIVITY;
0x37C8	0x9E72      	BCF         BRGCON3, 7 
;lib_can.h,436 :: 		BRGCON3.WAKFIL = CAN_LINE_FILTER_ON;
0x37CA	0x9C72      	BCF         BRGCON3, 6 
;lib_can.h,437 :: 		BRGCON3.SEG2PH0 = pre.B0;
0x37CC	0xB157      	BTFSC       can_set_baud_pre_L0, 0, 1
0x37CE	0xD002      	BRA         L__can_set_baud1137
0x37D0	0x9072      	BCF         BRGCON3, 0 
0x37D2	0xD001      	BRA         L__can_set_baud1138
L__can_set_baud1137:
0x37D4	0x8072      	BSF         BRGCON3, 0 
L__can_set_baud1138:
;lib_can.h,438 :: 		BRGCON3.SEG2PH1 = pre.B1;
0x37D6	0xB357      	BTFSC       can_set_baud_pre_L0, 1, 1
0x37D8	0xD002      	BRA         L__can_set_baud1139
0x37DA	0x9272      	BCF         BRGCON3, 1 
0x37DC	0xD001      	BRA         L__can_set_baud1140
L__can_set_baud1139:
0x37DE	0x8272      	BSF         BRGCON3, 1 
L__can_set_baud1140:
;lib_can.h,439 :: 		BRGCON3.SEG2PH2 = pre.B2;
0x37E0	0xB557      	BTFSC       can_set_baud_pre_L0, 2, 1
0x37E2	0xD002      	BRA         L__can_set_baud1141
0x37E4	0x9472      	BCF         BRGCON3, 2 
0x37E6	0xD001      	BRA         L__can_set_baud1142
L__can_set_baud1141:
0x37E8	0x8472      	BSF         BRGCON3, 2 
L__can_set_baud1142:
;lib_can.h,441 :: 		pre = Tqp - 2*(pre+1);  //Obtener el resto de Tq
0x37EA	0x5000      	MOVF        R0, 0 
0x37EC	0x0F01      	ADDLW       1
0x37EE	0x6E02      	MOVWF       R2 
0x37F0	0xF000C002  	MOVFF       R2, R0
0x37F4	0x3600      	RLCF        R0, 1 
0x37F6	0x9000      	BCF         R0, 0 
0x37F8	0x5000      	MOVF        R0, 0 
0x37FA	0x5D56      	SUBWF       can_set_baud_Tqp_L0, 0, 1
0x37FC	0x6F57      	MOVWF       can_set_baud_pre_L0, 1
;lib_can.h,442 :: 		pre--;                  //Ajustar de 0-7
0x37FE	0x0757      	DECF        can_set_baud_pre_L0, 1, 1
;lib_can.h,443 :: 		BRGCON2.PRSEG0 = pre.B0;
0x3800	0xB157      	BTFSC       can_set_baud_pre_L0, 0, 1
0x3802	0xD002      	BRA         L__can_set_baud1143
0x3804	0x9071      	BCF         BRGCON2, 0 
0x3806	0xD001      	BRA         L__can_set_baud1144
L__can_set_baud1143:
0x3808	0x8071      	BSF         BRGCON2, 0 
L__can_set_baud1144:
;lib_can.h,444 :: 		BRGCON2.PRSEG1 = pre.B1;
0x380A	0xB357      	BTFSC       can_set_baud_pre_L0, 1, 1
0x380C	0xD002      	BRA         L__can_set_baud1145
0x380E	0x9271      	BCF         BRGCON2, 1 
0x3810	0xD001      	BRA         L__can_set_baud1146
L__can_set_baud1145:
0x3812	0x8271      	BSF         BRGCON2, 1 
L__can_set_baud1146:
;lib_can.h,445 :: 		BRGCON2.PRSEG2 = pre.B2;
0x3814	0xB557      	BTFSC       can_set_baud_pre_L0, 2, 1
0x3816	0xD002      	BRA         L__can_set_baud1147
0x3818	0x9471      	BCF         BRGCON2, 2 
0x381A	0xD001      	BRA         L__can_set_baud1148
L__can_set_baud1147:
0x381C	0x8471      	BSF         BRGCON2, 2 
L__can_set_baud1148:
;lib_can.h,446 :: 		break;
0x381E	0xD003      	BRA         L_can_set_baud255
;lib_can.h,447 :: 		}
L_can_set_baud257:
;lib_can.h,424 :: 		for(pre = 16; pre >= 2; pre -= 2){
0x3820	0x0E02      	MOVLW       2
0x3822	0x5F57      	SUBWF       can_set_baud_pre_L0, 1, 1
;lib_can.h,448 :: 		}
0x3824	0xD7B1      	BRA         L_can_set_baud254
L_can_set_baud255:
;lib_can.h,449 :: 		}
L_end_can_set_baud:
0x3826	0x0012      	RETURN      0
; end of _can_set_baud
_external_int1_enable:
;lib_external_int1.h,15 :: 		void external_int1_enable(bool enable){
;lib_external_int1.h,16 :: 		INTCON3.INT1IE = enable.B0;        //DISPONIBILIDAD
0x3828	0x0105      	MOVLB       5
0x382A	0xB154      	BTFSC       FARG_external_int1_enable_enable, 0, 1
0x382C	0xD002      	BRA         L__external_int1_enable1311
0x382E	0x96F0      	BCF         INTCON3, 3 
0x3830	0xD001      	BRA         L__external_int1_enable1312
L__external_int1_enable1311:
0x3832	0x86F0      	BSF         INTCON3, 3 
L__external_int1_enable1312:
;lib_external_int1.h,17 :: 		}
L_end_external_int1_enable:
0x3834	0x0012      	RETURN      0
; end of _external_int1_enable
_external_int0_enable:
;lib_external_int0.h,14 :: 		void external_int0_enable(bool enable){
;lib_external_int0.h,15 :: 		INTCON.INT0IE = enable.B0;          //DISPONIBILIDAD
0x3836	0x0105      	MOVLB       5
0x3838	0xB154      	BTFSC       FARG_external_int0_enable_enable, 0, 1
0x383A	0xD002      	BRA         L__external_int0_enable1298
0x383C	0x98F2      	BCF         INTCON, 4 
0x383E	0xD001      	BRA         L__external_int0_enable1299
L__external_int0_enable1298:
0x3840	0x88F2      	BSF         INTCON, 4 
L__external_int0_enable1299:
;lib_external_int0.h,16 :: 		}
L_end_external_int0_enable:
0x3842	0x0012      	RETURN      0
; end of _external_int0_enable
_decrypt_basic:
;_lib_cryptography.h,33 :: 		void decrypt_basic(char *cadena){
;_lib_cryptography.h,34 :: 		char cont = 0;
0x3844	0x0105      	MOVLB       5
0x3846	0x6B56      	CLRF        decrypt_basic_cont_L0, 1
;_lib_cryptography.h,36 :: 		while(cadena[cont]){
L_decrypt_basic122:
0x3848	0x5156      	MOVF        decrypt_basic_cont_L0, 0, 1
0x384A	0x2554      	ADDWF       FARG_decrypt_basic_cadena, 0, 1
0x384C	0x6EE9      	MOVWF       FSR0L 
0x384E	0x0E00      	MOVLW       0
0x3850	0x2155      	ADDWFC      FARG_decrypt_basic_cadena+1, 0, 1
0x3852	0x6EEA      	MOVWF       FSR0H 
0x3854	0x52EE      	MOVF        POSTINC0, 1 
0x3856	0xB4D8      	BTFSC       STATUS, 2 
0x3858	0xD0B5      	BRA         L_decrypt_basic123
;_lib_cryptography.h,37 :: 		if(cadena[cont] == '0')
0x385A	0x5156      	MOVF        decrypt_basic_cont_L0, 0, 1
0x385C	0x2554      	ADDWF       FARG_decrypt_basic_cadena, 0, 1
0x385E	0x6EE9      	MOVWF       FSR0L 
0x3860	0x0E00      	MOVLW       0
0x3862	0x2155      	ADDWFC      FARG_decrypt_basic_cadena+1, 0, 1
0x3864	0x6EEA      	MOVWF       FSR0H 
0x3866	0x50EE      	MOVF        POSTINC0, 0 
0x3868	0x0A30      	XORLW       48
0x386A	0xE109      	BNZ         L_decrypt_basic124
;_lib_cryptography.h,38 :: 		cadena[cont] = '1';
0x386C	0x5156      	MOVF        decrypt_basic_cont_L0, 0, 1
0x386E	0x2554      	ADDWF       FARG_decrypt_basic_cadena, 0, 1
0x3870	0x6EE1      	MOVWF       FSR1L 
0x3872	0x0E00      	MOVLW       0
0x3874	0x2155      	ADDWFC      FARG_decrypt_basic_cadena+1, 0, 1
0x3876	0x6EE2      	MOVWF       FSR1H 
0x3878	0x0E31      	MOVLW       49
0x387A	0x6EE6      	MOVWF       POSTINC1 
0x387C	0xD0A1      	BRA         L_decrypt_basic125
L_decrypt_basic124:
;_lib_cryptography.h,39 :: 		else if(cadena[cont] == '1')
0x387E	0x5156      	MOVF        decrypt_basic_cont_L0, 0, 1
0x3880	0x2554      	ADDWF       FARG_decrypt_basic_cadena, 0, 1
0x3882	0x6EE9      	MOVWF       FSR0L 
0x3884	0x0E00      	MOVLW       0
0x3886	0x2155      	ADDWFC      FARG_decrypt_basic_cadena+1, 0, 1
0x3888	0x6EEA      	MOVWF       FSR0H 
0x388A	0x50EE      	MOVF        POSTINC0, 0 
0x388C	0x0A31      	XORLW       49
0x388E	0xE109      	BNZ         L_decrypt_basic126
;_lib_cryptography.h,40 :: 		cadena[cont] = '9';
0x3890	0x5156      	MOVF        decrypt_basic_cont_L0, 0, 1
0x3892	0x2554      	ADDWF       FARG_decrypt_basic_cadena, 0, 1
0x3894	0x6EE1      	MOVWF       FSR1L 
0x3896	0x0E00      	MOVLW       0
0x3898	0x2155      	ADDWFC      FARG_decrypt_basic_cadena+1, 0, 1
0x389A	0x6EE2      	MOVWF       FSR1H 
0x389C	0x0E39      	MOVLW       57
0x389E	0x6EE6      	MOVWF       POSTINC1 
0x38A0	0xD08F      	BRA         L_decrypt_basic127
L_decrypt_basic126:
;_lib_cryptography.h,41 :: 		else if(cadena[cont] == '2')
0x38A2	0x5156      	MOVF        decrypt_basic_cont_L0, 0, 1
0x38A4	0x2554      	ADDWF       FARG_decrypt_basic_cadena, 0, 1
0x38A6	0x6EE9      	MOVWF       FSR0L 
0x38A8	0x0E00      	MOVLW       0
0x38AA	0x2155      	ADDWFC      FARG_decrypt_basic_cadena+1, 0, 1
0x38AC	0x6EEA      	MOVWF       FSR0H 
0x38AE	0x50EE      	MOVF        POSTINC0, 0 
0x38B0	0x0A32      	XORLW       50
0x38B2	0xE109      	BNZ         L_decrypt_basic128
;_lib_cryptography.h,42 :: 		cadena[cont] = '0';
0x38B4	0x5156      	MOVF        decrypt_basic_cont_L0, 0, 1
0x38B6	0x2554      	ADDWF       FARG_decrypt_basic_cadena, 0, 1
0x38B8	0x6EE1      	MOVWF       FSR1L 
0x38BA	0x0E00      	MOVLW       0
0x38BC	0x2155      	ADDWFC      FARG_decrypt_basic_cadena+1, 0, 1
0x38BE	0x6EE2      	MOVWF       FSR1H 
0x38C0	0x0E30      	MOVLW       48
0x38C2	0x6EE6      	MOVWF       POSTINC1 
0x38C4	0xD07D      	BRA         L_decrypt_basic129
L_decrypt_basic128:
;_lib_cryptography.h,43 :: 		else if(cadena[cont] == '3')
0x38C6	0x5156      	MOVF        decrypt_basic_cont_L0, 0, 1
0x38C8	0x2554      	ADDWF       FARG_decrypt_basic_cadena, 0, 1
0x38CA	0x6EE9      	MOVWF       FSR0L 
0x38CC	0x0E00      	MOVLW       0
0x38CE	0x2155      	ADDWFC      FARG_decrypt_basic_cadena+1, 0, 1
0x38D0	0x6EEA      	MOVWF       FSR0H 
0x38D2	0x50EE      	MOVF        POSTINC0, 0 
0x38D4	0x0A33      	XORLW       51
0x38D6	0xE109      	BNZ         L_decrypt_basic130
;_lib_cryptography.h,44 :: 		cadena[cont] = '8';
0x38D8	0x5156      	MOVF        decrypt_basic_cont_L0, 0, 1
0x38DA	0x2554      	ADDWF       FARG_decrypt_basic_cadena, 0, 1
0x38DC	0x6EE1      	MOVWF       FSR1L 
0x38DE	0x0E00      	MOVLW       0
0x38E0	0x2155      	ADDWFC      FARG_decrypt_basic_cadena+1, 0, 1
0x38E2	0x6EE2      	MOVWF       FSR1H 
0x38E4	0x0E38      	MOVLW       56
0x38E6	0x6EE6      	MOVWF       POSTINC1 
0x38E8	0xD06B      	BRA         L_decrypt_basic131
L_decrypt_basic130:
;_lib_cryptography.h,45 :: 		else if(cadena[cont] == '4')
0x38EA	0x5156      	MOVF        decrypt_basic_cont_L0, 0, 1
0x38EC	0x2554      	ADDWF       FARG_decrypt_basic_cadena, 0, 1
0x38EE	0x6EE9      	MOVWF       FSR0L 
0x38F0	0x0E00      	MOVLW       0
0x38F2	0x2155      	ADDWFC      FARG_decrypt_basic_cadena+1, 0, 1
0x38F4	0x6EEA      	MOVWF       FSR0H 
0x38F6	0x50EE      	MOVF        POSTINC0, 0 
0x38F8	0x0A34      	XORLW       52
0x38FA	0xE109      	BNZ         L_decrypt_basic132
;_lib_cryptography.h,46 :: 		cadena[cont] = '6';
0x38FC	0x5156      	MOVF        decrypt_basic_cont_L0, 0, 1
0x38FE	0x2554      	ADDWF       FARG_decrypt_basic_cadena, 0, 1
0x3900	0x6EE1      	MOVWF       FSR1L 
0x3902	0x0E00      	MOVLW       0
0x3904	0x2155      	ADDWFC      FARG_decrypt_basic_cadena+1, 0, 1
0x3906	0x6EE2      	MOVWF       FSR1H 
0x3908	0x0E36      	MOVLW       54
0x390A	0x6EE6      	MOVWF       POSTINC1 
0x390C	0xD059      	BRA         L_decrypt_basic133
L_decrypt_basic132:
;_lib_cryptography.h,47 :: 		else if(cadena[cont] == '5')
0x390E	0x5156      	MOVF        decrypt_basic_cont_L0, 0, 1
0x3910	0x2554      	ADDWF       FARG_decrypt_basic_cadena, 0, 1
0x3912	0x6EE9      	MOVWF       FSR0L 
0x3914	0x0E00      	MOVLW       0
0x3916	0x2155      	ADDWFC      FARG_decrypt_basic_cadena+1, 0, 1
0x3918	0x6EEA      	MOVWF       FSR0H 
0x391A	0x50EE      	MOVF        POSTINC0, 0 
0x391C	0x0A35      	XORLW       53
0x391E	0xE109      	BNZ         L_decrypt_basic134
;_lib_cryptography.h,48 :: 		cadena[cont] = '7';
0x3920	0x5156      	MOVF        decrypt_basic_cont_L0, 0, 1
0x3922	0x2554      	ADDWF       FARG_decrypt_basic_cadena, 0, 1
0x3924	0x6EE1      	MOVWF       FSR1L 
0x3926	0x0E00      	MOVLW       0
0x3928	0x2155      	ADDWFC      FARG_decrypt_basic_cadena+1, 0, 1
0x392A	0x6EE2      	MOVWF       FSR1H 
0x392C	0x0E37      	MOVLW       55
0x392E	0x6EE6      	MOVWF       POSTINC1 
0x3930	0xD047      	BRA         L_decrypt_basic135
L_decrypt_basic134:
;_lib_cryptography.h,49 :: 		else if(cadena[cont] == '6')
0x3932	0x5156      	MOVF        decrypt_basic_cont_L0, 0, 1
0x3934	0x2554      	ADDWF       FARG_decrypt_basic_cadena, 0, 1
0x3936	0x6EE9      	MOVWF       FSR0L 
0x3938	0x0E00      	MOVLW       0
0x393A	0x2155      	ADDWFC      FARG_decrypt_basic_cadena+1, 0, 1
0x393C	0x6EEA      	MOVWF       FSR0H 
0x393E	0x50EE      	MOVF        POSTINC0, 0 
0x3940	0x0A36      	XORLW       54
0x3942	0xE109      	BNZ         L_decrypt_basic136
;_lib_cryptography.h,50 :: 		cadena[cont] = '5';
0x3944	0x5156      	MOVF        decrypt_basic_cont_L0, 0, 1
0x3946	0x2554      	ADDWF       FARG_decrypt_basic_cadena, 0, 1
0x3948	0x6EE1      	MOVWF       FSR1L 
0x394A	0x0E00      	MOVLW       0
0x394C	0x2155      	ADDWFC      FARG_decrypt_basic_cadena+1, 0, 1
0x394E	0x6EE2      	MOVWF       FSR1H 
0x3950	0x0E35      	MOVLW       53
0x3952	0x6EE6      	MOVWF       POSTINC1 
0x3954	0xD035      	BRA         L_decrypt_basic137
L_decrypt_basic136:
;_lib_cryptography.h,51 :: 		else if(cadena[cont] == '7')
0x3956	0x5156      	MOVF        decrypt_basic_cont_L0, 0, 1
0x3958	0x2554      	ADDWF       FARG_decrypt_basic_cadena, 0, 1
0x395A	0x6EE9      	MOVWF       FSR0L 
0x395C	0x0E00      	MOVLW       0
0x395E	0x2155      	ADDWFC      FARG_decrypt_basic_cadena+1, 0, 1
0x3960	0x6EEA      	MOVWF       FSR0H 
0x3962	0x50EE      	MOVF        POSTINC0, 0 
0x3964	0x0A37      	XORLW       55
0x3966	0xE109      	BNZ         L_decrypt_basic138
;_lib_cryptography.h,52 :: 		cadena[cont] = '4';
0x3968	0x5156      	MOVF        decrypt_basic_cont_L0, 0, 1
0x396A	0x2554      	ADDWF       FARG_decrypt_basic_cadena, 0, 1
0x396C	0x6EE1      	MOVWF       FSR1L 
0x396E	0x0E00      	MOVLW       0
0x3970	0x2155      	ADDWFC      FARG_decrypt_basic_cadena+1, 0, 1
0x3972	0x6EE2      	MOVWF       FSR1H 
0x3974	0x0E34      	MOVLW       52
0x3976	0x6EE6      	MOVWF       POSTINC1 
0x3978	0xD023      	BRA         L_decrypt_basic139
L_decrypt_basic138:
;_lib_cryptography.h,53 :: 		else if(cadena[cont] == '8')
0x397A	0x5156      	MOVF        decrypt_basic_cont_L0, 0, 1
0x397C	0x2554      	ADDWF       FARG_decrypt_basic_cadena, 0, 1
0x397E	0x6EE9      	MOVWF       FSR0L 
0x3980	0x0E00      	MOVLW       0
0x3982	0x2155      	ADDWFC      FARG_decrypt_basic_cadena+1, 0, 1
0x3984	0x6EEA      	MOVWF       FSR0H 
0x3986	0x50EE      	MOVF        POSTINC0, 0 
0x3988	0x0A38      	XORLW       56
0x398A	0xE109      	BNZ         L_decrypt_basic140
;_lib_cryptography.h,54 :: 		cadena[cont] = '2';
0x398C	0x5156      	MOVF        decrypt_basic_cont_L0, 0, 1
0x398E	0x2554      	ADDWF       FARG_decrypt_basic_cadena, 0, 1
0x3990	0x6EE1      	MOVWF       FSR1L 
0x3992	0x0E00      	MOVLW       0
0x3994	0x2155      	ADDWFC      FARG_decrypt_basic_cadena+1, 0, 1
0x3996	0x6EE2      	MOVWF       FSR1H 
0x3998	0x0E32      	MOVLW       50
0x399A	0x6EE6      	MOVWF       POSTINC1 
0x399C	0xD011      	BRA         L_decrypt_basic141
L_decrypt_basic140:
;_lib_cryptography.h,55 :: 		else if(cadena[cont] == '9')
0x399E	0x5156      	MOVF        decrypt_basic_cont_L0, 0, 1
0x39A0	0x2554      	ADDWF       FARG_decrypt_basic_cadena, 0, 1
0x39A2	0x6EE9      	MOVWF       FSR0L 
0x39A4	0x0E00      	MOVLW       0
0x39A6	0x2155      	ADDWFC      FARG_decrypt_basic_cadena+1, 0, 1
0x39A8	0x6EEA      	MOVWF       FSR0H 
0x39AA	0x50EE      	MOVF        POSTINC0, 0 
0x39AC	0x0A39      	XORLW       57
0x39AE	0xE108      	BNZ         L_decrypt_basic142
;_lib_cryptography.h,56 :: 		cadena[cont] = '3';
0x39B0	0x5156      	MOVF        decrypt_basic_cont_L0, 0, 1
0x39B2	0x2554      	ADDWF       FARG_decrypt_basic_cadena, 0, 1
0x39B4	0x6EE1      	MOVWF       FSR1L 
0x39B6	0x0E00      	MOVLW       0
0x39B8	0x2155      	ADDWFC      FARG_decrypt_basic_cadena+1, 0, 1
0x39BA	0x6EE2      	MOVWF       FSR1H 
0x39BC	0x0E33      	MOVLW       51
0x39BE	0x6EE6      	MOVWF       POSTINC1 
L_decrypt_basic142:
L_decrypt_basic141:
L_decrypt_basic139:
L_decrypt_basic137:
L_decrypt_basic135:
L_decrypt_basic133:
L_decrypt_basic131:
L_decrypt_basic129:
L_decrypt_basic127:
L_decrypt_basic125:
;_lib_cryptography.h,57 :: 		cont++;
0x39C0	0x2B56      	INCF        decrypt_basic_cont_L0, 1, 1
;_lib_cryptography.h,58 :: 		}
0x39C2	0xD742      	BRA         L_decrypt_basic122
L_decrypt_basic123:
;_lib_cryptography.h,59 :: 		}
L_end_decrypt_basic:
0x39C4	0x0012      	RETURN      0
; end of _decrypt_basic
_string_cmp:
;string.h,104 :: 		bool string_cmp(char *text1, char *text2){
;string.h,105 :: 		char cont = 0;
0x39C6	0x0105      	MOVLB       5
0x39C8	0x6B58      	CLRF        string_cmp_cont_L0, 1
;string.h,107 :: 		while(true){
L_string_cmp32:
;string.h,108 :: 		if(text1[cont] != text2[cont])
0x39CA	0x5158      	MOVF        string_cmp_cont_L0, 0, 1
0x39CC	0x2554      	ADDWF       FARG_string_cmp_text1, 0, 1
0x39CE	0x6EE9      	MOVWF       FSR0L 
0x39D0	0x0E00      	MOVLW       0
0x39D2	0x2155      	ADDWFC      FARG_string_cmp_text1+1, 0, 1
0x39D4	0x6EEA      	MOVWF       FSR0H 
0x39D6	0x5158      	MOVF        string_cmp_cont_L0, 0, 1
0x39D8	0x2556      	ADDWF       FARG_string_cmp_text2, 0, 1
0x39DA	0x6ED9      	MOVWF       FSR2L 
0x39DC	0x0E00      	MOVLW       0
0x39DE	0x2157      	ADDWFC      FARG_string_cmp_text2+1, 0, 1
0x39E0	0x6EDA      	MOVWF       FSR2H 
0x39E2	0x50EE      	MOVF        POSTINC0, 0 
0x39E4	0x18DE      	XORWF       POSTINC2, 0 
0x39E6	0xE002      	BZ          L_string_cmp34
;string.h,109 :: 		return false;
0x39E8	0x6A00      	CLRF        R0 
0x39EA	0xD018      	BRA         L_end_string_cmp
L_string_cmp34:
;string.h,110 :: 		else if(text1[cont] == 0 || text2[cont] == 0)
0x39EC	0x5158      	MOVF        string_cmp_cont_L0, 0, 1
0x39EE	0x2554      	ADDWF       FARG_string_cmp_text1, 0, 1
0x39F0	0x6EE9      	MOVWF       FSR0L 
0x39F2	0x0E00      	MOVLW       0
0x39F4	0x2155      	ADDWFC      FARG_string_cmp_text1+1, 0, 1
0x39F6	0x6EEA      	MOVWF       FSR0H 
0x39F8	0x50EE      	MOVF        POSTINC0, 0 
0x39FA	0x0A00      	XORLW       0
0x39FC	0xE00A      	BZ          L__string_cmp919
0x39FE	0x5158      	MOVF        string_cmp_cont_L0, 0, 1
0x3A00	0x2556      	ADDWF       FARG_string_cmp_text2, 0, 1
0x3A02	0x6EE9      	MOVWF       FSR0L 
0x3A04	0x0E00      	MOVLW       0
0x3A06	0x2157      	ADDWFC      FARG_string_cmp_text2+1, 0, 1
0x3A08	0x6EEA      	MOVWF       FSR0H 
0x3A0A	0x50EE      	MOVF        POSTINC0, 0 
0x3A0C	0x0A00      	XORLW       0
0x3A0E	0xE001      	BZ          L__string_cmp919
0x3A10	0xD001      	BRA         L_string_cmp38
L__string_cmp919:
;string.h,111 :: 		break;
0x3A12	0xD002      	BRA         L_string_cmp33
L_string_cmp38:
;string.h,113 :: 		cont++;
0x3A14	0x2B58      	INCF        string_cmp_cont_L0, 1, 1
;string.h,114 :: 		}
0x3A16	0xD7D9      	BRA         L_string_cmp32
L_string_cmp33:
;string.h,116 :: 		return true;
0x3A18	0x0E01      	MOVLW       1
0x3A1A	0x6E00      	MOVWF       R0 
;string.h,117 :: 		}
L_end_string_cmp:
0x3A1C	0x0012      	RETURN      0
; end of _string_cmp
_can_user_write_message:
;Validadora.c,2019 :: 		void can_user_write_message(){
;Validadora.c,2020 :: 		if(can.tx_status == CAN_RW_ENVIADO){
0x3A1E	0x0103      	MOVLB       3
0x3A20	0x51E1      	MOVF        _can+34, 0, 1
0x3A22	0x0A00      	XORLW       0
0x3A24	0xE11D      	BNZ         L_can_user_write_message892
;Validadora.c,2021 :: 		if(modeBufferEventos){
0x3A26	0x5249      	MOVF        _modeBufferEventos, 1 
0x3A28	0xE01A      	BZ          L_can_user_write_message893
;Validadora.c,2022 :: 		modeBufferEventos = false;
0x3A2A	0x6A49      	CLRF        _modeBufferEventos 
;Validadora.c,2023 :: 		pilaBufferCAN--;
0x3A2C	0x0E01      	MOVLW       1
0x3A2E	0x5FBD      	SUBWF       _pilaBufferCAN, 1, 1
0x3A30	0x0E00      	MOVLW       0
0x3A32	0x5BBE      	SUBWFB      _pilaBufferCAN+1, 1, 1
;Validadora.c,2024 :: 		mysql_write_forced(tableEventosCAN, eventosEstatus, pilaBufferPointer, "0", 1);
0x3A34	0x0E6D      	MOVLW       _tableEventosCAN
0x3A36	0x0105      	MOVLB       5
0x3A38	0x6F86      	MOVWF       FARG_mysql_write_forced_name, 1
0x3A3A	0x0E02      	MOVLW       hi_addr(_tableEventosCAN)
0x3A3C	0x6F87      	MOVWF       FARG_mysql_write_forced_name+1, 1
0x3A3E	0x0E65      	MOVLW       _eventosEstatus
0x3A40	0x6F88      	MOVWF       FARG_mysql_write_forced_column, 1
0x3A42	0x0E02      	MOVLW       hi_addr(_eventosEstatus)
0x3A44	0x6F89      	MOVWF       FARG_mysql_write_forced_column+1, 1
0x3A46	0xF58AC341  	MOVFF       _pilaBufferPointer, FARG_mysql_write_forced_fila
0x3A4A	0xF58BC342  	MOVFF       _pilaBufferPointer+1, FARG_mysql_write_forced_fila+1
0x3A4E	0x0E45      	MOVLW       ?lstr44_Validadora
0x3A50	0x6F8C      	MOVWF       FARG_mysql_write_forced_texto, 1
0x3A52	0x0E01      	MOVLW       hi_addr(?lstr44_Validadora)
0x3A54	0x6F8D      	MOVWF       FARG_mysql_write_forced_texto+1, 1
0x3A56	0x0E01      	MOVLW       1
0x3A58	0x6F8E      	MOVWF       FARG_mysql_write_forced_bytes, 1
0x3A5A	0xF008EC72  	CALL        _mysql_write_forced, 0
;Validadora.c,2028 :: 		}
L_can_user_write_message893:
;Validadora.c,2029 :: 		}else if(can.tx_status == CAN_RW_CORRUPT){
0x3A5E	0xD011      	BRA         L_can_user_write_message894
L_can_user_write_message892:
0x3A60	0x0103      	MOVLB       3
0x3A62	0x51E1      	MOVF        _can+34, 0, 1
0x3A64	0x0A03      	XORLW       3
0x3A66	0xE10D      	BNZ         L_can_user_write_message895
;Validadora.c,2031 :: 		if(!modeBufferEventos){
0x3A68	0x5249      	MOVF        _modeBufferEventos, 1 
0x3A6A	0xE10A      	BNZ         L_can_user_write_message896
;Validadora.c,2032 :: 		buffer_save_send(true, can.txBuffer);
0x3A6C	0x0E01      	MOVLW       1
0x3A6E	0x0105      	MOVLB       5
0x3A70	0x6F78      	MOVWF       FARG_buffer_save_send_guardar, 1
0x3A72	0x0EE8      	MOVLW       _can+41
0x3A74	0x6F79      	MOVWF       FARG_buffer_save_send_buffer, 1
0x3A76	0x0E03      	MOVLW       hi_addr(_can+41)
0x3A78	0x6F7A      	MOVWF       FARG_buffer_save_send_buffer+1, 1
0x3A7A	0xF00FECCD  	CALL        _buffer_save_send, 0
;Validadora.c,2036 :: 		}else{
0x3A7E	0xD001      	BRA         L_can_user_write_message897
L_can_user_write_message896:
;Validadora.c,2038 :: 		modeBufferEventos = false;
0x3A80	0x6A49      	CLRF        _modeBufferEventos 
;Validadora.c,2042 :: 		}
L_can_user_write_message897:
;Validadora.c,2043 :: 		}
L_can_user_write_message895:
L_can_user_write_message894:
;Validadora.c,2044 :: 		}
L_end_can_user_write_message:
0x3A82	0x0012      	RETURN      0
; end of _can_user_write_message
_external_int0_open:
;lib_external_int0.h,8 :: 		void external_int0_open(bool enable, bool edgeOnRising){
;lib_external_int0.h,9 :: 		INTCON.INT0IF = 0;                  //LIMPIAR BANDERA
0x3A84	0x92F2      	BCF         INTCON, 1 
;lib_external_int0.h,10 :: 		INTCON2.INTEDG0 = edgeOnRising.B0;  //FLANCO DE SUBIDA
0x3A86	0x0105      	MOVLB       5
0x3A88	0xB155      	BTFSC       FARG_external_int0_open_edgeOnRising, 0, 1
0x3A8A	0xD002      	BRA         L__external_int0_open1293
0x3A8C	0x9CF1      	BCF         INTCON2, 6 
0x3A8E	0xD001      	BRA         L__external_int0_open1294
L__external_int0_open1293:
0x3A90	0x8CF1      	BSF         INTCON2, 6 
L__external_int0_open1294:
;lib_external_int0.h,11 :: 		INTCON.INT0IE = enable.B0;          //DISPONIBILIDAD
0x3A92	0xB154      	BTFSC       FARG_external_int0_open_enable, 0, 1
0x3A94	0xD002      	BRA         L__external_int0_open1295
0x3A96	0x98F2      	BCF         INTCON, 4 
0x3A98	0xD001      	BRA         L__external_int0_open1296
L__external_int0_open1295:
0x3A9A	0x88F2      	BSF         INTCON, 4 
L__external_int0_open1296:
;lib_external_int0.h,12 :: 		}
L_end_external_int0_open:
0x3A9C	0x0012      	RETURN      0
; end of _external_int0_open
_LongWordToStr:
;__Lib_Conversions.c,258 :: 		
;__Lib_Conversions.c,261 :: 		
0x3A9E	0x0105      	MOVLB       5
0x3AA0	0x6B5A      	CLRF        LongWordToStr_len_L0, 1
0x3AA2	0x6B5B      	CLRF        LongWordToStr_len_L0+1, 1
L_LongWordToStr52:
0x3AA4	0x0E00      	MOVLW       0
0x3AA6	0x5D5B      	SUBWF       LongWordToStr_len_L0+1, 0, 1
0x3AA8	0xE102      	BNZ         L__LongWordToStr174
0x3AAA	0x0E0A      	MOVLW       10
0x3AAC	0x5D5A      	SUBWF       LongWordToStr_len_L0, 0, 1
L__LongWordToStr174:
0x3AAE	0xE20B      	BC          L_LongWordToStr53
;__Lib_Conversions.c,262 :: 		
0x3AB0	0x515A      	MOVF        LongWordToStr_len_L0, 0, 1
0x3AB2	0x2558      	ADDWF       FARG_LongWordToStr_output, 0, 1
0x3AB4	0x6EE1      	MOVWF       FSR1L 
0x3AB6	0x515B      	MOVF        LongWordToStr_len_L0+1, 0, 1
0x3AB8	0x2159      	ADDWFC      FARG_LongWordToStr_output+1, 0, 1
0x3ABA	0x6EE2      	MOVWF       FSR1H 
0x3ABC	0x0E20      	MOVLW       32
0x3ABE	0x6EE6      	MOVWF       POSTINC1 
;__Lib_Conversions.c,261 :: 		
0x3AC0	0x4B5A      	INFSNZ      LongWordToStr_len_L0, 1, 1
0x3AC2	0x2B5B      	INCF        LongWordToStr_len_L0+1, 1, 1
;__Lib_Conversions.c,262 :: 		
0x3AC4	0xD7EF      	BRA         L_LongWordToStr52
L_LongWordToStr53:
;__Lib_Conversions.c,263 :: 		
0x3AC6	0x515A      	MOVF        LongWordToStr_len_L0, 0, 1
0x3AC8	0x2558      	ADDWF       FARG_LongWordToStr_output, 0, 1
0x3ACA	0x6EE1      	MOVWF       FSR1L 
0x3ACC	0x515B      	MOVF        LongWordToStr_len_L0+1, 0, 1
0x3ACE	0x2159      	ADDWFC      FARG_LongWordToStr_output+1, 0, 1
0x3AD0	0x6EE2      	MOVWF       FSR1H 
0x3AD2	0x6AE6      	CLRF        POSTINC1 
0x3AD4	0x0E01      	MOVLW       1
0x3AD6	0x5F5A      	SUBWF       LongWordToStr_len_L0, 1, 1
0x3AD8	0x0E00      	MOVLW       0
0x3ADA	0x5B5B      	SUBWFB      LongWordToStr_len_L0+1, 1, 1
;__Lib_Conversions.c,265 :: 		
L_LongWordToStr55:
;__Lib_Conversions.c,266 :: 		
0x3ADC	0x515A      	MOVF        LongWordToStr_len_L0, 0, 1
0x3ADE	0x2558      	ADDWF       FARG_LongWordToStr_output, 0, 1
0x3AE0	0x6F5C      	MOVWF       FLOC__LongWordToStr, 1
0x3AE2	0x515B      	MOVF        LongWordToStr_len_L0+1, 0, 1
0x3AE4	0x2159      	ADDWFC      FARG_LongWordToStr_output+1, 0, 1
0x3AE6	0x6F5D      	MOVWF       FLOC__LongWordToStr+1, 1
0x3AE8	0x0E0A      	MOVLW       10
0x3AEA	0x6E04      	MOVWF       R4 
0x3AEC	0x0E00      	MOVLW       0
0x3AEE	0x6E05      	MOVWF       R5 
0x3AF0	0x6E06      	MOVWF       R6 
0x3AF2	0x6E07      	MOVWF       R7 
0x3AF4	0xF000C554  	MOVFF       FARG_LongWordToStr_input, R0
0x3AF8	0xF001C555  	MOVFF       FARG_LongWordToStr_input+1, R1
0x3AFC	0xF002C556  	MOVFF       FARG_LongWordToStr_input+2, R2
0x3B00	0xF003C557  	MOVFF       FARG_LongWordToStr_input+3, R3
0x3B04	0xF012ECAA  	CALL        _Div_32x32_U, 0
0x3B08	0xF000C008  	MOVFF       R8, R0
0x3B0C	0xF001C009  	MOVFF       R9, R1
0x3B10	0xF002C00A  	MOVFF       R10, R2
0x3B14	0xF003C00B  	MOVFF       R11, R3
0x3B18	0x0E30      	MOVLW       48
0x3B1A	0x2600      	ADDWF       R0, 1 
0x3B1C	0xFFE1C55C  	MOVFF       FLOC__LongWordToStr, FSR1L
0x3B20	0xFFE2C55D  	MOVFF       FLOC__LongWordToStr+1, FSR1H
0x3B24	0xFFE6C000  	MOVFF       R0, POSTINC1
;__Lib_Conversions.c,267 :: 		
0x3B28	0x0E0A      	MOVLW       10
0x3B2A	0x6E04      	MOVWF       R4 
0x3B2C	0x0E00      	MOVLW       0
0x3B2E	0x6E05      	MOVWF       R5 
0x3B30	0x6E06      	MOVWF       R6 
0x3B32	0x6E07      	MOVWF       R7 
0x3B34	0xF000C554  	MOVFF       FARG_LongWordToStr_input, R0
0x3B38	0xF001C555  	MOVFF       FARG_LongWordToStr_input+1, R1
0x3B3C	0xF002C556  	MOVFF       FARG_LongWordToStr_input+2, R2
0x3B40	0xF003C557  	MOVFF       FARG_LongWordToStr_input+3, R3
0x3B44	0xF012ECAA  	CALL        _Div_32x32_U, 0
0x3B48	0xF554C000  	MOVFF       R0, FARG_LongWordToStr_input
0x3B4C	0xF555C001  	MOVFF       R1, FARG_LongWordToStr_input+1
0x3B50	0xF556C002  	MOVFF       R2, FARG_LongWordToStr_input+2
0x3B54	0xF557C003  	MOVFF       R3, FARG_LongWordToStr_input+3
;__Lib_Conversions.c,268 :: 		
0x3B58	0x0E00      	MOVLW       0
0x3B5A	0x6E04      	MOVWF       R4 
0x3B5C	0x1803      	XORWF       R3, 0 
0x3B5E	0xE108      	BNZ         L__LongWordToStr175
0x3B60	0x5004      	MOVF        R4, 0 
0x3B62	0x1802      	XORWF       R2, 0 
0x3B64	0xE105      	BNZ         L__LongWordToStr175
0x3B66	0x5004      	MOVF        R4, 0 
0x3B68	0x1801      	XORWF       R1, 0 
0x3B6A	0xE102      	BNZ         L__LongWordToStr175
0x3B6C	0x5000      	MOVF        R0, 0 
0x3B6E	0x0A00      	XORLW       0
L__LongWordToStr175:
0x3B70	0xE101      	BNZ         L_LongWordToStr57
;__Lib_Conversions.c,269 :: 		
0x3B72	0xD005      	BRA         L_LongWordToStr56
L_LongWordToStr57:
;__Lib_Conversions.c,270 :: 		
0x3B74	0x0E01      	MOVLW       1
0x3B76	0x5F5A      	SUBWF       LongWordToStr_len_L0, 1, 1
0x3B78	0x0E00      	MOVLW       0
0x3B7A	0x5B5B      	SUBWFB      LongWordToStr_len_L0+1, 1, 1
;__Lib_Conversions.c,271 :: 		
0x3B7C	0xD7AF      	BRA         L_LongWordToStr55
L_LongWordToStr56:
;__Lib_Conversions.c,272 :: 		
L_end_LongWordToStr:
0x3B7E	0x0012      	RETURN      0
; end of _LongWordToStr
_DS1307_getSeconds:
;ds1307.h,189 :: 		long DS1307_getSeconds(char *HHMMSS){
;ds1307.h,190 :: 		char cont = 0;
0x3B80	0x0105      	MOVLB       5
0x3B82	0x6B56      	CLRF        DS1307_getSeconds_cont_L0, 1
0x3B84	0x0EFF      	MOVLW       255
0x3B86	0x6F57      	MOVWF       DS1307_getSeconds_segundos_L0, 1
0x3B88	0x0EFF      	MOVLW       255
0x3B8A	0x6F58      	MOVWF       DS1307_getSeconds_segundos_L0+1, 1
0x3B8C	0x0EFF      	MOVLW       255
0x3B8E	0x6F59      	MOVWF       DS1307_getSeconds_segundos_L0+2, 1
0x3B90	0x0EFF      	MOVLW       255
0x3B92	0x6F5A      	MOVWF       DS1307_getSeconds_segundos_L0+3, 1
;ds1307.h,193 :: 		if(string_len(HHMMSS) == 6){
0x3B94	0xF586C554  	MOVFF       FARG_DS1307_getSeconds_HHMMSS, FARG_string_len_texto
0x3B98	0xF587C555  	MOVFF       FARG_DS1307_getSeconds_HHMMSS+1, FARG_string_len_texto+1
0x3B9C	0xF007EC95  	CALL        _string_len, 0
0x3BA0	0x5000      	MOVF        R0, 0 
0x3BA2	0x0A06      	XORLW       6
0x3BA4	0xE13A      	BNZ         L_DS1307_getSeconds393
;ds1307.h,194 :: 		segundos = 0;
0x3BA6	0x6B57      	CLRF        DS1307_getSeconds_segundos_L0, 1
0x3BA8	0x6B58      	CLRF        DS1307_getSeconds_segundos_L0+1, 1
0x3BAA	0x6B59      	CLRF        DS1307_getSeconds_segundos_L0+2, 1
0x3BAC	0x6B5A      	CLRF        DS1307_getSeconds_segundos_L0+3, 1
;ds1307.h,196 :: 		while(HHMMSS[cont] != 0){
L_DS1307_getSeconds394:
0x3BAE	0x5156      	MOVF        DS1307_getSeconds_cont_L0, 0, 1
0x3BB0	0x2554      	ADDWF       FARG_DS1307_getSeconds_HHMMSS, 0, 1
0x3BB2	0x6EE9      	MOVWF       FSR0L 
0x3BB4	0x0E00      	MOVLW       0
0x3BB6	0x2155      	ADDWFC      FARG_DS1307_getSeconds_HHMMSS+1, 0, 1
0x3BB8	0x6EEA      	MOVWF       FSR0H 
0x3BBA	0x50EE      	MOVF        POSTINC0, 0 
0x3BBC	0x0A00      	XORLW       0
0x3BBE	0xE02D      	BZ          L_DS1307_getSeconds395
;ds1307.h,197 :: 		segundos *= 60;
0x3BC0	0xF000C557  	MOVFF       DS1307_getSeconds_segundos_L0, R0
0x3BC4	0xF001C558  	MOVFF       DS1307_getSeconds_segundos_L0+1, R1
0x3BC8	0xF002C559  	MOVFF       DS1307_getSeconds_segundos_L0+2, R2
0x3BCC	0xF003C55A  	MOVFF       DS1307_getSeconds_segundos_L0+3, R3
0x3BD0	0x0E3C      	MOVLW       60
0x3BD2	0x6E04      	MOVWF       R4 
0x3BD4	0x0E00      	MOVLW       0
0x3BD6	0x6E05      	MOVWF       R5 
0x3BD8	0x6E06      	MOVWF       R6 
0x3BDA	0x6E07      	MOVWF       R7 
0x3BDC	0xF004EC29  	CALL        _Mul_32x32_U, 0
0x3BE0	0xF557C000  	MOVFF       R0, DS1307_getSeconds_segundos_L0
0x3BE4	0xF558C001  	MOVFF       R1, DS1307_getSeconds_segundos_L0+1
0x3BE8	0xF559C002  	MOVFF       R2, DS1307_getSeconds_segundos_L0+2
0x3BEC	0xF55AC003  	MOVFF       R3, DS1307_getSeconds_segundos_L0+3
;ds1307.h,198 :: 		segundos += stringToNumN(&HHMMSS[cont], 2);
0x3BF0	0x5156      	MOVF        DS1307_getSeconds_cont_L0, 0, 1
0x3BF2	0x2554      	ADDWF       FARG_DS1307_getSeconds_HHMMSS, 0, 1
0x3BF4	0x6F86      	MOVWF       FARG_stringToNumN_cadena, 1
0x3BF6	0x0E00      	MOVLW       0
0x3BF8	0x2155      	ADDWFC      FARG_DS1307_getSeconds_HHMMSS+1, 0, 1
0x3BFA	0x6F87      	MOVWF       FARG_stringToNumN_cadena+1, 1
0x3BFC	0x0E02      	MOVLW       2
0x3BFE	0x6F88      	MOVWF       FARG_stringToNumN_size, 1
0x3C00	0xF007ECCE  	CALL        _stringToNumN, 0
0x3C04	0x5000      	MOVF        R0, 0 
0x3C06	0x2757      	ADDWF       DS1307_getSeconds_segundos_L0, 1, 1
0x3C08	0x5001      	MOVF        R1, 0 
0x3C0A	0x2358      	ADDWFC      DS1307_getSeconds_segundos_L0+1, 1, 1
0x3C0C	0x5002      	MOVF        R2, 0 
0x3C0E	0x2359      	ADDWFC      DS1307_getSeconds_segundos_L0+2, 1, 1
0x3C10	0x5003      	MOVF        R3, 0 
0x3C12	0x235A      	ADDWFC      DS1307_getSeconds_segundos_L0+3, 1, 1
;ds1307.h,199 :: 		cont += 2;
0x3C14	0x0E02      	MOVLW       2
0x3C16	0x2756      	ADDWF       DS1307_getSeconds_cont_L0, 1, 1
;ds1307.h,200 :: 		}
0x3C18	0xD7CA      	BRA         L_DS1307_getSeconds394
L_DS1307_getSeconds395:
;ds1307.h,201 :: 		}
L_DS1307_getSeconds393:
;ds1307.h,203 :: 		return segundos;
0x3C1A	0xF000C557  	MOVFF       DS1307_getSeconds_segundos_L0, R0
0x3C1E	0xF001C558  	MOVFF       DS1307_getSeconds_segundos_L0+1, R1
0x3C22	0xF002C559  	MOVFF       DS1307_getSeconds_segundos_L0+2, R2
0x3C26	0xF003C55A  	MOVFF       DS1307_getSeconds_segundos_L0+3, R3
;ds1307.h,204 :: 		}
L_end_DS1307_getSeconds:
0x3C2A	0x0012      	RETURN      0
; end of _DS1307_getSeconds
_eeprom_i2c_open:
;eeprom_i2c_soft.h,20 :: 		void eeprom_i2c_open(){
;eeprom_i2c_soft.h,21 :: 		I2C_soft_init();         //Initialize Soft I2C communication}
0x3C2C	0xF014ECEC  	CALL        _I2C_soft_init, 0
;eeprom_i2c_soft.h,22 :: 		}
L_end_eeprom_i2c_open:
0x3C30	0x0012      	RETURN      0
; end of _eeprom_i2c_open
_wiegand26_checkTouch:
;wiegand26.h,143 :: 		bool wiegand26_checkTouch(char bytes){
;wiegand26.h,148 :: 		for(i = 0; i < bytes; i++){
0x3C32	0x0105      	MOVLB       5
0x3C34	0x6B55      	CLRF        wiegand26_checkTouch_i_L0, 1
L_wiegand26_checkTouch597:
0x3C36	0x5154      	MOVF        FARG_wiegand26_checkTouch_bytes, 0, 1
0x3C38	0x5D55      	SUBWF       wiegand26_checkTouch_i_L0, 0, 1
0x3C3A	0xE222      	BC          L_wiegand26_checkTouch598
;wiegand26.h,149 :: 		nibleL = ~getByte(WIEGAN26_BUFFER,i);
0x3C3C	0x0E34      	MOVLW       Validadora_WIEGAN26_BUFFER
0x3C3E	0x6EE9      	MOVWF       FSR0L 
0x3C40	0x0E03      	MOVLW       hi_addr(Validadora_WIEGAN26_BUFFER)
0x3C42	0x6EEA      	MOVWF       FSR0H 
0x3C44	0x5155      	MOVF        wiegand26_checkTouch_i_L0, 0, 1
0x3C46	0x26E9      	ADDWF       FSR0L, 1 
0x3C48	0xB0D8      	BTFSC       STATUS, 0 
0x3C4A	0x2AEA      	INCF        FSR0H, 1 
0x3C4C	0x1CEE      	COMF        POSTINC0, 0 
0x3C4E	0x6F57      	MOVWF       wiegand26_checkTouch_nibleL_L0, 1
;wiegand26.h,150 :: 		nibleL &= 0x0F;
0x3C50	0x0E0F      	MOVLW       15
0x3C52	0x1757      	ANDWF       wiegand26_checkTouch_nibleL_L0, 1, 1
;wiegand26.h,151 :: 		nibleH = swap(getByte(WIEGAN26_BUFFER,i));
0x3C54	0x0E34      	MOVLW       Validadora_WIEGAN26_BUFFER
0x3C56	0x6EE9      	MOVWF       FSR0L 
0x3C58	0x0E03      	MOVLW       hi_addr(Validadora_WIEGAN26_BUFFER)
0x3C5A	0x6EEA      	MOVWF       FSR0H 
0x3C5C	0x5155      	MOVF        wiegand26_checkTouch_i_L0, 0, 1
0x3C5E	0x26E9      	ADDWF       FSR0L, 1 
0x3C60	0xB0D8      	BTFSC       STATUS, 0 
0x3C62	0x2AEA      	INCF        FSR0H, 1 
0x3C64	0xF590CFEE  	MOVFF       POSTINC0, FARG_Swap_input
0x3C68	0xF005ECEB  	CALL        _Swap, 0
0x3C6C	0xF556C000  	MOVFF       R0, wiegand26_checkTouch_nibleH_L0
;wiegand26.h,152 :: 		nibleH &= 0x0F;
0x3C70	0x0E0F      	MOVLW       15
0x3C72	0x1756      	ANDWF       wiegand26_checkTouch_nibleH_L0, 1, 1
;wiegand26.h,154 :: 		if(nibleH != nibleL)
0x3C74	0x5156      	MOVF        wiegand26_checkTouch_nibleH_L0, 0, 1
0x3C76	0x1957      	XORWF       wiegand26_checkTouch_nibleL_L0, 0, 1
0x3C78	0xE001      	BZ          L_wiegand26_checkTouch600
;wiegand26.h,155 :: 		break;
0x3C7A	0xD002      	BRA         L_wiegand26_checkTouch598
L_wiegand26_checkTouch600:
;wiegand26.h,148 :: 		for(i = 0; i < bytes; i++){
0x3C7C	0x2B55      	INCF        wiegand26_checkTouch_i_L0, 1, 1
;wiegand26.h,156 :: 		}
0x3C7E	0xD7DB      	BRA         L_wiegand26_checkTouch597
L_wiegand26_checkTouch598:
;wiegand26.h,159 :: 		if(i == bytes)
0x3C80	0x5155      	MOVF        wiegand26_checkTouch_i_L0, 0, 1
0x3C82	0x1954      	XORWF       FARG_wiegand26_checkTouch_bytes, 0, 1
0x3C84	0xE103      	BNZ         L_wiegand26_checkTouch601
;wiegand26.h,160 :: 		return true;
0x3C86	0x0E01      	MOVLW       1
0x3C88	0x6E00      	MOVWF       R0 
0x3C8A	0xD001      	BRA         L_end_wiegand26_checkTouch
L_wiegand26_checkTouch601:
;wiegand26.h,162 :: 		return false;
0x3C8C	0x6A00      	CLRF        R0 
;wiegand26.h,163 :: 		}
L_end_wiegand26_checkTouch:
0x3C8E	0x0012      	RETURN      0
; end of _wiegand26_checkTouch
_timer2_open:
;lib_timer2.h,9 :: 		void timer2_open(long time_us, bool powerOn, bool enable, bool priorityHigh){
;lib_timer2.h,10 :: 		char pres = 1, post, auxPre = 0xFF;
0x3C90	0x0E01      	MOVLW       1
0x3C92	0x0105      	MOVLB       5
0x3C94	0x6F5C      	MOVWF       timer2_open_pres_L0, 1
0x3C96	0x0EFF      	MOVLW       255
0x3C98	0x6F5D      	MOVWF       timer2_open_auxPre_L0, 1
;lib_timer2.h,14 :: 		time_us *= Clock_Mhz();
0x3C9A	0xF000C554  	MOVFF       FARG_timer2_open_time_us, R0
0x3C9E	0xF001C555  	MOVFF       FARG_timer2_open_time_us+1, R1
0x3CA2	0xF002C556  	MOVFF       FARG_timer2_open_time_us+2, R2
0x3CA6	0xF003C557  	MOVFF       FARG_timer2_open_time_us+3, R3
0x3CAA	0x0E0A      	MOVLW       10
0x3CAC	0x6E04      	MOVWF       R4 
0x3CAE	0x0E00      	MOVLW       0
0x3CB0	0x6E05      	MOVWF       R5 
0x3CB2	0x6E06      	MOVWF       R6 
0x3CB4	0x6E07      	MOVWF       R7 
0x3CB6	0xF004EC29  	CALL        _Mul_32x32_U, 0
0x3CBA	0xF554C000  	MOVFF       R0, FARG_timer2_open_time_us
0x3CBE	0xF555C001  	MOVFF       R1, FARG_timer2_open_time_us+1
0x3CC2	0xF556C002  	MOVFF       R2, FARG_timer2_open_time_us+2
0x3CC6	0xF557C003  	MOVFF       R3, FARG_timer2_open_time_us+3
;lib_timer2.h,17 :: 		for(pres = 1; pres <= 16; pres *= 4){
0x3CCA	0x0E01      	MOVLW       1
0x3CCC	0x6F5C      	MOVWF       timer2_open_pres_L0, 1
L_timer2_open147:
0x3CCE	0x515C      	MOVF        timer2_open_pres_L0, 0, 1
0x3CD0	0x0810      	SUBLW       16
0x3CD2	0xA0D8      	BTFSS       STATUS, 0 
0x3CD4	0xD07A      	BRA         L_timer2_open148
;lib_timer2.h,18 :: 		auxPre++;
0x3CD6	0x2B5D      	INCF        timer2_open_auxPre_L0, 1, 1
;lib_timer2.h,19 :: 		for(post = 1; post <= 16; post++){
0x3CD8	0x0E01      	MOVLW       1
0x3CDA	0x6F5B      	MOVWF       timer2_open_post_L0, 1
L_timer2_open150:
0x3CDC	0x515B      	MOVF        timer2_open_post_L0, 0, 1
0x3CDE	0x0810      	SUBLW       16
0x3CE0	0xE36F      	BNC         L_timer2_open151
;lib_timer2.h,20 :: 		if(time_us/(pres*post*4U) <= 255){
0x3CE2	0x515C      	MOVF        timer2_open_pres_L0, 0, 1
0x3CE4	0x035B      	MULWF       timer2_open_post_L0, 1
0x3CE6	0xF001CFF3  	MOVFF       PRODL, R1
0x3CEA	0xF002CFF4  	MOVFF       PRODH, R2
0x3CEE	0xF004C001  	MOVFF       R1, R4
0x3CF2	0xF005C002  	MOVFF       R2, R5
0x3CF6	0x3604      	RLCF        R4, 1 
0x3CF8	0x9004      	BCF         R4, 0 
0x3CFA	0x3605      	RLCF        R5, 1 
0x3CFC	0x3604      	RLCF        R4, 1 
0x3CFE	0x9004      	BCF         R4, 0 
0x3D00	0x3605      	RLCF        R5, 1 
0x3D02	0x0E00      	MOVLW       0
0x3D04	0xBE05      	BTFSC       R5, 7 
0x3D06	0x0EFF      	MOVLW       255
0x3D08	0x6E06      	MOVWF       R6 
0x3D0A	0x6E07      	MOVWF       R7 
0x3D0C	0xF000C554  	MOVFF       FARG_timer2_open_time_us, R0
0x3D10	0xF001C555  	MOVFF       FARG_timer2_open_time_us+1, R1
0x3D14	0xF002C556  	MOVFF       FARG_timer2_open_time_us+2, R2
0x3D18	0xF003C557  	MOVFF       FARG_timer2_open_time_us+3, R3
0x3D1C	0xF002ECEB  	CALL        _Div_32x32_S, 0
0x3D20	0x0E80      	MOVLW       128
0x3D22	0x6E04      	MOVWF       R4 
0x3D24	0x0E80      	MOVLW       128
0x3D26	0x1803      	XORWF       R3, 0 
0x3D28	0x5C04      	SUBWF       R4, 0 
0x3D2A	0xE108      	BNZ         L__timer2_open1051
0x3D2C	0x5002      	MOVF        R2, 0 
0x3D2E	0x0800      	SUBLW       0
0x3D30	0xE105      	BNZ         L__timer2_open1051
0x3D32	0x5001      	MOVF        R1, 0 
0x3D34	0x0800      	SUBLW       0
0x3D36	0xE102      	BNZ         L__timer2_open1051
0x3D38	0x5000      	MOVF        R0, 0 
0x3D3A	0x08FF      	SUBLW       255
L__timer2_open1051:
0x3D3C	0xE33E      	BNC         L_timer2_open153
;lib_timer2.h,21 :: 		time_us /= 4;
0x3D3E	0x0E04      	MOVLW       4
0x3D40	0x6E04      	MOVWF       R4 
0x3D42	0x0E00      	MOVLW       0
0x3D44	0x6E05      	MOVWF       R5 
0x3D46	0x6E06      	MOVWF       R6 
0x3D48	0x6E07      	MOVWF       R7 
0x3D4A	0xF000C554  	MOVFF       FARG_timer2_open_time_us, R0
0x3D4E	0xF001C555  	MOVFF       FARG_timer2_open_time_us+1, R1
0x3D52	0xF002C556  	MOVFF       FARG_timer2_open_time_us+2, R2
0x3D56	0xF003C557  	MOVFF       FARG_timer2_open_time_us+3, R3
0x3D5A	0xF002ECEB  	CALL        _Div_32x32_S, 0
0x3D5E	0xF554C000  	MOVFF       R0, FARG_timer2_open_time_us
0x3D62	0xF555C001  	MOVFF       R1, FARG_timer2_open_time_us+1
0x3D66	0xF556C002  	MOVFF       R2, FARG_timer2_open_time_us+2
0x3D6A	0xF557C003  	MOVFF       R3, FARG_timer2_open_time_us+3
;lib_timer2.h,22 :: 		time_us /= pres;
0x3D6E	0xF004C55C  	MOVFF       timer2_open_pres_L0, R4
0x3D72	0x0E00      	MOVLW       0
0x3D74	0x6E05      	MOVWF       R5 
0x3D76	0x6E06      	MOVWF       R6 
0x3D78	0x6E07      	MOVWF       R7 
0x3D7A	0xF002ECEB  	CALL        _Div_32x32_S, 0
0x3D7E	0xF554C000  	MOVFF       R0, FARG_timer2_open_time_us
0x3D82	0xF555C001  	MOVFF       R1, FARG_timer2_open_time_us+1
0x3D86	0xF556C002  	MOVFF       R2, FARG_timer2_open_time_us+2
0x3D8A	0xF557C003  	MOVFF       R3, FARG_timer2_open_time_us+3
;lib_timer2.h,23 :: 		time_us /= post;
0x3D8E	0xF004C55B  	MOVFF       timer2_open_post_L0, R4
0x3D92	0x0E00      	MOVLW       0
0x3D94	0x6E05      	MOVWF       R5 
0x3D96	0x6E06      	MOVWF       R6 
0x3D98	0x6E07      	MOVWF       R7 
0x3D9A	0xF002ECEB  	CALL        _Div_32x32_S, 0
0x3D9E	0xF554C000  	MOVFF       R0, FARG_timer2_open_time_us
0x3DA2	0xF555C001  	MOVFF       R1, FARG_timer2_open_time_us+1
0x3DA6	0xF556C002  	MOVFF       R2, FARG_timer2_open_time_us+2
0x3DAA	0xF557C003  	MOVFF       R3, FARG_timer2_open_time_us+3
;lib_timer2.h,24 :: 		PR2 = time_us;
0x3DAE	0xFFCBC000  	MOVFF       R0, PR2
;lib_timer2.h,25 :: 		pres = 16; //Para fozar salir del otro for
0x3DB2	0x0E10      	MOVLW       16
0x3DB4	0x0105      	MOVLB       5
0x3DB6	0x6F5C      	MOVWF       timer2_open_pres_L0, 1
;lib_timer2.h,26 :: 		break;
0x3DB8	0xD003      	BRA         L_timer2_open151
;lib_timer2.h,27 :: 		}
L_timer2_open153:
0x3DBA	0x0105      	MOVLB       5
;lib_timer2.h,19 :: 		for(post = 1; post <= 16; post++){
0x3DBC	0x2B5B      	INCF        timer2_open_post_L0, 1, 1
;lib_timer2.h,28 :: 		}
0x3DBE	0xD78E      	BRA         L_timer2_open150
L_timer2_open151:
;lib_timer2.h,17 :: 		for(pres = 1; pres <= 16; pres *= 4){
0x3DC0	0x375C      	RLCF        timer2_open_pres_L0, 1, 1
0x3DC2	0x915C      	BCF         timer2_open_pres_L0, 0, 1
0x3DC4	0x375C      	RLCF        timer2_open_pres_L0, 1, 1
0x3DC6	0x915C      	BCF         timer2_open_pres_L0, 0, 1
;lib_timer2.h,29 :: 		}
0x3DC8	0xD782      	BRA         L_timer2_open147
L_timer2_open148:
;lib_timer2.h,32 :: 		T2CON.T2CKPS0 = auxPre.B0;  //Prescaler
0x3DCA	0xB15D      	BTFSC       timer2_open_auxPre_L0, 0, 1
0x3DCC	0xD002      	BRA         L__timer2_open1052
0x3DCE	0x90CA      	BCF         T2CON, 0 
0x3DD0	0xD001      	BRA         L__timer2_open1053
L__timer2_open1052:
0x3DD2	0x80CA      	BSF         T2CON, 0 
L__timer2_open1053:
;lib_timer2.h,33 :: 		T2CON.T2CKPS1 = auxPre.B1;  //Prescaler
0x3DD4	0xB35D      	BTFSC       timer2_open_auxPre_L0, 1, 1
0x3DD6	0xD002      	BRA         L__timer2_open1054
0x3DD8	0x92CA      	BCF         T2CON, 1 
0x3DDA	0xD001      	BRA         L__timer2_open1055
L__timer2_open1054:
0x3DDC	0x82CA      	BSF         T2CON, 1 
L__timer2_open1055:
;lib_timer2.h,34 :: 		post--;
0x3DDE	0x075B      	DECF        timer2_open_post_L0, 1, 1
;lib_timer2.h,35 :: 		T2CON.T2OUTPS0 = post.B0;   //Postcaler
0x3DE0	0xB15B      	BTFSC       timer2_open_post_L0, 0, 1
0x3DE2	0xD002      	BRA         L__timer2_open1056
0x3DE4	0x96CA      	BCF         T2CON, 3 
0x3DE6	0xD001      	BRA         L__timer2_open1057
L__timer2_open1056:
0x3DE8	0x86CA      	BSF         T2CON, 3 
L__timer2_open1057:
;lib_timer2.h,36 :: 		T2CON.T2OUTPS1 = post.B1;   //Postcaler
0x3DEA	0xB35B      	BTFSC       timer2_open_post_L0, 1, 1
0x3DEC	0xD002      	BRA         L__timer2_open1058
0x3DEE	0x98CA      	BCF         T2CON, 4 
0x3DF0	0xD001      	BRA         L__timer2_open1059
L__timer2_open1058:
0x3DF2	0x88CA      	BSF         T2CON, 4 
L__timer2_open1059:
;lib_timer2.h,37 :: 		T2CON.T2OUTPS2 = post.B2;   //Postcaler
0x3DF4	0xB55B      	BTFSC       timer2_open_post_L0, 2, 1
0x3DF6	0xD002      	BRA         L__timer2_open1060
0x3DF8	0x9ACA      	BCF         T2CON, 5 
0x3DFA	0xD001      	BRA         L__timer2_open1061
L__timer2_open1060:
0x3DFC	0x8ACA      	BSF         T2CON, 5 
L__timer2_open1061:
;lib_timer2.h,38 :: 		T2CON.T2OUTPS3 = post.B3;   //Postcaler
0x3DFE	0xB75B      	BTFSC       timer2_open_post_L0, 3, 1
0x3E00	0xD002      	BRA         L__timer2_open1062
0x3E02	0x9CCA      	BCF         T2CON, 6 
0x3E04	0xD001      	BRA         L__timer2_open1063
L__timer2_open1062:
0x3E06	0x8CCA      	BSF         T2CON, 6 
L__timer2_open1063:
;lib_timer2.h,41 :: 		TMR2 = 0;
0x3E08	0x6ACC      	CLRF        TMR2 
;lib_timer2.h,44 :: 		PIR1.TMR2IF = 0;            //LIMPIAR BANDERA
0x3E0A	0x929E      	BCF         PIR1, 1 
;lib_timer2.h,45 :: 		PIE1.TMR2IE = enable;       //ACTIVAR O DESACTIVAR TIMER
0x3E0C	0xB159      	BTFSC       FARG_timer2_open_enable, 0, 1
0x3E0E	0xD002      	BRA         L__timer2_open1064
0x3E10	0x929D      	BCF         PIE1, 1 
0x3E12	0xD001      	BRA         L__timer2_open1065
L__timer2_open1064:
0x3E14	0x829D      	BSF         PIE1, 1 
L__timer2_open1065:
;lib_timer2.h,46 :: 		IPR1.TMR2IP = priorityHigh; //TIPO DE PRIORIDAD
0x3E16	0xB15A      	BTFSC       FARG_timer2_open_priorityHigh, 0, 1
0x3E18	0xD002      	BRA         L__timer2_open1066
0x3E1A	0x929F      	BCF         IPR1, 1 
0x3E1C	0xD001      	BRA         L__timer2_open1067
L__timer2_open1066:
0x3E1E	0x829F      	BSF         IPR1, 1 
L__timer2_open1067:
;lib_timer2.h,47 :: 		T2CON.TMR2ON = powerOn;     //ENCENDER TIMER
0x3E20	0xB158      	BTFSC       FARG_timer2_open_powerOn, 0, 1
0x3E22	0xD002      	BRA         L__timer2_open1068
0x3E24	0x94CA      	BCF         T2CON, 2 
0x3E26	0xD001      	BRA         L__timer2_open1069
L__timer2_open1068:
0x3E28	0x84CA      	BSF         T2CON, 2 
L__timer2_open1069:
;lib_timer2.h,48 :: 		}
L_end_timer2_open:
0x3E2A	0x0012      	RETURN      0
; end of _timer2_open
_Div_32x32_FP:
;__Lib_MathDouble.c,1325 :: 		
;__Lib_MathDouble.c,1339 :: 		
0x3E2C	0x5004      	MOVF        R4, 0 
0x3E2E	0x0A00      	XORLW       0
0x3E30	0xE112      	BNZ         L_Div_32x32_FP11
;__Lib_MathDouble.c,1340 :: 		
0x3E32	0x5005      	MOVF        R5, 0 
0x3E34	0x0A00      	XORLW       0
0x3E36	0xE10F      	BNZ         L_Div_32x32_FP12
;__Lib_MathDouble.c,1341 :: 		
0x3E38	0x5006      	MOVF        R6, 0 
0x3E3A	0x0A00      	XORLW       0
0x3E3C	0xE10C      	BNZ         L_Div_32x32_FP13
;__Lib_MathDouble.c,1342 :: 		
0x3E3E	0x5007      	MOVF        R7, 0 
0x3E40	0x0A00      	XORLW       0
0x3E42	0xE109      	BNZ         L_Div_32x32_FP14
;__Lib_MathDouble.c,1343 :: 		
0x3E44	0x0EFF      	MOVLW       255
0x3E46	0x6E00      	MOVWF       R0 
;__Lib_MathDouble.c,1344 :: 		
0x3E48	0x0EFF      	MOVLW       255
0x3E4A	0x6E01      	MOVWF       R1 
;__Lib_MathDouble.c,1345 :: 		
0x3E4C	0x0E7F      	MOVLW       127
0x3E4E	0x6E02      	MOVWF       R2 
;__Lib_MathDouble.c,1346 :: 		
0x3E50	0x0EFF      	MOVLW       255
0x3E52	0x6E03      	MOVWF       R3 
;__Lib_MathDouble.c,1347 :: 		
0x3E54	0xD0A8      	BRA         L_end_Div_32x32_FP
;__Lib_MathDouble.c,1348 :: 		
L_Div_32x32_FP14:
L_Div_32x32_FP13:
L_Div_32x32_FP12:
L_Div_32x32_FP11:
;__Lib_MathDouble.c,1353 :: 		
0x3E56	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,1354 :: 		
0x3E58	0x6A09      	CLRF        R9, 0
;__Lib_MathDouble.c,1356 :: 		
0x3E5A	0x5007      	MOVF        R7, 0, 0
;__Lib_MathDouble.c,1357 :: 		
0x3E5C	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1358 :: 		
0x3E5E	0xF01FEFC1  	GOTO        JPDSETFDZ32
;__Lib_MathDouble.c,1360 :: 		
0x3E62	0x5003      	MOVF        R3, 0, 0
;__Lib_MathDouble.c,1361 :: 		
0x3E64	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1362 :: 		
0x3E66	0xF01FEFC6  	GOTO        JPDRES032
;__Lib_MathDouble.c,1364 :: 		
0x3E6A	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,1365 :: 		
0x3E6C	0x1806      	XORWF       R6, 0, 0
;__Lib_MathDouble.c,1366 :: 		
0x3E6E	0x6E0A      	MOVWF       R10, 0
;__Lib_MathDouble.c,1367 :: 		
0x3E70	0x8E02      	BSF         R2, 7, 0
;__Lib_MathDouble.c,1368 :: 		
0x3E72	0x8E06      	BSF         R6, 7, 0
;__Lib_MathDouble.c,1370 :: 		
0x3E74	0x6A0E      	CLRF        R14, 0
;__Lib_MathDouble.c,1371 :: 		
0x3E76	0xF008C002  	MOVFF       R2, R8
;__Lib_MathDouble.c,1372 :: 		
0x3E7A	0xF00CC001  	MOVFF       R1, R12
;__Lib_MathDouble.c,1373 :: 		
0x3E7E	0xF00DC000  	MOVFF       R0, R13
;__Lib_MathDouble.c,1375 :: 		
0x3E82	0x5004      	MOVF        R4, 0, 0
;__Lib_MathDouble.c,1376 :: 		
0x3E84	0x5E0D      	SUBWF       R13, 1, 0
;__Lib_MathDouble.c,1377 :: 		
0x3E86	0x5005      	MOVF        R5, 0, 0
;__Lib_MathDouble.c,1378 :: 		
0x3E88	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1379 :: 		
0x3E8A	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_MathDouble.c,1381 :: 		
0x3E8C	0x5E0C      	SUBWF       R12, 1, 0
;__Lib_MathDouble.c,1382 :: 		
0x3E8E	0x5006      	MOVF        R6, 0, 0
;__Lib_MathDouble.c,1383 :: 		
0x3E90	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1384 :: 		
0x3E92	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_MathDouble.c,1386 :: 		
0x3E94	0x5E08      	SUBWF       R8, 1, 0
;__Lib_MathDouble.c,1387 :: 		
0x3E96	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,1388 :: 		
0x3E98	0x6A0C      	CLRF        R12, 0
;__Lib_MathDouble.c,1389 :: 		
0x3E9A	0x6A0D      	CLRF        R13, 0
;__Lib_MathDouble.c,1390 :: 		
0x3E9C	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1391 :: 		
0x3E9E	0xF01FEF58  	GOTO        DALIGN32OK
;__Lib_MathDouble.c,1393 :: 		
0x3EA2	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,1394 :: 		
0x3EA4	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,1395 :: 		
0x3EA6	0x3201      	RRCF        R1, 1, 0
;__Lib_MathDouble.c,1396 :: 		
0x3EA8	0x3200      	RRCF        R0, 1, 0
;__Lib_MathDouble.c,1397 :: 		
0x3EAA	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,1398 :: 		
0x3EAC	0x0E01      	MOVLW       1
;__Lib_MathDouble.c,1399 :: 		
0x3EAE	0x6E0E      	MOVWF       R14, 0
;__Lib_MathDouble.c,1400 :: 		
DALIGN32OK:
;__Lib_MathDouble.c,1401 :: 		
0x3EB0	0x5007      	MOVF        R7, 0, 0
;__Lib_MathDouble.c,1402 :: 		
0x3EB2	0x5E03      	SUBWF       R3, 1, 0
;__Lib_MathDouble.c,1403 :: 		
0x3EB4	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1404 :: 		
0x3EB6	0xF01FEF65  	GOTO        ALTB32
;__Lib_MathDouble.c,1406 :: 		
0x3EBA	0x0E7E      	MOVLW       126
;__Lib_MathDouble.c,1407 :: 		
0x3EBC	0x240E      	ADDWF       R14, 0, 0
;__Lib_MathDouble.c,1408 :: 		
0x3EBE	0x2603      	ADDWF       R3, 1, 0
;__Lib_MathDouble.c,1409 :: 		
0x3EC0	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_MathDouble.c,1410 :: 		
0x3EC2	0xF01FEFCB  	GOTO        JPDSETFOV32
;__Lib_MathDouble.c,1411 :: 		
0x3EC6	0xF01FEF6B  	GOTO        DARGOK32
;__Lib_MathDouble.c,1412 :: 		
ALTB32:
;__Lib_MathDouble.c,1413 :: 		
0x3ECA	0x0E7E      	MOVLW       126
;__Lib_MathDouble.c,1414 :: 		
0x3ECC	0x240E      	ADDWF       R14, 0, 0
;__Lib_MathDouble.c,1415 :: 		
0x3ECE	0x2603      	ADDWF       R3, 1, 0
;__Lib_MathDouble.c,1416 :: 		
0x3ED0	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1417 :: 		
0x3ED2	0xF01FEFD0  	GOTO        JPDSETFUN32
;__Lib_MathDouble.c,1418 :: 		
DARGOK32:
;__Lib_MathDouble.c,1419 :: 		
0x3ED6	0x0E18      	MOVLW       24
;__Lib_MathDouble.c,1420 :: 		
0x3ED8	0x6E0B      	MOVWF       R11, 0
;__Lib_MathDouble.c,1421 :: 		
DLOOP32:
;__Lib_MathDouble.c,1422 :: 		
0x3EDA	0x360D      	RLCF        R13, 1, 0
;__Lib_MathDouble.c,1423 :: 		
0x3EDC	0x360C      	RLCF        R12, 1, 0
;__Lib_MathDouble.c,1424 :: 		
0x3EDE	0x3608      	RLCF        R8, 1, 0
;__Lib_MathDouble.c,1425 :: 		
0x3EE0	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,1426 :: 		
0x3EE2	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,1427 :: 		
0x3EE4	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,1428 :: 		
0x3EE6	0x360E      	RLCF        R14, 1, 0
;__Lib_MathDouble.c,1430 :: 		
0x3EE8	0x5004      	MOVF        R4, 0, 0
;__Lib_MathDouble.c,1431 :: 		
0x3EEA	0x5E00      	SUBWF       R0, 1, 0
;__Lib_MathDouble.c,1432 :: 		
0x3EEC	0x5005      	MOVF        R5, 0, 0
;__Lib_MathDouble.c,1433 :: 		
0x3EEE	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1434 :: 		
0x3EF0	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_MathDouble.c,1436 :: 		
0x3EF2	0x5E01      	SUBWF       R1, 1, 0
;__Lib_MathDouble.c,1437 :: 		
0x3EF4	0x5006      	MOVF        R6, 0, 0
;__Lib_MathDouble.c,1438 :: 		
0x3EF6	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1439 :: 		
0x3EF8	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_MathDouble.c,1441 :: 		
0x3EFA	0x5E02      	SUBWF       R2, 1, 0
;__Lib_MathDouble.c,1442 :: 		
0x3EFC	0x3406      	RLCF        R6, 0, 0
;__Lib_MathDouble.c,1443 :: 		
0x3EFE	0x120E      	IORWF       R14, 1, 0
;__Lib_MathDouble.c,1444 :: 		
0x3F00	0xA00E      	BTFSS       R14, 0, 0
;__Lib_MathDouble.c,1445 :: 		
0x3F02	0xF01FEF86  	GOTO        DREST32
;__Lib_MathDouble.c,1446 :: 		
0x3F06	0x800D      	BSF         R13, 0, 0
;__Lib_MathDouble.c,1447 :: 		
0x3F08	0xF01FEF91  	GOTO        DOK32
;__Lib_MathDouble.c,1448 :: 		
DREST32:
;__Lib_MathDouble.c,1449 :: 		
0x3F0C	0x5004      	MOVF        R4, 0, 0
;__Lib_MathDouble.c,1450 :: 		
0x3F0E	0x2600      	ADDWF       R0, 1, 0
;__Lib_MathDouble.c,1451 :: 		
0x3F10	0x5005      	MOVF        R5, 0, 0
;__Lib_MathDouble.c,1452 :: 		
0x3F12	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_MathDouble.c,1453 :: 		
0x3F14	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_MathDouble.c,1455 :: 		
0x3F16	0x2601      	ADDWF       R1, 1, 0
;__Lib_MathDouble.c,1456 :: 		
0x3F18	0x5006      	MOVF        R6, 0, 0
;__Lib_MathDouble.c,1457 :: 		
0x3F1A	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_MathDouble.c,1458 :: 		
0x3F1C	0x2806      	INCF        R6, 0, 0
;__Lib_MathDouble.c,1459 :: 		
0x3F1E	0x2602      	ADDWF       R2, 1, 0
;__Lib_MathDouble.c,1460 :: 		
0x3F20	0x900D      	BCF         R13, 0, 0
;__Lib_MathDouble.c,1461 :: 		
DOK32:
;__Lib_MathDouble.c,1462 :: 		
0x3F22	0x2E0B      	DECFSZ      R11, 1, 0
;__Lib_MathDouble.c,1463 :: 		
0x3F24	0xF01FEF6D  	GOTO        DLOOP32
;__Lib_MathDouble.c,1467 :: 		
0x3F28	0xF01FEFB7  	GOTO        DIV32OK
;__Lib_MathDouble.c,1468 :: 		
0x3F2C	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,1469 :: 		
0x3F2E	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,1470 :: 		
0x3F30	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,1471 :: 		
0x3F32	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,1472 :: 		
0x3F34	0x360E      	RLCF        R14, 1, 0
;__Lib_MathDouble.c,1474 :: 		
0x3F36	0x5004      	MOVF        R4, 0, 0
;__Lib_MathDouble.c,1475 :: 		
0x3F38	0x5E00      	SUBWF       R0, 1, 0
;__Lib_MathDouble.c,1476 :: 		
0x3F3A	0x5005      	MOVF        R5, 0, 0
;__Lib_MathDouble.c,1477 :: 		
0x3F3C	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1478 :: 		
0x3F3E	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_MathDouble.c,1479 :: 		
0x3F40	0x5E01      	SUBWF       R1, 1, 0
;__Lib_MathDouble.c,1480 :: 		
0x3F42	0x5006      	MOVF        R6, 0, 0
;__Lib_MathDouble.c,1481 :: 		
0x3F44	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1482 :: 		
0x3F46	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_MathDouble.c,1483 :: 		
0x3F48	0x5E02      	SUBWF       R2, 1, 0
;__Lib_MathDouble.c,1484 :: 		
0x3F4A	0x3406      	RLCF        R6, 0, 0
;__Lib_MathDouble.c,1485 :: 		
0x3F4C	0x100E      	IORWF       R14, 0, 0
;__Lib_MathDouble.c,1486 :: 		
0x3F4E	0x0B01      	ANDLW       1
;__Lib_MathDouble.c,1487 :: 		
0x3F50	0x260D      	ADDWF       R13, 1, 0
;__Lib_MathDouble.c,1488 :: 		
0x3F52	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_MathDouble.c,1489 :: 		
0x3F54	0x2A0C      	INCF        R12, 1, 0
;__Lib_MathDouble.c,1490 :: 		
0x3F56	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1491 :: 		
0x3F58	0x2A08      	INCF        R8, 1, 0
;__Lib_MathDouble.c,1492 :: 		
0x3F5A	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,1493 :: 		
0x3F5C	0xF01FEFB7  	GOTO        DIV32OK
;__Lib_MathDouble.c,1494 :: 		
0x3F60	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,1495 :: 		
0x3F62	0x320C      	RRCF        R12, 1, 0
;__Lib_MathDouble.c,1496 :: 		
0x3F64	0x320D      	RRCF        R13, 1, 0
;__Lib_MathDouble.c,1497 :: 		
0x3F66	0x2A03      	INCF        R3, 1, 0
;__Lib_MathDouble.c,1498 :: 		
0x3F68	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1499 :: 		
0x3F6A	0xF01FEFCB  	GOTO        JPDSETFOV32
;__Lib_MathDouble.c,1500 :: 		
DIV32OK:
;__Lib_MathDouble.c,1501 :: 		
0x3F6E	0xAE0A      	BTFSS       R10, 7, 0
;__Lib_MathDouble.c,1502 :: 		
0x3F70	0x9E08      	BCF         R8, 7, 0
;__Lib_MathDouble.c,1503 :: 		
0x3F72	0x5008      	MOVF        R8, 0, 0
;__Lib_MathDouble.c,1504 :: 		
0x3F74	0x6E02      	MOVWF       R2, 0
;__Lib_MathDouble.c,1505 :: 		
0x3F76	0x500C      	MOVF        R12, 0, 0
;__Lib_MathDouble.c,1506 :: 		
0x3F78	0x6E01      	MOVWF       R1, 0
;__Lib_MathDouble.c,1507 :: 		
0x3F7A	0x500D      	MOVF        R13, 0, 0
;__Lib_MathDouble.c,1508 :: 		
0x3F7C	0x6E00      	MOVWF       R0, 0
;__Lib_MathDouble.c,1511 :: 		
0x3F7E	0xF01FEFD3  	GOTO        DIV32EEE
;__Lib_MathDouble.c,1512 :: 		
JPDSETFDZ32:
;__Lib_MathDouble.c,1513 :: 		
0x3F82	0x0E01      	MOVLW       1
;__Lib_MathDouble.c,1516 :: 		
0x3F84	0xF00BEC6C  	CALL        _SETFDZ32, 0
;__Lib_MathDouble.c,1518 :: 		
0x3F88	0xF01FEFD3  	GOTO        DIV32EEE
;__Lib_MathDouble.c,1519 :: 		
JPDRES032:
;__Lib_MathDouble.c,1520 :: 		
0x3F8C	0x0E02      	MOVLW       2
;__Lib_MathDouble.c,1523 :: 		
0x3F8E	0xF007EC29  	CALL        _RES032, 0
;__Lib_MathDouble.c,1525 :: 		
0x3F92	0xF01FEFD3  	GOTO        DIV32EEE
;__Lib_MathDouble.c,1526 :: 		
JPDSETFOV32:
;__Lib_MathDouble.c,1527 :: 		
0x3F96	0x0E04      	MOVLW       4
;__Lib_MathDouble.c,1530 :: 		
0x3F98	0xF008EC1E  	CALL        _SETFOV32, 0
;__Lib_MathDouble.c,1532 :: 		
0x3F9C	0xF01FEFD3  	GOTO        DIV32EEE
;__Lib_MathDouble.c,1533 :: 		
JPDSETFUN32:
;__Lib_MathDouble.c,1534 :: 		
0x3FA0	0x0E08      	MOVLW       8
;__Lib_MathDouble.c,1537 :: 		
0x3FA2	0xF006EC00  	CALL        _SETFUN32, 0
;__Lib_MathDouble.c,1539 :: 		
DIV32EEE:
;__Lib_MathDouble.c,1547 :: 		
L_end_Div_32x32_FP:
0x3FA6	0x0012      	RETURN      0
; end of _Div_32x32_FP
_can_user_read_message:
;Validadora.c,1292 :: 		void can_user_read_message(){
;Validadora.c,1307 :: 		limpiarLCD = true;
0x3FA8	0x0E01      	MOVLW       1
0x3FAA	0x0103      	MOVLB       3
0x3FAC	0x6F10      	MOVWF       _limpiarLCD, 1
;Validadora.c,1308 :: 		tempLCD = 0;
0x3FAE	0x6B0F      	CLRF        _tempLCD, 1
;Validadora.c,1309 :: 		lcd_clean_row(3);
0x3FB0	0x0E03      	MOVLW       3
0x3FB2	0x0105      	MOVLB       5
0x3FB4	0x6F78      	MOVWF       FARG_lcd_clean_row_fila, 1
0x3FB6	0xF00FECA1  	CALL        _lcd_clean_row, 0
;Validadora.c,1310 :: 		lcd_out(3,17,"MSG");
0x3FBA	0x0E03      	MOVLW       3
0x3FBC	0x6F78      	MOVWF       FARG_Lcd_Out_row, 1
0x3FBE	0x0E11      	MOVLW       17
0x3FC0	0x6F79      	MOVWF       FARG_Lcd_Out_column, 1
0x3FC2	0x0E21      	MOVLW       ?lstr38_Validadora
0x3FC4	0x6F7A      	MOVWF       FARG_Lcd_Out_text, 1
0x3FC6	0x0E00      	MOVLW       hi_addr(?lstr38_Validadora)
0x3FC8	0x6F7B      	MOVWF       FARG_Lcd_Out_text+1, 1
0x3FCA	0xF012EC66  	CALL        _Lcd_Out, 0
;Validadora.c,1314 :: 		sizeTotal = 0;
0x3FCE	0x0105      	MOVLB       5
0x3FD0	0x6B57      	CLRF        can_user_read_message_sizeTotal_L0, 1
;Validadora.c,1315 :: 		sizeKey = sizeof(CAN_PENSIONADO)-1;  //PENSIONADO: PEN+ID(HEX)+CMD+FILA+MENSAJE
0x3FD2	0x0E03      	MOVLW       3
0x3FD4	0x6F56      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Validadora.c,1316 :: 		if(string_cmpnc(CAN_PENSIONADO, &can.rxBuffer[sizeTotal], sizeKey)){
0x3FD6	0x0E5A      	MOVLW       _CAN_PENSIONADO
0x3FD8	0x6F78      	MOVWF       FARG_string_cmpnc_text1, 1
0x3FDA	0x0E9F      	MOVLW       hi_addr(_CAN_PENSIONADO)
0x3FDC	0x6F79      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x3FDE	0x0E00      	MOVLW       higher_addr(_CAN_PENSIONADO)
0x3FE0	0x6F7A      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x3FE2	0x0E2A      	MOVLW       _can+107
0x3FE4	0x6F7B      	MOVWF       FARG_string_cmpnc_text2, 1
0x3FE6	0x0E04      	MOVLW       hi_addr(_can+107)
0x3FE8	0x6F7C      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x3FEA	0x5157      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x3FEC	0x277B      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x3FEE	0xB0D8      	BTFSC       STATUS, 0 
0x3FF0	0x2B7C      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x3FF2	0x0E03      	MOVLW       3
0x3FF4	0x6F7D      	MOVWF       FARG_string_cmpnc_bytes, 1
0x3FF6	0xF016EC7C  	CALL        _string_cmpnc, 0
0x3FFA	0x5200      	MOVF        R0, 1 
0x3FFC	0xB4D8      	BTFSC       STATUS, 2 
0x3FFE	0xD36D      	BRA         L_can_user_read_message772
;Validadora.c,1318 :: 		sizeTotal += sizeKey;
0x4000	0x5156      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x4002	0x2557      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x4004	0x6E00      	MOVWF       R0 
0x4006	0xF557C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Validadora.c,1319 :: 		sizeKey = 6;  //3 Bytes en hexadecimal
0x400A	0x0E06      	MOVLW       6
0x400C	0x6F56      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Validadora.c,1320 :: 		string_cpyn(msjConst, &can.rxBuffer[sizeTotal], sizeKey);
0x400E	0x0E12      	MOVLW       _msjConst
0x4010	0x6F78      	MOVWF       FARG_string_cpyn_destino, 1
0x4012	0x0E05      	MOVLW       hi_addr(_msjConst)
0x4014	0x6F79      	MOVWF       FARG_string_cpyn_destino+1, 1
0x4016	0x0E2A      	MOVLW       _can+107
0x4018	0x6F7A      	MOVWF       FARG_string_cpyn_origen, 1
0x401A	0x0E04      	MOVLW       hi_addr(_can+107)
0x401C	0x6F7B      	MOVWF       FARG_string_cpyn_origen+1, 1
0x401E	0x5000      	MOVF        R0, 0 
0x4020	0x277A      	ADDWF       FARG_string_cpyn_origen, 1, 1
0x4022	0xB0D8      	BTFSC       STATUS, 0 
0x4024	0x2B7B      	INCF        FARG_string_cpyn_origen+1, 1, 1
0x4026	0x0E06      	MOVLW       6
0x4028	0x6F7C      	MOVWF       FARG_string_cpyn_size, 1
0x402A	0xF00DEC35  	CALL        _string_cpyn, 0
;Validadora.c,1321 :: 		idConsulta = hexToNum(msjConst);
0x402E	0x0E12      	MOVLW       _msjConst
0x4030	0x6F78      	MOVWF       FARG_hexToNum_hex, 1
0x4032	0x0E05      	MOVLW       hi_addr(_msjConst)
0x4034	0x6F79      	MOVWF       FARG_hexToNum_hex+1, 1
0x4036	0xF00EEC51  	CALL        _hexToNum, 0
0x403A	0xF55CC000  	MOVFF       R0, can_user_read_message_idConsulta_L0
0x403E	0xF55DC001  	MOVFF       R1, can_user_read_message_idConsulta_L0+1
0x4042	0xF55EC002  	MOVFF       R2, can_user_read_message_idConsulta_L0+2
0x4046	0xF55FC003  	MOVFF       R3, can_user_read_message_idConsulta_L0+3
;Validadora.c,1323 :: 		sizeTotal += sizeKey;
0x404A	0x5156      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x404C	0x2557      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x404E	0x6E00      	MOVWF       R0 
0x4050	0xF557C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Validadora.c,1324 :: 		sizeKey = sizeof(CAN_REGISTRAR)-1;  //COMANDO 3BYTES
0x4054	0x0E03      	MOVLW       3
0x4056	0x6F56      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Validadora.c,1326 :: 		string_cpyn(msjConst, &can.rxBuffer[sizeTotal+sizeKey], 4); //4 numeros fila
0x4058	0x0E12      	MOVLW       _msjConst
0x405A	0x6F78      	MOVWF       FARG_string_cpyn_destino, 1
0x405C	0x0E05      	MOVLW       hi_addr(_msjConst)
0x405E	0x6F79      	MOVWF       FARG_string_cpyn_destino+1, 1
0x4060	0x0E03      	MOVLW       3
0x4062	0x2600      	ADDWF       R0, 1 
0x4064	0x6A01      	CLRF        R1 
0x4066	0x0E00      	MOVLW       0
0x4068	0x2201      	ADDWFC      R1, 1 
0x406A	0x0E2A      	MOVLW       _can+107
0x406C	0x2400      	ADDWF       R0, 0 
0x406E	0x6F7A      	MOVWF       FARG_string_cpyn_origen, 1
0x4070	0x0E04      	MOVLW       hi_addr(_can+107)
0x4072	0x2001      	ADDWFC      R1, 0 
0x4074	0x6F7B      	MOVWF       FARG_string_cpyn_origen+1, 1
0x4076	0x0E04      	MOVLW       4
0x4078	0x6F7C      	MOVWF       FARG_string_cpyn_size, 1
0x407A	0xF00DEC35  	CALL        _string_cpyn, 0
;Validadora.c,1327 :: 		fila = stringToNum(msjConst);
0x407E	0x0E12      	MOVLW       _msjConst
0x4080	0x6F78      	MOVWF       FARG_stringToNum_cadena, 1
0x4082	0x0E05      	MOVLW       hi_addr(_msjConst)
0x4084	0x6F79      	MOVWF       FARG_stringToNum_cadena+1, 1
0x4086	0xF00DEC5C  	CALL        _stringToNum, 0
0x408A	0xF558C000  	MOVFF       R0, can_user_read_message_fila_L0
0x408E	0xF559C001  	MOVFF       R1, can_user_read_message_fila_L0+1
;Validadora.c,1329 :: 		if(string_cmpnc(CAN_REGISTRAR, &can.rxBuffer[sizeTotal], sizeKey)){
0x4092	0x0E4E      	MOVLW       _CAN_REGISTRAR
0x4094	0x6F78      	MOVWF       FARG_string_cmpnc_text1, 1
0x4096	0x0E9F      	MOVLW       hi_addr(_CAN_REGISTRAR)
0x4098	0x6F79      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x409A	0x0E00      	MOVLW       higher_addr(_CAN_REGISTRAR)
0x409C	0x6F7A      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x409E	0x0E2A      	MOVLW       _can+107
0x40A0	0x6F7B      	MOVWF       FARG_string_cmpnc_text2, 1
0x40A2	0x0E04      	MOVLW       hi_addr(_can+107)
0x40A4	0x6F7C      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x40A6	0x5157      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x40A8	0x277B      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x40AA	0xB0D8      	BTFSC       STATUS, 0 
0x40AC	0x2B7C      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x40AE	0xF57DC556  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x40B2	0xF016EC7C  	CALL        _string_cmpnc, 0
0x40B6	0x5200      	MOVF        R0, 1 
0x40B8	0xB4D8      	BTFSC       STATUS, 2 
0x40BA	0xD0B0      	BRA         L_can_user_read_message773
;Validadora.c,1331 :: 		sizeTotal += sizeKey;
0x40BC	0x5156      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x40BE	0x2557      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x40C0	0x6E00      	MOVWF       R0 
0x40C2	0xF557C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Validadora.c,1332 :: 		sizeKey = 4;  //4 POR LA FILA
0x40C6	0x0E04      	MOVLW       4
0x40C8	0x6F56      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Validadora.c,1334 :: 		idNew = idConsulta;
0x40CA	0xF560C55C  	MOVFF       can_user_read_message_idConsulta_L0, can_user_read_message_idNew_L0
0x40CE	0xF561C55D  	MOVFF       can_user_read_message_idConsulta_L0+1, can_user_read_message_idNew_L0+1
0x40D2	0xF562C55E  	MOVFF       can_user_read_message_idConsulta_L0+2, can_user_read_message_idNew_L0+2
0x40D6	0xF563C55F  	MOVFF       can_user_read_message_idConsulta_L0+3, can_user_read_message_idNew_L0+3
;Validadora.c,1336 :: 		sizeTotal += sizeKey;
0x40DA	0x0E04      	MOVLW       4
0x40DC	0x2600      	ADDWF       R0, 1 
0x40DE	0xF557C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Validadora.c,1337 :: 		sizeKey = 1;  //1 Byte
0x40E2	0x0E01      	MOVLW       1
0x40E4	0x6F56      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Validadora.c,1338 :: 		vigencia = can.rxBuffer[sizeTotal];
0x40E6	0x0E2A      	MOVLW       _can+107
0x40E8	0x6EE9      	MOVWF       FSR0L 
0x40EA	0x0E04      	MOVLW       hi_addr(_can+107)
0x40EC	0x6EEA      	MOVWF       FSR0H 
0x40EE	0x5000      	MOVF        R0, 0 
0x40F0	0x26E9      	ADDWF       FSR0L, 1 
0x40F2	0xB0D8      	BTFSC       STATUS, 0 
0x40F4	0x2AEA      	INCF        FSR0H, 1 
0x40F6	0xF55ACFEE  	MOVFF       POSTINC0, can_user_read_message_vigencia_L0
;Validadora.c,1340 :: 		sizeTotal += sizeKey;
0x40FA	0x2A00      	INCF        R0, 1 
0x40FC	0xF557C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Validadora.c,1341 :: 		sizeKey = 1;  //1 Byte
0x4100	0x0E01      	MOVLW       1
0x4102	0x6F56      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Validadora.c,1342 :: 		estatus = can.rxBuffer[sizeTotal];
0x4104	0x0E2A      	MOVLW       _can+107
0x4106	0x6EE9      	MOVWF       FSR0L 
0x4108	0x0E04      	MOVLW       hi_addr(_can+107)
0x410A	0x6EEA      	MOVWF       FSR0H 
0x410C	0x5000      	MOVF        R0, 0 
0x410E	0x26E9      	ADDWF       FSR0L, 1 
0x4110	0xB0D8      	BTFSC       STATUS, 0 
0x4112	0x2AEA      	INCF        FSR0H, 1 
0x4114	0xF55BCFEE  	MOVFF       POSTINC0, can_user_read_message_estatus_L0
;Validadora.c,1344 :: 		if(mysql_read(tablePensionados, pensionadosID, fila, &id) == TABLE_RW_NO_EXIST_ROW){
0x4118	0x0EEE      	MOVLW       _tablePensionados
0x411A	0x6F86      	MOVWF       FARG_mysql_read_name, 1
0x411C	0x0E02      	MOVLW       hi_addr(_tablePensionados)
0x411E	0x6F87      	MOVWF       FARG_mysql_read_name+1, 1
0x4120	0x0EFA      	MOVLW       _pensionadosID
0x4122	0x6F88      	MOVWF       FARG_mysql_read_column, 1
0x4124	0x0E02      	MOVLW       hi_addr(_pensionadosID)
0x4126	0x6F89      	MOVWF       FARG_mysql_read_column+1, 1
0x4128	0xF58AC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_read_fila
0x412C	0xF58BC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_read_fila+1
0x4130	0x0E64      	MOVLW       can_user_read_message_id_L0
0x4132	0x6F8C      	MOVWF       FARG_mysql_read_result, 1
0x4134	0x0E05      	MOVLW       hi_addr(can_user_read_message_id_L0)
0x4136	0x6F8D      	MOVWF       FARG_mysql_read_result+1, 1
0x4138	0xF009EC2C  	CALL        _mysql_read, 0
0x413C	0x5000      	MOVF        R0, 0 
0x413E	0x0A03      	XORLW       3
0x4140	0xE16C      	BNZ         L_can_user_read_message774
;Validadora.c,1345 :: 		if(fila == myTable.rowAct+1){
0x4142	0x0E01      	MOVLW       1
0x4144	0x0103      	MOVLB       3
0x4146	0x258F      	ADDWF       Validadora_myTable+4, 0, 1
0x4148	0x6E01      	MOVWF       R1 
0x414A	0x0E00      	MOVLW       0
0x414C	0x2190      	ADDWFC      Validadora_myTable+5, 0, 1
0x414E	0x6E02      	MOVWF       R2 
0x4150	0x0105      	MOVLB       5
0x4152	0x5159      	MOVF        can_user_read_message_fila_L0+1, 0, 1
0x4154	0x1802      	XORWF       R2, 0 
0x4156	0xE102      	BNZ         L__can_user_read_message1353
0x4158	0x5001      	MOVF        R1, 0 
0x415A	0x1958      	XORWF       can_user_read_message_fila_L0, 0, 1
L__can_user_read_message1353:
0x415C	0xE15E      	BNZ         L_can_user_read_message775
;Validadora.c,1346 :: 		if(!mysql_write(tablePensionados, pensionadosID, -1, idNew, true)){
0x415E	0x0EEE      	MOVLW       _tablePensionados
0x4160	0x6F78      	MOVWF       FARG_mysql_write_name, 1
0x4162	0x0E02      	MOVLW       hi_addr(_tablePensionados)
0x4164	0x6F79      	MOVWF       FARG_mysql_write_name+1, 1
0x4166	0x0EFA      	MOVLW       _pensionadosID
0x4168	0x6F7A      	MOVWF       FARG_mysql_write_column, 1
0x416A	0x0E02      	MOVLW       hi_addr(_pensionadosID)
0x416C	0x6F7B      	MOVWF       FARG_mysql_write_column+1, 1
0x416E	0x0EFF      	MOVLW       255
0x4170	0x6F7C      	MOVWF       FARG_mysql_write_fila, 1
0x4172	0x0EFF      	MOVLW       255
0x4174	0x6F7D      	MOVWF       FARG_mysql_write_fila+1, 1
0x4176	0xF57EC560  	MOVFF       can_user_read_message_idNew_L0, FARG_mysql_write_value
0x417A	0xF57FC561  	MOVFF       can_user_read_message_idNew_L0+1, FARG_mysql_write_value+1
0x417E	0xF580C562  	MOVFF       can_user_read_message_idNew_L0+2, FARG_mysql_write_value+2
0x4182	0xF581C563  	MOVFF       can_user_read_message_idNew_L0+3, FARG_mysql_write_value+3
0x4186	0x0E01      	MOVLW       1
0x4188	0x6F82      	MOVWF       FARG_mysql_write_endWrite, 1
0x418A	0xF014EC20  	CALL        _mysql_write, 0
0x418E	0x5200      	MOVF        R0, 1 
0x4190	0xE144      	BNZ         L_can_user_read_message776
;Validadora.c,1350 :: 		mysql_write(tablePensionados, pensionadosID, fila, idNew, false);
0x4192	0x0EEE      	MOVLW       _tablePensionados
0x4194	0x0105      	MOVLB       5
0x4196	0x6F78      	MOVWF       FARG_mysql_write_name, 1
0x4198	0x0E02      	MOVLW       hi_addr(_tablePensionados)
0x419A	0x6F79      	MOVWF       FARG_mysql_write_name+1, 1
0x419C	0x0EFA      	MOVLW       _pensionadosID
0x419E	0x6F7A      	MOVWF       FARG_mysql_write_column, 1
0x41A0	0x0E02      	MOVLW       hi_addr(_pensionadosID)
0x41A2	0x6F7B      	MOVWF       FARG_mysql_write_column+1, 1
0x41A4	0xF57CC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_fila
0x41A8	0xF57DC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_fila+1
0x41AC	0xF57EC560  	MOVFF       can_user_read_message_idNew_L0, FARG_mysql_write_value
0x41B0	0xF57FC561  	MOVFF       can_user_read_message_idNew_L0+1, FARG_mysql_write_value+1
0x41B4	0xF580C562  	MOVFF       can_user_read_message_idNew_L0+2, FARG_mysql_write_value+2
0x41B8	0xF581C563  	MOVFF       can_user_read_message_idNew_L0+3, FARG_mysql_write_value+3
0x41BC	0x6B82      	CLRF        FARG_mysql_write_endWrite, 1
0x41BE	0xF014EC20  	CALL        _mysql_write, 0
;Validadora.c,1351 :: 		mysql_write(tablePensionados, pensionadosVigencia, fila, vigencia, false);
0x41C2	0x0EEE      	MOVLW       _tablePensionados
0x41C4	0x0105      	MOVLB       5
0x41C6	0x6F78      	MOVWF       FARG_mysql_write_name, 1
0x41C8	0x0E02      	MOVLW       hi_addr(_tablePensionados)
0x41CA	0x6F79      	MOVWF       FARG_mysql_write_name+1, 1
0x41CC	0x0EE4      	MOVLW       _pensionadosVigencia
0x41CE	0x6F7A      	MOVWF       FARG_mysql_write_column, 1
0x41D0	0x0E02      	MOVLW       hi_addr(_pensionadosVigencia)
0x41D2	0x6F7B      	MOVWF       FARG_mysql_write_column+1, 1
0x41D4	0xF57CC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_fila
0x41D8	0xF57DC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_fila+1
0x41DC	0xF57EC55A  	MOVFF       can_user_read_message_vigencia_L0, FARG_mysql_write_value
0x41E0	0x0E00      	MOVLW       0
0x41E2	0x6F7F      	MOVWF       FARG_mysql_write_value+1, 1
0x41E4	0x6F80      	MOVWF       FARG_mysql_write_value+2, 1
0x41E6	0x6F81      	MOVWF       FARG_mysql_write_value+3, 1
0x41E8	0x6B82      	CLRF        FARG_mysql_write_endWrite, 1
0x41EA	0xF014EC20  	CALL        _mysql_write, 0
;Validadora.c,1352 :: 		mysql_write(tablePensionados, pensionadosEstatus, fila, estatus, false);
0x41EE	0x0EEE      	MOVLW       _tablePensionados
0x41F0	0x0105      	MOVLB       5
0x41F2	0x6F78      	MOVWF       FARG_mysql_write_name, 1
0x41F4	0x0E02      	MOVLW       hi_addr(_tablePensionados)
0x41F6	0x6F79      	MOVWF       FARG_mysql_write_name+1, 1
0x41F8	0x0ECB      	MOVLW       _pensionadosEstatus
0x41FA	0x6F7A      	MOVWF       FARG_mysql_write_column, 1
0x41FC	0x0E02      	MOVLW       hi_addr(_pensionadosEstatus)
0x41FE	0x6F7B      	MOVWF       FARG_mysql_write_column+1, 1
0x4200	0xF57CC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_fila
0x4204	0xF57DC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_fila+1
0x4208	0xF57EC55B  	MOVFF       can_user_read_message_estatus_L0, FARG_mysql_write_value
0x420C	0x0E00      	MOVLW       0
0x420E	0x6F7F      	MOVWF       FARG_mysql_write_value+1, 1
0x4210	0x6F80      	MOVWF       FARG_mysql_write_value+2, 1
0x4212	0x6F81      	MOVWF       FARG_mysql_write_value+3, 1
0x4214	0x6B82      	CLRF        FARG_mysql_write_endWrite, 1
0x4216	0xF014EC20  	CALL        _mysql_write, 0
;Validadora.c,1353 :: 		}
L_can_user_read_message776:
;Validadora.c,1354 :: 		}
L_can_user_read_message775:
;Validadora.c,1355 :: 		}
L_can_user_read_message774:
;Validadora.c,1356 :: 		}else if(string_cmpnc(CAN_ACTUALIZAR, &can.rxBuffer[sizeTotal], sizeKey)){
0x421A	0xD25D      	BRA         L_can_user_read_message777
L_can_user_read_message773:
0x421C	0x0E7A      	MOVLW       _CAN_ACTUALIZAR
0x421E	0x0105      	MOVLB       5
0x4220	0x6F78      	MOVWF       FARG_string_cmpnc_text1, 1
0x4222	0x0E9F      	MOVLW       hi_addr(_CAN_ACTUALIZAR)
0x4224	0x6F79      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x4226	0x0E00      	MOVLW       higher_addr(_CAN_ACTUALIZAR)
0x4228	0x6F7A      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x422A	0x0E2A      	MOVLW       _can+107
0x422C	0x6F7B      	MOVWF       FARG_string_cmpnc_text2, 1
0x422E	0x0E04      	MOVLW       hi_addr(_can+107)
0x4230	0x6F7C      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x4232	0x5157      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x4234	0x277B      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x4236	0xB0D8      	BTFSC       STATUS, 0 
0x4238	0x2B7C      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x423A	0xF57DC556  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x423E	0xF016EC7C  	CALL        _string_cmpnc, 0
0x4242	0x5200      	MOVF        R0, 1 
0x4244	0xB4D8      	BTFSC       STATUS, 2 
0x4246	0xD0B0      	BRA         L_can_user_read_message778
;Validadora.c,1358 :: 		sizeTotal += sizeKey;
0x4248	0x5156      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x424A	0x2557      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x424C	0x6E00      	MOVWF       R0 
0x424E	0xF557C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Validadora.c,1359 :: 		sizeKey = 4;  //4 POR LA FILA
0x4252	0x0E04      	MOVLW       4
0x4254	0x6F56      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Validadora.c,1361 :: 		sizeTotal += sizeKey;
0x4256	0x0E04      	MOVLW       4
0x4258	0x2600      	ADDWF       R0, 1 
0x425A	0xF557C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Validadora.c,1362 :: 		sizeKey = 6;  //3 Bytes en hexadecimal
0x425E	0x0E06      	MOVLW       6
0x4260	0x6F56      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Validadora.c,1363 :: 		string_cpyn(msjConst, &can.rxBuffer[sizeTotal], sizeKey);
0x4262	0x0E12      	MOVLW       _msjConst
0x4264	0x6F78      	MOVWF       FARG_string_cpyn_destino, 1
0x4266	0x0E05      	MOVLW       hi_addr(_msjConst)
0x4268	0x6F79      	MOVWF       FARG_string_cpyn_destino+1, 1
0x426A	0x0E2A      	MOVLW       _can+107
0x426C	0x6F7A      	MOVWF       FARG_string_cpyn_origen, 1
0x426E	0x0E04      	MOVLW       hi_addr(_can+107)
0x4270	0x6F7B      	MOVWF       FARG_string_cpyn_origen+1, 1
0x4272	0x5000      	MOVF        R0, 0 
0x4274	0x277A      	ADDWF       FARG_string_cpyn_origen, 1, 1
0x4276	0xB0D8      	BTFSC       STATUS, 0 
0x4278	0x2B7B      	INCF        FARG_string_cpyn_origen+1, 1, 1
0x427A	0x0E06      	MOVLW       6
0x427C	0x6F7C      	MOVWF       FARG_string_cpyn_size, 1
0x427E	0xF00DEC35  	CALL        _string_cpyn, 0
;Validadora.c,1364 :: 		idNew = hexToNum(msjConst);
0x4282	0x0E12      	MOVLW       _msjConst
0x4284	0x6F78      	MOVWF       FARG_hexToNum_hex, 1
0x4286	0x0E05      	MOVLW       hi_addr(_msjConst)
0x4288	0x6F79      	MOVWF       FARG_hexToNum_hex+1, 1
0x428A	0xF00EEC51  	CALL        _hexToNum, 0
0x428E	0xF560C000  	MOVFF       R0, can_user_read_message_idNew_L0
0x4292	0xF561C001  	MOVFF       R1, can_user_read_message_idNew_L0+1
0x4296	0xF562C002  	MOVFF       R2, can_user_read_message_idNew_L0+2
0x429A	0xF563C003  	MOVFF       R3, can_user_read_message_idNew_L0+3
;Validadora.c,1366 :: 		sizeTotal += sizeKey;
0x429E	0x5156      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x42A0	0x2557      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x42A2	0x6E00      	MOVWF       R0 
0x42A4	0xF557C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Validadora.c,1367 :: 		sizeKey = 1;  //1 Byte
0x42A8	0x0E01      	MOVLW       1
0x42AA	0x6F56      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Validadora.c,1368 :: 		vigencia = can.rxBuffer[sizeTotal];
0x42AC	0x0E2A      	MOVLW       _can+107
0x42AE	0x6EE9      	MOVWF       FSR0L 
0x42B0	0x0E04      	MOVLW       hi_addr(_can+107)
0x42B2	0x6EEA      	MOVWF       FSR0H 
0x42B4	0x5000      	MOVF        R0, 0 
0x42B6	0x26E9      	ADDWF       FSR0L, 1 
0x42B8	0xB0D8      	BTFSC       STATUS, 0 
0x42BA	0x2AEA      	INCF        FSR0H, 1 
0x42BC	0xF55ACFEE  	MOVFF       POSTINC0, can_user_read_message_vigencia_L0
;Validadora.c,1370 :: 		sizeTotal += sizeKey;
0x42C0	0x2A00      	INCF        R0, 1 
0x42C2	0xF557C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Validadora.c,1371 :: 		sizeKey = 1;  //1 Byte
0x42C6	0x0E01      	MOVLW       1
0x42C8	0x6F56      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Validadora.c,1372 :: 		estatus = can.rxBuffer[sizeTotal];
0x42CA	0x0E2A      	MOVLW       _can+107
0x42CC	0x6EE9      	MOVWF       FSR0L 
0x42CE	0x0E04      	MOVLW       hi_addr(_can+107)
0x42D0	0x6EEA      	MOVWF       FSR0H 
0x42D2	0x5000      	MOVF        R0, 0 
0x42D4	0x26E9      	ADDWF       FSR0L, 1 
0x42D6	0xB0D8      	BTFSC       STATUS, 0 
0x42D8	0x2AEA      	INCF        FSR0H, 1 
0x42DA	0xF55BCFEE  	MOVFF       POSTINC0, can_user_read_message_estatus_L0
;Validadora.c,1375 :: 		if(!mysql_read(tablePensionados,pensionadosID, fila, &id)){
0x42DE	0x0EEE      	MOVLW       _tablePensionados
0x42E0	0x6F86      	MOVWF       FARG_mysql_read_name, 1
0x42E2	0x0E02      	MOVLW       hi_addr(_tablePensionados)
0x42E4	0x6F87      	MOVWF       FARG_mysql_read_name+1, 1
0x42E6	0x0EFA      	MOVLW       _pensionadosID
0x42E8	0x6F88      	MOVWF       FARG_mysql_read_column, 1
0x42EA	0x0E02      	MOVLW       hi_addr(_pensionadosID)
0x42EC	0x6F89      	MOVWF       FARG_mysql_read_column+1, 1
0x42EE	0xF58AC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_read_fila
0x42F2	0xF58BC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_read_fila+1
0x42F6	0x0E64      	MOVLW       can_user_read_message_id_L0
0x42F8	0x6F8C      	MOVWF       FARG_mysql_read_result, 1
0x42FA	0x0E05      	MOVLW       hi_addr(can_user_read_message_id_L0)
0x42FC	0x6F8D      	MOVWF       FARG_mysql_read_result+1, 1
0x42FE	0xF009EC2C  	CALL        _mysql_read, 0
0x4302	0x5200      	MOVF        R0, 1 
0x4304	0xE150      	BNZ         L_can_user_read_message779
;Validadora.c,1376 :: 		if(id == idConsulta){
0x4306	0x0105      	MOVLB       5
0x4308	0x5167      	MOVF        can_user_read_message_id_L0+3, 0, 1
0x430A	0x195F      	XORWF       can_user_read_message_idConsulta_L0+3, 0, 1
0x430C	0xE108      	BNZ         L__can_user_read_message1354
0x430E	0x5166      	MOVF        can_user_read_message_id_L0+2, 0, 1
0x4310	0x195E      	XORWF       can_user_read_message_idConsulta_L0+2, 0, 1
0x4312	0xE105      	BNZ         L__can_user_read_message1354
0x4314	0x5165      	MOVF        can_user_read_message_id_L0+1, 0, 1
0x4316	0x195D      	XORWF       can_user_read_message_idConsulta_L0+1, 0, 1
0x4318	0xE102      	BNZ         L__can_user_read_message1354
0x431A	0x5164      	MOVF        can_user_read_message_id_L0, 0, 1
0x431C	0x195C      	XORWF       can_user_read_message_idConsulta_L0, 0, 1
L__can_user_read_message1354:
0x431E	0xE143      	BNZ         L_can_user_read_message780
;Validadora.c,1380 :: 		mysql_write(tablePensionados, pensionadosID, fila, idNew, false);
0x4320	0x0EEE      	MOVLW       _tablePensionados
0x4322	0x6F78      	MOVWF       FARG_mysql_write_name, 1
0x4324	0x0E02      	MOVLW       hi_addr(_tablePensionados)
0x4326	0x6F79      	MOVWF       FARG_mysql_write_name+1, 1
0x4328	0x0EFA      	MOVLW       _pensionadosID
0x432A	0x6F7A      	MOVWF       FARG_mysql_write_column, 1
0x432C	0x0E02      	MOVLW       hi_addr(_pensionadosID)
0x432E	0x6F7B      	MOVWF       FARG_mysql_write_column+1, 1
0x4330	0xF57CC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_fila
0x4334	0xF57DC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_fila+1
0x4338	0xF57EC560  	MOVFF       can_user_read_message_idNew_L0, FARG_mysql_write_value
0x433C	0xF57FC561  	MOVFF       can_user_read_message_idNew_L0+1, FARG_mysql_write_value+1
0x4340	0xF580C562  	MOVFF       can_user_read_message_idNew_L0+2, FARG_mysql_write_value+2
0x4344	0xF581C563  	MOVFF       can_user_read_message_idNew_L0+3, FARG_mysql_write_value+3
0x4348	0x6B82      	CLRF        FARG_mysql_write_endWrite, 1
0x434A	0xF014EC20  	CALL        _mysql_write, 0
;Validadora.c,1381 :: 		mysql_write(tablePensionados, pensionadosVigencia, fila, vigencia, false);
0x434E	0x0EEE      	MOVLW       _tablePensionados
0x4350	0x0105      	MOVLB       5
0x4352	0x6F78      	MOVWF       FARG_mysql_write_name, 1
0x4354	0x0E02      	MOVLW       hi_addr(_tablePensionados)
0x4356	0x6F79      	MOVWF       FARG_mysql_write_name+1, 1
0x4358	0x0EE4      	MOVLW       _pensionadosVigencia
0x435A	0x6F7A      	MOVWF       FARG_mysql_write_column, 1
0x435C	0x0E02      	MOVLW       hi_addr(_pensionadosVigencia)
0x435E	0x6F7B      	MOVWF       FARG_mysql_write_column+1, 1
0x4360	0xF57CC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_fila
0x4364	0xF57DC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_fila+1
0x4368	0xF57EC55A  	MOVFF       can_user_read_message_vigencia_L0, FARG_mysql_write_value
0x436C	0x0E00      	MOVLW       0
0x436E	0x6F7F      	MOVWF       FARG_mysql_write_value+1, 1
0x4370	0x6F80      	MOVWF       FARG_mysql_write_value+2, 1
0x4372	0x6F81      	MOVWF       FARG_mysql_write_value+3, 1
0x4374	0x6B82      	CLRF        FARG_mysql_write_endWrite, 1
0x4376	0xF014EC20  	CALL        _mysql_write, 0
;Validadora.c,1382 :: 		mysql_write(tablePensionados, pensionadosEstatus, fila, estatus, false);
0x437A	0x0EEE      	MOVLW       _tablePensionados
0x437C	0x0105      	MOVLB       5
0x437E	0x6F78      	MOVWF       FARG_mysql_write_name, 1
0x4380	0x0E02      	MOVLW       hi_addr(_tablePensionados)
0x4382	0x6F79      	MOVWF       FARG_mysql_write_name+1, 1
0x4384	0x0ECB      	MOVLW       _pensionadosEstatus
0x4386	0x6F7A      	MOVWF       FARG_mysql_write_column, 1
0x4388	0x0E02      	MOVLW       hi_addr(_pensionadosEstatus)
0x438A	0x6F7B      	MOVWF       FARG_mysql_write_column+1, 1
0x438C	0xF57CC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_fila
0x4390	0xF57DC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_fila+1
0x4394	0xF57EC55B  	MOVFF       can_user_read_message_estatus_L0, FARG_mysql_write_value
0x4398	0x0E00      	MOVLW       0
0x439A	0x6F7F      	MOVWF       FARG_mysql_write_value+1, 1
0x439C	0x6F80      	MOVWF       FARG_mysql_write_value+2, 1
0x439E	0x6F81      	MOVWF       FARG_mysql_write_value+3, 1
0x43A0	0x6B82      	CLRF        FARG_mysql_write_endWrite, 1
0x43A2	0xF014EC20  	CALL        _mysql_write, 0
;Validadora.c,1383 :: 		}
L_can_user_read_message780:
;Validadora.c,1384 :: 		}
L_can_user_read_message779:
;Validadora.c,1385 :: 		}else if(string_cmpnc(CAN_VIGENCIA, &can.rxBuffer[sizeTotal], sizeKey)){
0x43A6	0xD197      	BRA         L_can_user_read_message781
L_can_user_read_message778:
0x43A8	0x0E76      	MOVLW       _CAN_VIGENCIA
0x43AA	0x0105      	MOVLB       5
0x43AC	0x6F78      	MOVWF       FARG_string_cmpnc_text1, 1
0x43AE	0x0E9F      	MOVLW       hi_addr(_CAN_VIGENCIA)
0x43B0	0x6F79      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x43B2	0x0E00      	MOVLW       higher_addr(_CAN_VIGENCIA)
0x43B4	0x6F7A      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x43B6	0x0E2A      	MOVLW       _can+107
0x43B8	0x6F7B      	MOVWF       FARG_string_cmpnc_text2, 1
0x43BA	0x0E04      	MOVLW       hi_addr(_can+107)
0x43BC	0x6F7C      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x43BE	0x5157      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x43C0	0x277B      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x43C2	0xB0D8      	BTFSC       STATUS, 0 
0x43C4	0x2B7C      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x43C6	0xF57DC556  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x43CA	0xF016EC7C  	CALL        _string_cmpnc, 0
0x43CE	0x5200      	MOVF        R0, 1 
0x43D0	0xE04E      	BZ          L_can_user_read_message782
;Validadora.c,1387 :: 		sizeTotal += sizeKey;
0x43D2	0x5156      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x43D4	0x2557      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x43D6	0x6E00      	MOVWF       R0 
0x43D8	0xF557C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Validadora.c,1388 :: 		sizeKey = 4;  //4 POR LA FILA
0x43DC	0x0E04      	MOVLW       4
0x43DE	0x6F56      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Validadora.c,1390 :: 		sizeTotal += sizeKey;
0x43E0	0x0E04      	MOVLW       4
0x43E2	0x2600      	ADDWF       R0, 1 
0x43E4	0xF557C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Validadora.c,1391 :: 		sizeKey = 1;  //1 Byte
0x43E8	0x0E01      	MOVLW       1
0x43EA	0x6F56      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Validadora.c,1392 :: 		vigencia = can.rxBuffer[sizeTotal];
0x43EC	0x0E2A      	MOVLW       _can+107
0x43EE	0x6EE9      	MOVWF       FSR0L 
0x43F0	0x0E04      	MOVLW       hi_addr(_can+107)
0x43F2	0x6EEA      	MOVWF       FSR0H 
0x43F4	0x5000      	MOVF        R0, 0 
0x43F6	0x26E9      	ADDWF       FSR0L, 1 
0x43F8	0xB0D8      	BTFSC       STATUS, 0 
0x43FA	0x2AEA      	INCF        FSR0H, 1 
0x43FC	0xF55ACFEE  	MOVFF       POSTINC0, can_user_read_message_vigencia_L0
;Validadora.c,1394 :: 		if(!mysql_read(tablePensionados,pensionadosID, fila, &id)){
0x4400	0x0EEE      	MOVLW       _tablePensionados
0x4402	0x6F86      	MOVWF       FARG_mysql_read_name, 1
0x4404	0x0E02      	MOVLW       hi_addr(_tablePensionados)
0x4406	0x6F87      	MOVWF       FARG_mysql_read_name+1, 1
0x4408	0x0EFA      	MOVLW       _pensionadosID
0x440A	0x6F88      	MOVWF       FARG_mysql_read_column, 1
0x440C	0x0E02      	MOVLW       hi_addr(_pensionadosID)
0x440E	0x6F89      	MOVWF       FARG_mysql_read_column+1, 1
0x4410	0xF58AC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_read_fila
0x4414	0xF58BC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_read_fila+1
0x4418	0x0E64      	MOVLW       can_user_read_message_id_L0
0x441A	0x6F8C      	MOVWF       FARG_mysql_read_result, 1
0x441C	0x0E05      	MOVLW       hi_addr(can_user_read_message_id_L0)
0x441E	0x6F8D      	MOVWF       FARG_mysql_read_result+1, 1
0x4420	0xF009EC2C  	CALL        _mysql_read, 0
0x4424	0x5200      	MOVF        R0, 1 
0x4426	0xE122      	BNZ         L_can_user_read_message783
;Validadora.c,1395 :: 		if(id == idConsulta){
0x4428	0x0105      	MOVLB       5
0x442A	0x5167      	MOVF        can_user_read_message_id_L0+3, 0, 1
0x442C	0x195F      	XORWF       can_user_read_message_idConsulta_L0+3, 0, 1
0x442E	0xE108      	BNZ         L__can_user_read_message1355
0x4430	0x5166      	MOVF        can_user_read_message_id_L0+2, 0, 1
0x4432	0x195E      	XORWF       can_user_read_message_idConsulta_L0+2, 0, 1
0x4434	0xE105      	BNZ         L__can_user_read_message1355
0x4436	0x5165      	MOVF        can_user_read_message_id_L0+1, 0, 1
0x4438	0x195D      	XORWF       can_user_read_message_idConsulta_L0+1, 0, 1
0x443A	0xE102      	BNZ         L__can_user_read_message1355
0x443C	0x5164      	MOVF        can_user_read_message_id_L0, 0, 1
0x443E	0x195C      	XORWF       can_user_read_message_idConsulta_L0, 0, 1
L__can_user_read_message1355:
0x4440	0xE115      	BNZ         L_can_user_read_message784
;Validadora.c,1399 :: 		mysql_write(tablePensionados, pensionadosVigencia, fila, vigencia, false);
0x4442	0x0EEE      	MOVLW       _tablePensionados
0x4444	0x6F78      	MOVWF       FARG_mysql_write_name, 1
0x4446	0x0E02      	MOVLW       hi_addr(_tablePensionados)
0x4448	0x6F79      	MOVWF       FARG_mysql_write_name+1, 1
0x444A	0x0EE4      	MOVLW       _pensionadosVigencia
0x444C	0x6F7A      	MOVWF       FARG_mysql_write_column, 1
0x444E	0x0E02      	MOVLW       hi_addr(_pensionadosVigencia)
0x4450	0x6F7B      	MOVWF       FARG_mysql_write_column+1, 1
0x4452	0xF57CC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_fila
0x4456	0xF57DC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_fila+1
0x445A	0xF57EC55A  	MOVFF       can_user_read_message_vigencia_L0, FARG_mysql_write_value
0x445E	0x0E00      	MOVLW       0
0x4460	0x6F7F      	MOVWF       FARG_mysql_write_value+1, 1
0x4462	0x6F80      	MOVWF       FARG_mysql_write_value+2, 1
0x4464	0x6F81      	MOVWF       FARG_mysql_write_value+3, 1
0x4466	0x6B82      	CLRF        FARG_mysql_write_endWrite, 1
0x4468	0xF014EC20  	CALL        _mysql_write, 0
;Validadora.c,1400 :: 		}
L_can_user_read_message784:
;Validadora.c,1401 :: 		}
L_can_user_read_message783:
;Validadora.c,1402 :: 		}else if(string_cmpnc(CAN_PASSBACK, &can.rxBuffer[sizeTotal], sizeKey)){
0x446C	0xD134      	BRA         L_can_user_read_message785
L_can_user_read_message782:
0x446E	0x0E56      	MOVLW       _CAN_PASSBACK
0x4470	0x0105      	MOVLB       5
0x4472	0x6F78      	MOVWF       FARG_string_cmpnc_text1, 1
0x4474	0x0E9F      	MOVLW       hi_addr(_CAN_PASSBACK)
0x4476	0x6F79      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x4478	0x0E00      	MOVLW       higher_addr(_CAN_PASSBACK)
0x447A	0x6F7A      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x447C	0x0E2A      	MOVLW       _can+107
0x447E	0x6F7B      	MOVWF       FARG_string_cmpnc_text2, 1
0x4480	0x0E04      	MOVLW       hi_addr(_can+107)
0x4482	0x6F7C      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x4484	0x5157      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x4486	0x277B      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x4488	0xB0D8      	BTFSC       STATUS, 0 
0x448A	0x2B7C      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x448C	0xF57DC556  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x4490	0xF016EC7C  	CALL        _string_cmpnc, 0
0x4494	0x5200      	MOVF        R0, 1 
0x4496	0xE04E      	BZ          L_can_user_read_message786
;Validadora.c,1404 :: 		sizeTotal += sizeKey;
0x4498	0x5156      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x449A	0x2557      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x449C	0x6E00      	MOVWF       R0 
0x449E	0xF557C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Validadora.c,1405 :: 		sizeKey = 4;  //4 POR LA FILA
0x44A2	0x0E04      	MOVLW       4
0x44A4	0x6F56      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Validadora.c,1407 :: 		sizeTotal += sizeKey;
0x44A6	0x0E04      	MOVLW       4
0x44A8	0x2600      	ADDWF       R0, 1 
0x44AA	0xF557C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Validadora.c,1408 :: 		sizeKey = 1;
0x44AE	0x0E01      	MOVLW       1
0x44B0	0x6F56      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Validadora.c,1409 :: 		estatus = can.rxBuffer[sizeTotal];
0x44B2	0x0E2A      	MOVLW       _can+107
0x44B4	0x6EE9      	MOVWF       FSR0L 
0x44B6	0x0E04      	MOVLW       hi_addr(_can+107)
0x44B8	0x6EEA      	MOVWF       FSR0H 
0x44BA	0x5000      	MOVF        R0, 0 
0x44BC	0x26E9      	ADDWF       FSR0L, 1 
0x44BE	0xB0D8      	BTFSC       STATUS, 0 
0x44C0	0x2AEA      	INCF        FSR0H, 1 
0x44C2	0xF55BCFEE  	MOVFF       POSTINC0, can_user_read_message_estatus_L0
;Validadora.c,1411 :: 		if(!mysql_read(tablePensionados, pensionadosID, fila, &id)){
0x44C6	0x0EEE      	MOVLW       _tablePensionados
0x44C8	0x6F86      	MOVWF       FARG_mysql_read_name, 1
0x44CA	0x0E02      	MOVLW       hi_addr(_tablePensionados)
0x44CC	0x6F87      	MOVWF       FARG_mysql_read_name+1, 1
0x44CE	0x0EFA      	MOVLW       _pensionadosID
0x44D0	0x6F88      	MOVWF       FARG_mysql_read_column, 1
0x44D2	0x0E02      	MOVLW       hi_addr(_pensionadosID)
0x44D4	0x6F89      	MOVWF       FARG_mysql_read_column+1, 1
0x44D6	0xF58AC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_read_fila
0x44DA	0xF58BC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_read_fila+1
0x44DE	0x0E64      	MOVLW       can_user_read_message_id_L0
0x44E0	0x6F8C      	MOVWF       FARG_mysql_read_result, 1
0x44E2	0x0E05      	MOVLW       hi_addr(can_user_read_message_id_L0)
0x44E4	0x6F8D      	MOVWF       FARG_mysql_read_result+1, 1
0x44E6	0xF009EC2C  	CALL        _mysql_read, 0
0x44EA	0x5200      	MOVF        R0, 1 
0x44EC	0xE122      	BNZ         L_can_user_read_message787
;Validadora.c,1412 :: 		if(id == idConsulta){
0x44EE	0x0105      	MOVLB       5
0x44F0	0x5167      	MOVF        can_user_read_message_id_L0+3, 0, 1
0x44F2	0x195F      	XORWF       can_user_read_message_idConsulta_L0+3, 0, 1
0x44F4	0xE108      	BNZ         L__can_user_read_message1356
0x44F6	0x5166      	MOVF        can_user_read_message_id_L0+2, 0, 1
0x44F8	0x195E      	XORWF       can_user_read_message_idConsulta_L0+2, 0, 1
0x44FA	0xE105      	BNZ         L__can_user_read_message1356
0x44FC	0x5165      	MOVF        can_user_read_message_id_L0+1, 0, 1
0x44FE	0x195D      	XORWF       can_user_read_message_idConsulta_L0+1, 0, 1
0x4500	0xE102      	BNZ         L__can_user_read_message1356
0x4502	0x5164      	MOVF        can_user_read_message_id_L0, 0, 1
0x4504	0x195C      	XORWF       can_user_read_message_idConsulta_L0, 0, 1
L__can_user_read_message1356:
0x4506	0xE115      	BNZ         L_can_user_read_message788
;Validadora.c,1416 :: 		mysql_write(tablePensionados, pensionadosEstatus, fila, estatus, false);
0x4508	0x0EEE      	MOVLW       _tablePensionados
0x450A	0x6F78      	MOVWF       FARG_mysql_write_name, 1
0x450C	0x0E02      	MOVLW       hi_addr(_tablePensionados)
0x450E	0x6F79      	MOVWF       FARG_mysql_write_name+1, 1
0x4510	0x0ECB      	MOVLW       _pensionadosEstatus
0x4512	0x6F7A      	MOVWF       FARG_mysql_write_column, 1
0x4514	0x0E02      	MOVLW       hi_addr(_pensionadosEstatus)
0x4516	0x6F7B      	MOVWF       FARG_mysql_write_column+1, 1
0x4518	0xF57CC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_fila
0x451C	0xF57DC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_fila+1
0x4520	0xF57EC55B  	MOVFF       can_user_read_message_estatus_L0, FARG_mysql_write_value
0x4524	0x0E00      	MOVLW       0
0x4526	0x6F7F      	MOVWF       FARG_mysql_write_value+1, 1
0x4528	0x6F80      	MOVWF       FARG_mysql_write_value+2, 1
0x452A	0x6F81      	MOVWF       FARG_mysql_write_value+3, 1
0x452C	0x6B82      	CLRF        FARG_mysql_write_endWrite, 1
0x452E	0xF014EC20  	CALL        _mysql_write, 0
;Validadora.c,1417 :: 		}
L_can_user_read_message788:
;Validadora.c,1418 :: 		}
L_can_user_read_message787:
;Validadora.c,1419 :: 		}else if(string_cmpnc(CAN_CONSULTAR, &can.rxBuffer[sizeTotal], sizeKey)){
0x4532	0xD0D1      	BRA         L_can_user_read_message789
L_can_user_read_message786:
0x4534	0x0E82      	MOVLW       _CAN_CONSULTAR
0x4536	0x0105      	MOVLB       5
0x4538	0x6F78      	MOVWF       FARG_string_cmpnc_text1, 1
0x453A	0x0E9F      	MOVLW       hi_addr(_CAN_CONSULTAR)
0x453C	0x6F79      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x453E	0x0E00      	MOVLW       higher_addr(_CAN_CONSULTAR)
0x4540	0x6F7A      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x4542	0x0E2A      	MOVLW       _can+107
0x4544	0x6F7B      	MOVWF       FARG_string_cmpnc_text2, 1
0x4546	0x0E04      	MOVLW       hi_addr(_can+107)
0x4548	0x6F7C      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x454A	0x5157      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x454C	0x277B      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x454E	0xB0D8      	BTFSC       STATUS, 0 
0x4550	0x2B7C      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x4552	0xF57DC556  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x4556	0xF016EC7C  	CALL        _string_cmpnc, 0
0x455A	0x5200      	MOVF        R0, 1 
0x455C	0xB4D8      	BTFSC       STATUS, 2 
0x455E	0xD0BB      	BRA         L_can_user_read_message790
;Validadora.c,1421 :: 		sizeTotal += sizeKey;
0x4560	0x5156      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x4562	0x2757      	ADDWF       can_user_read_message_sizeTotal_L0, 1, 1
;Validadora.c,1422 :: 		sizeKey = 4;  //4 POR LA FILA
0x4564	0x0E04      	MOVLW       4
0x4566	0x6F56      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Validadora.c,1424 :: 		string_cpyc(bufferEeprom, CAN_TPV);
0x4568	0x0ED2      	MOVLW       _bufferEeprom
0x456A	0x6F78      	MOVWF       FARG_string_cpyc_destino, 1
0x456C	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x456E	0x6F79      	MOVWF       FARG_string_cpyc_destino+1, 1
0x4570	0x0E0E      	MOVLW       _CAN_TPV
0x4572	0x6F7A      	MOVWF       FARG_string_cpyc_origen, 1
0x4574	0x0E9F      	MOVLW       hi_addr(_CAN_TPV)
0x4576	0x6F7B      	MOVWF       FARG_string_cpyc_origen+1, 1
0x4578	0x0E00      	MOVLW       higher_addr(_CAN_TPV)
0x457A	0x6F7C      	MOVWF       FARG_string_cpyc_origen+2, 1
0x457C	0xF014ECBC  	CALL        _string_cpyc, 0
;Validadora.c,1425 :: 		string_cpyn(&bufferEeprom[sizeof(CAN_TPV)-1], can.rxBuffer, sizeTotal);
0x4580	0x0ED5      	MOVLW       _bufferEeprom+3
0x4582	0x6F78      	MOVWF       FARG_string_cpyn_destino, 1
0x4584	0x0E04      	MOVLW       hi_addr(_bufferEeprom+3)
0x4586	0x6F79      	MOVWF       FARG_string_cpyn_destino+1, 1
0x4588	0x0E2A      	MOVLW       _can+107
0x458A	0x6F7A      	MOVWF       FARG_string_cpyn_origen, 1
0x458C	0x0E04      	MOVLW       hi_addr(_can+107)
0x458E	0x6F7B      	MOVWF       FARG_string_cpyn_origen+1, 1
0x4590	0xF57CC557  	MOVFF       can_user_read_message_sizeTotal_L0, FARG_string_cpyn_size
0x4594	0xF00DEC35  	CALL        _string_cpyn, 0
;Validadora.c,1426 :: 		if(!mysql_read(tablePensionados, pensionadosID, fila, &id)){
0x4598	0x0EEE      	MOVLW       _tablePensionados
0x459A	0x6F86      	MOVWF       FARG_mysql_read_name, 1
0x459C	0x0E02      	MOVLW       hi_addr(_tablePensionados)
0x459E	0x6F87      	MOVWF       FARG_mysql_read_name+1, 1
0x45A0	0x0EFA      	MOVLW       _pensionadosID
0x45A2	0x6F88      	MOVWF       FARG_mysql_read_column, 1
0x45A4	0x0E02      	MOVLW       hi_addr(_pensionadosID)
0x45A6	0x6F89      	MOVWF       FARG_mysql_read_column+1, 1
0x45A8	0xF58AC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_read_fila
0x45AC	0xF58BC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_read_fila+1
0x45B0	0x0E64      	MOVLW       can_user_read_message_id_L0
0x45B2	0x6F8C      	MOVWF       FARG_mysql_read_result, 1
0x45B4	0x0E05      	MOVLW       hi_addr(can_user_read_message_id_L0)
0x45B6	0x6F8D      	MOVWF       FARG_mysql_read_result+1, 1
0x45B8	0xF009EC2C  	CALL        _mysql_read, 0
0x45BC	0x5200      	MOVF        R0, 1 
0x45BE	0xA4D8      	BTFSS       STATUS, 2 
0x45C0	0xD075      	BRA         L_can_user_read_message791
;Validadora.c,1427 :: 		if(idConsulta == id){
0x45C2	0x0105      	MOVLB       5
0x45C4	0x515F      	MOVF        can_user_read_message_idConsulta_L0+3, 0, 1
0x45C6	0x1967      	XORWF       can_user_read_message_id_L0+3, 0, 1
0x45C8	0xE108      	BNZ         L__can_user_read_message1357
0x45CA	0x515E      	MOVF        can_user_read_message_idConsulta_L0+2, 0, 1
0x45CC	0x1966      	XORWF       can_user_read_message_id_L0+2, 0, 1
0x45CE	0xE105      	BNZ         L__can_user_read_message1357
0x45D0	0x515D      	MOVF        can_user_read_message_idConsulta_L0+1, 0, 1
0x45D2	0x1965      	XORWF       can_user_read_message_id_L0+1, 0, 1
0x45D4	0xE102      	BNZ         L__can_user_read_message1357
0x45D6	0x515C      	MOVF        can_user_read_message_idConsulta_L0, 0, 1
0x45D8	0x1964      	XORWF       can_user_read_message_id_L0, 0, 1
L__can_user_read_message1357:
0x45DA	0xE15B      	BNZ         L_can_user_read_message792
;Validadora.c,1431 :: 		mysql_read_string(tablePensionados, pensionadosVigencia, fila, &vigencia);
0x45DC	0x0EEE      	MOVLW       _tablePensionados
0x45DE	0x6F78      	MOVWF       FARG_mysql_read_string_name, 1
0x45E0	0x0E02      	MOVLW       hi_addr(_tablePensionados)
0x45E2	0x6F79      	MOVWF       FARG_mysql_read_string_name+1, 1
0x45E4	0x0EE4      	MOVLW       _pensionadosVigencia
0x45E6	0x6F7A      	MOVWF       FARG_mysql_read_string_column, 1
0x45E8	0x0E02      	MOVLW       hi_addr(_pensionadosVigencia)
0x45EA	0x6F7B      	MOVWF       FARG_mysql_read_string_column+1, 1
0x45EC	0xF57CC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_read_string_fila
0x45F0	0xF57DC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_read_string_fila+1
0x45F4	0x0E5A      	MOVLW       can_user_read_message_vigencia_L0
0x45F6	0x6F7E      	MOVWF       FARG_mysql_read_string_result, 1
0x45F8	0x0E05      	MOVLW       hi_addr(can_user_read_message_vigencia_L0)
0x45FA	0x6F7F      	MOVWF       FARG_mysql_read_string_result+1, 1
0x45FC	0xF015EC0E  	CALL        _mysql_read_string, 0
;Validadora.c,1432 :: 		mysql_read_string(tablePensionados, pensionadosEstatus, fila, &estatus);
0x4600	0x0EEE      	MOVLW       _tablePensionados
0x4602	0x0105      	MOVLB       5
0x4604	0x6F78      	MOVWF       FARG_mysql_read_string_name, 1
0x4606	0x0E02      	MOVLW       hi_addr(_tablePensionados)
0x4608	0x6F79      	MOVWF       FARG_mysql_read_string_name+1, 1
0x460A	0x0ECB      	MOVLW       _pensionadosEstatus
0x460C	0x6F7A      	MOVWF       FARG_mysql_read_string_column, 1
0x460E	0x0E02      	MOVLW       hi_addr(_pensionadosEstatus)
0x4610	0x6F7B      	MOVWF       FARG_mysql_read_string_column+1, 1
0x4612	0xF57CC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_read_string_fila
0x4616	0xF57DC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_read_string_fila+1
0x461A	0x0E5B      	MOVLW       can_user_read_message_estatus_L0
0x461C	0x6F7E      	MOVWF       FARG_mysql_read_string_result, 1
0x461E	0x0E05      	MOVLW       hi_addr(can_user_read_message_estatus_L0)
0x4620	0x6F7F      	MOVWF       FARG_mysql_read_string_result+1, 1
0x4622	0xF015EC0E  	CALL        _mysql_read_string, 0
;Validadora.c,1434 :: 		string_push(bufferEeprom, vigencia);
0x4626	0x0ED2      	MOVLW       _bufferEeprom
0x4628	0x0105      	MOVLB       5
0x462A	0x6F78      	MOVWF       FARG_string_push_texto, 1
0x462C	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x462E	0x6F79      	MOVWF       FARG_string_push_texto+1, 1
0x4630	0xF57AC55A  	MOVFF       can_user_read_message_vigencia_L0, FARG_string_push_caracter
0x4634	0xF014ECEF  	CALL        _string_push, 0
;Validadora.c,1435 :: 		string_push(bufferEeprom, estatus);
0x4638	0x0ED2      	MOVLW       _bufferEeprom
0x463A	0x6F78      	MOVWF       FARG_string_push_texto, 1
0x463C	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x463E	0x6F79      	MOVWF       FARG_string_push_texto+1, 1
0x4640	0xF57AC55B  	MOVFF       can_user_read_message_estatus_L0, FARG_string_push_caracter
0x4644	0xF014ECEF  	CALL        _string_push, 0
;Validadora.c,1436 :: 		string_addc(bufferEeprom, CAN_MODULE);
0x4648	0x0ED2      	MOVLW       _bufferEeprom
0x464A	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x464C	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x464E	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x4650	0x0E86      	MOVLW       _CAN_MODULE
0x4652	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x4654	0x0E9F      	MOVLW       hi_addr(_CAN_MODULE)
0x4656	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x4658	0x0E00      	MOVLW       higher_addr(_CAN_MODULE)
0x465A	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x465C	0xF00FEC40  	CALL        _string_addc, 0
;Validadora.c,1437 :: 		numToHex(can.id, msjConst, 1);
0x4660	0xF578C3CB  	MOVFF       _can+12, FARG_numToHex_valor
0x4664	0x0E00      	MOVLW       0
0x4666	0x6F79      	MOVWF       FARG_numToHex_valor+1, 1
0x4668	0x6F7A      	MOVWF       FARG_numToHex_valor+2, 1
0x466A	0x6F7B      	MOVWF       FARG_numToHex_valor+3, 1
0x466C	0x0E12      	MOVLW       _msjConst
0x466E	0x6F7C      	MOVWF       FARG_numToHex_cadena, 1
0x4670	0x0E05      	MOVLW       hi_addr(_msjConst)
0x4672	0x6F7D      	MOVWF       FARG_numToHex_cadena+1, 1
0x4674	0x0E01      	MOVLW       1
0x4676	0x6F7E      	MOVWF       FARG_numToHex_bytes, 1
0x4678	0xF00DECAD  	CALL        _numToHex, 0
;Validadora.c,1438 :: 		string_add(bufferEeprom, msjConst);
0x467C	0x0ED2      	MOVLW       _bufferEeprom
0x467E	0x6F78      	MOVWF       FARG_string_add_destino, 1
0x4680	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x4682	0x6F79      	MOVWF       FARG_string_add_destino+1, 1
0x4684	0x0E12      	MOVLW       _msjConst
0x4686	0x6F7A      	MOVWF       FARG_string_add_addEnd, 1
0x4688	0x0E05      	MOVLW       hi_addr(_msjConst)
0x468A	0x6F7B      	MOVWF       FARG_string_add_addEnd+1, 1
0x468C	0xF016EC4C  	CALL        _string_add, 0
;Validadora.c,1439 :: 		}else{
0x4690	0xD00C      	BRA         L_can_user_read_message793
L_can_user_read_message792:
;Validadora.c,1440 :: 		string_addc(bufferEeprom, CAN_TABLE_NO_FOUND);
0x4692	0x0ED2      	MOVLW       _bufferEeprom
0x4694	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x4696	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x4698	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x469A	0x0EE5      	MOVLW       _CAN_TABLE_NO_FOUND
0x469C	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x469E	0x0E9E      	MOVLW       hi_addr(_CAN_TABLE_NO_FOUND)
0x46A0	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x46A2	0x0E00      	MOVLW       higher_addr(_CAN_TABLE_NO_FOUND)
0x46A4	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x46A6	0xF00FEC40  	CALL        _string_addc, 0
;Validadora.c,1441 :: 		}
L_can_user_read_message793:
;Validadora.c,1442 :: 		}else{
0x46AA	0xD00D      	BRA         L_can_user_read_message794
L_can_user_read_message791:
0x46AC	0x0105      	MOVLB       5
;Validadora.c,1443 :: 		string_addc(bufferEeprom, CAN_TABLE_ERROR);
0x46AE	0x0ED2      	MOVLW       _bufferEeprom
0x46B0	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x46B2	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x46B4	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x46B6	0x0EF6      	MOVLW       _CAN_TABLE_ERROR
0x46B8	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x46BA	0x0E9E      	MOVLW       hi_addr(_CAN_TABLE_ERROR)
0x46BC	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x46BE	0x0E00      	MOVLW       higher_addr(_CAN_TABLE_ERROR)
0x46C0	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x46C2	0xF00FEC40  	CALL        _string_addc, 0
;Validadora.c,1444 :: 		}
L_can_user_read_message794:
;Validadora.c,1446 :: 		buffer_save_send(true, bufferEeprom);
0x46C6	0x0E01      	MOVLW       1
0x46C8	0x6F78      	MOVWF       FARG_buffer_save_send_guardar, 1
0x46CA	0x0ED2      	MOVLW       _bufferEeprom
0x46CC	0x6F79      	MOVWF       FARG_buffer_save_send_buffer, 1
0x46CE	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x46D0	0x6F7A      	MOVWF       FARG_buffer_save_send_buffer+1, 1
0x46D2	0xF00FECCD  	CALL        _buffer_save_send, 0
;Validadora.c,1447 :: 		}
L_can_user_read_message790:
L_can_user_read_message789:
L_can_user_read_message785:
L_can_user_read_message781:
L_can_user_read_message777:
;Validadora.c,1448 :: 		}else if(string_cmpnc(CAN_RTC, &can.rxBuffer[sizeTotal], sizeKey)){
0x46D6	0xF033EFF6  	GOTO        L_can_user_read_message795
L_can_user_read_message772:
0x46DA	0x0E66      	MOVLW       _CAN_RTC
0x46DC	0x0105      	MOVLB       5
0x46DE	0x6F78      	MOVWF       FARG_string_cmpnc_text1, 1
0x46E0	0x0E9F      	MOVLW       hi_addr(_CAN_RTC)
0x46E2	0x6F79      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x46E4	0x0E00      	MOVLW       higher_addr(_CAN_RTC)
0x46E6	0x6F7A      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x46E8	0x0E2A      	MOVLW       _can+107
0x46EA	0x6F7B      	MOVWF       FARG_string_cmpnc_text2, 1
0x46EC	0x0E04      	MOVLW       hi_addr(_can+107)
0x46EE	0x6F7C      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x46F0	0x5157      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x46F2	0x277B      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x46F4	0xB0D8      	BTFSC       STATUS, 0 
0x46F6	0x2B7C      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x46F8	0xF57DC556  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x46FC	0xF016EC7C  	CALL        _string_cmpnc, 0
0x4700	0x5200      	MOVF        R0, 1 
0x4702	0xB4D8      	BTFSC       STATUS, 2 
0x4704	0xD0A9      	BRA         L_can_user_read_message796
;Validadora.c,1449 :: 		sizeTotal += sizeKey;
0x4706	0x5156      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x4708	0x2557      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x470A	0x6E00      	MOVWF       R0 
0x470C	0xF557C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Validadora.c,1450 :: 		sizeKey = sizeof(CAN_TABLE_SET)-1;
0x4710	0x0E03      	MOVLW       3
0x4712	0x6F56      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Validadora.c,1452 :: 		if(string_cmpnc(CAN_TABLE_SET, &can.rxBuffer[sizeTotal], sizeKey)){
0x4714	0x0E72      	MOVLW       _CAN_TABLE_SET
0x4716	0x6F78      	MOVWF       FARG_string_cmpnc_text1, 1
0x4718	0x0E9F      	MOVLW       hi_addr(_CAN_TABLE_SET)
0x471A	0x6F79      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x471C	0x0E00      	MOVLW       higher_addr(_CAN_TABLE_SET)
0x471E	0x6F7A      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x4720	0x0E2A      	MOVLW       _can+107
0x4722	0x6F7B      	MOVWF       FARG_string_cmpnc_text2, 1
0x4724	0x0E04      	MOVLW       hi_addr(_can+107)
0x4726	0x6F7C      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x4728	0x5000      	MOVF        R0, 0 
0x472A	0x277B      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x472C	0xB0D8      	BTFSC       STATUS, 0 
0x472E	0x2B7C      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x4730	0x0E03      	MOVLW       3
0x4732	0x6F7D      	MOVWF       FARG_string_cmpnc_bytes, 1
0x4734	0xF016EC7C  	CALL        _string_cmpnc, 0
0x4738	0x5200      	MOVF        R0, 1 
0x473A	0xE014      	BZ          L_can_user_read_message797
;Validadora.c,1453 :: 		sizeTotal += sizeKey;
0x473C	0x5156      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x473E	0x2557      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x4740	0x6E00      	MOVWF       R0 
0x4742	0xF557C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Validadora.c,1454 :: 		DS1307_write_string(&myRTC,&can.rxBuffer[sizeTotal]);
0x4746	0x0E77      	MOVLW       _myRTC
0x4748	0x6F78      	MOVWF       FARG_DS1307_write_string_myDS, 1
0x474A	0x0E04      	MOVLW       hi_addr(_myRTC)
0x474C	0x6F79      	MOVWF       FARG_DS1307_write_string_myDS+1, 1
0x474E	0x0E2A      	MOVLW       _can+107
0x4750	0x6F7A      	MOVWF       FARG_DS1307_write_string_date, 1
0x4752	0x0E04      	MOVLW       hi_addr(_can+107)
0x4754	0x6F7B      	MOVWF       FARG_DS1307_write_string_date+1, 1
0x4756	0x5000      	MOVF        R0, 0 
0x4758	0x277A      	ADDWF       FARG_DS1307_write_string_date, 1, 1
0x475A	0xB0D8      	BTFSC       STATUS, 0 
0x475C	0x2B7B      	INCF        FARG_DS1307_write_string_date+1, 1, 1
0x475E	0xF00BEC70  	CALL        _DS1307_write_string, 0
;Validadora.c,1460 :: 		}else if(string_cmpnc(CAN_TABLE_GET, &can.rxBuffer[sizeTotal], sizeKey)){
0x4762	0xD078      	BRA         L_can_user_read_message798
L_can_user_read_message797:
0x4764	0x0E6E      	MOVLW       _CAN_TABLE_GET
0x4766	0x6F78      	MOVWF       FARG_string_cmpnc_text1, 1
0x4768	0x0E9F      	MOVLW       hi_addr(_CAN_TABLE_GET)
0x476A	0x6F79      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x476C	0x0E00      	MOVLW       higher_addr(_CAN_TABLE_GET)
0x476E	0x6F7A      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x4770	0x0E2A      	MOVLW       _can+107
0x4772	0x6F7B      	MOVWF       FARG_string_cmpnc_text2, 1
0x4774	0x0E04      	MOVLW       hi_addr(_can+107)
0x4776	0x6F7C      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x4778	0x5157      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x477A	0x277B      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x477C	0xB0D8      	BTFSC       STATUS, 0 
0x477E	0x2B7C      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x4780	0xF57DC556  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x4784	0xF016EC7C  	CALL        _string_cmpnc, 0
0x4788	0x5200      	MOVF        R0, 1 
0x478A	0xE064      	BZ          L_can_user_read_message799
;Validadora.c,1461 :: 		sizeTotal += sizeKey;
0x478C	0x5156      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x478E	0x2757      	ADDWF       can_user_read_message_sizeTotal_L0, 1, 1
;Validadora.c,1462 :: 		DS1307_read(&myRTC,true);
0x4790	0x0E77      	MOVLW       _myRTC
0x4792	0x6F78      	MOVWF       FARG_DS1307_read_myDS, 1
0x4794	0x0E04      	MOVLW       hi_addr(_myRTC)
0x4796	0x6F79      	MOVWF       FARG_DS1307_read_myDS+1, 1
0x4798	0x0E01      	MOVLW       1
0x479A	0x6F7A      	MOVWF       FARG_DS1307_read_formatComplet, 1
0x479C	0xF010ECF9  	CALL        _DS1307_read, 0
;Validadora.c,1463 :: 		string_cpyc(bufferEeprom, CAN_TPV);
0x47A0	0x0ED2      	MOVLW       _bufferEeprom
0x47A2	0x6F78      	MOVWF       FARG_string_cpyc_destino, 1
0x47A4	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x47A6	0x6F79      	MOVWF       FARG_string_cpyc_destino+1, 1
0x47A8	0x0E0E      	MOVLW       _CAN_TPV
0x47AA	0x6F7A      	MOVWF       FARG_string_cpyc_origen, 1
0x47AC	0x0E9F      	MOVLW       hi_addr(_CAN_TPV)
0x47AE	0x6F7B      	MOVWF       FARG_string_cpyc_origen+1, 1
0x47B0	0x0E00      	MOVLW       higher_addr(_CAN_TPV)
0x47B2	0x6F7C      	MOVWF       FARG_string_cpyc_origen+2, 1
0x47B4	0xF014ECBC  	CALL        _string_cpyc, 0
;Validadora.c,1464 :: 		string_addc(bufferEeprom, CAN_RTC);
0x47B8	0x0ED2      	MOVLW       _bufferEeprom
0x47BA	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x47BC	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x47BE	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x47C0	0x0E66      	MOVLW       _CAN_RTC
0x47C2	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x47C4	0x0E9F      	MOVLW       hi_addr(_CAN_RTC)
0x47C6	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x47C8	0x0E00      	MOVLW       higher_addr(_CAN_RTC)
0x47CA	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x47CC	0xF00FEC40  	CALL        _string_addc, 0
;Validadora.c,1465 :: 		string_addc(bufferEeprom, CAN_TABLE_GET);
0x47D0	0x0ED2      	MOVLW       _bufferEeprom
0x47D2	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x47D4	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x47D6	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x47D8	0x0E6E      	MOVLW       _CAN_TABLE_GET
0x47DA	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x47DC	0x0E9F      	MOVLW       hi_addr(_CAN_TABLE_GET)
0x47DE	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x47E0	0x0E00      	MOVLW       higher_addr(_CAN_TABLE_GET)
0x47E2	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x47E4	0xF00FEC40  	CALL        _string_addc, 0
;Validadora.c,1466 :: 		string_add(bufferEeprom, myRTC.time);
0x47E8	0x0ED2      	MOVLW       _bufferEeprom
0x47EA	0x6F78      	MOVWF       FARG_string_add_destino, 1
0x47EC	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x47EE	0x6F79      	MOVWF       FARG_string_add_destino+1, 1
0x47F0	0x0E7E      	MOVLW       _myRTC+7
0x47F2	0x6F7A      	MOVWF       FARG_string_add_addEnd, 1
0x47F4	0x0E04      	MOVLW       hi_addr(_myRTC+7)
0x47F6	0x6F7B      	MOVWF       FARG_string_add_addEnd+1, 1
0x47F8	0xF016EC4C  	CALL        _string_add, 0
;Validadora.c,1467 :: 		string_addc(bufferEeprom, CAN_MODULE);
0x47FC	0x0ED2      	MOVLW       _bufferEeprom
0x47FE	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x4800	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x4802	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x4804	0x0E86      	MOVLW       _CAN_MODULE
0x4806	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x4808	0x0E9F      	MOVLW       hi_addr(_CAN_MODULE)
0x480A	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x480C	0x0E00      	MOVLW       higher_addr(_CAN_MODULE)
0x480E	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x4810	0xF00FEC40  	CALL        _string_addc, 0
;Validadora.c,1468 :: 		numToHex(can.id, msjConst, 1);
0x4814	0xF578C3CB  	MOVFF       _can+12, FARG_numToHex_valor
0x4818	0x0E00      	MOVLW       0
0x481A	0x6F79      	MOVWF       FARG_numToHex_valor+1, 1
0x481C	0x6F7A      	MOVWF       FARG_numToHex_valor+2, 1
0x481E	0x6F7B      	MOVWF       FARG_numToHex_valor+3, 1
0x4820	0x0E12      	MOVLW       _msjConst
0x4822	0x6F7C      	MOVWF       FARG_numToHex_cadena, 1
0x4824	0x0E05      	MOVLW       hi_addr(_msjConst)
0x4826	0x6F7D      	MOVWF       FARG_numToHex_cadena+1, 1
0x4828	0x0E01      	MOVLW       1
0x482A	0x6F7E      	MOVWF       FARG_numToHex_bytes, 1
0x482C	0xF00DECAD  	CALL        _numToHex, 0
;Validadora.c,1469 :: 		string_add(bufferEeprom, msjConst);
0x4830	0x0ED2      	MOVLW       _bufferEeprom
0x4832	0x6F78      	MOVWF       FARG_string_add_destino, 1
0x4834	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x4836	0x6F79      	MOVWF       FARG_string_add_destino+1, 1
0x4838	0x0E12      	MOVLW       _msjConst
0x483A	0x6F7A      	MOVWF       FARG_string_add_addEnd, 1
0x483C	0x0E05      	MOVLW       hi_addr(_msjConst)
0x483E	0x6F7B      	MOVWF       FARG_string_add_addEnd+1, 1
0x4840	0xF016EC4C  	CALL        _string_add, 0
;Validadora.c,1470 :: 		buffer_save_send(true, bufferEeprom);
0x4844	0x0E01      	MOVLW       1
0x4846	0x6F78      	MOVWF       FARG_buffer_save_send_guardar, 1
0x4848	0x0ED2      	MOVLW       _bufferEeprom
0x484A	0x6F79      	MOVWF       FARG_buffer_save_send_buffer, 1
0x484C	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x484E	0x6F7A      	MOVWF       FARG_buffer_save_send_buffer+1, 1
0x4850	0xF00FECCD  	CALL        _buffer_save_send, 0
;Validadora.c,1474 :: 		}
L_can_user_read_message799:
L_can_user_read_message798:
;Validadora.c,1475 :: 		}else if(string_cmpnc(CAN_PREPAGO, &can.rxBuffer[sizeTotal], sizeKey)){
0x4854	0xF033EFF6  	GOTO        L_can_user_read_message800
L_can_user_read_message796:
0x4858	0x0E62      	MOVLW       _CAN_PREPAGO
0x485A	0x0105      	MOVLB       5
0x485C	0x6F78      	MOVWF       FARG_string_cmpnc_text1, 1
0x485E	0x0E9F      	MOVLW       hi_addr(_CAN_PREPAGO)
0x4860	0x6F79      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x4862	0x0E00      	MOVLW       higher_addr(_CAN_PREPAGO)
0x4864	0x6F7A      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x4866	0x0E2A      	MOVLW       _can+107
0x4868	0x6F7B      	MOVWF       FARG_string_cmpnc_text2, 1
0x486A	0x0E04      	MOVLW       hi_addr(_can+107)
0x486C	0x6F7C      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x486E	0x5157      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x4870	0x277B      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x4872	0xB0D8      	BTFSC       STATUS, 0 
0x4874	0x2B7C      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x4876	0xF57DC556  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x487A	0xF016EC7C  	CALL        _string_cmpnc, 0
0x487E	0x5200      	MOVF        R0, 1 
0x4880	0xB4D8      	BTFSC       STATUS, 2 
0x4882	0xF02AEF54  	GOTO        L_can_user_read_message801
;Validadora.c,1477 :: 		sizeTotal += sizeKey;
0x4886	0x5156      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x4888	0x2557      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x488A	0x6E00      	MOVWF       R0 
0x488C	0xF557C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Validadora.c,1478 :: 		sizeKey = 6;  //3 Bytes en hexadecimal
0x4890	0x0E06      	MOVLW       6
0x4892	0x6F56      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Validadora.c,1479 :: 		string_cpyn(msjConst, &can.rxBuffer[sizeTotal], sizeKey);
0x4894	0x0E12      	MOVLW       _msjConst
0x4896	0x6F78      	MOVWF       FARG_string_cpyn_destino, 1
0x4898	0x0E05      	MOVLW       hi_addr(_msjConst)
0x489A	0x6F79      	MOVWF       FARG_string_cpyn_destino+1, 1
0x489C	0x0E2A      	MOVLW       _can+107
0x489E	0x6F7A      	MOVWF       FARG_string_cpyn_origen, 1
0x48A0	0x0E04      	MOVLW       hi_addr(_can+107)
0x48A2	0x6F7B      	MOVWF       FARG_string_cpyn_origen+1, 1
0x48A4	0x5000      	MOVF        R0, 0 
0x48A6	0x277A      	ADDWF       FARG_string_cpyn_origen, 1, 1
0x48A8	0xB0D8      	BTFSC       STATUS, 0 
0x48AA	0x2B7B      	INCF        FARG_string_cpyn_origen+1, 1, 1
0x48AC	0x0E06      	MOVLW       6
0x48AE	0x6F7C      	MOVWF       FARG_string_cpyn_size, 1
0x48B0	0xF00DEC35  	CALL        _string_cpyn, 0
;Validadora.c,1480 :: 		idConsulta = hexToNum(msjConst);
0x48B4	0x0E12      	MOVLW       _msjConst
0x48B6	0x6F78      	MOVWF       FARG_hexToNum_hex, 1
0x48B8	0x0E05      	MOVLW       hi_addr(_msjConst)
0x48BA	0x6F79      	MOVWF       FARG_hexToNum_hex+1, 1
0x48BC	0xF00EEC51  	CALL        _hexToNum, 0
0x48C0	0xF55CC000  	MOVFF       R0, can_user_read_message_idConsulta_L0
0x48C4	0xF55DC001  	MOVFF       R1, can_user_read_message_idConsulta_L0+1
0x48C8	0xF55EC002  	MOVFF       R2, can_user_read_message_idConsulta_L0+2
0x48CC	0xF55FC003  	MOVFF       R3, can_user_read_message_idConsulta_L0+3
;Validadora.c,1482 :: 		sizeTotal += sizeKey;
0x48D0	0x5156      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x48D2	0x2557      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x48D4	0x6E00      	MOVWF       R0 
0x48D6	0xF557C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Validadora.c,1483 :: 		sizeKey = sizeof(CAN_REGISTRAR)-1;  //COMANDO 3BYTES
0x48DA	0x0E03      	MOVLW       3
0x48DC	0x6F56      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Validadora.c,1485 :: 		string_cpyn(msjConst, &can.rxBuffer[sizeTotal+sizeKey], 4); //4 numeros fila
0x48DE	0x0E12      	MOVLW       _msjConst
0x48E0	0x6F78      	MOVWF       FARG_string_cpyn_destino, 1
0x48E2	0x0E05      	MOVLW       hi_addr(_msjConst)
0x48E4	0x6F79      	MOVWF       FARG_string_cpyn_destino+1, 1
0x48E6	0x0E03      	MOVLW       3
0x48E8	0x2600      	ADDWF       R0, 1 
0x48EA	0x6A01      	CLRF        R1 
0x48EC	0x0E00      	MOVLW       0
0x48EE	0x2201      	ADDWFC      R1, 1 
0x48F0	0x0E2A      	MOVLW       _can+107
0x48F2	0x2400      	ADDWF       R0, 0 
0x48F4	0x6F7A      	MOVWF       FARG_string_cpyn_origen, 1
0x48F6	0x0E04      	MOVLW       hi_addr(_can+107)
0x48F8	0x2001      	ADDWFC      R1, 0 
0x48FA	0x6F7B      	MOVWF       FARG_string_cpyn_origen+1, 1
0x48FC	0x0E04      	MOVLW       4
0x48FE	0x6F7C      	MOVWF       FARG_string_cpyn_size, 1
0x4900	0xF00DEC35  	CALL        _string_cpyn, 0
;Validadora.c,1486 :: 		fila = stringToNum(msjConst);
0x4904	0x0E12      	MOVLW       _msjConst
0x4906	0x6F78      	MOVWF       FARG_stringToNum_cadena, 1
0x4908	0x0E05      	MOVLW       hi_addr(_msjConst)
0x490A	0x6F79      	MOVWF       FARG_stringToNum_cadena+1, 1
0x490C	0xF00DEC5C  	CALL        _stringToNum, 0
0x4910	0xF558C000  	MOVFF       R0, can_user_read_message_fila_L0
0x4914	0xF559C001  	MOVFF       R1, can_user_read_message_fila_L0+1
;Validadora.c,1489 :: 		if(string_cmpnc(CAN_REGISTRAR, &can.rxBuffer[sizeTotal], sizeKey)){
0x4918	0x0E4E      	MOVLW       _CAN_REGISTRAR
0x491A	0x6F78      	MOVWF       FARG_string_cmpnc_text1, 1
0x491C	0x0E9F      	MOVLW       hi_addr(_CAN_REGISTRAR)
0x491E	0x6F79      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x4920	0x0E00      	MOVLW       higher_addr(_CAN_REGISTRAR)
0x4922	0x6F7A      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x4924	0x0E2A      	MOVLW       _can+107
0x4926	0x6F7B      	MOVWF       FARG_string_cmpnc_text2, 1
0x4928	0x0E04      	MOVLW       hi_addr(_can+107)
0x492A	0x6F7C      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x492C	0x5157      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x492E	0x277B      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x4930	0xB0D8      	BTFSC       STATUS, 0 
0x4932	0x2B7C      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x4934	0xF57DC556  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x4938	0xF016EC7C  	CALL        _string_cmpnc, 0
0x493C	0x5200      	MOVF        R0, 1 
0x493E	0xB4D8      	BTFSC       STATUS, 2 
0x4940	0xD103      	BRA         L_can_user_read_message802
;Validadora.c,1491 :: 		sizeTotal += sizeKey;
0x4942	0x5156      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x4944	0x2557      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x4946	0x6E00      	MOVWF       R0 
0x4948	0xF557C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Validadora.c,1492 :: 		sizeKey = 4;  //4 POR LA FILA
0x494C	0x0E04      	MOVLW       4
0x494E	0x6F56      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Validadora.c,1494 :: 		idNew = idConsulta;
0x4950	0xF560C55C  	MOVFF       can_user_read_message_idConsulta_L0, can_user_read_message_idNew_L0
0x4954	0xF561C55D  	MOVFF       can_user_read_message_idConsulta_L0+1, can_user_read_message_idNew_L0+1
0x4958	0xF562C55E  	MOVFF       can_user_read_message_idConsulta_L0+2, can_user_read_message_idNew_L0+2
0x495C	0xF563C55F  	MOVFF       can_user_read_message_idConsulta_L0+3, can_user_read_message_idNew_L0+3
;Validadora.c,1496 :: 		sizeTotal += sizeKey;
0x4960	0x0E04      	MOVLW       4
0x4962	0x2600      	ADDWF       R0, 1 
0x4964	0xF557C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Validadora.c,1497 :: 		sizeKey = 8;  //8 Byte
0x4968	0x0E08      	MOVLW       8
0x496A	0x6F56      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Validadora.c,1498 :: 		string_cpyn(msjConst, &can.rxBuffer[sizeTotal], sizeKey);
0x496C	0x0E12      	MOVLW       _msjConst
0x496E	0x6F78      	MOVWF       FARG_string_cpyn_destino, 1
0x4970	0x0E05      	MOVLW       hi_addr(_msjConst)
0x4972	0x6F79      	MOVWF       FARG_string_cpyn_destino+1, 1
0x4974	0x0E2A      	MOVLW       _can+107
0x4976	0x6F7A      	MOVWF       FARG_string_cpyn_origen, 1
0x4978	0x0E04      	MOVLW       hi_addr(_can+107)
0x497A	0x6F7B      	MOVWF       FARG_string_cpyn_origen+1, 1
0x497C	0x5000      	MOVF        R0, 0 
0x497E	0x277A      	ADDWF       FARG_string_cpyn_origen, 1, 1
0x4980	0xB0D8      	BTFSC       STATUS, 0 
0x4982	0x2B7B      	INCF        FARG_string_cpyn_origen+1, 1, 1
0x4984	0x0E08      	MOVLW       8
0x4986	0x6F7C      	MOVWF       FARG_string_cpyn_size, 1
0x4988	0xF00DEC35  	CALL        _string_cpyn, 0
;Validadora.c,1499 :: 		nip = hexToNum(msjConst);
0x498C	0x0E12      	MOVLW       _msjConst
0x498E	0x6F78      	MOVWF       FARG_hexToNum_hex, 1
0x4990	0x0E05      	MOVLW       hi_addr(_msjConst)
0x4992	0x6F79      	MOVWF       FARG_hexToNum_hex+1, 1
0x4994	0xF00EEC51  	CALL        _hexToNum, 0
0x4998	0xF568C000  	MOVFF       R0, can_user_read_message_nip_L0
0x499C	0xF569C001  	MOVFF       R1, can_user_read_message_nip_L0+1
0x49A0	0xF56AC002  	MOVFF       R2, can_user_read_message_nip_L0+2
0x49A4	0xF56BC003  	MOVFF       R3, can_user_read_message_nip_L0+3
;Validadora.c,1501 :: 		sizeTotal += sizeKey;
0x49A8	0x5156      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x49AA	0x2557      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x49AC	0x6E00      	MOVWF       R0 
0x49AE	0xF557C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Validadora.c,1502 :: 		sizeKey = 8;  //8 Byte
0x49B2	0x0E08      	MOVLW       8
0x49B4	0x6F56      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Validadora.c,1503 :: 		string_cpyn(msjConst, &can.rxBuffer[sizeTotal], sizeKey);
0x49B6	0x0E12      	MOVLW       _msjConst
0x49B8	0x6F78      	MOVWF       FARG_string_cpyn_destino, 1
0x49BA	0x0E05      	MOVLW       hi_addr(_msjConst)
0x49BC	0x6F79      	MOVWF       FARG_string_cpyn_destino+1, 1
0x49BE	0x0E2A      	MOVLW       _can+107
0x49C0	0x6F7A      	MOVWF       FARG_string_cpyn_origen, 1
0x49C2	0x0E04      	MOVLW       hi_addr(_can+107)
0x49C4	0x6F7B      	MOVWF       FARG_string_cpyn_origen+1, 1
0x49C6	0x5000      	MOVF        R0, 0 
0x49C8	0x277A      	ADDWF       FARG_string_cpyn_origen, 1, 1
0x49CA	0xB0D8      	BTFSC       STATUS, 0 
0x49CC	0x2B7B      	INCF        FARG_string_cpyn_origen+1, 1, 1
0x49CE	0x0E08      	MOVLW       8
0x49D0	0x6F7C      	MOVWF       FARG_string_cpyn_size, 1
0x49D2	0xF00DEC35  	CALL        _string_cpyn, 0
;Validadora.c,1504 :: 		saldo = hexToNum(msjConst);
0x49D6	0x0E12      	MOVLW       _msjConst
0x49D8	0x6F78      	MOVWF       FARG_hexToNum_hex, 1
0x49DA	0x0E05      	MOVLW       hi_addr(_msjConst)
0x49DC	0x6F79      	MOVWF       FARG_hexToNum_hex+1, 1
0x49DE	0xF00EEC51  	CALL        _hexToNum, 0
0x49E2	0xF570C000  	MOVFF       R0, can_user_read_message_saldo_L0
0x49E6	0xF571C001  	MOVFF       R1, can_user_read_message_saldo_L0+1
0x49EA	0xF572C002  	MOVFF       R2, can_user_read_message_saldo_L0+2
0x49EE	0xF573C003  	MOVFF       R3, can_user_read_message_saldo_L0+3
;Validadora.c,1506 :: 		sizeTotal += sizeKey;
0x49F2	0x5156      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x49F4	0x2557      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x49F6	0x6E00      	MOVWF       R0 
0x49F8	0xF557C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Validadora.c,1507 :: 		sizeKey = 1;  //1 Byte
0x49FC	0x0E01      	MOVLW       1
0x49FE	0x6F56      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Validadora.c,1508 :: 		estatus = can.rxBuffer[sizeTotal];
0x4A00	0x0E2A      	MOVLW       _can+107
0x4A02	0x6EE9      	MOVWF       FSR0L 
0x4A04	0x0E04      	MOVLW       hi_addr(_can+107)
0x4A06	0x6EEA      	MOVWF       FSR0H 
0x4A08	0x5000      	MOVF        R0, 0 
0x4A0A	0x26E9      	ADDWF       FSR0L, 1 
0x4A0C	0xB0D8      	BTFSC       STATUS, 0 
0x4A0E	0x2AEA      	INCF        FSR0H, 1 
0x4A10	0xF55BCFEE  	MOVFF       POSTINC0, can_user_read_message_estatus_L0
;Validadora.c,1510 :: 		if(mysql_read(tablePrepago, prepagoID, fila, &id) == TABLE_RW_NO_EXIST_ROW){
0x4A14	0x0E9A      	MOVLW       _tablePrepago
0x4A16	0x6F86      	MOVWF       FARG_mysql_read_name, 1
0x4A18	0x0E02      	MOVLW       hi_addr(_tablePrepago)
0x4A1A	0x6F87      	MOVWF       FARG_mysql_read_name+1, 1
0x4A1C	0x0E69      	MOVLW       _prepagoId
0x4A1E	0x6F88      	MOVWF       FARG_mysql_read_column, 1
0x4A20	0x0E00      	MOVLW       hi_addr(_prepagoId)
0x4A22	0x6F89      	MOVWF       FARG_mysql_read_column+1, 1
0x4A24	0xF58AC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_read_fila
0x4A28	0xF58BC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_read_fila+1
0x4A2C	0x0E64      	MOVLW       can_user_read_message_id_L0
0x4A2E	0x6F8C      	MOVWF       FARG_mysql_read_result, 1
0x4A30	0x0E05      	MOVLW       hi_addr(can_user_read_message_id_L0)
0x4A32	0x6F8D      	MOVWF       FARG_mysql_read_result+1, 1
0x4A34	0xF009EC2C  	CALL        _mysql_read, 0
0x4A38	0x5000      	MOVF        R0, 0 
0x4A3A	0x0A03      	XORLW       3
0x4A3C	0xA4D8      	BTFSS       STATUS, 2 
0x4A3E	0xD082      	BRA         L_can_user_read_message803
;Validadora.c,1511 :: 		if(fila == myTable.rowAct+1){
0x4A40	0x0E01      	MOVLW       1
0x4A42	0x0103      	MOVLB       3
0x4A44	0x258F      	ADDWF       Validadora_myTable+4, 0, 1
0x4A46	0x6E01      	MOVWF       R1 
0x4A48	0x0E00      	MOVLW       0
0x4A4A	0x2190      	ADDWFC      Validadora_myTable+5, 0, 1
0x4A4C	0x6E02      	MOVWF       R2 
0x4A4E	0x0105      	MOVLB       5
0x4A50	0x5159      	MOVF        can_user_read_message_fila_L0+1, 0, 1
0x4A52	0x1802      	XORWF       R2, 0 
0x4A54	0xE102      	BNZ         L__can_user_read_message1358
0x4A56	0x5001      	MOVF        R1, 0 
0x4A58	0x1958      	XORWF       can_user_read_message_fila_L0, 0, 1
L__can_user_read_message1358:
0x4A5A	0xE174      	BNZ         L_can_user_read_message804
;Validadora.c,1512 :: 		if(!mysql_write(tablePrepago, prepagoID, -1, idNew, true)){
0x4A5C	0x0E9A      	MOVLW       _tablePrepago
0x4A5E	0x6F78      	MOVWF       FARG_mysql_write_name, 1
0x4A60	0x0E02      	MOVLW       hi_addr(_tablePrepago)
0x4A62	0x6F79      	MOVWF       FARG_mysql_write_name+1, 1
0x4A64	0x0E69      	MOVLW       _prepagoId
0x4A66	0x6F7A      	MOVWF       FARG_mysql_write_column, 1
0x4A68	0x0E00      	MOVLW       hi_addr(_prepagoId)
0x4A6A	0x6F7B      	MOVWF       FARG_mysql_write_column+1, 1
0x4A6C	0x0EFF      	MOVLW       255
0x4A6E	0x6F7C      	MOVWF       FARG_mysql_write_fila, 1
0x4A70	0x0EFF      	MOVLW       255
0x4A72	0x6F7D      	MOVWF       FARG_mysql_write_fila+1, 1
0x4A74	0xF57EC560  	MOVFF       can_user_read_message_idNew_L0, FARG_mysql_write_value
0x4A78	0xF57FC561  	MOVFF       can_user_read_message_idNew_L0+1, FARG_mysql_write_value+1
0x4A7C	0xF580C562  	MOVFF       can_user_read_message_idNew_L0+2, FARG_mysql_write_value+2
0x4A80	0xF581C563  	MOVFF       can_user_read_message_idNew_L0+3, FARG_mysql_write_value+3
0x4A84	0x0E01      	MOVLW       1
0x4A86	0x6F82      	MOVWF       FARG_mysql_write_endWrite, 1
0x4A88	0xF014EC20  	CALL        _mysql_write, 0
0x4A8C	0x5200      	MOVF        R0, 1 
0x4A8E	0xE15A      	BNZ         L_can_user_read_message805
;Validadora.c,1514 :: 		mysql_write(tablePrepago, prepagoNip, fila, nip, false);
0x4A90	0x0E9A      	MOVLW       _tablePrepago
0x4A92	0x0105      	MOVLB       5
0x4A94	0x6F78      	MOVWF       FARG_mysql_write_name, 1
0x4A96	0x0E02      	MOVLW       hi_addr(_tablePrepago)
0x4A98	0x6F79      	MOVWF       FARG_mysql_write_name+1, 1
0x4A9A	0x0E87      	MOVLW       _prepagoNip
0x4A9C	0x6F7A      	MOVWF       FARG_mysql_write_column, 1
0x4A9E	0x0E00      	MOVLW       hi_addr(_prepagoNip)
0x4AA0	0x6F7B      	MOVWF       FARG_mysql_write_column+1, 1
0x4AA2	0xF57CC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_fila
0x4AA6	0xF57DC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_fila+1
0x4AAA	0xF57EC568  	MOVFF       can_user_read_message_nip_L0, FARG_mysql_write_value
0x4AAE	0xF57FC569  	MOVFF       can_user_read_message_nip_L0+1, FARG_mysql_write_value+1
0x4AB2	0xF580C56A  	MOVFF       can_user_read_message_nip_L0+2, FARG_mysql_write_value+2
0x4AB6	0xF581C56B  	MOVFF       can_user_read_message_nip_L0+3, FARG_mysql_write_value+3
0x4ABA	0x6B82      	CLRF        FARG_mysql_write_endWrite, 1
0x4ABC	0xF014EC20  	CALL        _mysql_write, 0
;Validadora.c,1515 :: 		mysql_write(tablePrepago, prepagoSaldo, fila, saldo, false);
0x4AC0	0x0E9A      	MOVLW       _tablePrepago
0x4AC2	0x0105      	MOVLB       5
0x4AC4	0x6F78      	MOVWF       FARG_mysql_write_name, 1
0x4AC6	0x0E02      	MOVLW       hi_addr(_tablePrepago)
0x4AC8	0x6F79      	MOVWF       FARG_mysql_write_name+1, 1
0x4ACA	0x0EA2      	MOVLW       _prepagoSaldo
0x4ACC	0x6F7A      	MOVWF       FARG_mysql_write_column, 1
0x4ACE	0x0E02      	MOVLW       hi_addr(_prepagoSaldo)
0x4AD0	0x6F7B      	MOVWF       FARG_mysql_write_column+1, 1
0x4AD2	0xF57CC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_fila
0x4AD6	0xF57DC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_fila+1
0x4ADA	0xF57EC570  	MOVFF       can_user_read_message_saldo_L0, FARG_mysql_write_value
0x4ADE	0xF57FC571  	MOVFF       can_user_read_message_saldo_L0+1, FARG_mysql_write_value+1
0x4AE2	0xF580C572  	MOVFF       can_user_read_message_saldo_L0+2, FARG_mysql_write_value+2
0x4AE6	0xF581C573  	MOVFF       can_user_read_message_saldo_L0+3, FARG_mysql_write_value+3
0x4AEA	0x6B82      	CLRF        FARG_mysql_write_endWrite, 1
0x4AEC	0xF014EC20  	CALL        _mysql_write, 0
;Validadora.c,1516 :: 		mysql_write(tablePrepago, prepagoEstatus, fila, estatus, false);
0x4AF0	0x0E9A      	MOVLW       _tablePrepago
0x4AF2	0x0105      	MOVLB       5
0x4AF4	0x6F78      	MOVWF       FARG_mysql_write_name, 1
0x4AF6	0x0E02      	MOVLW       hi_addr(_tablePrepago)
0x4AF8	0x6F79      	MOVWF       FARG_mysql_write_name+1, 1
0x4AFA	0x0E92      	MOVLW       _prepagoEstatus
0x4AFC	0x6F7A      	MOVWF       FARG_mysql_write_column, 1
0x4AFE	0x0E02      	MOVLW       hi_addr(_prepagoEstatus)
0x4B00	0x6F7B      	MOVWF       FARG_mysql_write_column+1, 1
0x4B02	0xF57CC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_fila
0x4B06	0xF57DC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_fila+1
0x4B0A	0xF57EC55B  	MOVFF       can_user_read_message_estatus_L0, FARG_mysql_write_value
0x4B0E	0x0E00      	MOVLW       0
0x4B10	0x6F7F      	MOVWF       FARG_mysql_write_value+1, 1
0x4B12	0x6F80      	MOVWF       FARG_mysql_write_value+2, 1
0x4B14	0x6F81      	MOVWF       FARG_mysql_write_value+3, 1
0x4B16	0x6B82      	CLRF        FARG_mysql_write_endWrite, 1
0x4B18	0xF014EC20  	CALL        _mysql_write, 0
;Validadora.c,1517 :: 		mysql_write_string(tablePrepago, prepagoDate, fila, "", false);
0x4B1C	0x0E9A      	MOVLW       _tablePrepago
0x4B1E	0x0105      	MOVLB       5
0x4B20	0x6F78      	MOVWF       FARG_mysql_write_string_name, 1
0x4B22	0x0E02      	MOVLW       hi_addr(_tablePrepago)
0x4B24	0x6F79      	MOVWF       FARG_mysql_write_string_name+1, 1
0x4B26	0x0E19      	MOVLW       _prepagoDate
0x4B28	0x6F7A      	MOVWF       FARG_mysql_write_string_column, 1
0x4B2A	0x0E03      	MOVLW       hi_addr(_prepagoDate)
0x4B2C	0x6F7B      	MOVWF       FARG_mysql_write_string_column+1, 1
0x4B2E	0xF57CC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_string_fila
0x4B32	0xF57DC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_string_fila+1
0x4B36	0x0E85      	MOVLW       ?lstr39_Validadora
0x4B38	0x6F7E      	MOVWF       FARG_mysql_write_string_texto, 1
0x4B3A	0x0E02      	MOVLW       hi_addr(?lstr39_Validadora)
0x4B3C	0x6F7F      	MOVWF       FARG_mysql_write_string_texto+1, 1
0x4B3E	0x6B80      	CLRF        FARG_mysql_write_string_endWrite, 1
0x4B40	0xF00CEC8B  	CALL        _mysql_write_string, 0
;Validadora.c,1521 :: 		}
L_can_user_read_message805:
;Validadora.c,1522 :: 		}
L_can_user_read_message804:
;Validadora.c,1523 :: 		}
L_can_user_read_message803:
;Validadora.c,1524 :: 		}else if(string_cmpnc(CAN_ACTUALIZAR, &can.rxBuffer[sizeTotal], sizeKey)){
0x4B44	0xF02AEF52  	GOTO        L_can_user_read_message806
L_can_user_read_message802:
0x4B48	0x0E7A      	MOVLW       _CAN_ACTUALIZAR
0x4B4A	0x0105      	MOVLB       5
0x4B4C	0x6F78      	MOVWF       FARG_string_cmpnc_text1, 1
0x4B4E	0x0E9F      	MOVLW       hi_addr(_CAN_ACTUALIZAR)
0x4B50	0x6F79      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x4B52	0x0E00      	MOVLW       higher_addr(_CAN_ACTUALIZAR)
0x4B54	0x6F7A      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x4B56	0x0E2A      	MOVLW       _can+107
0x4B58	0x6F7B      	MOVWF       FARG_string_cmpnc_text2, 1
0x4B5A	0x0E04      	MOVLW       hi_addr(_can+107)
0x4B5C	0x6F7C      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x4B5E	0x5157      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x4B60	0x277B      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x4B62	0xB0D8      	BTFSC       STATUS, 0 
0x4B64	0x2B7C      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x4B66	0xF57DC556  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x4B6A	0xF016EC7C  	CALL        _string_cmpnc, 0
0x4B6E	0x5200      	MOVF        R0, 1 
0x4B70	0xB4D8      	BTFSC       STATUS, 2 
0x4B72	0xD105      	BRA         L_can_user_read_message807
;Validadora.c,1526 :: 		sizeTotal += sizeKey;
0x4B74	0x5156      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x4B76	0x2557      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x4B78	0x6E00      	MOVWF       R0 
0x4B7A	0xF557C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Validadora.c,1527 :: 		sizeKey = 4;  //4 POR LA FILA
0x4B7E	0x0E04      	MOVLW       4
0x4B80	0x6F56      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Validadora.c,1529 :: 		sizeTotal += sizeKey;
0x4B82	0x0E04      	MOVLW       4
0x4B84	0x2600      	ADDWF       R0, 1 
0x4B86	0xF557C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Validadora.c,1530 :: 		sizeKey = 6;  //3 Bytes en hexadecimal
0x4B8A	0x0E06      	MOVLW       6
0x4B8C	0x6F56      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Validadora.c,1531 :: 		string_cpyn(msjConst, &can.rxBuffer[sizeTotal], sizeKey);
0x4B8E	0x0E12      	MOVLW       _msjConst
0x4B90	0x6F78      	MOVWF       FARG_string_cpyn_destino, 1
0x4B92	0x0E05      	MOVLW       hi_addr(_msjConst)
0x4B94	0x6F79      	MOVWF       FARG_string_cpyn_destino+1, 1
0x4B96	0x0E2A      	MOVLW       _can+107
0x4B98	0x6F7A      	MOVWF       FARG_string_cpyn_origen, 1
0x4B9A	0x0E04      	MOVLW       hi_addr(_can+107)
0x4B9C	0x6F7B      	MOVWF       FARG_string_cpyn_origen+1, 1
0x4B9E	0x5000      	MOVF        R0, 0 
0x4BA0	0x277A      	ADDWF       FARG_string_cpyn_origen, 1, 1
0x4BA2	0xB0D8      	BTFSC       STATUS, 0 
0x4BA4	0x2B7B      	INCF        FARG_string_cpyn_origen+1, 1, 1
0x4BA6	0x0E06      	MOVLW       6
0x4BA8	0x6F7C      	MOVWF       FARG_string_cpyn_size, 1
0x4BAA	0xF00DEC35  	CALL        _string_cpyn, 0
;Validadora.c,1532 :: 		idNew = hexToNum(msjConst);
0x4BAE	0x0E12      	MOVLW       _msjConst
0x4BB0	0x6F78      	MOVWF       FARG_hexToNum_hex, 1
0x4BB2	0x0E05      	MOVLW       hi_addr(_msjConst)
0x4BB4	0x6F79      	MOVWF       FARG_hexToNum_hex+1, 1
0x4BB6	0xF00EEC51  	CALL        _hexToNum, 0
0x4BBA	0xF560C000  	MOVFF       R0, can_user_read_message_idNew_L0
0x4BBE	0xF561C001  	MOVFF       R1, can_user_read_message_idNew_L0+1
0x4BC2	0xF562C002  	MOVFF       R2, can_user_read_message_idNew_L0+2
0x4BC6	0xF563C003  	MOVFF       R3, can_user_read_message_idNew_L0+3
;Validadora.c,1534 :: 		sizeTotal += sizeKey;
0x4BCA	0x5156      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x4BCC	0x2557      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x4BCE	0x6E00      	MOVWF       R0 
0x4BD0	0xF557C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Validadora.c,1535 :: 		sizeKey = 8;  //8 Byte
0x4BD4	0x0E08      	MOVLW       8
0x4BD6	0x6F56      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Validadora.c,1536 :: 		string_cpyn(msjConst, &can.rxBuffer[sizeTotal], sizeKey);
0x4BD8	0x0E12      	MOVLW       _msjConst
0x4BDA	0x6F78      	MOVWF       FARG_string_cpyn_destino, 1
0x4BDC	0x0E05      	MOVLW       hi_addr(_msjConst)
0x4BDE	0x6F79      	MOVWF       FARG_string_cpyn_destino+1, 1
0x4BE0	0x0E2A      	MOVLW       _can+107
0x4BE2	0x6F7A      	MOVWF       FARG_string_cpyn_origen, 1
0x4BE4	0x0E04      	MOVLW       hi_addr(_can+107)
0x4BE6	0x6F7B      	MOVWF       FARG_string_cpyn_origen+1, 1
0x4BE8	0x5000      	MOVF        R0, 0 
0x4BEA	0x277A      	ADDWF       FARG_string_cpyn_origen, 1, 1
0x4BEC	0xB0D8      	BTFSC       STATUS, 0 
0x4BEE	0x2B7B      	INCF        FARG_string_cpyn_origen+1, 1, 1
0x4BF0	0x0E08      	MOVLW       8
0x4BF2	0x6F7C      	MOVWF       FARG_string_cpyn_size, 1
0x4BF4	0xF00DEC35  	CALL        _string_cpyn, 0
;Validadora.c,1537 :: 		nip = hexToNum(msjConst);
0x4BF8	0x0E12      	MOVLW       _msjConst
0x4BFA	0x6F78      	MOVWF       FARG_hexToNum_hex, 1
0x4BFC	0x0E05      	MOVLW       hi_addr(_msjConst)
0x4BFE	0x6F79      	MOVWF       FARG_hexToNum_hex+1, 1
0x4C00	0xF00EEC51  	CALL        _hexToNum, 0
0x4C04	0xF568C000  	MOVFF       R0, can_user_read_message_nip_L0
0x4C08	0xF569C001  	MOVFF       R1, can_user_read_message_nip_L0+1
0x4C0C	0xF56AC002  	MOVFF       R2, can_user_read_message_nip_L0+2
0x4C10	0xF56BC003  	MOVFF       R3, can_user_read_message_nip_L0+3
;Validadora.c,1539 :: 		sizeTotal += sizeKey;
0x4C14	0x5156      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x4C16	0x2557      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x4C18	0x6E00      	MOVWF       R0 
0x4C1A	0xF557C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Validadora.c,1540 :: 		sizeKey = 8;  //8 Byte
0x4C1E	0x0E08      	MOVLW       8
0x4C20	0x6F56      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Validadora.c,1541 :: 		string_cpyn(msjConst, &can.rxBuffer[sizeTotal], sizeKey);
0x4C22	0x0E12      	MOVLW       _msjConst
0x4C24	0x6F78      	MOVWF       FARG_string_cpyn_destino, 1
0x4C26	0x0E05      	MOVLW       hi_addr(_msjConst)
0x4C28	0x6F79      	MOVWF       FARG_string_cpyn_destino+1, 1
0x4C2A	0x0E2A      	MOVLW       _can+107
0x4C2C	0x6F7A      	MOVWF       FARG_string_cpyn_origen, 1
0x4C2E	0x0E04      	MOVLW       hi_addr(_can+107)
0x4C30	0x6F7B      	MOVWF       FARG_string_cpyn_origen+1, 1
0x4C32	0x5000      	MOVF        R0, 0 
0x4C34	0x277A      	ADDWF       FARG_string_cpyn_origen, 1, 1
0x4C36	0xB0D8      	BTFSC       STATUS, 0 
0x4C38	0x2B7B      	INCF        FARG_string_cpyn_origen+1, 1, 1
0x4C3A	0x0E08      	MOVLW       8
0x4C3C	0x6F7C      	MOVWF       FARG_string_cpyn_size, 1
0x4C3E	0xF00DEC35  	CALL        _string_cpyn, 0
;Validadora.c,1542 :: 		saldo = hexToNum(msjConst);
0x4C42	0x0E12      	MOVLW       _msjConst
0x4C44	0x6F78      	MOVWF       FARG_hexToNum_hex, 1
0x4C46	0x0E05      	MOVLW       hi_addr(_msjConst)
0x4C48	0x6F79      	MOVWF       FARG_hexToNum_hex+1, 1
0x4C4A	0xF00EEC51  	CALL        _hexToNum, 0
0x4C4E	0xF570C000  	MOVFF       R0, can_user_read_message_saldo_L0
0x4C52	0xF571C001  	MOVFF       R1, can_user_read_message_saldo_L0+1
0x4C56	0xF572C002  	MOVFF       R2, can_user_read_message_saldo_L0+2
0x4C5A	0xF573C003  	MOVFF       R3, can_user_read_message_saldo_L0+3
;Validadora.c,1544 :: 		sizeTotal += sizeKey;
0x4C5E	0x5156      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x4C60	0x2557      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x4C62	0x6E00      	MOVWF       R0 
0x4C64	0xF557C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Validadora.c,1545 :: 		sizeKey = 1;  //1 Byte
0x4C68	0x0E01      	MOVLW       1
0x4C6A	0x6F56      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Validadora.c,1546 :: 		estatus = can.rxBuffer[sizeTotal];
0x4C6C	0x0E2A      	MOVLW       _can+107
0x4C6E	0x6EE9      	MOVWF       FSR0L 
0x4C70	0x0E04      	MOVLW       hi_addr(_can+107)
0x4C72	0x6EEA      	MOVWF       FSR0H 
0x4C74	0x5000      	MOVF        R0, 0 
0x4C76	0x26E9      	ADDWF       FSR0L, 1 
0x4C78	0xB0D8      	BTFSC       STATUS, 0 
0x4C7A	0x2AEA      	INCF        FSR0H, 1 
0x4C7C	0xF55BCFEE  	MOVFF       POSTINC0, can_user_read_message_estatus_L0
;Validadora.c,1549 :: 		if(!mysql_read(tablePrepago, prepagoID, fila, &id)){
0x4C80	0x0E9A      	MOVLW       _tablePrepago
0x4C82	0x6F86      	MOVWF       FARG_mysql_read_name, 1
0x4C84	0x0E02      	MOVLW       hi_addr(_tablePrepago)
0x4C86	0x6F87      	MOVWF       FARG_mysql_read_name+1, 1
0x4C88	0x0E69      	MOVLW       _prepagoId
0x4C8A	0x6F88      	MOVWF       FARG_mysql_read_column, 1
0x4C8C	0x0E00      	MOVLW       hi_addr(_prepagoId)
0x4C8E	0x6F89      	MOVWF       FARG_mysql_read_column+1, 1
0x4C90	0xF58AC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_read_fila
0x4C94	0xF58BC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_read_fila+1
0x4C98	0x0E64      	MOVLW       can_user_read_message_id_L0
0x4C9A	0x6F8C      	MOVWF       FARG_mysql_read_result, 1
0x4C9C	0x0E05      	MOVLW       hi_addr(can_user_read_message_id_L0)
0x4C9E	0x6F8D      	MOVWF       FARG_mysql_read_result+1, 1
0x4CA0	0xF009EC2C  	CALL        _mysql_read, 0
0x4CA4	0x5200      	MOVF        R0, 1 
0x4CA6	0xE16A      	BNZ         L_can_user_read_message808
;Validadora.c,1550 :: 		if(id == idConsulta){
0x4CA8	0x0105      	MOVLB       5
0x4CAA	0x5167      	MOVF        can_user_read_message_id_L0+3, 0, 1
0x4CAC	0x195F      	XORWF       can_user_read_message_idConsulta_L0+3, 0, 1
0x4CAE	0xE108      	BNZ         L__can_user_read_message1359
0x4CB0	0x5166      	MOVF        can_user_read_message_id_L0+2, 0, 1
0x4CB2	0x195E      	XORWF       can_user_read_message_idConsulta_L0+2, 0, 1
0x4CB4	0xE105      	BNZ         L__can_user_read_message1359
0x4CB6	0x5165      	MOVF        can_user_read_message_id_L0+1, 0, 1
0x4CB8	0x195D      	XORWF       can_user_read_message_idConsulta_L0+1, 0, 1
0x4CBA	0xE102      	BNZ         L__can_user_read_message1359
0x4CBC	0x5164      	MOVF        can_user_read_message_id_L0, 0, 1
0x4CBE	0x195C      	XORWF       can_user_read_message_idConsulta_L0, 0, 1
L__can_user_read_message1359:
0x4CC0	0xE15D      	BNZ         L_can_user_read_message809
;Validadora.c,1551 :: 		mysql_write(tablePrepago, prepagoID, fila, idNew, false);
0x4CC2	0x0E9A      	MOVLW       _tablePrepago
0x4CC4	0x6F78      	MOVWF       FARG_mysql_write_name, 1
0x4CC6	0x0E02      	MOVLW       hi_addr(_tablePrepago)
0x4CC8	0x6F79      	MOVWF       FARG_mysql_write_name+1, 1
0x4CCA	0x0E69      	MOVLW       _prepagoId
0x4CCC	0x6F7A      	MOVWF       FARG_mysql_write_column, 1
0x4CCE	0x0E00      	MOVLW       hi_addr(_prepagoId)
0x4CD0	0x6F7B      	MOVWF       FARG_mysql_write_column+1, 1
0x4CD2	0xF57CC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_fila
0x4CD6	0xF57DC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_fila+1
0x4CDA	0xF57EC560  	MOVFF       can_user_read_message_idNew_L0, FARG_mysql_write_value
0x4CDE	0xF57FC561  	MOVFF       can_user_read_message_idNew_L0+1, FARG_mysql_write_value+1
0x4CE2	0xF580C562  	MOVFF       can_user_read_message_idNew_L0+2, FARG_mysql_write_value+2
0x4CE6	0xF581C563  	MOVFF       can_user_read_message_idNew_L0+3, FARG_mysql_write_value+3
0x4CEA	0x6B82      	CLRF        FARG_mysql_write_endWrite, 1
0x4CEC	0xF014EC20  	CALL        _mysql_write, 0
;Validadora.c,1552 :: 		mysql_write(tablePrepago, prepagoNip, fila, nip, false);
0x4CF0	0x0E9A      	MOVLW       _tablePrepago
0x4CF2	0x0105      	MOVLB       5
0x4CF4	0x6F78      	MOVWF       FARG_mysql_write_name, 1
0x4CF6	0x0E02      	MOVLW       hi_addr(_tablePrepago)
0x4CF8	0x6F79      	MOVWF       FARG_mysql_write_name+1, 1
0x4CFA	0x0E87      	MOVLW       _prepagoNip
0x4CFC	0x6F7A      	MOVWF       FARG_mysql_write_column, 1
0x4CFE	0x0E00      	MOVLW       hi_addr(_prepagoNip)
0x4D00	0x6F7B      	MOVWF       FARG_mysql_write_column+1, 1
0x4D02	0xF57CC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_fila
0x4D06	0xF57DC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_fila+1
0x4D0A	0xF57EC568  	MOVFF       can_user_read_message_nip_L0, FARG_mysql_write_value
0x4D0E	0xF57FC569  	MOVFF       can_user_read_message_nip_L0+1, FARG_mysql_write_value+1
0x4D12	0xF580C56A  	MOVFF       can_user_read_message_nip_L0+2, FARG_mysql_write_value+2
0x4D16	0xF581C56B  	MOVFF       can_user_read_message_nip_L0+3, FARG_mysql_write_value+3
0x4D1A	0x6B82      	CLRF        FARG_mysql_write_endWrite, 1
0x4D1C	0xF014EC20  	CALL        _mysql_write, 0
;Validadora.c,1553 :: 		mysql_write(tablePrepago, prepagoSaldo, fila, saldo, false);
0x4D20	0x0E9A      	MOVLW       _tablePrepago
0x4D22	0x0105      	MOVLB       5
0x4D24	0x6F78      	MOVWF       FARG_mysql_write_name, 1
0x4D26	0x0E02      	MOVLW       hi_addr(_tablePrepago)
0x4D28	0x6F79      	MOVWF       FARG_mysql_write_name+1, 1
0x4D2A	0x0EA2      	MOVLW       _prepagoSaldo
0x4D2C	0x6F7A      	MOVWF       FARG_mysql_write_column, 1
0x4D2E	0x0E02      	MOVLW       hi_addr(_prepagoSaldo)
0x4D30	0x6F7B      	MOVWF       FARG_mysql_write_column+1, 1
0x4D32	0xF57CC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_fila
0x4D36	0xF57DC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_fila+1
0x4D3A	0xF57EC570  	MOVFF       can_user_read_message_saldo_L0, FARG_mysql_write_value
0x4D3E	0xF57FC571  	MOVFF       can_user_read_message_saldo_L0+1, FARG_mysql_write_value+1
0x4D42	0xF580C572  	MOVFF       can_user_read_message_saldo_L0+2, FARG_mysql_write_value+2
0x4D46	0xF581C573  	MOVFF       can_user_read_message_saldo_L0+3, FARG_mysql_write_value+3
0x4D4A	0x6B82      	CLRF        FARG_mysql_write_endWrite, 1
0x4D4C	0xF014EC20  	CALL        _mysql_write, 0
;Validadora.c,1554 :: 		mysql_write(tablePrepago, prepagoEstatus, fila, estatus, false);
0x4D50	0x0E9A      	MOVLW       _tablePrepago
0x4D52	0x0105      	MOVLB       5
0x4D54	0x6F78      	MOVWF       FARG_mysql_write_name, 1
0x4D56	0x0E02      	MOVLW       hi_addr(_tablePrepago)
0x4D58	0x6F79      	MOVWF       FARG_mysql_write_name+1, 1
0x4D5A	0x0E92      	MOVLW       _prepagoEstatus
0x4D5C	0x6F7A      	MOVWF       FARG_mysql_write_column, 1
0x4D5E	0x0E02      	MOVLW       hi_addr(_prepagoEstatus)
0x4D60	0x6F7B      	MOVWF       FARG_mysql_write_column+1, 1
0x4D62	0xF57CC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_fila
0x4D66	0xF57DC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_fila+1
0x4D6A	0xF57EC55B  	MOVFF       can_user_read_message_estatus_L0, FARG_mysql_write_value
0x4D6E	0x0E00      	MOVLW       0
0x4D70	0x6F7F      	MOVWF       FARG_mysql_write_value+1, 1
0x4D72	0x6F80      	MOVWF       FARG_mysql_write_value+2, 1
0x4D74	0x6F81      	MOVWF       FARG_mysql_write_value+3, 1
0x4D76	0x6B82      	CLRF        FARG_mysql_write_endWrite, 1
0x4D78	0xF014EC20  	CALL        _mysql_write, 0
;Validadora.c,1558 :: 		}
L_can_user_read_message809:
;Validadora.c,1559 :: 		}
L_can_user_read_message808:
;Validadora.c,1560 :: 		}else if(string_cmpnc(CAN_CONSULTAR, &can.rxBuffer[sizeTotal], sizeKey)){
0x4D7C	0xD393      	BRA         L_can_user_read_message810
L_can_user_read_message807:
0x4D7E	0x0E82      	MOVLW       _CAN_CONSULTAR
0x4D80	0x0105      	MOVLB       5
0x4D82	0x6F78      	MOVWF       FARG_string_cmpnc_text1, 1
0x4D84	0x0E9F      	MOVLW       hi_addr(_CAN_CONSULTAR)
0x4D86	0x6F79      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x4D88	0x0E00      	MOVLW       higher_addr(_CAN_CONSULTAR)
0x4D8A	0x6F7A      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x4D8C	0x0E2A      	MOVLW       _can+107
0x4D8E	0x6F7B      	MOVWF       FARG_string_cmpnc_text2, 1
0x4D90	0x0E04      	MOVLW       hi_addr(_can+107)
0x4D92	0x6F7C      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x4D94	0x5157      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x4D96	0x277B      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x4D98	0xB0D8      	BTFSC       STATUS, 0 
0x4D9A	0x2B7C      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x4D9C	0xF57DC556  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x4DA0	0xF016EC7C  	CALL        _string_cmpnc, 0
0x4DA4	0x5200      	MOVF        R0, 1 
0x4DA6	0xB4D8      	BTFSC       STATUS, 2 
0x4DA8	0xD0EF      	BRA         L_can_user_read_message811
;Validadora.c,1562 :: 		sizeTotal += sizeKey;
0x4DAA	0x5156      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x4DAC	0x2757      	ADDWF       can_user_read_message_sizeTotal_L0, 1, 1
;Validadora.c,1563 :: 		sizeKey = 4;  //4 POR LA FILA
0x4DAE	0x0E04      	MOVLW       4
0x4DB0	0x6F56      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Validadora.c,1565 :: 		string_cpyc(bufferEeprom, CAN_TPV);
0x4DB2	0x0ED2      	MOVLW       _bufferEeprom
0x4DB4	0x6F78      	MOVWF       FARG_string_cpyc_destino, 1
0x4DB6	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x4DB8	0x6F79      	MOVWF       FARG_string_cpyc_destino+1, 1
0x4DBA	0x0E0E      	MOVLW       _CAN_TPV
0x4DBC	0x6F7A      	MOVWF       FARG_string_cpyc_origen, 1
0x4DBE	0x0E9F      	MOVLW       hi_addr(_CAN_TPV)
0x4DC0	0x6F7B      	MOVWF       FARG_string_cpyc_origen+1, 1
0x4DC2	0x0E00      	MOVLW       higher_addr(_CAN_TPV)
0x4DC4	0x6F7C      	MOVWF       FARG_string_cpyc_origen+2, 1
0x4DC6	0xF014ECBC  	CALL        _string_cpyc, 0
;Validadora.c,1566 :: 		string_cpyn(&bufferEeprom[sizeof(CAN_TPV)-1], can.rxBuffer, sizeTotal);
0x4DCA	0x0ED5      	MOVLW       _bufferEeprom+3
0x4DCC	0x6F78      	MOVWF       FARG_string_cpyn_destino, 1
0x4DCE	0x0E04      	MOVLW       hi_addr(_bufferEeprom+3)
0x4DD0	0x6F79      	MOVWF       FARG_string_cpyn_destino+1, 1
0x4DD2	0x0E2A      	MOVLW       _can+107
0x4DD4	0x6F7A      	MOVWF       FARG_string_cpyn_origen, 1
0x4DD6	0x0E04      	MOVLW       hi_addr(_can+107)
0x4DD8	0x6F7B      	MOVWF       FARG_string_cpyn_origen+1, 1
0x4DDA	0xF57CC557  	MOVFF       can_user_read_message_sizeTotal_L0, FARG_string_cpyn_size
0x4DDE	0xF00DEC35  	CALL        _string_cpyn, 0
;Validadora.c,1567 :: 		if(!mysql_read(tablePrepago, prepagoID, fila, &id)){
0x4DE2	0x0E9A      	MOVLW       _tablePrepago
0x4DE4	0x6F86      	MOVWF       FARG_mysql_read_name, 1
0x4DE6	0x0E02      	MOVLW       hi_addr(_tablePrepago)
0x4DE8	0x6F87      	MOVWF       FARG_mysql_read_name+1, 1
0x4DEA	0x0E69      	MOVLW       _prepagoId
0x4DEC	0x6F88      	MOVWF       FARG_mysql_read_column, 1
0x4DEE	0x0E00      	MOVLW       hi_addr(_prepagoId)
0x4DF0	0x6F89      	MOVWF       FARG_mysql_read_column+1, 1
0x4DF2	0xF58AC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_read_fila
0x4DF6	0xF58BC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_read_fila+1
0x4DFA	0x0E64      	MOVLW       can_user_read_message_id_L0
0x4DFC	0x6F8C      	MOVWF       FARG_mysql_read_result, 1
0x4DFE	0x0E05      	MOVLW       hi_addr(can_user_read_message_id_L0)
0x4E00	0x6F8D      	MOVWF       FARG_mysql_read_result+1, 1
0x4E02	0xF009EC2C  	CALL        _mysql_read, 0
0x4E06	0x5200      	MOVF        R0, 1 
0x4E08	0xA4D8      	BTFSS       STATUS, 2 
0x4E0A	0xD0B4      	BRA         L_can_user_read_message812
;Validadora.c,1568 :: 		if(idConsulta == id){
0x4E0C	0x0105      	MOVLB       5
0x4E0E	0x515F      	MOVF        can_user_read_message_idConsulta_L0+3, 0, 1
0x4E10	0x1967      	XORWF       can_user_read_message_id_L0+3, 0, 1
0x4E12	0xE108      	BNZ         L__can_user_read_message1360
0x4E14	0x515E      	MOVF        can_user_read_message_idConsulta_L0+2, 0, 1
0x4E16	0x1966      	XORWF       can_user_read_message_id_L0+2, 0, 1
0x4E18	0xE105      	BNZ         L__can_user_read_message1360
0x4E1A	0x515D      	MOVF        can_user_read_message_idConsulta_L0+1, 0, 1
0x4E1C	0x1965      	XORWF       can_user_read_message_id_L0+1, 0, 1
0x4E1E	0xE102      	BNZ         L__can_user_read_message1360
0x4E20	0x515C      	MOVF        can_user_read_message_idConsulta_L0, 0, 1
0x4E22	0x1964      	XORWF       can_user_read_message_id_L0, 0, 1
L__can_user_read_message1360:
0x4E24	0xA4D8      	BTFSS       STATUS, 2 
0x4E26	0xD09A      	BRA         L_can_user_read_message813
;Validadora.c,1569 :: 		mysql_read(tablePrepago, prepagoNip, fila, &nip);
0x4E28	0x0E9A      	MOVLW       _tablePrepago
0x4E2A	0x6F86      	MOVWF       FARG_mysql_read_name, 1
0x4E2C	0x0E02      	MOVLW       hi_addr(_tablePrepago)
0x4E2E	0x6F87      	MOVWF       FARG_mysql_read_name+1, 1
0x4E30	0x0E87      	MOVLW       _prepagoNip
0x4E32	0x6F88      	MOVWF       FARG_mysql_read_column, 1
0x4E34	0x0E00      	MOVLW       hi_addr(_prepagoNip)
0x4E36	0x6F89      	MOVWF       FARG_mysql_read_column+1, 1
0x4E38	0xF58AC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_read_fila
0x4E3C	0xF58BC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_read_fila+1
0x4E40	0x0E68      	MOVLW       can_user_read_message_nip_L0
0x4E42	0x6F8C      	MOVWF       FARG_mysql_read_result, 1
0x4E44	0x0E05      	MOVLW       hi_addr(can_user_read_message_nip_L0)
0x4E46	0x6F8D      	MOVWF       FARG_mysql_read_result+1, 1
0x4E48	0xF009EC2C  	CALL        _mysql_read, 0
;Validadora.c,1570 :: 		mysql_read(tablePrepago, prepagoSaldo, fila, &saldo);
0x4E4C	0x0E9A      	MOVLW       _tablePrepago
0x4E4E	0x0105      	MOVLB       5
0x4E50	0x6F86      	MOVWF       FARG_mysql_read_name, 1
0x4E52	0x0E02      	MOVLW       hi_addr(_tablePrepago)
0x4E54	0x6F87      	MOVWF       FARG_mysql_read_name+1, 1
0x4E56	0x0EA2      	MOVLW       _prepagoSaldo
0x4E58	0x6F88      	MOVWF       FARG_mysql_read_column, 1
0x4E5A	0x0E02      	MOVLW       hi_addr(_prepagoSaldo)
0x4E5C	0x6F89      	MOVWF       FARG_mysql_read_column+1, 1
0x4E5E	0xF58AC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_read_fila
0x4E62	0xF58BC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_read_fila+1
0x4E66	0x0E70      	MOVLW       can_user_read_message_saldo_L0
0x4E68	0x6F8C      	MOVWF       FARG_mysql_read_result, 1
0x4E6A	0x0E05      	MOVLW       hi_addr(can_user_read_message_saldo_L0)
0x4E6C	0x6F8D      	MOVWF       FARG_mysql_read_result+1, 1
0x4E6E	0xF009EC2C  	CALL        _mysql_read, 0
;Validadora.c,1571 :: 		mysql_read_string(tablePrepago, prepagoEstatus, fila, &estatus);
0x4E72	0x0E9A      	MOVLW       _tablePrepago
0x4E74	0x0105      	MOVLB       5
0x4E76	0x6F78      	MOVWF       FARG_mysql_read_string_name, 1
0x4E78	0x0E02      	MOVLW       hi_addr(_tablePrepago)
0x4E7A	0x6F79      	MOVWF       FARG_mysql_read_string_name+1, 1
0x4E7C	0x0E92      	MOVLW       _prepagoEstatus
0x4E7E	0x6F7A      	MOVWF       FARG_mysql_read_string_column, 1
0x4E80	0x0E02      	MOVLW       hi_addr(_prepagoEstatus)
0x4E82	0x6F7B      	MOVWF       FARG_mysql_read_string_column+1, 1
0x4E84	0xF57CC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_read_string_fila
0x4E88	0xF57DC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_read_string_fila+1
0x4E8C	0x0E5B      	MOVLW       can_user_read_message_estatus_L0
0x4E8E	0x6F7E      	MOVWF       FARG_mysql_read_string_result, 1
0x4E90	0x0E05      	MOVLW       hi_addr(can_user_read_message_estatus_L0)
0x4E92	0x6F7F      	MOVWF       FARG_mysql_read_string_result+1, 1
0x4E94	0xF015EC0E  	CALL        _mysql_read_string, 0
;Validadora.c,1573 :: 		numToHex(nip, msjConst, 4);
0x4E98	0xF578C568  	MOVFF       can_user_read_message_nip_L0, FARG_numToHex_valor
0x4E9C	0xF579C569  	MOVFF       can_user_read_message_nip_L0+1, FARG_numToHex_valor+1
0x4EA0	0xF57AC56A  	MOVFF       can_user_read_message_nip_L0+2, FARG_numToHex_valor+2
0x4EA4	0xF57BC56B  	MOVFF       can_user_read_message_nip_L0+3, FARG_numToHex_valor+3
0x4EA8	0x0E12      	MOVLW       _msjConst
0x4EAA	0x0105      	MOVLB       5
0x4EAC	0x6F7C      	MOVWF       FARG_numToHex_cadena, 1
0x4EAE	0x0E05      	MOVLW       hi_addr(_msjConst)
0x4EB0	0x6F7D      	MOVWF       FARG_numToHex_cadena+1, 1
0x4EB2	0x0E04      	MOVLW       4
0x4EB4	0x6F7E      	MOVWF       FARG_numToHex_bytes, 1
0x4EB6	0xF00DECAD  	CALL        _numToHex, 0
;Validadora.c,1574 :: 		string_add(bufferEeprom, msjConst);
0x4EBA	0x0ED2      	MOVLW       _bufferEeprom
0x4EBC	0x6F78      	MOVWF       FARG_string_add_destino, 1
0x4EBE	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x4EC0	0x6F79      	MOVWF       FARG_string_add_destino+1, 1
0x4EC2	0x0E12      	MOVLW       _msjConst
0x4EC4	0x6F7A      	MOVWF       FARG_string_add_addEnd, 1
0x4EC6	0x0E05      	MOVLW       hi_addr(_msjConst)
0x4EC8	0x6F7B      	MOVWF       FARG_string_add_addEnd+1, 1
0x4ECA	0xF016EC4C  	CALL        _string_add, 0
;Validadora.c,1575 :: 		numToHex(saldo, msjConst, 4);
0x4ECE	0xF578C570  	MOVFF       can_user_read_message_saldo_L0, FARG_numToHex_valor
0x4ED2	0xF579C571  	MOVFF       can_user_read_message_saldo_L0+1, FARG_numToHex_valor+1
0x4ED6	0xF57AC572  	MOVFF       can_user_read_message_saldo_L0+2, FARG_numToHex_valor+2
0x4EDA	0xF57BC573  	MOVFF       can_user_read_message_saldo_L0+3, FARG_numToHex_valor+3
0x4EDE	0x0E12      	MOVLW       _msjConst
0x4EE0	0x6F7C      	MOVWF       FARG_numToHex_cadena, 1
0x4EE2	0x0E05      	MOVLW       hi_addr(_msjConst)
0x4EE4	0x6F7D      	MOVWF       FARG_numToHex_cadena+1, 1
0x4EE6	0x0E04      	MOVLW       4
0x4EE8	0x6F7E      	MOVWF       FARG_numToHex_bytes, 1
0x4EEA	0xF00DECAD  	CALL        _numToHex, 0
;Validadora.c,1576 :: 		string_add(bufferEeprom, msjConst);
0x4EEE	0x0ED2      	MOVLW       _bufferEeprom
0x4EF0	0x6F78      	MOVWF       FARG_string_add_destino, 1
0x4EF2	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x4EF4	0x6F79      	MOVWF       FARG_string_add_destino+1, 1
0x4EF6	0x0E12      	MOVLW       _msjConst
0x4EF8	0x6F7A      	MOVWF       FARG_string_add_addEnd, 1
0x4EFA	0x0E05      	MOVLW       hi_addr(_msjConst)
0x4EFC	0x6F7B      	MOVWF       FARG_string_add_addEnd+1, 1
0x4EFE	0xF016EC4C  	CALL        _string_add, 0
;Validadora.c,1577 :: 		string_push(bufferEeprom, estatus);
0x4F02	0x0ED2      	MOVLW       _bufferEeprom
0x4F04	0x6F78      	MOVWF       FARG_string_push_texto, 1
0x4F06	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x4F08	0x6F79      	MOVWF       FARG_string_push_texto+1, 1
0x4F0A	0xF57AC55B  	MOVFF       can_user_read_message_estatus_L0, FARG_string_push_caracter
0x4F0E	0xF014ECEF  	CALL        _string_push, 0
;Validadora.c,1578 :: 		string_addc(bufferEeprom, CAN_MODULE);
0x4F12	0x0ED2      	MOVLW       _bufferEeprom
0x4F14	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x4F16	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x4F18	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x4F1A	0x0E86      	MOVLW       _CAN_MODULE
0x4F1C	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x4F1E	0x0E9F      	MOVLW       hi_addr(_CAN_MODULE)
0x4F20	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x4F22	0x0E00      	MOVLW       higher_addr(_CAN_MODULE)
0x4F24	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x4F26	0xF00FEC40  	CALL        _string_addc, 0
;Validadora.c,1579 :: 		numToHex(can.id, msjConst, 1);
0x4F2A	0xF578C3CB  	MOVFF       _can+12, FARG_numToHex_valor
0x4F2E	0x0E00      	MOVLW       0
0x4F30	0x6F79      	MOVWF       FARG_numToHex_valor+1, 1
0x4F32	0x6F7A      	MOVWF       FARG_numToHex_valor+2, 1
0x4F34	0x6F7B      	MOVWF       FARG_numToHex_valor+3, 1
0x4F36	0x0E12      	MOVLW       _msjConst
0x4F38	0x6F7C      	MOVWF       FARG_numToHex_cadena, 1
0x4F3A	0x0E05      	MOVLW       hi_addr(_msjConst)
0x4F3C	0x6F7D      	MOVWF       FARG_numToHex_cadena+1, 1
0x4F3E	0x0E01      	MOVLW       1
0x4F40	0x6F7E      	MOVWF       FARG_numToHex_bytes, 1
0x4F42	0xF00DECAD  	CALL        _numToHex, 0
;Validadora.c,1580 :: 		string_add(bufferEeprom, msjConst);
0x4F46	0x0ED2      	MOVLW       _bufferEeprom
0x4F48	0x6F78      	MOVWF       FARG_string_add_destino, 1
0x4F4A	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x4F4C	0x6F79      	MOVWF       FARG_string_add_destino+1, 1
0x4F4E	0x0E12      	MOVLW       _msjConst
0x4F50	0x6F7A      	MOVWF       FARG_string_add_addEnd, 1
0x4F52	0x0E05      	MOVLW       hi_addr(_msjConst)
0x4F54	0x6F7B      	MOVWF       FARG_string_add_addEnd+1, 1
0x4F56	0xF016EC4C  	CALL        _string_add, 0
;Validadora.c,1584 :: 		}else{
0x4F5A	0xD00C      	BRA         L_can_user_read_message814
L_can_user_read_message813:
;Validadora.c,1585 :: 		string_addc(bufferEeprom, CAN_TABLE_NO_FOUND);
0x4F5C	0x0ED2      	MOVLW       _bufferEeprom
0x4F5E	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x4F60	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x4F62	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x4F64	0x0EE5      	MOVLW       _CAN_TABLE_NO_FOUND
0x4F66	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x4F68	0x0E9E      	MOVLW       hi_addr(_CAN_TABLE_NO_FOUND)
0x4F6A	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x4F6C	0x0E00      	MOVLW       higher_addr(_CAN_TABLE_NO_FOUND)
0x4F6E	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x4F70	0xF00FEC40  	CALL        _string_addc, 0
;Validadora.c,1586 :: 		}
L_can_user_read_message814:
;Validadora.c,1587 :: 		}
L_can_user_read_message812:
0x4F74	0x0105      	MOVLB       5
;Validadora.c,1589 :: 		buffer_save_send(true, bufferEeprom);
0x4F76	0x0E01      	MOVLW       1
0x4F78	0x6F78      	MOVWF       FARG_buffer_save_send_guardar, 1
0x4F7A	0x0ED2      	MOVLW       _bufferEeprom
0x4F7C	0x6F79      	MOVWF       FARG_buffer_save_send_buffer, 1
0x4F7E	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x4F80	0x6F7A      	MOVWF       FARG_buffer_save_send_buffer+1, 1
0x4F82	0xF00FECCD  	CALL        _buffer_save_send, 0
;Validadora.c,1590 :: 		}else if(string_cmpnc(CAN_NIP, &can.rxBuffer[sizeTotal], sizeKey)){
0x4F86	0xD28E      	BRA         L_can_user_read_message815
L_can_user_read_message811:
0x4F88	0x0E4A      	MOVLW       _CAN_NIP
0x4F8A	0x0105      	MOVLB       5
0x4F8C	0x6F78      	MOVWF       FARG_string_cmpnc_text1, 1
0x4F8E	0x0E9F      	MOVLW       hi_addr(_CAN_NIP)
0x4F90	0x6F79      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x4F92	0x0E00      	MOVLW       higher_addr(_CAN_NIP)
0x4F94	0x6F7A      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x4F96	0x0E2A      	MOVLW       _can+107
0x4F98	0x6F7B      	MOVWF       FARG_string_cmpnc_text2, 1
0x4F9A	0x0E04      	MOVLW       hi_addr(_can+107)
0x4F9C	0x6F7C      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x4F9E	0x5157      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x4FA0	0x277B      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x4FA2	0xB0D8      	BTFSC       STATUS, 0 
0x4FA4	0x2B7C      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x4FA6	0xF57DC556  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x4FAA	0xF016EC7C  	CALL        _string_cmpnc, 0
0x4FAE	0x5200      	MOVF        R0, 1 
0x4FB0	0xE064      	BZ          L_can_user_read_message816
;Validadora.c,1592 :: 		sizeTotal += sizeKey;
0x4FB2	0x5156      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x4FB4	0x2557      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x4FB6	0x6E00      	MOVWF       R0 
0x4FB8	0xF557C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Validadora.c,1593 :: 		sizeKey = 4;  //4 POR LA FILA
0x4FBC	0x0E04      	MOVLW       4
0x4FBE	0x6F56      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Validadora.c,1595 :: 		sizeTotal += sizeKey;
0x4FC0	0x0E04      	MOVLW       4
0x4FC2	0x2600      	ADDWF       R0, 1 
0x4FC4	0xF557C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Validadora.c,1596 :: 		sizeKey = 8;  //8 Byte
0x4FC8	0x0E08      	MOVLW       8
0x4FCA	0x6F56      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Validadora.c,1597 :: 		string_cpyn(msjConst, &can.rxBuffer[sizeTotal], sizeKey);
0x4FCC	0x0E12      	MOVLW       _msjConst
0x4FCE	0x6F78      	MOVWF       FARG_string_cpyn_destino, 1
0x4FD0	0x0E05      	MOVLW       hi_addr(_msjConst)
0x4FD2	0x6F79      	MOVWF       FARG_string_cpyn_destino+1, 1
0x4FD4	0x0E2A      	MOVLW       _can+107
0x4FD6	0x6F7A      	MOVWF       FARG_string_cpyn_origen, 1
0x4FD8	0x0E04      	MOVLW       hi_addr(_can+107)
0x4FDA	0x6F7B      	MOVWF       FARG_string_cpyn_origen+1, 1
0x4FDC	0x5000      	MOVF        R0, 0 
0x4FDE	0x277A      	ADDWF       FARG_string_cpyn_origen, 1, 1
0x4FE0	0xB0D8      	BTFSC       STATUS, 0 
0x4FE2	0x2B7B      	INCF        FARG_string_cpyn_origen+1, 1, 1
0x4FE4	0x0E08      	MOVLW       8
0x4FE6	0x6F7C      	MOVWF       FARG_string_cpyn_size, 1
0x4FE8	0xF00DEC35  	CALL        _string_cpyn, 0
;Validadora.c,1598 :: 		nip = hexToNum(msjConst);
0x4FEC	0x0E12      	MOVLW       _msjConst
0x4FEE	0x6F78      	MOVWF       FARG_hexToNum_hex, 1
0x4FF0	0x0E05      	MOVLW       hi_addr(_msjConst)
0x4FF2	0x6F79      	MOVWF       FARG_hexToNum_hex+1, 1
0x4FF4	0xF00EEC51  	CALL        _hexToNum, 0
0x4FF8	0xF568C000  	MOVFF       R0, can_user_read_message_nip_L0
0x4FFC	0xF569C001  	MOVFF       R1, can_user_read_message_nip_L0+1
0x5000	0xF56AC002  	MOVFF       R2, can_user_read_message_nip_L0+2
0x5004	0xF56BC003  	MOVFF       R3, can_user_read_message_nip_L0+3
;Validadora.c,1600 :: 		if(!mysql_read(tablePrepago, prepagoID, fila, &id)){
0x5008	0x0E9A      	MOVLW       _tablePrepago
0x500A	0x6F86      	MOVWF       FARG_mysql_read_name, 1
0x500C	0x0E02      	MOVLW       hi_addr(_tablePrepago)
0x500E	0x6F87      	MOVWF       FARG_mysql_read_name+1, 1
0x5010	0x0E69      	MOVLW       _prepagoId
0x5012	0x6F88      	MOVWF       FARG_mysql_read_column, 1
0x5014	0x0E00      	MOVLW       hi_addr(_prepagoId)
0x5016	0x6F89      	MOVWF       FARG_mysql_read_column+1, 1
0x5018	0xF58AC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_read_fila
0x501C	0xF58BC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_read_fila+1
0x5020	0x0E64      	MOVLW       can_user_read_message_id_L0
0x5022	0x6F8C      	MOVWF       FARG_mysql_read_result, 1
0x5024	0x0E05      	MOVLW       hi_addr(can_user_read_message_id_L0)
0x5026	0x6F8D      	MOVWF       FARG_mysql_read_result+1, 1
0x5028	0xF009EC2C  	CALL        _mysql_read, 0
0x502C	0x5200      	MOVF        R0, 1 
0x502E	0xE124      	BNZ         L_can_user_read_message817
;Validadora.c,1601 :: 		if(id == idConsulta){
0x5030	0x0105      	MOVLB       5
0x5032	0x5167      	MOVF        can_user_read_message_id_L0+3, 0, 1
0x5034	0x195F      	XORWF       can_user_read_message_idConsulta_L0+3, 0, 1
0x5036	0xE108      	BNZ         L__can_user_read_message1361
0x5038	0x5166      	MOVF        can_user_read_message_id_L0+2, 0, 1
0x503A	0x195E      	XORWF       can_user_read_message_idConsulta_L0+2, 0, 1
0x503C	0xE105      	BNZ         L__can_user_read_message1361
0x503E	0x5165      	MOVF        can_user_read_message_id_L0+1, 0, 1
0x5040	0x195D      	XORWF       can_user_read_message_idConsulta_L0+1, 0, 1
0x5042	0xE102      	BNZ         L__can_user_read_message1361
0x5044	0x5164      	MOVF        can_user_read_message_id_L0, 0, 1
0x5046	0x195C      	XORWF       can_user_read_message_idConsulta_L0, 0, 1
L__can_user_read_message1361:
0x5048	0xE117      	BNZ         L_can_user_read_message818
;Validadora.c,1602 :: 		mysql_write(tablePrepago, prepagoNip, fila, nip, false);
0x504A	0x0E9A      	MOVLW       _tablePrepago
0x504C	0x6F78      	MOVWF       FARG_mysql_write_name, 1
0x504E	0x0E02      	MOVLW       hi_addr(_tablePrepago)
0x5050	0x6F79      	MOVWF       FARG_mysql_write_name+1, 1
0x5052	0x0E87      	MOVLW       _prepagoNip
0x5054	0x6F7A      	MOVWF       FARG_mysql_write_column, 1
0x5056	0x0E00      	MOVLW       hi_addr(_prepagoNip)
0x5058	0x6F7B      	MOVWF       FARG_mysql_write_column+1, 1
0x505A	0xF57CC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_fila
0x505E	0xF57DC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_fila+1
0x5062	0xF57EC568  	MOVFF       can_user_read_message_nip_L0, FARG_mysql_write_value
0x5066	0xF57FC569  	MOVFF       can_user_read_message_nip_L0+1, FARG_mysql_write_value+1
0x506A	0xF580C56A  	MOVFF       can_user_read_message_nip_L0+2, FARG_mysql_write_value+2
0x506E	0xF581C56B  	MOVFF       can_user_read_message_nip_L0+3, FARG_mysql_write_value+3
0x5072	0x6B82      	CLRF        FARG_mysql_write_endWrite, 1
0x5074	0xF014EC20  	CALL        _mysql_write, 0
;Validadora.c,1606 :: 		}
L_can_user_read_message818:
;Validadora.c,1607 :: 		}
L_can_user_read_message817:
;Validadora.c,1608 :: 		}else if(string_cmpnc(CAN_SALDO, &can.rxBuffer[sizeTotal], sizeKey)){
0x5078	0xD215      	BRA         L_can_user_read_message819
L_can_user_read_message816:
0x507A	0x0E1A      	MOVLW       _CAN_SALDO
0x507C	0x0105      	MOVLB       5
0x507E	0x6F78      	MOVWF       FARG_string_cmpnc_text1, 1
0x5080	0x0E9F      	MOVLW       hi_addr(_CAN_SALDO)
0x5082	0x6F79      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x5084	0x0E00      	MOVLW       higher_addr(_CAN_SALDO)
0x5086	0x6F7A      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x5088	0x0E2A      	MOVLW       _can+107
0x508A	0x6F7B      	MOVWF       FARG_string_cmpnc_text2, 1
0x508C	0x0E04      	MOVLW       hi_addr(_can+107)
0x508E	0x6F7C      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x5090	0x5157      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x5092	0x277B      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x5094	0xB0D8      	BTFSC       STATUS, 0 
0x5096	0x2B7C      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x5098	0xF57DC556  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x509C	0xF016EC7C  	CALL        _string_cmpnc, 0
0x50A0	0x5200      	MOVF        R0, 1 
0x50A2	0xE064      	BZ          L_can_user_read_message820
;Validadora.c,1610 :: 		sizeTotal += sizeKey;
0x50A4	0x5156      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x50A6	0x2557      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x50A8	0x6E00      	MOVWF       R0 
0x50AA	0xF557C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Validadora.c,1611 :: 		sizeKey = 4;  //4 POR LA FILA
0x50AE	0x0E04      	MOVLW       4
0x50B0	0x6F56      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Validadora.c,1613 :: 		sizeTotal += sizeKey;
0x50B2	0x0E04      	MOVLW       4
0x50B4	0x2600      	ADDWF       R0, 1 
0x50B6	0xF557C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Validadora.c,1614 :: 		sizeKey = 8;  //8 Byte
0x50BA	0x0E08      	MOVLW       8
0x50BC	0x6F56      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Validadora.c,1615 :: 		string_cpyn(msjConst, &can.rxBuffer[sizeTotal], sizeKey);
0x50BE	0x0E12      	MOVLW       _msjConst
0x50C0	0x6F78      	MOVWF       FARG_string_cpyn_destino, 1
0x50C2	0x0E05      	MOVLW       hi_addr(_msjConst)
0x50C4	0x6F79      	MOVWF       FARG_string_cpyn_destino+1, 1
0x50C6	0x0E2A      	MOVLW       _can+107
0x50C8	0x6F7A      	MOVWF       FARG_string_cpyn_origen, 1
0x50CA	0x0E04      	MOVLW       hi_addr(_can+107)
0x50CC	0x6F7B      	MOVWF       FARG_string_cpyn_origen+1, 1
0x50CE	0x5000      	MOVF        R0, 0 
0x50D0	0x277A      	ADDWF       FARG_string_cpyn_origen, 1, 1
0x50D2	0xB0D8      	BTFSC       STATUS, 0 
0x50D4	0x2B7B      	INCF        FARG_string_cpyn_origen+1, 1, 1
0x50D6	0x0E08      	MOVLW       8
0x50D8	0x6F7C      	MOVWF       FARG_string_cpyn_size, 1
0x50DA	0xF00DEC35  	CALL        _string_cpyn, 0
;Validadora.c,1616 :: 		saldo = hexToNum(msjConst);
0x50DE	0x0E12      	MOVLW       _msjConst
0x50E0	0x6F78      	MOVWF       FARG_hexToNum_hex, 1
0x50E2	0x0E05      	MOVLW       hi_addr(_msjConst)
0x50E4	0x6F79      	MOVWF       FARG_hexToNum_hex+1, 1
0x50E6	0xF00EEC51  	CALL        _hexToNum, 0
0x50EA	0xF570C000  	MOVFF       R0, can_user_read_message_saldo_L0
0x50EE	0xF571C001  	MOVFF       R1, can_user_read_message_saldo_L0+1
0x50F2	0xF572C002  	MOVFF       R2, can_user_read_message_saldo_L0+2
0x50F6	0xF573C003  	MOVFF       R3, can_user_read_message_saldo_L0+3
;Validadora.c,1618 :: 		if(!mysql_read(tablePrepago, prepagoID, fila, &id)){
0x50FA	0x0E9A      	MOVLW       _tablePrepago
0x50FC	0x6F86      	MOVWF       FARG_mysql_read_name, 1
0x50FE	0x0E02      	MOVLW       hi_addr(_tablePrepago)
0x5100	0x6F87      	MOVWF       FARG_mysql_read_name+1, 1
0x5102	0x0E69      	MOVLW       _prepagoId
0x5104	0x6F88      	MOVWF       FARG_mysql_read_column, 1
0x5106	0x0E00      	MOVLW       hi_addr(_prepagoId)
0x5108	0x6F89      	MOVWF       FARG_mysql_read_column+1, 1
0x510A	0xF58AC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_read_fila
0x510E	0xF58BC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_read_fila+1
0x5112	0x0E64      	MOVLW       can_user_read_message_id_L0
0x5114	0x6F8C      	MOVWF       FARG_mysql_read_result, 1
0x5116	0x0E05      	MOVLW       hi_addr(can_user_read_message_id_L0)
0x5118	0x6F8D      	MOVWF       FARG_mysql_read_result+1, 1
0x511A	0xF009EC2C  	CALL        _mysql_read, 0
0x511E	0x5200      	MOVF        R0, 1 
0x5120	0xE124      	BNZ         L_can_user_read_message821
;Validadora.c,1619 :: 		if(id == idConsulta){
0x5122	0x0105      	MOVLB       5
0x5124	0x5167      	MOVF        can_user_read_message_id_L0+3, 0, 1
0x5126	0x195F      	XORWF       can_user_read_message_idConsulta_L0+3, 0, 1
0x5128	0xE108      	BNZ         L__can_user_read_message1362
0x512A	0x5166      	MOVF        can_user_read_message_id_L0+2, 0, 1
0x512C	0x195E      	XORWF       can_user_read_message_idConsulta_L0+2, 0, 1
0x512E	0xE105      	BNZ         L__can_user_read_message1362
0x5130	0x5165      	MOVF        can_user_read_message_id_L0+1, 0, 1
0x5132	0x195D      	XORWF       can_user_read_message_idConsulta_L0+1, 0, 1
0x5134	0xE102      	BNZ         L__can_user_read_message1362
0x5136	0x5164      	MOVF        can_user_read_message_id_L0, 0, 1
0x5138	0x195C      	XORWF       can_user_read_message_idConsulta_L0, 0, 1
L__can_user_read_message1362:
0x513A	0xE117      	BNZ         L_can_user_read_message822
;Validadora.c,1620 :: 		mysql_write(tablePrepago, prepagoSaldo, fila, saldo, false);
0x513C	0x0E9A      	MOVLW       _tablePrepago
0x513E	0x6F78      	MOVWF       FARG_mysql_write_name, 1
0x5140	0x0E02      	MOVLW       hi_addr(_tablePrepago)
0x5142	0x6F79      	MOVWF       FARG_mysql_write_name+1, 1
0x5144	0x0EA2      	MOVLW       _prepagoSaldo
0x5146	0x6F7A      	MOVWF       FARG_mysql_write_column, 1
0x5148	0x0E02      	MOVLW       hi_addr(_prepagoSaldo)
0x514A	0x6F7B      	MOVWF       FARG_mysql_write_column+1, 1
0x514C	0xF57CC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_fila
0x5150	0xF57DC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_fila+1
0x5154	0xF57EC570  	MOVFF       can_user_read_message_saldo_L0, FARG_mysql_write_value
0x5158	0xF57FC571  	MOVFF       can_user_read_message_saldo_L0+1, FARG_mysql_write_value+1
0x515C	0xF580C572  	MOVFF       can_user_read_message_saldo_L0+2, FARG_mysql_write_value+2
0x5160	0xF581C573  	MOVFF       can_user_read_message_saldo_L0+3, FARG_mysql_write_value+3
0x5164	0x6B82      	CLRF        FARG_mysql_write_endWrite, 1
0x5166	0xF014EC20  	CALL        _mysql_write, 0
;Validadora.c,1624 :: 		}
L_can_user_read_message822:
;Validadora.c,1625 :: 		}
L_can_user_read_message821:
;Validadora.c,1626 :: 		}else if(string_cmpnc(CAN_PASSBACK, &can.rxBuffer[sizeTotal], sizeKey)){
0x516A	0xD19C      	BRA         L_can_user_read_message823
L_can_user_read_message820:
0x516C	0x0E56      	MOVLW       _CAN_PASSBACK
0x516E	0x0105      	MOVLB       5
0x5170	0x6F78      	MOVWF       FARG_string_cmpnc_text1, 1
0x5172	0x0E9F      	MOVLW       hi_addr(_CAN_PASSBACK)
0x5174	0x6F79      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x5176	0x0E00      	MOVLW       higher_addr(_CAN_PASSBACK)
0x5178	0x6F7A      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x517A	0x0E2A      	MOVLW       _can+107
0x517C	0x6F7B      	MOVWF       FARG_string_cmpnc_text2, 1
0x517E	0x0E04      	MOVLW       hi_addr(_can+107)
0x5180	0x6F7C      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x5182	0x5157      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x5184	0x277B      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x5186	0xB0D8      	BTFSC       STATUS, 0 
0x5188	0x2B7C      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x518A	0xF57DC556  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x518E	0xF016EC7C  	CALL        _string_cmpnc, 0
0x5192	0x5200      	MOVF        R0, 1 
0x5194	0xE04E      	BZ          L_can_user_read_message824
;Validadora.c,1628 :: 		sizeTotal += sizeKey;
0x5196	0x5156      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x5198	0x2557      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x519A	0x6E00      	MOVWF       R0 
0x519C	0xF557C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Validadora.c,1629 :: 		sizeKey = 4;  //4 POR LA FILA
0x51A0	0x0E04      	MOVLW       4
0x51A2	0x6F56      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Validadora.c,1631 :: 		sizeTotal += sizeKey;
0x51A4	0x0E04      	MOVLW       4
0x51A6	0x2600      	ADDWF       R0, 1 
0x51A8	0xF557C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Validadora.c,1632 :: 		sizeKey = 1;
0x51AC	0x0E01      	MOVLW       1
0x51AE	0x6F56      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Validadora.c,1633 :: 		estatus = can.rxBuffer[sizeTotal];
0x51B0	0x0E2A      	MOVLW       _can+107
0x51B2	0x6EE9      	MOVWF       FSR0L 
0x51B4	0x0E04      	MOVLW       hi_addr(_can+107)
0x51B6	0x6EEA      	MOVWF       FSR0H 
0x51B8	0x5000      	MOVF        R0, 0 
0x51BA	0x26E9      	ADDWF       FSR0L, 1 
0x51BC	0xB0D8      	BTFSC       STATUS, 0 
0x51BE	0x2AEA      	INCF        FSR0H, 1 
0x51C0	0xF55BCFEE  	MOVFF       POSTINC0, can_user_read_message_estatus_L0
;Validadora.c,1635 :: 		if(!mysql_read(tablePrepago, prepagoID, fila, &id)){
0x51C4	0x0E9A      	MOVLW       _tablePrepago
0x51C6	0x6F86      	MOVWF       FARG_mysql_read_name, 1
0x51C8	0x0E02      	MOVLW       hi_addr(_tablePrepago)
0x51CA	0x6F87      	MOVWF       FARG_mysql_read_name+1, 1
0x51CC	0x0E69      	MOVLW       _prepagoId
0x51CE	0x6F88      	MOVWF       FARG_mysql_read_column, 1
0x51D0	0x0E00      	MOVLW       hi_addr(_prepagoId)
0x51D2	0x6F89      	MOVWF       FARG_mysql_read_column+1, 1
0x51D4	0xF58AC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_read_fila
0x51D8	0xF58BC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_read_fila+1
0x51DC	0x0E64      	MOVLW       can_user_read_message_id_L0
0x51DE	0x6F8C      	MOVWF       FARG_mysql_read_result, 1
0x51E0	0x0E05      	MOVLW       hi_addr(can_user_read_message_id_L0)
0x51E2	0x6F8D      	MOVWF       FARG_mysql_read_result+1, 1
0x51E4	0xF009EC2C  	CALL        _mysql_read, 0
0x51E8	0x5200      	MOVF        R0, 1 
0x51EA	0xE122      	BNZ         L_can_user_read_message825
;Validadora.c,1636 :: 		if(id == idConsulta){
0x51EC	0x0105      	MOVLB       5
0x51EE	0x5167      	MOVF        can_user_read_message_id_L0+3, 0, 1
0x51F0	0x195F      	XORWF       can_user_read_message_idConsulta_L0+3, 0, 1
0x51F2	0xE108      	BNZ         L__can_user_read_message1363
0x51F4	0x5166      	MOVF        can_user_read_message_id_L0+2, 0, 1
0x51F6	0x195E      	XORWF       can_user_read_message_idConsulta_L0+2, 0, 1
0x51F8	0xE105      	BNZ         L__can_user_read_message1363
0x51FA	0x5165      	MOVF        can_user_read_message_id_L0+1, 0, 1
0x51FC	0x195D      	XORWF       can_user_read_message_idConsulta_L0+1, 0, 1
0x51FE	0xE102      	BNZ         L__can_user_read_message1363
0x5200	0x5164      	MOVF        can_user_read_message_id_L0, 0, 1
0x5202	0x195C      	XORWF       can_user_read_message_idConsulta_L0, 0, 1
L__can_user_read_message1363:
0x5204	0xE115      	BNZ         L_can_user_read_message826
;Validadora.c,1637 :: 		mysql_write(tablePrepago, prepagoEstatus, fila, estatus, false);
0x5206	0x0E9A      	MOVLW       _tablePrepago
0x5208	0x6F78      	MOVWF       FARG_mysql_write_name, 1
0x520A	0x0E02      	MOVLW       hi_addr(_tablePrepago)
0x520C	0x6F79      	MOVWF       FARG_mysql_write_name+1, 1
0x520E	0x0E92      	MOVLW       _prepagoEstatus
0x5210	0x6F7A      	MOVWF       FARG_mysql_write_column, 1
0x5212	0x0E02      	MOVLW       hi_addr(_prepagoEstatus)
0x5214	0x6F7B      	MOVWF       FARG_mysql_write_column+1, 1
0x5216	0xF57CC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_fila
0x521A	0xF57DC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_fila+1
0x521E	0xF57EC55B  	MOVFF       can_user_read_message_estatus_L0, FARG_mysql_write_value
0x5222	0x0E00      	MOVLW       0
0x5224	0x6F7F      	MOVWF       FARG_mysql_write_value+1, 1
0x5226	0x6F80      	MOVWF       FARG_mysql_write_value+2, 1
0x5228	0x6F81      	MOVWF       FARG_mysql_write_value+3, 1
0x522A	0x6B82      	CLRF        FARG_mysql_write_endWrite, 1
0x522C	0xF014EC20  	CALL        _mysql_write, 0
;Validadora.c,1641 :: 		}
L_can_user_read_message826:
;Validadora.c,1642 :: 		}
L_can_user_read_message825:
;Validadora.c,1643 :: 		}else if(string_cmpnc(CAN_SPECIAL_DATE, &can.rxBuffer[sizeTotal], sizeKey)){
0x5230	0xD139      	BRA         L_can_user_read_message827
L_can_user_read_message824:
0x5232	0x0E16      	MOVLW       _CAN_SPECIAL_DATE
0x5234	0x0105      	MOVLB       5
0x5236	0x6F78      	MOVWF       FARG_string_cmpnc_text1, 1
0x5238	0x0E9F      	MOVLW       hi_addr(_CAN_SPECIAL_DATE)
0x523A	0x6F79      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x523C	0x0E00      	MOVLW       higher_addr(_CAN_SPECIAL_DATE)
0x523E	0x6F7A      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x5240	0x0E2A      	MOVLW       _can+107
0x5242	0x6F7B      	MOVWF       FARG_string_cmpnc_text2, 1
0x5244	0x0E04      	MOVLW       hi_addr(_can+107)
0x5246	0x6F7C      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x5248	0x5157      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x524A	0x277B      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x524C	0xB0D8      	BTFSC       STATUS, 0 
0x524E	0x2B7C      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x5250	0xF57DC556  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x5254	0xF016EC7C  	CALL        _string_cmpnc, 0
0x5258	0x5200      	MOVF        R0, 1 
0x525A	0xB4D8      	BTFSC       STATUS, 2 
0x525C	0xD077      	BRA         L_can_user_read_message828
;Validadora.c,1645 :: 		sizeTotal += sizeKey;
0x525E	0x5156      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x5260	0x2557      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x5262	0x6E00      	MOVWF       R0 
0x5264	0xF557C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Validadora.c,1646 :: 		sizeKey = 4;  //4 POR LA FILA
0x5268	0x0E04      	MOVLW       4
0x526A	0x6F56      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Validadora.c,1648 :: 		sizeTotal += sizeKey;
0x526C	0x0E04      	MOVLW       4
0x526E	0x2600      	ADDWF       R0, 1 
0x5270	0xF557C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Validadora.c,1649 :: 		sizeKey = 1;
0x5274	0x0E01      	MOVLW       1
0x5276	0x6F56      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Validadora.c,1650 :: 		estatus = can.rxBuffer[sizeTotal];
0x5278	0x0E2A      	MOVLW       _can+107
0x527A	0x6EE9      	MOVWF       FSR0L 
0x527C	0x0E04      	MOVLW       hi_addr(_can+107)
0x527E	0x6EEA      	MOVWF       FSR0H 
0x5280	0x5000      	MOVF        R0, 0 
0x5282	0x26E9      	ADDWF       FSR0L, 1 
0x5284	0xB0D8      	BTFSC       STATUS, 0 
0x5286	0x2AEA      	INCF        FSR0H, 1 
0x5288	0xF55BCFEE  	MOVFF       POSTINC0, can_user_read_message_estatus_L0
;Validadora.c,1652 :: 		sizeTotal += sizeKey;
0x528C	0x2A00      	INCF        R0, 1 
0x528E	0xF557C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Validadora.c,1653 :: 		sizeKey = 12;
0x5292	0x0E0C      	MOVLW       12
0x5294	0x6F56      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Validadora.c,1654 :: 		string_cpyn(msjConst, &can.rxBuffer[sizeTotal], sizeKey);
0x5296	0x0E12      	MOVLW       _msjConst
0x5298	0x6F78      	MOVWF       FARG_string_cpyn_destino, 1
0x529A	0x0E05      	MOVLW       hi_addr(_msjConst)
0x529C	0x6F79      	MOVWF       FARG_string_cpyn_destino+1, 1
0x529E	0x0E2A      	MOVLW       _can+107
0x52A0	0x6F7A      	MOVWF       FARG_string_cpyn_origen, 1
0x52A2	0x0E04      	MOVLW       hi_addr(_can+107)
0x52A4	0x6F7B      	MOVWF       FARG_string_cpyn_origen+1, 1
0x52A6	0x5000      	MOVF        R0, 0 
0x52A8	0x277A      	ADDWF       FARG_string_cpyn_origen, 1, 1
0x52AA	0xB0D8      	BTFSC       STATUS, 0 
0x52AC	0x2B7B      	INCF        FARG_string_cpyn_origen+1, 1, 1
0x52AE	0x0E0C      	MOVLW       12
0x52B0	0x6F7C      	MOVWF       FARG_string_cpyn_size, 1
0x52B2	0xF00DEC35  	CALL        _string_cpyn, 0
;Validadora.c,1656 :: 		if(!mysql_read(tablePrepago, prepagoID, fila, &id)){
0x52B6	0x0E9A      	MOVLW       _tablePrepago
0x52B8	0x6F86      	MOVWF       FARG_mysql_read_name, 1
0x52BA	0x0E02      	MOVLW       hi_addr(_tablePrepago)
0x52BC	0x6F87      	MOVWF       FARG_mysql_read_name+1, 1
0x52BE	0x0E69      	MOVLW       _prepagoId
0x52C0	0x6F88      	MOVWF       FARG_mysql_read_column, 1
0x52C2	0x0E00      	MOVLW       hi_addr(_prepagoId)
0x52C4	0x6F89      	MOVWF       FARG_mysql_read_column+1, 1
0x52C6	0xF58AC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_read_fila
0x52CA	0xF58BC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_read_fila+1
0x52CE	0x0E64      	MOVLW       can_user_read_message_id_L0
0x52D0	0x6F8C      	MOVWF       FARG_mysql_read_result, 1
0x52D2	0x0E05      	MOVLW       hi_addr(can_user_read_message_id_L0)
0x52D4	0x6F8D      	MOVWF       FARG_mysql_read_result+1, 1
0x52D6	0xF009EC2C  	CALL        _mysql_read, 0
0x52DA	0x5200      	MOVF        R0, 1 
0x52DC	0xE136      	BNZ         L_can_user_read_message829
;Validadora.c,1657 :: 		if(id == idConsulta){
0x52DE	0x0105      	MOVLB       5
0x52E0	0x5167      	MOVF        can_user_read_message_id_L0+3, 0, 1
0x52E2	0x195F      	XORWF       can_user_read_message_idConsulta_L0+3, 0, 1
0x52E4	0xE108      	BNZ         L__can_user_read_message1364
0x52E6	0x5166      	MOVF        can_user_read_message_id_L0+2, 0, 1
0x52E8	0x195E      	XORWF       can_user_read_message_idConsulta_L0+2, 0, 1
0x52EA	0xE105      	BNZ         L__can_user_read_message1364
0x52EC	0x5165      	MOVF        can_user_read_message_id_L0+1, 0, 1
0x52EE	0x195D      	XORWF       can_user_read_message_idConsulta_L0+1, 0, 1
0x52F0	0xE102      	BNZ         L__can_user_read_message1364
0x52F2	0x5164      	MOVF        can_user_read_message_id_L0, 0, 1
0x52F4	0x195C      	XORWF       can_user_read_message_idConsulta_L0, 0, 1
L__can_user_read_message1364:
0x52F6	0xE129      	BNZ         L_can_user_read_message830
;Validadora.c,1658 :: 		mysql_write(tablePrepago, prepagoEstatus, fila, estatus, false);
0x52F8	0x0E9A      	MOVLW       _tablePrepago
0x52FA	0x6F78      	MOVWF       FARG_mysql_write_name, 1
0x52FC	0x0E02      	MOVLW       hi_addr(_tablePrepago)
0x52FE	0x6F79      	MOVWF       FARG_mysql_write_name+1, 1
0x5300	0x0E92      	MOVLW       _prepagoEstatus
0x5302	0x6F7A      	MOVWF       FARG_mysql_write_column, 1
0x5304	0x0E02      	MOVLW       hi_addr(_prepagoEstatus)
0x5306	0x6F7B      	MOVWF       FARG_mysql_write_column+1, 1
0x5308	0xF57CC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_fila
0x530C	0xF57DC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_fila+1
0x5310	0xF57EC55B  	MOVFF       can_user_read_message_estatus_L0, FARG_mysql_write_value
0x5314	0x0E00      	MOVLW       0
0x5316	0x6F7F      	MOVWF       FARG_mysql_write_value+1, 1
0x5318	0x6F80      	MOVWF       FARG_mysql_write_value+2, 1
0x531A	0x6F81      	MOVWF       FARG_mysql_write_value+3, 1
0x531C	0x6B82      	CLRF        FARG_mysql_write_endWrite, 1
0x531E	0xF014EC20  	CALL        _mysql_write, 0
;Validadora.c,1659 :: 		mysql_write_string(tablePrepago, prepagoDate, fila, msjConst, false);
0x5322	0x0E9A      	MOVLW       _tablePrepago
0x5324	0x0105      	MOVLB       5
0x5326	0x6F78      	MOVWF       FARG_mysql_write_string_name, 1
0x5328	0x0E02      	MOVLW       hi_addr(_tablePrepago)
0x532A	0x6F79      	MOVWF       FARG_mysql_write_string_name+1, 1
0x532C	0x0E19      	MOVLW       _prepagoDate
0x532E	0x6F7A      	MOVWF       FARG_mysql_write_string_column, 1
0x5330	0x0E03      	MOVLW       hi_addr(_prepagoDate)
0x5332	0x6F7B      	MOVWF       FARG_mysql_write_string_column+1, 1
0x5334	0xF57CC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_string_fila
0x5338	0xF57DC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_string_fila+1
0x533C	0x0E12      	MOVLW       _msjConst
0x533E	0x6F7E      	MOVWF       FARG_mysql_write_string_texto, 1
0x5340	0x0E05      	MOVLW       hi_addr(_msjConst)
0x5342	0x6F7F      	MOVWF       FARG_mysql_write_string_texto+1, 1
0x5344	0x6B80      	CLRF        FARG_mysql_write_string_endWrite, 1
0x5346	0xF00CEC8B  	CALL        _mysql_write_string, 0
;Validadora.c,1663 :: 		}
L_can_user_read_message830:
;Validadora.c,1664 :: 		}
L_can_user_read_message829:
;Validadora.c,1665 :: 		}else if(string_cmpnc(CAN_SPECIAL_SALDO, &can.rxBuffer[sizeTotal], sizeKey)){
0x534A	0xD0AC      	BRA         L_can_user_read_message831
L_can_user_read_message828:
0x534C	0x0E5E      	MOVLW       _CAN_SPECIAL_SALDO
0x534E	0x0105      	MOVLB       5
0x5350	0x6F78      	MOVWF       FARG_string_cmpnc_text1, 1
0x5352	0x0E9F      	MOVLW       hi_addr(_CAN_SPECIAL_SALDO)
0x5354	0x6F79      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x5356	0x0E00      	MOVLW       higher_addr(_CAN_SPECIAL_SALDO)
0x5358	0x6F7A      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x535A	0x0E2A      	MOVLW       _can+107
0x535C	0x6F7B      	MOVWF       FARG_string_cmpnc_text2, 1
0x535E	0x0E04      	MOVLW       hi_addr(_can+107)
0x5360	0x6F7C      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x5362	0x5157      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x5364	0x277B      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x5366	0xB0D8      	BTFSC       STATUS, 0 
0x5368	0x2B7C      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x536A	0xF57DC556  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x536E	0xF016EC7C  	CALL        _string_cmpnc, 0
0x5372	0x5200      	MOVF        R0, 1 
0x5374	0xB4D8      	BTFSC       STATUS, 2 
0x5376	0xD089      	BRA         L_can_user_read_message832
;Validadora.c,1667 :: 		sizeTotal += sizeKey;
0x5378	0x5156      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x537A	0x2557      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x537C	0x6E00      	MOVWF       R0 
0x537E	0xF557C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Validadora.c,1668 :: 		sizeKey = 4;  //4 POR LA FILA
0x5382	0x0E04      	MOVLW       4
0x5384	0x6F56      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Validadora.c,1670 :: 		sizeTotal += sizeKey;
0x5386	0x0E04      	MOVLW       4
0x5388	0x2600      	ADDWF       R0, 1 
0x538A	0xF557C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Validadora.c,1671 :: 		sizeKey = 1;
0x538E	0x0E01      	MOVLW       1
0x5390	0x6F56      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Validadora.c,1672 :: 		estatus = can.rxBuffer[sizeTotal];
0x5392	0x0E2A      	MOVLW       _can+107
0x5394	0x6EE9      	MOVWF       FSR0L 
0x5396	0x0E04      	MOVLW       hi_addr(_can+107)
0x5398	0x6EEA      	MOVWF       FSR0H 
0x539A	0x5000      	MOVF        R0, 0 
0x539C	0x26E9      	ADDWF       FSR0L, 1 
0x539E	0xB0D8      	BTFSC       STATUS, 0 
0x53A0	0x2AEA      	INCF        FSR0H, 1 
0x53A2	0xF55BCFEE  	MOVFF       POSTINC0, can_user_read_message_estatus_L0
;Validadora.c,1674 :: 		sizeTotal += sizeKey;
0x53A6	0x2A00      	INCF        R0, 1 
0x53A8	0xF557C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Validadora.c,1675 :: 		sizeKey = 8;
0x53AC	0x0E08      	MOVLW       8
0x53AE	0x6F56      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Validadora.c,1676 :: 		string_cpyn(msjConst, &can.rxBuffer[sizeTotal], sizeKey);
0x53B0	0x0E12      	MOVLW       _msjConst
0x53B2	0x6F78      	MOVWF       FARG_string_cpyn_destino, 1
0x53B4	0x0E05      	MOVLW       hi_addr(_msjConst)
0x53B6	0x6F79      	MOVWF       FARG_string_cpyn_destino+1, 1
0x53B8	0x0E2A      	MOVLW       _can+107
0x53BA	0x6F7A      	MOVWF       FARG_string_cpyn_origen, 1
0x53BC	0x0E04      	MOVLW       hi_addr(_can+107)
0x53BE	0x6F7B      	MOVWF       FARG_string_cpyn_origen+1, 1
0x53C0	0x5000      	MOVF        R0, 0 
0x53C2	0x277A      	ADDWF       FARG_string_cpyn_origen, 1, 1
0x53C4	0xB0D8      	BTFSC       STATUS, 0 
0x53C6	0x2B7B      	INCF        FARG_string_cpyn_origen+1, 1, 1
0x53C8	0x0E08      	MOVLW       8
0x53CA	0x6F7C      	MOVWF       FARG_string_cpyn_size, 1
0x53CC	0xF00DEC35  	CALL        _string_cpyn, 0
;Validadora.c,1677 :: 		saldo = hexToNum(msjConst);
0x53D0	0x0E12      	MOVLW       _msjConst
0x53D2	0x6F78      	MOVWF       FARG_hexToNum_hex, 1
0x53D4	0x0E05      	MOVLW       hi_addr(_msjConst)
0x53D6	0x6F79      	MOVWF       FARG_hexToNum_hex+1, 1
0x53D8	0xF00EEC51  	CALL        _hexToNum, 0
0x53DC	0xF570C000  	MOVFF       R0, can_user_read_message_saldo_L0
0x53E0	0xF571C001  	MOVFF       R1, can_user_read_message_saldo_L0+1
0x53E4	0xF572C002  	MOVFF       R2, can_user_read_message_saldo_L0+2
0x53E8	0xF573C003  	MOVFF       R3, can_user_read_message_saldo_L0+3
;Validadora.c,1679 :: 		if(!mysql_read(tablePrepago, prepagoID, fila, &id)){
0x53EC	0x0E9A      	MOVLW       _tablePrepago
0x53EE	0x6F86      	MOVWF       FARG_mysql_read_name, 1
0x53F0	0x0E02      	MOVLW       hi_addr(_tablePrepago)
0x53F2	0x6F87      	MOVWF       FARG_mysql_read_name+1, 1
0x53F4	0x0E69      	MOVLW       _prepagoId
0x53F6	0x6F88      	MOVWF       FARG_mysql_read_column, 1
0x53F8	0x0E00      	MOVLW       hi_addr(_prepagoId)
0x53FA	0x6F89      	MOVWF       FARG_mysql_read_column+1, 1
0x53FC	0xF58AC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_read_fila
0x5400	0xF58BC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_read_fila+1
0x5404	0x0E64      	MOVLW       can_user_read_message_id_L0
0x5406	0x6F8C      	MOVWF       FARG_mysql_read_result, 1
0x5408	0x0E05      	MOVLW       hi_addr(can_user_read_message_id_L0)
0x540A	0x6F8D      	MOVWF       FARG_mysql_read_result+1, 1
0x540C	0xF009EC2C  	CALL        _mysql_read, 0
0x5410	0x5200      	MOVF        R0, 1 
0x5412	0xE13A      	BNZ         L_can_user_read_message833
;Validadora.c,1680 :: 		if(id == idConsulta){
0x5414	0x0105      	MOVLB       5
0x5416	0x5167      	MOVF        can_user_read_message_id_L0+3, 0, 1
0x5418	0x195F      	XORWF       can_user_read_message_idConsulta_L0+3, 0, 1
0x541A	0xE108      	BNZ         L__can_user_read_message1365
0x541C	0x5166      	MOVF        can_user_read_message_id_L0+2, 0, 1
0x541E	0x195E      	XORWF       can_user_read_message_idConsulta_L0+2, 0, 1
0x5420	0xE105      	BNZ         L__can_user_read_message1365
0x5422	0x5165      	MOVF        can_user_read_message_id_L0+1, 0, 1
0x5424	0x195D      	XORWF       can_user_read_message_idConsulta_L0+1, 0, 1
0x5426	0xE102      	BNZ         L__can_user_read_message1365
0x5428	0x5164      	MOVF        can_user_read_message_id_L0, 0, 1
0x542A	0x195C      	XORWF       can_user_read_message_idConsulta_L0, 0, 1
L__can_user_read_message1365:
0x542C	0xE12D      	BNZ         L_can_user_read_message834
;Validadora.c,1681 :: 		mysql_write(tablePrepago, prepagoEstatus, fila, estatus, false);
0x542E	0x0E9A      	MOVLW       _tablePrepago
0x5430	0x6F78      	MOVWF       FARG_mysql_write_name, 1
0x5432	0x0E02      	MOVLW       hi_addr(_tablePrepago)
0x5434	0x6F79      	MOVWF       FARG_mysql_write_name+1, 1
0x5436	0x0E92      	MOVLW       _prepagoEstatus
0x5438	0x6F7A      	MOVWF       FARG_mysql_write_column, 1
0x543A	0x0E02      	MOVLW       hi_addr(_prepagoEstatus)
0x543C	0x6F7B      	MOVWF       FARG_mysql_write_column+1, 1
0x543E	0xF57CC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_fila
0x5442	0xF57DC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_fila+1
0x5446	0xF57EC55B  	MOVFF       can_user_read_message_estatus_L0, FARG_mysql_write_value
0x544A	0x0E00      	MOVLW       0
0x544C	0x6F7F      	MOVWF       FARG_mysql_write_value+1, 1
0x544E	0x6F80      	MOVWF       FARG_mysql_write_value+2, 1
0x5450	0x6F81      	MOVWF       FARG_mysql_write_value+3, 1
0x5452	0x6B82      	CLRF        FARG_mysql_write_endWrite, 1
0x5454	0xF014EC20  	CALL        _mysql_write, 0
;Validadora.c,1682 :: 		mysql_write(tablePrepago, prepagoSaldo, fila, saldo, false);
0x5458	0x0E9A      	MOVLW       _tablePrepago
0x545A	0x0105      	MOVLB       5
0x545C	0x6F78      	MOVWF       FARG_mysql_write_name, 1
0x545E	0x0E02      	MOVLW       hi_addr(_tablePrepago)
0x5460	0x6F79      	MOVWF       FARG_mysql_write_name+1, 1
0x5462	0x0EA2      	MOVLW       _prepagoSaldo
0x5464	0x6F7A      	MOVWF       FARG_mysql_write_column, 1
0x5466	0x0E02      	MOVLW       hi_addr(_prepagoSaldo)
0x5468	0x6F7B      	MOVWF       FARG_mysql_write_column+1, 1
0x546A	0xF57CC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_fila
0x546E	0xF57DC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_fila+1
0x5472	0xF57EC570  	MOVFF       can_user_read_message_saldo_L0, FARG_mysql_write_value
0x5476	0xF57FC571  	MOVFF       can_user_read_message_saldo_L0+1, FARG_mysql_write_value+1
0x547A	0xF580C572  	MOVFF       can_user_read_message_saldo_L0+2, FARG_mysql_write_value+2
0x547E	0xF581C573  	MOVFF       can_user_read_message_saldo_L0+3, FARG_mysql_write_value+3
0x5482	0x6B82      	CLRF        FARG_mysql_write_endWrite, 1
0x5484	0xF014EC20  	CALL        _mysql_write, 0
;Validadora.c,1686 :: 		}
L_can_user_read_message834:
;Validadora.c,1687 :: 		}
L_can_user_read_message833:
;Validadora.c,1688 :: 		}else{
0x5488	0xD00D      	BRA         L_can_user_read_message835
L_can_user_read_message832:
;Validadora.c,1689 :: 		string_addc(bufferEeprom, CAN_TABLE_ERROR);
0x548A	0x0ED2      	MOVLW       _bufferEeprom
0x548C	0x0105      	MOVLB       5
0x548E	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x5490	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5492	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x5494	0x0EF6      	MOVLW       _CAN_TABLE_ERROR
0x5496	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x5498	0x0E9E      	MOVLW       hi_addr(_CAN_TABLE_ERROR)
0x549A	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x549C	0x0E00      	MOVLW       higher_addr(_CAN_TABLE_ERROR)
0x549E	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x54A0	0xF00FEC40  	CALL        _string_addc, 0
;Validadora.c,1690 :: 		}
L_can_user_read_message835:
L_can_user_read_message831:
L_can_user_read_message827:
L_can_user_read_message823:
L_can_user_read_message819:
L_can_user_read_message815:
L_can_user_read_message810:
L_can_user_read_message806:
;Validadora.c,1691 :: 		}else if(string_cmpnc(CAN_SOPORTE, &can.rxBuffer[sizeTotal], sizeKey)){
0x54A4	0xF033EFF6  	GOTO        L_can_user_read_message836
L_can_user_read_message801:
0x54A8	0x0105      	MOVLB       5
0x54AA	0x0E6A      	MOVLW       _CAN_SOPORTE
0x54AC	0x6F78      	MOVWF       FARG_string_cmpnc_text1, 1
0x54AE	0x0E9F      	MOVLW       hi_addr(_CAN_SOPORTE)
0x54B0	0x6F79      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x54B2	0x0E00      	MOVLW       higher_addr(_CAN_SOPORTE)
0x54B4	0x6F7A      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x54B6	0x0E2A      	MOVLW       _can+107
0x54B8	0x6F7B      	MOVWF       FARG_string_cmpnc_text2, 1
0x54BA	0x0E04      	MOVLW       hi_addr(_can+107)
0x54BC	0x6F7C      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x54BE	0x5157      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x54C0	0x277B      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x54C2	0xB0D8      	BTFSC       STATUS, 0 
0x54C4	0x2B7C      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x54C6	0xF57DC556  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x54CA	0xF016EC7C  	CALL        _string_cmpnc, 0
0x54CE	0x5200      	MOVF        R0, 1 
0x54D0	0xB4D8      	BTFSC       STATUS, 2 
0x54D2	0xD15B      	BRA         L_can_user_read_message837
;Validadora.c,1693 :: 		sizeTotal += sizeKey;
0x54D4	0x5156      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x54D6	0x2557      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x54D8	0x6E00      	MOVWF       R0 
0x54DA	0xF557C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Validadora.c,1694 :: 		sizeKey = 6;  //3 Bytes en hexadecimal
0x54DE	0x0E06      	MOVLW       6
0x54E0	0x6F56      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Validadora.c,1695 :: 		string_cpyn(msjConst, &can.rxBuffer[sizeTotal], sizeKey);
0x54E2	0x0E12      	MOVLW       _msjConst
0x54E4	0x6F78      	MOVWF       FARG_string_cpyn_destino, 1
0x54E6	0x0E05      	MOVLW       hi_addr(_msjConst)
0x54E8	0x6F79      	MOVWF       FARG_string_cpyn_destino+1, 1
0x54EA	0x0E2A      	MOVLW       _can+107
0x54EC	0x6F7A      	MOVWF       FARG_string_cpyn_origen, 1
0x54EE	0x0E04      	MOVLW       hi_addr(_can+107)
0x54F0	0x6F7B      	MOVWF       FARG_string_cpyn_origen+1, 1
0x54F2	0x5000      	MOVF        R0, 0 
0x54F4	0x277A      	ADDWF       FARG_string_cpyn_origen, 1, 1
0x54F6	0xB0D8      	BTFSC       STATUS, 0 
0x54F8	0x2B7B      	INCF        FARG_string_cpyn_origen+1, 1, 1
0x54FA	0x0E06      	MOVLW       6
0x54FC	0x6F7C      	MOVWF       FARG_string_cpyn_size, 1
0x54FE	0xF00DEC35  	CALL        _string_cpyn, 0
;Validadora.c,1696 :: 		idConsulta = hexToNum(msjConst);
0x5502	0x0E12      	MOVLW       _msjConst
0x5504	0x6F78      	MOVWF       FARG_hexToNum_hex, 1
0x5506	0x0E05      	MOVLW       hi_addr(_msjConst)
0x5508	0x6F79      	MOVWF       FARG_hexToNum_hex+1, 1
0x550A	0xF00EEC51  	CALL        _hexToNum, 0
0x550E	0xF55CC000  	MOVFF       R0, can_user_read_message_idConsulta_L0
0x5512	0xF55DC001  	MOVFF       R1, can_user_read_message_idConsulta_L0+1
0x5516	0xF55EC002  	MOVFF       R2, can_user_read_message_idConsulta_L0+2
0x551A	0xF55FC003  	MOVFF       R3, can_user_read_message_idConsulta_L0+3
;Validadora.c,1698 :: 		sizeTotal += sizeKey;
0x551E	0x5156      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x5520	0x2557      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x5522	0x6E00      	MOVWF       R0 
0x5524	0xF557C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Validadora.c,1699 :: 		sizeKey = sizeof(CAN_REGISTRAR)-1;  //COMANDO 3BYTES
0x5528	0x0E03      	MOVLW       3
0x552A	0x6F56      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Validadora.c,1701 :: 		string_cpyn(msjConst, &can.rxBuffer[sizeTotal+sizeKey], 4); //4 numeros fila
0x552C	0x0E12      	MOVLW       _msjConst
0x552E	0x6F78      	MOVWF       FARG_string_cpyn_destino, 1
0x5530	0x0E05      	MOVLW       hi_addr(_msjConst)
0x5532	0x6F79      	MOVWF       FARG_string_cpyn_destino+1, 1
0x5534	0x0E03      	MOVLW       3
0x5536	0x2600      	ADDWF       R0, 1 
0x5538	0x6A01      	CLRF        R1 
0x553A	0x0E00      	MOVLW       0
0x553C	0x2201      	ADDWFC      R1, 1 
0x553E	0x0E2A      	MOVLW       _can+107
0x5540	0x2400      	ADDWF       R0, 0 
0x5542	0x6F7A      	MOVWF       FARG_string_cpyn_origen, 1
0x5544	0x0E04      	MOVLW       hi_addr(_can+107)
0x5546	0x2001      	ADDWFC      R1, 0 
0x5548	0x6F7B      	MOVWF       FARG_string_cpyn_origen+1, 1
0x554A	0x0E04      	MOVLW       4
0x554C	0x6F7C      	MOVWF       FARG_string_cpyn_size, 1
0x554E	0xF00DEC35  	CALL        _string_cpyn, 0
;Validadora.c,1702 :: 		fila = stringToNum(msjConst);
0x5552	0x0E12      	MOVLW       _msjConst
0x5554	0x6F78      	MOVWF       FARG_stringToNum_cadena, 1
0x5556	0x0E05      	MOVLW       hi_addr(_msjConst)
0x5558	0x6F79      	MOVWF       FARG_stringToNum_cadena+1, 1
0x555A	0xF00DEC5C  	CALL        _stringToNum, 0
0x555E	0xF558C000  	MOVFF       R0, can_user_read_message_fila_L0
0x5562	0xF559C001  	MOVFF       R1, can_user_read_message_fila_L0+1
;Validadora.c,1704 :: 		if(string_cmpnc(CAN_REGISTRAR, &can.rxBuffer[sizeTotal], sizeKey)){
0x5566	0x0E4E      	MOVLW       _CAN_REGISTRAR
0x5568	0x6F78      	MOVWF       FARG_string_cmpnc_text1, 1
0x556A	0x0E9F      	MOVLW       hi_addr(_CAN_REGISTRAR)
0x556C	0x6F79      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x556E	0x0E00      	MOVLW       higher_addr(_CAN_REGISTRAR)
0x5570	0x6F7A      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x5572	0x0E2A      	MOVLW       _can+107
0x5574	0x6F7B      	MOVWF       FARG_string_cmpnc_text2, 1
0x5576	0x0E04      	MOVLW       hi_addr(_can+107)
0x5578	0x6F7C      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x557A	0x5157      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x557C	0x277B      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x557E	0xB0D8      	BTFSC       STATUS, 0 
0x5580	0x2B7C      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x5582	0xF57DC556  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x5586	0xF016EC7C  	CALL        _string_cmpnc, 0
0x558A	0x5200      	MOVF        R0, 1 
0x558C	0xE062      	BZ          L_can_user_read_message838
;Validadora.c,1706 :: 		sizeTotal += sizeKey;
0x558E	0x5156      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x5590	0x2757      	ADDWF       can_user_read_message_sizeTotal_L0, 1, 1
;Validadora.c,1707 :: 		sizeKey = 4;  //4 POR LA FILA
0x5592	0x0E04      	MOVLW       4
0x5594	0x6F56      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Validadora.c,1709 :: 		idNew = idConsulta;
0x5596	0xF560C55C  	MOVFF       can_user_read_message_idConsulta_L0, can_user_read_message_idNew_L0
0x559A	0xF561C55D  	MOVFF       can_user_read_message_idConsulta_L0+1, can_user_read_message_idNew_L0+1
0x559E	0xF562C55E  	MOVFF       can_user_read_message_idConsulta_L0+2, can_user_read_message_idNew_L0+2
0x55A2	0xF563C55F  	MOVFF       can_user_read_message_idConsulta_L0+3, can_user_read_message_idNew_L0+3
;Validadora.c,1711 :: 		if(mysql_read(tableSoporte, soporteID, fila, &id) == TABLE_RW_NO_EXIST_ROW){
0x55A6	0x0EFD      	MOVLW       _tableSoporte
0x55A8	0x6F86      	MOVWF       FARG_mysql_read_name, 1
0x55AA	0x0E02      	MOVLW       hi_addr(_tableSoporte)
0x55AC	0x6F87      	MOVWF       FARG_mysql_read_name+1, 1
0x55AE	0x0E0C      	MOVLW       _soporteID
0x55B0	0x6F88      	MOVWF       FARG_mysql_read_column, 1
0x55B2	0x0E03      	MOVLW       hi_addr(_soporteID)
0x55B4	0x6F89      	MOVWF       FARG_mysql_read_column+1, 1
0x55B6	0xF58AC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_read_fila
0x55BA	0xF58BC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_read_fila+1
0x55BE	0x0E64      	MOVLW       can_user_read_message_id_L0
0x55C0	0x6F8C      	MOVWF       FARG_mysql_read_result, 1
0x55C2	0x0E05      	MOVLW       hi_addr(can_user_read_message_id_L0)
0x55C4	0x6F8D      	MOVWF       FARG_mysql_read_result+1, 1
0x55C6	0xF009EC2C  	CALL        _mysql_read, 0
0x55CA	0x5000      	MOVF        R0, 0 
0x55CC	0x0A03      	XORLW       3
0x55CE	0xE140      	BNZ         L_can_user_read_message839
;Validadora.c,1712 :: 		if(fila == myTable.rowAct+1){
0x55D0	0x0E01      	MOVLW       1
0x55D2	0x0103      	MOVLB       3
0x55D4	0x258F      	ADDWF       Validadora_myTable+4, 0, 1
0x55D6	0x6E01      	MOVWF       R1 
0x55D8	0x0E00      	MOVLW       0
0x55DA	0x2190      	ADDWFC      Validadora_myTable+5, 0, 1
0x55DC	0x6E02      	MOVWF       R2 
0x55DE	0x0105      	MOVLB       5
0x55E0	0x5159      	MOVF        can_user_read_message_fila_L0+1, 0, 1
0x55E2	0x1802      	XORWF       R2, 0 
0x55E4	0xE102      	BNZ         L__can_user_read_message1366
0x55E6	0x5001      	MOVF        R1, 0 
0x55E8	0x1958      	XORWF       can_user_read_message_fila_L0, 0, 1
L__can_user_read_message1366:
0x55EA	0xE132      	BNZ         L_can_user_read_message840
;Validadora.c,1713 :: 		if(!mysql_write(tableSoporte, soporteID, -1, idNew, true)){
0x55EC	0x0EFD      	MOVLW       _tableSoporte
0x55EE	0x6F78      	MOVWF       FARG_mysql_write_name, 1
0x55F0	0x0E02      	MOVLW       hi_addr(_tableSoporte)
0x55F2	0x6F79      	MOVWF       FARG_mysql_write_name+1, 1
0x55F4	0x0E0C      	MOVLW       _soporteID
0x55F6	0x6F7A      	MOVWF       FARG_mysql_write_column, 1
0x55F8	0x0E03      	MOVLW       hi_addr(_soporteID)
0x55FA	0x6F7B      	MOVWF       FARG_mysql_write_column+1, 1
0x55FC	0x0EFF      	MOVLW       255
0x55FE	0x6F7C      	MOVWF       FARG_mysql_write_fila, 1
0x5600	0x0EFF      	MOVLW       255
0x5602	0x6F7D      	MOVWF       FARG_mysql_write_fila+1, 1
0x5604	0xF57EC560  	MOVFF       can_user_read_message_idNew_L0, FARG_mysql_write_value
0x5608	0xF57FC561  	MOVFF       can_user_read_message_idNew_L0+1, FARG_mysql_write_value+1
0x560C	0xF580C562  	MOVFF       can_user_read_message_idNew_L0+2, FARG_mysql_write_value+2
0x5610	0xF581C563  	MOVFF       can_user_read_message_idNew_L0+3, FARG_mysql_write_value+3
0x5614	0x0E01      	MOVLW       1
0x5616	0x6F82      	MOVWF       FARG_mysql_write_endWrite, 1
0x5618	0xF014EC20  	CALL        _mysql_write, 0
0x561C	0x5200      	MOVF        R0, 1 
0x561E	0xE118      	BNZ         L_can_user_read_message841
;Validadora.c,1717 :: 		mysql_write(tableSoporte, soporteID, fila, idNew, false);
0x5620	0x0EFD      	MOVLW       _tableSoporte
0x5622	0x0105      	MOVLB       5
0x5624	0x6F78      	MOVWF       FARG_mysql_write_name, 1
0x5626	0x0E02      	MOVLW       hi_addr(_tableSoporte)
0x5628	0x6F79      	MOVWF       FARG_mysql_write_name+1, 1
0x562A	0x0E0C      	MOVLW       _soporteID
0x562C	0x6F7A      	MOVWF       FARG_mysql_write_column, 1
0x562E	0x0E03      	MOVLW       hi_addr(_soporteID)
0x5630	0x6F7B      	MOVWF       FARG_mysql_write_column+1, 1
0x5632	0xF57CC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_fila
0x5636	0xF57DC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_fila+1
0x563A	0xF57EC560  	MOVFF       can_user_read_message_idNew_L0, FARG_mysql_write_value
0x563E	0xF57FC561  	MOVFF       can_user_read_message_idNew_L0+1, FARG_mysql_write_value+1
0x5642	0xF580C562  	MOVFF       can_user_read_message_idNew_L0+2, FARG_mysql_write_value+2
0x5646	0xF581C563  	MOVFF       can_user_read_message_idNew_L0+3, FARG_mysql_write_value+3
0x564A	0x6B82      	CLRF        FARG_mysql_write_endWrite, 1
0x564C	0xF014EC20  	CALL        _mysql_write, 0
;Validadora.c,1718 :: 		}
L_can_user_read_message841:
;Validadora.c,1719 :: 		}
L_can_user_read_message840:
;Validadora.c,1720 :: 		}
L_can_user_read_message839:
;Validadora.c,1721 :: 		}else if(string_cmpnc(CAN_CONSULTAR, &can.rxBuffer[sizeTotal], sizeKey)){
0x5650	0xD09A      	BRA         L_can_user_read_message842
L_can_user_read_message838:
0x5652	0x0E82      	MOVLW       _CAN_CONSULTAR
0x5654	0x0105      	MOVLB       5
0x5656	0x6F78      	MOVWF       FARG_string_cmpnc_text1, 1
0x5658	0x0E9F      	MOVLW       hi_addr(_CAN_CONSULTAR)
0x565A	0x6F79      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x565C	0x0E00      	MOVLW       higher_addr(_CAN_CONSULTAR)
0x565E	0x6F7A      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x5660	0x0E2A      	MOVLW       _can+107
0x5662	0x6F7B      	MOVWF       FARG_string_cmpnc_text2, 1
0x5664	0x0E04      	MOVLW       hi_addr(_can+107)
0x5666	0x6F7C      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x5668	0x5157      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x566A	0x277B      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x566C	0xB0D8      	BTFSC       STATUS, 0 
0x566E	0x2B7C      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x5670	0xF57DC556  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x5674	0xF016EC7C  	CALL        _string_cmpnc, 0
0x5678	0x5200      	MOVF        R0, 1 
0x567A	0xB4D8      	BTFSC       STATUS, 2 
0x567C	0xD084      	BRA         L_can_user_read_message843
;Validadora.c,1723 :: 		sizeTotal += sizeKey;
0x567E	0x5156      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x5680	0x2757      	ADDWF       can_user_read_message_sizeTotal_L0, 1, 1
;Validadora.c,1724 :: 		sizeKey = 4;  //4 POR LA FILA
0x5682	0x0E04      	MOVLW       4
0x5684	0x6F56      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Validadora.c,1726 :: 		string_cpyc(bufferEeprom, CAN_TPV);
0x5686	0x0ED2      	MOVLW       _bufferEeprom
0x5688	0x6F78      	MOVWF       FARG_string_cpyc_destino, 1
0x568A	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x568C	0x6F79      	MOVWF       FARG_string_cpyc_destino+1, 1
0x568E	0x0E0E      	MOVLW       _CAN_TPV
0x5690	0x6F7A      	MOVWF       FARG_string_cpyc_origen, 1
0x5692	0x0E9F      	MOVLW       hi_addr(_CAN_TPV)
0x5694	0x6F7B      	MOVWF       FARG_string_cpyc_origen+1, 1
0x5696	0x0E00      	MOVLW       higher_addr(_CAN_TPV)
0x5698	0x6F7C      	MOVWF       FARG_string_cpyc_origen+2, 1
0x569A	0xF014ECBC  	CALL        _string_cpyc, 0
;Validadora.c,1727 :: 		string_cpyn(&bufferEeprom[sizeof(CAN_TPV)-1], can.rxBuffer, sizeTotal);
0x569E	0x0ED5      	MOVLW       _bufferEeprom+3
0x56A0	0x6F78      	MOVWF       FARG_string_cpyn_destino, 1
0x56A2	0x0E04      	MOVLW       hi_addr(_bufferEeprom+3)
0x56A4	0x6F79      	MOVWF       FARG_string_cpyn_destino+1, 1
0x56A6	0x0E2A      	MOVLW       _can+107
0x56A8	0x6F7A      	MOVWF       FARG_string_cpyn_origen, 1
0x56AA	0x0E04      	MOVLW       hi_addr(_can+107)
0x56AC	0x6F7B      	MOVWF       FARG_string_cpyn_origen+1, 1
0x56AE	0xF57CC557  	MOVFF       can_user_read_message_sizeTotal_L0, FARG_string_cpyn_size
0x56B2	0xF00DEC35  	CALL        _string_cpyn, 0
;Validadora.c,1728 :: 		if(!mysql_read(tableSoporte, soporteID, fila, &id)){
0x56B6	0x0EFD      	MOVLW       _tableSoporte
0x56B8	0x6F86      	MOVWF       FARG_mysql_read_name, 1
0x56BA	0x0E02      	MOVLW       hi_addr(_tableSoporte)
0x56BC	0x6F87      	MOVWF       FARG_mysql_read_name+1, 1
0x56BE	0x0E0C      	MOVLW       _soporteID
0x56C0	0x6F88      	MOVWF       FARG_mysql_read_column, 1
0x56C2	0x0E03      	MOVLW       hi_addr(_soporteID)
0x56C4	0x6F89      	MOVWF       FARG_mysql_read_column+1, 1
0x56C6	0xF58AC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_read_fila
0x56CA	0xF58BC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_read_fila+1
0x56CE	0x0E64      	MOVLW       can_user_read_message_id_L0
0x56D0	0x6F8C      	MOVWF       FARG_mysql_read_result, 1
0x56D2	0x0E05      	MOVLW       hi_addr(can_user_read_message_id_L0)
0x56D4	0x6F8D      	MOVWF       FARG_mysql_read_result+1, 1
0x56D6	0xF009EC2C  	CALL        _mysql_read, 0
0x56DA	0x5200      	MOVF        R0, 1 
0x56DC	0xE13F      	BNZ         L_can_user_read_message844
;Validadora.c,1729 :: 		if(idConsulta == id){
0x56DE	0x0105      	MOVLB       5
0x56E0	0x515F      	MOVF        can_user_read_message_idConsulta_L0+3, 0, 1
0x56E2	0x1967      	XORWF       can_user_read_message_id_L0+3, 0, 1
0x56E4	0xE108      	BNZ         L__can_user_read_message1367
0x56E6	0x515E      	MOVF        can_user_read_message_idConsulta_L0+2, 0, 1
0x56E8	0x1966      	XORWF       can_user_read_message_id_L0+2, 0, 1
0x56EA	0xE105      	BNZ         L__can_user_read_message1367
0x56EC	0x515D      	MOVF        can_user_read_message_idConsulta_L0+1, 0, 1
0x56EE	0x1965      	XORWF       can_user_read_message_id_L0+1, 0, 1
0x56F0	0xE102      	BNZ         L__can_user_read_message1367
0x56F2	0x515C      	MOVF        can_user_read_message_idConsulta_L0, 0, 1
0x56F4	0x1964      	XORWF       can_user_read_message_id_L0, 0, 1
L__can_user_read_message1367:
0x56F6	0xE125      	BNZ         L_can_user_read_message845
;Validadora.c,1734 :: 		string_addc(bufferEeprom, CAN_MODULE);
0x56F8	0x0ED2      	MOVLW       _bufferEeprom
0x56FA	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x56FC	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x56FE	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x5700	0x0E86      	MOVLW       _CAN_MODULE
0x5702	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x5704	0x0E9F      	MOVLW       hi_addr(_CAN_MODULE)
0x5706	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x5708	0x0E00      	MOVLW       higher_addr(_CAN_MODULE)
0x570A	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x570C	0xF00FEC40  	CALL        _string_addc, 0
;Validadora.c,1735 :: 		numToHex(can.id, msjConst, 1);
0x5710	0xF578C3CB  	MOVFF       _can+12, FARG_numToHex_valor
0x5714	0x0E00      	MOVLW       0
0x5716	0x6F79      	MOVWF       FARG_numToHex_valor+1, 1
0x5718	0x6F7A      	MOVWF       FARG_numToHex_valor+2, 1
0x571A	0x6F7B      	MOVWF       FARG_numToHex_valor+3, 1
0x571C	0x0E12      	MOVLW       _msjConst
0x571E	0x6F7C      	MOVWF       FARG_numToHex_cadena, 1
0x5720	0x0E05      	MOVLW       hi_addr(_msjConst)
0x5722	0x6F7D      	MOVWF       FARG_numToHex_cadena+1, 1
0x5724	0x0E01      	MOVLW       1
0x5726	0x6F7E      	MOVWF       FARG_numToHex_bytes, 1
0x5728	0xF00DECAD  	CALL        _numToHex, 0
;Validadora.c,1736 :: 		string_add(bufferEeprom, msjConst);
0x572C	0x0ED2      	MOVLW       _bufferEeprom
0x572E	0x6F78      	MOVWF       FARG_string_add_destino, 1
0x5730	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5732	0x6F79      	MOVWF       FARG_string_add_destino+1, 1
0x5734	0x0E12      	MOVLW       _msjConst
0x5736	0x6F7A      	MOVWF       FARG_string_add_addEnd, 1
0x5738	0x0E05      	MOVLW       hi_addr(_msjConst)
0x573A	0x6F7B      	MOVWF       FARG_string_add_addEnd+1, 1
0x573C	0xF016EC4C  	CALL        _string_add, 0
;Validadora.c,1737 :: 		}else{
0x5740	0xD00C      	BRA         L_can_user_read_message846
L_can_user_read_message845:
;Validadora.c,1738 :: 		string_addc(bufferEeprom, CAN_TABLE_NO_FOUND);
0x5742	0x0ED2      	MOVLW       _bufferEeprom
0x5744	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x5746	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5748	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x574A	0x0EE5      	MOVLW       _CAN_TABLE_NO_FOUND
0x574C	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x574E	0x0E9E      	MOVLW       hi_addr(_CAN_TABLE_NO_FOUND)
0x5750	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x5752	0x0E00      	MOVLW       higher_addr(_CAN_TABLE_NO_FOUND)
0x5754	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x5756	0xF00FEC40  	CALL        _string_addc, 0
;Validadora.c,1739 :: 		}
L_can_user_read_message846:
;Validadora.c,1740 :: 		}else{
0x575A	0xD00D      	BRA         L_can_user_read_message847
L_can_user_read_message844:
0x575C	0x0105      	MOVLB       5
;Validadora.c,1741 :: 		string_addc(bufferEeprom, CAN_TABLE_ERROR);
0x575E	0x0ED2      	MOVLW       _bufferEeprom
0x5760	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x5762	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5764	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x5766	0x0EF6      	MOVLW       _CAN_TABLE_ERROR
0x5768	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x576A	0x0E9E      	MOVLW       hi_addr(_CAN_TABLE_ERROR)
0x576C	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x576E	0x0E00      	MOVLW       higher_addr(_CAN_TABLE_ERROR)
0x5770	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x5772	0xF00FEC40  	CALL        _string_addc, 0
;Validadora.c,1742 :: 		}
L_can_user_read_message847:
;Validadora.c,1744 :: 		buffer_save_send(true, bufferEeprom);
0x5776	0x0E01      	MOVLW       1
0x5778	0x6F78      	MOVWF       FARG_buffer_save_send_guardar, 1
0x577A	0x0ED2      	MOVLW       _bufferEeprom
0x577C	0x6F79      	MOVWF       FARG_buffer_save_send_buffer, 1
0x577E	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5780	0x6F7A      	MOVWF       FARG_buffer_save_send_buffer+1, 1
0x5782	0xF00FECCD  	CALL        _buffer_save_send, 0
;Validadora.c,1745 :: 		}
L_can_user_read_message843:
L_can_user_read_message842:
;Validadora.c,1746 :: 		}else if(string_cmpnc(CAN_TABLE, &can.rxBuffer[sizeTotal], sizeKey)){
0x5786	0xF033EFF6  	GOTO        L_can_user_read_message848
L_can_user_read_message837:
0x578A	0x0E22      	MOVLW       _CAN_TABLE
0x578C	0x0105      	MOVLB       5
0x578E	0x6F78      	MOVWF       FARG_string_cmpnc_text1, 1
0x5790	0x0E9F      	MOVLW       hi_addr(_CAN_TABLE)
0x5792	0x6F79      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x5794	0x0E00      	MOVLW       higher_addr(_CAN_TABLE)
0x5796	0x6F7A      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x5798	0x0E2A      	MOVLW       _can+107
0x579A	0x6F7B      	MOVWF       FARG_string_cmpnc_text2, 1
0x579C	0x0E04      	MOVLW       hi_addr(_can+107)
0x579E	0x6F7C      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x57A0	0x5157      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x57A2	0x277B      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x57A4	0xB0D8      	BTFSC       STATUS, 0 
0x57A6	0x2B7C      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x57A8	0xF57DC556  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x57AC	0xF016EC7C  	CALL        _string_cmpnc, 0
0x57B0	0x5200      	MOVF        R0, 1 
0x57B2	0xB4D8      	BTFSC       STATUS, 2 
0x57B4	0xD21D      	BRA         L_can_user_read_message849
;Validadora.c,1747 :: 		sizeTotal += sizeKey;
0x57B6	0x5156      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x57B8	0x2757      	ADDWF       can_user_read_message_sizeTotal_L0, 1, 1
;Validadora.c,1748 :: 		sizeKey = sizeof(CAN_TABLE_ERASE)-1;  //FORMATO ALL/T00/EXX
0x57BA	0x0E03      	MOVLW       3
0x57BC	0x6F56      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Validadora.c,1751 :: 		string_cpyc(bufferEeprom, CAN_TPV);
0x57BE	0x0ED2      	MOVLW       _bufferEeprom
0x57C0	0x6F78      	MOVWF       FARG_string_cpyc_destino, 1
0x57C2	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x57C4	0x6F79      	MOVWF       FARG_string_cpyc_destino+1, 1
0x57C6	0x0E0E      	MOVLW       _CAN_TPV
0x57C8	0x6F7A      	MOVWF       FARG_string_cpyc_origen, 1
0x57CA	0x0E9F      	MOVLW       hi_addr(_CAN_TPV)
0x57CC	0x6F7B      	MOVWF       FARG_string_cpyc_origen+1, 1
0x57CE	0x0E00      	MOVLW       higher_addr(_CAN_TPV)
0x57D0	0x6F7C      	MOVWF       FARG_string_cpyc_origen+2, 1
0x57D2	0xF014ECBC  	CALL        _string_cpyc, 0
;Validadora.c,1752 :: 		string_addc(bufferEeprom, CAN_TABLE);
0x57D6	0x0ED2      	MOVLW       _bufferEeprom
0x57D8	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x57DA	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x57DC	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x57DE	0x0E22      	MOVLW       _CAN_TABLE
0x57E0	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x57E2	0x0E9F      	MOVLW       hi_addr(_CAN_TABLE)
0x57E4	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x57E6	0x0E00      	MOVLW       higher_addr(_CAN_TABLE)
0x57E8	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x57EA	0xF00FEC40  	CALL        _string_addc, 0
;Validadora.c,1755 :: 		if(string_cmpnc(CAN_TABLE_ERASE, &can.rxBuffer[sizeTotal], sizeKey)){
0x57EE	0x0E1E      	MOVLW       _CAN_TABLE_ERASE
0x57F0	0x6F78      	MOVWF       FARG_string_cmpnc_text1, 1
0x57F2	0x0E9F      	MOVLW       hi_addr(_CAN_TABLE_ERASE)
0x57F4	0x6F79      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x57F6	0x0E00      	MOVLW       higher_addr(_CAN_TABLE_ERASE)
0x57F8	0x6F7A      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x57FA	0x0E2A      	MOVLW       _can+107
0x57FC	0x6F7B      	MOVWF       FARG_string_cmpnc_text2, 1
0x57FE	0x0E04      	MOVLW       hi_addr(_can+107)
0x5800	0x6F7C      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x5802	0x5157      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x5804	0x277B      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x5806	0xB0D8      	BTFSC       STATUS, 0 
0x5808	0x2B7C      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x580A	0xF57DC556  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x580E	0xF016EC7C  	CALL        _string_cmpnc, 0
0x5812	0x5200      	MOVF        R0, 1 
0x5814	0xE04D      	BZ          L_can_user_read_message850
;Validadora.c,1756 :: 		sizeTotal += sizeKey;
0x5816	0x5156      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x5818	0x2557      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x581A	0x6E00      	MOVWF       R0 
0x581C	0xF557C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Validadora.c,1757 :: 		if(mysql_erase(&can.rxBuffer[sizeTotal])){
0x5820	0x0E2A      	MOVLW       _can+107
0x5822	0x6F78      	MOVWF       FARG_mysql_erase_name, 1
0x5824	0x0E04      	MOVLW       hi_addr(_can+107)
0x5826	0x6F79      	MOVWF       FARG_mysql_erase_name+1, 1
0x5828	0x5000      	MOVF        R0, 0 
0x582A	0x2778      	ADDWF       FARG_mysql_erase_name, 1, 1
0x582C	0xB0D8      	BTFSC       STATUS, 0 
0x582E	0x2B79      	INCF        FARG_mysql_erase_name+1, 1, 1
0x5830	0xF00FEC7C  	CALL        _mysql_erase, 0
0x5834	0x5200      	MOVF        R0, 1 
0x5836	0xE02E      	BZ          L_can_user_read_message851
;Validadora.c,1758 :: 		string_addc(bufferEeprom, CAN_TABLE_ERASE);
0x5838	0x0ED2      	MOVLW       _bufferEeprom
0x583A	0x0105      	MOVLB       5
0x583C	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x583E	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5840	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x5842	0x0E1E      	MOVLW       _CAN_TABLE_ERASE
0x5844	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x5846	0x0E9F      	MOVLW       hi_addr(_CAN_TABLE_ERASE)
0x5848	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x584A	0x0E00      	MOVLW       higher_addr(_CAN_TABLE_ERASE)
0x584C	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x584E	0xF00FEC40  	CALL        _string_addc, 0
;Validadora.c,1760 :: 		string_cpyn(msjConst, &can.rxBuffer[sizeTotal], 3);
0x5852	0x0E12      	MOVLW       _msjConst
0x5854	0x6F78      	MOVWF       FARG_string_cpyn_destino, 1
0x5856	0x0E05      	MOVLW       hi_addr(_msjConst)
0x5858	0x6F79      	MOVWF       FARG_string_cpyn_destino+1, 1
0x585A	0x0E2A      	MOVLW       _can+107
0x585C	0x6F7A      	MOVWF       FARG_string_cpyn_origen, 1
0x585E	0x0E04      	MOVLW       hi_addr(_can+107)
0x5860	0x6F7B      	MOVWF       FARG_string_cpyn_origen+1, 1
0x5862	0x5157      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x5864	0x277A      	ADDWF       FARG_string_cpyn_origen, 1, 1
0x5866	0xB0D8      	BTFSC       STATUS, 0 
0x5868	0x2B7B      	INCF        FARG_string_cpyn_origen+1, 1, 1
0x586A	0x0E03      	MOVLW       3
0x586C	0x6F7C      	MOVWF       FARG_string_cpyn_size, 1
0x586E	0xF00DEC35  	CALL        _string_cpyn, 0
;Validadora.c,1761 :: 		string_toUpper(msjConst);
0x5872	0x0E12      	MOVLW       _msjConst
0x5874	0x6F78      	MOVWF       FARG_string_toUpper_cadena, 1
0x5876	0x0E05      	MOVLW       hi_addr(_msjConst)
0x5878	0x6F79      	MOVWF       FARG_string_toUpper_cadena+1, 1
0x587A	0xF012EC28  	CALL        _string_toUpper, 0
;Validadora.c,1762 :: 		string_add(bufferEeprom, msjConst);
0x587E	0x0ED2      	MOVLW       _bufferEeprom
0x5880	0x6F78      	MOVWF       FARG_string_add_destino, 1
0x5882	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5884	0x6F79      	MOVWF       FARG_string_add_destino+1, 1
0x5886	0x0E12      	MOVLW       _msjConst
0x5888	0x6F7A      	MOVWF       FARG_string_add_addEnd, 1
0x588A	0x0E05      	MOVLW       hi_addr(_msjConst)
0x588C	0x6F7B      	MOVWF       FARG_string_add_addEnd+1, 1
0x588E	0xF016EC4C  	CALL        _string_add, 0
;Validadora.c,1763 :: 		}else{
0x5892	0xD00D      	BRA         L_can_user_read_message852
L_can_user_read_message851:
0x5894	0x0105      	MOVLB       5
;Validadora.c,1764 :: 		string_addc(bufferEeprom, CAN_TABLE_NO_FOUND);
0x5896	0x0ED2      	MOVLW       _bufferEeprom
0x5898	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x589A	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x589C	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x589E	0x0EE5      	MOVLW       _CAN_TABLE_NO_FOUND
0x58A0	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x58A2	0x0E9E      	MOVLW       hi_addr(_CAN_TABLE_NO_FOUND)
0x58A4	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x58A6	0x0E00      	MOVLW       higher_addr(_CAN_TABLE_NO_FOUND)
0x58A8	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x58AA	0xF00FEC40  	CALL        _string_addc, 0
;Validadora.c,1765 :: 		}
L_can_user_read_message852:
;Validadora.c,1770 :: 		}else if(string_cmpnc(CAN_TABLE_INFO, &can.rxBuffer[sizeTotal], sizeKey)){
0x58AE	0xD172      	BRA         L_can_user_read_message853
L_can_user_read_message850:
0x58B0	0x0E12      	MOVLW       _CAN_TABLE_INFO
0x58B2	0x6F78      	MOVWF       FARG_string_cmpnc_text1, 1
0x58B4	0x0E9F      	MOVLW       hi_addr(_CAN_TABLE_INFO)
0x58B6	0x6F79      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x58B8	0x0E00      	MOVLW       higher_addr(_CAN_TABLE_INFO)
0x58BA	0x6F7A      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x58BC	0x0E2A      	MOVLW       _can+107
0x58BE	0x6F7B      	MOVWF       FARG_string_cmpnc_text2, 1
0x58C0	0x0E04      	MOVLW       hi_addr(_can+107)
0x58C2	0x6F7C      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x58C4	0x5157      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x58C6	0x277B      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x58C8	0xB0D8      	BTFSC       STATUS, 0 
0x58CA	0x2B7C      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x58CC	0xF57DC556  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x58D0	0xF016EC7C  	CALL        _string_cmpnc, 0
0x58D4	0x5200      	MOVF        R0, 1 
0x58D6	0xB4D8      	BTFSC       STATUS, 2 
0x58D8	0xD099      	BRA         L_can_user_read_message854
;Validadora.c,1772 :: 		sizeTotal += sizeKey;
0x58DA	0x5156      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x58DC	0x2557      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x58DE	0x6E00      	MOVWF       R0 
0x58E0	0xF557C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Validadora.c,1774 :: 		if(mysql_exist(&can.rxBuffer[sizeTotal])){
0x58E4	0x0E2A      	MOVLW       _can+107
0x58E6	0x6F9C      	MOVWF       FARG_mysql_exist_name, 1
0x58E8	0x0E04      	MOVLW       hi_addr(_can+107)
0x58EA	0x6F9D      	MOVWF       FARG_mysql_exist_name+1, 1
0x58EC	0x5000      	MOVF        R0, 0 
0x58EE	0x279C      	ADDWF       FARG_mysql_exist_name, 1, 1
0x58F0	0xB0D8      	BTFSC       STATUS, 0 
0x58F2	0x2B9D      	INCF        FARG_mysql_exist_name+1, 1, 1
0x58F4	0xF002EC3A  	CALL        _mysql_exist, 0
0x58F8	0x5200      	MOVF        R0, 1 
0x58FA	0xE07A      	BZ          L_can_user_read_message855
;Validadora.c,1775 :: 		string_addc(bufferEeprom, CAN_TABLE_INFO);
0x58FC	0x0ED2      	MOVLW       _bufferEeprom
0x58FE	0x0105      	MOVLB       5
0x5900	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x5902	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5904	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x5906	0x0E12      	MOVLW       _CAN_TABLE_INFO
0x5908	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x590A	0x0E9F      	MOVLW       hi_addr(_CAN_TABLE_INFO)
0x590C	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x590E	0x0E00      	MOVLW       higher_addr(_CAN_TABLE_INFO)
0x5910	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x5912	0xF00FEC40  	CALL        _string_addc, 0
;Validadora.c,1777 :: 		string_cpyn(msjConst, &can.rxBuffer[sizeTotal], 3);
0x5916	0x0E12      	MOVLW       _msjConst
0x5918	0x6F78      	MOVWF       FARG_string_cpyn_destino, 1
0x591A	0x0E05      	MOVLW       hi_addr(_msjConst)
0x591C	0x6F79      	MOVWF       FARG_string_cpyn_destino+1, 1
0x591E	0x0E2A      	MOVLW       _can+107
0x5920	0x6F7A      	MOVWF       FARG_string_cpyn_origen, 1
0x5922	0x0E04      	MOVLW       hi_addr(_can+107)
0x5924	0x6F7B      	MOVWF       FARG_string_cpyn_origen+1, 1
0x5926	0x5157      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x5928	0x277A      	ADDWF       FARG_string_cpyn_origen, 1, 1
0x592A	0xB0D8      	BTFSC       STATUS, 0 
0x592C	0x2B7B      	INCF        FARG_string_cpyn_origen+1, 1, 1
0x592E	0x0E03      	MOVLW       3
0x5930	0x6F7C      	MOVWF       FARG_string_cpyn_size, 1
0x5932	0xF00DEC35  	CALL        _string_cpyn, 0
;Validadora.c,1778 :: 		string_toUpper(msjConst);
0x5936	0x0E12      	MOVLW       _msjConst
0x5938	0x6F78      	MOVWF       FARG_string_toUpper_cadena, 1
0x593A	0x0E05      	MOVLW       hi_addr(_msjConst)
0x593C	0x6F79      	MOVWF       FARG_string_toUpper_cadena+1, 1
0x593E	0xF012EC28  	CALL        _string_toUpper, 0
;Validadora.c,1779 :: 		string_add(bufferEeprom, msjConst);
0x5942	0x0ED2      	MOVLW       _bufferEeprom
0x5944	0x6F78      	MOVWF       FARG_string_add_destino, 1
0x5946	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5948	0x6F79      	MOVWF       FARG_string_add_destino+1, 1
0x594A	0x0E12      	MOVLW       _msjConst
0x594C	0x6F7A      	MOVWF       FARG_string_add_addEnd, 1
0x594E	0x0E05      	MOVLW       hi_addr(_msjConst)
0x5950	0x6F7B      	MOVWF       FARG_string_add_addEnd+1, 1
0x5952	0xF016EC4C  	CALL        _string_add, 0
;Validadora.c,1781 :: 		string_addc(bufferEeprom, FILAS_ACTUALES);
0x5956	0x0ED2      	MOVLW       _bufferEeprom
0x5958	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x595A	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x595C	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x595E	0x0E06      	MOVLW       can_user_read_message_FILAS_ACTUALES_L0
0x5960	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x5962	0x0E9F      	MOVLW       hi_addr(can_user_read_message_FILAS_ACTUALES_L0)
0x5964	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x5966	0x0E00      	MOVLW       higher_addr(can_user_read_message_FILAS_ACTUALES_L0)
0x5968	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x596A	0xF00FEC40  	CALL        _string_addc, 0
;Validadora.c,1782 :: 		numToString(myTable.rowAct, msjConst, 4);
0x596E	0xF590C38F  	MOVFF       Validadora_myTable+4, FARG_numToString_valor
0x5972	0xF591C390  	MOVFF       Validadora_myTable+5, FARG_numToString_valor+1
0x5976	0x0E00      	MOVLW       0
0x5978	0x6F92      	MOVWF       FARG_numToString_valor+2, 1
0x597A	0x6F93      	MOVWF       FARG_numToString_valor+3, 1
0x597C	0x0E12      	MOVLW       _msjConst
0x597E	0x6F94      	MOVWF       FARG_numToString_cadena, 1
0x5980	0x0E05      	MOVLW       hi_addr(_msjConst)
0x5982	0x6F95      	MOVWF       FARG_numToString_cadena+1, 1
0x5984	0x0E04      	MOVLW       4
0x5986	0x6F96      	MOVWF       FARG_numToString_digitos, 1
0x5988	0xF004EC52  	CALL        _numToString, 0
;Validadora.c,1783 :: 		string_add(bufferEeprom, msjConst);
0x598C	0x0ED2      	MOVLW       _bufferEeprom
0x598E	0x0105      	MOVLB       5
0x5990	0x6F78      	MOVWF       FARG_string_add_destino, 1
0x5992	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5994	0x6F79      	MOVWF       FARG_string_add_destino+1, 1
0x5996	0x0E12      	MOVLW       _msjConst
0x5998	0x6F7A      	MOVWF       FARG_string_add_addEnd, 1
0x599A	0x0E05      	MOVLW       hi_addr(_msjConst)
0x599C	0x6F7B      	MOVWF       FARG_string_add_addEnd+1, 1
0x599E	0xF016EC4C  	CALL        _string_add, 0
;Validadora.c,1785 :: 		string_addc(bufferEeprom, FILAS_PROG);
0x59A2	0x0ED2      	MOVLW       _bufferEeprom
0x59A4	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x59A6	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x59A8	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x59AA	0x0E0A      	MOVLW       can_user_read_message_FILAS_PROG_L0
0x59AC	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x59AE	0x0E9F      	MOVLW       hi_addr(can_user_read_message_FILAS_PROG_L0)
0x59B0	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x59B2	0x0E00      	MOVLW       higher_addr(can_user_read_message_FILAS_PROG_L0)
0x59B4	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x59B6	0xF00FEC40  	CALL        _string_addc, 0
;Validadora.c,1786 :: 		numToString(myTable.row, msjConst, 4);
0x59BA	0xF590C38D  	MOVFF       Validadora_myTable+2, FARG_numToString_valor
0x59BE	0xF591C38E  	MOVFF       Validadora_myTable+3, FARG_numToString_valor+1
0x59C2	0x0E00      	MOVLW       0
0x59C4	0x6F92      	MOVWF       FARG_numToString_valor+2, 1
0x59C6	0x6F93      	MOVWF       FARG_numToString_valor+3, 1
0x59C8	0x0E12      	MOVLW       _msjConst
0x59CA	0x6F94      	MOVWF       FARG_numToString_cadena, 1
0x59CC	0x0E05      	MOVLW       hi_addr(_msjConst)
0x59CE	0x6F95      	MOVWF       FARG_numToString_cadena+1, 1
0x59D0	0x0E04      	MOVLW       4
0x59D2	0x6F96      	MOVWF       FARG_numToString_digitos, 1
0x59D4	0xF004EC52  	CALL        _numToString, 0
;Validadora.c,1787 :: 		string_add(bufferEeprom, msjConst);
0x59D8	0x0ED2      	MOVLW       _bufferEeprom
0x59DA	0x0105      	MOVLB       5
0x59DC	0x6F78      	MOVWF       FARG_string_add_destino, 1
0x59DE	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x59E0	0x6F79      	MOVWF       FARG_string_add_destino+1, 1
0x59E2	0x0E12      	MOVLW       _msjConst
0x59E4	0x6F7A      	MOVWF       FARG_string_add_addEnd, 1
0x59E6	0x0E05      	MOVLW       hi_addr(_msjConst)
0x59E8	0x6F7B      	MOVWF       FARG_string_add_addEnd+1, 1
0x59EA	0xF016EC4C  	CALL        _string_add, 0
;Validadora.c,1792 :: 		}else{
0x59EE	0xD00D      	BRA         L_can_user_read_message856
L_can_user_read_message855:
0x59F0	0x0105      	MOVLB       5
;Validadora.c,1793 :: 		string_addc(bufferEeprom, CAN_TABLE_NO_FOUND);
0x59F2	0x0ED2      	MOVLW       _bufferEeprom
0x59F4	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x59F6	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x59F8	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x59FA	0x0EE5      	MOVLW       _CAN_TABLE_NO_FOUND
0x59FC	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x59FE	0x0E9E      	MOVLW       hi_addr(_CAN_TABLE_NO_FOUND)
0x5A00	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x5A02	0x0E00      	MOVLW       higher_addr(_CAN_TABLE_NO_FOUND)
0x5A04	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x5A06	0xF00FEC40  	CALL        _string_addc, 0
;Validadora.c,1794 :: 		}
L_can_user_read_message856:
;Validadora.c,1795 :: 		}else if(string_cmpnc(CAN_PASSBACK, &can.rxBuffer[sizeTotal], sizeKey)){
0x5A0A	0xD0C4      	BRA         L_can_user_read_message857
L_can_user_read_message854:
0x5A0C	0x0E56      	MOVLW       _CAN_PASSBACK
0x5A0E	0x6F78      	MOVWF       FARG_string_cmpnc_text1, 1
0x5A10	0x0E9F      	MOVLW       hi_addr(_CAN_PASSBACK)
0x5A12	0x6F79      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x5A14	0x0E00      	MOVLW       higher_addr(_CAN_PASSBACK)
0x5A16	0x6F7A      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x5A18	0x0E2A      	MOVLW       _can+107
0x5A1A	0x6F7B      	MOVWF       FARG_string_cmpnc_text2, 1
0x5A1C	0x0E04      	MOVLW       hi_addr(_can+107)
0x5A1E	0x6F7C      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x5A20	0x5157      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x5A22	0x277B      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x5A24	0xB0D8      	BTFSC       STATUS, 0 
0x5A26	0x2B7C      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x5A28	0xF57DC556  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x5A2C	0xF016EC7C  	CALL        _string_cmpnc, 0
0x5A30	0x5200      	MOVF        R0, 1 
0x5A32	0xB4D8      	BTFSC       STATUS, 2 
0x5A34	0xD0AF      	BRA         L_can_user_read_message858
;Validadora.c,1797 :: 		sizeTotal += sizeKey;
0x5A36	0x5156      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x5A38	0x2557      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x5A3A	0x6E00      	MOVWF       R0 
0x5A3C	0xF557C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Validadora.c,1800 :: 		if(mysql_exist(&can.rxBuffer[sizeTotal])){
0x5A40	0x0E2A      	MOVLW       _can+107
0x5A42	0x6F9C      	MOVWF       FARG_mysql_exist_name, 1
0x5A44	0x0E04      	MOVLW       hi_addr(_can+107)
0x5A46	0x6F9D      	MOVWF       FARG_mysql_exist_name+1, 1
0x5A48	0x5000      	MOVF        R0, 0 
0x5A4A	0x279C      	ADDWF       FARG_mysql_exist_name, 1, 1
0x5A4C	0xB0D8      	BTFSC       STATUS, 0 
0x5A4E	0x2B9D      	INCF        FARG_mysql_exist_name+1, 1, 1
0x5A50	0xF002EC3A  	CALL        _mysql_exist, 0
0x5A54	0x5200      	MOVF        R0, 1 
0x5A56	0xB4D8      	BTFSC       STATUS, 2 
0x5A58	0xD090      	BRA         L_can_user_read_message859
;Validadora.c,1801 :: 		string_addc(bufferEeprom, CAN_PASSBACK);
0x5A5A	0x0ED2      	MOVLW       _bufferEeprom
0x5A5C	0x0105      	MOVLB       5
0x5A5E	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x5A60	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5A62	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x5A64	0x0E56      	MOVLW       _CAN_PASSBACK
0x5A66	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x5A68	0x0E9F      	MOVLW       hi_addr(_CAN_PASSBACK)
0x5A6A	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x5A6C	0x0E00      	MOVLW       higher_addr(_CAN_PASSBACK)
0x5A6E	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x5A70	0xF00FEC40  	CALL        _string_addc, 0
;Validadora.c,1803 :: 		string_cpyn(msjConst, &can.rxBuffer[sizeTotal], 3);
0x5A74	0x0E12      	MOVLW       _msjConst
0x5A76	0x6F78      	MOVWF       FARG_string_cpyn_destino, 1
0x5A78	0x0E05      	MOVLW       hi_addr(_msjConst)
0x5A7A	0x6F79      	MOVWF       FARG_string_cpyn_destino+1, 1
0x5A7C	0x0E2A      	MOVLW       _can+107
0x5A7E	0x6F7A      	MOVWF       FARG_string_cpyn_origen, 1
0x5A80	0x0E04      	MOVLW       hi_addr(_can+107)
0x5A82	0x6F7B      	MOVWF       FARG_string_cpyn_origen+1, 1
0x5A84	0x5157      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x5A86	0x277A      	ADDWF       FARG_string_cpyn_origen, 1, 1
0x5A88	0xB0D8      	BTFSC       STATUS, 0 
0x5A8A	0x2B7B      	INCF        FARG_string_cpyn_origen+1, 1, 1
0x5A8C	0x0E03      	MOVLW       3
0x5A8E	0x6F7C      	MOVWF       FARG_string_cpyn_size, 1
0x5A90	0xF00DEC35  	CALL        _string_cpyn, 0
;Validadora.c,1804 :: 		string_toUpper(msjConst);
0x5A94	0x0E12      	MOVLW       _msjConst
0x5A96	0x6F78      	MOVWF       FARG_string_toUpper_cadena, 1
0x5A98	0x0E05      	MOVLW       hi_addr(_msjConst)
0x5A9A	0x6F79      	MOVWF       FARG_string_toUpper_cadena+1, 1
0x5A9C	0xF012EC28  	CALL        _string_toUpper, 0
;Validadora.c,1805 :: 		string_add(bufferEeprom, msjConst);
0x5AA0	0x0ED2      	MOVLW       _bufferEeprom
0x5AA2	0x6F78      	MOVWF       FARG_string_add_destino, 1
0x5AA4	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5AA6	0x6F79      	MOVWF       FARG_string_add_destino+1, 1
0x5AA8	0x0E12      	MOVLW       _msjConst
0x5AAA	0x6F7A      	MOVWF       FARG_string_add_addEnd, 1
0x5AAC	0x0E05      	MOVLW       hi_addr(_msjConst)
0x5AAE	0x6F7B      	MOVWF       FARG_string_add_addEnd+1, 1
0x5AB0	0xF016EC4C  	CALL        _string_add, 0
;Validadora.c,1808 :: 		for(fila = 1; fila <= myTable.rowAct; fila++)
0x5AB4	0x0E01      	MOVLW       1
0x5AB6	0x6F58      	MOVWF       can_user_read_message_fila_L0, 1
0x5AB8	0x0E00      	MOVLW       0
0x5ABA	0x6F59      	MOVWF       can_user_read_message_fila_L0+1, 1
L_can_user_read_message860:
0x5ABC	0x5159      	MOVF        can_user_read_message_fila_L0+1, 0, 1
0x5ABE	0x0103      	MOVLB       3
0x5AC0	0x5D90      	SUBWF       Validadora_myTable+5, 0, 1
0x5AC2	0xE104      	BNZ         L__can_user_read_message1368
0x5AC4	0x0105      	MOVLB       5
0x5AC6	0x5158      	MOVF        can_user_read_message_fila_L0, 0, 1
0x5AC8	0x0103      	MOVLB       3
0x5ACA	0x5D8F      	SUBWF       Validadora_myTable+4, 0, 1
L__can_user_read_message1368:
0x5ACC	0xE31E      	BNC         L_can_user_read_message861
;Validadora.c,1809 :: 		mysql_write(&can.rxBuffer[sizeTotal], pensionadosEstatus, fila, '-', false);
0x5ACE	0x0E2A      	MOVLW       _can+107
0x5AD0	0x0105      	MOVLB       5
0x5AD2	0x6F78      	MOVWF       FARG_mysql_write_name, 1
0x5AD4	0x0E04      	MOVLW       hi_addr(_can+107)
0x5AD6	0x6F79      	MOVWF       FARG_mysql_write_name+1, 1
0x5AD8	0x5157      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x5ADA	0x2778      	ADDWF       FARG_mysql_write_name, 1, 1
0x5ADC	0xB0D8      	BTFSC       STATUS, 0 
0x5ADE	0x2B79      	INCF        FARG_mysql_write_name+1, 1, 1
0x5AE0	0x0ECB      	MOVLW       _pensionadosEstatus
0x5AE2	0x6F7A      	MOVWF       FARG_mysql_write_column, 1
0x5AE4	0x0E02      	MOVLW       hi_addr(_pensionadosEstatus)
0x5AE6	0x6F7B      	MOVWF       FARG_mysql_write_column+1, 1
0x5AE8	0xF57CC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_fila
0x5AEC	0xF57DC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_fila+1
0x5AF0	0x0E2D      	MOVLW       45
0x5AF2	0x6F7E      	MOVWF       FARG_mysql_write_value, 1
0x5AF4	0x0E00      	MOVLW       0
0x5AF6	0x6F7F      	MOVWF       FARG_mysql_write_value+1, 1
0x5AF8	0x6F80      	MOVWF       FARG_mysql_write_value+2, 1
0x5AFA	0x6F81      	MOVWF       FARG_mysql_write_value+3, 1
0x5AFC	0x6B82      	CLRF        FARG_mysql_write_endWrite, 1
0x5AFE	0xF014EC20  	CALL        _mysql_write, 0
;Validadora.c,1808 :: 		for(fila = 1; fila <= myTable.rowAct; fila++)
0x5B02	0x0105      	MOVLB       5
0x5B04	0x4B58      	INFSNZ      can_user_read_message_fila_L0, 1, 1
0x5B06	0x2B59      	INCF        can_user_read_message_fila_L0+1, 1, 1
;Validadora.c,1809 :: 		mysql_write(&can.rxBuffer[sizeTotal], pensionadosEstatus, fila, '-', false);
0x5B08	0xD7D9      	BRA         L_can_user_read_message860
L_can_user_read_message861:
0x5B0A	0x0105      	MOVLB       5
;Validadora.c,1812 :: 		if(!mysql_write(&can.rxBuffer[sizeTotal], pensionadosEstatus, 1, '-', false))
0x5B0C	0x0E2A      	MOVLW       _can+107
0x5B0E	0x6F78      	MOVWF       FARG_mysql_write_name, 1
0x5B10	0x0E04      	MOVLW       hi_addr(_can+107)
0x5B12	0x6F79      	MOVWF       FARG_mysql_write_name+1, 1
0x5B14	0x5157      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x5B16	0x2778      	ADDWF       FARG_mysql_write_name, 1, 1
0x5B18	0xB0D8      	BTFSC       STATUS, 0 
0x5B1A	0x2B79      	INCF        FARG_mysql_write_name+1, 1, 1
0x5B1C	0x0ECB      	MOVLW       _pensionadosEstatus
0x5B1E	0x6F7A      	MOVWF       FARG_mysql_write_column, 1
0x5B20	0x0E02      	MOVLW       hi_addr(_pensionadosEstatus)
0x5B22	0x6F7B      	MOVWF       FARG_mysql_write_column+1, 1
0x5B24	0x0E01      	MOVLW       1
0x5B26	0x6F7C      	MOVWF       FARG_mysql_write_fila, 1
0x5B28	0x0E00      	MOVLW       0
0x5B2A	0x6F7D      	MOVWF       FARG_mysql_write_fila+1, 1
0x5B2C	0x0E2D      	MOVLW       45
0x5B2E	0x6F7E      	MOVWF       FARG_mysql_write_value, 1
0x5B30	0x0E00      	MOVLW       0
0x5B32	0x6F7F      	MOVWF       FARG_mysql_write_value+1, 1
0x5B34	0x6F80      	MOVWF       FARG_mysql_write_value+2, 1
0x5B36	0x6F81      	MOVWF       FARG_mysql_write_value+3, 1
0x5B38	0x6B82      	CLRF        FARG_mysql_write_endWrite, 1
0x5B3A	0xF014EC20  	CALL        _mysql_write, 0
0x5B3E	0x5200      	MOVF        R0, 1 
0x5B40	0xE10E      	BNZ         L_can_user_read_message863
;Validadora.c,1813 :: 		string_addc(bufferEeprom, CAN_TABLE_MODIFICADO);
0x5B42	0x0ED2      	MOVLW       _bufferEeprom
0x5B44	0x0105      	MOVLB       5
0x5B46	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x5B48	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5B4A	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x5B4C	0x0EDA      	MOVLW       _CAN_TABLE_MODIFICADO
0x5B4E	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x5B50	0x0E9E      	MOVLW       hi_addr(_CAN_TABLE_MODIFICADO)
0x5B52	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x5B54	0x0E00      	MOVLW       higher_addr(_CAN_TABLE_MODIFICADO)
0x5B56	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x5B58	0xF00FEC40  	CALL        _string_addc, 0
0x5B5C	0xD00D      	BRA         L_can_user_read_message864
L_can_user_read_message863:
0x5B5E	0x0105      	MOVLB       5
;Validadora.c,1815 :: 		string_addc(bufferEeprom,CAN_TABLE_ERROR);
0x5B60	0x0ED2      	MOVLW       _bufferEeprom
0x5B62	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x5B64	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5B66	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x5B68	0x0EF6      	MOVLW       _CAN_TABLE_ERROR
0x5B6A	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x5B6C	0x0E9E      	MOVLW       hi_addr(_CAN_TABLE_ERROR)
0x5B6E	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x5B70	0x0E00      	MOVLW       higher_addr(_CAN_TABLE_ERROR)
0x5B72	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x5B74	0xF00FEC40  	CALL        _string_addc, 0
L_can_user_read_message864:
;Validadora.c,1816 :: 		}else{
0x5B78	0xD00D      	BRA         L_can_user_read_message865
L_can_user_read_message859:
0x5B7A	0x0105      	MOVLB       5
;Validadora.c,1817 :: 		string_addc(bufferEeprom, CAN_TABLE_NO_FOUND);
0x5B7C	0x0ED2      	MOVLW       _bufferEeprom
0x5B7E	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x5B80	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5B82	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x5B84	0x0EE5      	MOVLW       _CAN_TABLE_NO_FOUND
0x5B86	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x5B88	0x0E9E      	MOVLW       hi_addr(_CAN_TABLE_NO_FOUND)
0x5B8A	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x5B8C	0x0E00      	MOVLW       higher_addr(_CAN_TABLE_NO_FOUND)
0x5B8E	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x5B90	0xF00FEC40  	CALL        _string_addc, 0
;Validadora.c,1818 :: 		}
L_can_user_read_message865:
;Validadora.c,1819 :: 		}
L_can_user_read_message858:
L_can_user_read_message857:
L_can_user_read_message853:
;Validadora.c,1821 :: 		string_cpyc(msjConst, CAN_MODULE);
0x5B94	0x0E12      	MOVLW       _msjConst
0x5B96	0x6F78      	MOVWF       FARG_string_cpyc_destino, 1
0x5B98	0x0E05      	MOVLW       hi_addr(_msjConst)
0x5B9A	0x6F79      	MOVWF       FARG_string_cpyc_destino+1, 1
0x5B9C	0x0E86      	MOVLW       _CAN_MODULE
0x5B9E	0x6F7A      	MOVWF       FARG_string_cpyc_origen, 1
0x5BA0	0x0E9F      	MOVLW       hi_addr(_CAN_MODULE)
0x5BA2	0x6F7B      	MOVWF       FARG_string_cpyc_origen+1, 1
0x5BA4	0x0E00      	MOVLW       higher_addr(_CAN_MODULE)
0x5BA6	0x6F7C      	MOVWF       FARG_string_cpyc_origen+2, 1
0x5BA8	0xF014ECBC  	CALL        _string_cpyc, 0
;Validadora.c,1822 :: 		numToHex(can.id, &msjConst[1], 1);
0x5BAC	0xF578C3CB  	MOVFF       _can+12, FARG_numToHex_valor
0x5BB0	0x0E00      	MOVLW       0
0x5BB2	0x6F79      	MOVWF       FARG_numToHex_valor+1, 1
0x5BB4	0x6F7A      	MOVWF       FARG_numToHex_valor+2, 1
0x5BB6	0x6F7B      	MOVWF       FARG_numToHex_valor+3, 1
0x5BB8	0x0E13      	MOVLW       _msjConst+1
0x5BBA	0x6F7C      	MOVWF       FARG_numToHex_cadena, 1
0x5BBC	0x0E05      	MOVLW       hi_addr(_msjConst+1)
0x5BBE	0x6F7D      	MOVWF       FARG_numToHex_cadena+1, 1
0x5BC0	0x0E01      	MOVLW       1
0x5BC2	0x6F7E      	MOVWF       FARG_numToHex_bytes, 1
0x5BC4	0xF00DECAD  	CALL        _numToHex, 0
;Validadora.c,1823 :: 		string_add(bufferEeprom, msjConst);
0x5BC8	0x0ED2      	MOVLW       _bufferEeprom
0x5BCA	0x6F78      	MOVWF       FARG_string_add_destino, 1
0x5BCC	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5BCE	0x6F79      	MOVWF       FARG_string_add_destino+1, 1
0x5BD0	0x0E12      	MOVLW       _msjConst
0x5BD2	0x6F7A      	MOVWF       FARG_string_add_addEnd, 1
0x5BD4	0x0E05      	MOVLW       hi_addr(_msjConst)
0x5BD6	0x6F7B      	MOVWF       FARG_string_add_addEnd+1, 1
0x5BD8	0xF016EC4C  	CALL        _string_add, 0
;Validadora.c,1825 :: 		buffer_save_send(true, bufferEeprom);
0x5BDC	0x0E01      	MOVLW       1
0x5BDE	0x6F78      	MOVWF       FARG_buffer_save_send_guardar, 1
0x5BE0	0x0ED2      	MOVLW       _bufferEeprom
0x5BE2	0x6F79      	MOVWF       FARG_buffer_save_send_buffer, 1
0x5BE4	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5BE6	0x6F7A      	MOVWF       FARG_buffer_save_send_buffer+1, 1
0x5BE8	0xF00FECCD  	CALL        _buffer_save_send, 0
;Validadora.c,1826 :: 		}else if(string_cmpnc(CAN_TABLE_RW, &can.rxBuffer[sizeTotal], sizeKey)){
0x5BEC	0xF033EFF6  	GOTO        L_can_user_read_message866
L_can_user_read_message849:
0x5BF0	0x0E3A      	MOVLW       _CAN_TABLE_RW
0x5BF2	0x0105      	MOVLB       5
0x5BF4	0x6F78      	MOVWF       FARG_string_cmpnc_text1, 1
0x5BF6	0x0E9F      	MOVLW       hi_addr(_CAN_TABLE_RW)
0x5BF8	0x6F79      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x5BFA	0x0E00      	MOVLW       higher_addr(_CAN_TABLE_RW)
0x5BFC	0x6F7A      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x5BFE	0x0E2A      	MOVLW       _can+107
0x5C00	0x6F7B      	MOVWF       FARG_string_cmpnc_text2, 1
0x5C02	0x0E04      	MOVLW       hi_addr(_can+107)
0x5C04	0x6F7C      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x5C06	0x5157      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x5C08	0x277B      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x5C0A	0xB0D8      	BTFSC       STATUS, 0 
0x5C0C	0x2B7C      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x5C0E	0xF57DC556  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x5C12	0xF016EC7C  	CALL        _string_cmpnc, 0
0x5C16	0x5200      	MOVF        R0, 1 
0x5C18	0xB4D8      	BTFSC       STATUS, 2 
0x5C1A	0xD1C1      	BRA         L_can_user_read_message867
;Validadora.c,1828 :: 		sizeTotal += sizeKey;
0x5C1C	0x5156      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x5C1E	0x2557      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x5C20	0x6E00      	MOVWF       R0 
0x5C22	0xF557C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Validadora.c,1829 :: 		sizeKey = 4;
0x5C26	0x0E04      	MOVLW       4
0x5C28	0x6F56      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Validadora.c,1830 :: 		string_cpyn(msjConst, &can.rxBuffer[sizeTotal], sizeKey);
0x5C2A	0x0E12      	MOVLW       _msjConst
0x5C2C	0x6F78      	MOVWF       FARG_string_cpyn_destino, 1
0x5C2E	0x0E05      	MOVLW       hi_addr(_msjConst)
0x5C30	0x6F79      	MOVWF       FARG_string_cpyn_destino+1, 1
0x5C32	0x0E2A      	MOVLW       _can+107
0x5C34	0x6F7A      	MOVWF       FARG_string_cpyn_origen, 1
0x5C36	0x0E04      	MOVLW       hi_addr(_can+107)
0x5C38	0x6F7B      	MOVWF       FARG_string_cpyn_origen+1, 1
0x5C3A	0x5000      	MOVF        R0, 0 
0x5C3C	0x277A      	ADDWF       FARG_string_cpyn_origen, 1, 1
0x5C3E	0xB0D8      	BTFSC       STATUS, 0 
0x5C40	0x2B7B      	INCF        FARG_string_cpyn_origen+1, 1, 1
0x5C42	0x0E04      	MOVLW       4
0x5C44	0x6F7C      	MOVWF       FARG_string_cpyn_size, 1
0x5C46	0xF00DEC35  	CALL        _string_cpyn, 0
;Validadora.c,1831 :: 		fila = stringToNum(msjConst);
0x5C4A	0x0E12      	MOVLW       _msjConst
0x5C4C	0x6F78      	MOVWF       FARG_stringToNum_cadena, 1
0x5C4E	0x0E05      	MOVLW       hi_addr(_msjConst)
0x5C50	0x6F79      	MOVWF       FARG_stringToNum_cadena+1, 1
0x5C52	0xF00DEC5C  	CALL        _stringToNum, 0
0x5C56	0xF558C000  	MOVFF       R0, can_user_read_message_fila_L0
0x5C5A	0xF559C001  	MOVFF       R1, can_user_read_message_fila_L0+1
;Validadora.c,1833 :: 		sizeTotal += sizeKey;
0x5C5E	0x5156      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x5C60	0x2757      	ADDWF       can_user_read_message_sizeTotal_L0, 1, 1
;Validadora.c,1834 :: 		sizeKey = sizeof(CAN_PENSIONADO)-1;
0x5C62	0x0E03      	MOVLW       3
0x5C64	0x6F56      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Validadora.c,1836 :: 		string_cpyc(bufferEeprom, CAN_TBL);
0x5C66	0x0ED2      	MOVLW       _bufferEeprom
0x5C68	0x6F78      	MOVWF       FARG_string_cpyc_destino, 1
0x5C6A	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5C6C	0x6F79      	MOVWF       FARG_string_cpyc_destino+1, 1
0x5C6E	0x0E36      	MOVLW       _CAN_TBL
0x5C70	0x6F7A      	MOVWF       FARG_string_cpyc_origen, 1
0x5C72	0x0E9F      	MOVLW       hi_addr(_CAN_TBL)
0x5C74	0x6F7B      	MOVWF       FARG_string_cpyc_origen+1, 1
0x5C76	0x0E00      	MOVLW       higher_addr(_CAN_TBL)
0x5C78	0x6F7C      	MOVWF       FARG_string_cpyc_origen+2, 1
0x5C7A	0xF014ECBC  	CALL        _string_cpyc, 0
;Validadora.c,1837 :: 		string_addc(bufferEeprom, CAN_MODULE);
0x5C7E	0x0ED2      	MOVLW       _bufferEeprom
0x5C80	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x5C82	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5C84	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x5C86	0x0E86      	MOVLW       _CAN_MODULE
0x5C88	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x5C8A	0x0E9F      	MOVLW       hi_addr(_CAN_MODULE)
0x5C8C	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x5C8E	0x0E00      	MOVLW       higher_addr(_CAN_MODULE)
0x5C90	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x5C92	0xF00FEC40  	CALL        _string_addc, 0
;Validadora.c,1838 :: 		numToHex(can.id, msjConst, 1);
0x5C96	0xF578C3CB  	MOVFF       _can+12, FARG_numToHex_valor
0x5C9A	0x0E00      	MOVLW       0
0x5C9C	0x6F79      	MOVWF       FARG_numToHex_valor+1, 1
0x5C9E	0x6F7A      	MOVWF       FARG_numToHex_valor+2, 1
0x5CA0	0x6F7B      	MOVWF       FARG_numToHex_valor+3, 1
0x5CA2	0x0E12      	MOVLW       _msjConst
0x5CA4	0x6F7C      	MOVWF       FARG_numToHex_cadena, 1
0x5CA6	0x0E05      	MOVLW       hi_addr(_msjConst)
0x5CA8	0x6F7D      	MOVWF       FARG_numToHex_cadena+1, 1
0x5CAA	0x0E01      	MOVLW       1
0x5CAC	0x6F7E      	MOVWF       FARG_numToHex_bytes, 1
0x5CAE	0xF00DECAD  	CALL        _numToHex, 0
;Validadora.c,1839 :: 		string_add(bufferEeprom, msjConst);
0x5CB2	0x0ED2      	MOVLW       _bufferEeprom
0x5CB4	0x6F78      	MOVWF       FARG_string_add_destino, 1
0x5CB6	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5CB8	0x6F79      	MOVWF       FARG_string_add_destino+1, 1
0x5CBA	0x0E12      	MOVLW       _msjConst
0x5CBC	0x6F7A      	MOVWF       FARG_string_add_addEnd, 1
0x5CBE	0x0E05      	MOVLW       hi_addr(_msjConst)
0x5CC0	0x6F7B      	MOVWF       FARG_string_add_addEnd+1, 1
0x5CC2	0xF016EC4C  	CALL        _string_add, 0
;Validadora.c,1842 :: 		if(string_cmpnc(CAN_PENSIONADO, &can.rxBuffer[sizeTotal], sizeKey)){
0x5CC6	0x0E5A      	MOVLW       _CAN_PENSIONADO
0x5CC8	0x6F78      	MOVWF       FARG_string_cmpnc_text1, 1
0x5CCA	0x0E9F      	MOVLW       hi_addr(_CAN_PENSIONADO)
0x5CCC	0x6F79      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x5CCE	0x0E00      	MOVLW       higher_addr(_CAN_PENSIONADO)
0x5CD0	0x6F7A      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x5CD2	0x0E2A      	MOVLW       _can+107
0x5CD4	0x6F7B      	MOVWF       FARG_string_cmpnc_text2, 1
0x5CD6	0x0E04      	MOVLW       hi_addr(_can+107)
0x5CD8	0x6F7C      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x5CDA	0x5157      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x5CDC	0x277B      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x5CDE	0xB0D8      	BTFSC       STATUS, 0 
0x5CE0	0x2B7C      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x5CE2	0xF57DC556  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x5CE6	0xF016EC7C  	CALL        _string_cmpnc, 0
0x5CEA	0x5200      	MOVF        R0, 1 
0x5CEC	0xB4D8      	BTFSC       STATUS, 2 
0x5CEE	0xD155      	BRA         L_can_user_read_message868
;Validadora.c,1844 :: 		string_addc(bufferEeprom, CAN_PENSIONADO);
0x5CF0	0x0ED2      	MOVLW       _bufferEeprom
0x5CF2	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x5CF4	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5CF6	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x5CF8	0x0E5A      	MOVLW       _CAN_PENSIONADO
0x5CFA	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x5CFC	0x0E9F      	MOVLW       hi_addr(_CAN_PENSIONADO)
0x5CFE	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x5D00	0x0E00      	MOVLW       higher_addr(_CAN_PENSIONADO)
0x5D02	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x5D04	0xF00FEC40  	CALL        _string_addc, 0
;Validadora.c,1845 :: 		sizeTotal += sizeKey;
0x5D08	0x5156      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x5D0A	0x2557      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x5D0C	0x6E00      	MOVWF       R0 
0x5D0E	0xF557C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Validadora.c,1846 :: 		sizeKey = sizeof(CAN_TABLE_READ)-1;
0x5D12	0x0E03      	MOVLW       3
0x5D14	0x6F56      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Validadora.c,1848 :: 		if(string_cmpnc(CAN_TABLE_READ, &can.rxBuffer[sizeTotal], sizeKey)){
0x5D16	0x0E42      	MOVLW       _CAN_TABLE_READ
0x5D18	0x6F78      	MOVWF       FARG_string_cmpnc_text1, 1
0x5D1A	0x0E9F      	MOVLW       hi_addr(_CAN_TABLE_READ)
0x5D1C	0x6F79      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x5D1E	0x0E00      	MOVLW       higher_addr(_CAN_TABLE_READ)
0x5D20	0x6F7A      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x5D22	0x0E2A      	MOVLW       _can+107
0x5D24	0x6F7B      	MOVWF       FARG_string_cmpnc_text2, 1
0x5D26	0x0E04      	MOVLW       hi_addr(_can+107)
0x5D28	0x6F7C      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x5D2A	0x5000      	MOVF        R0, 0 
0x5D2C	0x277B      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x5D2E	0xB0D8      	BTFSC       STATUS, 0 
0x5D30	0x2B7C      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x5D32	0x0E03      	MOVLW       3
0x5D34	0x6F7D      	MOVWF       FARG_string_cmpnc_bytes, 1
0x5D36	0xF016EC7C  	CALL        _string_cmpnc, 0
0x5D3A	0x5200      	MOVF        R0, 1 
0x5D3C	0xE074      	BZ          L_can_user_read_message869
;Validadora.c,1849 :: 		if(!mysql_read(tablePensionados, pensionadosID, fila, &id)){
0x5D3E	0x0EEE      	MOVLW       _tablePensionados
0x5D40	0x6F86      	MOVWF       FARG_mysql_read_name, 1
0x5D42	0x0E02      	MOVLW       hi_addr(_tablePensionados)
0x5D44	0x6F87      	MOVWF       FARG_mysql_read_name+1, 1
0x5D46	0x0EFA      	MOVLW       _pensionadosID
0x5D48	0x6F88      	MOVWF       FARG_mysql_read_column, 1
0x5D4A	0x0E02      	MOVLW       hi_addr(_pensionadosID)
0x5D4C	0x6F89      	MOVWF       FARG_mysql_read_column+1, 1
0x5D4E	0xF58AC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_read_fila
0x5D52	0xF58BC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_read_fila+1
0x5D56	0x0E64      	MOVLW       can_user_read_message_id_L0
0x5D58	0x6F8C      	MOVWF       FARG_mysql_read_result, 1
0x5D5A	0x0E05      	MOVLW       hi_addr(can_user_read_message_id_L0)
0x5D5C	0x6F8D      	MOVWF       FARG_mysql_read_result+1, 1
0x5D5E	0xF009EC2C  	CALL        _mysql_read, 0
0x5D62	0x5200      	MOVF        R0, 1 
0x5D64	0xE152      	BNZ         L_can_user_read_message870
;Validadora.c,1850 :: 		mysql_read_string(tablePensionados, pensionadosVigencia, fila, &vigencia);
0x5D66	0x0EEE      	MOVLW       _tablePensionados
0x5D68	0x0105      	MOVLB       5
0x5D6A	0x6F78      	MOVWF       FARG_mysql_read_string_name, 1
0x5D6C	0x0E02      	MOVLW       hi_addr(_tablePensionados)
0x5D6E	0x6F79      	MOVWF       FARG_mysql_read_string_name+1, 1
0x5D70	0x0EE4      	MOVLW       _pensionadosVigencia
0x5D72	0x6F7A      	MOVWF       FARG_mysql_read_string_column, 1
0x5D74	0x0E02      	MOVLW       hi_addr(_pensionadosVigencia)
0x5D76	0x6F7B      	MOVWF       FARG_mysql_read_string_column+1, 1
0x5D78	0xF57CC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_read_string_fila
0x5D7C	0xF57DC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_read_string_fila+1
0x5D80	0x0E5A      	MOVLW       can_user_read_message_vigencia_L0
0x5D82	0x6F7E      	MOVWF       FARG_mysql_read_string_result, 1
0x5D84	0x0E05      	MOVLW       hi_addr(can_user_read_message_vigencia_L0)
0x5D86	0x6F7F      	MOVWF       FARG_mysql_read_string_result+1, 1
0x5D88	0xF015EC0E  	CALL        _mysql_read_string, 0
;Validadora.c,1851 :: 		mysql_read_string(tablePensionados, pensionadosEstatus, fila, &estatus);
0x5D8C	0x0EEE      	MOVLW       _tablePensionados
0x5D8E	0x0105      	MOVLB       5
0x5D90	0x6F78      	MOVWF       FARG_mysql_read_string_name, 1
0x5D92	0x0E02      	MOVLW       hi_addr(_tablePensionados)
0x5D94	0x6F79      	MOVWF       FARG_mysql_read_string_name+1, 1
0x5D96	0x0ECB      	MOVLW       _pensionadosEstatus
0x5D98	0x6F7A      	MOVWF       FARG_mysql_read_string_column, 1
0x5D9A	0x0E02      	MOVLW       hi_addr(_pensionadosEstatus)
0x5D9C	0x6F7B      	MOVWF       FARG_mysql_read_string_column+1, 1
0x5D9E	0xF57CC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_read_string_fila
0x5DA2	0xF57DC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_read_string_fila+1
0x5DA6	0x0E5B      	MOVLW       can_user_read_message_estatus_L0
0x5DA8	0x6F7E      	MOVWF       FARG_mysql_read_string_result, 1
0x5DAA	0x0E05      	MOVLW       hi_addr(can_user_read_message_estatus_L0)
0x5DAC	0x6F7F      	MOVWF       FARG_mysql_read_string_result+1, 1
0x5DAE	0xF015EC0E  	CALL        _mysql_read_string, 0
;Validadora.c,1853 :: 		numToHex(id, msjConst, 3);
0x5DB2	0xF578C564  	MOVFF       can_user_read_message_id_L0, FARG_numToHex_valor
0x5DB6	0xF579C565  	MOVFF       can_user_read_message_id_L0+1, FARG_numToHex_valor+1
0x5DBA	0xF57AC566  	MOVFF       can_user_read_message_id_L0+2, FARG_numToHex_valor+2
0x5DBE	0xF57BC567  	MOVFF       can_user_read_message_id_L0+3, FARG_numToHex_valor+3
0x5DC2	0x0E12      	MOVLW       _msjConst
0x5DC4	0x0105      	MOVLB       5
0x5DC6	0x6F7C      	MOVWF       FARG_numToHex_cadena, 1
0x5DC8	0x0E05      	MOVLW       hi_addr(_msjConst)
0x5DCA	0x6F7D      	MOVWF       FARG_numToHex_cadena+1, 1
0x5DCC	0x0E03      	MOVLW       3
0x5DCE	0x6F7E      	MOVWF       FARG_numToHex_bytes, 1
0x5DD0	0xF00DECAD  	CALL        _numToHex, 0
;Validadora.c,1854 :: 		string_add(bufferEeprom, msjConst);
0x5DD4	0x0ED2      	MOVLW       _bufferEeprom
0x5DD6	0x6F78      	MOVWF       FARG_string_add_destino, 1
0x5DD8	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5DDA	0x6F79      	MOVWF       FARG_string_add_destino+1, 1
0x5DDC	0x0E12      	MOVLW       _msjConst
0x5DDE	0x6F7A      	MOVWF       FARG_string_add_addEnd, 1
0x5DE0	0x0E05      	MOVLW       hi_addr(_msjConst)
0x5DE2	0x6F7B      	MOVWF       FARG_string_add_addEnd+1, 1
0x5DE4	0xF016EC4C  	CALL        _string_add, 0
;Validadora.c,1855 :: 		string_push(bufferEeprom, vigencia);
0x5DE8	0x0ED2      	MOVLW       _bufferEeprom
0x5DEA	0x6F78      	MOVWF       FARG_string_push_texto, 1
0x5DEC	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5DEE	0x6F79      	MOVWF       FARG_string_push_texto+1, 1
0x5DF0	0xF57AC55A  	MOVFF       can_user_read_message_vigencia_L0, FARG_string_push_caracter
0x5DF4	0xF014ECEF  	CALL        _string_push, 0
;Validadora.c,1856 :: 		string_push(bufferEeprom, estatus);
0x5DF8	0x0ED2      	MOVLW       _bufferEeprom
0x5DFA	0x6F78      	MOVWF       FARG_string_push_texto, 1
0x5DFC	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5DFE	0x6F79      	MOVWF       FARG_string_push_texto+1, 1
0x5E00	0xF57AC55B  	MOVFF       can_user_read_message_estatus_L0, FARG_string_push_caracter
0x5E04	0xF014ECEF  	CALL        _string_push, 0
;Validadora.c,1857 :: 		}else{
0x5E08	0xD00D      	BRA         L_can_user_read_message871
L_can_user_read_message870:
0x5E0A	0x0105      	MOVLB       5
;Validadora.c,1858 :: 		string_addc(bufferEeprom, CAN_TABLE_ERROR);
0x5E0C	0x0ED2      	MOVLW       _bufferEeprom
0x5E0E	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x5E10	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5E12	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x5E14	0x0EF6      	MOVLW       _CAN_TABLE_ERROR
0x5E16	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x5E18	0x0E9E      	MOVLW       hi_addr(_CAN_TABLE_ERROR)
0x5E1A	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x5E1C	0x0E00      	MOVLW       higher_addr(_CAN_TABLE_ERROR)
0x5E1E	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x5E20	0xF00FEC40  	CALL        _string_addc, 0
;Validadora.c,1859 :: 		}
L_can_user_read_message871:
;Validadora.c,1860 :: 		}else if(string_cmpnc(CAN_TABLE_WRITE, &can.rxBuffer[sizeTotal], sizeKey)){
0x5E24	0xD0BA      	BRA         L_can_user_read_message872
L_can_user_read_message869:
0x5E26	0x0E3E      	MOVLW       _CAN_TABLE_WRITE
0x5E28	0x6F78      	MOVWF       FARG_string_cmpnc_text1, 1
0x5E2A	0x0E9F      	MOVLW       hi_addr(_CAN_TABLE_WRITE)
0x5E2C	0x6F79      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x5E2E	0x0E00      	MOVLW       higher_addr(_CAN_TABLE_WRITE)
0x5E30	0x6F7A      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x5E32	0x0E2A      	MOVLW       _can+107
0x5E34	0x6F7B      	MOVWF       FARG_string_cmpnc_text2, 1
0x5E36	0x0E04      	MOVLW       hi_addr(_can+107)
0x5E38	0x6F7C      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x5E3A	0x5157      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x5E3C	0x277B      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x5E3E	0xB0D8      	BTFSC       STATUS, 0 
0x5E40	0x2B7C      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x5E42	0xF57DC556  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x5E46	0xF016EC7C  	CALL        _string_cmpnc, 0
0x5E4A	0x5200      	MOVF        R0, 1 
0x5E4C	0xB4D8      	BTFSC       STATUS, 2 
0x5E4E	0xD0A5      	BRA         L_can_user_read_message873
;Validadora.c,1861 :: 		sizeTotal += sizeKey;
0x5E50	0x5156      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x5E52	0x2557      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x5E54	0x6E00      	MOVWF       R0 
0x5E56	0xF557C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Validadora.c,1862 :: 		sizeKey = 6;  //3 Bytes en hexadecimal
0x5E5A	0x0E06      	MOVLW       6
0x5E5C	0x6F56      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Validadora.c,1863 :: 		string_cpyn(msjConst, &can.rxBuffer[sizeTotal], sizeKey);
0x5E5E	0x0E12      	MOVLW       _msjConst
0x5E60	0x6F78      	MOVWF       FARG_string_cpyn_destino, 1
0x5E62	0x0E05      	MOVLW       hi_addr(_msjConst)
0x5E64	0x6F79      	MOVWF       FARG_string_cpyn_destino+1, 1
0x5E66	0x0E2A      	MOVLW       _can+107
0x5E68	0x6F7A      	MOVWF       FARG_string_cpyn_origen, 1
0x5E6A	0x0E04      	MOVLW       hi_addr(_can+107)
0x5E6C	0x6F7B      	MOVWF       FARG_string_cpyn_origen+1, 1
0x5E6E	0x5000      	MOVF        R0, 0 
0x5E70	0x277A      	ADDWF       FARG_string_cpyn_origen, 1, 1
0x5E72	0xB0D8      	BTFSC       STATUS, 0 
0x5E74	0x2B7B      	INCF        FARG_string_cpyn_origen+1, 1, 1
0x5E76	0x0E06      	MOVLW       6
0x5E78	0x6F7C      	MOVWF       FARG_string_cpyn_size, 1
0x5E7A	0xF00DEC35  	CALL        _string_cpyn, 0
;Validadora.c,1864 :: 		idNew = hexToNum(msjConst);
0x5E7E	0x0E12      	MOVLW       _msjConst
0x5E80	0x6F78      	MOVWF       FARG_hexToNum_hex, 1
0x5E82	0x0E05      	MOVLW       hi_addr(_msjConst)
0x5E84	0x6F79      	MOVWF       FARG_hexToNum_hex+1, 1
0x5E86	0xF00EEC51  	CALL        _hexToNum, 0
0x5E8A	0xF560C000  	MOVFF       R0, can_user_read_message_idNew_L0
0x5E8E	0xF561C001  	MOVFF       R1, can_user_read_message_idNew_L0+1
0x5E92	0xF562C002  	MOVFF       R2, can_user_read_message_idNew_L0+2
0x5E96	0xF563C003  	MOVFF       R3, can_user_read_message_idNew_L0+3
;Validadora.c,1866 :: 		sizeTotal += sizeKey;
0x5E9A	0x5156      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x5E9C	0x2557      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x5E9E	0x6E00      	MOVWF       R0 
0x5EA0	0xF557C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Validadora.c,1867 :: 		sizeKey = 1;  //1 Byte
0x5EA4	0x0E01      	MOVLW       1
0x5EA6	0x6F56      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Validadora.c,1868 :: 		vigencia = can.rxBuffer[sizeTotal];
0x5EA8	0x0E2A      	MOVLW       _can+107
0x5EAA	0x6EE9      	MOVWF       FSR0L 
0x5EAC	0x0E04      	MOVLW       hi_addr(_can+107)
0x5EAE	0x6EEA      	MOVWF       FSR0H 
0x5EB0	0x5000      	MOVF        R0, 0 
0x5EB2	0x26E9      	ADDWF       FSR0L, 1 
0x5EB4	0xB0D8      	BTFSC       STATUS, 0 
0x5EB6	0x2AEA      	INCF        FSR0H, 1 
0x5EB8	0xF55ACFEE  	MOVFF       POSTINC0, can_user_read_message_vigencia_L0
;Validadora.c,1870 :: 		sizeTotal += sizeKey;
0x5EBC	0x2A00      	INCF        R0, 1 
0x5EBE	0xF557C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Validadora.c,1871 :: 		sizeKey = 1;  //1 Byte
0x5EC2	0x0E01      	MOVLW       1
0x5EC4	0x6F56      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Validadora.c,1872 :: 		estatus = can.rxBuffer[sizeTotal];
0x5EC6	0x0E2A      	MOVLW       _can+107
0x5EC8	0x6EE9      	MOVWF       FSR0L 
0x5ECA	0x0E04      	MOVLW       hi_addr(_can+107)
0x5ECC	0x6EEA      	MOVWF       FSR0H 
0x5ECE	0x5000      	MOVF        R0, 0 
0x5ED0	0x26E9      	ADDWF       FSR0L, 1 
0x5ED2	0xB0D8      	BTFSC       STATUS, 0 
0x5ED4	0x2AEA      	INCF        FSR0H, 1 
0x5ED6	0xF55BCFEE  	MOVFF       POSTINC0, can_user_read_message_estatus_L0
;Validadora.c,1874 :: 		if(!mysql_write(tablePensionados, pensionadosID, fila, id, false)){
0x5EDA	0x0EEE      	MOVLW       _tablePensionados
0x5EDC	0x6F78      	MOVWF       FARG_mysql_write_name, 1
0x5EDE	0x0E02      	MOVLW       hi_addr(_tablePensionados)
0x5EE0	0x6F79      	MOVWF       FARG_mysql_write_name+1, 1
0x5EE2	0x0EFA      	MOVLW       _pensionadosID
0x5EE4	0x6F7A      	MOVWF       FARG_mysql_write_column, 1
0x5EE6	0x0E02      	MOVLW       hi_addr(_pensionadosID)
0x5EE8	0x6F7B      	MOVWF       FARG_mysql_write_column+1, 1
0x5EEA	0xF57CC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_fila
0x5EEE	0xF57DC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_fila+1
0x5EF2	0xF57EC564  	MOVFF       can_user_read_message_id_L0, FARG_mysql_write_value
0x5EF6	0xF57FC565  	MOVFF       can_user_read_message_id_L0+1, FARG_mysql_write_value+1
0x5EFA	0xF580C566  	MOVFF       can_user_read_message_id_L0+2, FARG_mysql_write_value+2
0x5EFE	0xF581C567  	MOVFF       can_user_read_message_id_L0+3, FARG_mysql_write_value+3
0x5F02	0x6B82      	CLRF        FARG_mysql_write_endWrite, 1
0x5F04	0xF014EC20  	CALL        _mysql_write, 0
0x5F08	0x5200      	MOVF        R0, 1 
0x5F0A	0xE13A      	BNZ         L_can_user_read_message874
;Validadora.c,1875 :: 		mysql_write(tablePensionados, pensionadosVigencia, fila, vigencia, false);
0x5F0C	0x0EEE      	MOVLW       _tablePensionados
0x5F0E	0x0105      	MOVLB       5
0x5F10	0x6F78      	MOVWF       FARG_mysql_write_name, 1
0x5F12	0x0E02      	MOVLW       hi_addr(_tablePensionados)
0x5F14	0x6F79      	MOVWF       FARG_mysql_write_name+1, 1
0x5F16	0x0EE4      	MOVLW       _pensionadosVigencia
0x5F18	0x6F7A      	MOVWF       FARG_mysql_write_column, 1
0x5F1A	0x0E02      	MOVLW       hi_addr(_pensionadosVigencia)
0x5F1C	0x6F7B      	MOVWF       FARG_mysql_write_column+1, 1
0x5F1E	0xF57CC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_fila
0x5F22	0xF57DC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_fila+1
0x5F26	0xF57EC55A  	MOVFF       can_user_read_message_vigencia_L0, FARG_mysql_write_value
0x5F2A	0x0E00      	MOVLW       0
0x5F2C	0x6F7F      	MOVWF       FARG_mysql_write_value+1, 1
0x5F2E	0x6F80      	MOVWF       FARG_mysql_write_value+2, 1
0x5F30	0x6F81      	MOVWF       FARG_mysql_write_value+3, 1
0x5F32	0x6B82      	CLRF        FARG_mysql_write_endWrite, 1
0x5F34	0xF014EC20  	CALL        _mysql_write, 0
;Validadora.c,1876 :: 		mysql_write(tablePensionados, pensionadosEstatus, fila, estatus, false);
0x5F38	0x0EEE      	MOVLW       _tablePensionados
0x5F3A	0x0105      	MOVLB       5
0x5F3C	0x6F78      	MOVWF       FARG_mysql_write_name, 1
0x5F3E	0x0E02      	MOVLW       hi_addr(_tablePensionados)
0x5F40	0x6F79      	MOVWF       FARG_mysql_write_name+1, 1
0x5F42	0x0ECB      	MOVLW       _pensionadosEstatus
0x5F44	0x6F7A      	MOVWF       FARG_mysql_write_column, 1
0x5F46	0x0E02      	MOVLW       hi_addr(_pensionadosEstatus)
0x5F48	0x6F7B      	MOVWF       FARG_mysql_write_column+1, 1
0x5F4A	0xF57CC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_fila
0x5F4E	0xF57DC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_fila+1
0x5F52	0xF57EC55B  	MOVFF       can_user_read_message_estatus_L0, FARG_mysql_write_value
0x5F56	0x0E00      	MOVLW       0
0x5F58	0x6F7F      	MOVWF       FARG_mysql_write_value+1, 1
0x5F5A	0x6F80      	MOVWF       FARG_mysql_write_value+2, 1
0x5F5C	0x6F81      	MOVWF       FARG_mysql_write_value+3, 1
0x5F5E	0x6B82      	CLRF        FARG_mysql_write_endWrite, 1
0x5F60	0xF014EC20  	CALL        _mysql_write, 0
;Validadora.c,1878 :: 		string_addc(bufferEeprom, CAN_TABLE_MODIFICADO);
0x5F64	0x0ED2      	MOVLW       _bufferEeprom
0x5F66	0x0105      	MOVLB       5
0x5F68	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x5F6A	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5F6C	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x5F6E	0x0EDA      	MOVLW       _CAN_TABLE_MODIFICADO
0x5F70	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x5F72	0x0E9E      	MOVLW       hi_addr(_CAN_TABLE_MODIFICADO)
0x5F74	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x5F76	0x0E00      	MOVLW       higher_addr(_CAN_TABLE_MODIFICADO)
0x5F78	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x5F7A	0xF00FEC40  	CALL        _string_addc, 0
;Validadora.c,1879 :: 		}else{
0x5F7E	0xD00D      	BRA         L_can_user_read_message875
L_can_user_read_message874:
0x5F80	0x0105      	MOVLB       5
;Validadora.c,1880 :: 		string_addc(bufferEeprom, CAN_TABLE_ERROR);
0x5F82	0x0ED2      	MOVLW       _bufferEeprom
0x5F84	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x5F86	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5F88	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x5F8A	0x0EF6      	MOVLW       _CAN_TABLE_ERROR
0x5F8C	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x5F8E	0x0E9E      	MOVLW       hi_addr(_CAN_TABLE_ERROR)
0x5F90	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x5F92	0x0E00      	MOVLW       higher_addr(_CAN_TABLE_ERROR)
0x5F94	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x5F96	0xF00FEC40  	CALL        _string_addc, 0
;Validadora.c,1881 :: 		}
L_can_user_read_message875:
;Validadora.c,1882 :: 		}
L_can_user_read_message873:
L_can_user_read_message872:
;Validadora.c,1883 :: 		}
L_can_user_read_message868:
;Validadora.c,1884 :: 		}else if(string_cmpnc(CAN_CMD, &can.rxBuffer[sizeTotal], sizeKey)){
0x5F9A	0xF033EFF6  	GOTO        L_can_user_read_message876
L_can_user_read_message867:
0x5F9E	0x0E2A      	MOVLW       _CAN_CMD
0x5FA0	0x6F78      	MOVWF       FARG_string_cmpnc_text1, 1
0x5FA2	0x0E9F      	MOVLW       hi_addr(_CAN_CMD)
0x5FA4	0x6F79      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x5FA6	0x0E00      	MOVLW       higher_addr(_CAN_CMD)
0x5FA8	0x6F7A      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x5FAA	0x0E2A      	MOVLW       _can+107
0x5FAC	0x6F7B      	MOVWF       FARG_string_cmpnc_text2, 1
0x5FAE	0x0E04      	MOVLW       hi_addr(_can+107)
0x5FB0	0x6F7C      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x5FB2	0x5157      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x5FB4	0x277B      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x5FB6	0xB0D8      	BTFSC       STATUS, 0 
0x5FB8	0x2B7C      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x5FBA	0xF57DC556  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x5FBE	0xF016EC7C  	CALL        _string_cmpnc, 0
0x5FC2	0x5200      	MOVF        R0, 1 
0x5FC4	0xB4D8      	BTFSC       STATUS, 2 
0x5FC6	0xF033EFF6  	GOTO        L_can_user_read_message877
;Validadora.c,1885 :: 		sizeTotal += sizeKey;
0x5FCA	0x5156      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x5FCC	0x2557      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x5FCE	0x6E00      	MOVWF       R0 
0x5FD0	0xF557C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Validadora.c,1886 :: 		sizeKey = sizeof(CAN_PASSBACK)-1;
0x5FD4	0x0E03      	MOVLW       3
0x5FD6	0x6F56      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Validadora.c,1888 :: 		if(string_cmpnc(CAN_PASSBACK, &can.rxBuffer[sizeTotal], sizeKey)){
0x5FD8	0x0E56      	MOVLW       _CAN_PASSBACK
0x5FDA	0x6F78      	MOVWF       FARG_string_cmpnc_text1, 1
0x5FDC	0x0E9F      	MOVLW       hi_addr(_CAN_PASSBACK)
0x5FDE	0x6F79      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x5FE0	0x0E00      	MOVLW       higher_addr(_CAN_PASSBACK)
0x5FE2	0x6F7A      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x5FE4	0x0E2A      	MOVLW       _can+107
0x5FE6	0x6F7B      	MOVWF       FARG_string_cmpnc_text2, 1
0x5FE8	0x0E04      	MOVLW       hi_addr(_can+107)
0x5FEA	0x6F7C      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x5FEC	0x5000      	MOVF        R0, 0 
0x5FEE	0x277B      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x5FF0	0xB0D8      	BTFSC       STATUS, 0 
0x5FF2	0x2B7C      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x5FF4	0x0E03      	MOVLW       3
0x5FF6	0x6F7D      	MOVWF       FARG_string_cmpnc_bytes, 1
0x5FF8	0xF016EC7C  	CALL        _string_cmpnc, 0
0x5FFC	0x5200      	MOVF        R0, 1 
0x5FFE	0xB4D8      	BTFSC       STATUS, 2 
0x6000	0xD0A6      	BRA         L_can_user_read_message878
;Validadora.c,1889 :: 		sizeTotal += sizeKey;
0x6002	0x5156      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x6004	0x2557      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x6006	0x6E00      	MOVWF       R0 
0x6008	0xF557C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Validadora.c,1891 :: 		if(can.rxBuffer[sizeTotal] == '1')
0x600C	0x0E2A      	MOVLW       _can+107
0x600E	0x6EE9      	MOVWF       FSR0L 
0x6010	0x0E04      	MOVLW       hi_addr(_can+107)
0x6012	0x6EEA      	MOVWF       FSR0H 
0x6014	0x5000      	MOVF        R0, 0 
0x6016	0x26E9      	ADDWF       FSR0L, 1 
0x6018	0xB0D8      	BTFSC       STATUS, 0 
0x601A	0x2AEA      	INCF        FSR0H, 1 
0x601C	0x50EE      	MOVF        POSTINC0, 0 
0x601E	0x0A31      	XORLW       49
0x6020	0xE104      	BNZ         L_can_user_read_message879
;Validadora.c,1892 :: 		canSynchrony = true;
0x6022	0x0E01      	MOVLW       1
0x6024	0x0102      	MOVLB       2
0x6026	0x6FD3      	MOVWF       _canSynchrony, 1
0x6028	0xD002      	BRA         L_can_user_read_message880
L_can_user_read_message879:
0x602A	0x0102      	MOVLB       2
;Validadora.c,1894 :: 		canSynchrony = false;
0x602C	0x6BD3      	CLRF        _canSynchrony, 1
L_can_user_read_message880:
;Validadora.c,1895 :: 		mysql_write(tableSyncronia, columnaEstado, 1, canSynchrony, false);
0x602E	0x0E33      	MOVLW       _tableSyncronia
0x6030	0x0105      	MOVLB       5
0x6032	0x6F78      	MOVWF       FARG_mysql_write_name, 1
0x6034	0x0E01      	MOVLW       hi_addr(_tableSyncronia)
0x6036	0x6F79      	MOVWF       FARG_mysql_write_name+1, 1
0x6038	0x0ED9      	MOVLW       _columnaEstado
0x603A	0x6F7A      	MOVWF       FARG_mysql_write_column, 1
0x603C	0x0E01      	MOVLW       hi_addr(_columnaEstado)
0x603E	0x6F7B      	MOVWF       FARG_mysql_write_column+1, 1
0x6040	0x0E01      	MOVLW       1
0x6042	0x6F7C      	MOVWF       FARG_mysql_write_fila, 1
0x6044	0x0E00      	MOVLW       0
0x6046	0x6F7D      	MOVWF       FARG_mysql_write_fila+1, 1
0x6048	0xF57EC2D3  	MOVFF       _canSynchrony, FARG_mysql_write_value
0x604C	0x0E00      	MOVLW       0
0x604E	0x6F7F      	MOVWF       FARG_mysql_write_value+1, 1
0x6050	0x6F80      	MOVWF       FARG_mysql_write_value+2, 1
0x6052	0x6F81      	MOVWF       FARG_mysql_write_value+3, 1
0x6054	0x6B82      	CLRF        FARG_mysql_write_endWrite, 1
0x6056	0xF014EC20  	CALL        _mysql_write, 0
;Validadora.c,1898 :: 		lcd_clean_row(3);
0x605A	0x0E03      	MOVLW       3
0x605C	0x0105      	MOVLB       5
0x605E	0x6F78      	MOVWF       FARG_lcd_clean_row_fila, 1
0x6060	0xF00FECA1  	CALL        _lcd_clean_row, 0
;Validadora.c,1899 :: 		lcd_out(3,1,canSynchrony? "Sincronizado":"Desincronizado");
0x6064	0x0E03      	MOVLW       3
0x6066	0x6F78      	MOVWF       FARG_Lcd_Out_row, 1
0x6068	0x0E01      	MOVLW       1
0x606A	0x6F79      	MOVWF       FARG_Lcd_Out_column, 1
0x606C	0x0102      	MOVLB       2
0x606E	0x53D3      	MOVF        _canSynchrony, 1, 1
0x6070	0xE006      	BZ          L_can_user_read_message881
0x6072	0x0E78      	MOVLW       ?lstr40_Validadora
0x6074	0x0105      	MOVLB       5
0x6076	0x6F54      	MOVWF       ?FLOC___can_user_read_messageT3810, 1
0x6078	0x0E02      	MOVLW       hi_addr(?lstr40_Validadora)
0x607A	0x6F55      	MOVWF       ?FLOC___can_user_read_messageT3810+1, 1
0x607C	0xD005      	BRA         L_can_user_read_message882
L_can_user_read_message881:
0x607E	0x0105      	MOVLB       5
0x6080	0x0E4A      	MOVLW       ?lstr41_Validadora
0x6082	0x6F54      	MOVWF       ?FLOC___can_user_read_messageT3810, 1
0x6084	0x0E02      	MOVLW       hi_addr(?lstr41_Validadora)
0x6086	0x6F55      	MOVWF       ?FLOC___can_user_read_messageT3810+1, 1
L_can_user_read_message882:
0x6088	0xF57AC554  	MOVFF       ?FLOC___can_user_read_messageT3810, FARG_Lcd_Out_text
0x608C	0xF57BC555  	MOVFF       ?FLOC___can_user_read_messageT3810+1, FARG_Lcd_Out_text+1
0x6090	0xF012EC66  	CALL        _Lcd_Out, 0
;Validadora.c,1901 :: 		string_cpyc(bufferEeprom, CAN_TPV);        //SYN
0x6094	0x0ED2      	MOVLW       _bufferEeprom
0x6096	0x0105      	MOVLB       5
0x6098	0x6F78      	MOVWF       FARG_string_cpyc_destino, 1
0x609A	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x609C	0x6F79      	MOVWF       FARG_string_cpyc_destino+1, 1
0x609E	0x0E0E      	MOVLW       _CAN_TPV
0x60A0	0x6F7A      	MOVWF       FARG_string_cpyc_origen, 1
0x60A2	0x0E9F      	MOVLW       hi_addr(_CAN_TPV)
0x60A4	0x6F7B      	MOVWF       FARG_string_cpyc_origen+1, 1
0x60A6	0x0E00      	MOVLW       higher_addr(_CAN_TPV)
0x60A8	0x6F7C      	MOVWF       FARG_string_cpyc_origen+2, 1
0x60AA	0xF014ECBC  	CALL        _string_cpyc, 0
;Validadora.c,1902 :: 		string_addc(bufferEeprom, CAN_CMD);
0x60AE	0x0ED2      	MOVLW       _bufferEeprom
0x60B0	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x60B2	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x60B4	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x60B6	0x0E2A      	MOVLW       _CAN_CMD
0x60B8	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x60BA	0x0E9F      	MOVLW       hi_addr(_CAN_CMD)
0x60BC	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x60BE	0x0E00      	MOVLW       higher_addr(_CAN_CMD)
0x60C0	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x60C2	0xF00FEC40  	CALL        _string_addc, 0
;Validadora.c,1903 :: 		string_addc(bufferEeprom, CAN_PASSBACK);
0x60C6	0x0ED2      	MOVLW       _bufferEeprom
0x60C8	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x60CA	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x60CC	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x60CE	0x0E56      	MOVLW       _CAN_PASSBACK
0x60D0	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x60D2	0x0E9F      	MOVLW       hi_addr(_CAN_PASSBACK)
0x60D4	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x60D6	0x0E00      	MOVLW       higher_addr(_CAN_PASSBACK)
0x60D8	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x60DA	0xF00FEC40  	CALL        _string_addc, 0
;Validadora.c,1904 :: 		string_push(buffereeprom, canSynchrony+'0');
0x60DE	0x0ED2      	MOVLW       _bufferEeprom
0x60E0	0x6F78      	MOVWF       FARG_string_push_texto, 1
0x60E2	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x60E4	0x6F79      	MOVWF       FARG_string_push_texto+1, 1
0x60E6	0x0E30      	MOVLW       48
0x60E8	0x0102      	MOVLB       2
0x60EA	0x25D3      	ADDWF       _canSynchrony, 0, 1
0x60EC	0x0105      	MOVLB       5
0x60EE	0x6F7A      	MOVWF       FARG_string_push_caracter, 1
0x60F0	0xF014ECEF  	CALL        _string_push, 0
;Validadora.c,1906 :: 		string_cpyc(msjConst, CAN_MODULE);
0x60F4	0x0E12      	MOVLW       _msjConst
0x60F6	0x6F78      	MOVWF       FARG_string_cpyc_destino, 1
0x60F8	0x0E05      	MOVLW       hi_addr(_msjConst)
0x60FA	0x6F79      	MOVWF       FARG_string_cpyc_destino+1, 1
0x60FC	0x0E86      	MOVLW       _CAN_MODULE
0x60FE	0x6F7A      	MOVWF       FARG_string_cpyc_origen, 1
0x6100	0x0E9F      	MOVLW       hi_addr(_CAN_MODULE)
0x6102	0x6F7B      	MOVWF       FARG_string_cpyc_origen+1, 1
0x6104	0x0E00      	MOVLW       higher_addr(_CAN_MODULE)
0x6106	0x6F7C      	MOVWF       FARG_string_cpyc_origen+2, 1
0x6108	0xF014ECBC  	CALL        _string_cpyc, 0
;Validadora.c,1907 :: 		numToHex(can.id, &msjConst[1], 1);
0x610C	0xF578C3CB  	MOVFF       _can+12, FARG_numToHex_valor
0x6110	0x0E00      	MOVLW       0
0x6112	0x6F79      	MOVWF       FARG_numToHex_valor+1, 1
0x6114	0x6F7A      	MOVWF       FARG_numToHex_valor+2, 1
0x6116	0x6F7B      	MOVWF       FARG_numToHex_valor+3, 1
0x6118	0x0E13      	MOVLW       _msjConst+1
0x611A	0x6F7C      	MOVWF       FARG_numToHex_cadena, 1
0x611C	0x0E05      	MOVLW       hi_addr(_msjConst+1)
0x611E	0x6F7D      	MOVWF       FARG_numToHex_cadena+1, 1
0x6120	0x0E01      	MOVLW       1
0x6122	0x6F7E      	MOVWF       FARG_numToHex_bytes, 1
0x6124	0xF00DECAD  	CALL        _numToHex, 0
;Validadora.c,1908 :: 		string_add(bufferEeprom, msjConst);
0x6128	0x0ED2      	MOVLW       _bufferEeprom
0x612A	0x6F78      	MOVWF       FARG_string_add_destino, 1
0x612C	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x612E	0x6F79      	MOVWF       FARG_string_add_destino+1, 1
0x6130	0x0E12      	MOVLW       _msjConst
0x6132	0x6F7A      	MOVWF       FARG_string_add_addEnd, 1
0x6134	0x0E05      	MOVLW       hi_addr(_msjConst)
0x6136	0x6F7B      	MOVWF       FARG_string_add_addEnd+1, 1
0x6138	0xF016EC4C  	CALL        _string_add, 0
;Validadora.c,1910 :: 		buffer_save_send(true, bufferEeprom);
0x613C	0x0E01      	MOVLW       1
0x613E	0x6F78      	MOVWF       FARG_buffer_save_send_guardar, 1
0x6140	0x0ED2      	MOVLW       _bufferEeprom
0x6142	0x6F79      	MOVWF       FARG_buffer_save_send_buffer, 1
0x6144	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x6146	0x6F7A      	MOVWF       FARG_buffer_save_send_buffer+1, 1
0x6148	0xF00FECCD  	CALL        _buffer_save_send, 0
;Validadora.c,1915 :: 		}else if(string_cmpnc(CAN_ABRIR, &can.rxBuffer[sizeTotal], sizeKey)){
0x614C	0xD34F      	BRA         L_can_user_read_message883
L_can_user_read_message878:
0x614E	0x0E26      	MOVLW       _CAN_ABRIR
0x6150	0x0105      	MOVLB       5
0x6152	0x6F78      	MOVWF       FARG_string_cmpnc_text1, 1
0x6154	0x0E9F      	MOVLW       hi_addr(_CAN_ABRIR)
0x6156	0x6F79      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x6158	0x0E00      	MOVLW       higher_addr(_CAN_ABRIR)
0x615A	0x6F7A      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x615C	0x0E2A      	MOVLW       _can+107
0x615E	0x6F7B      	MOVWF       FARG_string_cmpnc_text2, 1
0x6160	0x0E04      	MOVLW       hi_addr(_can+107)
0x6162	0x6F7C      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x6164	0x5157      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x6166	0x277B      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x6168	0xB0D8      	BTFSC       STATUS, 0 
0x616A	0x2B7C      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x616C	0xF57DC556  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x6170	0xF016EC7C  	CALL        _string_cmpnc, 0
0x6174	0x5200      	MOVF        R0, 1 
0x6176	0xE065      	BZ          L_can_user_read_message884
;Validadora.c,1917 :: 		abrirBarrera = true;
0x6178	0x0E01      	MOVLW       1
0x617A	0x0103      	MOVLB       3
0x617C	0x6F31      	MOVWF       _abrirBarrera, 1
;Validadora.c,1918 :: 		SALIDA_RELE1 = 1;
0x617E	0x8A80      	BSF         PORTA, 5 
;Validadora.c,1919 :: 		SALIDA_RELE2 = 1;
0x6180	0x8084      	BSF         PORTE, 0 
;Validadora.c,1920 :: 		timer1_reset();
0x6182	0xF00DEC30  	CALL        _timer1_reset, 0
;Validadora.c,1921 :: 		timer1_enable(true);
0x6186	0x0E01      	MOVLW       1
0x6188	0x0105      	MOVLB       5
0x618A	0x6F78      	MOVWF       FARG_timer1_enable_enable, 1
0x618C	0xF012EC5F  	CALL        _timer1_enable, 0
;Validadora.c,1923 :: 		string_cpyc(bufferEeprom, CAN_TPV);        //SYN
0x6190	0x0ED2      	MOVLW       _bufferEeprom
0x6192	0x6F78      	MOVWF       FARG_string_cpyc_destino, 1
0x6194	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x6196	0x6F79      	MOVWF       FARG_string_cpyc_destino+1, 1
0x6198	0x0E0E      	MOVLW       _CAN_TPV
0x619A	0x6F7A      	MOVWF       FARG_string_cpyc_origen, 1
0x619C	0x0E9F      	MOVLW       hi_addr(_CAN_TPV)
0x619E	0x6F7B      	MOVWF       FARG_string_cpyc_origen+1, 1
0x61A0	0x0E00      	MOVLW       higher_addr(_CAN_TPV)
0x61A2	0x6F7C      	MOVWF       FARG_string_cpyc_origen+2, 1
0x61A4	0xF014ECBC  	CALL        _string_cpyc, 0
;Validadora.c,1924 :: 		string_addc(bufferEeprom, CAN_CMD);
0x61A8	0x0ED2      	MOVLW       _bufferEeprom
0x61AA	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x61AC	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x61AE	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x61B0	0x0E2A      	MOVLW       _CAN_CMD
0x61B2	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x61B4	0x0E9F      	MOVLW       hi_addr(_CAN_CMD)
0x61B6	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x61B8	0x0E00      	MOVLW       higher_addr(_CAN_CMD)
0x61BA	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x61BC	0xF00FEC40  	CALL        _string_addc, 0
;Validadora.c,1925 :: 		string_addc(bufferEeprom, CAN_ABRIR);
0x61C0	0x0ED2      	MOVLW       _bufferEeprom
0x61C2	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x61C4	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x61C6	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x61C8	0x0E26      	MOVLW       _CAN_ABRIR
0x61CA	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x61CC	0x0E9F      	MOVLW       hi_addr(_CAN_ABRIR)
0x61CE	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x61D0	0x0E00      	MOVLW       higher_addr(_CAN_ABRIR)
0x61D2	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x61D4	0xF00FEC40  	CALL        _string_addc, 0
;Validadora.c,1926 :: 		string_push(buffereeprom, '1');            //Abrio la barrera
0x61D8	0x0ED2      	MOVLW       _bufferEeprom
0x61DA	0x6F78      	MOVWF       FARG_string_push_texto, 1
0x61DC	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x61DE	0x6F79      	MOVWF       FARG_string_push_texto+1, 1
0x61E0	0x0E31      	MOVLW       49
0x61E2	0x6F7A      	MOVWF       FARG_string_push_caracter, 1
0x61E4	0xF014ECEF  	CALL        _string_push, 0
;Validadora.c,1928 :: 		string_cpyc(msjConst, CAN_MODULE);
0x61E8	0x0E12      	MOVLW       _msjConst
0x61EA	0x6F78      	MOVWF       FARG_string_cpyc_destino, 1
0x61EC	0x0E05      	MOVLW       hi_addr(_msjConst)
0x61EE	0x6F79      	MOVWF       FARG_string_cpyc_destino+1, 1
0x61F0	0x0E86      	MOVLW       _CAN_MODULE
0x61F2	0x6F7A      	MOVWF       FARG_string_cpyc_origen, 1
0x61F4	0x0E9F      	MOVLW       hi_addr(_CAN_MODULE)
0x61F6	0x6F7B      	MOVWF       FARG_string_cpyc_origen+1, 1
0x61F8	0x0E00      	MOVLW       higher_addr(_CAN_MODULE)
0x61FA	0x6F7C      	MOVWF       FARG_string_cpyc_origen+2, 1
0x61FC	0xF014ECBC  	CALL        _string_cpyc, 0
;Validadora.c,1929 :: 		numToHex(can.id, &msjConst[1], 1);
0x6200	0xF578C3CB  	MOVFF       _can+12, FARG_numToHex_valor
0x6204	0x0E00      	MOVLW       0
0x6206	0x6F79      	MOVWF       FARG_numToHex_valor+1, 1
0x6208	0x6F7A      	MOVWF       FARG_numToHex_valor+2, 1
0x620A	0x6F7B      	MOVWF       FARG_numToHex_valor+3, 1
0x620C	0x0E13      	MOVLW       _msjConst+1
0x620E	0x6F7C      	MOVWF       FARG_numToHex_cadena, 1
0x6210	0x0E05      	MOVLW       hi_addr(_msjConst+1)
0x6212	0x6F7D      	MOVWF       FARG_numToHex_cadena+1, 1
0x6214	0x0E01      	MOVLW       1
0x6216	0x6F7E      	MOVWF       FARG_numToHex_bytes, 1
0x6218	0xF00DECAD  	CALL        _numToHex, 0
;Validadora.c,1930 :: 		string_add(bufferEeprom, msjConst);
0x621C	0x0ED2      	MOVLW       _bufferEeprom
0x621E	0x6F78      	MOVWF       FARG_string_add_destino, 1
0x6220	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x6222	0x6F79      	MOVWF       FARG_string_add_destino+1, 1
0x6224	0x0E12      	MOVLW       _msjConst
0x6226	0x6F7A      	MOVWF       FARG_string_add_addEnd, 1
0x6228	0x0E05      	MOVLW       hi_addr(_msjConst)
0x622A	0x6F7B      	MOVWF       FARG_string_add_addEnd+1, 1
0x622C	0xF016EC4C  	CALL        _string_add, 0
;Validadora.c,1932 :: 		buffer_save_send(true, bufferEeprom);
0x6230	0x0E01      	MOVLW       1
0x6232	0x6F78      	MOVWF       FARG_buffer_save_send_guardar, 1
0x6234	0x0ED2      	MOVLW       _bufferEeprom
0x6236	0x6F79      	MOVWF       FARG_buffer_save_send_buffer, 1
0x6238	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x623A	0x6F7A      	MOVWF       FARG_buffer_save_send_buffer+1, 1
0x623C	0xF00FECCD  	CALL        _buffer_save_send, 0
;Validadora.c,1936 :: 		}else if(string_cmpnc(CAN_KEY, &can.rxBuffer[sizeTotal], sizeKey)){
0x6240	0xD2D5      	BRA         L_can_user_read_message885
L_can_user_read_message884:
0x6242	0x0E46      	MOVLW       _CAN_KEY
0x6244	0x0105      	MOVLB       5
0x6246	0x6F78      	MOVWF       FARG_string_cmpnc_text1, 1
0x6248	0x0E9F      	MOVLW       hi_addr(_CAN_KEY)
0x624A	0x6F79      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x624C	0x0E00      	MOVLW       higher_addr(_CAN_KEY)
0x624E	0x6F7A      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x6250	0x0E2A      	MOVLW       _can+107
0x6252	0x6F7B      	MOVWF       FARG_string_cmpnc_text2, 1
0x6254	0x0E04      	MOVLW       hi_addr(_can+107)
0x6256	0x6F7C      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x6258	0x5157      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x625A	0x277B      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x625C	0xB0D8      	BTFSC       STATUS, 0 
0x625E	0x2B7C      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x6260	0xF57DC556  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x6264	0xF016EC7C  	CALL        _string_cmpnc, 0
0x6268	0x5200      	MOVF        R0, 1 
0x626A	0xB4D8      	BTFSC       STATUS, 2 
0x626C	0xD2BF      	BRA         L_can_user_read_message886
;Validadora.c,1937 :: 		sizeTotal += sizeKey;
0x626E	0x5156      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x6270	0x2557      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x6272	0x6E00      	MOVWF       R0 
0x6274	0xF557C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Validadora.c,1938 :: 		sizeKey = sizeof(CAN_NIP)-1;
0x6278	0x0E03      	MOVLW       3
0x627A	0x6F56      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Validadora.c,1940 :: 		if(string_cmpnc(CAN_NIP, &can.rxBuffer[sizeTotal], sizeKey)){
0x627C	0x0E4A      	MOVLW       _CAN_NIP
0x627E	0x6F78      	MOVWF       FARG_string_cmpnc_text1, 1
0x6280	0x0E9F      	MOVLW       hi_addr(_CAN_NIP)
0x6282	0x6F79      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x6284	0x0E00      	MOVLW       higher_addr(_CAN_NIP)
0x6286	0x6F7A      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x6288	0x0E2A      	MOVLW       _can+107
0x628A	0x6F7B      	MOVWF       FARG_string_cmpnc_text2, 1
0x628C	0x0E04      	MOVLW       hi_addr(_can+107)
0x628E	0x6F7C      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x6290	0x5000      	MOVF        R0, 0 
0x6292	0x277B      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x6294	0xB0D8      	BTFSC       STATUS, 0 
0x6296	0x2B7C      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x6298	0x0E03      	MOVLW       3
0x629A	0x6F7D      	MOVWF       FARG_string_cmpnc_bytes, 1
0x629C	0xF016EC7C  	CALL        _string_cmpnc, 0
0x62A0	0x5200      	MOVF        R0, 1 
0x62A2	0xB4D8      	BTFSC       STATUS, 2 
0x62A4	0xD147      	BRA         L_can_user_read_message887
;Validadora.c,1941 :: 		sizeTotal += sizeKey;
0x62A6	0x5156      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x62A8	0x2557      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x62AA	0x6E00      	MOVWF       R0 
0x62AC	0xF557C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Validadora.c,1942 :: 		string_cpyn(msjConst, &can.rxBuffer[sizeTotal], 8);
0x62B0	0x0E12      	MOVLW       _msjConst
0x62B2	0x6F78      	MOVWF       FARG_string_cpyn_destino, 1
0x62B4	0x0E05      	MOVLW       hi_addr(_msjConst)
0x62B6	0x6F79      	MOVWF       FARG_string_cpyn_destino+1, 1
0x62B8	0x0E2A      	MOVLW       _can+107
0x62BA	0x6F7A      	MOVWF       FARG_string_cpyn_origen, 1
0x62BC	0x0E04      	MOVLW       hi_addr(_can+107)
0x62BE	0x6F7B      	MOVWF       FARG_string_cpyn_origen+1, 1
0x62C0	0x5000      	MOVF        R0, 0 
0x62C2	0x277A      	ADDWF       FARG_string_cpyn_origen, 1, 1
0x62C4	0xB0D8      	BTFSC       STATUS, 0 
0x62C6	0x2B7B      	INCF        FARG_string_cpyn_origen+1, 1, 1
0x62C8	0x0E08      	MOVLW       8
0x62CA	0x6F7C      	MOVWF       FARG_string_cpyn_size, 1
0x62CC	0xF00DEC35  	CALL        _string_cpyn, 0
;Validadora.c,1943 :: 		nip = hexToNum(msjConst);
0x62D0	0x0E12      	MOVLW       _msjConst
0x62D2	0x6F78      	MOVWF       FARG_hexToNum_hex, 1
0x62D4	0x0E05      	MOVLW       hi_addr(_msjConst)
0x62D6	0x6F79      	MOVWF       FARG_hexToNum_hex+1, 1
0x62D8	0xF00EEC51  	CALL        _hexToNum, 0
0x62DC	0xF568C000  	MOVFF       R0, can_user_read_message_nip_L0
0x62E0	0xF569C001  	MOVFF       R1, can_user_read_message_nip_L0+1
0x62E4	0xF56AC002  	MOVFF       R2, can_user_read_message_nip_L0+2
0x62E8	0xF56BC003  	MOVFF       R3, can_user_read_message_nip_L0+3
;Validadora.c,1945 :: 		string_cpyn(msjConst, &can.rxBuffer[sizeTotal+8], 12);
0x62EC	0x0E12      	MOVLW       _msjConst
0x62EE	0x6F78      	MOVWF       FARG_string_cpyn_destino, 1
0x62F0	0x0E05      	MOVLW       hi_addr(_msjConst)
0x62F2	0x6F79      	MOVWF       FARG_string_cpyn_destino+1, 1
0x62F4	0x0E08      	MOVLW       8
0x62F6	0x2557      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x62F8	0x6E00      	MOVWF       R0 
0x62FA	0x6A01      	CLRF        R1 
0x62FC	0x0E00      	MOVLW       0
0x62FE	0x2201      	ADDWFC      R1, 1 
0x6300	0x0E2A      	MOVLW       _can+107
0x6302	0x2400      	ADDWF       R0, 0 
0x6304	0x6F7A      	MOVWF       FARG_string_cpyn_origen, 1
0x6306	0x0E04      	MOVLW       hi_addr(_can+107)
0x6308	0x2001      	ADDWFC      R1, 0 
0x630A	0x6F7B      	MOVWF       FARG_string_cpyn_origen+1, 1
0x630C	0x0E0C      	MOVLW       12
0x630E	0x6F7C      	MOVWF       FARG_string_cpyn_size, 1
0x6310	0xF00DEC35  	CALL        _string_cpyn, 0
;Validadora.c,1947 :: 		if(!mysql_search_forced(tableKeyOutNip, keyOutNip, nip, &fila)){
0x6314	0x0EFF      	MOVLW       _tableKeyOutNip
0x6316	0x6F78      	MOVWF       FARG_mysql_search_forced_tabla, 1
0x6318	0x0E00      	MOVLW       hi_addr(_tableKeyOutNip)
0x631A	0x6F79      	MOVWF       FARG_mysql_search_forced_tabla+1, 1
0x631C	0x0E1E      	MOVLW       _keyOutNip
0x631E	0x6F7A      	MOVWF       FARG_mysql_search_forced_columna, 1
0x6320	0x0E01      	MOVLW       hi_addr(_keyOutNip)
0x6322	0x6F7B      	MOVWF       FARG_mysql_search_forced_columna+1, 1
0x6324	0xF57CC568  	MOVFF       can_user_read_message_nip_L0, FARG_mysql_search_forced_buscar
0x6328	0xF57DC569  	MOVFF       can_user_read_message_nip_L0+1, FARG_mysql_search_forced_buscar+1
0x632C	0xF57EC56A  	MOVFF       can_user_read_message_nip_L0+2, FARG_mysql_search_forced_buscar+2
0x6330	0xF57FC56B  	MOVFF       can_user_read_message_nip_L0+3, FARG_mysql_search_forced_buscar+3
0x6334	0x0E58      	MOVLW       can_user_read_message_fila_L0
0x6336	0x6F80      	MOVWF       FARG_mysql_search_forced_fila, 1
0x6338	0x0E05      	MOVLW       hi_addr(can_user_read_message_fila_L0)
0x633A	0x6F81      	MOVWF       FARG_mysql_search_forced_fila+1, 1
0x633C	0xF00BEC0D  	CALL        _mysql_search_forced, 0
0x6340	0x5200      	MOVF        R0, 1 
0x6342	0xE132      	BNZ         L_can_user_read_message888
;Validadora.c,1948 :: 		estatus = '0';
0x6344	0x0E30      	MOVLW       48
0x6346	0x0105      	MOVLB       5
0x6348	0x6F5B      	MOVWF       can_user_read_message_estatus_L0, 1
;Validadora.c,1949 :: 		mysql_write_forced(tableKeyOutNip, keyOutEstatus, fila, &estatus, sizeof(estatus));
0x634A	0x0EFF      	MOVLW       _tableKeyOutNip
0x634C	0x6F86      	MOVWF       FARG_mysql_write_forced_name, 1
0x634E	0x0E00      	MOVLW       hi_addr(_tableKeyOutNip)
0x6350	0x6F87      	MOVWF       FARG_mysql_write_forced_name+1, 1
0x6352	0x0E16      	MOVLW       _keyOutEstatus
0x6354	0x6F88      	MOVWF       FARG_mysql_write_forced_column, 1
0x6356	0x0E01      	MOVLW       hi_addr(_keyOutEstatus)
0x6358	0x6F89      	MOVWF       FARG_mysql_write_forced_column+1, 1
0x635A	0xF58AC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_forced_fila
0x635E	0xF58BC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_forced_fila+1
0x6362	0x0E5B      	MOVLW       can_user_read_message_estatus_L0
0x6364	0x6F8C      	MOVWF       FARG_mysql_write_forced_texto, 1
0x6366	0x0E05      	MOVLW       hi_addr(can_user_read_message_estatus_L0)
0x6368	0x6F8D      	MOVWF       FARG_mysql_write_forced_texto+1, 1
0x636A	0x0E01      	MOVLW       1
0x636C	0x6F8E      	MOVWF       FARG_mysql_write_forced_bytes, 1
0x636E	0xF008EC72  	CALL        _mysql_write_forced, 0
;Validadora.c,1950 :: 		auxNip = -1;  //Nip invalido
0x6372	0x0EFF      	MOVLW       255
0x6374	0x0105      	MOVLB       5
0x6376	0x6F74      	MOVWF       can_user_read_message_auxNip_L0, 1
0x6378	0x0EFF      	MOVLW       255
0x637A	0x6F75      	MOVWF       can_user_read_message_auxNip_L0+1, 1
0x637C	0x6F76      	MOVWF       can_user_read_message_auxNip_L0+2, 1
0x637E	0x6F77      	MOVWF       can_user_read_message_auxNip_L0+3, 1
;Validadora.c,1951 :: 		mysql_write_forced(tableKeyOutNip, keyOutNip, fila, (char*)&auxNip, sizeof(auxNip));
0x6380	0x0EFF      	MOVLW       _tableKeyOutNip
0x6382	0x6F86      	MOVWF       FARG_mysql_write_forced_name, 1
0x6384	0x0E00      	MOVLW       hi_addr(_tableKeyOutNip)
0x6386	0x6F87      	MOVWF       FARG_mysql_write_forced_name+1, 1
0x6388	0x0E1E      	MOVLW       _keyOutNip
0x638A	0x6F88      	MOVWF       FARG_mysql_write_forced_column, 1
0x638C	0x0E01      	MOVLW       hi_addr(_keyOutNip)
0x638E	0x6F89      	MOVWF       FARG_mysql_write_forced_column+1, 1
0x6390	0xF58AC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_forced_fila
0x6394	0xF58BC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_forced_fila+1
0x6398	0x0E74      	MOVLW       can_user_read_message_auxNip_L0
0x639A	0x6F8C      	MOVWF       FARG_mysql_write_forced_texto, 1
0x639C	0x0E05      	MOVLW       hi_addr(can_user_read_message_auxNip_L0)
0x639E	0x6F8D      	MOVWF       FARG_mysql_write_forced_texto+1, 1
0x63A0	0x0E04      	MOVLW       4
0x63A2	0x6F8E      	MOVWF       FARG_mysql_write_forced_bytes, 1
0x63A4	0xF008EC72  	CALL        _mysql_write_forced, 0
;Validadora.c,1952 :: 		}
L_can_user_read_message888:
;Validadora.c,1954 :: 		mysql_write_roundTrip(tableKeyOutNip, keyOutEstatus, "1", 1);
0x63A8	0x0EFF      	MOVLW       _tableKeyOutNip
0x63AA	0x0105      	MOVLB       5
0x63AC	0x6F86      	MOVWF       FARG_mysql_write_roundTrip_name, 1
0x63AE	0x0E00      	MOVLW       hi_addr(_tableKeyOutNip)
0x63B0	0x6F87      	MOVWF       FARG_mysql_write_roundTrip_name+1, 1
0x63B2	0x0E16      	MOVLW       _keyOutEstatus
0x63B4	0x6F88      	MOVWF       FARG_mysql_write_roundTrip_column, 1
0x63B6	0x0E01      	MOVLW       hi_addr(_keyOutEstatus)
0x63B8	0x6F89      	MOVWF       FARG_mysql_write_roundTrip_column+1, 1
0x63BA	0x0E48      	MOVLW       ?lstr42_Validadora
0x63BC	0x6F8A      	MOVWF       FARG_mysql_write_roundTrip_texto, 1
0x63BE	0x0E02      	MOVLW       hi_addr(?lstr42_Validadora)
0x63C0	0x6F8B      	MOVWF       FARG_mysql_write_roundTrip_texto+1, 1
0x63C2	0x0E01      	MOVLW       1
0x63C4	0x6F8C      	MOVWF       FARG_mysql_write_roundTrip_bytes, 1
0x63C6	0xF006EC89  	CALL        _mysql_write_roundTrip, 0
;Validadora.c,1955 :: 		mysql_write_forced(tableKeyOutNip, keyOutNip, myTable.rowAct, (char*)&nip, sizeof(nip));
0x63CA	0x0EFF      	MOVLW       _tableKeyOutNip
0x63CC	0x0105      	MOVLB       5
0x63CE	0x6F86      	MOVWF       FARG_mysql_write_forced_name, 1
0x63D0	0x0E00      	MOVLW       hi_addr(_tableKeyOutNip)
0x63D2	0x6F87      	MOVWF       FARG_mysql_write_forced_name+1, 1
0x63D4	0x0E1E      	MOVLW       _keyOutNip
0x63D6	0x6F88      	MOVWF       FARG_mysql_write_forced_column, 1
0x63D8	0x0E01      	MOVLW       hi_addr(_keyOutNip)
0x63DA	0x6F89      	MOVWF       FARG_mysql_write_forced_column+1, 1
0x63DC	0xF58AC38F  	MOVFF       Validadora_myTable+4, FARG_mysql_write_forced_fila
0x63E0	0xF58BC390  	MOVFF       Validadora_myTable+5, FARG_mysql_write_forced_fila+1
0x63E4	0x0E68      	MOVLW       can_user_read_message_nip_L0
0x63E6	0x6F8C      	MOVWF       FARG_mysql_write_forced_texto, 1
0x63E8	0x0E05      	MOVLW       hi_addr(can_user_read_message_nip_L0)
0x63EA	0x6F8D      	MOVWF       FARG_mysql_write_forced_texto+1, 1
0x63EC	0x0E04      	MOVLW       4
0x63EE	0x6F8E      	MOVWF       FARG_mysql_write_forced_bytes, 1
0x63F0	0xF008EC72  	CALL        _mysql_write_forced, 0
;Validadora.c,1956 :: 		mysql_write_forced(tableKeyOutNip, keyOutDate, myTable.rowAct, msjConst, string_len(msjConst)+1);
0x63F4	0x0E12      	MOVLW       _msjConst
0x63F6	0x0105      	MOVLB       5
0x63F8	0x6F86      	MOVWF       FARG_string_len_texto, 1
0x63FA	0x0E05      	MOVLW       hi_addr(_msjConst)
0x63FC	0x6F87      	MOVWF       FARG_string_len_texto+1, 1
0x63FE	0xF007EC95  	CALL        _string_len, 0
0x6402	0x5000      	MOVF        R0, 0 
0x6404	0x0F01      	ADDLW       1
0x6406	0x6F8E      	MOVWF       FARG_mysql_write_forced_bytes, 1
0x6408	0x0EFF      	MOVLW       _tableKeyOutNip
0x640A	0x6F86      	MOVWF       FARG_mysql_write_forced_name, 1
0x640C	0x0E00      	MOVLW       hi_addr(_tableKeyOutNip)
0x640E	0x6F87      	MOVWF       FARG_mysql_write_forced_name+1, 1
0x6410	0x0EFA      	MOVLW       _keyOutDate
0x6412	0x6F88      	MOVWF       FARG_mysql_write_forced_column, 1
0x6414	0x0E00      	MOVLW       hi_addr(_keyOutDate)
0x6416	0x6F89      	MOVWF       FARG_mysql_write_forced_column+1, 1
0x6418	0xF58AC38F  	MOVFF       Validadora_myTable+4, FARG_mysql_write_forced_fila
0x641C	0xF58BC390  	MOVFF       Validadora_myTable+5, FARG_mysql_write_forced_fila+1
0x6420	0x0E12      	MOVLW       _msjConst
0x6422	0x6F8C      	MOVWF       FARG_mysql_write_forced_texto, 1
0x6424	0x0E05      	MOVLW       hi_addr(_msjConst)
0x6426	0x6F8D      	MOVWF       FARG_mysql_write_forced_texto+1, 1
0x6428	0xF008EC72  	CALL        _mysql_write_forced, 0
;Validadora.c,1959 :: 		string_cpyc(bufferEeprom, CAN_TPV);
0x642C	0x0ED2      	MOVLW       _bufferEeprom
0x642E	0x0105      	MOVLB       5
0x6430	0x6F78      	MOVWF       FARG_string_cpyc_destino, 1
0x6432	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x6434	0x6F79      	MOVWF       FARG_string_cpyc_destino+1, 1
0x6436	0x0E0E      	MOVLW       _CAN_TPV
0x6438	0x6F7A      	MOVWF       FARG_string_cpyc_origen, 1
0x643A	0x0E9F      	MOVLW       hi_addr(_CAN_TPV)
0x643C	0x6F7B      	MOVWF       FARG_string_cpyc_origen+1, 1
0x643E	0x0E00      	MOVLW       higher_addr(_CAN_TPV)
0x6440	0x6F7C      	MOVWF       FARG_string_cpyc_origen+2, 1
0x6442	0xF014ECBC  	CALL        _string_cpyc, 0
;Validadora.c,1960 :: 		string_addc(bufferEeprom, CAN_OUT);
0x6446	0x0ED2      	MOVLW       _bufferEeprom
0x6448	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x644A	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x644C	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x644E	0x0E32      	MOVLW       _CAN_OUT
0x6450	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x6452	0x0E9F      	MOVLW       hi_addr(_CAN_OUT)
0x6454	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x6456	0x0E00      	MOVLW       higher_addr(_CAN_OUT)
0x6458	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x645A	0xF00FEC40  	CALL        _string_addc, 0
;Validadora.c,1961 :: 		string_addc(bufferEeprom, CAN_KEY);
0x645E	0x0ED2      	MOVLW       _bufferEeprom
0x6460	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x6462	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x6464	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x6466	0x0E46      	MOVLW       _CAN_KEY
0x6468	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x646A	0x0E9F      	MOVLW       hi_addr(_CAN_KEY)
0x646C	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x646E	0x0E00      	MOVLW       higher_addr(_CAN_KEY)
0x6470	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x6472	0xF00FEC40  	CALL        _string_addc, 0
;Validadora.c,1962 :: 		string_addc(bufferEeprom, CAN_NIP);
0x6476	0x0ED2      	MOVLW       _bufferEeprom
0x6478	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x647A	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x647C	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x647E	0x0E4A      	MOVLW       _CAN_NIP
0x6480	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x6482	0x0E9F      	MOVLW       hi_addr(_CAN_NIP)
0x6484	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x6486	0x0E00      	MOVLW       higher_addr(_CAN_NIP)
0x6488	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x648A	0xF00FEC40  	CALL        _string_addc, 0
;Validadora.c,1963 :: 		numToHex(nip, msjConst, 4);
0x648E	0xF578C568  	MOVFF       can_user_read_message_nip_L0, FARG_numToHex_valor
0x6492	0xF579C569  	MOVFF       can_user_read_message_nip_L0+1, FARG_numToHex_valor+1
0x6496	0xF57AC56A  	MOVFF       can_user_read_message_nip_L0+2, FARG_numToHex_valor+2
0x649A	0xF57BC56B  	MOVFF       can_user_read_message_nip_L0+3, FARG_numToHex_valor+3
0x649E	0x0E12      	MOVLW       _msjConst
0x64A0	0x6F7C      	MOVWF       FARG_numToHex_cadena, 1
0x64A2	0x0E05      	MOVLW       hi_addr(_msjConst)
0x64A4	0x6F7D      	MOVWF       FARG_numToHex_cadena+1, 1
0x64A6	0x0E04      	MOVLW       4
0x64A8	0x6F7E      	MOVWF       FARG_numToHex_bytes, 1
0x64AA	0xF00DECAD  	CALL        _numToHex, 0
;Validadora.c,1964 :: 		string_add(bufferEeprom, msjConst);
0x64AE	0x0ED2      	MOVLW       _bufferEeprom
0x64B0	0x6F78      	MOVWF       FARG_string_add_destino, 1
0x64B2	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x64B4	0x6F79      	MOVWF       FARG_string_add_destino+1, 1
0x64B6	0x0E12      	MOVLW       _msjConst
0x64B8	0x6F7A      	MOVWF       FARG_string_add_addEnd, 1
0x64BA	0x0E05      	MOVLW       hi_addr(_msjConst)
0x64BC	0x6F7B      	MOVWF       FARG_string_add_addEnd+1, 1
0x64BE	0xF016EC4C  	CALL        _string_add, 0
;Validadora.c,1965 :: 		string_addc(bufferEeprom, CAN_REGISTRAR);
0x64C2	0x0ED2      	MOVLW       _bufferEeprom
0x64C4	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x64C6	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x64C8	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x64CA	0x0E4E      	MOVLW       _CAN_REGISTRAR
0x64CC	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x64CE	0x0E9F      	MOVLW       hi_addr(_CAN_REGISTRAR)
0x64D0	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x64D2	0x0E00      	MOVLW       higher_addr(_CAN_REGISTRAR)
0x64D4	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x64D6	0xF00FEC40  	CALL        _string_addc, 0
;Validadora.c,1967 :: 		string_addc(bufferEeprom, CAN_MODULE);
0x64DA	0x0ED2      	MOVLW       _bufferEeprom
0x64DC	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x64DE	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x64E0	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x64E2	0x0E86      	MOVLW       _CAN_MODULE
0x64E4	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x64E6	0x0E9F      	MOVLW       hi_addr(_CAN_MODULE)
0x64E8	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x64EA	0x0E00      	MOVLW       higher_addr(_CAN_MODULE)
0x64EC	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x64EE	0xF00FEC40  	CALL        _string_addc, 0
;Validadora.c,1968 :: 		numToHex(canId, msjConst, 1);
0x64F2	0xF578C2ED  	MOVFF       _canId, FARG_numToHex_valor
0x64F6	0x0E00      	MOVLW       0
0x64F8	0x6F79      	MOVWF       FARG_numToHex_valor+1, 1
0x64FA	0x6F7A      	MOVWF       FARG_numToHex_valor+2, 1
0x64FC	0x6F7B      	MOVWF       FARG_numToHex_valor+3, 1
0x64FE	0x0E12      	MOVLW       _msjConst
0x6500	0x6F7C      	MOVWF       FARG_numToHex_cadena, 1
0x6502	0x0E05      	MOVLW       hi_addr(_msjConst)
0x6504	0x6F7D      	MOVWF       FARG_numToHex_cadena+1, 1
0x6506	0x0E01      	MOVLW       1
0x6508	0x6F7E      	MOVWF       FARG_numToHex_bytes, 1
0x650A	0xF00DECAD  	CALL        _numToHex, 0
;Validadora.c,1969 :: 		string_add(bufferEeprom, msjConst);
0x650E	0x0ED2      	MOVLW       _bufferEeprom
0x6510	0x6F78      	MOVWF       FARG_string_add_destino, 1
0x6512	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x6514	0x6F79      	MOVWF       FARG_string_add_destino+1, 1
0x6516	0x0E12      	MOVLW       _msjConst
0x6518	0x6F7A      	MOVWF       FARG_string_add_addEnd, 1
0x651A	0x0E05      	MOVLW       hi_addr(_msjConst)
0x651C	0x6F7B      	MOVWF       FARG_string_add_addEnd+1, 1
0x651E	0xF016EC4C  	CALL        _string_add, 0
;Validadora.c,1971 :: 		buffer_save_send(true, bufferEeprom);
0x6522	0x0E01      	MOVLW       1
0x6524	0x6F78      	MOVWF       FARG_buffer_save_send_guardar, 1
0x6526	0x0ED2      	MOVLW       _bufferEeprom
0x6528	0x6F79      	MOVWF       FARG_buffer_save_send_buffer, 1
0x652A	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x652C	0x6F7A      	MOVWF       FARG_buffer_save_send_buffer+1, 1
0x652E	0xF00FECCD  	CALL        _buffer_save_send, 0
;Validadora.c,1976 :: 		}else if(string_cmpnc(CAN_FOL, &can.rxBuffer[sizeTotal], sizeKey)){
0x6532	0xD15C      	BRA         L_can_user_read_message889
L_can_user_read_message887:
0x6534	0x0E2E      	MOVLW       _CAN_FOL
0x6536	0x0105      	MOVLB       5
0x6538	0x6F78      	MOVWF       FARG_string_cmpnc_text1, 1
0x653A	0x0E9F      	MOVLW       hi_addr(_CAN_FOL)
0x653C	0x6F79      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x653E	0x0E00      	MOVLW       higher_addr(_CAN_FOL)
0x6540	0x6F7A      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x6542	0x0E2A      	MOVLW       _can+107
0x6544	0x6F7B      	MOVWF       FARG_string_cmpnc_text2, 1
0x6546	0x0E04      	MOVLW       hi_addr(_can+107)
0x6548	0x6F7C      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x654A	0x5157      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x654C	0x277B      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x654E	0xB0D8      	BTFSC       STATUS, 0 
0x6550	0x2B7C      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x6552	0xF57DC556  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x6556	0xF016EC7C  	CALL        _string_cmpnc, 0
0x655A	0x5200      	MOVF        R0, 1 
0x655C	0xB4D8      	BTFSC       STATUS, 2 
0x655E	0xD146      	BRA         L_can_user_read_message890
;Validadora.c,1978 :: 		sizeTotal += sizeKey;
0x6560	0x5156      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x6562	0x2557      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x6564	0x6E00      	MOVWF       R0 
0x6566	0xF557C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Validadora.c,1979 :: 		string_cpyn(msjConst, &can.rxBuffer[sizeTotal], 8);
0x656A	0x0E12      	MOVLW       _msjConst
0x656C	0x6F78      	MOVWF       FARG_string_cpyn_destino, 1
0x656E	0x0E05      	MOVLW       hi_addr(_msjConst)
0x6570	0x6F79      	MOVWF       FARG_string_cpyn_destino+1, 1
0x6572	0x0E2A      	MOVLW       _can+107
0x6574	0x6F7A      	MOVWF       FARG_string_cpyn_origen, 1
0x6576	0x0E04      	MOVLW       hi_addr(_can+107)
0x6578	0x6F7B      	MOVWF       FARG_string_cpyn_origen+1, 1
0x657A	0x5000      	MOVF        R0, 0 
0x657C	0x277A      	ADDWF       FARG_string_cpyn_origen, 1, 1
0x657E	0xB0D8      	BTFSC       STATUS, 0 
0x6580	0x2B7B      	INCF        FARG_string_cpyn_origen+1, 1, 1
0x6582	0x0E08      	MOVLW       8
0x6584	0x6F7C      	MOVWF       FARG_string_cpyn_size, 1
0x6586	0xF00DEC35  	CALL        _string_cpyn, 0
;Validadora.c,1980 :: 		folioKey = hexToNum(msjConst);
0x658A	0x0E12      	MOVLW       _msjConst
0x658C	0x6F78      	MOVWF       FARG_hexToNum_hex, 1
0x658E	0x0E05      	MOVLW       hi_addr(_msjConst)
0x6590	0x6F79      	MOVWF       FARG_hexToNum_hex+1, 1
0x6592	0xF00EEC51  	CALL        _hexToNum, 0
0x6596	0xF56CC000  	MOVFF       R0, can_user_read_message_folioKey_L0
0x659A	0xF56DC001  	MOVFF       R1, can_user_read_message_folioKey_L0+1
0x659E	0xF56EC002  	MOVFF       R2, can_user_read_message_folioKey_L0+2
0x65A2	0xF56FC003  	MOVFF       R3, can_user_read_message_folioKey_L0+3
;Validadora.c,1983 :: 		string_cpyn(msjConst, &can.rxBuffer[sizeTotal+8], 12);
0x65A6	0x0E12      	MOVLW       _msjConst
0x65A8	0x6F78      	MOVWF       FARG_string_cpyn_destino, 1
0x65AA	0x0E05      	MOVLW       hi_addr(_msjConst)
0x65AC	0x6F79      	MOVWF       FARG_string_cpyn_destino+1, 1
0x65AE	0x0E08      	MOVLW       8
0x65B0	0x2557      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x65B2	0x6E00      	MOVWF       R0 
0x65B4	0x6A01      	CLRF        R1 
0x65B6	0x0E00      	MOVLW       0
0x65B8	0x2201      	ADDWFC      R1, 1 
0x65BA	0x0E2A      	MOVLW       _can+107
0x65BC	0x2400      	ADDWF       R0, 0 
0x65BE	0x6F7A      	MOVWF       FARG_string_cpyn_origen, 1
0x65C0	0x0E04      	MOVLW       hi_addr(_can+107)
0x65C2	0x2001      	ADDWFC      R1, 0 
0x65C4	0x6F7B      	MOVWF       FARG_string_cpyn_origen+1, 1
0x65C6	0x0E0C      	MOVLW       12
0x65C8	0x6F7C      	MOVWF       FARG_string_cpyn_size, 1
0x65CA	0xF00DEC35  	CALL        _string_cpyn, 0
;Validadora.c,1985 :: 		if(!mysql_search_forced(tableKeyOutFol, keyOutFol, folioKey, &fila)){
0x65CE	0x0E9A      	MOVLW       _tableKeyOutFol
0x65D0	0x6F78      	MOVWF       FARG_mysql_search_forced_tabla, 1
0x65D2	0x0E01      	MOVLW       hi_addr(_tableKeyOutFol)
0x65D4	0x6F79      	MOVWF       FARG_mysql_search_forced_tabla+1, 1
0x65D6	0x0E81      	MOVLW       _keyOutFol
0x65D8	0x6F7A      	MOVWF       FARG_mysql_search_forced_columna, 1
0x65DA	0x0E01      	MOVLW       hi_addr(_keyOutFol)
0x65DC	0x6F7B      	MOVWF       FARG_mysql_search_forced_columna+1, 1
0x65DE	0xF57CC56C  	MOVFF       can_user_read_message_folioKey_L0, FARG_mysql_search_forced_buscar
0x65E2	0xF57DC56D  	MOVFF       can_user_read_message_folioKey_L0+1, FARG_mysql_search_forced_buscar+1
0x65E6	0xF57EC56E  	MOVFF       can_user_read_message_folioKey_L0+2, FARG_mysql_search_forced_buscar+2
0x65EA	0xF57FC56F  	MOVFF       can_user_read_message_folioKey_L0+3, FARG_mysql_search_forced_buscar+3
0x65EE	0x0E58      	MOVLW       can_user_read_message_fila_L0
0x65F0	0x6F80      	MOVWF       FARG_mysql_search_forced_fila, 1
0x65F2	0x0E05      	MOVLW       hi_addr(can_user_read_message_fila_L0)
0x65F4	0x6F81      	MOVWF       FARG_mysql_search_forced_fila+1, 1
0x65F6	0xF00BEC0D  	CALL        _mysql_search_forced, 0
0x65FA	0x5200      	MOVF        R0, 1 
0x65FC	0xE132      	BNZ         L_can_user_read_message891
;Validadora.c,1986 :: 		estatus = '0';
0x65FE	0x0E30      	MOVLW       48
0x6600	0x0105      	MOVLB       5
0x6602	0x6F5B      	MOVWF       can_user_read_message_estatus_L0, 1
;Validadora.c,1987 :: 		mysql_write_forced(tableKeyOutFol, keyOutEstatus, fila, &estatus, sizeof(estatus));
0x6604	0x0E9A      	MOVLW       _tableKeyOutFol
0x6606	0x6F86      	MOVWF       FARG_mysql_write_forced_name, 1
0x6608	0x0E01      	MOVLW       hi_addr(_tableKeyOutFol)
0x660A	0x6F87      	MOVWF       FARG_mysql_write_forced_name+1, 1
0x660C	0x0E16      	MOVLW       _keyOutEstatus
0x660E	0x6F88      	MOVWF       FARG_mysql_write_forced_column, 1
0x6610	0x0E01      	MOVLW       hi_addr(_keyOutEstatus)
0x6612	0x6F89      	MOVWF       FARG_mysql_write_forced_column+1, 1
0x6614	0xF58AC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_forced_fila
0x6618	0xF58BC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_forced_fila+1
0x661C	0x0E5B      	MOVLW       can_user_read_message_estatus_L0
0x661E	0x6F8C      	MOVWF       FARG_mysql_write_forced_texto, 1
0x6620	0x0E05      	MOVLW       hi_addr(can_user_read_message_estatus_L0)
0x6622	0x6F8D      	MOVWF       FARG_mysql_write_forced_texto+1, 1
0x6624	0x0E01      	MOVLW       1
0x6626	0x6F8E      	MOVWF       FARG_mysql_write_forced_bytes, 1
0x6628	0xF008EC72  	CALL        _mysql_write_forced, 0
;Validadora.c,1988 :: 		auxNip = -1;  //Folio invalido
0x662C	0x0EFF      	MOVLW       255
0x662E	0x0105      	MOVLB       5
0x6630	0x6F74      	MOVWF       can_user_read_message_auxNip_L0, 1
0x6632	0x0EFF      	MOVLW       255
0x6634	0x6F75      	MOVWF       can_user_read_message_auxNip_L0+1, 1
0x6636	0x6F76      	MOVWF       can_user_read_message_auxNip_L0+2, 1
0x6638	0x6F77      	MOVWF       can_user_read_message_auxNip_L0+3, 1
;Validadora.c,1989 :: 		mysql_write_forced(tableKeyOutFol, keyOutFol, fila, (char*)&auxNip, sizeof(auxNip));
0x663A	0x0E9A      	MOVLW       _tableKeyOutFol
0x663C	0x6F86      	MOVWF       FARG_mysql_write_forced_name, 1
0x663E	0x0E01      	MOVLW       hi_addr(_tableKeyOutFol)
0x6640	0x6F87      	MOVWF       FARG_mysql_write_forced_name+1, 1
0x6642	0x0E81      	MOVLW       _keyOutFol
0x6644	0x6F88      	MOVWF       FARG_mysql_write_forced_column, 1
0x6646	0x0E01      	MOVLW       hi_addr(_keyOutFol)
0x6648	0x6F89      	MOVWF       FARG_mysql_write_forced_column+1, 1
0x664A	0xF58AC558  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_forced_fila
0x664E	0xF58BC559  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_forced_fila+1
0x6652	0x0E74      	MOVLW       can_user_read_message_auxNip_L0
0x6654	0x6F8C      	MOVWF       FARG_mysql_write_forced_texto, 1
0x6656	0x0E05      	MOVLW       hi_addr(can_user_read_message_auxNip_L0)
0x6658	0x6F8D      	MOVWF       FARG_mysql_write_forced_texto+1, 1
0x665A	0x0E04      	MOVLW       4
0x665C	0x6F8E      	MOVWF       FARG_mysql_write_forced_bytes, 1
0x665E	0xF008EC72  	CALL        _mysql_write_forced, 0
;Validadora.c,1990 :: 		}
L_can_user_read_message891:
;Validadora.c,1992 :: 		mysql_write_roundTrip(tableKeyOutFol, keyOutEstatus, "1", 1);
0x6662	0x0E9A      	MOVLW       _tableKeyOutFol
0x6664	0x0105      	MOVLB       5
0x6666	0x6F86      	MOVWF       FARG_mysql_write_roundTrip_name, 1
0x6668	0x0E01      	MOVLW       hi_addr(_tableKeyOutFol)
0x666A	0x6F87      	MOVWF       FARG_mysql_write_roundTrip_name+1, 1
0x666C	0x0E16      	MOVLW       _keyOutEstatus
0x666E	0x6F88      	MOVWF       FARG_mysql_write_roundTrip_column, 1
0x6670	0x0E01      	MOVLW       hi_addr(_keyOutEstatus)
0x6672	0x6F89      	MOVWF       FARG_mysql_write_roundTrip_column+1, 1
0x6674	0x0E59      	MOVLW       ?lstr43_Validadora
0x6676	0x6F8A      	MOVWF       FARG_mysql_write_roundTrip_texto, 1
0x6678	0x0E02      	MOVLW       hi_addr(?lstr43_Validadora)
0x667A	0x6F8B      	MOVWF       FARG_mysql_write_roundTrip_texto+1, 1
0x667C	0x0E01      	MOVLW       1
0x667E	0x6F8C      	MOVWF       FARG_mysql_write_roundTrip_bytes, 1
0x6680	0xF006EC89  	CALL        _mysql_write_roundTrip, 0
;Validadora.c,1993 :: 		mysql_write_forced(tableKeyOutFol, keyOutFol, myTable.rowAct, (char*)&folioKey, sizeof(folioKey));
0x6684	0x0E9A      	MOVLW       _tableKeyOutFol
0x6686	0x0105      	MOVLB       5
0x6688	0x6F86      	MOVWF       FARG_mysql_write_forced_name, 1
0x668A	0x0E01      	MOVLW       hi_addr(_tableKeyOutFol)
0x668C	0x6F87      	MOVWF       FARG_mysql_write_forced_name+1, 1
0x668E	0x0E81      	MOVLW       _keyOutFol
0x6690	0x6F88      	MOVWF       FARG_mysql_write_forced_column, 1
0x6692	0x0E01      	MOVLW       hi_addr(_keyOutFol)
0x6694	0x6F89      	MOVWF       FARG_mysql_write_forced_column+1, 1
0x6696	0xF58AC38F  	MOVFF       Validadora_myTable+4, FARG_mysql_write_forced_fila
0x669A	0xF58BC390  	MOVFF       Validadora_myTable+5, FARG_mysql_write_forced_fila+1
0x669E	0x0E6C      	MOVLW       can_user_read_message_folioKey_L0
0x66A0	0x6F8C      	MOVWF       FARG_mysql_write_forced_texto, 1
0x66A2	0x0E05      	MOVLW       hi_addr(can_user_read_message_folioKey_L0)
0x66A4	0x6F8D      	MOVWF       FARG_mysql_write_forced_texto+1, 1
0x66A6	0x0E04      	MOVLW       4
0x66A8	0x6F8E      	MOVWF       FARG_mysql_write_forced_bytes, 1
0x66AA	0xF008EC72  	CALL        _mysql_write_forced, 0
;Validadora.c,1994 :: 		mysql_write_forced(tableKeyOutFol, keyOutDate, myTable.rowAct, msjConst, string_len(msjConst)+1);
0x66AE	0x0E12      	MOVLW       _msjConst
0x66B0	0x0105      	MOVLB       5
0x66B2	0x6F86      	MOVWF       FARG_string_len_texto, 1
0x66B4	0x0E05      	MOVLW       hi_addr(_msjConst)
0x66B6	0x6F87      	MOVWF       FARG_string_len_texto+1, 1
0x66B8	0xF007EC95  	CALL        _string_len, 0
0x66BC	0x5000      	MOVF        R0, 0 
0x66BE	0x0F01      	ADDLW       1
0x66C0	0x6F8E      	MOVWF       FARG_mysql_write_forced_bytes, 1
0x66C2	0x0E9A      	MOVLW       _tableKeyOutFol
0x66C4	0x6F86      	MOVWF       FARG_mysql_write_forced_name, 1
0x66C6	0x0E01      	MOVLW       hi_addr(_tableKeyOutFol)
0x66C8	0x6F87      	MOVWF       FARG_mysql_write_forced_name+1, 1
0x66CA	0x0EFA      	MOVLW       _keyOutDate
0x66CC	0x6F88      	MOVWF       FARG_mysql_write_forced_column, 1
0x66CE	0x0E00      	MOVLW       hi_addr(_keyOutDate)
0x66D0	0x6F89      	MOVWF       FARG_mysql_write_forced_column+1, 1
0x66D2	0xF58AC38F  	MOVFF       Validadora_myTable+4, FARG_mysql_write_forced_fila
0x66D6	0xF58BC390  	MOVFF       Validadora_myTable+5, FARG_mysql_write_forced_fila+1
0x66DA	0x0E12      	MOVLW       _msjConst
0x66DC	0x6F8C      	MOVWF       FARG_mysql_write_forced_texto, 1
0x66DE	0x0E05      	MOVLW       hi_addr(_msjConst)
0x66E0	0x6F8D      	MOVWF       FARG_mysql_write_forced_texto+1, 1
0x66E2	0xF008EC72  	CALL        _mysql_write_forced, 0
;Validadora.c,1997 :: 		string_cpyc(bufferEeprom, CAN_TPV);
0x66E6	0x0ED2      	MOVLW       _bufferEeprom
0x66E8	0x0105      	MOVLB       5
0x66EA	0x6F78      	MOVWF       FARG_string_cpyc_destino, 1
0x66EC	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x66EE	0x6F79      	MOVWF       FARG_string_cpyc_destino+1, 1
0x66F0	0x0E0E      	MOVLW       _CAN_TPV
0x66F2	0x6F7A      	MOVWF       FARG_string_cpyc_origen, 1
0x66F4	0x0E9F      	MOVLW       hi_addr(_CAN_TPV)
0x66F6	0x6F7B      	MOVWF       FARG_string_cpyc_origen+1, 1
0x66F8	0x0E00      	MOVLW       higher_addr(_CAN_TPV)
0x66FA	0x6F7C      	MOVWF       FARG_string_cpyc_origen+2, 1
0x66FC	0xF014ECBC  	CALL        _string_cpyc, 0
;Validadora.c,1998 :: 		string_addc(bufferEeprom, CAN_OUT);
0x6700	0x0ED2      	MOVLW       _bufferEeprom
0x6702	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x6704	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x6706	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x6708	0x0E32      	MOVLW       _CAN_OUT
0x670A	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x670C	0x0E9F      	MOVLW       hi_addr(_CAN_OUT)
0x670E	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x6710	0x0E00      	MOVLW       higher_addr(_CAN_OUT)
0x6712	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x6714	0xF00FEC40  	CALL        _string_addc, 0
;Validadora.c,1999 :: 		string_addc(bufferEeprom, CAN_KEY);
0x6718	0x0ED2      	MOVLW       _bufferEeprom
0x671A	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x671C	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x671E	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x6720	0x0E46      	MOVLW       _CAN_KEY
0x6722	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x6724	0x0E9F      	MOVLW       hi_addr(_CAN_KEY)
0x6726	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x6728	0x0E00      	MOVLW       higher_addr(_CAN_KEY)
0x672A	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x672C	0xF00FEC40  	CALL        _string_addc, 0
;Validadora.c,2000 :: 		string_addc(bufferEeprom, CAN_FOL);
0x6730	0x0ED2      	MOVLW       _bufferEeprom
0x6732	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x6734	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x6736	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x6738	0x0E2E      	MOVLW       _CAN_FOL
0x673A	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x673C	0x0E9F      	MOVLW       hi_addr(_CAN_FOL)
0x673E	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x6740	0x0E00      	MOVLW       higher_addr(_CAN_FOL)
0x6742	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x6744	0xF00FEC40  	CALL        _string_addc, 0
;Validadora.c,2001 :: 		numToHex(folioKey, msjConst, 4);
0x6748	0xF578C56C  	MOVFF       can_user_read_message_folioKey_L0, FARG_numToHex_valor
0x674C	0xF579C56D  	MOVFF       can_user_read_message_folioKey_L0+1, FARG_numToHex_valor+1
0x6750	0xF57AC56E  	MOVFF       can_user_read_message_folioKey_L0+2, FARG_numToHex_valor+2
0x6754	0xF57BC56F  	MOVFF       can_user_read_message_folioKey_L0+3, FARG_numToHex_valor+3
0x6758	0x0E12      	MOVLW       _msjConst
0x675A	0x6F7C      	MOVWF       FARG_numToHex_cadena, 1
0x675C	0x0E05      	MOVLW       hi_addr(_msjConst)
0x675E	0x6F7D      	MOVWF       FARG_numToHex_cadena+1, 1
0x6760	0x0E04      	MOVLW       4
0x6762	0x6F7E      	MOVWF       FARG_numToHex_bytes, 1
0x6764	0xF00DECAD  	CALL        _numToHex, 0
;Validadora.c,2002 :: 		string_add(bufferEeprom, msjConst);
0x6768	0x0ED2      	MOVLW       _bufferEeprom
0x676A	0x6F78      	MOVWF       FARG_string_add_destino, 1
0x676C	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x676E	0x6F79      	MOVWF       FARG_string_add_destino+1, 1
0x6770	0x0E12      	MOVLW       _msjConst
0x6772	0x6F7A      	MOVWF       FARG_string_add_addEnd, 1
0x6774	0x0E05      	MOVLW       hi_addr(_msjConst)
0x6776	0x6F7B      	MOVWF       FARG_string_add_addEnd+1, 1
0x6778	0xF016EC4C  	CALL        _string_add, 0
;Validadora.c,2003 :: 		string_addc(bufferEeprom, CAN_REGISTRAR);
0x677C	0x0ED2      	MOVLW       _bufferEeprom
0x677E	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x6780	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x6782	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x6784	0x0E4E      	MOVLW       _CAN_REGISTRAR
0x6786	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x6788	0x0E9F      	MOVLW       hi_addr(_CAN_REGISTRAR)
0x678A	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x678C	0x0E00      	MOVLW       higher_addr(_CAN_REGISTRAR)
0x678E	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x6790	0xF00FEC40  	CALL        _string_addc, 0
;Validadora.c,2005 :: 		string_addc(bufferEeprom, CAN_MODULE);
0x6794	0x0ED2      	MOVLW       _bufferEeprom
0x6796	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x6798	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x679A	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x679C	0x0E86      	MOVLW       _CAN_MODULE
0x679E	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x67A0	0x0E9F      	MOVLW       hi_addr(_CAN_MODULE)
0x67A2	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x67A4	0x0E00      	MOVLW       higher_addr(_CAN_MODULE)
0x67A6	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x67A8	0xF00FEC40  	CALL        _string_addc, 0
;Validadora.c,2006 :: 		numToHex(canId, msjConst, 1);
0x67AC	0xF578C2ED  	MOVFF       _canId, FARG_numToHex_valor
0x67B0	0x0E00      	MOVLW       0
0x67B2	0x6F79      	MOVWF       FARG_numToHex_valor+1, 1
0x67B4	0x6F7A      	MOVWF       FARG_numToHex_valor+2, 1
0x67B6	0x6F7B      	MOVWF       FARG_numToHex_valor+3, 1
0x67B8	0x0E12      	MOVLW       _msjConst
0x67BA	0x6F7C      	MOVWF       FARG_numToHex_cadena, 1
0x67BC	0x0E05      	MOVLW       hi_addr(_msjConst)
0x67BE	0x6F7D      	MOVWF       FARG_numToHex_cadena+1, 1
0x67C0	0x0E01      	MOVLW       1
0x67C2	0x6F7E      	MOVWF       FARG_numToHex_bytes, 1
0x67C4	0xF00DECAD  	CALL        _numToHex, 0
;Validadora.c,2007 :: 		string_add(bufferEeprom, msjConst);
0x67C8	0x0ED2      	MOVLW       _bufferEeprom
0x67CA	0x6F78      	MOVWF       FARG_string_add_destino, 1
0x67CC	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x67CE	0x6F79      	MOVWF       FARG_string_add_destino+1, 1
0x67D0	0x0E12      	MOVLW       _msjConst
0x67D2	0x6F7A      	MOVWF       FARG_string_add_addEnd, 1
0x67D4	0x0E05      	MOVLW       hi_addr(_msjConst)
0x67D6	0x6F7B      	MOVWF       FARG_string_add_addEnd+1, 1
0x67D8	0xF016EC4C  	CALL        _string_add, 0
;Validadora.c,2009 :: 		buffer_save_send(true, bufferEeprom);
0x67DC	0x0E01      	MOVLW       1
0x67DE	0x6F78      	MOVWF       FARG_buffer_save_send_guardar, 1
0x67E0	0x0ED2      	MOVLW       _bufferEeprom
0x67E2	0x6F79      	MOVWF       FARG_buffer_save_send_buffer, 1
0x67E4	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x67E6	0x6F7A      	MOVWF       FARG_buffer_save_send_buffer+1, 1
0x67E8	0xF00FECCD  	CALL        _buffer_save_send, 0
;Validadora.c,2014 :: 		}
L_can_user_read_message890:
L_can_user_read_message889:
;Validadora.c,2015 :: 		}
L_can_user_read_message886:
L_can_user_read_message885:
L_can_user_read_message883:
;Validadora.c,2016 :: 		}
L_can_user_read_message877:
L_can_user_read_message876:
L_can_user_read_message866:
L_can_user_read_message848:
L_can_user_read_message836:
L_can_user_read_message800:
L_can_user_read_message795:
;Validadora.c,2017 :: 		}
L_end_can_user_read_message:
0x67EC	0x0012      	RETURN      0
; end of _can_user_read_message
_external_int1_open:
;lib_external_int1.h,8 :: 		void external_int1_open(bool enable, bool edgeOnRising, bool priorityHigh){
;lib_external_int1.h,9 :: 		INTCON3.INT1IF = 0;                //LIMPIAR BANDERA
0x67EE	0x90F0      	BCF         INTCON3, 0 
;lib_external_int1.h,10 :: 		INTCON2.INTEDG1 = edgeOnRising.B0; //FLANCO DE SUBIDA
0x67F0	0x0105      	MOVLB       5
0x67F2	0xB155      	BTFSC       FARG_external_int1_open_edgeOnRising, 0, 1
0x67F4	0xD002      	BRA         L__external_int1_open1304
0x67F6	0x9AF1      	BCF         INTCON2, 5 
0x67F8	0xD001      	BRA         L__external_int1_open1305
L__external_int1_open1304:
0x67FA	0x8AF1      	BSF         INTCON2, 5 
L__external_int1_open1305:
;lib_external_int1.h,11 :: 		INTCON3.INT1IP = priorityHigh.B0;  //PRIORIDAD DE LA INTERRUPCION
0x67FC	0xB156      	BTFSC       FARG_external_int1_open_priorityHigh, 0, 1
0x67FE	0xD002      	BRA         L__external_int1_open1306
0x6800	0x9CF0      	BCF         INTCON3, 6 
0x6802	0xD001      	BRA         L__external_int1_open1307
L__external_int1_open1306:
0x6804	0x8CF0      	BSF         INTCON3, 6 
L__external_int1_open1307:
;lib_external_int1.h,12 :: 		INTCON3.INT1IE = enable.B0;        //DISPONIBILIDAD
0x6806	0xB154      	BTFSC       FARG_external_int1_open_enable, 0, 1
0x6808	0xD002      	BRA         L__external_int1_open1308
0x680A	0x96F0      	BCF         INTCON3, 3 
0x680C	0xD001      	BRA         L__external_int1_open1309
L__external_int1_open1308:
0x680E	0x86F0      	BSF         INTCON3, 3 
L__external_int1_open1309:
;lib_external_int1.h,13 :: 		}
L_end_external_int1_open:
0x6810	0x0012      	RETURN      0
; end of _external_int1_open
_longword2double:
;__Lib_MathDouble.c,2427 :: 		
;__Lib_MathDouble.c,2434 :: 		
0x6812	0x5000      	MOVF        R0, 0, 0
;__Lib_MathDouble.c,2435 :: 		
0x6814	0x6E08      	MOVWF       R8, 0
;__Lib_MathDouble.c,2436 :: 		
0x6816	0x5001      	MOVF        R1, 0, 0
;__Lib_MathDouble.c,2437 :: 		
0x6818	0x6E00      	MOVWF       R0, 0
;__Lib_MathDouble.c,2438 :: 		
0x681A	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,2439 :: 		
0x681C	0x6E01      	MOVWF       R1, 0
;__Lib_MathDouble.c,2440 :: 		
0x681E	0x5003      	MOVF        R3, 0, 0
;__Lib_MathDouble.c,2441 :: 		
0x6820	0x6E02      	MOVWF       R2, 0
;__Lib_MathDouble.c,2442 :: 		
0x6822	0x6A03      	CLRF        R3, 0
;__Lib_MathDouble.c,2445 :: 		
0x6824	0x6A0B      	CLRF        R11, 0
;__Lib_MathDouble.c,2446 :: 		
0x6826	0x6A0C      	CLRF        R12, 0
;__Lib_MathDouble.c,2448 :: 		
0x6828	0x0E9E      	MOVLW       158
;__Lib_MathDouble.c,2449 :: 		
0x682A	0x6E03      	MOVWF       R3, 0
;__Lib_MathDouble.c,2450 :: 		
0x682C	0x6A0A      	CLRF        R10, 0
;__Lib_MathDouble.c,2451 :: 		
0x682E	0x0E02      	MOVLW       2
;__Lib_MathDouble.c,2452 :: 		
0x6830	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,2454 :: 		
0x6832	0xF015EC57  	CALL        _NRM4032, 0
;__Lib_MathDouble.c,2455 :: 		
L_end_longword2double:
0x6836	0x0012      	RETURN      0
; end of _longword2double
_mysql_init:
;table_eeprom.h,67 :: 		void mysql_init(unsigned int memoryMax){
;table_eeprom.h,69 :: 		myTable.col = 0;
0x6838	0x0103      	MOVLB       3
0x683A	0x6B8C      	CLRF        Validadora_myTable+1, 1
;table_eeprom.h,70 :: 		myTable.row = 0;
0x683C	0x6B8D      	CLRF        Validadora_myTable+2, 1
0x683E	0x6B8E      	CLRF        Validadora_myTable+3, 1
;table_eeprom.h,71 :: 		myTable.rowAct = 0;
0x6840	0x6B8F      	CLRF        Validadora_myTable+4, 1
0x6842	0x6B90      	CLRF        Validadora_myTable+5, 1
;table_eeprom.h,72 :: 		myTable.nameAct[0] = 0;          //Inicializar cadena en cero
0x6844	0x6B92      	CLRF        Validadora_myTable+7, 1
;table_eeprom.h,73 :: 		myTable.nameColAct[0] = 0;
0x6846	0x6BA2      	CLRF        Validadora_myTable+23, 1
;table_eeprom.h,74 :: 		myTable.sizeMax = memoryMax;
0x6848	0xF3B2C546  	MOVFF       FARG_mysql_init_memoryMax, Validadora_myTable+39
0x684C	0xF3B3C547  	MOVFF       FARG_mysql_init_memoryMax+1, Validadora_myTable+40
;table_eeprom.h,76 :: 		eeprom_i2c_open();  //Preguntamos si deseo resetear la memoria
0x6850	0xF01EEC16  	CALL        _eeprom_i2c_open, 0
;table_eeprom.h,77 :: 		eeprom_i2c_read(0x0000,&myTable.numTables, 1);
0x6854	0x0105      	MOVLB       5
0x6856	0x6B9E      	CLRF        FARG_eeprom_i2c_read_address, 1
0x6858	0x6B9F      	CLRF        FARG_eeprom_i2c_read_address+1, 1
0x685A	0x0E8B      	MOVLW       Validadora_myTable
0x685C	0x6FA0      	MOVWF       FARG_eeprom_i2c_read_datos, 1
0x685E	0x0E03      	MOVLW       hi_addr(Validadora_myTable)
0x6860	0x6FA1      	MOVWF       FARG_eeprom_i2c_read_datos+1, 1
0x6862	0x0E01      	MOVLW       1
0x6864	0x6FA2      	MOVWF       FARG_eeprom_i2c_read_size, 1
0x6866	0xF001ECB2  	CALL        _eeprom_i2c_read, 0
;table_eeprom.h,78 :: 		eeprom_i2c_read(0x0001,(char*)&myTable.size, 2);
0x686A	0x0E01      	MOVLW       1
0x686C	0x6F9E      	MOVWF       FARG_eeprom_i2c_read_address, 1
0x686E	0x0E00      	MOVLW       0
0x6870	0x6F9F      	MOVWF       FARG_eeprom_i2c_read_address+1, 1
0x6872	0x0EB4      	MOVLW       Validadora_myTable+41
0x6874	0x6FA0      	MOVWF       FARG_eeprom_i2c_read_datos, 1
0x6876	0x0E03      	MOVLW       hi_addr(Validadora_myTable+41)
0x6878	0x6FA1      	MOVWF       FARG_eeprom_i2c_read_datos+1, 1
0x687A	0x0E02      	MOVLW       2
0x687C	0x6FA2      	MOVWF       FARG_eeprom_i2c_read_size, 1
0x687E	0xF001ECB2  	CALL        _eeprom_i2c_read, 0
;table_eeprom.h,79 :: 		}
L_end_mysql_init:
0x6882	0x0012      	RETURN      0
; end of _mysql_init
_timer1_open:
;lib_timer1.h,10 :: 		void timer1_open(long time_us, bool powerOn, bool enable, bool priorityHigh){
;lib_timer1.h,14 :: 		time_us *= Clock_Mhz();
0x6884	0xF000C546  	MOVFF       FARG_timer1_open_time_us, R0
0x6888	0xF001C547  	MOVFF       FARG_timer1_open_time_us+1, R1
0x688C	0xF002C548  	MOVFF       FARG_timer1_open_time_us+2, R2
0x6890	0xF003C549  	MOVFF       FARG_timer1_open_time_us+3, R3
0x6894	0x0E0A      	MOVLW       10
0x6896	0x6E04      	MOVWF       R4 
0x6898	0x0E00      	MOVLW       0
0x689A	0x6E05      	MOVWF       R5 
0x689C	0x6E06      	MOVWF       R6 
0x689E	0x6E07      	MOVWF       R7 
0x68A0	0xF004EC29  	CALL        _Mul_32x32_U, 0
0x68A4	0xF546C000  	MOVFF       R0, FARG_timer1_open_time_us
0x68A8	0xF547C001  	MOVFF       R1, FARG_timer1_open_time_us+1
0x68AC	0xF548C002  	MOVFF       R2, FARG_timer1_open_time_us+2
0x68B0	0xF549C003  	MOVFF       R3, FARG_timer1_open_time_us+3
;lib_timer1.h,15 :: 		time_us /= 4;
0x68B4	0x0E04      	MOVLW       4
0x68B6	0x6E04      	MOVWF       R4 
0x68B8	0x0E00      	MOVLW       0
0x68BA	0x6E05      	MOVWF       R5 
0x68BC	0x6E06      	MOVWF       R6 
0x68BE	0x6E07      	MOVWF       R7 
0x68C0	0xF002ECEB  	CALL        _Div_32x32_S, 0
0x68C4	0xF546C000  	MOVFF       R0, FARG_timer1_open_time_us
0x68C8	0xF547C001  	MOVFF       R1, FARG_timer1_open_time_us+1
0x68CC	0xF548C002  	MOVFF       R2, FARG_timer1_open_time_us+2
0x68D0	0xF549C003  	MOVFF       R3, FARG_timer1_open_time_us+3
;lib_timer1.h,17 :: 		for(i = 0; i < 3; i++){
0x68D4	0x0105      	MOVLB       5
0x68D6	0x6B4D      	CLRF        timer1_open_i_L0, 1
L_timer1_open143:
0x68D8	0x0E03      	MOVLW       3
0x68DA	0x5D4D      	SUBWF       timer1_open_i_L0, 0, 1
0x68DC	0xE223      	BC          L_timer1_open144
;lib_timer1.h,18 :: 		if(time_us < 65536)
0x68DE	0x0E80      	MOVLW       128
0x68E0	0x1949      	XORWF       FARG_timer1_open_time_us+3, 0, 1
0x68E2	0x6E00      	MOVWF       R0 
0x68E4	0x0E80      	MOVLW       128
0x68E6	0x0A00      	XORLW       0
0x68E8	0x5C00      	SUBWF       R0, 0 
0x68EA	0xE108      	BNZ         L__timer1_open1028
0x68EC	0x0E01      	MOVLW       1
0x68EE	0x5D48      	SUBWF       FARG_timer1_open_time_us+2, 0, 1
0x68F0	0xE105      	BNZ         L__timer1_open1028
0x68F2	0x0E00      	MOVLW       0
0x68F4	0x5D47      	SUBWF       FARG_timer1_open_time_us+1, 0, 1
0x68F6	0xE102      	BNZ         L__timer1_open1028
0x68F8	0x0E00      	MOVLW       0
0x68FA	0x5D46      	SUBWF       FARG_timer1_open_time_us, 0, 1
L__timer1_open1028:
0x68FC	0xE201      	BC          L_timer1_open146
;lib_timer1.h,19 :: 		break;
0x68FE	0xD012      	BRA         L_timer1_open144
L_timer1_open146:
;lib_timer1.h,21 :: 		time_us /= 2;
0x6900	0x3349      	RRCF        FARG_timer1_open_time_us+3, 1, 1
0x6902	0x3348      	RRCF        FARG_timer1_open_time_us+2, 1, 1
0x6904	0x3347      	RRCF        FARG_timer1_open_time_us+1, 1, 1
0x6906	0x3346      	RRCF        FARG_timer1_open_time_us, 1, 1
0x6908	0x9F49      	BCF         FARG_timer1_open_time_us+3, 7, 1
0x690A	0xBD49      	BTFSC       FARG_timer1_open_time_us+3, 6, 1
0x690C	0x8F49      	BSF         FARG_timer1_open_time_us+3, 7, 1
0x690E	0xAF49      	BTFSS       FARG_timer1_open_time_us+3, 7, 1
0x6910	0xD007      	BRA         L__timer1_open1029
0x6912	0xE306      	BNC         L__timer1_open1029
0x6914	0x0E01      	MOVLW       1
0x6916	0x2746      	ADDWF       FARG_timer1_open_time_us, 1, 1
0x6918	0x0E00      	MOVLW       0
0x691A	0x2347      	ADDWFC      FARG_timer1_open_time_us+1, 1, 1
0x691C	0x2348      	ADDWFC      FARG_timer1_open_time_us+2, 1, 1
0x691E	0x2349      	ADDWFC      FARG_timer1_open_time_us+3, 1, 1
L__timer1_open1029:
;lib_timer1.h,17 :: 		for(i = 0; i < 3; i++){
0x6920	0x2B4D      	INCF        timer1_open_i_L0, 1, 1
;lib_timer1.h,22 :: 		}
0x6922	0xD7DA      	BRA         L_timer1_open143
L_timer1_open144:
;lib_timer1.h,23 :: 		time_us = 65536-time_us;  //Ultima operacion
0x6924	0x0E00      	MOVLW       0
0x6926	0x6E00      	MOVWF       R0 
0x6928	0x0E00      	MOVLW       0
0x692A	0x6E01      	MOVWF       R1 
0x692C	0x0E01      	MOVLW       1
0x692E	0x6E02      	MOVWF       R2 
0x6930	0x0E00      	MOVLW       0
0x6932	0x6E03      	MOVWF       R3 
0x6934	0x5146      	MOVF        FARG_timer1_open_time_us, 0, 1
0x6936	0x5E00      	SUBWF       R0, 1 
0x6938	0x5147      	MOVF        FARG_timer1_open_time_us+1, 0, 1
0x693A	0x5A01      	SUBWFB      R1, 1 
0x693C	0x5148      	MOVF        FARG_timer1_open_time_us+2, 0, 1
0x693E	0x5A02      	SUBWFB      R2, 1 
0x6940	0x5149      	MOVF        FARG_timer1_open_time_us+3, 0, 1
0x6942	0x5A03      	SUBWFB      R3, 1 
0x6944	0xF546C000  	MOVFF       R0, FARG_timer1_open_time_us
0x6948	0xF547C001  	MOVFF       R1, FARG_timer1_open_time_us+1
0x694C	0xF548C002  	MOVFF       R2, FARG_timer1_open_time_us+2
0x6950	0xF549C003  	MOVFF       R3, FARG_timer1_open_time_us+3
;lib_timer1.h,24 :: 		sampler1 = time_us;       //Guardamos el valor del timer
0x6954	0xF33DC000  	MOVFF       R0, _sampler1
0x6958	0xF33EC001  	MOVFF       R1, _sampler1+1
;lib_timer1.h,26 :: 		T1CON.TMR1ON = 0;       //APAGAR TIMER0
0x695C	0x90CD      	BCF         T1CON, 0 
;lib_timer1.h,27 :: 		T1CON.RD16 = 1;         //FORMATO DE 16 BITS
0x695E	0x8ECD      	BSF         T1CON, 7 
;lib_timer1.h,28 :: 		T1CON.T1CKPS0 = i.B0;   //PRESCALER
0x6960	0xB14D      	BTFSC       timer1_open_i_L0, 0, 1
0x6962	0xD002      	BRA         L__timer1_open1030
0x6964	0x98CD      	BCF         T1CON, 4 
0x6966	0xD001      	BRA         L__timer1_open1031
L__timer1_open1030:
0x6968	0x88CD      	BSF         T1CON, 4 
L__timer1_open1031:
;lib_timer1.h,29 :: 		T1CON.T1CKPS1 = i.B1;   //PRESCALER
0x696A	0xB34D      	BTFSC       timer1_open_i_L0, 1, 1
0x696C	0xD002      	BRA         L__timer1_open1032
0x696E	0x9ACD      	BCF         T1CON, 5 
0x6970	0xD001      	BRA         L__timer1_open1033
L__timer1_open1032:
0x6972	0x8ACD      	BSF         T1CON, 5 
L__timer1_open1033:
;lib_timer1.h,30 :: 		T1CON.T1OSCEN = 0;      //SEÑAL EXTERNA APAGADA
0x6974	0x96CD      	BCF         T1CON, 3 
;lib_timer1.h,31 :: 		T1CON.T1SYNC = 0;       //BIT IGNORADO POR USAR CLOCK INTERNO
0x6976	0x94CD      	BCF         T1CON, 2 
;lib_timer1.h,32 :: 		T1CON.TMR1CS = 0;       //CLOCK INTERNO FOSC/4
0x6978	0x92CD      	BCF         T1CON, 1 
;lib_timer1.h,35 :: 		TMR1H = getByte(sampler1,1);
0x697A	0xFFCFC33E  	MOVFF       _sampler1+1, TMR1H
;lib_timer1.h,36 :: 		TMR1L = getByte(sampler1,0);
0x697E	0xFFCEC33D  	MOVFF       _sampler1, TMR1L
;lib_timer1.h,39 :: 		PIR1.TMR1IF = 0;            //LIMPIAR BANDERA
0x6982	0x909E      	BCF         PIR1, 0 
;lib_timer1.h,40 :: 		PIE1.TMR1IE = enable;       //ACTIVAR O DESACTIVAR TIMER
0x6984	0xB14B      	BTFSC       FARG_timer1_open_enable, 0, 1
0x6986	0xD002      	BRA         L__timer1_open1034
0x6988	0x909D      	BCF         PIE1, 0 
0x698A	0xD001      	BRA         L__timer1_open1035
L__timer1_open1034:
0x698C	0x809D      	BSF         PIE1, 0 
L__timer1_open1035:
;lib_timer1.h,41 :: 		IPR1.TMR1IP = priorityHigh; //TIPO DE PRIORIDAD
0x698E	0xB14C      	BTFSC       FARG_timer1_open_priorityHigh, 0, 1
0x6990	0xD002      	BRA         L__timer1_open1036
0x6992	0x909F      	BCF         IPR1, 0 
0x6994	0xD001      	BRA         L__timer1_open1037
L__timer1_open1036:
0x6996	0x809F      	BSF         IPR1, 0 
L__timer1_open1037:
;lib_timer1.h,42 :: 		T1CON.TMR1ON = powerOn;     //ENCENDER TIMER
0x6998	0xB14A      	BTFSC       FARG_timer1_open_powerOn, 0, 1
0x699A	0xD002      	BRA         L__timer1_open1038
0x699C	0x90CD      	BCF         T1CON, 0 
0x699E	0xD001      	BRA         L__timer1_open1039
L__timer1_open1038:
0x69A0	0x80CD      	BSF         T1CON, 0 
L__timer1_open1039:
;lib_timer1.h,43 :: 		}
L_end_timer1_open:
0x69A2	0x0012      	RETURN      0
; end of _timer1_open
_can_heartbeat:
;Validadora.c,2059 :: 		void can_heartbeat(){
;Validadora.c,2063 :: 		if(++temp_heartbeat >= TIME_HEARTBEAT){
0x69A4	0x4A1F      	INFSNZ      _temp_heartbeat, 1 
0x69A6	0x2A20      	INCF        _temp_heartbeat+1, 1 
0x69A8	0x0E00      	MOVLW       0
0x69AA	0x5C20      	SUBWF       _temp_heartbeat+1, 0 
0x69AC	0xE102      	BNZ         L__can_heartbeat1373
0x69AE	0x0E05      	MOVLW       5
0x69B0	0x5C1F      	SUBWF       _temp_heartbeat, 0 
L__can_heartbeat1373:
0x69B2	0xE31A      	BNC         L_can_heartbeat900
;Validadora.c,2064 :: 		temp_heartbeat = 0;
0x69B4	0x6A1F      	CLRF        _temp_heartbeat 
0x69B6	0x6A20      	CLRF        _temp_heartbeat+1 
;Validadora.c,2065 :: 		cmdHeartBeat[0] = can.id;
0x69B8	0xF546C3CB  	MOVFF       _can+12, can_heartbeat_cmdHeartBeat_L0
;Validadora.c,2066 :: 		cmdHeartBeat[1] = CAN_PROTOCOL_HEARTBEAT;
0x69BC	0x0EFF      	MOVLW       255
0x69BE	0x0105      	MOVLB       5
0x69C0	0x6F47      	MOVWF       can_heartbeat_cmdHeartBeat_L0+1, 1
;Validadora.c,2067 :: 		can_write(can.ip+canIdTPV, cmdHeartBeat, sizeof(cmdHeartBeat), 3, false);
0x69C2	0xF554C3BF  	MOVFF       _can, FARG_can_write_id
0x69C6	0xF555C3C0  	MOVFF       _can+1, FARG_can_write_id+1
0x69CA	0xF556C3C1  	MOVFF       _can+2, FARG_can_write_id+2
0x69CE	0xF557C3C2  	MOVFF       _can+3, FARG_can_write_id+3
0x69D2	0x0E46      	MOVLW       can_heartbeat_cmdHeartBeat_L0
0x69D4	0x6F58      	MOVWF       FARG_can_write_datos, 1
0x69D6	0x0E05      	MOVLW       hi_addr(can_heartbeat_cmdHeartBeat_L0)
0x69D8	0x6F59      	MOVWF       FARG_can_write_datos+1, 1
0x69DA	0x0E02      	MOVLW       2
0x69DC	0x6F5A      	MOVWF       FARG_can_write_size, 1
0x69DE	0x0E03      	MOVLW       3
0x69E0	0x6F5B      	MOVWF       FARG_can_write_priority, 1
0x69E2	0x6B5C      	CLRF        FARG_can_write_rtr, 1
0x69E4	0xF019ECB9  	CALL        _can_write, 0
;Validadora.c,2068 :: 		}
L_can_heartbeat900:
;Validadora.c,2069 :: 		}
L_end_can_heartbeat:
0x69E8	0x0012      	RETURN      0
; end of _can_heartbeat
_EEPROM_Read:
;__Lib_EEPROM_1024.c,8 :: 		
;__Lib_EEPROM_1024.c,10 :: 		
0x69EA	0x9CA6      	BCF         EECON1, 6 
;__Lib_EEPROM_1024.c,11 :: 		
0x69EC	0xFFAAC547  	MOVFF       FARG_EEPROM_Read_address+1, EEADRH
;__Lib_EEPROM_1024.c,12 :: 		
0x69F0	0xFFA9C546  	MOVFF       FARG_EEPROM_Read_address, EEADR
;__Lib_EEPROM_1024.c,13 :: 		
0x69F4	0x9EA6      	BCF         EECON1, 7 
;__Lib_EEPROM_1024.c,14 :: 		
0x69F6	0x80A6      	BSF         EECON1, 0 
;__Lib_EEPROM_1024.c,16 :: 		
0x69F8	0xF000CFA8  	MOVFF       EEDATA, R0
;__Lib_EEPROM_1024.c,18 :: 		
L_end_EEPROM_Read:
0x69FC	0x0012      	RETURN      0
; end of _EEPROM_Read
_timer3_open:
;lib_timer3.h,10 :: 		void timer3_open(long time_us, bool powerOn, bool enable, bool priorityHigh){
;lib_timer3.h,14 :: 		time_us *= Clock_Mhz();
0x69FE	0xF000C546  	MOVFF       FARG_timer3_open_time_us, R0
0x6A02	0xF001C547  	MOVFF       FARG_timer3_open_time_us+1, R1
0x6A06	0xF002C548  	MOVFF       FARG_timer3_open_time_us+2, R2
0x6A0A	0xF003C549  	MOVFF       FARG_timer3_open_time_us+3, R3
0x6A0E	0x0E0A      	MOVLW       10
0x6A10	0x6E04      	MOVWF       R4 
0x6A12	0x0E00      	MOVLW       0
0x6A14	0x6E05      	MOVWF       R5 
0x6A16	0x6E06      	MOVWF       R6 
0x6A18	0x6E07      	MOVWF       R7 
0x6A1A	0xF004EC29  	CALL        _Mul_32x32_U, 0
0x6A1E	0xF546C000  	MOVFF       R0, FARG_timer3_open_time_us
0x6A22	0xF547C001  	MOVFF       R1, FARG_timer3_open_time_us+1
0x6A26	0xF548C002  	MOVFF       R2, FARG_timer3_open_time_us+2
0x6A2A	0xF549C003  	MOVFF       R3, FARG_timer3_open_time_us+3
;lib_timer3.h,15 :: 		time_us /= 4;
0x6A2E	0x0E04      	MOVLW       4
0x6A30	0x6E04      	MOVWF       R4 
0x6A32	0x0E00      	MOVLW       0
0x6A34	0x6E05      	MOVWF       R5 
0x6A36	0x6E06      	MOVWF       R6 
0x6A38	0x6E07      	MOVWF       R7 
0x6A3A	0xF002ECEB  	CALL        _Div_32x32_S, 0
0x6A3E	0xF546C000  	MOVFF       R0, FARG_timer3_open_time_us
0x6A42	0xF547C001  	MOVFF       R1, FARG_timer3_open_time_us+1
0x6A46	0xF548C002  	MOVFF       R2, FARG_timer3_open_time_us+2
0x6A4A	0xF549C003  	MOVFF       R3, FARG_timer3_open_time_us+3
;lib_timer3.h,17 :: 		for(i = 0; i < 3; i++){
0x6A4E	0x0105      	MOVLB       5
0x6A50	0x6B4D      	CLRF        timer3_open_i_L0, 1
L_timer3_open154:
0x6A52	0x0E03      	MOVLW       3
0x6A54	0x5D4D      	SUBWF       timer3_open_i_L0, 0, 1
0x6A56	0xE223      	BC          L_timer3_open155
;lib_timer3.h,18 :: 		if(time_us < 65536)
0x6A58	0x0E80      	MOVLW       128
0x6A5A	0x1949      	XORWF       FARG_timer3_open_time_us+3, 0, 1
0x6A5C	0x6E00      	MOVWF       R0 
0x6A5E	0x0E80      	MOVLW       128
0x6A60	0x0A00      	XORLW       0
0x6A62	0x5C00      	SUBWF       R0, 0 
0x6A64	0xE108      	BNZ         L__timer3_open1080
0x6A66	0x0E01      	MOVLW       1
0x6A68	0x5D48      	SUBWF       FARG_timer3_open_time_us+2, 0, 1
0x6A6A	0xE105      	BNZ         L__timer3_open1080
0x6A6C	0x0E00      	MOVLW       0
0x6A6E	0x5D47      	SUBWF       FARG_timer3_open_time_us+1, 0, 1
0x6A70	0xE102      	BNZ         L__timer3_open1080
0x6A72	0x0E00      	MOVLW       0
0x6A74	0x5D46      	SUBWF       FARG_timer3_open_time_us, 0, 1
L__timer3_open1080:
0x6A76	0xE201      	BC          L_timer3_open157
;lib_timer3.h,19 :: 		break;
0x6A78	0xD012      	BRA         L_timer3_open155
L_timer3_open157:
;lib_timer3.h,21 :: 		time_us /= 2;
0x6A7A	0x3349      	RRCF        FARG_timer3_open_time_us+3, 1, 1
0x6A7C	0x3348      	RRCF        FARG_timer3_open_time_us+2, 1, 1
0x6A7E	0x3347      	RRCF        FARG_timer3_open_time_us+1, 1, 1
0x6A80	0x3346      	RRCF        FARG_timer3_open_time_us, 1, 1
0x6A82	0x9F49      	BCF         FARG_timer3_open_time_us+3, 7, 1
0x6A84	0xBD49      	BTFSC       FARG_timer3_open_time_us+3, 6, 1
0x6A86	0x8F49      	BSF         FARG_timer3_open_time_us+3, 7, 1
0x6A88	0xAF49      	BTFSS       FARG_timer3_open_time_us+3, 7, 1
0x6A8A	0xD007      	BRA         L__timer3_open1081
0x6A8C	0xE306      	BNC         L__timer3_open1081
0x6A8E	0x0E01      	MOVLW       1
0x6A90	0x2746      	ADDWF       FARG_timer3_open_time_us, 1, 1
0x6A92	0x0E00      	MOVLW       0
0x6A94	0x2347      	ADDWFC      FARG_timer3_open_time_us+1, 1, 1
0x6A96	0x2348      	ADDWFC      FARG_timer3_open_time_us+2, 1, 1
0x6A98	0x2349      	ADDWFC      FARG_timer3_open_time_us+3, 1, 1
L__timer3_open1081:
;lib_timer3.h,17 :: 		for(i = 0; i < 3; i++){
0x6A9A	0x2B4D      	INCF        timer3_open_i_L0, 1, 1
;lib_timer3.h,22 :: 		}
0x6A9C	0xD7DA      	BRA         L_timer3_open154
L_timer3_open155:
;lib_timer3.h,23 :: 		time_us = 65536-time_us;  //Ultima operacion
0x6A9E	0x0E00      	MOVLW       0
0x6AA0	0x6E00      	MOVWF       R0 
0x6AA2	0x0E00      	MOVLW       0
0x6AA4	0x6E01      	MOVWF       R1 
0x6AA6	0x0E01      	MOVLW       1
0x6AA8	0x6E02      	MOVWF       R2 
0x6AAA	0x0E00      	MOVLW       0
0x6AAC	0x6E03      	MOVWF       R3 
0x6AAE	0x5146      	MOVF        FARG_timer3_open_time_us, 0, 1
0x6AB0	0x5E00      	SUBWF       R0, 1 
0x6AB2	0x5147      	MOVF        FARG_timer3_open_time_us+1, 0, 1
0x6AB4	0x5A01      	SUBWFB      R1, 1 
0x6AB6	0x5148      	MOVF        FARG_timer3_open_time_us+2, 0, 1
0x6AB8	0x5A02      	SUBWFB      R2, 1 
0x6ABA	0x5149      	MOVF        FARG_timer3_open_time_us+3, 0, 1
0x6ABC	0x5A03      	SUBWFB      R3, 1 
0x6ABE	0xF546C000  	MOVFF       R0, FARG_timer3_open_time_us
0x6AC2	0xF547C001  	MOVFF       R1, FARG_timer3_open_time_us+1
0x6AC6	0xF548C002  	MOVFF       R2, FARG_timer3_open_time_us+2
0x6ACA	0xF549C003  	MOVFF       R3, FARG_timer3_open_time_us+3
;lib_timer3.h,24 :: 		sampler3 = time_us;       //Guardamos el valor del timer
0x6ACE	0xF343C000  	MOVFF       R0, _sampler3
0x6AD2	0xF344C001  	MOVFF       R1, _sampler3+1
;lib_timer3.h,26 :: 		T3CON.TMR3ON = 0;       //APAGAR TIMER0
0x6AD6	0x90B1      	BCF         T3CON, 0 
;lib_timer3.h,27 :: 		T3CON.RD16 = 1;         //FORMATO DE 16 BITS
0x6AD8	0x8EB1      	BSF         T3CON, 7 
;lib_timer3.h,28 :: 		T3CON.T3CCP1 = 1;      //TIMER3 PARA CLOCK EN CCP1 Y ECCP
0x6ADA	0x86B1      	BSF         T3CON, 3 
;lib_timer3.h,29 :: 		T3CON.T3ECCP1 = 1;      //TIMER3 PARA CLOCK EN CCP1 Y ECCP
0x6ADC	0x8CB1      	BSF         T3CON, 6 
;lib_timer3.h,30 :: 		T3CON.T3CKPS0 = i.B0;   //PRESCALER
0x6ADE	0xB14D      	BTFSC       timer3_open_i_L0, 0, 1
0x6AE0	0xD002      	BRA         L__timer3_open1082
0x6AE2	0x98B1      	BCF         T3CON, 4 
0x6AE4	0xD001      	BRA         L__timer3_open1083
L__timer3_open1082:
0x6AE6	0x88B1      	BSF         T3CON, 4 
L__timer3_open1083:
;lib_timer3.h,31 :: 		T3CON.T3CKPS1 = i.B1;   //PRESCALER
0x6AE8	0xB34D      	BTFSC       timer3_open_i_L0, 1, 1
0x6AEA	0xD002      	BRA         L__timer3_open1084
0x6AEC	0x9AB1      	BCF         T3CON, 5 
0x6AEE	0xD001      	BRA         L__timer3_open1085
L__timer3_open1084:
0x6AF0	0x8AB1      	BSF         T3CON, 5 
L__timer3_open1085:
;lib_timer3.h,32 :: 		T3CON.T3SYNC = 0;       //BIT IGNORADO POR USAR CLOCK INTERNO
0x6AF2	0x94B1      	BCF         T3CON, 2 
;lib_timer3.h,33 :: 		T3CON.TMR3CS = 0;       //CLOCK INTERNO FOSC/4
0x6AF4	0x92B1      	BCF         T3CON, 1 
;lib_timer3.h,36 :: 		TMR3H = getByte(sampler3,1);
0x6AF6	0xFFB3C344  	MOVFF       _sampler3+1, TMR3H
;lib_timer3.h,37 :: 		TMR3L = getByte(sampler3,0);
0x6AFA	0xFFB2C343  	MOVFF       _sampler3, TMR3L
;lib_timer3.h,40 :: 		PIR2.TMR3IF = 0;            //LIMPIAR BANDERA
0x6AFE	0x92A1      	BCF         PIR2, 1 
;lib_timer3.h,41 :: 		PIE2.TMR3IE = enable;       //ACTIVAR O DESACTIVAR TIMER
0x6B00	0xB14B      	BTFSC       FARG_timer3_open_enable, 0, 1
0x6B02	0xD002      	BRA         L__timer3_open1086
0x6B04	0x92A0      	BCF         PIE2, 1 
0x6B06	0xD001      	BRA         L__timer3_open1087
L__timer3_open1086:
0x6B08	0x82A0      	BSF         PIE2, 1 
L__timer3_open1087:
;lib_timer3.h,42 :: 		IPR2.TMR3IP = priorityHigh; //TIPO DE PRIORIDAD
0x6B0A	0xB14C      	BTFSC       FARG_timer3_open_priorityHigh, 0, 1
0x6B0C	0xD002      	BRA         L__timer3_open1088
0x6B0E	0x92A2      	BCF         IPR2, 1 
0x6B10	0xD001      	BRA         L__timer3_open1089
L__timer3_open1088:
0x6B12	0x82A2      	BSF         IPR2, 1 
L__timer3_open1089:
;lib_timer3.h,43 :: 		T3CON.TMR3ON = powerOn;     //ENCENDER TIMER
0x6B14	0xB14A      	BTFSC       FARG_timer3_open_powerOn, 0, 1
0x6B16	0xD002      	BRA         L__timer3_open1090
0x6B18	0x90B1      	BCF         T3CON, 0 
0x6B1A	0xD001      	BRA         L__timer3_open1091
L__timer3_open1090:
0x6B1C	0x80B1      	BSF         T3CON, 0 
L__timer3_open1091:
;lib_timer3.h,44 :: 		}
L_end_timer3_open:
0x6B1E	0x0012      	RETURN      0
; end of _timer3_open
_Lcd_Init:
;__Lib_Lcd.c,84 :: 		
;__Lib_Lcd.c,86 :: 		
0x6B20	0x9692      	BCF         LCD_EN_Direction, BitPos(LCD_EN_Direction+0) 
;__Lib_Lcd.c,87 :: 		
0x6B22	0x9496      	BCF         LCD_RS_Direction, BitPos(LCD_RS_Direction+0) 
;__Lib_Lcd.c,88 :: 		
0x6B24	0x9892      	BCF         LCD_D4_Direction, BitPos(LCD_D4_Direction+0) 
;__Lib_Lcd.c,89 :: 		
0x6B26	0x9492      	BCF         LCD_D5_Direction, BitPos(LCD_D5_Direction+0) 
;__Lib_Lcd.c,90 :: 		
0x6B28	0x9292      	BCF         LCD_D6_Direction, BitPos(LCD_D6_Direction+0) 
;__Lib_Lcd.c,91 :: 		
0x6B2A	0x9092      	BCF         LCD_D7_Direction, BitPos(LCD_D7_Direction+0) 
;__Lib_Lcd.c,93 :: 		
0x6B2C	0x9680      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,94 :: 		
0x6B2E	0x9484      	BCF         LCD_RS, BitPos(LCD_RS+0) 
;__Lib_Lcd.c,95 :: 		
0x6B30	0x9080      	BCF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,96 :: 		
0x6B32	0x9280      	BCF         LCD_D6, BitPos(LCD_D6+0) 
;__Lib_Lcd.c,97 :: 		
0x6B34	0x9480      	BCF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,98 :: 		
0x6B36	0x9880      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,100 :: 		
0x6B38	0xF002EC30  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,101 :: 		
0x6B3C	0xF002EC30  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,102 :: 		
0x6B40	0xF002EC30  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,105 :: 		
0x6B44	0x8480      	BSF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,106 :: 		
0x6B46	0x8880      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,107 :: 		
0x6B48	0x8680      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,108 :: 		
0x6B4A	0xF002ECE8  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,109 :: 		
0x6B4E	0x9680      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,110 :: 		
0x6B50	0xF002EC30  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,112 :: 		
0x6B54	0x8680      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,113 :: 		
0x6B56	0xF002ECE8  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,114 :: 		
0x6B5A	0x9680      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,115 :: 		
0x6B5C	0xF002EC30  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,117 :: 		
0x6B60	0x8680      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,118 :: 		
0x6B62	0xF002ECE8  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,119 :: 		
0x6B66	0x9680      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,120 :: 		
0x6B68	0xF002EC30  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,123 :: 		
0x6B6C	0x9880      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,124 :: 		
0x6B6E	0x8680      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,125 :: 		
0x6B70	0xF002ECE8  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,126 :: 		
0x6B74	0x9680      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,127 :: 		
0x6B76	0xF002EC30  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,130 :: 		
0x6B7A	0x8680      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,131 :: 		
0x6B7C	0xF002ECE8  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,132 :: 		
0x6B80	0x9680      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,134 :: 		
0x6B82	0x9480      	BCF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,135 :: 		
0x6B84	0x8080      	BSF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,136 :: 		
0x6B86	0x8680      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,137 :: 		
0x6B88	0xF002ECE8  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,138 :: 		
0x6B8C	0x9680      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,139 :: 		
0x6B8E	0xF002EC30  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,142 :: 		
0x6B92	0x9080      	BCF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,143 :: 		
0x6B94	0x8880      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,144 :: 		
0x6B96	0x8680      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,145 :: 		
0x6B98	0xF002ECE8  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,146 :: 		
0x6B9C	0x9680      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,148 :: 		
0x6B9E	0x9880      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,149 :: 		
0x6BA0	0x8680      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,150 :: 		
0x6BA2	0xF002ECE8  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,151 :: 		
0x6BA6	0x9680      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,152 :: 		
0x6BA8	0xF002EC30  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,155 :: 		
0x6BAC	0x8680      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,156 :: 		
0x6BAE	0xF002ECE8  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,157 :: 		
0x6BB2	0x9680      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,159 :: 		
0x6BB4	0x8880      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,160 :: 		
0x6BB6	0x8680      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,161 :: 		
0x6BB8	0xF002ECE8  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,162 :: 		
0x6BBC	0x9680      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,163 :: 		
0x6BBE	0xF002EC30  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,166 :: 		
0x6BC2	0x9880      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,167 :: 		
0x6BC4	0x8680      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,168 :: 		
0x6BC6	0xF002ECE8  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,169 :: 		
0x6BCA	0x9680      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,171 :: 		
0x6BCC	0x8080      	BSF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,172 :: 		
0x6BCE	0x8280      	BSF         LCD_D6, BitPos(LCD_D6+0) 
;__Lib_Lcd.c,173 :: 		
0x6BD0	0x8480      	BSF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,174 :: 		
0x6BD2	0x8880      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,175 :: 		
0x6BD4	0x8680      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,176 :: 		
0x6BD6	0xF002ECE8  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,177 :: 		
0x6BDA	0x9680      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,179 :: 		
0x6BDC	0xF002EC30  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,181 :: 		
0x6BE0	0x0103      	MOVLB       3
0x6BE2	0x81BC      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,182 :: 		
L_end_Lcd_Init:
0x6BE4	0x0012      	RETURN      0
; end of _Lcd_Init
_usart_enable_rx:
;lib_usart.h,122 :: 		void usart_enable_rx(bool enable, bool priorityHigh, char delimitir){
;lib_usart.h,124 :: 		usart.rx_cont = 0;  //POSICION INICIAL
0x6BE6	0x0103      	MOVLB       3
0x6BE8	0x6B68      	CLRF        _usart+35, 1
;lib_usart.h,125 :: 		usart.rx_delimiter = delimitir;
0x6BEA	0xF365C548  	MOVFF       FARG_usart_enable_rx_delimitir, _usart+32
;lib_usart.h,126 :: 		usart.rx_new_message = false;
0x6BEE	0x6B66      	CLRF        _usart+33, 1
;lib_usart.h,127 :: 		usart.rx_overflow = false;
0x6BF0	0x6B67      	CLRF        _usart+34, 1
;lib_usart.h,130 :: 		IPR1.RCIP = priorityHigh;
0x6BF2	0x0105      	MOVLB       5
0x6BF4	0xB147      	BTFSC       FARG_usart_enable_rx_priorityHigh, 0, 1
0x6BF6	0xD002      	BRA         L__usart_enable_rx1107
0x6BF8	0x9A9F      	BCF         IPR1, 5 
0x6BFA	0xD001      	BRA         L__usart_enable_rx1108
L__usart_enable_rx1107:
0x6BFC	0x8A9F      	BSF         IPR1, 5 
L__usart_enable_rx1108:
;lib_usart.h,131 :: 		PIR1.RCIF = 0;
0x6BFE	0x9A9E      	BCF         PIR1, 5 
;lib_usart.h,132 :: 		PIE1.RCIE = enable;
0x6C00	0xB146      	BTFSC       FARG_usart_enable_rx_enable, 0, 1
0x6C02	0xD002      	BRA         L__usart_enable_rx1109
0x6C04	0x9A9D      	BCF         PIE1, 5 
0x6C06	0xD001      	BRA         L__usart_enable_rx1110
L__usart_enable_rx1109:
0x6C08	0x8A9D      	BSF         PIE1, 5 
L__usart_enable_rx1110:
;lib_usart.h,133 :: 		}
L_end_usart_enable_rx:
0x6C0A	0x0012      	RETURN      0
; end of _usart_enable_rx
_int_external_int0:
;wiegand26.h,170 :: 		void int_external_int0(){
;wiegand26.h,171 :: 		if(INTCON.INT0IF && INTCON.INT0IE){
0x6C0C	0xA2F2      	BTFSS       INTCON, 1 
0x6C0E	0xD013      	BRA         L_int_external_int0605
0x6C10	0xA8F2      	BTFSS       INTCON, 4 
0x6C12	0xD011      	BRA         L_int_external_int0605
L__int_external_int0969:
;wiegand26.h,172 :: 		WIEGAN26_CONT++;
0x6C14	0x0103      	MOVLB       3
0x6C16	0x2B38      	INCF        Validadora_WIEGAN26_CONT, 1, 1
;wiegand26.h,173 :: 		WIEGAN26_DATA <<= 1;
0x6C18	0x3739      	RLCF        Validadora_WIEGAN26_DATA, 1, 1
0x6C1A	0x9139      	BCF         Validadora_WIEGAN26_DATA, 0, 1
0x6C1C	0x373A      	RLCF        Validadora_WIEGAN26_DATA+1, 1, 1
0x6C1E	0x373B      	RLCF        Validadora_WIEGAN26_DATA+2, 1, 1
0x6C20	0x373C      	RLCF        Validadora_WIEGAN26_DATA+3, 1, 1
;wiegand26.h,174 :: 		WIEGAN26_DATA |= 0;
;wiegand26.h,176 :: 		WIEGAND_TEMP = 0;
0x6C22	0x6B3F      	CLRF        _WIEGAND_TEMP, 1
0x6C24	0x6B40      	CLRF        _WIEGAND_TEMP+1, 1
;wiegand26.h,177 :: 		if(WIEGAN26_CONT > WIEGAND_BITS_NIP)
0x6C26	0x5138      	MOVF        Validadora_WIEGAN26_CONT, 0, 1
0x6C28	0x0820      	SUBLW       32
0x6C2A	0xE204      	BC          L_int_external_int0606
;wiegand26.h,178 :: 		WIEGAND_TEMP = WIEGAND_TIME_FRAME_DELTA;
0x6C2C	0x0E94      	MOVLW       148
0x6C2E	0x6F3F      	MOVWF       _WIEGAND_TEMP, 1
0x6C30	0x0E11      	MOVLW       17
0x6C32	0x6F40      	MOVWF       _WIEGAND_TEMP+1, 1
L_int_external_int0606:
;wiegand26.h,179 :: 		INTCON.INT0IF = 0;
0x6C34	0x92F2      	BCF         INTCON, 1 
;wiegand26.h,180 :: 		}
L_int_external_int0605:
;wiegand26.h,181 :: 		}
L_end_int_external_int0:
0x6C36	0x0012      	RETURN      0
; end of _int_external_int0
_int_external_int1:
;wiegand26.h,183 :: 		void int_external_int1(){
;wiegand26.h,184 :: 		if(INTCON3.INT1IF && INTCON3.INT1IE){
0x6C38	0xA0F0      	BTFSS       INTCON3, 0 
0x6C3A	0xD014      	BRA         L_int_external_int1609
0x6C3C	0xA6F0      	BTFSS       INTCON3, 3 
0x6C3E	0xD012      	BRA         L_int_external_int1609
L__int_external_int1970:
;wiegand26.h,185 :: 		WIEGAN26_CONT++;
0x6C40	0x0103      	MOVLB       3
0x6C42	0x2B38      	INCF        Validadora_WIEGAN26_CONT, 1, 1
;wiegand26.h,186 :: 		WIEGAN26_DATA <<= 1;
0x6C44	0x3739      	RLCF        Validadora_WIEGAN26_DATA, 1, 1
0x6C46	0x9139      	BCF         Validadora_WIEGAN26_DATA, 0, 1
0x6C48	0x373A      	RLCF        Validadora_WIEGAN26_DATA+1, 1, 1
0x6C4A	0x373B      	RLCF        Validadora_WIEGAN26_DATA+2, 1, 1
0x6C4C	0x373C      	RLCF        Validadora_WIEGAN26_DATA+3, 1, 1
;wiegand26.h,187 :: 		WIEGAN26_DATA |= 1;
0x6C4E	0x8139      	BSF         Validadora_WIEGAN26_DATA, 0, 1
;wiegand26.h,189 :: 		WIEGAND_TEMP = 0;
0x6C50	0x6B3F      	CLRF        _WIEGAND_TEMP, 1
0x6C52	0x6B40      	CLRF        _WIEGAND_TEMP+1, 1
;wiegand26.h,190 :: 		if(WIEGAN26_CONT > WIEGAND_BITS_NIP)
0x6C54	0x5138      	MOVF        Validadora_WIEGAN26_CONT, 0, 1
0x6C56	0x0820      	SUBLW       32
0x6C58	0xE204      	BC          L_int_external_int1610
;wiegand26.h,191 :: 		WIEGAND_TEMP = WIEGAND_TIME_FRAME_DELTA;
0x6C5A	0x0E94      	MOVLW       148
0x6C5C	0x6F3F      	MOVWF       _WIEGAND_TEMP, 1
0x6C5E	0x0E11      	MOVLW       17
0x6C60	0x6F40      	MOVWF       _WIEGAND_TEMP+1, 1
L_int_external_int1610:
;wiegand26.h,192 :: 		INTCON3.INT1IF = 0;
0x6C62	0x90F0      	BCF         INTCON3, 0 
;wiegand26.h,193 :: 		}
L_int_external_int1609:
;wiegand26.h,194 :: 		}
L_end_int_external_int1:
0x6C64	0x0012      	RETURN      0
; end of _int_external_int1
_wiegand26_read_card:
;wiegand26.h,61 :: 		bool wiegand26_read_card(long *id){
;wiegand26.h,65 :: 		if(WIEGAN26_CONT == 26){
0x6C66	0x0103      	MOVLB       3
0x6C68	0x5138      	MOVF        Validadora_WIEGAN26_CONT, 0, 1
0x6C6A	0x0A1A      	XORLW       26
0x6C6C	0xA4D8      	BTFSS       STATUS, 2 
0x6C6E	0xD097      	BRA         L_wiegand26_read_card573
;wiegand26.h,66 :: 		delay_ms(_WIEGAND26_PULSE_TIME_MAX_MS);  //Para asegurar datos de 26 bits
0x6C70	0x0E11      	MOVLW       17
0x6C72	0x6E0C      	MOVWF       R12, 0
0x6C74	0x0E3A      	MOVLW       58
0x6C76	0x6E0D      	MOVWF       R13, 0
L_wiegand26_read_card574:
0x6C78	0x2E0D      	DECFSZ      R13, 1, 0
0x6C7A	0xD7FE      	BRA         L_wiegand26_read_card574
0x6C7C	0x2E0C      	DECFSZ      R12, 1, 0
0x6C7E	0xD7FC      	BRA         L_wiegand26_read_card574
0x6C80	0x0000      	NOP
;wiegand26.h,68 :: 		if(WIEGAN26_CONT != 26)
0x6C82	0x5138      	MOVF        Validadora_WIEGAN26_CONT, 0, 1
0x6C84	0x0A1A      	XORLW       26
0x6C86	0xE002      	BZ          L_wiegand26_read_card575
;wiegand26.h,69 :: 		return false;
0x6C88	0x6A00      	CLRF        R0 
0x6C8A	0xD08A      	BRA         L_end_wiegand26_read_card
L_wiegand26_read_card575:
;wiegand26.h,71 :: 		WIEGAN26_BUFFER = WIEGAN26_DATA;
0x6C8C	0xF334C339  	MOVFF       Validadora_WIEGAN26_DATA, Validadora_WIEGAN26_BUFFER
0x6C90	0xF335C33A  	MOVFF       Validadora_WIEGAN26_DATA+1, Validadora_WIEGAN26_BUFFER+1
0x6C94	0xF336C33B  	MOVFF       Validadora_WIEGAN26_DATA+2, Validadora_WIEGAN26_BUFFER+2
0x6C98	0xF337C33C  	MOVFF       Validadora_WIEGAN26_DATA+3, Validadora_WIEGAN26_BUFFER+3
;wiegand26.h,72 :: 		aux = WIEGAN26_BUFFER;
0x6C9C	0xF00EC339  	MOVFF       Validadora_WIEGAN26_DATA, R14
0x6CA0	0xF00FC33A  	MOVFF       Validadora_WIEGAN26_DATA+1, R15
0x6CA4	0xF010C33B  	MOVFF       Validadora_WIEGAN26_DATA+2, R16
0x6CA8	0xF011C33C  	MOVFF       Validadora_WIEGAN26_DATA+3, R17
;wiegand26.h,74 :: 		WIEGAN26_CONT = 0;    //Resetear puntero
0x6CAC	0x6B38      	CLRF        Validadora_WIEGAN26_CONT, 1
;wiegand26.h,75 :: 		WIEGAN26_DATA = 0;    //Resetear la informacion
0x6CAE	0x6B39      	CLRF        Validadora_WIEGAN26_DATA, 1
0x6CB0	0x6B3A      	CLRF        Validadora_WIEGAN26_DATA+1, 1
0x6CB2	0x6B3B      	CLRF        Validadora_WIEGAN26_DATA+2, 1
0x6CB4	0x6B3C      	CLRF        Validadora_WIEGAN26_DATA+3, 1
;wiegand26.h,77 :: 		for(paridad = 0, i = 0; i < 13; i++){
0x6CB6	0x6A0A      	CLRF        R10 
0x6CB8	0x6A09      	CLRF        R9 
L_wiegand26_read_card576:
0x6CBA	0x0E0D      	MOVLW       13
0x6CBC	0x5C09      	SUBWF       R9, 0 
0x6CBE	0xE20E      	BC          L_wiegand26_read_card577
;wiegand26.h,78 :: 		paridad += getByte(aux,0).B0;
0x6CC0	0x6A00      	CLRF        R0 
0x6CC2	0xB00E      	BTFSC       R14, 0 
0x6CC4	0x2A00      	INCF        R0, 1 
0x6CC6	0x5000      	MOVF        R0, 0 
0x6CC8	0x260A      	ADDWF       R10, 1 
;wiegand26.h,79 :: 		aux >>= 1;
0x6CCA	0x3211      	RRCF        R17, 1 
0x6CCC	0x3210      	RRCF        R16, 1 
0x6CCE	0x320F      	RRCF        R15, 1 
0x6CD0	0x320E      	RRCF        R14, 1 
0x6CD2	0x9E11      	BCF         R17, 7 
0x6CD4	0xBC11      	BTFSC       R17, 6 
0x6CD6	0x8E11      	BSF         R17, 7 
;wiegand26.h,77 :: 		for(paridad = 0, i = 0; i < 13; i++){
0x6CD8	0x2A09      	INCF        R9, 1 
;wiegand26.h,80 :: 		}
0x6CDA	0xD7EF      	BRA         L_wiegand26_read_card576
L_wiegand26_read_card577:
;wiegand26.h,82 :: 		if(paridad % 2 != 1)
0x6CDC	0x0E01      	MOVLW       1
0x6CDE	0x140A      	ANDWF       R10, 0 
0x6CE0	0x6E01      	MOVWF       R1 
0x6CE2	0x5001      	MOVF        R1, 0 
0x6CE4	0x0A01      	XORLW       1
0x6CE6	0xE002      	BZ          L_wiegand26_read_card579
;wiegand26.h,83 :: 		return false;
0x6CE8	0x6A00      	CLRF        R0 
0x6CEA	0xD05A      	BRA         L_end_wiegand26_read_card
L_wiegand26_read_card579:
;wiegand26.h,85 :: 		for(paridad = 0, i = 0; i < 13; i++){
0x6CEC	0x6A0A      	CLRF        R10 
0x6CEE	0x6A09      	CLRF        R9 
L_wiegand26_read_card580:
0x6CF0	0x0E0D      	MOVLW       13
0x6CF2	0x5C09      	SUBWF       R9, 0 
0x6CF4	0xE20E      	BC          L_wiegand26_read_card581
;wiegand26.h,86 :: 		paridad += getByte(aux,0).B0;
0x6CF6	0x6A00      	CLRF        R0 
0x6CF8	0xB00E      	BTFSC       R14, 0 
0x6CFA	0x2A00      	INCF        R0, 1 
0x6CFC	0x5000      	MOVF        R0, 0 
0x6CFE	0x260A      	ADDWF       R10, 1 
;wiegand26.h,87 :: 		aux >>= 1;
0x6D00	0x3211      	RRCF        R17, 1 
0x6D02	0x3210      	RRCF        R16, 1 
0x6D04	0x320F      	RRCF        R15, 1 
0x6D06	0x320E      	RRCF        R14, 1 
0x6D08	0x9E11      	BCF         R17, 7 
0x6D0A	0xBC11      	BTFSC       R17, 6 
0x6D0C	0x8E11      	BSF         R17, 7 
;wiegand26.h,85 :: 		for(paridad = 0, i = 0; i < 13; i++){
0x6D0E	0x2A09      	INCF        R9, 1 
;wiegand26.h,88 :: 		}
0x6D10	0xD7EF      	BRA         L_wiegand26_read_card580
L_wiegand26_read_card581:
;wiegand26.h,90 :: 		if(paridad % 2 != 0)
0x6D12	0x0E01      	MOVLW       1
0x6D14	0x140A      	ANDWF       R10, 0 
0x6D16	0x6E01      	MOVWF       R1 
0x6D18	0x5001      	MOVF        R1, 0 
0x6D1A	0x0A00      	XORLW       0
0x6D1C	0xE002      	BZ          L_wiegand26_read_card583
;wiegand26.h,91 :: 		return false;
0x6D1E	0x6A00      	CLRF        R0 
0x6D20	0xD03F      	BRA         L_end_wiegand26_read_card
L_wiegand26_read_card583:
;wiegand26.h,93 :: 		*id = WIEGAN26_BUFFER;
0x6D22	0xFFE1C546  	MOVFF       FARG_wiegand26_read_card_id, FSR1L
0x6D26	0xFFE2C547  	MOVFF       FARG_wiegand26_read_card_id+1, FSR1H
0x6D2A	0xFFE6C334  	MOVFF       Validadora_WIEGAN26_BUFFER, POSTINC1
0x6D2E	0xFFE6C335  	MOVFF       Validadora_WIEGAN26_BUFFER+1, POSTINC1
0x6D32	0xFFE6C336  	MOVFF       Validadora_WIEGAN26_BUFFER+2, POSTINC1
0x6D36	0xFFE6C337  	MOVFF       Validadora_WIEGAN26_BUFFER+3, POSTINC1
;wiegand26.h,94 :: 		*id >>= 1;              //Se recorre a la derecha, quitar bit paridad imparidad
0x6D3A	0xFFE9C546  	MOVFF       FARG_wiegand26_read_card_id, FSR0L
0x6D3E	0xFFEAC547  	MOVFF       FARG_wiegand26_read_card_id+1, FSR0H
0x6D42	0xF005CFEE  	MOVFF       POSTINC0, R5
0x6D46	0xF006CFEE  	MOVFF       POSTINC0, R6
0x6D4A	0xF007CFEE  	MOVFF       POSTINC0, R7
0x6D4E	0xF008CFEE  	MOVFF       POSTINC0, R8
0x6D52	0xF000C005  	MOVFF       R5, R0
0x6D56	0xF001C006  	MOVFF       R6, R1
0x6D5A	0xF002C007  	MOVFF       R7, R2
0x6D5E	0xF003C008  	MOVFF       R8, R3
0x6D62	0x3203      	RRCF        R3, 1 
0x6D64	0x3202      	RRCF        R2, 1 
0x6D66	0x3201      	RRCF        R1, 1 
0x6D68	0x3200      	RRCF        R0, 1 
0x6D6A	0x9E03      	BCF         R3, 7 
0x6D6C	0xBC03      	BTFSC       R3, 6 
0x6D6E	0x8E03      	BSF         R3, 7 
0x6D70	0xFFE1C546  	MOVFF       FARG_wiegand26_read_card_id, FSR1L
0x6D74	0xFFE2C547  	MOVFF       FARG_wiegand26_read_card_id+1, FSR1H
0x6D78	0xFFE6C000  	MOVFF       R0, POSTINC1
0x6D7C	0xFFE6C001  	MOVFF       R1, POSTINC1
0x6D80	0xFFE6C002  	MOVFF       R2, POSTINC1
0x6D84	0xFFE6C003  	MOVFF       R3, POSTINC1
;wiegand26.h,95 :: 		getByte(*id, 3) = 0x00; //Quitamos el bit de paridad par
0x6D88	0x0E03      	MOVLW       3
0x6D8A	0x0105      	MOVLB       5
0x6D8C	0x2546      	ADDWF       FARG_wiegand26_read_card_id, 0, 1
0x6D8E	0x6EE1      	MOVWF       FSR1L 
0x6D90	0x0E00      	MOVLW       0
0x6D92	0x2147      	ADDWFC      FARG_wiegand26_read_card_id+1, 0, 1
0x6D94	0x6EE2      	MOVWF       FSR1H 
0x6D96	0x6AE6      	CLRF        POSTINC1 
;wiegand26.h,96 :: 		return true;
0x6D98	0x0E01      	MOVLW       1
0x6D9A	0x6E00      	MOVWF       R0 
0x6D9C	0xD001      	BRA         L_end_wiegand26_read_card
;wiegand26.h,97 :: 		}
L_wiegand26_read_card573:
;wiegand26.h,99 :: 		return false;
0x6D9E	0x6A00      	CLRF        R0 
;wiegand26.h,100 :: 		}
L_end_wiegand26_read_card:
0x6DA0	0x0012      	RETURN      0
; end of _wiegand26_read_card
_DS1307_open:
;ds1307.h,50 :: 		void DS1307_open(){
;ds1307.h,51 :: 		Soft_I2C_Init();         //Initialize Soft I2C communication
0x6DA2	0xF01BEC52  	CALL        _Soft_I2C_Init, 0
;ds1307.h,52 :: 		}
L_end_DS1307_open:
0x6DA6	0x0012      	RETURN      0
; end of _DS1307_open
_LongToStr:
;__Lib_Conversions.c,289 :: 		
;__Lib_Conversions.c,295 :: 		
0x6DA8	0x0105      	MOVLB       5
0x6DAA	0x6B4E      	CLRF        LongToStr_negative_L0, 1
0x6DAC	0x6B4F      	CLRF        LongToStr_negative_L0+1, 1
;__Lib_Conversions.c,296 :: 		
0x6DAE	0xF550C546  	MOVFF       FARG_LongToStr_input, LongToStr_inword_L0
0x6DB2	0xF551C547  	MOVFF       FARG_LongToStr_input+1, LongToStr_inword_L0+1
0x6DB6	0xF552C548  	MOVFF       FARG_LongToStr_input+2, LongToStr_inword_L0+2
0x6DBA	0xF553C549  	MOVFF       FARG_LongToStr_input+3, LongToStr_inword_L0+3
;__Lib_Conversions.c,297 :: 		
0x6DBE	0x0E80      	MOVLW       128
0x6DC0	0x1949      	XORWF       FARG_LongToStr_input+3, 0, 1
0x6DC2	0x6E00      	MOVWF       R0 
0x6DC4	0x0E80      	MOVLW       128
0x6DC6	0x5C00      	SUBWF       R0, 0 
0x6DC8	0xE108      	BNZ         L__LongToStr179
0x6DCA	0x0E00      	MOVLW       0
0x6DCC	0x5D48      	SUBWF       FARG_LongToStr_input+2, 0, 1
0x6DCE	0xE105      	BNZ         L__LongToStr179
0x6DD0	0x0E00      	MOVLW       0
0x6DD2	0x5D47      	SUBWF       FARG_LongToStr_input+1, 0, 1
0x6DD4	0xE102      	BNZ         L__LongToStr179
0x6DD6	0x0E00      	MOVLW       0
0x6DD8	0x5D46      	SUBWF       FARG_LongToStr_input, 0, 1
L__LongToStr179:
0x6DDA	0xE210      	BC          L_LongToStr63
;__Lib_Conversions.c,298 :: 		
0x6DDC	0x0E01      	MOVLW       1
0x6DDE	0x6F4E      	MOVWF       LongToStr_negative_L0, 1
0x6DE0	0x0E00      	MOVLW       0
0x6DE2	0x6F4F      	MOVWF       LongToStr_negative_L0+1, 1
;__Lib_Conversions.c,299 :: 		
0x6DE4	0x6B50      	CLRF        LongToStr_inword_L0, 1
0x6DE6	0x6B51      	CLRF        LongToStr_inword_L0+1, 1
0x6DE8	0x6B52      	CLRF        LongToStr_inword_L0+2, 1
0x6DEA	0x6B53      	CLRF        LongToStr_inword_L0+3, 1
0x6DEC	0x5146      	MOVF        FARG_LongToStr_input, 0, 1
0x6DEE	0x5F50      	SUBWF       LongToStr_inword_L0, 1, 1
0x6DF0	0x5147      	MOVF        FARG_LongToStr_input+1, 0, 1
0x6DF2	0x5B51      	SUBWFB      LongToStr_inword_L0+1, 1, 1
0x6DF4	0x5148      	MOVF        FARG_LongToStr_input+2, 0, 1
0x6DF6	0x5B52      	SUBWFB      LongToStr_inword_L0+2, 1, 1
0x6DF8	0x5149      	MOVF        FARG_LongToStr_input+3, 0, 1
0x6DFA	0x5B53      	SUBWFB      LongToStr_inword_L0+3, 1, 1
;__Lib_Conversions.c,300 :: 		
L_LongToStr63:
;__Lib_Conversions.c,301 :: 		
0x6DFC	0xF554C550  	MOVFF       LongToStr_inword_L0, FARG_LongWordToStr_input
0x6E00	0xF555C551  	MOVFF       LongToStr_inword_L0+1, FARG_LongWordToStr_input+1
0x6E04	0xF556C552  	MOVFF       LongToStr_inword_L0+2, FARG_LongWordToStr_input+2
0x6E08	0xF557C553  	MOVFF       LongToStr_inword_L0+3, FARG_LongWordToStr_input+3
0x6E0C	0xF558C54A  	MOVFF       FARG_LongToStr_output, FARG_LongWordToStr_output
0x6E10	0xF559C54B  	MOVFF       FARG_LongToStr_output+1, FARG_LongWordToStr_output+1
0x6E14	0xF01DEC4F  	CALL        _LongWordToStr, 0
;__Lib_Conversions.c,303 :: 		
0x6E18	0x0E0B      	MOVLW       11
0x6E1A	0x6F4C      	MOVWF       LongToStr_i_L0, 1
0x6E1C	0x0E00      	MOVLW       0
0x6E1E	0x6F4D      	MOVWF       LongToStr_i_L0+1, 1
;__Lib_Conversions.c,304 :: 		
L_LongToStr64:
0x6E20	0x0E00      	MOVLW       0
0x6E22	0x6E00      	MOVWF       R0 
0x6E24	0x514D      	MOVF        LongToStr_i_L0+1, 0, 1
0x6E26	0x5C00      	SUBWF       R0, 0 
0x6E28	0xE102      	BNZ         L__LongToStr180
0x6E2A	0x514C      	MOVF        LongToStr_i_L0, 0, 1
0x6E2C	0x0800      	SUBLW       0
L__LongToStr180:
0x6E2E	0xE219      	BC          L_LongToStr65
;__Lib_Conversions.c,305 :: 		
0x6E30	0x514C      	MOVF        LongToStr_i_L0, 0, 1
0x6E32	0x254A      	ADDWF       FARG_LongToStr_output, 0, 1
0x6E34	0x6EE1      	MOVWF       FSR1L 
0x6E36	0x514D      	MOVF        LongToStr_i_L0+1, 0, 1
0x6E38	0x214B      	ADDWFC      FARG_LongToStr_output+1, 0, 1
0x6E3A	0x6EE2      	MOVWF       FSR1H 
0x6E3C	0x0E01      	MOVLW       1
0x6E3E	0x5D4C      	SUBWF       LongToStr_i_L0, 0, 1
0x6E40	0x6E00      	MOVWF       R0 
0x6E42	0x0E00      	MOVLW       0
0x6E44	0x594D      	SUBWFB      LongToStr_i_L0+1, 0, 1
0x6E46	0x6E01      	MOVWF       R1 
0x6E48	0x5000      	MOVF        R0, 0 
0x6E4A	0x254A      	ADDWF       FARG_LongToStr_output, 0, 1
0x6E4C	0x6EE9      	MOVWF       FSR0L 
0x6E4E	0x5001      	MOVF        R1, 0 
0x6E50	0x214B      	ADDWFC      FARG_LongToStr_output+1, 0, 1
0x6E52	0x6EEA      	MOVWF       FSR0H 
0x6E54	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
;__Lib_Conversions.c,306 :: 		
0x6E58	0x0E01      	MOVLW       1
0x6E5A	0x5F4C      	SUBWF       LongToStr_i_L0, 1, 1
0x6E5C	0x0E00      	MOVLW       0
0x6E5E	0x5B4D      	SUBWFB      LongToStr_i_L0+1, 1, 1
;__Lib_Conversions.c,307 :: 		
0x6E60	0xD7DF      	BRA         L_LongToStr64
L_LongToStr65:
;__Lib_Conversions.c,308 :: 		
0x6E62	0xFFE1C54A  	MOVFF       FARG_LongToStr_output, FSR1L
0x6E66	0xFFE2C54B  	MOVFF       FARG_LongToStr_output+1, FSR1H
0x6E6A	0x0E20      	MOVLW       32
0x6E6C	0x6EE6      	MOVWF       POSTINC1 
;__Lib_Conversions.c,309 :: 		
0x6E6E	0x514E      	MOVF        LongToStr_negative_L0, 0, 1
0x6E70	0x114F      	IORWF       LongToStr_negative_L0+1, 0, 1
0x6E72	0xE01A      	BZ          L_LongToStr66
;__Lib_Conversions.c,310 :: 		
0x6E74	0x6B4C      	CLRF        LongToStr_i_L0, 1
0x6E76	0x6B4D      	CLRF        LongToStr_i_L0+1, 1
;__Lib_Conversions.c,311 :: 		
L_LongToStr67:
0x6E78	0x514C      	MOVF        LongToStr_i_L0, 0, 1
0x6E7A	0x254A      	ADDWF       FARG_LongToStr_output, 0, 1
0x6E7C	0x6EE9      	MOVWF       FSR0L 
0x6E7E	0x514D      	MOVF        LongToStr_i_L0+1, 0, 1
0x6E80	0x214B      	ADDWFC      FARG_LongToStr_output+1, 0, 1
0x6E82	0x6EEA      	MOVWF       FSR0H 
0x6E84	0x50EE      	MOVF        POSTINC0, 0 
0x6E86	0x0A20      	XORLW       32
0x6E88	0xE103      	BNZ         L_LongToStr68
0x6E8A	0x4B4C      	INFSNZ      LongToStr_i_L0, 1, 1
0x6E8C	0x2B4D      	INCF        LongToStr_i_L0+1, 1, 1
0x6E8E	0xD7F4      	BRA         L_LongToStr67
L_LongToStr68:
;__Lib_Conversions.c,312 :: 		
0x6E90	0x0E01      	MOVLW       1
0x6E92	0x5F4C      	SUBWF       LongToStr_i_L0, 1, 1
0x6E94	0x0E00      	MOVLW       0
0x6E96	0x5B4D      	SUBWFB      LongToStr_i_L0+1, 1, 1
;__Lib_Conversions.c,313 :: 		
0x6E98	0x514C      	MOVF        LongToStr_i_L0, 0, 1
0x6E9A	0x254A      	ADDWF       FARG_LongToStr_output, 0, 1
0x6E9C	0x6EE1      	MOVWF       FSR1L 
0x6E9E	0x514D      	MOVF        LongToStr_i_L0+1, 0, 1
0x6EA0	0x214B      	ADDWFC      FARG_LongToStr_output+1, 0, 1
0x6EA2	0x6EE2      	MOVWF       FSR1H 
0x6EA4	0x0E2D      	MOVLW       45
0x6EA6	0x6EE6      	MOVWF       POSTINC1 
;__Lib_Conversions.c,314 :: 		
L_LongToStr66:
;__Lib_Conversions.c,315 :: 		
L_end_LongToStr:
0x6EA8	0x0012      	RETURN      0
; end of _LongToStr
_usart_open:
;lib_usart.h,38 :: 		void usart_open(unsigned long baudRate){
;lib_usart.h,40 :: 		TXSTA.CSRC = 0;   //NO IMPORTA, MODO ASYNCHRONO
0x6EAA	0x9EAC      	BCF         TXSTA, 7 
;lib_usart.h,41 :: 		TXSTA.TX9 = 0;    //MODO 8 BITS DE TRANSMISION
0x6EAC	0x9CAC      	BCF         TXSTA, 6 
;lib_usart.h,42 :: 		TXSTA.TXEN = 1;   //DISPONIBLE TX
0x6EAE	0x8AAC      	BSF         TXSTA, 5 
;lib_usart.h,43 :: 		TXSTA.SYNC = 0;   //MODO ASYNCHRONO
0x6EB0	0x98AC      	BCF         TXSTA, 4 
;lib_usart.h,44 :: 		TXSTA.SENDB = 0;  //ENVIAR ROTURA DE TRANSMISION COMPLETADA ***
0x6EB2	0x96AC      	BCF         TXSTA, 3 
;lib_usart.h,45 :: 		TXSTA.BRGH = 1;   //0 - LOW SPEED, 1 - HIHG SPEED
0x6EB4	0x84AC      	BSF         TXSTA, 2 
;lib_usart.h,47 :: 		TXSTA.TX9D = 0;   //BIT DE PARIDAD
0x6EB6	0x90AC      	BCF         TXSTA, 0 
;lib_usart.h,50 :: 		RCSTA.RX9 = 0;    //MODO 8 BITS RECEPCION
0x6EB8	0x9CAB      	BCF         RCSTA, 6 
;lib_usart.h,51 :: 		RCSTA.SREN = 0;   //NO IMPORTA, MODO ASYNCHRONO
0x6EBA	0x9AAB      	BCF         RCSTA, 5 
;lib_usart.h,52 :: 		RCSTA.CREN = 1;   //DISPONIBLE RX
0x6EBC	0x88AB      	BSF         RCSTA, 4 
;lib_usart.h,53 :: 		RCSTA.ADDEN = 0;  //DISABLE INTERRUPT POR RECIBIR EL 9BIT
0x6EBE	0x96AB      	BCF         RCSTA, 3 
;lib_usart.h,54 :: 		RCSTA.SPEN = 1;   //CONFIGURA PINES RX AND TX COMO SERIALES
0x6EC0	0x8EAB      	BSF         RCSTA, 7 
;lib_usart.h,61 :: 		BAUDCON.SCKP = 0; //NO IMPORTA, MODO ASYNCHRONOS
0x6EC2	0x98B8      	BCF         BAUDCON, 4 
;lib_usart.h,62 :: 		BAUDCON.BRG16 = 1;//MODO 16 BITS
0x6EC4	0x86B8      	BSF         BAUDCON, 3 
;lib_usart.h,63 :: 		BAUDCON.WUE = 0;  //PIN RX NO ES MONITORIADO EN FLANCO DE BAJADA***
0x6EC6	0x92B8      	BCF         BAUDCON, 1 
;lib_usart.h,64 :: 		BAUDCON.ABDEN = 0;//DISABLE MODO MEDICION DE BAUDIOS***
0x6EC8	0x90B8      	BCF         BAUDCON, 0 
;lib_usart.h,68 :: 		baudRate >>= 1;                           //Divido sobre dos
0x6ECA	0xF000C546  	MOVFF       FARG_usart_open_baudRate, R0
0x6ECE	0xF001C547  	MOVFF       FARG_usart_open_baudRate+1, R1
0x6ED2	0xF002C548  	MOVFF       FARG_usart_open_baudRate+2, R2
0x6ED6	0xF003C549  	MOVFF       FARG_usart_open_baudRate+3, R3
0x6EDA	0x3203      	RRCF        R3, 1 
0x6EDC	0x3202      	RRCF        R2, 1 
0x6EDE	0x3201      	RRCF        R1, 1 
0x6EE0	0x3200      	RRCF        R0, 1 
0x6EE2	0x9E03      	BCF         R3, 7 
0x6EE4	0xF546C000  	MOVFF       R0, FARG_usart_open_baudRate
0x6EE8	0xF547C001  	MOVFF       R1, FARG_usart_open_baudRate+1
0x6EEC	0xF548C002  	MOVFF       R2, FARG_usart_open_baudRate+2
0x6EF0	0xF549C003  	MOVFF       R3, FARG_usart_open_baudRate+3
;lib_usart.h,69 :: 		baudRate = (Clock_MHz()*250e3)/baudRate;  //Fosc/(Baudios/2)
0x6EF4	0xDC8E      	RCALL       _longword2double
0x6EF6	0xF004C000  	MOVFF       R0, R4
0x6EFA	0xF005C001  	MOVFF       R1, R5
0x6EFE	0xF006C002  	MOVFF       R2, R6
0x6F02	0xF007C003  	MOVFF       R3, R7
0x6F06	0x0E80      	MOVLW       128
0x6F08	0x6E00      	MOVWF       R0 
0x6F0A	0x0E96      	MOVLW       150
0x6F0C	0x6E01      	MOVWF       R1 
0x6F0E	0x0E18      	MOVLW       24
0x6F10	0x6E02      	MOVWF       R2 
0x6F12	0x0E94      	MOVLW       148
0x6F14	0x6E03      	MOVWF       R3 
0x6F16	0xF01FEC16  	CALL        _Div_32x32_FP, 0
0x6F1A	0xF018ECE3  	CALL        _double2longword, 0
0x6F1E	0xF546C000  	MOVFF       R0, FARG_usart_open_baudRate
0x6F22	0xF547C001  	MOVFF       R1, FARG_usart_open_baudRate+1
0x6F26	0xF548C002  	MOVFF       R2, FARG_usart_open_baudRate+2
0x6F2A	0xF549C003  	MOVFF       R3, FARG_usart_open_baudRate+3
;lib_usart.h,70 :: 		baudRate += 1;                            //Sumar uno por compute round
0x6F2E	0x0E01      	MOVLW       1
0x6F30	0x2400      	ADDWF       R0, 0 
0x6F32	0x0105      	MOVLB       5
0x6F34	0x6F46      	MOVWF       FARG_usart_open_baudRate, 1
0x6F36	0x0E00      	MOVLW       0
0x6F38	0x2001      	ADDWFC      R1, 0 
0x6F3A	0x6F47      	MOVWF       FARG_usart_open_baudRate+1, 1
0x6F3C	0x0E00      	MOVLW       0
0x6F3E	0x2002      	ADDWFC      R2, 0 
0x6F40	0x6F48      	MOVWF       FARG_usart_open_baudRate+2, 1
0x6F42	0x0E00      	MOVLW       0
0x6F44	0x2003      	ADDWFC      R3, 0 
0x6F46	0x6F49      	MOVWF       FARG_usart_open_baudRate+3, 1
;lib_usart.h,71 :: 		baudRate >>= 1;                           //Divido sobre dos
0x6F48	0x3349      	RRCF        FARG_usart_open_baudRate+3, 1, 1
0x6F4A	0x3348      	RRCF        FARG_usart_open_baudRate+2, 1, 1
0x6F4C	0x3347      	RRCF        FARG_usart_open_baudRate+1, 1, 1
0x6F4E	0x3346      	RRCF        FARG_usart_open_baudRate, 1, 1
0x6F50	0x9F49      	BCF         FARG_usart_open_baudRate+3, 7, 1
;lib_usart.h,72 :: 		baudRate -= 1;                            //Resto -1, formula
0x6F52	0x0E01      	MOVLW       1
0x6F54	0x5F46      	SUBWF       FARG_usart_open_baudRate, 1, 1
0x6F56	0x0E00      	MOVLW       0
0x6F58	0x5B47      	SUBWFB      FARG_usart_open_baudRate+1, 1, 1
0x6F5A	0x5B48      	SUBWFB      FARG_usart_open_baudRate+2, 1, 1
0x6F5C	0x5B49      	SUBWFB      FARG_usart_open_baudRate+3, 1, 1
;lib_usart.h,73 :: 		SPBRG = getByte(baudRate,0);
0x6F5E	0xFFAFC546  	MOVFF       FARG_usart_open_baudRate, SPBRG
;lib_usart.h,74 :: 		SPBRGH = getByte(baudRate,1);
0x6F62	0xFFB0C547  	MOVFF       FARG_usart_open_baudRate+1, SPBRGH
;lib_usart.h,77 :: 		TRISC.B6 = 0;   //TX
0x6F66	0x9C94      	BCF         TRISC, 6 
;lib_usart.h,78 :: 		TRISC.B7 = 1;   //RX
0x6F68	0x8E94      	BSF         TRISC, 7 
;lib_usart.h,81 :: 		while(!TXSTA.TRMT);
L_usart_open158:
0x6F6A	0xB2AC      	BTFSC       TXSTA, 1 
0x6F6C	0xD001      	BRA         L_usart_open159
0x6F6E	0xD7FD      	BRA         L_usart_open158
L_usart_open159:
;lib_usart.h,82 :: 		}
L_end_usart_open:
0x6F70	0x0012      	RETURN      0
; end of _usart_open
_can_do_write_message:
;lib_can.h,180 :: 		void can_do_write_message(){
;lib_can.h,188 :: 		if(!can.txQueu)
0x6F72	0x0103      	MOVLB       3
0x6F74	0x53E0      	MOVF        _can+33, 1, 1
0x6F76	0xE101      	BNZ         L_can_do_write_message198
;lib_can.h,189 :: 		return; //CAN_RW_WITHOUT_QUEU;
0x6F78	0xD126      	BRA         L_end_can_do_write_message
L_can_do_write_message198:
;lib_can.h,192 :: 		if(can.temp >= CAN_MAX_TIME_ACK){
0x6F7A	0x0E0B      	MOVLW       11
0x6F7C	0x0104      	MOVLB       4
0x6F7E	0x5D6D      	SUBWF       _can+174, 0, 1
0x6F80	0xE102      	BNZ         L__can_do_write_message1122
0x6F82	0x0EB8      	MOVLW       184
0x6F84	0x5D6C      	SUBWF       _can+173, 0, 1
L__can_do_write_message1122:
0x6F86	0xE308      	BNC         L_can_do_write_message199
;lib_can.h,193 :: 		maquinaE = 0;
0x6F88	0x0102      	MOVLB       2
0x6F8A	0x6B8B      	CLRF        can_do_write_message_maquinaE_L0, 1
;lib_can.h,194 :: 		can.txQueu = false;
0x6F8C	0x0103      	MOVLB       3
0x6F8E	0x6BE0      	CLRF        _can+33, 1
;lib_can.h,196 :: 		can.tx_status = CAN_RW_CORRUPT;
0x6F90	0x0E03      	MOVLW       3
0x6F92	0x6FE1      	MOVWF       _can+34, 1
;lib_can.h,197 :: 		can_user_write_message();
0x6F94	0xF01DEC0F  	CALL        _can_user_write_message, 0
;lib_can.h,198 :: 		}
L_can_do_write_message199:
;lib_can.h,201 :: 		if(maquinaE == 0){  //Mando datos al buffer
0x6F98	0x0102      	MOVLB       2
0x6F9A	0x518B      	MOVF        can_do_write_message_maquinaE_L0, 0, 1
0x6F9C	0x0A00      	XORLW       0
0x6F9E	0xE122      	BNZ         L_can_do_write_message200
;lib_can.h,202 :: 		maquinaE = 2;
0x6FA0	0x0E02      	MOVLW       2
0x6FA2	0x6F8B      	MOVWF       can_do_write_message_maquinaE_L0, 1
;lib_can.h,203 :: 		datosEnviados = 0;
0x6FA4	0x0103      	MOVLB       3
0x6FA6	0x6BBB      	CLRF        can_do_write_message_datosEnviados_L0, 1
;lib_can.h,204 :: 		finalizar = false;
0x6FA8	0x0104      	MOVLB       4
0x6FAA	0x6B6E      	CLRF        can_do_write_message_finalizar_L0, 1
;lib_can.h,205 :: 		can.bufferTX[0] = can.id;             //Id del que envia
0x6FAC	0xF3D0C3CB  	MOVFF       _can+12, _can+17
;lib_can.h,206 :: 		can.bufferTX[1] = CAN_PROTOCOL_INIT;  //Inicia comunicacion con el otro dispo
0x6FB0	0x0103      	MOVLB       3
0x6FB2	0x6BD1      	CLRF        _can+18, 1
;lib_can.h,207 :: 		can_write(can.txId, can.bufferTX, 2, can.txPriority, false);
0x6FB4	0xF554C3E4  	MOVFF       _can+37, FARG_can_write_id
0x6FB8	0xF555C3E5  	MOVFF       _can+38, FARG_can_write_id+1
0x6FBC	0xF556C3E6  	MOVFF       _can+39, FARG_can_write_id+2
0x6FC0	0xF557C3E7  	MOVFF       _can+40, FARG_can_write_id+3
0x6FC4	0x0ED0      	MOVLW       _can+17
0x6FC6	0x0105      	MOVLB       5
0x6FC8	0x6F58      	MOVWF       FARG_can_write_datos, 1
0x6FCA	0x0E03      	MOVLW       hi_addr(_can+17)
0x6FCC	0x6F59      	MOVWF       FARG_can_write_datos+1, 1
0x6FCE	0x0E02      	MOVLW       2
0x6FD0	0x6F5A      	MOVWF       FARG_can_write_size, 1
0x6FD2	0xF55BC3E3  	MOVFF       _can+36, FARG_can_write_priority
0x6FD6	0x6B5C      	CLRF        FARG_can_write_rtr, 1
0x6FD8	0xF019ECB9  	CALL        _can_write, 0
;lib_can.h,208 :: 		can.temp = 0;
0x6FDC	0x0104      	MOVLB       4
0x6FDE	0x6B6C      	CLRF        _can+173, 1
0x6FE0	0x6B6D      	CLRF        _can+174, 1
;lib_can.h,209 :: 		}else if(maquinaE == 1){
0x6FE2	0xD0EF      	BRA         L_can_do_write_message201
L_can_do_write_message200:
0x6FE4	0x0102      	MOVLB       2
0x6FE6	0x518B      	MOVF        can_do_write_message_maquinaE_L0, 0, 1
0x6FE8	0x0A01      	XORLW       1
0x6FEA	0xE166      	BNZ         L_can_do_write_message202
;lib_can.h,210 :: 		finalizar = !can.txBuffer[datosEnviados];
0x6FEC	0x0EE8      	MOVLW       _can+41
0x6FEE	0x6E00      	MOVWF       R0 
0x6FF0	0x0E03      	MOVLW       hi_addr(_can+41)
0x6FF2	0x6E01      	MOVWF       R1 
0x6FF4	0x0103      	MOVLB       3
0x6FF6	0x51BB      	MOVF        can_do_write_message_datosEnviados_L0, 0, 1
0x6FF8	0x2600      	ADDWF       R0, 1 
0x6FFA	0xB0D8      	BTFSC       STATUS, 0 
0x6FFC	0x2A01      	INCF        R1, 1 
0x6FFE	0xFFE9C000  	MOVFF       R0, FSR0L
0x7002	0xFFEAC001  	MOVFF       R1, FSR0H
0x7006	0x52EE      	MOVF        POSTINC0, 1 
0x7008	0x0E01      	MOVLW       1
0x700A	0xA4D8      	BTFSS       STATUS, 2 
0x700C	0x0E00      	MOVLW       0
0x700E	0x0104      	MOVLB       4
0x7010	0x6F6E      	MOVWF       can_do_write_message_finalizar_L0, 1
;lib_can.h,212 :: 		can.bufferTX[0] = can.id;
0x7012	0xF3D0C3CB  	MOVFF       _can+12, _can+17
;lib_can.h,214 :: 		can.bufferTX[1] = can.txBuffer[datosEnviados]?CAN_PROTOCOL_QUEU:CAN_PROTOCOL_END;
0x7016	0xFFE9C000  	MOVFF       R0, FSR0L
0x701A	0xFFEAC001  	MOVFF       R1, FSR0H
0x701E	0x52EE      	MOVF        POSTINC0, 1 
0x7020	0xE004      	BZ          L_can_do_write_message203
0x7022	0x0E01      	MOVLW       1
0x7024	0x0105      	MOVLB       5
0x7026	0x6F46      	MOVWF       ?FLOC___can_do_write_messageT798, 1
0x7028	0xD003      	BRA         L_can_do_write_message204
L_can_do_write_message203:
0x702A	0x0105      	MOVLB       5
0x702C	0x0E02      	MOVLW       2
0x702E	0x6F46      	MOVWF       ?FLOC___can_do_write_messageT798, 1
L_can_do_write_message204:
0x7030	0xF3D1C546  	MOVFF       ?FLOC___can_do_write_messageT798, _can+18
;lib_can.h,215 :: 		for(cont = 2; cont < 8 && can.txBuffer[datosEnviados]; cont++)
0x7034	0x0E02      	MOVLW       2
0x7036	0x6F48      	MOVWF       can_do_write_message_cont_L0, 1
L_can_do_write_message205:
0x7038	0x0E08      	MOVLW       8
0x703A	0x5D48      	SUBWF       can_do_write_message_cont_L0, 0, 1
0x703C	0xE223      	BC          L_can_do_write_message206
0x703E	0x0EE8      	MOVLW       _can+41
0x7040	0x6EE9      	MOVWF       FSR0L 
0x7042	0x0E03      	MOVLW       hi_addr(_can+41)
0x7044	0x6EEA      	MOVWF       FSR0H 
0x7046	0x0103      	MOVLB       3
0x7048	0x51BB      	MOVF        can_do_write_message_datosEnviados_L0, 0, 1
0x704A	0x26E9      	ADDWF       FSR0L, 1 
0x704C	0xB0D8      	BTFSC       STATUS, 0 
0x704E	0x2AEA      	INCF        FSR0H, 1 
0x7050	0x52EE      	MOVF        POSTINC0, 1 
0x7052	0xE018      	BZ          L_can_do_write_message206
L__can_do_write_message932:
;lib_can.h,216 :: 		can.bufferTX[cont] = can.txBuffer[datosEnviados++];
0x7054	0x0ED0      	MOVLW       _can+17
0x7056	0x6EE1      	MOVWF       FSR1L 
0x7058	0x0E03      	MOVLW       hi_addr(_can+17)
0x705A	0x6EE2      	MOVWF       FSR1H 
0x705C	0x0105      	MOVLB       5
0x705E	0x5148      	MOVF        can_do_write_message_cont_L0, 0, 1
0x7060	0x26E1      	ADDWF       FSR1L, 1 
0x7062	0xB0D8      	BTFSC       STATUS, 0 
0x7064	0x2AE2      	INCF        FSR1H, 1 
0x7066	0x0EE8      	MOVLW       _can+41
0x7068	0x6EE9      	MOVWF       FSR0L 
0x706A	0x0E03      	MOVLW       hi_addr(_can+41)
0x706C	0x6EEA      	MOVWF       FSR0H 
0x706E	0x0103      	MOVLB       3
0x7070	0x51BB      	MOVF        can_do_write_message_datosEnviados_L0, 0, 1
0x7072	0x26E9      	ADDWF       FSR0L, 1 
0x7074	0xB0D8      	BTFSC       STATUS, 0 
0x7076	0x2AEA      	INCF        FSR0H, 1 
0x7078	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x707C	0x2BBB      	INCF        can_do_write_message_datosEnviados_L0, 1, 1
;lib_can.h,215 :: 		for(cont = 2; cont < 8 && can.txBuffer[datosEnviados]; cont++)
0x707E	0x0105      	MOVLB       5
0x7080	0x2B48      	INCF        can_do_write_message_cont_L0, 1, 1
;lib_can.h,216 :: 		can.bufferTX[cont] = can.txBuffer[datosEnviados++];
0x7082	0xD7DA      	BRA         L_can_do_write_message205
L_can_do_write_message206:
0x7084	0x0105      	MOVLB       5
;lib_can.h,219 :: 		can_write(can.txId, can.bufferTX, cont, can.txPriority, false);
0x7086	0xF554C3E4  	MOVFF       _can+37, FARG_can_write_id
0x708A	0xF555C3E5  	MOVFF       _can+38, FARG_can_write_id+1
0x708E	0xF556C3E6  	MOVFF       _can+39, FARG_can_write_id+2
0x7092	0xF557C3E7  	MOVFF       _can+40, FARG_can_write_id+3
0x7096	0x0ED0      	MOVLW       _can+17
0x7098	0x6F58      	MOVWF       FARG_can_write_datos, 1
0x709A	0x0E03      	MOVLW       hi_addr(_can+17)
0x709C	0x6F59      	MOVWF       FARG_can_write_datos+1, 1
0x709E	0xF55AC548  	MOVFF       can_do_write_message_cont_L0, FARG_can_write_size
0x70A2	0xF55BC3E3  	MOVFF       _can+36, FARG_can_write_priority
0x70A6	0x6B5C      	CLRF        FARG_can_write_rtr, 1
0x70A8	0xF019ECB9  	CALL        _can_write, 0
;lib_can.h,220 :: 		maquinaE++;  //Avanza al siguiente estado
0x70AC	0x0102      	MOVLB       2
0x70AE	0x2B8B      	INCF        can_do_write_message_maquinaE_L0, 1, 1
;lib_can.h,221 :: 		can.temp = 0;
0x70B0	0x0104      	MOVLB       4
0x70B2	0x6B6C      	CLRF        _can+173, 1
0x70B4	0x6B6D      	CLRF        _can+174, 1
;lib_can.h,222 :: 		}else if(maquinaE == 2){  //Escucha si recibio los datos
0x70B6	0xD085      	BRA         L_can_do_write_message210
L_can_do_write_message202:
0x70B8	0x0102      	MOVLB       2
0x70BA	0x518B      	MOVF        can_do_write_message_maquinaE_L0, 0, 1
0x70BC	0x0A02      	XORLW       2
0x70BE	0xA4D8      	BTFSS       STATUS, 2 
0x70C0	0xD073      	BRA         L_can_do_write_message211
;lib_can.h,223 :: 		if(can_read(&id, can.bufferRX, &can.rxSize) == CAN_RW_DATA){
0x70C2	0x0E49      	MOVLW       can_do_write_message_id_L0
0x70C4	0x0105      	MOVLB       5
0x70C6	0x6F54      	MOVWF       FARG_can_read_id, 1
0x70C8	0x0E05      	MOVLW       hi_addr(can_do_write_message_id_L0)
0x70CA	0x6F55      	MOVWF       FARG_can_read_id+1, 1
0x70CC	0x0ED8      	MOVLW       _can+25
0x70CE	0x6F56      	MOVWF       FARG_can_read_datos, 1
0x70D0	0x0E03      	MOVLW       hi_addr(_can+25)
0x70D2	0x6F57      	MOVWF       FARG_can_read_datos+1, 1
0x70D4	0x0E6A      	MOVLW       _can+171
0x70D6	0x6F58      	MOVWF       FARG_can_read_size, 1
0x70D8	0x0E04      	MOVLW       hi_addr(_can+171)
0x70DA	0x6F59      	MOVWF       FARG_can_read_size+1, 1
0x70DC	0xF016ECF7  	CALL        _can_read, 0
0x70E0	0x5000      	MOVF        R0, 0 
0x70E2	0x0A01      	XORLW       1
0x70E4	0xE160      	BNZ         L_can_do_write_message212
;lib_can.h,224 :: 		if(id == can.ipAddress){
0x70E6	0x0105      	MOVLB       5
0x70E8	0x514C      	MOVF        can_do_write_message_id_L0+3, 0, 1
0x70EA	0x0103      	MOVLB       3
0x70EC	0x19C6      	XORWF       _can+7, 0, 1
0x70EE	0xE10E      	BNZ         L__can_do_write_message1123
0x70F0	0x0105      	MOVLB       5
0x70F2	0x514B      	MOVF        can_do_write_message_id_L0+2, 0, 1
0x70F4	0x0103      	MOVLB       3
0x70F6	0x19C5      	XORWF       _can+6, 0, 1
0x70F8	0xE109      	BNZ         L__can_do_write_message1123
0x70FA	0x0105      	MOVLB       5
0x70FC	0x514A      	MOVF        can_do_write_message_id_L0+1, 0, 1
0x70FE	0x0103      	MOVLB       3
0x7100	0x19C4      	XORWF       _can+5, 0, 1
0x7102	0xE104      	BNZ         L__can_do_write_message1123
0x7104	0x0105      	MOVLB       5
0x7106	0x5149      	MOVF        can_do_write_message_id_L0, 0, 1
0x7108	0x0103      	MOVLB       3
0x710A	0x19C3      	XORWF       _can+4, 0, 1
L__can_do_write_message1123:
0x710C	0xE14C      	BNZ         L_can_do_write_message213
;lib_can.h,226 :: 		if(can.bufferRX[0] == getByte(can.txId, 0)){
0x710E	0x51D8      	MOVF        _can+25, 0, 1
0x7110	0x19E4      	XORWF       _can+37, 0, 1
0x7112	0xE140      	BNZ         L_can_do_write_message214
;lib_can.h,227 :: 		if(can.bufferRX[1] == CAN_PROTOCOL_FREE){
0x7114	0x51D9      	MOVF        _can+26, 0, 1
0x7116	0x0A04      	XORLW       4
0x7118	0xE111      	BNZ         L_can_do_write_message215
;lib_can.h,229 :: 		maquinaE += !finalizar? -1:1;
0x711A	0x0104      	MOVLB       4
0x711C	0x536E      	MOVF        can_do_write_message_finalizar_L0, 1, 1
0x711E	0xE104      	BNZ         L_can_do_write_message216
0x7120	0x0EFF      	MOVLW       255
0x7122	0x0105      	MOVLB       5
0x7124	0x6F47      	MOVWF       ?FLOC___can_do_write_messageT829, 1
0x7126	0xD003      	BRA         L_can_do_write_message217
L_can_do_write_message216:
0x7128	0x0105      	MOVLB       5
0x712A	0x0E01      	MOVLW       1
0x712C	0x6F47      	MOVWF       ?FLOC___can_do_write_messageT829, 1
L_can_do_write_message217:
0x712E	0x5147      	MOVF        ?FLOC___can_do_write_messageT829, 0, 1
0x7130	0x0102      	MOVLB       2
0x7132	0x278B      	ADDWF       can_do_write_message_maquinaE_L0, 1, 1
;lib_can.h,230 :: 		can.temp = 0;
0x7134	0x0104      	MOVLB       4
0x7136	0x6B6C      	CLRF        _can+173, 1
0x7138	0x6B6D      	CLRF        _can+174, 1
;lib_can.h,231 :: 		}else if(can.bufferRX[1] == CAN_PROTOCOL_INIT){
0x713A	0xD02B      	BRA         L_can_do_write_message218
L_can_do_write_message215:
0x713C	0x0103      	MOVLB       3
0x713E	0x51D9      	MOVF        _can+26, 0, 1
0x7140	0x0A00      	XORLW       0
0x7142	0xE11B      	BNZ         L_can_do_write_message219
;lib_can.h,233 :: 		can.bufferTX[0] = can.id;             //Id del que envia
0x7144	0xF3D0C3CB  	MOVFF       _can+12, _can+17
;lib_can.h,234 :: 		can.bufferTX[1] = CAN_PROTOCOL_BUSY;  //Inicia comunicacion con el otro dispo
0x7148	0x0E03      	MOVLW       3
0x714A	0x6FD1      	MOVWF       _can+18, 1
;lib_can.h,235 :: 		can_write(can.txId, can.bufferTX, 2, 3, false);
0x714C	0xF554C3E4  	MOVFF       _can+37, FARG_can_write_id
0x7150	0xF555C3E5  	MOVFF       _can+38, FARG_can_write_id+1
0x7154	0xF556C3E6  	MOVFF       _can+39, FARG_can_write_id+2
0x7158	0xF557C3E7  	MOVFF       _can+40, FARG_can_write_id+3
0x715C	0x0ED0      	MOVLW       _can+17
0x715E	0x0105      	MOVLB       5
0x7160	0x6F58      	MOVWF       FARG_can_write_datos, 1
0x7162	0x0E03      	MOVLW       hi_addr(_can+17)
0x7164	0x6F59      	MOVWF       FARG_can_write_datos+1, 1
0x7166	0x0E02      	MOVLW       2
0x7168	0x6F5A      	MOVWF       FARG_can_write_size, 1
0x716A	0x0E03      	MOVLW       3
0x716C	0x6F5B      	MOVWF       FARG_can_write_priority, 1
0x716E	0x6B5C      	CLRF        FARG_can_write_rtr, 1
0x7170	0xF019ECB9  	CALL        _can_write, 0
;lib_can.h,237 :: 		maquinaE = 0;
0x7174	0x0102      	MOVLB       2
0x7176	0x6B8B      	CLRF        can_do_write_message_maquinaE_L0, 1
;lib_can.h,238 :: 		}else if(can.bufferRX[1] == CAN_PROTOCOL_BUSY){
0x7178	0xD00C      	BRA         L_can_do_write_message220
L_can_do_write_message219:
0x717A	0x0103      	MOVLB       3
0x717C	0x51D9      	MOVF        _can+26, 0, 1
0x717E	0x0A03      	XORLW       3
0x7180	0xE108      	BNZ         L_can_do_write_message221
;lib_can.h,239 :: 		maquinaE = 0;
0x7182	0x0102      	MOVLB       2
0x7184	0x6B8B      	CLRF        can_do_write_message_maquinaE_L0, 1
;lib_can.h,240 :: 		can.txQueu = false;
0x7186	0x0103      	MOVLB       3
0x7188	0x6BE0      	CLRF        _can+33, 1
;lib_can.h,242 :: 		can.tx_status = CAN_RW_CORRUPT;
0x718A	0x0E03      	MOVLW       3
0x718C	0x6FE1      	MOVWF       _can+34, 1
;lib_can.h,243 :: 		can_user_write_message();
0x718E	0xF01DEC0F  	CALL        _can_user_write_message, 0
;lib_can.h,244 :: 		}
L_can_do_write_message221:
L_can_do_write_message220:
L_can_do_write_message218:
;lib_can.h,245 :: 		}else{
0x7192	0xD009      	BRA         L_can_do_write_message222
L_can_do_write_message214:
;lib_can.h,246 :: 		if(can.bufferRX[1] == CAN_PROTOCOL_HEARTBEAT){
0x7194	0x0103      	MOVLB       3
0x7196	0x51D9      	MOVF        _can+26, 0, 1
0x7198	0x0AFF      	XORLW       255
0x719A	0xE105      	BNZ         L_can_do_write_message223
;lib_can.h,247 :: 		can_user_guardHeartBeat(can.bufferRX[0]);
0x719C	0xF554C3D8  	MOVFF       _can+25, FARG_can_user_guardHeartBeat_idNodo
0x71A0	0xF01BEC2B  	CALL        _can_user_guardHeartBeat, 0
;lib_can.h,248 :: 		return;
0x71A4	0xD010      	BRA         L_end_can_do_write_message
;lib_can.h,249 :: 		}
L_can_do_write_message223:
;lib_can.h,250 :: 		}
L_can_do_write_message222:
;lib_can.h,251 :: 		}
L_can_do_write_message213:
;lib_can.h,252 :: 		}
L_can_do_write_message212:
;lib_can.h,253 :: 		}else if(maquinaE == 3){
0x71A6	0xD00D      	BRA         L_can_do_write_message224
L_can_do_write_message211:
0x71A8	0x0102      	MOVLB       2
0x71AA	0x518B      	MOVF        can_do_write_message_maquinaE_L0, 0, 1
0x71AC	0x0A03      	XORLW       3
0x71AE	0xE109      	BNZ         L_can_do_write_message225
;lib_can.h,254 :: 		maquinaE = 0;
0x71B0	0x6B8B      	CLRF        can_do_write_message_maquinaE_L0, 1
;lib_can.h,255 :: 		can.txQueu = false;
0x71B2	0x0103      	MOVLB       3
0x71B4	0x6BE0      	CLRF        _can+33, 1
;lib_can.h,256 :: 		finalizar  = false;
0x71B6	0x0104      	MOVLB       4
0x71B8	0x6B6E      	CLRF        can_do_write_message_finalizar_L0, 1
;lib_can.h,257 :: 		can.tx_status = CAN_RW_ENVIADO;
0x71BA	0x0103      	MOVLB       3
0x71BC	0x6BE1      	CLRF        _can+34, 1
;lib_can.h,258 :: 		can_user_write_message();  //DATOS ENVIADOS CON EXITO
0x71BE	0xF01DEC0F  	CALL        _can_user_write_message, 0
;lib_can.h,259 :: 		}
L_can_do_write_message225:
L_can_do_write_message224:
L_can_do_write_message210:
L_can_do_write_message201:
;lib_can.h,261 :: 		can.tx_status = 0;
0x71C2	0x0103      	MOVLB       3
0x71C4	0x6BE1      	CLRF        _can+34, 1
;lib_can.h,263 :: 		}
L_end_can_do_write_message:
0x71C6	0x0012      	RETURN      0
; end of _can_do_write_message
_can_do_read_message:
;lib_can.h,265 :: 		void can_do_read_message(){
;lib_can.h,271 :: 		if(can.txQueu)
0x71C8	0x0103      	MOVLB       3
0x71CA	0x53E0      	MOVF        _can+33, 1, 1
0x71CC	0xE001      	BZ          L_can_do_read_message226
;lib_can.h,272 :: 		return;
0x71CE	0xD0EF      	BRA         L_end_can_do_read_message
L_can_do_read_message226:
;lib_can.h,275 :: 		if(can.rxBusy){
0x71D0	0x0104      	MOVLB       4
0x71D2	0x5329      	MOVF        _can+106, 1, 1
0x71D4	0xE008      	BZ          L_can_do_read_message227
;lib_can.h,276 :: 		if(can.temp >= CAN_MAX_TIME_ACK){
0x71D6	0x0E0B      	MOVLW       11
0x71D8	0x5D6D      	SUBWF       _can+174, 0, 1
0x71DA	0xE102      	BNZ         L__can_do_read_message1125
0x71DC	0x0EB8      	MOVLW       184
0x71DE	0x5D6C      	SUBWF       _can+173, 0, 1
L__can_do_read_message1125:
0x71E0	0xE302      	BNC         L_can_do_read_message228
;lib_can.h,277 :: 		can.rxBusy = false;
0x71E2	0x6B29      	CLRF        _can+106, 1
;lib_can.h,278 :: 		return;
0x71E4	0xD0E4      	BRA         L_end_can_do_read_message
;lib_can.h,279 :: 		}
L_can_do_read_message228:
;lib_can.h,280 :: 		}
L_can_do_read_message227:
;lib_can.h,283 :: 		if(can_read(&id, can.bufferRX, &can.rxSize) == CAN_RW_DATA){
0x71E6	0x0E46      	MOVLW       can_do_read_message_id_L0
0x71E8	0x0105      	MOVLB       5
0x71EA	0x6F54      	MOVWF       FARG_can_read_id, 1
0x71EC	0x0E05      	MOVLW       hi_addr(can_do_read_message_id_L0)
0x71EE	0x6F55      	MOVWF       FARG_can_read_id+1, 1
0x71F0	0x0ED8      	MOVLW       _can+25
0x71F2	0x6F56      	MOVWF       FARG_can_read_datos, 1
0x71F4	0x0E03      	MOVLW       hi_addr(_can+25)
0x71F6	0x6F57      	MOVWF       FARG_can_read_datos+1, 1
0x71F8	0x0E6A      	MOVLW       _can+171
0x71FA	0x6F58      	MOVWF       FARG_can_read_size, 1
0x71FC	0x0E04      	MOVLW       hi_addr(_can+171)
0x71FE	0x6F59      	MOVWF       FARG_can_read_size+1, 1
0x7200	0xF016ECF7  	CALL        _can_read, 0
0x7204	0x5000      	MOVF        R0, 0 
0x7206	0x0A01      	XORLW       1
0x7208	0xA4D8      	BTFSS       STATUS, 2 
0x720A	0xD0D1      	BRA         L_can_do_read_message229
;lib_can.h,284 :: 		if(id == can.ipAddress){  //LA IP CONTIENE EL NUMERO DE RED+ID
0x720C	0x0105      	MOVLB       5
0x720E	0x5149      	MOVF        can_do_read_message_id_L0+3, 0, 1
0x7210	0x0103      	MOVLB       3
0x7212	0x19C6      	XORWF       _can+7, 0, 1
0x7214	0xE10E      	BNZ         L__can_do_read_message1126
0x7216	0x0105      	MOVLB       5
0x7218	0x5148      	MOVF        can_do_read_message_id_L0+2, 0, 1
0x721A	0x0103      	MOVLB       3
0x721C	0x19C5      	XORWF       _can+6, 0, 1
0x721E	0xE109      	BNZ         L__can_do_read_message1126
0x7220	0x0105      	MOVLB       5
0x7222	0x5147      	MOVF        can_do_read_message_id_L0+1, 0, 1
0x7224	0x0103      	MOVLB       3
0x7226	0x19C4      	XORWF       _can+5, 0, 1
0x7228	0xE104      	BNZ         L__can_do_read_message1126
0x722A	0x0105      	MOVLB       5
0x722C	0x5146      	MOVF        can_do_read_message_id_L0, 0, 1
0x722E	0x0103      	MOVLB       3
0x7230	0x19C3      	XORWF       _can+4, 0, 1
L__can_do_read_message1126:
0x7232	0xA4D8      	BTFSS       STATUS, 2 
0x7234	0xD0BC      	BRA         L_can_do_read_message230
;lib_can.h,286 :: 		if(can.bufferRX[1] == CAN_PROTOCOL_HEARTBEAT){
0x7236	0x51D9      	MOVF        _can+26, 0, 1
0x7238	0x0AFF      	XORLW       255
0x723A	0xE105      	BNZ         L_can_do_read_message231
;lib_can.h,287 :: 		can_user_guardHeartBeat(can.bufferRX[0]);
0x723C	0xF554C3D8  	MOVFF       _can+25, FARG_can_user_guardHeartBeat_idNodo
0x7240	0xF01BEC2B  	CALL        _can_user_guardHeartBeat, 0
;lib_can.h,288 :: 		return;
0x7244	0xD0B4      	BRA         L_end_can_do_read_message
;lib_can.h,289 :: 		}
L_can_do_read_message231:
;lib_can.h,291 :: 		if(can.rxBusy){
0x7246	0x0104      	MOVLB       4
0x7248	0x5329      	MOVF        _can+106, 1, 1
0x724A	0xE027      	BZ          L_can_do_read_message232
;lib_can.h,293 :: 		if(can.rxId != can.bufferRX[0]){
0x724C	0x516B      	MOVF        _can+172, 0, 1
0x724E	0x0103      	MOVLB       3
0x7250	0x19D8      	XORWF       _can+25, 0, 1
0x7252	0xE023      	BZ          L_can_do_read_message233
;lib_can.h,294 :: 		can.bufferTX[0] = can.id;
0x7254	0xF3D0C3CB  	MOVFF       _can+12, _can+17
;lib_can.h,295 :: 		can.bufferTX[1] = CAN_PROTOCOL_BUSY;
0x7258	0x0E03      	MOVLW       3
0x725A	0x6FD1      	MOVWF       _can+18, 1
;lib_can.h,296 :: 		can_write(can.ip+can.bufferRX[0], can.bufferTX, 2, 3, false);
0x725C	0x51D8      	MOVF        _can+25, 0, 1
0x725E	0x25BF      	ADDWF       _can, 0, 1
0x7260	0x0105      	MOVLB       5
0x7262	0x6F54      	MOVWF       FARG_can_write_id, 1
0x7264	0x0E00      	MOVLW       0
0x7266	0x0103      	MOVLB       3
0x7268	0x21C0      	ADDWFC      _can+1, 0, 1
0x726A	0x0105      	MOVLB       5
0x726C	0x6F55      	MOVWF       FARG_can_write_id+1, 1
0x726E	0x0E00      	MOVLW       0
0x7270	0x0103      	MOVLB       3
0x7272	0x21C1      	ADDWFC      _can+2, 0, 1
0x7274	0x0105      	MOVLB       5
0x7276	0x6F56      	MOVWF       FARG_can_write_id+2, 1
0x7278	0x0E00      	MOVLW       0
0x727A	0x0103      	MOVLB       3
0x727C	0x21C2      	ADDWFC      _can+3, 0, 1
0x727E	0x0105      	MOVLB       5
0x7280	0x6F57      	MOVWF       FARG_can_write_id+3, 1
0x7282	0x0ED0      	MOVLW       _can+17
0x7284	0x6F58      	MOVWF       FARG_can_write_datos, 1
0x7286	0x0E03      	MOVLW       hi_addr(_can+17)
0x7288	0x6F59      	MOVWF       FARG_can_write_datos+1, 1
0x728A	0x0E02      	MOVLW       2
0x728C	0x6F5A      	MOVWF       FARG_can_write_size, 1
0x728E	0x0E03      	MOVLW       3
0x7290	0x6F5B      	MOVWF       FARG_can_write_priority, 1
0x7292	0x6B5C      	CLRF        FARG_can_write_rtr, 1
0x7294	0xF019ECB9  	CALL        _can_write, 0
;lib_can.h,297 :: 		return;
0x7298	0xD08A      	BRA         L_end_can_do_read_message
;lib_can.h,298 :: 		}
L_can_do_read_message233:
;lib_can.h,299 :: 		}
L_can_do_read_message232:
;lib_can.h,301 :: 		if(can.bufferRX[1] == CAN_PROTOCOL_INIT){  //INICIA LA PRIMERA COMUNICACION
0x729A	0x0103      	MOVLB       3
0x729C	0x51D9      	MOVF        _can+26, 0, 1
0x729E	0x0A00      	XORLW       0
0x72A0	0xE10B      	BNZ         L_can_do_read_message234
;lib_can.h,302 :: 		can.rxId = can.bufferRX[0];  //ID del transmisor
0x72A2	0xF46BC3D8  	MOVFF       _can+25, _can+172
;lib_can.h,303 :: 		can.rxBusy = true;
0x72A6	0x0E01      	MOVLW       1
0x72A8	0x0104      	MOVLB       4
0x72AA	0x6F29      	MOVWF       _can+106, 1
;lib_can.h,304 :: 		len = 0;
0x72AC	0x0102      	MOVLB       2
0x72AE	0x6B86      	CLRF        can_do_read_message_len_L0, 1
;lib_can.h,305 :: 		can.temp = 0;
0x72B0	0x0104      	MOVLB       4
0x72B2	0x6B6C      	CLRF        _can+173, 1
0x72B4	0x6B6D      	CLRF        _can+174, 1
;lib_can.h,306 :: 		}else if(!can.rxBusy){
0x72B6	0xD050      	BRA         L_can_do_read_message235
L_can_do_read_message234:
0x72B8	0x0104      	MOVLB       4
0x72BA	0x5329      	MOVF        _can+106, 1, 1
0x72BC	0xE101      	BNZ         L_can_do_read_message236
;lib_can.h,308 :: 		return;
0x72BE	0xD077      	BRA         L_end_can_do_read_message
;lib_can.h,309 :: 		}else if(can.bufferRX[1] == CAN_PROTOCOL_QUEU){ //ENCOLA LOS DATOS
L_can_do_read_message236:
0x72C0	0x0103      	MOVLB       3
0x72C2	0x51D9      	MOVF        _can+26, 0, 1
0x72C4	0x0A01      	XORLW       1
0x72C6	0xE139      	BNZ         L_can_do_read_message238
;lib_can.h,311 :: 		for(cont = 2; cont < can.rxSize && len < CAN_LEN_BUFFER_RXTX-1; cont++)
0x72C8	0x0E02      	MOVLW       2
0x72CA	0x0105      	MOVLB       5
0x72CC	0x6F4A      	MOVWF       can_do_read_message_cont_L0, 1
L_can_do_read_message239:
0x72CE	0x0104      	MOVLB       4
0x72D0	0x516A      	MOVF        _can+171, 0, 1
0x72D2	0x0105      	MOVLB       5
0x72D4	0x5D4A      	SUBWF       can_do_read_message_cont_L0, 0, 1
0x72D6	0xE223      	BC          L_can_do_read_message240
0x72D8	0x0E80      	MOVLW       128
0x72DA	0x6E00      	MOVWF       R0 
0x72DC	0x0E80      	MOVLW       128
0x72DE	0x0A00      	XORLW       0
0x72E0	0x5C00      	SUBWF       R0, 0 
0x72E2	0xE103      	BNZ         L__can_do_read_message1127
0x72E4	0x0E3F      	MOVLW       63
0x72E6	0x0102      	MOVLB       2
0x72E8	0x5D86      	SUBWF       can_do_read_message_len_L0, 0, 1
L__can_do_read_message1127:
0x72EA	0xE219      	BC          L_can_do_read_message240
L__can_do_read_message933:
0x72EC	0x0102      	MOVLB       2
;lib_can.h,312 :: 		can.rxBuffer[len++] = can.bufferRX[cont];
0x72EE	0x0E2A      	MOVLW       _can+107
0x72F0	0x6EE1      	MOVWF       FSR1L 
0x72F2	0x0E04      	MOVLW       hi_addr(_can+107)
0x72F4	0x6EE2      	MOVWF       FSR1H 
0x72F6	0x5186      	MOVF        can_do_read_message_len_L0, 0, 1
0x72F8	0x26E1      	ADDWF       FSR1L, 1 
0x72FA	0xB0D8      	BTFSC       STATUS, 0 
0x72FC	0x2AE2      	INCF        FSR1H, 1 
0x72FE	0x0ED8      	MOVLW       _can+25
0x7300	0x6EE9      	MOVWF       FSR0L 
0x7302	0x0E03      	MOVLW       hi_addr(_can+25)
0x7304	0x6EEA      	MOVWF       FSR0H 
0x7306	0x0105      	MOVLB       5
0x7308	0x514A      	MOVF        can_do_read_message_cont_L0, 0, 1
0x730A	0x26E9      	ADDWF       FSR0L, 1 
0x730C	0xB0D8      	BTFSC       STATUS, 0 
0x730E	0x2AEA      	INCF        FSR0H, 1 
0x7310	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x7314	0x0102      	MOVLB       2
0x7316	0x2B86      	INCF        can_do_read_message_len_L0, 1, 1
;lib_can.h,311 :: 		for(cont = 2; cont < can.rxSize && len < CAN_LEN_BUFFER_RXTX-1; cont++)
0x7318	0x0105      	MOVLB       5
0x731A	0x2B4A      	INCF        can_do_read_message_cont_L0, 1, 1
;lib_can.h,312 :: 		can.rxBuffer[len++] = can.bufferRX[cont];
0x731C	0xD7D8      	BRA         L_can_do_read_message239
L_can_do_read_message240:
;lib_can.h,313 :: 		can.rxBuffer[len] = 0;
0x731E	0x0E2A      	MOVLW       _can+107
0x7320	0x6EE1      	MOVWF       FSR1L 
0x7322	0x0E04      	MOVLW       hi_addr(_can+107)
0x7324	0x6EE2      	MOVWF       FSR1H 
0x7326	0x0102      	MOVLB       2
0x7328	0x5186      	MOVF        can_do_read_message_len_L0, 0, 1
0x732A	0x26E1      	ADDWF       FSR1L, 1 
0x732C	0xB0D8      	BTFSC       STATUS, 0 
0x732E	0x2AE2      	INCF        FSR1H, 1 
0x7330	0x6AE6      	CLRF        POSTINC1 
;lib_can.h,314 :: 		can.temp = 0;
0x7332	0x0104      	MOVLB       4
0x7334	0x6B6C      	CLRF        _can+173, 1
0x7336	0x6B6D      	CLRF        _can+174, 1
;lib_can.h,315 :: 		}else if(can.bufferRX[1] == CAN_PROTOCOL_END){  //FINALIZA COMUNICACION
0x7338	0xD00F      	BRA         L_can_do_read_message244
L_can_do_read_message238:
0x733A	0x0103      	MOVLB       3
0x733C	0x51D9      	MOVF        _can+26, 0, 1
0x733E	0x0A02      	XORLW       2
0x7340	0xE10B      	BNZ         L_can_do_read_message245
;lib_can.h,316 :: 		can.rxBuffer[len] = 0;  //Agregar final de cadena
0x7342	0x0E2A      	MOVLW       _can+107
0x7344	0x6EE1      	MOVWF       FSR1L 
0x7346	0x0E04      	MOVLW       hi_addr(_can+107)
0x7348	0x6EE2      	MOVWF       FSR1H 
0x734A	0x0102      	MOVLB       2
0x734C	0x5186      	MOVF        can_do_read_message_len_L0, 0, 1
0x734E	0x26E1      	ADDWF       FSR1L, 1 
0x7350	0xB0D8      	BTFSC       STATUS, 0 
0x7352	0x2AE2      	INCF        FSR1H, 1 
0x7354	0x6AE6      	CLRF        POSTINC1 
;lib_can.h,317 :: 		len = 0;
0x7356	0x6B86      	CLRF        can_do_read_message_len_L0, 1
;lib_can.h,318 :: 		}
L_can_do_read_message245:
L_can_do_read_message244:
L_can_do_read_message235:
;lib_can.h,321 :: 		can.bufferTX[0] = can.id;
0x7358	0xF3D0C3CB  	MOVFF       _can+12, _can+17
;lib_can.h,322 :: 		can.bufferTX[1] = CAN_PROTOCOL_FREE;  //Modulo libre
0x735C	0x0E04      	MOVLW       4
0x735E	0x0103      	MOVLB       3
0x7360	0x6FD1      	MOVWF       _can+18, 1
;lib_can.h,323 :: 		can_write(can.ip+can.bufferRX[0], can.bufferTX, 2, 3, false);
0x7362	0x51D8      	MOVF        _can+25, 0, 1
0x7364	0x25BF      	ADDWF       _can, 0, 1
0x7366	0x0105      	MOVLB       5
0x7368	0x6F54      	MOVWF       FARG_can_write_id, 1
0x736A	0x0E00      	MOVLW       0
0x736C	0x0103      	MOVLB       3
0x736E	0x21C0      	ADDWFC      _can+1, 0, 1
0x7370	0x0105      	MOVLB       5
0x7372	0x6F55      	MOVWF       FARG_can_write_id+1, 1
0x7374	0x0E00      	MOVLW       0
0x7376	0x0103      	MOVLB       3
0x7378	0x21C1      	ADDWFC      _can+2, 0, 1
0x737A	0x0105      	MOVLB       5
0x737C	0x6F56      	MOVWF       FARG_can_write_id+2, 1
0x737E	0x0E00      	MOVLW       0
0x7380	0x0103      	MOVLB       3
0x7382	0x21C2      	ADDWFC      _can+3, 0, 1
0x7384	0x0105      	MOVLB       5
0x7386	0x6F57      	MOVWF       FARG_can_write_id+3, 1
0x7388	0x0ED0      	MOVLW       _can+17
0x738A	0x6F58      	MOVWF       FARG_can_write_datos, 1
0x738C	0x0E03      	MOVLW       hi_addr(_can+17)
0x738E	0x6F59      	MOVWF       FARG_can_write_datos+1, 1
0x7390	0x0E02      	MOVLW       2
0x7392	0x6F5A      	MOVWF       FARG_can_write_size, 1
0x7394	0x0E03      	MOVLW       3
0x7396	0x6F5B      	MOVWF       FARG_can_write_priority, 1
0x7398	0x6B5C      	CLRF        FARG_can_write_rtr, 1
0x739A	0xF019ECB9  	CALL        _can_write, 0
;lib_can.h,326 :: 		if(can.bufferRX[1] == CAN_PROTOCOL_END){
0x739E	0x0103      	MOVLB       3
0x73A0	0x51D9      	MOVF        _can+26, 0, 1
0x73A2	0x0A02      	XORLW       2
0x73A4	0xE104      	BNZ         L_can_do_read_message246
;lib_can.h,327 :: 		can_user_read_message();
0x73A6	0xF01FECD4  	CALL        _can_user_read_message, 0
;lib_can.h,328 :: 		can.rxBusy = false;
0x73AA	0x0104      	MOVLB       4
0x73AC	0x6B29      	CLRF        _can+106, 1
;lib_can.h,329 :: 		}
L_can_do_read_message246:
;lib_can.h,330 :: 		}
L_can_do_read_message230:
;lib_can.h,331 :: 		}
L_can_do_read_message229:
;lib_can.h,332 :: 		}
L_end_can_do_read_message:
0x73AE	0x0012      	RETURN      0
; end of _can_do_read_message
_wiegand26_read_nip:
;wiegand26.h,102 :: 		bool wiegand26_read_nip(int *nip){
;wiegand26.h,105 :: 		if(WIEGAN26_CONT == 32){
0x73B0	0x0103      	MOVLB       3
0x73B2	0x5138      	MOVF        Validadora_WIEGAN26_CONT, 0, 1
0x73B4	0x0A20      	XORLW       32
0x73B6	0xA4D8      	BTFSS       STATUS, 2 
0x73B8	0xD0AB      	BRA         L_wiegand26_read_nip584
;wiegand26.h,106 :: 		delay_ms(_WIEGAND26_PULSE_TIME_MAX_MS);  //Para asegurar datos de 26 bits
0x73BA	0x0E11      	MOVLW       17
0x73BC	0x6E0C      	MOVWF       R12, 0
0x73BE	0x0E3A      	MOVLW       58
0x73C0	0x6E0D      	MOVWF       R13, 0
L_wiegand26_read_nip585:
0x73C2	0x2E0D      	DECFSZ      R13, 1, 0
0x73C4	0xD7FE      	BRA         L_wiegand26_read_nip585
0x73C6	0x2E0C      	DECFSZ      R12, 1, 0
0x73C8	0xD7FC      	BRA         L_wiegand26_read_nip585
0x73CA	0x0000      	NOP
;wiegand26.h,108 :: 		if(WIEGAN26_CONT != 32)
0x73CC	0x5138      	MOVF        Validadora_WIEGAN26_CONT, 0, 1
0x73CE	0x0A20      	XORLW       32
0x73D0	0xE002      	BZ          L_wiegand26_read_nip586
;wiegand26.h,109 :: 		return false;
0x73D2	0x6A00      	CLRF        R0 
0x73D4	0xD09E      	BRA         L_end_wiegand26_read_nip
L_wiegand26_read_nip586:
;wiegand26.h,112 :: 		WIEGAN26_BUFFER = WIEGAN26_DATA;
0x73D6	0xF334C339  	MOVFF       Validadora_WIEGAN26_DATA, Validadora_WIEGAN26_BUFFER
0x73DA	0xF335C33A  	MOVFF       Validadora_WIEGAN26_DATA+1, Validadora_WIEGAN26_BUFFER+1
0x73DE	0xF336C33B  	MOVFF       Validadora_WIEGAN26_DATA+2, Validadora_WIEGAN26_BUFFER+2
0x73E2	0xF337C33C  	MOVFF       Validadora_WIEGAN26_DATA+3, Validadora_WIEGAN26_BUFFER+3
;wiegand26.h,114 :: 		WIEGAN26_CONT = 0;    //Resetear puntero
0x73E6	0x6B38      	CLRF        Validadora_WIEGAN26_CONT, 1
;wiegand26.h,115 :: 		WIEGAN26_DATA = 0;    //Resetear la informacion
0x73E8	0x6B39      	CLRF        Validadora_WIEGAN26_DATA, 1
0x73EA	0x6B3A      	CLRF        Validadora_WIEGAN26_DATA+1, 1
0x73EC	0x6B3B      	CLRF        Validadora_WIEGAN26_DATA+2, 1
0x73EE	0x6B3C      	CLRF        Validadora_WIEGAN26_DATA+3, 1
;wiegand26.h,118 :: 		if(!wiegand26_checkTouch(4))
0x73F0	0x0E04      	MOVLW       4
0x73F2	0x0105      	MOVLB       5
0x73F4	0x6F54      	MOVWF       FARG_wiegand26_checkTouch_bytes, 1
0x73F6	0xF01EEC19  	CALL        _wiegand26_checkTouch, 0
0x73FA	0x5200      	MOVF        R0, 1 
0x73FC	0xE102      	BNZ         L_wiegand26_read_nip587
;wiegand26.h,119 :: 		return false;
0x73FE	0x6A00      	CLRF        R0 
0x7400	0xD088      	BRA         L_end_wiegand26_read_nip
L_wiegand26_read_nip587:
;wiegand26.h,121 :: 		for(i = 0; i < 4; i++){
0x7402	0x6B48      	CLRF        wiegand26_read_nip_i_L0, 1
L_wiegand26_read_nip588:
0x7404	0x0E80      	MOVLW       128
0x7406	0x1948      	XORWF       wiegand26_read_nip_i_L0, 0, 1
0x7408	0x6E00      	MOVWF       R0 
0x740A	0x0E80      	MOVLW       128
0x740C	0x0A04      	XORLW       4
0x740E	0x5C00      	SUBWF       R0, 0 
0x7410	0xE236      	BC          L_wiegand26_read_nip589
;wiegand26.h,122 :: 		getByte(WIEGAN26_BUFFER,i) &= 0x0F;
0x7412	0x0E34      	MOVLW       Validadora_WIEGAN26_BUFFER
0x7414	0x6E01      	MOVWF       R1 
0x7416	0x0E03      	MOVLW       hi_addr(Validadora_WIEGAN26_BUFFER)
0x7418	0x6E02      	MOVWF       R2 
0x741A	0x5148      	MOVF        wiegand26_read_nip_i_L0, 0, 1
0x741C	0x2601      	ADDWF       R1, 1 
0x741E	0x0E00      	MOVLW       0
0x7420	0xBF48      	BTFSC       wiegand26_read_nip_i_L0, 7, 1
0x7422	0x0EFF      	MOVLW       255
0x7424	0x2202      	ADDWFC      R2, 1 
0x7426	0xFFE9C001  	MOVFF       R1, FSR0L
0x742A	0xFFEAC002  	MOVFF       R2, FSR0H
0x742E	0x0E0F      	MOVLW       15
0x7430	0x14EE      	ANDWF       POSTINC0, 0 
0x7432	0x6E00      	MOVWF       R0 
0x7434	0xFFE1C001  	MOVFF       R1, FSR1L
0x7438	0xFFE2C002  	MOVFF       R2, FSR1H
0x743C	0xFFE6C000  	MOVFF       R0, POSTINC1
;wiegand26.h,123 :: 		if(getByte(WIEGAN26_BUFFER,i) == 0x0A || getByte(WIEGAN26_BUFFER,i) == 0x0B)
0x7440	0x0E34      	MOVLW       Validadora_WIEGAN26_BUFFER
0x7442	0x6EE9      	MOVWF       FSR0L 
0x7444	0x0E03      	MOVLW       hi_addr(Validadora_WIEGAN26_BUFFER)
0x7446	0x6EEA      	MOVWF       FSR0H 
0x7448	0x5148      	MOVF        wiegand26_read_nip_i_L0, 0, 1
0x744A	0x26E9      	ADDWF       FSR0L, 1 
0x744C	0x0E00      	MOVLW       0
0x744E	0xBF48      	BTFSC       wiegand26_read_nip_i_L0, 7, 1
0x7450	0x0EFF      	MOVLW       255
0x7452	0x22EA      	ADDWFC      FSR0H, 1 
0x7454	0x50EE      	MOVF        POSTINC0, 0 
0x7456	0x0A0A      	XORLW       10
0x7458	0xE00E      	BZ          L__wiegand26_read_nip968
0x745A	0x0E34      	MOVLW       Validadora_WIEGAN26_BUFFER
0x745C	0x6EE9      	MOVWF       FSR0L 
0x745E	0x0E03      	MOVLW       hi_addr(Validadora_WIEGAN26_BUFFER)
0x7460	0x6EEA      	MOVWF       FSR0H 
0x7462	0x5148      	MOVF        wiegand26_read_nip_i_L0, 0, 1
0x7464	0x26E9      	ADDWF       FSR0L, 1 
0x7466	0x0E00      	MOVLW       0
0x7468	0xBF48      	BTFSC       wiegand26_read_nip_i_L0, 7, 1
0x746A	0x0EFF      	MOVLW       255
0x746C	0x22EA      	ADDWFC      FSR0H, 1 
0x746E	0x50EE      	MOVF        POSTINC0, 0 
0x7470	0x0A0B      	XORLW       11
0x7472	0xE001      	BZ          L__wiegand26_read_nip968
0x7474	0xD002      	BRA         L_wiegand26_read_nip593
L__wiegand26_read_nip968:
;wiegand26.h,124 :: 		return false;
0x7476	0x6A00      	CLRF        R0 
0x7478	0xD04C      	BRA         L_end_wiegand26_read_nip
L_wiegand26_read_nip593:
;wiegand26.h,121 :: 		for(i = 0; i < 4; i++){
0x747A	0x2B48      	INCF        wiegand26_read_nip_i_L0, 1, 1
;wiegand26.h,125 :: 		}
0x747C	0xD7C3      	BRA         L_wiegand26_read_nip588
L_wiegand26_read_nip589:
;wiegand26.h,127 :: 		*nip = 0;
0x747E	0xFFE1C546  	MOVFF       FARG_wiegand26_read_nip_nip, FSR1L
0x7482	0xFFE2C547  	MOVFF       FARG_wiegand26_read_nip_nip+1, FSR1H
0x7486	0x6AE6      	CLRF        POSTINC1 
0x7488	0x6AE6      	CLRF        POSTINC1 
;wiegand26.h,128 :: 		for(i = 3; i >= 0; i--){
0x748A	0x0E03      	MOVLW       3
0x748C	0x6F48      	MOVWF       wiegand26_read_nip_i_L0, 1
L_wiegand26_read_nip594:
0x748E	0x0E80      	MOVLW       128
0x7490	0xBF48      	BTFSC       wiegand26_read_nip_i_L0, 7, 1
0x7492	0x0E7F      	MOVLW       127
0x7494	0x6E00      	MOVWF       R0 
0x7496	0x0E80      	MOVLW       128
0x7498	0x5C00      	SUBWF       R0, 0 
0x749A	0xE102      	BNZ         L__wiegand26_read_nip1322
0x749C	0x0E00      	MOVLW       0
0x749E	0x5D48      	SUBWF       wiegand26_read_nip_i_L0, 0, 1
L__wiegand26_read_nip1322:
0x74A0	0xE334      	BNC         L_wiegand26_read_nip595
;wiegand26.h,129 :: 		*nip *= 10;
0x74A2	0xFFE9C546  	MOVFF       FARG_wiegand26_read_nip_nip, FSR0L
0x74A6	0xFFEAC547  	MOVFF       FARG_wiegand26_read_nip_nip+1, FSR0H
0x74AA	0xF000CFEE  	MOVFF       POSTINC0, R0
0x74AE	0xF001CFEE  	MOVFF       POSTINC0, R1
0x74B2	0x0E0A      	MOVLW       10
0x74B4	0x6E04      	MOVWF       R4 
0x74B6	0x0E00      	MOVLW       0
0x74B8	0x6E05      	MOVWF       R5 
0x74BA	0xF002ECC0  	CALL        _Mul_16X16_U, 0
0x74BE	0xFFE1C546  	MOVFF       FARG_wiegand26_read_nip_nip, FSR1L
0x74C2	0xFFE2C547  	MOVFF       FARG_wiegand26_read_nip_nip+1, FSR1H
0x74C6	0xFFE6C000  	MOVFF       R0, POSTINC1
0x74CA	0xFFE6C001  	MOVFF       R1, POSTINC1
;wiegand26.h,130 :: 		*nip += getByte(WIEGAN26_BUFFER,i);
0x74CE	0x0E34      	MOVLW       Validadora_WIEGAN26_BUFFER
0x74D0	0x6ED9      	MOVWF       FSR2L 
0x74D2	0x0E03      	MOVLW       hi_addr(Validadora_WIEGAN26_BUFFER)
0x74D4	0x6EDA      	MOVWF       FSR2H 
0x74D6	0x5148      	MOVF        wiegand26_read_nip_i_L0, 0, 1
0x74D8	0x26D9      	ADDWF       FSR2L, 1 
0x74DA	0x0E00      	MOVLW       0
0x74DC	0xBF48      	BTFSC       wiegand26_read_nip_i_L0, 7, 1
0x74DE	0x0EFF      	MOVLW       255
0x74E0	0x22DA      	ADDWFC      FSR2H, 1 
0x74E2	0xFFE9C546  	MOVFF       FARG_wiegand26_read_nip_nip, FSR0L
0x74E6	0xFFEAC547  	MOVFF       FARG_wiegand26_read_nip_nip+1, FSR0H
0x74EA	0x50DE      	MOVF        POSTINC2, 0 
0x74EC	0x24EE      	ADDWF       POSTINC0, 0 
0x74EE	0x6E00      	MOVWF       R0 
0x74F0	0x0E00      	MOVLW       0
0x74F2	0x20EE      	ADDWFC      POSTINC0, 0 
0x74F4	0x6E01      	MOVWF       R1 
0x74F6	0xFFE1C546  	MOVFF       FARG_wiegand26_read_nip_nip, FSR1L
0x74FA	0xFFE2C547  	MOVFF       FARG_wiegand26_read_nip_nip+1, FSR1H
0x74FE	0xFFE6C000  	MOVFF       R0, POSTINC1
0x7502	0xFFE6C001  	MOVFF       R1, POSTINC1
;wiegand26.h,128 :: 		for(i = 3; i >= 0; i--){
0x7506	0x0748      	DECF        wiegand26_read_nip_i_L0, 1, 1
;wiegand26.h,131 :: 		}
0x7508	0xD7C2      	BRA         L_wiegand26_read_nip594
L_wiegand26_read_nip595:
;wiegand26.h,132 :: 		return true;
0x750A	0x0E01      	MOVLW       1
0x750C	0x6E00      	MOVWF       R0 
0x750E	0xD001      	BRA         L_end_wiegand26_read_nip
;wiegand26.h,133 :: 		}
L_wiegand26_read_nip584:
;wiegand26.h,135 :: 		return false;
0x7510	0x6A00      	CLRF        R0 
;wiegand26.h,136 :: 		}
L_end_wiegand26_read_nip:
0x7512	0x0012      	RETURN      0
; end of _wiegand26_read_nip
_ByteToStr:
;__Lib_Conversions.c,66 :: 		
;__Lib_Conversions.c,69 :: 		
0x7514	0x0105      	MOVLB       5
0x7516	0x6B49      	CLRF        ByteToStr_DigitPos_L0, 1
L_ByteToStr0:
0x7518	0x0E03      	MOVLW       3
0x751A	0x5D49      	SUBWF       ByteToStr_DigitPos_L0, 0, 1
0x751C	0xE20A      	BC          L_ByteToStr1
;__Lib_Conversions.c,70 :: 		
0x751E	0x5149      	MOVF        ByteToStr_DigitPos_L0, 0, 1
0x7520	0x2547      	ADDWF       FARG_ByteToStr_output, 0, 1
0x7522	0x6EE1      	MOVWF       FSR1L 
0x7524	0x0E00      	MOVLW       0
0x7526	0x2148      	ADDWFC      FARG_ByteToStr_output+1, 0, 1
0x7528	0x6EE2      	MOVWF       FSR1H 
0x752A	0x0E20      	MOVLW       32
0x752C	0x6EE6      	MOVWF       POSTINC1 
;__Lib_Conversions.c,69 :: 		
0x752E	0x2B49      	INCF        ByteToStr_DigitPos_L0, 1, 1
;__Lib_Conversions.c,70 :: 		
0x7530	0xD7F3      	BRA         L_ByteToStr0
L_ByteToStr1:
;__Lib_Conversions.c,72 :: 		
0x7532	0x5149      	MOVF        ByteToStr_DigitPos_L0, 0, 1
0x7534	0x2547      	ADDWF       FARG_ByteToStr_output, 0, 1
0x7536	0x6EE1      	MOVWF       FSR1L 
0x7538	0x0E00      	MOVLW       0
0x753A	0x2148      	ADDWFC      FARG_ByteToStr_output+1, 0, 1
0x753C	0x6EE2      	MOVWF       FSR1H 
0x753E	0x6AE6      	CLRF        POSTINC1 
0x7540	0x0749      	DECF        ByteToStr_DigitPos_L0, 1, 1
;__Lib_Conversions.c,74 :: 		
L_ByteToStr3:
;__Lib_Conversions.c,75 :: 		
0x7542	0x5149      	MOVF        ByteToStr_DigitPos_L0, 0, 1
0x7544	0x2547      	ADDWF       FARG_ByteToStr_output, 0, 1
0x7546	0x6F4A      	MOVWF       FLOC__ByteToStr, 1
0x7548	0x0E00      	MOVLW       0
0x754A	0x2148      	ADDWFC      FARG_ByteToStr_output+1, 0, 1
0x754C	0x6F4B      	MOVWF       FLOC__ByteToStr+1, 1
0x754E	0x0E0A      	MOVLW       10
0x7550	0x6E04      	MOVWF       R4 
0x7552	0xF000C546  	MOVFF       FARG_ByteToStr_input, R0
0x7556	0xF005EC9A  	CALL        _Div_8X8_U, 0
0x755A	0xF000C008  	MOVFF       R8, R0
0x755E	0x0E30      	MOVLW       48
0x7560	0x2600      	ADDWF       R0, 1 
0x7562	0xFFE1C54A  	MOVFF       FLOC__ByteToStr, FSR1L
0x7566	0xFFE2C54B  	MOVFF       FLOC__ByteToStr+1, FSR1H
0x756A	0xFFE6C000  	MOVFF       R0, POSTINC1
;__Lib_Conversions.c,76 :: 		
0x756E	0x0E0A      	MOVLW       10
0x7570	0x6E04      	MOVWF       R4 
0x7572	0xF000C546  	MOVFF       FARG_ByteToStr_input, R0
0x7576	0xF005EC9A  	CALL        _Div_8X8_U, 0
0x757A	0xF546C000  	MOVFF       R0, FARG_ByteToStr_input
;__Lib_Conversions.c,77 :: 		
0x757E	0x5000      	MOVF        R0, 0 
0x7580	0x0A00      	XORLW       0
0x7582	0xE101      	BNZ         L_ByteToStr5
;__Lib_Conversions.c,78 :: 		
0x7584	0xD002      	BRA         L_ByteToStr4
L_ByteToStr5:
;__Lib_Conversions.c,79 :: 		
0x7586	0x0749      	DECF        ByteToStr_DigitPos_L0, 1, 1
;__Lib_Conversions.c,80 :: 		
0x7588	0xD7DC      	BRA         L_ByteToStr3
L_ByteToStr4:
;__Lib_Conversions.c,81 :: 		
L_end_ByteToStr:
0x758A	0x0012      	RETURN      0
; end of _ByteToStr
_mysql_search:
;table_eeprom.h,383 :: 		char mysql_search(char *tabla, char *columna, long buscar, int *fila){
;table_eeprom.h,387 :: 		if(mysql_exist(tabla)){
0x758C	0xF59CC546  	MOVFF       FARG_mysql_search_tabla, FARG_mysql_exist_name
0x7590	0xF59DC547  	MOVFF       FARG_mysql_search_tabla+1, FARG_mysql_exist_name+1
0x7594	0xF002EC3A  	CALL        _mysql_exist, 0
0x7598	0x5200      	MOVF        R0, 1 
0x759A	0xE055      	BZ          L_mysql_search541
;table_eeprom.h,388 :: 		for(*fila = 1; *fila <= myTable.rowAct; (*fila)++){
0x759C	0xFFE1C54E  	MOVFF       FARG_mysql_search_fila, FSR1L
0x75A0	0xFFE2C54F  	MOVFF       FARG_mysql_search_fila+1, FSR1H
0x75A4	0x0E01      	MOVLW       1
0x75A6	0x6EE6      	MOVWF       POSTINC1 
0x75A8	0x0E00      	MOVLW       0
0x75AA	0x6EE6      	MOVWF       POSTINC1 
L_mysql_search542:
0x75AC	0xFFE9C54E  	MOVFF       FARG_mysql_search_fila, FSR0L
0x75B0	0xFFEAC54F  	MOVFF       FARG_mysql_search_fila+1, FSR0H
0x75B4	0xF001CFEE  	MOVFF       POSTINC0, R1
0x75B8	0xF002CFEE  	MOVFF       POSTINC0, R2
0x75BC	0x5002      	MOVF        R2, 0 
0x75BE	0x0103      	MOVLB       3
0x75C0	0x5D90      	SUBWF       Validadora_myTable+5, 0, 1
0x75C2	0xE102      	BNZ         L__mysql_search1280
0x75C4	0x5001      	MOVF        R1, 0 
0x75C6	0x5D8F      	SUBWF       Validadora_myTable+4, 0, 1
L__mysql_search1280:
0x75C8	0xE33B      	BNC         L_mysql_search543
;table_eeprom.h,390 :: 		if(!mysql_read(tabla, columna, *fila, &busqueda)){
0x75CA	0xF586C546  	MOVFF       FARG_mysql_search_tabla, FARG_mysql_read_name
0x75CE	0xF587C547  	MOVFF       FARG_mysql_search_tabla+1, FARG_mysql_read_name+1
0x75D2	0xF588C548  	MOVFF       FARG_mysql_search_columna, FARG_mysql_read_column
0x75D6	0xF589C549  	MOVFF       FARG_mysql_search_columna+1, FARG_mysql_read_column+1
0x75DA	0xFFE9C54E  	MOVFF       FARG_mysql_search_fila, FSR0L
0x75DE	0xFFEAC54F  	MOVFF       FARG_mysql_search_fila+1, FSR0H
0x75E2	0xF58ACFEE  	MOVFF       POSTINC0, FARG_mysql_read_fila
0x75E6	0xF58BCFEE  	MOVFF       POSTINC0, FARG_mysql_read_fila+1
0x75EA	0x0E50      	MOVLW       mysql_search_busqueda_L0
0x75EC	0x0105      	MOVLB       5
0x75EE	0x6F8C      	MOVWF       FARG_mysql_read_result, 1
0x75F0	0x0E05      	MOVLW       hi_addr(mysql_search_busqueda_L0)
0x75F2	0x6F8D      	MOVWF       FARG_mysql_read_result+1, 1
0x75F4	0xF009EC2C  	CALL        _mysql_read, 0
0x75F8	0x5200      	MOVF        R0, 1 
0x75FA	0xE10F      	BNZ         L_mysql_search545
;table_eeprom.h,391 :: 		if(buscar == busqueda)
0x75FC	0x0105      	MOVLB       5
0x75FE	0x514D      	MOVF        FARG_mysql_search_buscar+3, 0, 1
0x7600	0x1953      	XORWF       mysql_search_busqueda_L0+3, 0, 1
0x7602	0xE108      	BNZ         L__mysql_search1281
0x7604	0x514C      	MOVF        FARG_mysql_search_buscar+2, 0, 1
0x7606	0x1952      	XORWF       mysql_search_busqueda_L0+2, 0, 1
0x7608	0xE105      	BNZ         L__mysql_search1281
0x760A	0x514B      	MOVF        FARG_mysql_search_buscar+1, 0, 1
0x760C	0x1951      	XORWF       mysql_search_busqueda_L0+1, 0, 1
0x760E	0xE102      	BNZ         L__mysql_search1281
0x7610	0x514A      	MOVF        FARG_mysql_search_buscar, 0, 1
0x7612	0x1950      	XORWF       mysql_search_busqueda_L0, 0, 1
L__mysql_search1281:
0x7614	0xE102      	BNZ         L_mysql_search546
;table_eeprom.h,392 :: 		return TABLE_RW_SUCCESS;
0x7616	0x6A00      	CLRF        R0 
0x7618	0xD018      	BRA         L_end_mysql_search
L_mysql_search546:
;table_eeprom.h,393 :: 		}
L_mysql_search545:
;table_eeprom.h,388 :: 		for(*fila = 1; *fila <= myTable.rowAct; (*fila)++){
0x761A	0xFFE9C54E  	MOVFF       FARG_mysql_search_fila, FSR0L
0x761E	0xFFEAC54F  	MOVFF       FARG_mysql_search_fila+1, FSR0H
0x7622	0xF000CFEE  	MOVFF       POSTINC0, R0
0x7626	0xF001CFEE  	MOVFF       POSTINC0, R1
0x762A	0x4A00      	INFSNZ      R0, 1 
0x762C	0x2A01      	INCF        R1, 1 
0x762E	0xFFE1C54E  	MOVFF       FARG_mysql_search_fila, FSR1L
0x7632	0xFFE2C54F  	MOVFF       FARG_mysql_search_fila+1, FSR1H
0x7636	0xFFE6C000  	MOVFF       R0, POSTINC1
0x763A	0xFFE6C001  	MOVFF       R1, POSTINC1
;table_eeprom.h,394 :: 		}
0x763E	0xD7B6      	BRA         L_mysql_search542
L_mysql_search543:
;table_eeprom.h,395 :: 		return TABLE_RW_NO_EXIST_ROW;
0x7640	0x0E03      	MOVLW       3
0x7642	0x6E00      	MOVWF       R0 
0x7644	0xD002      	BRA         L_end_mysql_search
;table_eeprom.h,396 :: 		}
L_mysql_search541:
;table_eeprom.h,398 :: 		return TABLE_RW_NO_EXIST_TABLE;
0x7646	0x0E01      	MOVLW       1
0x7648	0x6E00      	MOVWF       R0 
;table_eeprom.h,399 :: 		}
L_end_mysql_search:
0x764A	0x0012      	RETURN      0
; end of _mysql_search
_can_desonexion:
;lib_can.h,794 :: 		void can_desonexion(){
;lib_can.h,795 :: 		if(can.conected){
0x764C	0x0103      	MOVLB       3
0x764E	0x53CC      	MOVF        _can+13, 1, 1
0x7650	0xE013      	BZ          L_can_desonexion368
;lib_can.h,796 :: 		if(TXB0CON.TXERR || TXB1CON.TXERR || TXB2CON.TXERR){
0x7652	0x010F      	MOVLB       15
0x7654	0xB940      	BTFSC       TXB0CON, 4, 1
0x7656	0xD005      	BRA         L__can_desonexion950
0x7658	0xB930      	BTFSC       TXB1CON, 4, 1
0x765A	0xD003      	BRA         L__can_desonexion950
0x765C	0xB920      	BTFSC       TXB2CON, 4, 1
0x765E	0xD001      	BRA         L__can_desonexion950
0x7660	0xD00B      	BRA         L_can_desonexion371
L__can_desonexion950:
;lib_can.h,797 :: 		if(TXB0CON.TXERR) //!TXB0CON.TXABT
0x7662	0xA940      	BTFSS       TXB0CON, 4, 1
0x7664	0xD001      	BRA         L_can_desonexion372
;lib_can.h,798 :: 		TXB0CON.TXREQ = 1;  //CANCELA ENVIO
0x7666	0x8740      	BSF         TXB0CON, 3, 1
L_can_desonexion372:
;lib_can.h,799 :: 		if(TXB1CON.TXERR) //!TXB1CON.TXABT
0x7668	0xA930      	BTFSS       TXB1CON, 4, 1
0x766A	0xD001      	BRA         L_can_desonexion373
;lib_can.h,800 :: 		TXB1CON.TXREQ = 1;  //CANCELA ENVIO
0x766C	0x8730      	BSF         TXB1CON, 3, 1
L_can_desonexion373:
;lib_can.h,801 :: 		if(TXB2CON.TXERR) //!TXB2CON.TXABT
0x766E	0xA920      	BTFSS       TXB2CON, 4, 1
0x7670	0xD001      	BRA         L_can_desonexion374
;lib_can.h,802 :: 		TXB2CON.TXREQ = 1;  //CANCELA ENVIO
0x7672	0x8720      	BSF         TXB2CON, 3, 1
L_can_desonexion374:
;lib_can.h,803 :: 		can.conected = false;
0x7674	0x0103      	MOVLB       3
0x7676	0x6BCC      	CLRF        _can+13, 1
;lib_can.h,804 :: 		}
L_can_desonexion371:
;lib_can.h,805 :: 		}
L_can_desonexion368:
;lib_can.h,806 :: 		}
L_end_can_desonexion:
0x7678	0x0012      	RETURN      0
; end of _can_desonexion
_can_interrupt:
;lib_can.h,770 :: 		void can_interrupt(bool enable, bool hihgPriprity){
;lib_can.h,773 :: 		PIR3.TXB0IF = 0;
0x767A	0x94A4      	BCF         PIR3, 2 
;lib_can.h,774 :: 		PIR3.TXB1IF = 0;
0x767C	0x96A4      	BCF         PIR3, 3 
;lib_can.h,775 :: 		PIR3.TXBnIF = 0;
0x767E	0x98A4      	BCF         PIR3, 4 
;lib_can.h,778 :: 		IPR3.TXB0IP = hihgPriprity;
0x7680	0x0105      	MOVLB       5
0x7682	0xB147      	BTFSC       FARG_can_interrupt_hihgPriprity, 0, 1
0x7684	0xD002      	BRA         L__can_interrupt1203
0x7686	0x94A5      	BCF         IPR3, 2 
0x7688	0xD001      	BRA         L__can_interrupt1204
L__can_interrupt1203:
0x768A	0x84A5      	BSF         IPR3, 2 
L__can_interrupt1204:
;lib_can.h,779 :: 		IPR3.TXB1IP = hihgPriprity;
0x768C	0xB147      	BTFSC       FARG_can_interrupt_hihgPriprity, 0, 1
0x768E	0xD002      	BRA         L__can_interrupt1205
0x7690	0x96A5      	BCF         IPR3, 3 
0x7692	0xD001      	BRA         L__can_interrupt1206
L__can_interrupt1205:
0x7694	0x86A5      	BSF         IPR3, 3 
L__can_interrupt1206:
;lib_can.h,780 :: 		IPR3.TXBnIP = hihgPriprity;
0x7696	0xB147      	BTFSC       FARG_can_interrupt_hihgPriprity, 0, 1
0x7698	0xD002      	BRA         L__can_interrupt1207
0x769A	0x98A5      	BCF         IPR3, 4 
0x769C	0xD001      	BRA         L__can_interrupt1208
L__can_interrupt1207:
0x769E	0x88A5      	BSF         IPR3, 4 
L__can_interrupt1208:
;lib_can.h,783 :: 		PIE3.TXB0IE = enable;
0x76A0	0xB146      	BTFSC       FARG_can_interrupt_enable, 0, 1
0x76A2	0xD002      	BRA         L__can_interrupt1209
0x76A4	0x94A3      	BCF         PIE3, 2 
0x76A6	0xD001      	BRA         L__can_interrupt1210
L__can_interrupt1209:
0x76A8	0x84A3      	BSF         PIE3, 2 
L__can_interrupt1210:
;lib_can.h,784 :: 		PIE3.TXB1IE = enable;
0x76AA	0xB146      	BTFSC       FARG_can_interrupt_enable, 0, 1
0x76AC	0xD002      	BRA         L__can_interrupt1211
0x76AE	0x96A3      	BCF         PIE3, 3 
0x76B0	0xD001      	BRA         L__can_interrupt1212
L__can_interrupt1211:
0x76B2	0x86A3      	BSF         PIE3, 3 
L__can_interrupt1212:
;lib_can.h,785 :: 		PIE3.TXBnIE = enable;
0x76B4	0xB146      	BTFSC       FARG_can_interrupt_enable, 0, 1
0x76B6	0xD002      	BRA         L__can_interrupt1213
0x76B8	0x98A3      	BCF         PIE3, 4 
0x76BA	0xD001      	BRA         L__can_interrupt1214
L__can_interrupt1213:
0x76BC	0x88A3      	BSF         PIE3, 4 
L__can_interrupt1214:
;lib_can.h,792 :: 		}
L_end_can_interrupt:
0x76BE	0x0012      	RETURN      0
; end of _can_interrupt
_wiegand26_enable:
;wiegand26.h,138 :: 		void wiegand26_enable(){
;wiegand26.h,139 :: 		external_int0_enable(true);
0x76C0	0x0E01      	MOVLW       1
0x76C2	0x0105      	MOVLB       5
0x76C4	0x6F54      	MOVWF       FARG_external_int0_enable_enable, 1
0x76C6	0xF01CEC1B  	CALL        _external_int0_enable, 0
;wiegand26.h,140 :: 		external_int1_enable(true);
0x76CA	0x0E01      	MOVLW       1
0x76CC	0x6F54      	MOVWF       FARG_external_int1_enable_enable, 1
0x76CE	0xF01CEC14  	CALL        _external_int1_enable, 0
;wiegand26.h,141 :: 		}
L_end_wiegand26_enable:
0x76D2	0x0012      	RETURN      0
; end of _wiegand26_enable
_usart_user_read_text:
;Validadora.c,1110 :: 		void usart_user_read_text(){
;Validadora.c,1118 :: 		limpiarLCD = true;
0x76D4	0x0E01      	MOVLW       1
0x76D6	0x0103      	MOVLB       3
0x76D8	0x6F10      	MOVWF       _limpiarLCD, 1
;Validadora.c,1119 :: 		tempLCD = 0;
0x76DA	0x6B0F      	CLRF        _tempLCD, 1
;Validadora.c,1122 :: 		if(!usart.rx_overflow){
0x76DC	0x5367      	MOVF        _usart+34, 1, 1
0x76DE	0xA4D8      	BTFSS       STATUS, 2 
0x76E0	0xD302      	BRA         L_usart_user_read_text742
;Validadora.c,1129 :: 		tam = string_len(usart.message);
0x76E2	0x0E45      	MOVLW       _usart
0x76E4	0x0105      	MOVLB       5
0x76E6	0x6F86      	MOVWF       FARG_string_len_texto, 1
0x76E8	0x0E03      	MOVLW       hi_addr(_usart)
0x76EA	0x6F87      	MOVWF       FARG_string_len_texto+1, 1
0x76EC	0xF007EC95  	CALL        _string_len, 0
0x76F0	0xF547C000  	MOVFF       R0, usart_user_read_text_tam_L0
;Validadora.c,1130 :: 		if(!(tam == 9 || tam == 7)){
0x76F4	0x5000      	MOVF        R0, 0 
0x76F6	0x0A09      	XORLW       9
0x76F8	0xE005      	BZ          L_usart_user_read_text744
0x76FA	0x5147      	MOVF        usart_user_read_text_tam_L0, 0, 1
0x76FC	0x0A07      	XORLW       7
0x76FE	0xE002      	BZ          L_usart_user_read_text744
0x7700	0x6A00      	CLRF        R0 
0x7702	0xD002      	BRA         L_usart_user_read_text743
L_usart_user_read_text744:
0x7704	0x0E01      	MOVLW       1
0x7706	0x6E00      	MOVWF       R0 
L_usart_user_read_text743:
0x7708	0x5200      	MOVF        R0, 1 
0x770A	0xE10F      	BNZ         L_usart_user_read_text745
;Validadora.c,1131 :: 		lcd_clean_row(3);
0x770C	0x0E03      	MOVLW       3
0x770E	0x6F78      	MOVWF       FARG_lcd_clean_row_fila, 1
0x7710	0xF00FECA1  	CALL        _lcd_clean_row, 0
;Validadora.c,1132 :: 		lcd_out(3, 1, "*Llave invalida S*");
0x7714	0x0E03      	MOVLW       3
0x7716	0x6F78      	MOVWF       FARG_Lcd_Out_row, 1
0x7718	0x0E01      	MOVLW       1
0x771A	0x6F79      	MOVWF       FARG_Lcd_Out_column, 1
0x771C	0x0E87      	MOVLW       ?lstr26_Validadora
0x771E	0x6F7A      	MOVWF       FARG_Lcd_Out_text, 1
0x7720	0x0E01      	MOVLW       hi_addr(?lstr26_Validadora)
0x7722	0x6F7B      	MOVWF       FARG_Lcd_Out_text+1, 1
0x7724	0xF012EC66  	CALL        _Lcd_Out, 0
;Validadora.c,1136 :: 		return;
0x7728	0xD2EF      	BRA         L_end_usart_user_read_text
;Validadora.c,1137 :: 		}else if(!string_isNumeric(usart.message)){
L_usart_user_read_text745:
0x772A	0x0E45      	MOVLW       _usart
0x772C	0x0105      	MOVLB       5
0x772E	0x6F86      	MOVWF       FARG_string_isNumeric_cadena, 1
0x7730	0x0E03      	MOVLW       hi_addr(_usart)
0x7732	0x6F87      	MOVWF       FARG_string_isNumeric_cadena+1, 1
0x7734	0xF007ECA4  	CALL        _string_isNumeric, 0
0x7738	0x5200      	MOVF        R0, 1 
0x773A	0xE10F      	BNZ         L_usart_user_read_text747
;Validadora.c,1138 :: 		lcd_clean_row(3);
0x773C	0x0E03      	MOVLW       3
0x773E	0x6F78      	MOVWF       FARG_lcd_clean_row_fila, 1
0x7740	0xF00FECA1  	CALL        _lcd_clean_row, 0
;Validadora.c,1139 :: 		lcd_out(3, 1, "*Llave invalida F*");
0x7744	0x0E03      	MOVLW       3
0x7746	0x6F78      	MOVWF       FARG_Lcd_Out_row, 1
0x7748	0x0E01      	MOVLW       1
0x774A	0x6F79      	MOVWF       FARG_Lcd_Out_column, 1
0x774C	0x0EA4      	MOVLW       ?lstr27_Validadora
0x774E	0x6F7A      	MOVWF       FARG_Lcd_Out_text, 1
0x7750	0x0E01      	MOVLW       hi_addr(?lstr27_Validadora)
0x7752	0x6F7B      	MOVWF       FARG_Lcd_Out_text+1, 1
0x7754	0xF012EC66  	CALL        _Lcd_Out, 0
;Validadora.c,1143 :: 		return;
0x7758	0xD2D7      	BRA         L_end_usart_user_read_text
;Validadora.c,1144 :: 		}
L_usart_user_read_text747:
;Validadora.c,1147 :: 		if(tam == 7){
0x775A	0x0105      	MOVLB       5
0x775C	0x5147      	MOVF        usart_user_read_text_tam_L0, 0, 1
0x775E	0x0A07      	XORLW       7
0x7760	0xA4D8      	BTFSS       STATUS, 2 
0x7762	0xD180      	BRA         L_usart_user_read_text748
;Validadora.c,1148 :: 		folLectora = stringToNum(usart.message);
0x7764	0x0E45      	MOVLW       _usart
0x7766	0x6F78      	MOVWF       FARG_stringToNum_cadena, 1
0x7768	0x0E03      	MOVLW       hi_addr(_usart)
0x776A	0x6F79      	MOVWF       FARG_stringToNum_cadena+1, 1
0x776C	0xF00DEC5C  	CALL        _stringToNum, 0
;Validadora.c,1151 :: 		if(!mysql_search_forced(tableKeyOutFol, keyOutFol, folLectora, &fila)){
0x7770	0x0E9A      	MOVLW       _tableKeyOutFol
0x7772	0x6F78      	MOVWF       FARG_mysql_search_forced_tabla, 1
0x7774	0x0E01      	MOVLW       hi_addr(_tableKeyOutFol)
0x7776	0x6F79      	MOVWF       FARG_mysql_search_forced_tabla+1, 1
0x7778	0x0E81      	MOVLW       _keyOutFol
0x777A	0x6F7A      	MOVWF       FARG_mysql_search_forced_columna, 1
0x777C	0x0E01      	MOVLW       hi_addr(_keyOutFol)
0x777E	0x6F7B      	MOVWF       FARG_mysql_search_forced_columna+1, 1
0x7780	0xF57CC000  	MOVFF       R0, FARG_mysql_search_forced_buscar
0x7784	0xF57DC001  	MOVFF       R1, FARG_mysql_search_forced_buscar+1
0x7788	0xF57EC002  	MOVFF       R2, FARG_mysql_search_forced_buscar+2
0x778C	0xF57FC003  	MOVFF       R3, FARG_mysql_search_forced_buscar+3
0x7790	0x0E49      	MOVLW       usart_user_read_text_fila_L0
0x7792	0x6F80      	MOVWF       FARG_mysql_search_forced_fila, 1
0x7794	0x0E05      	MOVLW       hi_addr(usart_user_read_text_fila_L0)
0x7796	0x6F81      	MOVWF       FARG_mysql_search_forced_fila+1, 1
0x7798	0xF00BEC0D  	CALL        _mysql_search_forced, 0
0x779C	0x5200      	MOVF        R0, 1 
0x779E	0xA4D8      	BTFSS       STATUS, 2 
0x77A0	0xD151      	BRA         L_usart_user_read_text749
;Validadora.c,1152 :: 		mysql_read_forced(tableKeyOutFol, keyOutEstatus, fila, &estatus);
0x77A2	0x0E9A      	MOVLW       _tableKeyOutFol
0x77A4	0x0105      	MOVLB       5
0x77A6	0x6F86      	MOVWF       FARG_mysql_read_forced_name, 1
0x77A8	0x0E01      	MOVLW       hi_addr(_tableKeyOutFol)
0x77AA	0x6F87      	MOVWF       FARG_mysql_read_forced_name+1, 1
0x77AC	0x0E16      	MOVLW       _keyOutEstatus
0x77AE	0x6F88      	MOVWF       FARG_mysql_read_forced_column, 1
0x77B0	0x0E01      	MOVLW       hi_addr(_keyOutEstatus)
0x77B2	0x6F89      	MOVWF       FARG_mysql_read_forced_column+1, 1
0x77B4	0xF58AC549  	MOVFF       usart_user_read_text_fila_L0, FARG_mysql_read_forced_fila
0x77B8	0xF58BC54A  	MOVFF       usart_user_read_text_fila_L0+1, FARG_mysql_read_forced_fila+1
0x77BC	0x0E48      	MOVLW       usart_user_read_text_estatus_L0
0x77BE	0x6F8C      	MOVWF       FARG_mysql_read_forced_result, 1
0x77C0	0x0E05      	MOVLW       hi_addr(usart_user_read_text_estatus_L0)
0x77C2	0x6F8D      	MOVWF       FARG_mysql_read_forced_result+1, 1
0x77C4	0xF008EC2A  	CALL        _mysql_read_forced, 0
;Validadora.c,1153 :: 		mysql_read_forced(tableKeyOutFol, keyOutDate, fila, &bufferEeprom);
0x77C8	0x0E9A      	MOVLW       _tableKeyOutFol
0x77CA	0x0105      	MOVLB       5
0x77CC	0x6F86      	MOVWF       FARG_mysql_read_forced_name, 1
0x77CE	0x0E01      	MOVLW       hi_addr(_tableKeyOutFol)
0x77D0	0x6F87      	MOVWF       FARG_mysql_read_forced_name+1, 1
0x77D2	0x0EFA      	MOVLW       _keyOutDate
0x77D4	0x6F88      	MOVWF       FARG_mysql_read_forced_column, 1
0x77D6	0x0E00      	MOVLW       hi_addr(_keyOutDate)
0x77D8	0x6F89      	MOVWF       FARG_mysql_read_forced_column+1, 1
0x77DA	0xF58AC549  	MOVFF       usart_user_read_text_fila_L0, FARG_mysql_read_forced_fila
0x77DE	0xF58BC54A  	MOVFF       usart_user_read_text_fila_L0+1, FARG_mysql_read_forced_fila+1
0x77E2	0x0ED2      	MOVLW       _bufferEeprom
0x77E4	0x6F8C      	MOVWF       FARG_mysql_read_forced_result, 1
0x77E6	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x77E8	0x6F8D      	MOVWF       FARG_mysql_read_forced_result+1, 1
0x77EA	0xF008EC2A  	CALL        _mysql_read_forced, 0
;Validadora.c,1154 :: 		bufferEeprom[12] = 0;  //Agregar final de cadena, proteccion
0x77EE	0x0104      	MOVLB       4
0x77F0	0x6BDE      	CLRF        _bufferEeprom+12, 1
;Validadora.c,1156 :: 		DS1307_read(&myRTC, false);
0x77F2	0x0E77      	MOVLW       _myRTC
0x77F4	0x0105      	MOVLB       5
0x77F6	0x6F78      	MOVWF       FARG_DS1307_read_myDS, 1
0x77F8	0x0E04      	MOVLW       hi_addr(_myRTC)
0x77FA	0x6F79      	MOVWF       FARG_DS1307_read_myDS+1, 1
0x77FC	0x6B7A      	CLRF        FARG_DS1307_read_formatComplet, 1
0x77FE	0xF010ECF9  	CALL        _DS1307_read, 0
;Validadora.c,1159 :: 		string_cpyn(msjConst, &myRTC.time[1], 6);
0x7802	0x0E12      	MOVLW       _msjConst
0x7804	0x6F78      	MOVWF       FARG_string_cpyn_destino, 1
0x7806	0x0E05      	MOVLW       hi_addr(_msjConst)
0x7808	0x6F79      	MOVWF       FARG_string_cpyn_destino+1, 1
0x780A	0x0E7F      	MOVLW       _myRTC+8
0x780C	0x6F7A      	MOVWF       FARG_string_cpyn_origen, 1
0x780E	0x0E04      	MOVLW       hi_addr(_myRTC+8)
0x7810	0x6F7B      	MOVWF       FARG_string_cpyn_origen+1, 1
0x7812	0x0E06      	MOVLW       6
0x7814	0x6F7C      	MOVWF       FARG_string_cpyn_size, 1
0x7816	0xF00DEC35  	CALL        _string_cpyn, 0
;Validadora.c,1160 :: 		seconds = DS1307_getSeconds(msjConst);
0x781A	0x0E12      	MOVLW       _msjConst
0x781C	0x6F54      	MOVWF       FARG_DS1307_getSeconds_HHMMSS, 1
0x781E	0x0E05      	MOVLW       hi_addr(_msjConst)
0x7820	0x6F55      	MOVWF       FARG_DS1307_getSeconds_HHMMSS+1, 1
0x7822	0xF01DECC0  	CALL        _DS1307_getSeconds, 0
0x7826	0xF54BC000  	MOVFF       R0, usart_user_read_text_seconds_L0
0x782A	0xF54CC001  	MOVFF       R1, usart_user_read_text_seconds_L0+1
0x782E	0xF54DC002  	MOVFF       R2, usart_user_read_text_seconds_L0+2
0x7832	0xF54EC003  	MOVFF       R3, usart_user_read_text_seconds_L0+3
;Validadora.c,1161 :: 		string_cpyn(msjConst, bufferEeprom, 6);
0x7836	0x0E12      	MOVLW       _msjConst
0x7838	0x6F78      	MOVWF       FARG_string_cpyn_destino, 1
0x783A	0x0E05      	MOVLW       hi_addr(_msjConst)
0x783C	0x6F79      	MOVWF       FARG_string_cpyn_destino+1, 1
0x783E	0x0ED2      	MOVLW       _bufferEeprom
0x7840	0x6F7A      	MOVWF       FARG_string_cpyn_origen, 1
0x7842	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x7844	0x6F7B      	MOVWF       FARG_string_cpyn_origen+1, 1
0x7846	0x0E06      	MOVLW       6
0x7848	0x6F7C      	MOVWF       FARG_string_cpyn_size, 1
0x784A	0xF00DEC35  	CALL        _string_cpyn, 0
;Validadora.c,1162 :: 		seconds -= DS1307_getSeconds(msjConst);
0x784E	0x0E12      	MOVLW       _msjConst
0x7850	0x6F54      	MOVWF       FARG_DS1307_getSeconds_HHMMSS, 1
0x7852	0x0E05      	MOVLW       hi_addr(_msjConst)
0x7854	0x6F55      	MOVWF       FARG_DS1307_getSeconds_HHMMSS+1, 1
0x7856	0xF01DECC0  	CALL        _DS1307_getSeconds, 0
0x785A	0xF004C54B  	MOVFF       usart_user_read_text_seconds_L0, R4
0x785E	0xF005C54C  	MOVFF       usart_user_read_text_seconds_L0+1, R5
0x7862	0xF006C54D  	MOVFF       usart_user_read_text_seconds_L0+2, R6
0x7866	0xF007C54E  	MOVFF       usart_user_read_text_seconds_L0+3, R7
0x786A	0x5000      	MOVF        R0, 0 
0x786C	0x5E04      	SUBWF       R4, 1 
0x786E	0x5001      	MOVF        R1, 0 
0x7870	0x5A05      	SUBWFB      R5, 1 
0x7872	0x5002      	MOVF        R2, 0 
0x7874	0x5A06      	SUBWFB      R6, 1 
0x7876	0x5003      	MOVF        R3, 0 
0x7878	0x5A07      	SUBWFB      R7, 1 
0x787A	0xF54BC004  	MOVFF       R4, usart_user_read_text_seconds_L0
0x787E	0xF54CC005  	MOVFF       R5, usart_user_read_text_seconds_L0+1
0x7882	0xF54DC006  	MOVFF       R6, usart_user_read_text_seconds_L0+2
0x7886	0xF54EC007  	MOVFF       R7, usart_user_read_text_seconds_L0+3
;Validadora.c,1163 :: 		seconds = clamp(seconds, 0, TOLERANCIA_OUT); //Saturar en este rango
0x788A	0xF554C004  	MOVFF       R4, FARG_clamp_valor
0x788E	0xF555C005  	MOVFF       R5, FARG_clamp_valor+1
0x7892	0xF556C006  	MOVFF       R6, FARG_clamp_valor+2
0x7896	0xF557C007  	MOVFF       R7, FARG_clamp_valor+3
0x789A	0x6B58      	CLRF        FARG_clamp_min, 1
0x789C	0x6B59      	CLRF        FARG_clamp_min+1, 1
0x789E	0x6B5A      	CLRF        FARG_clamp_min+2, 1
0x78A0	0x6B5B      	CLRF        FARG_clamp_min+3, 1
0x78A2	0x0E8E      	MOVLW       142
0x78A4	0x6F5C      	MOVWF       FARG_clamp_max, 1
0x78A6	0x0E03      	MOVLW       3
0x78A8	0x6F5D      	MOVWF       FARG_clamp_max+1, 1
0x78AA	0x0E00      	MOVLW       0
0x78AC	0x6F5E      	MOVWF       FARG_clamp_max+2, 1
0x78AE	0x6F5F      	MOVWF       FARG_clamp_max+3, 1
0x78B0	0xF019EC7E  	CALL        _clamp, 0
0x78B4	0xF54BC000  	MOVFF       R0, usart_user_read_text_seconds_L0
0x78B8	0xF54CC001  	MOVFF       R1, usart_user_read_text_seconds_L0+1
0x78BC	0xF54DC002  	MOVFF       R2, usart_user_read_text_seconds_L0+2
0x78C0	0xF54EC003  	MOVFF       R3, usart_user_read_text_seconds_L0+3
;Validadora.c,1166 :: 		string_cpy(msjConst, &myRTC.time[1]);
0x78C4	0x0E12      	MOVLW       _msjConst
0x78C6	0x6F54      	MOVWF       FARG_string_cpy_destino, 1
0x78C8	0x0E05      	MOVLW       hi_addr(_msjConst)
0x78CA	0x6F55      	MOVWF       FARG_string_cpy_destino+1, 1
0x78CC	0x0E7F      	MOVLW       _myRTC+8
0x78CE	0x6F56      	MOVWF       FARG_string_cpy_origen, 1
0x78D0	0x0E04      	MOVLW       hi_addr(_myRTC+8)
0x78D2	0x6F57      	MOVWF       FARG_string_cpy_origen+1, 1
0x78D4	0xF016ECD3  	CALL        _string_cpy, 0
;Validadora.c,1167 :: 		isOtherToday = !string_cmpn(&msjConst[6], &bufferEeprom[6], 2);
0x78D8	0x0E18      	MOVLW       _msjConst+6
0x78DA	0x6F54      	MOVWF       FARG_string_cmpn_text1, 1
0x78DC	0x0E05      	MOVLW       hi_addr(_msjConst+6)
0x78DE	0x6F55      	MOVWF       FARG_string_cmpn_text1+1, 1
0x78E0	0x0ED8      	MOVLW       _bufferEeprom+6
0x78E2	0x6F56      	MOVWF       FARG_string_cmpn_text2, 1
0x78E4	0x0E04      	MOVLW       hi_addr(_bufferEeprom+6)
0x78E6	0x6F57      	MOVWF       FARG_string_cmpn_text2+1, 1
0x78E8	0x0E02      	MOVLW       2
0x78EA	0x6F58      	MOVWF       FARG_string_cmpn_bytes, 1
0x78EC	0xF01BEC5D  	CALL        _string_cmpn, 0
0x78F0	0x5200      	MOVF        R0, 1 
0x78F2	0x0E01      	MOVLW       1
0x78F4	0xA4D8      	BTFSS       STATUS, 2 
0x78F6	0x0E00      	MOVLW       0
0x78F8	0x6F46      	MOVWF       usart_user_read_text_isOtherToday_L0, 1
;Validadora.c,1168 :: 		isOtherToday |= !string_cmpn(&msjConst[8], &bufferEeprom[8], 2);
0x78FA	0x0E1A      	MOVLW       _msjConst+8
0x78FC	0x6F54      	MOVWF       FARG_string_cmpn_text1, 1
0x78FE	0x0E05      	MOVLW       hi_addr(_msjConst+8)
0x7900	0x6F55      	MOVWF       FARG_string_cmpn_text1+1, 1
0x7902	0x0EDA      	MOVLW       _bufferEeprom+8
0x7904	0x6F56      	MOVWF       FARG_string_cmpn_text2, 1
0x7906	0x0E04      	MOVLW       hi_addr(_bufferEeprom+8)
0x7908	0x6F57      	MOVWF       FARG_string_cmpn_text2+1, 1
0x790A	0x0E02      	MOVLW       2
0x790C	0x6F58      	MOVWF       FARG_string_cmpn_bytes, 1
0x790E	0xF01BEC5D  	CALL        _string_cmpn, 0
0x7912	0x5200      	MOVF        R0, 1 
0x7914	0x0E01      	MOVLW       1
0x7916	0xA4D8      	BTFSS       STATUS, 2 
0x7918	0x0E00      	MOVLW       0
0x791A	0x6E01      	MOVWF       R1 
0x791C	0x5001      	MOVF        R1, 0 
0x791E	0x1346      	IORWF       usart_user_read_text_isOtherToday_L0, 1, 1
;Validadora.c,1169 :: 		isOtherToday |= !string_cmpn(&msjConst[10], &bufferEeprom[10], 2);
0x7920	0x0E1C      	MOVLW       _msjConst+10
0x7922	0x6F54      	MOVWF       FARG_string_cmpn_text1, 1
0x7924	0x0E05      	MOVLW       hi_addr(_msjConst+10)
0x7926	0x6F55      	MOVWF       FARG_string_cmpn_text1+1, 1
0x7928	0x0EDC      	MOVLW       _bufferEeprom+10
0x792A	0x6F56      	MOVWF       FARG_string_cmpn_text2, 1
0x792C	0x0E04      	MOVLW       hi_addr(_bufferEeprom+10)
0x792E	0x6F57      	MOVWF       FARG_string_cmpn_text2+1, 1
0x7930	0x0E02      	MOVLW       2
0x7932	0x6F58      	MOVWF       FARG_string_cmpn_bytes, 1
0x7934	0xF01BEC5D  	CALL        _string_cmpn, 0
0x7938	0x5200      	MOVF        R0, 1 
0x793A	0x0E01      	MOVLW       1
0x793C	0xA4D8      	BTFSS       STATUS, 2 
0x793E	0x0E00      	MOVLW       0
0x7940	0x6E01      	MOVWF       R1 
0x7942	0x5001      	MOVF        R1, 0 
0x7944	0x1346      	IORWF       usart_user_read_text_isOtherToday_L0, 1, 1
;Validadora.c,1172 :: 		if(estatus == '1' && seconds < TOLERANCIA_OUT && !isOtherToday){
0x7946	0x5148      	MOVF        usart_user_read_text_estatus_L0, 0, 1
0x7948	0x0A31      	XORLW       49
0x794A	0xE143      	BNZ         L_usart_user_read_text752
0x794C	0x0E80      	MOVLW       128
0x794E	0x194E      	XORWF       usart_user_read_text_seconds_L0+3, 0, 1
0x7950	0x6E00      	MOVWF       R0 
0x7952	0x0E80      	MOVLW       128
0x7954	0x5C00      	SUBWF       R0, 0 
0x7956	0xE108      	BNZ         L__usart_user_read_text1347
0x7958	0x0E00      	MOVLW       0
0x795A	0x5D4D      	SUBWF       usart_user_read_text_seconds_L0+2, 0, 1
0x795C	0xE105      	BNZ         L__usart_user_read_text1347
0x795E	0x0E03      	MOVLW       3
0x7960	0x5D4C      	SUBWF       usart_user_read_text_seconds_L0+1, 0, 1
0x7962	0xE102      	BNZ         L__usart_user_read_text1347
0x7964	0x0E8E      	MOVLW       142
0x7966	0x5D4B      	SUBWF       usart_user_read_text_seconds_L0, 0, 1
L__usart_user_read_text1347:
0x7968	0xE234      	BC          L_usart_user_read_text752
0x796A	0x5346      	MOVF        usart_user_read_text_isOtherToday_L0, 1, 1
0x796C	0xE132      	BNZ         L_usart_user_read_text752
L__usart_user_read_text994:
;Validadora.c,1174 :: 		abrirBarrera = true;
0x796E	0x0E01      	MOVLW       1
0x7970	0x0103      	MOVLB       3
0x7972	0x6F31      	MOVWF       _abrirBarrera, 1
;Validadora.c,1175 :: 		SALIDA_RELE1 = 1;
0x7974	0x8A80      	BSF         PORTA, 5 
;Validadora.c,1176 :: 		SALIDA_RELE2 = 1;
0x7976	0x8084      	BSF         PORTE, 0 
;Validadora.c,1177 :: 		timer1_reset();
0x7978	0xF00DEC30  	CALL        _timer1_reset, 0
;Validadora.c,1178 :: 		timer1_enable(true);
0x797C	0x0E01      	MOVLW       1
0x797E	0x0105      	MOVLB       5
0x7980	0x6F78      	MOVWF       FARG_timer1_enable_enable, 1
0x7982	0xF012EC5F  	CALL        _timer1_enable, 0
;Validadora.c,1180 :: 		acceso[0] = TPV_ACCESO;    //Acceso
0x7986	0x0E41      	MOVLW       65
0x7988	0x6F4F      	MOVWF       usart_user_read_text_acceso_L0, 1
;Validadora.c,1184 :: 		mysql_write_forced(tableKeyOutFol, keyOutEstatus, fila, "0", 1);
0x798A	0x0E9A      	MOVLW       _tableKeyOutFol
0x798C	0x6F86      	MOVWF       FARG_mysql_write_forced_name, 1
0x798E	0x0E01      	MOVLW       hi_addr(_tableKeyOutFol)
0x7990	0x6F87      	MOVWF       FARG_mysql_write_forced_name+1, 1
0x7992	0x0E16      	MOVLW       _keyOutEstatus
0x7994	0x6F88      	MOVWF       FARG_mysql_write_forced_column, 1
0x7996	0x0E01      	MOVLW       hi_addr(_keyOutEstatus)
0x7998	0x6F89      	MOVWF       FARG_mysql_write_forced_column+1, 1
0x799A	0xF58AC549  	MOVFF       usart_user_read_text_fila_L0, FARG_mysql_write_forced_fila
0x799E	0xF58BC54A  	MOVFF       usart_user_read_text_fila_L0+1, FARG_mysql_write_forced_fila+1
0x79A2	0x0E56      	MOVLW       ?lstr28_Validadora
0x79A4	0x6F8C      	MOVWF       FARG_mysql_write_forced_texto, 1
0x79A6	0x0E01      	MOVLW       hi_addr(?lstr28_Validadora)
0x79A8	0x6F8D      	MOVWF       FARG_mysql_write_forced_texto+1, 1
0x79AA	0x0E01      	MOVLW       1
0x79AC	0x6F8E      	MOVWF       FARG_mysql_write_forced_bytes, 1
0x79AE	0xF008EC72  	CALL        _mysql_write_forced, 0
;Validadora.c,1185 :: 		lcd_clean_row(2);
0x79B2	0x0E02      	MOVLW       2
0x79B4	0x0105      	MOVLB       5
0x79B6	0x6F78      	MOVWF       FARG_lcd_clean_row_fila, 1
0x79B8	0xF00FECA1  	CALL        _lcd_clean_row, 0
;Validadora.c,1186 :: 		lcd_out(2,1,"Llave aceptada");
0x79BC	0x0E02      	MOVLW       2
0x79BE	0x6F78      	MOVWF       FARG_Lcd_Out_row, 1
0x79C0	0x0E01      	MOVLW       1
0x79C2	0x6F79      	MOVWF       FARG_Lcd_Out_column, 1
0x79C4	0x0E47      	MOVLW       ?lstr29_Validadora
0x79C6	0x6F7A      	MOVWF       FARG_Lcd_Out_text, 1
0x79C8	0x0E01      	MOVLW       hi_addr(?lstr29_Validadora)
0x79CA	0x6F7B      	MOVWF       FARG_Lcd_Out_text+1, 1
0x79CC	0xF012EC66  	CALL        _Lcd_Out, 0
;Validadora.c,1192 :: 		}else if(estatus == '0'){
0x79D0	0xD038      	BRA         L_usart_user_read_text753
L_usart_user_read_text752:
0x79D2	0x0105      	MOVLB       5
0x79D4	0x5148      	MOVF        usart_user_read_text_estatus_L0, 0, 1
0x79D6	0x0A30      	XORLW       48
0x79D8	0xE111      	BNZ         L_usart_user_read_text754
;Validadora.c,1193 :: 		acceso[2] = TPV_PASSBACK;   //Llave ya utilizada
0x79DA	0x0E50      	MOVLW       80
0x79DC	0x6F51      	MOVWF       usart_user_read_text_acceso_L0+2, 1
;Validadora.c,1194 :: 		lcd_clean_row(2);
0x79DE	0x0E02      	MOVLW       2
0x79E0	0x6F78      	MOVWF       FARG_lcd_clean_row_fila, 1
0x79E2	0xF00FECA1  	CALL        _lcd_clean_row, 0
;Validadora.c,1195 :: 		lcd_out(2,1,"*Folio desconocido P*");
0x79E6	0x0E02      	MOVLW       2
0x79E8	0x6F78      	MOVWF       FARG_Lcd_Out_row, 1
0x79EA	0x0E01      	MOVLW       1
0x79EC	0x6F79      	MOVWF       FARG_Lcd_Out_column, 1
0x79EE	0x0E6B      	MOVLW       ?lstr30_Validadora
0x79F0	0x6F7A      	MOVWF       FARG_Lcd_Out_text, 1
0x79F2	0x0E01      	MOVLW       hi_addr(?lstr30_Validadora)
0x79F4	0x6F7B      	MOVWF       FARG_Lcd_Out_text+1, 1
0x79F6	0xF012EC66  	CALL        _Lcd_Out, 0
;Validadora.c,1201 :: 		}else if(isOtherToday || seconds >= TOLERANCIA_OUT){
0x79FA	0xD023      	BRA         L_usart_user_read_text755
L_usart_user_read_text754:
0x79FC	0x0105      	MOVLB       5
0x79FE	0x5346      	MOVF        usart_user_read_text_isOtherToday_L0, 1, 1
0x7A00	0xE110      	BNZ         L__usart_user_read_text993
0x7A02	0x0E80      	MOVLW       128
0x7A04	0x194E      	XORWF       usart_user_read_text_seconds_L0+3, 0, 1
0x7A06	0x6E00      	MOVWF       R0 
0x7A08	0x0E80      	MOVLW       128
0x7A0A	0x5C00      	SUBWF       R0, 0 
0x7A0C	0xE108      	BNZ         L__usart_user_read_text1348
0x7A0E	0x0E00      	MOVLW       0
0x7A10	0x5D4D      	SUBWF       usart_user_read_text_seconds_L0+2, 0, 1
0x7A12	0xE105      	BNZ         L__usart_user_read_text1348
0x7A14	0x0E03      	MOVLW       3
0x7A16	0x5D4C      	SUBWF       usart_user_read_text_seconds_L0+1, 0, 1
0x7A18	0xE102      	BNZ         L__usart_user_read_text1348
0x7A1A	0x0E8E      	MOVLW       142
0x7A1C	0x5D4B      	SUBWF       usart_user_read_text_seconds_L0, 0, 1
L__usart_user_read_text1348:
0x7A1E	0xE201      	BC          L__usart_user_read_text993
0x7A20	0xD010      	BRA         L_usart_user_read_text758
L__usart_user_read_text993:
;Validadora.c,1202 :: 		acceso[1] = TPV_OUT_TIME;  //FECHA EN FUERA DE RANGO
0x7A22	0x0E54      	MOVLW       84
0x7A24	0x6F50      	MOVWF       usart_user_read_text_acceso_L0+1, 1
;Validadora.c,1203 :: 		lcd_clean_row(2);
0x7A26	0x0E02      	MOVLW       2
0x7A28	0x6F78      	MOVWF       FARG_lcd_clean_row_fila, 1
0x7A2A	0xF00FECA1  	CALL        _lcd_clean_row, 0
;Validadora.c,1204 :: 		lcd_out(2,1,"*Folio invalido T*");
0x7A2E	0x0E02      	MOVLW       2
0x7A30	0x6F78      	MOVWF       FARG_Lcd_Out_row, 1
0x7A32	0x0E01      	MOVLW       1
0x7A34	0x6F79      	MOVWF       FARG_Lcd_Out_column, 1
0x7A36	0x0E58      	MOVLW       ?lstr31_Validadora
0x7A38	0x6F7A      	MOVWF       FARG_Lcd_Out_text, 1
0x7A3A	0x0E01      	MOVLW       hi_addr(?lstr31_Validadora)
0x7A3C	0x6F7B      	MOVWF       FARG_Lcd_Out_text+1, 1
0x7A3E	0xF012EC66  	CALL        _Lcd_Out, 0
;Validadora.c,1208 :: 		}
L_usart_user_read_text758:
L_usart_user_read_text755:
L_usart_user_read_text753:
;Validadora.c,1209 :: 		}else{
0x7A42	0xD00F      	BRA         L_usart_user_read_text759
L_usart_user_read_text749:
;Validadora.c,1211 :: 		lcd_clean_row(3);
0x7A44	0x0E03      	MOVLW       3
0x7A46	0x0105      	MOVLB       5
0x7A48	0x6F78      	MOVWF       FARG_lcd_clean_row_fila, 1
0x7A4A	0xF00FECA1  	CALL        _lcd_clean_row, 0
;Validadora.c,1212 :: 		lcd_out(3, 1, "*Llave invalida I*");
0x7A4E	0x0E03      	MOVLW       3
0x7A50	0x6F78      	MOVWF       FARG_Lcd_Out_row, 1
0x7A52	0x0E01      	MOVLW       1
0x7A54	0x6F79      	MOVWF       FARG_Lcd_Out_column, 1
0x7A56	0x0E05      	MOVLW       ?lstr32_Validadora
0x7A58	0x6F7A      	MOVWF       FARG_Lcd_Out_text, 1
0x7A5A	0x0E02      	MOVLW       hi_addr(?lstr32_Validadora)
0x7A5C	0x6F7B      	MOVWF       FARG_Lcd_Out_text+1, 1
0x7A5E	0xF012EC66  	CALL        _Lcd_Out, 0
;Validadora.c,1216 :: 		}
L_usart_user_read_text759:
;Validadora.c,1217 :: 		}else{
0x7A62	0xD140      	BRA         L_usart_user_read_text760
L_usart_user_read_text748:
;Validadora.c,1219 :: 		decrypt_basic(usart.message);
0x7A64	0x0E45      	MOVLW       _usart
0x7A66	0x0105      	MOVLB       5
0x7A68	0x6F54      	MOVWF       FARG_decrypt_basic_cadena, 1
0x7A6A	0x0E03      	MOVLW       hi_addr(_usart)
0x7A6C	0x6F55      	MOVWF       FARG_decrypt_basic_cadena+1, 1
0x7A6E	0xF01CEC22  	CALL        _decrypt_basic, 0
;Validadora.c,1222 :: 		if(mysql_exist(tableKeyOutDate)){
0x7A72	0x0EFD      	MOVLW       _tableKeyOutDate
0x7A74	0x6F9C      	MOVWF       FARG_mysql_exist_name, 1
0x7A76	0x0E01      	MOVLW       hi_addr(_tableKeyOutDate)
0x7A78	0x6F9D      	MOVWF       FARG_mysql_exist_name+1, 1
0x7A7A	0xF002EC3A  	CALL        _mysql_exist, 0
0x7A7E	0x5200      	MOVF        R0, 1 
0x7A80	0xE045      	BZ          L_usart_user_read_text761
;Validadora.c,1223 :: 		for(fila = 1; fila <= myTable.row; fila++){
0x7A82	0x0E01      	MOVLW       1
0x7A84	0x0105      	MOVLB       5
0x7A86	0x6F49      	MOVWF       usart_user_read_text_fila_L0, 1
0x7A88	0x0E00      	MOVLW       0
0x7A8A	0x6F4A      	MOVWF       usart_user_read_text_fila_L0+1, 1
L_usart_user_read_text762:
0x7A8C	0x514A      	MOVF        usart_user_read_text_fila_L0+1, 0, 1
0x7A8E	0x0103      	MOVLB       3
0x7A90	0x5D8E      	SUBWF       Validadora_myTable+3, 0, 1
0x7A92	0xE104      	BNZ         L__usart_user_read_text1349
0x7A94	0x0105      	MOVLB       5
0x7A96	0x5149      	MOVF        usart_user_read_text_fila_L0, 0, 1
0x7A98	0x0103      	MOVLB       3
0x7A9A	0x5D8D      	SUBWF       Validadora_myTable+2, 0, 1
L__usart_user_read_text1349:
0x7A9C	0xE337      	BNC         L_usart_user_read_text763
;Validadora.c,1225 :: 		if(!mysql_read_forced(tableKeyOutDate, keyOutDate, fila, bufferEeprom)){
0x7A9E	0x0EFD      	MOVLW       _tableKeyOutDate
0x7AA0	0x0105      	MOVLB       5
0x7AA2	0x6F86      	MOVWF       FARG_mysql_read_forced_name, 1
0x7AA4	0x0E01      	MOVLW       hi_addr(_tableKeyOutDate)
0x7AA6	0x6F87      	MOVWF       FARG_mysql_read_forced_name+1, 1
0x7AA8	0x0EFA      	MOVLW       _keyOutDate
0x7AAA	0x6F88      	MOVWF       FARG_mysql_read_forced_column, 1
0x7AAC	0x0E00      	MOVLW       hi_addr(_keyOutDate)
0x7AAE	0x6F89      	MOVWF       FARG_mysql_read_forced_column+1, 1
0x7AB0	0xF58AC549  	MOVFF       usart_user_read_text_fila_L0, FARG_mysql_read_forced_fila
0x7AB4	0xF58BC54A  	MOVFF       usart_user_read_text_fila_L0+1, FARG_mysql_read_forced_fila+1
0x7AB8	0x0ED2      	MOVLW       _bufferEeprom
0x7ABA	0x6F8C      	MOVWF       FARG_mysql_read_forced_result, 1
0x7ABC	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x7ABE	0x6F8D      	MOVWF       FARG_mysql_read_forced_result+1, 1
0x7AC0	0xF008EC2A  	CALL        _mysql_read_forced, 0
0x7AC4	0x5200      	MOVF        R0, 1 
0x7AC6	0xE11E      	BNZ         L_usart_user_read_text765
;Validadora.c,1226 :: 		bufferEeprom[12] = 0; //Forzar final de cadena
0x7AC8	0x0104      	MOVLB       4
0x7ACA	0x6BDE      	CLRF        _bufferEeprom+12, 1
;Validadora.c,1227 :: 		if(string_cmp(usart.message, bufferEeprom)){
0x7ACC	0x0E45      	MOVLW       _usart
0x7ACE	0x0105      	MOVLB       5
0x7AD0	0x6F54      	MOVWF       FARG_string_cmp_text1, 1
0x7AD2	0x0E03      	MOVLW       hi_addr(_usart)
0x7AD4	0x6F55      	MOVWF       FARG_string_cmp_text1+1, 1
0x7AD6	0x0ED2      	MOVLW       _bufferEeprom
0x7AD8	0x6F56      	MOVWF       FARG_string_cmp_text2, 1
0x7ADA	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x7ADC	0x6F57      	MOVWF       FARG_string_cmp_text2+1, 1
0x7ADE	0xF01CECE3  	CALL        _string_cmp, 0
0x7AE2	0x5200      	MOVF        R0, 1 
0x7AE4	0xE00F      	BZ          L_usart_user_read_text766
;Validadora.c,1228 :: 		lcd_clean_row(3);
0x7AE6	0x0E03      	MOVLW       3
0x7AE8	0x6F78      	MOVWF       FARG_lcd_clean_row_fila, 1
0x7AEA	0xF00FECA1  	CALL        _lcd_clean_row, 0
;Validadora.c,1229 :: 		lcd_out(3,1,"Llave utilizada");
0x7AEE	0x0E03      	MOVLW       3
0x7AF0	0x6F78      	MOVWF       FARG_Lcd_Out_row, 1
0x7AF2	0x0E01      	MOVLW       1
0x7AF4	0x6F79      	MOVWF       FARG_Lcd_Out_column, 1
0x7AF6	0x0E28      	MOVLW       ?lstr33_Validadora
0x7AF8	0x6F7A      	MOVWF       FARG_Lcd_Out_text, 1
0x7AFA	0x0E02      	MOVLW       hi_addr(?lstr33_Validadora)
0x7AFC	0x6F7B      	MOVWF       FARG_Lcd_Out_text+1, 1
0x7AFE	0xF012EC66  	CALL        _Lcd_Out, 0
;Validadora.c,1233 :: 		return;
0x7B02	0xD102      	BRA         L_end_usart_user_read_text
;Validadora.c,1234 :: 		}
L_usart_user_read_text766:
;Validadora.c,1235 :: 		}
L_usart_user_read_text765:
;Validadora.c,1223 :: 		for(fila = 1; fila <= myTable.row; fila++){
0x7B04	0x0105      	MOVLB       5
0x7B06	0x4B49      	INFSNZ      usart_user_read_text_fila_L0, 1, 1
0x7B08	0x2B4A      	INCF        usart_user_read_text_fila_L0+1, 1, 1
;Validadora.c,1236 :: 		}
0x7B0A	0xD7C0      	BRA         L_usart_user_read_text762
L_usart_user_read_text763:
;Validadora.c,1237 :: 		}
L_usart_user_read_text761:
0x7B0C	0x0105      	MOVLB       5
;Validadora.c,1239 :: 		DS1307_read(&myRTC, false);
0x7B0E	0x0E77      	MOVLW       _myRTC
0x7B10	0x6F78      	MOVWF       FARG_DS1307_read_myDS, 1
0x7B12	0x0E04      	MOVLW       hi_addr(_myRTC)
0x7B14	0x6F79      	MOVWF       FARG_DS1307_read_myDS+1, 1
0x7B16	0x6B7A      	CLRF        FARG_DS1307_read_formatComplet, 1
0x7B18	0xF010ECF9  	CALL        _DS1307_read, 0
;Validadora.c,1240 :: 		string_cpyn(msjConst, &usart.message[6] , 2);
0x7B1C	0x0E12      	MOVLW       _msjConst
0x7B1E	0x6F78      	MOVWF       FARG_string_cpyn_destino, 1
0x7B20	0x0E05      	MOVLW       hi_addr(_msjConst)
0x7B22	0x6F79      	MOVWF       FARG_string_cpyn_destino+1, 1
0x7B24	0x0E4B      	MOVLW       _usart+6
0x7B26	0x6F7A      	MOVWF       FARG_string_cpyn_origen, 1
0x7B28	0x0E03      	MOVLW       hi_addr(_usart+6)
0x7B2A	0x6F7B      	MOVWF       FARG_string_cpyn_origen+1, 1
0x7B2C	0x0E02      	MOVLW       2
0x7B2E	0x6F7C      	MOVWF       FARG_string_cpyn_size, 1
0x7B30	0xF00DEC35  	CALL        _string_cpyn, 0
;Validadora.c,1242 :: 		if(stringToNum(msjConst) == myRTC.day){
0x7B34	0x0E12      	MOVLW       _msjConst
0x7B36	0x6F78      	MOVWF       FARG_stringToNum_cadena, 1
0x7B38	0x0E05      	MOVLW       hi_addr(_msjConst)
0x7B3A	0x6F79      	MOVWF       FARG_stringToNum_cadena+1, 1
0x7B3C	0xF00DEC5C  	CALL        _stringToNum, 0
0x7B40	0x0E00      	MOVLW       0
0x7B42	0x6E04      	MOVWF       R4 
0x7B44	0x1803      	XORWF       R3, 0 
0x7B46	0xE109      	BNZ         L__usart_user_read_text1350
0x7B48	0x5004      	MOVF        R4, 0 
0x7B4A	0x1802      	XORWF       R2, 0 
0x7B4C	0xE106      	BNZ         L__usart_user_read_text1350
0x7B4E	0x5004      	MOVF        R4, 0 
0x7B50	0x1801      	XORWF       R1, 0 
0x7B52	0xE103      	BNZ         L__usart_user_read_text1350
0x7B54	0x5000      	MOVF        R0, 0 
0x7B56	0x0104      	MOVLB       4
0x7B58	0x197B      	XORWF       _myRTC+4, 0, 1
L__usart_user_read_text1350:
0x7B5A	0xA4D8      	BTFSS       STATUS, 2 
0x7B5C	0xD0B4      	BRA         L_usart_user_read_text767
;Validadora.c,1244 :: 		string_cpyn(msjConst, &myRTC.time[1], 6);
0x7B5E	0x0E12      	MOVLW       _msjConst
0x7B60	0x0105      	MOVLB       5
0x7B62	0x6F78      	MOVWF       FARG_string_cpyn_destino, 1
0x7B64	0x0E05      	MOVLW       hi_addr(_msjConst)
0x7B66	0x6F79      	MOVWF       FARG_string_cpyn_destino+1, 1
0x7B68	0x0E7F      	MOVLW       _myRTC+8
0x7B6A	0x6F7A      	MOVWF       FARG_string_cpyn_origen, 1
0x7B6C	0x0E04      	MOVLW       hi_addr(_myRTC+8)
0x7B6E	0x6F7B      	MOVWF       FARG_string_cpyn_origen+1, 1
0x7B70	0x0E06      	MOVLW       6
0x7B72	0x6F7C      	MOVWF       FARG_string_cpyn_size, 1
0x7B74	0xF00DEC35  	CALL        _string_cpyn, 0
;Validadora.c,1245 :: 		seconds = DS1307_getSeconds(msjConst);
0x7B78	0x0E12      	MOVLW       _msjConst
0x7B7A	0x6F54      	MOVWF       FARG_DS1307_getSeconds_HHMMSS, 1
0x7B7C	0x0E05      	MOVLW       hi_addr(_msjConst)
0x7B7E	0x6F55      	MOVWF       FARG_DS1307_getSeconds_HHMMSS+1, 1
0x7B80	0xF01DECC0  	CALL        _DS1307_getSeconds, 0
0x7B84	0xF54BC000  	MOVFF       R0, usart_user_read_text_seconds_L0
0x7B88	0xF54CC001  	MOVFF       R1, usart_user_read_text_seconds_L0+1
0x7B8C	0xF54DC002  	MOVFF       R2, usart_user_read_text_seconds_L0+2
0x7B90	0xF54EC003  	MOVFF       R3, usart_user_read_text_seconds_L0+3
;Validadora.c,1246 :: 		string_cpyn(msjConst, usart.message, 6);
0x7B94	0x0E12      	MOVLW       _msjConst
0x7B96	0x6F78      	MOVWF       FARG_string_cpyn_destino, 1
0x7B98	0x0E05      	MOVLW       hi_addr(_msjConst)
0x7B9A	0x6F79      	MOVWF       FARG_string_cpyn_destino+1, 1
0x7B9C	0x0E45      	MOVLW       _usart
0x7B9E	0x6F7A      	MOVWF       FARG_string_cpyn_origen, 1
0x7BA0	0x0E03      	MOVLW       hi_addr(_usart)
0x7BA2	0x6F7B      	MOVWF       FARG_string_cpyn_origen+1, 1
0x7BA4	0x0E06      	MOVLW       6
0x7BA6	0x6F7C      	MOVWF       FARG_string_cpyn_size, 1
0x7BA8	0xF00DEC35  	CALL        _string_cpyn, 0
;Validadora.c,1247 :: 		seconds -= DS1307_getSeconds(msjConst);
0x7BAC	0x0E12      	MOVLW       _msjConst
0x7BAE	0x6F54      	MOVWF       FARG_DS1307_getSeconds_HHMMSS, 1
0x7BB0	0x0E05      	MOVLW       hi_addr(_msjConst)
0x7BB2	0x6F55      	MOVWF       FARG_DS1307_getSeconds_HHMMSS+1, 1
0x7BB4	0xF01DECC0  	CALL        _DS1307_getSeconds, 0
0x7BB8	0xF004C54B  	MOVFF       usart_user_read_text_seconds_L0, R4
0x7BBC	0xF005C54C  	MOVFF       usart_user_read_text_seconds_L0+1, R5
0x7BC0	0xF006C54D  	MOVFF       usart_user_read_text_seconds_L0+2, R6
0x7BC4	0xF007C54E  	MOVFF       usart_user_read_text_seconds_L0+3, R7
0x7BC8	0x5000      	MOVF        R0, 0 
0x7BCA	0x5E04      	SUBWF       R4, 1 
0x7BCC	0x5001      	MOVF        R1, 0 
0x7BCE	0x5A05      	SUBWFB      R5, 1 
0x7BD0	0x5002      	MOVF        R2, 0 
0x7BD2	0x5A06      	SUBWFB      R6, 1 
0x7BD4	0x5003      	MOVF        R3, 0 
0x7BD6	0x5A07      	SUBWFB      R7, 1 
0x7BD8	0xF54BC004  	MOVFF       R4, usart_user_read_text_seconds_L0
0x7BDC	0xF54CC005  	MOVFF       R5, usart_user_read_text_seconds_L0+1
0x7BE0	0xF54DC006  	MOVFF       R6, usart_user_read_text_seconds_L0+2
0x7BE4	0xF54EC007  	MOVFF       R7, usart_user_read_text_seconds_L0+3
;Validadora.c,1248 :: 		seconds = clamp(seconds, 0, TOLERANCIA_OUT); //Saturar en este rango
0x7BE8	0xF554C004  	MOVFF       R4, FARG_clamp_valor
0x7BEC	0xF555C005  	MOVFF       R5, FARG_clamp_valor+1
0x7BF0	0xF556C006  	MOVFF       R6, FARG_clamp_valor+2
0x7BF4	0xF557C007  	MOVFF       R7, FARG_clamp_valor+3
0x7BF8	0x6B58      	CLRF        FARG_clamp_min, 1
0x7BFA	0x6B59      	CLRF        FARG_clamp_min+1, 1
0x7BFC	0x6B5A      	CLRF        FARG_clamp_min+2, 1
0x7BFE	0x6B5B      	CLRF        FARG_clamp_min+3, 1
0x7C00	0x0E8E      	MOVLW       142
0x7C02	0x6F5C      	MOVWF       FARG_clamp_max, 1
0x7C04	0x0E03      	MOVLW       3
0x7C06	0x6F5D      	MOVWF       FARG_clamp_max+1, 1
0x7C08	0x0E00      	MOVLW       0
0x7C0A	0x6F5E      	MOVWF       FARG_clamp_max+2, 1
0x7C0C	0x6F5F      	MOVWF       FARG_clamp_max+3, 1
0x7C0E	0xF019EC7E  	CALL        _clamp, 0
0x7C12	0xF54BC000  	MOVFF       R0, usart_user_read_text_seconds_L0
0x7C16	0xF54CC001  	MOVFF       R1, usart_user_read_text_seconds_L0+1
0x7C1A	0xF54DC002  	MOVFF       R2, usart_user_read_text_seconds_L0+2
0x7C1E	0xF54EC003  	MOVFF       R3, usart_user_read_text_seconds_L0+3
;Validadora.c,1251 :: 		if(seconds < TOLERANCIA_OUT){
0x7C22	0x0E80      	MOVLW       128
0x7C24	0x1803      	XORWF       R3, 0 
0x7C26	0x6E04      	MOVWF       R4 
0x7C28	0x0E80      	MOVLW       128
0x7C2A	0x5C04      	SUBWF       R4, 0 
0x7C2C	0xE108      	BNZ         L__usart_user_read_text1351
0x7C2E	0x0E00      	MOVLW       0
0x7C30	0x5C02      	SUBWF       R2, 0 
0x7C32	0xE105      	BNZ         L__usart_user_read_text1351
0x7C34	0x0E03      	MOVLW       3
0x7C36	0x5C01      	SUBWF       R1, 0 
0x7C38	0xE102      	BNZ         L__usart_user_read_text1351
0x7C3A	0x0E8E      	MOVLW       142
0x7C3C	0x5C00      	SUBWF       R0, 0 
L__usart_user_read_text1351:
0x7C3E	0xE233      	BC          L_usart_user_read_text768
;Validadora.c,1253 :: 		mysql_write_roundTrip(tableKeyOutDate, keyOutDate, usart.message, string_len(usart.message)+1);
0x7C40	0x0105      	MOVLB       5
0x7C42	0x0E45      	MOVLW       _usart
0x7C44	0x6F86      	MOVWF       FARG_string_len_texto, 1
0x7C46	0x0E03      	MOVLW       hi_addr(_usart)
0x7C48	0x6F87      	MOVWF       FARG_string_len_texto+1, 1
0x7C4A	0xF007EC95  	CALL        _string_len, 0
0x7C4E	0x5000      	MOVF        R0, 0 
0x7C50	0x0F01      	ADDLW       1
0x7C52	0x6F8C      	MOVWF       FARG_mysql_write_roundTrip_bytes, 1
0x7C54	0x0EFD      	MOVLW       _tableKeyOutDate
0x7C56	0x6F86      	MOVWF       FARG_mysql_write_roundTrip_name, 1
0x7C58	0x0E01      	MOVLW       hi_addr(_tableKeyOutDate)
0x7C5A	0x6F87      	MOVWF       FARG_mysql_write_roundTrip_name+1, 1
0x7C5C	0x0EFA      	MOVLW       _keyOutDate
0x7C5E	0x6F88      	MOVWF       FARG_mysql_write_roundTrip_column, 1
0x7C60	0x0E00      	MOVLW       hi_addr(_keyOutDate)
0x7C62	0x6F89      	MOVWF       FARG_mysql_write_roundTrip_column+1, 1
0x7C64	0x0E45      	MOVLW       _usart
0x7C66	0x6F8A      	MOVWF       FARG_mysql_write_roundTrip_texto, 1
0x7C68	0x0E03      	MOVLW       hi_addr(_usart)
0x7C6A	0x6F8B      	MOVWF       FARG_mysql_write_roundTrip_texto+1, 1
0x7C6C	0xF006EC89  	CALL        _mysql_write_roundTrip, 0
;Validadora.c,1255 :: 		abrirBarrera = true;
0x7C70	0x0E01      	MOVLW       1
0x7C72	0x0103      	MOVLB       3
0x7C74	0x6F31      	MOVWF       _abrirBarrera, 1
;Validadora.c,1256 :: 		SALIDA_RELE1 = 1;
0x7C76	0x8A80      	BSF         PORTA, 5 
;Validadora.c,1257 :: 		SALIDA_RELE2 = 1;
0x7C78	0x8084      	BSF         PORTE, 0 
;Validadora.c,1258 :: 		timer1_reset();
0x7C7A	0xF00DEC30  	CALL        _timer1_reset, 0
;Validadora.c,1259 :: 		timer1_enable(true);
0x7C7E	0x0E01      	MOVLW       1
0x7C80	0x0105      	MOVLB       5
0x7C82	0x6F78      	MOVWF       FARG_timer1_enable_enable, 1
0x7C84	0xF012EC5F  	CALL        _timer1_enable, 0
;Validadora.c,1261 :: 		lcd_clean_row(3);
0x7C88	0x0E03      	MOVLW       3
0x7C8A	0x6F78      	MOVWF       FARG_lcd_clean_row_fila, 1
0x7C8C	0xF00FECA1  	CALL        _lcd_clean_row, 0
;Validadora.c,1262 :: 		lcd_out(3, 1, "Acceso aceptado");
0x7C90	0x0E03      	MOVLW       3
0x7C92	0x6F78      	MOVWF       FARG_Lcd_Out_row, 1
0x7C94	0x0E01      	MOVLW       1
0x7C96	0x6F79      	MOVWF       FARG_Lcd_Out_column, 1
0x7C98	0x0E18      	MOVLW       ?lstr34_Validadora
0x7C9A	0x6F7A      	MOVWF       FARG_Lcd_Out_text, 1
0x7C9C	0x0E02      	MOVLW       hi_addr(?lstr34_Validadora)
0x7C9E	0x6F7B      	MOVWF       FARG_Lcd_Out_text+1, 1
0x7CA0	0xF012EC66  	CALL        _Lcd_Out, 0
;Validadora.c,1266 :: 		}else{
0x7CA4	0xD00F      	BRA         L_usart_user_read_text769
L_usart_user_read_text768:
;Validadora.c,1268 :: 		lcd_clean_row(3);
0x7CA6	0x0E03      	MOVLW       3
0x7CA8	0x0105      	MOVLB       5
0x7CAA	0x6F78      	MOVWF       FARG_lcd_clean_row_fila, 1
0x7CAC	0xF00FECA1  	CALL        _lcd_clean_row, 0
;Validadora.c,1269 :: 		lcd_out(3, 1, "Tiempo agotado");
0x7CB0	0x0E03      	MOVLW       3
0x7CB2	0x6F78      	MOVWF       FARG_Lcd_Out_row, 1
0x7CB4	0x0E01      	MOVLW       1
0x7CB6	0x6F79      	MOVWF       FARG_Lcd_Out_column, 1
0x7CB8	0x0EEE      	MOVLW       ?lstr35_Validadora
0x7CBA	0x6F7A      	MOVWF       FARG_Lcd_Out_text, 1
0x7CBC	0x0E01      	MOVLW       hi_addr(?lstr35_Validadora)
0x7CBE	0x6F7B      	MOVWF       FARG_Lcd_Out_text+1, 1
0x7CC0	0xF012EC66  	CALL        _Lcd_Out, 0
;Validadora.c,1273 :: 		}
L_usart_user_read_text769:
;Validadora.c,1274 :: 		}else{
0x7CC4	0xD00F      	BRA         L_usart_user_read_text770
L_usart_user_read_text767:
;Validadora.c,1275 :: 		lcd_clean_row(3);
0x7CC6	0x0E03      	MOVLW       3
0x7CC8	0x0105      	MOVLB       5
0x7CCA	0x6F78      	MOVWF       FARG_lcd_clean_row_fila, 1
0x7CCC	0xF00FECA1  	CALL        _lcd_clean_row, 0
;Validadora.c,1276 :: 		lcd_out(3,1,"*Llave invalida D*");
0x7CD0	0x0E03      	MOVLW       3
0x7CD2	0x6F78      	MOVWF       FARG_Lcd_Out_row, 1
0x7CD4	0x0E01      	MOVLW       1
0x7CD6	0x6F79      	MOVWF       FARG_Lcd_Out_column, 1
0x7CD8	0x0EC6      	MOVLW       ?lstr36_Validadora
0x7CDA	0x6F7A      	MOVWF       FARG_Lcd_Out_text, 1
0x7CDC	0x0E01      	MOVLW       hi_addr(?lstr36_Validadora)
0x7CDE	0x6F7B      	MOVWF       FARG_Lcd_Out_text+1, 1
0x7CE0	0xF012EC66  	CALL        _Lcd_Out, 0
;Validadora.c,1280 :: 		}
L_usart_user_read_text770:
;Validadora.c,1281 :: 		}
L_usart_user_read_text760:
;Validadora.c,1282 :: 		}else{
0x7CE4	0xD011      	BRA         L_usart_user_read_text771
L_usart_user_read_text742:
0x7CE6	0x0103      	MOVLB       3
;Validadora.c,1283 :: 		usart.rx_overflow = 0;
0x7CE8	0x6B67      	CLRF        _usart+34, 1
;Validadora.c,1284 :: 		lcd_clean_row(3);
0x7CEA	0x0E03      	MOVLW       3
0x7CEC	0x0105      	MOVLB       5
0x7CEE	0x6F78      	MOVWF       FARG_lcd_clean_row_fila, 1
0x7CF0	0xF00FECA1  	CALL        _lcd_clean_row, 0
;Validadora.c,1285 :: 		lcd_out(3,1,"Lectura dañada");
0x7CF4	0x0E03      	MOVLW       3
0x7CF6	0x6F78      	MOVWF       FARG_Lcd_Out_row, 1
0x7CF8	0x0E01      	MOVLW       1
0x7CFA	0x6F79      	MOVWF       FARG_Lcd_Out_column, 1
0x7CFC	0x0EB7      	MOVLW       ?lstr37_Validadora
0x7CFE	0x6F7A      	MOVWF       FARG_Lcd_Out_text, 1
0x7D00	0x0E01      	MOVLW       hi_addr(?lstr37_Validadora)
0x7D02	0x6F7B      	MOVWF       FARG_Lcd_Out_text+1, 1
0x7D04	0xF012EC66  	CALL        _Lcd_Out, 0
;Validadora.c,1289 :: 		}
L_usart_user_read_text771:
;Validadora.c,1290 :: 		}
L_end_usart_user_read_text:
0x7D08	0x0012      	RETURN      0
; end of _usart_user_read_text
_can_open:
;lib_can.h,334 :: 		void can_open(long ip, long mask, char id, char speed_us){
;lib_can.h,336 :: 		can.ip = ip;
0x7D0A	0xF3BFC546  	MOVFF       FARG_can_open_ip, _can
0x7D0E	0xF3C0C547  	MOVFF       FARG_can_open_ip+1, _can+1
0x7D12	0xF3C1C548  	MOVFF       FARG_can_open_ip+2, _can+2
0x7D16	0xF3C2C549  	MOVFF       FARG_can_open_ip+3, _can+3
;lib_can.h,337 :: 		can.mask = mask;
0x7D1A	0xF3C7C54A  	MOVFF       FARG_can_open_mask, _can+8
0x7D1E	0xF3C8C54B  	MOVFF       FARG_can_open_mask+1, _can+9
0x7D22	0xF3C9C54C  	MOVFF       FARG_can_open_mask+2, _can+10
0x7D26	0xF3CAC54D  	MOVFF       FARG_can_open_mask+3, _can+11
;lib_can.h,338 :: 		can.ipAddress = ip + id;
0x7D2A	0x0105      	MOVLB       5
0x7D2C	0x514E      	MOVF        FARG_can_open_id, 0, 1
0x7D2E	0x2546      	ADDWF       FARG_can_open_ip, 0, 1
0x7D30	0x6E00      	MOVWF       R0 
0x7D32	0x0E00      	MOVLW       0
0x7D34	0x2147      	ADDWFC      FARG_can_open_ip+1, 0, 1
0x7D36	0x6E01      	MOVWF       R1 
0x7D38	0x0E00      	MOVLW       0
0x7D3A	0x2148      	ADDWFC      FARG_can_open_ip+2, 0, 1
0x7D3C	0x6E02      	MOVWF       R2 
0x7D3E	0x0E00      	MOVLW       0
0x7D40	0x2149      	ADDWFC      FARG_can_open_ip+3, 0, 1
0x7D42	0x6E03      	MOVWF       R3 
0x7D44	0xF3C3C000  	MOVFF       R0, _can+4
0x7D48	0xF3C4C001  	MOVFF       R1, _can+5
0x7D4C	0xF3C5C002  	MOVFF       R2, _can+6
0x7D50	0xF3C6C003  	MOVFF       R3, _can+7
;lib_can.h,339 :: 		can.id = id;
0x7D54	0xF3CBC54E  	MOVFF       FARG_can_open_id, _can+12
;lib_can.h,342 :: 		can.conected = true;
0x7D58	0x0E01      	MOVLW       1
0x7D5A	0x0103      	MOVLB       3
0x7D5C	0x6FCC      	MOVWF       _can+13, 1
;lib_can.h,343 :: 		can.tx_status = 0;      //Estado cero por defecto
0x7D5E	0x6BE1      	CLRF        _can+34, 1
;lib_can.h,344 :: 		can.txQueu = false;     //No ha encolado datos para transmitir
0x7D60	0x6BE0      	CLRF        _can+33, 1
;lib_can.h,345 :: 		can.rxBusy = false;     //No esta escuhando ningun mensaje
0x7D62	0x0104      	MOVLB       4
0x7D64	0x6B29      	CLRF        _can+106, 1
;lib_can.h,347 :: 		can_set_operation(CAN_OPERATION_CONFIG);
0x7D66	0x0E04      	MOVLW       4
0x7D68	0x0105      	MOVLB       5
0x7D6A	0x6F78      	MOVWF       FARG_can_set_operation_CAN_OPERATION, 1
0x7D6C	0xF016ECAB  	CALL        _can_set_operation, 0
;lib_can.h,348 :: 		can_set_mode(CAN_MODE_LEGACY);
0x7D70	0x6B54      	CLRF        FARG_can_set_mode_CAN_MODE, 1
0x7D72	0xF01BEC2C  	CALL        _can_set_mode, 0
;lib_can.h,349 :: 		can_set_baud(speed_us);
0x7D76	0xF554C54F  	MOVFF       FARG_can_open_speed_us, FARG_can_set_baud_speed_us
0x7D7A	0x0E00      	MOVLW       0
0x7D7C	0x6F55      	MOVWF       FARG_can_set_baud_speed_us+1, 1
0x7D7E	0xF01BEC78  	CALL        _can_set_baud, 0
;lib_can.h,351 :: 		RXB0CON = 0;
0x7D82	0x6A60      	CLRF        RXB0CON 
;lib_can.h,352 :: 		RXB0CON.RXM0 = 0;  //RECIBE TODOS LOS MENSAJES VALIDOS, STANDAR Ó EXTENDED
0x7D84	0x9A60      	BCF         RXB0CON, 5 
;lib_can.h,353 :: 		RXB0CON.RXM1 = 0;  //SEGUN EL BIT EXIDEN EN EL REGISTRO RXFnSIDL
0x7D86	0x9C60      	BCF         RXB0CON, 6 
;lib_can.h,354 :: 		RXB0CON.RXB0DBEN = CAN_USE_DOUBLE_BUFFER;
0x7D88	0x9460      	BCF         RXB0CON, 2 
;lib_can.h,355 :: 		RXB1CON = 0;
0x7D8A	0x010F      	MOVLB       15
0x7D8C	0x6B50      	CLRF        RXB1CON, 1
;lib_can.h,357 :: 		CIOCON.ENDRHI = CAN_ENABLE_DRIVE_HIGH;
0x7D8E	0x9A73      	BCF         CIOCON, 5 
;lib_can.h,358 :: 		CIOCON.CANCAP = CAN_ENABLE_CAPTURE;
0x7D90	0x9873      	BCF         CIOCON, 4 
;lib_can.h,361 :: 		can_set_id(&RXM0EIDL, mask);    //MASKARA 0, ACEPTA X ID
0x7D92	0x0E1B      	MOVLW       RXM0EIDL
0x7D94	0x0105      	MOVLB       5
0x7D96	0x6F78      	MOVWF       FARG_can_set_id_address, 1
0x7D98	0x0E0F      	MOVLW       hi_addr(RXM0EIDL)
0x7D9A	0x6F79      	MOVWF       FARG_can_set_id_address+1, 1
0x7D9C	0xF57AC54A  	MOVFF       FARG_can_open_mask, FARG_can_set_id_value
0x7DA0	0xF57BC54B  	MOVFF       FARG_can_open_mask+1, FARG_can_set_id_value+1
0x7DA4	0xF57CC54C  	MOVFF       FARG_can_open_mask+2, FARG_can_set_id_value+2
0x7DA8	0xF57DC54D  	MOVFF       FARG_can_open_mask+3, FARG_can_set_id_value+3
0x7DAC	0xF010ECAF  	CALL        _can_set_id, 0
;lib_can.h,362 :: 		can_set_id(&RXM1EIDL, mask);    //MASKARA 1, ACEPTA X ID
0x7DB0	0x0E1F      	MOVLW       RXM1EIDL
0x7DB2	0x6F78      	MOVWF       FARG_can_set_id_address, 1
0x7DB4	0x0E0F      	MOVLW       hi_addr(RXM1EIDL)
0x7DB6	0x6F79      	MOVWF       FARG_can_set_id_address+1, 1
0x7DB8	0xF57AC54A  	MOVFF       FARG_can_open_mask, FARG_can_set_id_value
0x7DBC	0xF57BC54B  	MOVFF       FARG_can_open_mask+1, FARG_can_set_id_value+1
0x7DC0	0xF57CC54C  	MOVFF       FARG_can_open_mask+2, FARG_can_set_id_value+2
0x7DC4	0xF57DC54D  	MOVFF       FARG_can_open_mask+3, FARG_can_set_id_value+3
0x7DC8	0xF010ECAF  	CALL        _can_set_id, 0
;lib_can.h,364 :: 		can_set_id(&RXF0EIDL, can.ipAddress);  //FILTRO 0 ASOCIADO CON LA MASKARA 0
0x7DCC	0x0E03      	MOVLW       RXF0EIDL
0x7DCE	0x6F78      	MOVWF       FARG_can_set_id_address, 1
0x7DD0	0x0E0F      	MOVLW       hi_addr(RXF0EIDL)
0x7DD2	0x6F79      	MOVWF       FARG_can_set_id_address+1, 1
0x7DD4	0xF57AC3C3  	MOVFF       _can+4, FARG_can_set_id_value
0x7DD8	0xF57BC3C4  	MOVFF       _can+5, FARG_can_set_id_value+1
0x7DDC	0xF57CC3C5  	MOVFF       _can+6, FARG_can_set_id_value+2
0x7DE0	0xF57DC3C6  	MOVFF       _can+7, FARG_can_set_id_value+3
0x7DE4	0xF010ECAF  	CALL        _can_set_id, 0
;lib_can.h,365 :: 		can_set_id(&RXF1EIDL, can.ipAddress);  //FILTRO 1 ASOCIADO CON LA MASKARA 0
0x7DE8	0x0E07      	MOVLW       RXF1EIDL
0x7DEA	0x6F78      	MOVWF       FARG_can_set_id_address, 1
0x7DEC	0x0E0F      	MOVLW       hi_addr(RXF1EIDL)
0x7DEE	0x6F79      	MOVWF       FARG_can_set_id_address+1, 1
0x7DF0	0xF57AC3C3  	MOVFF       _can+4, FARG_can_set_id_value
0x7DF4	0xF57BC3C4  	MOVFF       _can+5, FARG_can_set_id_value+1
0x7DF8	0xF57CC3C5  	MOVFF       _can+6, FARG_can_set_id_value+2
0x7DFC	0xF57DC3C6  	MOVFF       _can+7, FARG_can_set_id_value+3
0x7E00	0xF010ECAF  	CALL        _can_set_id, 0
;lib_can.h,366 :: 		can_set_id(&RXF2EIDL, can.ipAddress);  //FILTRO 2 ASOCIADO CON LA MASKARA 1
0x7E04	0x0E0B      	MOVLW       RXF2EIDL
0x7E06	0x6F78      	MOVWF       FARG_can_set_id_address, 1
0x7E08	0x0E0F      	MOVLW       hi_addr(RXF2EIDL)
0x7E0A	0x6F79      	MOVWF       FARG_can_set_id_address+1, 1
0x7E0C	0xF57AC3C3  	MOVFF       _can+4, FARG_can_set_id_value
0x7E10	0xF57BC3C4  	MOVFF       _can+5, FARG_can_set_id_value+1
0x7E14	0xF57CC3C5  	MOVFF       _can+6, FARG_can_set_id_value+2
0x7E18	0xF57DC3C6  	MOVFF       _can+7, FARG_can_set_id_value+3
0x7E1C	0xF010ECAF  	CALL        _can_set_id, 0
;lib_can.h,367 :: 		can_set_id(&RXF3EIDL, can.ipAddress);  //FILTRO 3 ASOCIADO CON LA MASKARA 1
0x7E20	0x0E0F      	MOVLW       RXF3EIDL
0x7E22	0x6F78      	MOVWF       FARG_can_set_id_address, 1
0x7E24	0x0E0F      	MOVLW       hi_addr(RXF3EIDL)
0x7E26	0x6F79      	MOVWF       FARG_can_set_id_address+1, 1
0x7E28	0xF57AC3C3  	MOVFF       _can+4, FARG_can_set_id_value
0x7E2C	0xF57BC3C4  	MOVFF       _can+5, FARG_can_set_id_value+1
0x7E30	0xF57CC3C5  	MOVFF       _can+6, FARG_can_set_id_value+2
0x7E34	0xF57DC3C6  	MOVFF       _can+7, FARG_can_set_id_value+3
0x7E38	0xF010ECAF  	CALL        _can_set_id, 0
;lib_can.h,368 :: 		can_set_id(&RXF4EIDL, can.ipAddress);  //FILTRO 4 ASOCIADO CON LA MASKARA 1
0x7E3C	0x0E13      	MOVLW       RXF4EIDL
0x7E3E	0x6F78      	MOVWF       FARG_can_set_id_address, 1
0x7E40	0x0E0F      	MOVLW       hi_addr(RXF4EIDL)
0x7E42	0x6F79      	MOVWF       FARG_can_set_id_address+1, 1
0x7E44	0xF57AC3C3  	MOVFF       _can+4, FARG_can_set_id_value
0x7E48	0xF57BC3C4  	MOVFF       _can+5, FARG_can_set_id_value+1
0x7E4C	0xF57CC3C5  	MOVFF       _can+6, FARG_can_set_id_value+2
0x7E50	0xF57DC3C6  	MOVFF       _can+7, FARG_can_set_id_value+3
0x7E54	0xF010ECAF  	CALL        _can_set_id, 0
;lib_can.h,369 :: 		can_set_id(&RXF5EIDL, can.ipAddress);  //FILTRO 5 ASOCIADO CON LA MASKARA 1
0x7E58	0x0E17      	MOVLW       RXF5EIDL
0x7E5A	0x6F78      	MOVWF       FARG_can_set_id_address, 1
0x7E5C	0x0E0F      	MOVLW       hi_addr(RXF5EIDL)
0x7E5E	0x6F79      	MOVWF       FARG_can_set_id_address+1, 1
0x7E60	0xF57AC3C3  	MOVFF       _can+4, FARG_can_set_id_value
0x7E64	0xF57BC3C4  	MOVFF       _can+5, FARG_can_set_id_value+1
0x7E68	0xF57CC3C5  	MOVFF       _can+6, FARG_can_set_id_value+2
0x7E6C	0xF57DC3C6  	MOVFF       _can+7, FARG_can_set_id_value+3
0x7E70	0xF010ECAF  	CALL        _can_set_id, 0
;lib_can.h,371 :: 		can_set_id(&RXF6EIDL, 0);       //FILTRO 6
0x7E74	0x0E63      	MOVLW       RXF6EIDL
0x7E76	0x6F78      	MOVWF       FARG_can_set_id_address, 1
0x7E78	0x0E0D      	MOVLW       hi_addr(RXF6EIDL)
0x7E7A	0x6F79      	MOVWF       FARG_can_set_id_address+1, 1
0x7E7C	0x6B7A      	CLRF        FARG_can_set_id_value, 1
0x7E7E	0x6B7B      	CLRF        FARG_can_set_id_value+1, 1
0x7E80	0x6B7C      	CLRF        FARG_can_set_id_value+2, 1
0x7E82	0x6B7D      	CLRF        FARG_can_set_id_value+3, 1
0x7E84	0xF010ECAF  	CALL        _can_set_id, 0
;lib_can.h,372 :: 		can_set_id(&RXF7EIDL, 0);       //FILTRO 7
0x7E88	0x0E67      	MOVLW       RXF7EIDL
0x7E8A	0x6F78      	MOVWF       FARG_can_set_id_address, 1
0x7E8C	0x0E0D      	MOVLW       hi_addr(RXF7EIDL)
0x7E8E	0x6F79      	MOVWF       FARG_can_set_id_address+1, 1
0x7E90	0x6B7A      	CLRF        FARG_can_set_id_value, 1
0x7E92	0x6B7B      	CLRF        FARG_can_set_id_value+1, 1
0x7E94	0x6B7C      	CLRF        FARG_can_set_id_value+2, 1
0x7E96	0x6B7D      	CLRF        FARG_can_set_id_value+3, 1
0x7E98	0xF010ECAF  	CALL        _can_set_id, 0
;lib_can.h,373 :: 		can_set_id(&RXF8EIDL, 0);       //FILTRO 8
0x7E9C	0x0E6B      	MOVLW       RXF8EIDL
0x7E9E	0x6F78      	MOVWF       FARG_can_set_id_address, 1
0x7EA0	0x0E0D      	MOVLW       hi_addr(RXF8EIDL)
0x7EA2	0x6F79      	MOVWF       FARG_can_set_id_address+1, 1
0x7EA4	0x6B7A      	CLRF        FARG_can_set_id_value, 1
0x7EA6	0x6B7B      	CLRF        FARG_can_set_id_value+1, 1
0x7EA8	0x6B7C      	CLRF        FARG_can_set_id_value+2, 1
0x7EAA	0x6B7D      	CLRF        FARG_can_set_id_value+3, 1
0x7EAC	0xF010ECAF  	CALL        _can_set_id, 0
;lib_can.h,374 :: 		can_set_id(&RXF9EIDL, 0);       //FILTRO 9
0x7EB0	0x0E73      	MOVLW       RXF9EIDL
0x7EB2	0x6F78      	MOVWF       FARG_can_set_id_address, 1
0x7EB4	0x0E0D      	MOVLW       hi_addr(RXF9EIDL)
0x7EB6	0x6F79      	MOVWF       FARG_can_set_id_address+1, 1
0x7EB8	0x6B7A      	CLRF        FARG_can_set_id_value, 1
0x7EBA	0x6B7B      	CLRF        FARG_can_set_id_value+1, 1
0x7EBC	0x6B7C      	CLRF        FARG_can_set_id_value+2, 1
0x7EBE	0x6B7D      	CLRF        FARG_can_set_id_value+3, 1
0x7EC0	0xF010ECAF  	CALL        _can_set_id, 0
;lib_can.h,375 :: 		can_set_id(&RXF10EIDL, 0);      //FILTRO 10
0x7EC4	0x0E77      	MOVLW       RXF10EIDL
0x7EC6	0x6F78      	MOVWF       FARG_can_set_id_address, 1
0x7EC8	0x0E0D      	MOVLW       hi_addr(RXF10EIDL)
0x7ECA	0x6F79      	MOVWF       FARG_can_set_id_address+1, 1
0x7ECC	0x6B7A      	CLRF        FARG_can_set_id_value, 1
0x7ECE	0x6B7B      	CLRF        FARG_can_set_id_value+1, 1
0x7ED0	0x6B7C      	CLRF        FARG_can_set_id_value+2, 1
0x7ED2	0x6B7D      	CLRF        FARG_can_set_id_value+3, 1
0x7ED4	0xF010ECAF  	CALL        _can_set_id, 0
;lib_can.h,376 :: 		can_set_id(&RXF11EIDL, 0);      //FILTRO 11
0x7ED8	0x0E7B      	MOVLW       RXF11EIDL
0x7EDA	0x6F78      	MOVWF       FARG_can_set_id_address, 1
0x7EDC	0x0E0D      	MOVLW       hi_addr(RXF11EIDL)
0x7EDE	0x6F79      	MOVWF       FARG_can_set_id_address+1, 1
0x7EE0	0x6B7A      	CLRF        FARG_can_set_id_value, 1
0x7EE2	0x6B7B      	CLRF        FARG_can_set_id_value+1, 1
0x7EE4	0x6B7C      	CLRF        FARG_can_set_id_value+2, 1
0x7EE6	0x6B7D      	CLRF        FARG_can_set_id_value+3, 1
0x7EE8	0xF010ECAF  	CALL        _can_set_id, 0
;lib_can.h,377 :: 		can_set_id(&RXF12EIDL, 0);      //FILTRO 12
0x7EEC	0x0E83      	MOVLW       RXF12EIDL
0x7EEE	0x6F78      	MOVWF       FARG_can_set_id_address, 1
0x7EF0	0x0E0D      	MOVLW       hi_addr(RXF12EIDL)
0x7EF2	0x6F79      	MOVWF       FARG_can_set_id_address+1, 1
0x7EF4	0x6B7A      	CLRF        FARG_can_set_id_value, 1
0x7EF6	0x6B7B      	CLRF        FARG_can_set_id_value+1, 1
0x7EF8	0x6B7C      	CLRF        FARG_can_set_id_value+2, 1
0x7EFA	0x6B7D      	CLRF        FARG_can_set_id_value+3, 1
0x7EFC	0xF010ECAF  	CALL        _can_set_id, 0
;lib_can.h,378 :: 		can_set_id(&RXF13EIDL, 0);      //FILTRO 13
0x7F00	0x0E87      	MOVLW       RXF13EIDL
0x7F02	0x6F78      	MOVWF       FARG_can_set_id_address, 1
0x7F04	0x0E0D      	MOVLW       hi_addr(RXF13EIDL)
0x7F06	0x6F79      	MOVWF       FARG_can_set_id_address+1, 1
0x7F08	0x6B7A      	CLRF        FARG_can_set_id_value, 1
0x7F0A	0x6B7B      	CLRF        FARG_can_set_id_value+1, 1
0x7F0C	0x6B7C      	CLRF        FARG_can_set_id_value+2, 1
0x7F0E	0x6B7D      	CLRF        FARG_can_set_id_value+3, 1
0x7F10	0xF010ECAF  	CALL        _can_set_id, 0
;lib_can.h,379 :: 		can_set_id(&RXF14EIDL, 0);      //FILTRO 14
0x7F14	0x0E8B      	MOVLW       RXF14EIDL
0x7F16	0x6F78      	MOVWF       FARG_can_set_id_address, 1
0x7F18	0x0E0D      	MOVLW       hi_addr(RXF14EIDL)
0x7F1A	0x6F79      	MOVWF       FARG_can_set_id_address+1, 1
0x7F1C	0x6B7A      	CLRF        FARG_can_set_id_value, 1
0x7F1E	0x6B7B      	CLRF        FARG_can_set_id_value+1, 1
0x7F20	0x6B7C      	CLRF        FARG_can_set_id_value+2, 1
0x7F22	0x6B7D      	CLRF        FARG_can_set_id_value+3, 1
0x7F24	0xF010ECAF  	CALL        _can_set_id, 0
;lib_can.h,380 :: 		can_set_id(&RXF15EIDL, 0);      //FILTRO 15
0x7F28	0x0E93      	MOVLW       RXF15EIDL
0x7F2A	0x6F78      	MOVWF       FARG_can_set_id_address, 1
0x7F2C	0x0E0D      	MOVLW       hi_addr(RXF15EIDL)
0x7F2E	0x6F79      	MOVWF       FARG_can_set_id_address+1, 1
0x7F30	0x6B7A      	CLRF        FARG_can_set_id_value, 1
0x7F32	0x6B7B      	CLRF        FARG_can_set_id_value+1, 1
0x7F34	0x6B7C      	CLRF        FARG_can_set_id_value+2, 1
0x7F36	0x6B7D      	CLRF        FARG_can_set_id_value+3, 1
0x7F38	0xF010ECAF  	CALL        _can_set_id, 0
;lib_can.h,388 :: 		TRISB.B2 = 0;  //CANAL TX
0x7F3C	0x9493      	BCF         TRISB, 2 
;lib_can.h,389 :: 		TRISB.B3 = 1;  //CANAL RX
0x7F3E	0x8693      	BSF         TRISB, 3 
;lib_can.h,392 :: 		can_set_operation(CAN_OPERATION_NORMAL);
0x7F40	0x6B78      	CLRF        FARG_can_set_operation_CAN_OPERATION, 1
0x7F42	0xF016ECAB  	CALL        _can_set_operation, 0
;lib_can.h,393 :: 		}
L_end_can_open:
0x7F46	0x0012      	RETURN      0
; end of _can_open
_mysql_count_forced:
;table_eeprom.h,437 :: 		int mysql_count_forced(char *tabla, char *columna, long buscar){
;table_eeprom.h,438 :: 		int coincidencias = 0;
0x7F48	0x0105      	MOVLB       5
0x7F4A	0x6B4E      	CLRF        mysql_count_forced_coincidencias_L0, 1
0x7F4C	0x6B4F      	CLRF        mysql_count_forced_coincidencias_L0+1, 1
0x7F4E	0x6B50      	CLRF        mysql_count_forced_busqueda_L0, 1
0x7F50	0x6B51      	CLRF        mysql_count_forced_busqueda_L0+1, 1
0x7F52	0x6B52      	CLRF        mysql_count_forced_busqueda_L0+2, 1
0x7F54	0x6B53      	CLRF        mysql_count_forced_busqueda_L0+3, 1
;table_eeprom.h,442 :: 		if(mysql_exist(tabla)){
0x7F56	0xF59CC546  	MOVFF       FARG_mysql_count_forced_tabla, FARG_mysql_exist_name
0x7F5A	0xF59DC547  	MOVFF       FARG_mysql_count_forced_tabla+1, FARG_mysql_exist_name+1
0x7F5E	0xF002EC3A  	CALL        _mysql_exist, 0
0x7F62	0x5200      	MOVF        R0, 1 
0x7F64	0xE034      	BZ          L_mysql_count_forced559
;table_eeprom.h,443 :: 		for(myTable.cont = 1; myTable.cont <= myTable.row; myTable.cont++){
0x7F66	0x0E01      	MOVLW       1
0x7F68	0x0103      	MOVLB       3
0x7F6A	0x6FBA      	MOVWF       Validadora_myTable+47, 1
L_mysql_count_forced560:
0x7F6C	0x0E00      	MOVLW       0
0x7F6E	0x5D8E      	SUBWF       Validadora_myTable+3, 0, 1
0x7F70	0xE102      	BNZ         L__mysql_count_forced1289
0x7F72	0x51BA      	MOVF        Validadora_myTable+47, 0, 1
0x7F74	0x5D8D      	SUBWF       Validadora_myTable+2, 0, 1
L__mysql_count_forced1289:
0x7F76	0xE32B      	BNC         L_mysql_count_forced561
;table_eeprom.h,445 :: 		if(!mysql_read_forced(tabla, columna, myTable.cont, (char*)&busqueda)){
0x7F78	0xF586C546  	MOVFF       FARG_mysql_count_forced_tabla, FARG_mysql_read_forced_name
0x7F7C	0xF587C547  	MOVFF       FARG_mysql_count_forced_tabla+1, FARG_mysql_read_forced_name+1
0x7F80	0xF588C548  	MOVFF       FARG_mysql_count_forced_columna, FARG_mysql_read_forced_column
0x7F84	0xF589C549  	MOVFF       FARG_mysql_count_forced_columna+1, FARG_mysql_read_forced_column+1
0x7F88	0xF58AC3BA  	MOVFF       Validadora_myTable+47, FARG_mysql_read_forced_fila
0x7F8C	0x0E00      	MOVLW       0
0x7F8E	0x0105      	MOVLB       5
0x7F90	0x6F8B      	MOVWF       FARG_mysql_read_forced_fila+1, 1
0x7F92	0x0E50      	MOVLW       mysql_count_forced_busqueda_L0
0x7F94	0x6F8C      	MOVWF       FARG_mysql_read_forced_result, 1
0x7F96	0x0E05      	MOVLW       hi_addr(mysql_count_forced_busqueda_L0)
0x7F98	0x6F8D      	MOVWF       FARG_mysql_read_forced_result+1, 1
0x7F9A	0xF008EC2A  	CALL        _mysql_read_forced, 0
0x7F9E	0x5200      	MOVF        R0, 1 
0x7FA0	0xE10F      	BNZ         L_mysql_count_forced563
;table_eeprom.h,446 :: 		if(buscar == busqueda)
0x7FA2	0x0105      	MOVLB       5
0x7FA4	0x514D      	MOVF        FARG_mysql_count_forced_buscar+3, 0, 1
0x7FA6	0x1953      	XORWF       mysql_count_forced_busqueda_L0+3, 0, 1
0x7FA8	0xE108      	BNZ         L__mysql_count_forced1290
0x7FAA	0x514C      	MOVF        FARG_mysql_count_forced_buscar+2, 0, 1
0x7FAC	0x1952      	XORWF       mysql_count_forced_busqueda_L0+2, 0, 1
0x7FAE	0xE105      	BNZ         L__mysql_count_forced1290
0x7FB0	0x514B      	MOVF        FARG_mysql_count_forced_buscar+1, 0, 1
0x7FB2	0x1951      	XORWF       mysql_count_forced_busqueda_L0+1, 0, 1
0x7FB4	0xE102      	BNZ         L__mysql_count_forced1290
0x7FB6	0x514A      	MOVF        FARG_mysql_count_forced_buscar, 0, 1
0x7FB8	0x1950      	XORWF       mysql_count_forced_busqueda_L0, 0, 1
L__mysql_count_forced1290:
0x7FBA	0xE102      	BNZ         L_mysql_count_forced564
;table_eeprom.h,447 :: 		coincidencias++;
0x7FBC	0x4B4E      	INFSNZ      mysql_count_forced_coincidencias_L0, 1, 1
0x7FBE	0x2B4F      	INCF        mysql_count_forced_coincidencias_L0+1, 1, 1
L_mysql_count_forced564:
;table_eeprom.h,448 :: 		}
L_mysql_count_forced563:
;table_eeprom.h,443 :: 		for(myTable.cont = 1; myTable.cont <= myTable.row; myTable.cont++){
0x7FC0	0x0103      	MOVLB       3
0x7FC2	0x51BA      	MOVF        Validadora_myTable+47, 0, 1
0x7FC4	0x0F01      	ADDLW       1
0x7FC6	0x6E00      	MOVWF       R0 
0x7FC8	0xF3BAC000  	MOVFF       R0, Validadora_myTable+47
;table_eeprom.h,449 :: 		}
0x7FCC	0xD7CF      	BRA         L_mysql_count_forced560
L_mysql_count_forced561:
;table_eeprom.h,450 :: 		}
L_mysql_count_forced559:
;table_eeprom.h,452 :: 		return coincidencias;
0x7FCE	0xF000C54E  	MOVFF       mysql_count_forced_coincidencias_L0, R0
0x7FD2	0xF001C54F  	MOVFF       mysql_count_forced_coincidencias_L0+1, R1
;table_eeprom.h,453 :: 		}
L_end_mysql_count_forced:
0x7FD6	0x0012      	RETURN      0
; end of _mysql_count_forced
_wiegand26_open:
;wiegand26.h,51 :: 		void wiegand26_open(){
;wiegand26.h,52 :: 		external_int0_open(false, false);        //No disponible, flanco de bajada
0x7FD8	0x0105      	MOVLB       5
0x7FDA	0x6B54      	CLRF        FARG_external_int0_open_enable, 1
0x7FDC	0x6B55      	CLRF        FARG_external_int0_open_edgeOnRising, 1
0x7FDE	0xF01DEC42  	CALL        _external_int0_open, 0
;wiegand26.h,53 :: 		external_int1_open(false, false, true);  //No disponible, flanco de bajada
0x7FE2	0x6B54      	CLRF        FARG_external_int1_open_enable, 1
0x7FE4	0x6B55      	CLRF        FARG_external_int1_open_edgeOnRising, 1
0x7FE6	0x0E01      	MOVLW       1
0x7FE8	0x6F56      	MOVWF       FARG_external_int1_open_priorityHigh, 1
0x7FEA	0xF033ECF7  	CALL        _external_int1_open, 0
;wiegand26.h,54 :: 		WIEGAN26_DATA = 0;
0x7FEE	0x0103      	MOVLB       3
0x7FF0	0x6B39      	CLRF        Validadora_WIEGAN26_DATA, 1
0x7FF2	0x6B3A      	CLRF        Validadora_WIEGAN26_DATA+1, 1
0x7FF4	0x6B3B      	CLRF        Validadora_WIEGAN26_DATA+2, 1
0x7FF6	0x6B3C      	CLRF        Validadora_WIEGAN26_DATA+3, 1
;wiegand26.h,55 :: 		WIEGAN26_CONT = 0;
0x7FF8	0x6B38      	CLRF        Validadora_WIEGAN26_CONT, 1
;wiegand26.h,56 :: 		WIEGAND_TEMP = 0;
0x7FFA	0x6B3F      	CLRF        _WIEGAND_TEMP, 1
0x7FFC	0x6B40      	CLRF        _WIEGAND_TEMP+1, 1
;wiegand26.h,58 :: 		timer2_open(5000, true, true, false);
0x7FFE	0x0E88      	MOVLW       136
0x8000	0x0105      	MOVLB       5
0x8002	0x6F54      	MOVWF       FARG_timer2_open_time_us, 1
0x8004	0x0E13      	MOVLW       19
0x8006	0x6F55      	MOVWF       FARG_timer2_open_time_us+1, 1
0x8008	0x0E00      	MOVLW       0
0x800A	0x6F56      	MOVWF       FARG_timer2_open_time_us+2, 1
0x800C	0x6F57      	MOVWF       FARG_timer2_open_time_us+3, 1
0x800E	0x0E01      	MOVLW       1
0x8010	0x6F58      	MOVWF       FARG_timer2_open_powerOn, 1
0x8012	0x0E01      	MOVLW       1
0x8014	0x6F59      	MOVWF       FARG_timer2_open_enable, 1
0x8016	0x6B5A      	CLRF        FARG_timer2_open_priorityHigh, 1
0x8018	0xF01EEC48  	CALL        _timer2_open, 0
;wiegand26.h,59 :: 		}
L_end_wiegand26_open:
0x801C	0x0012      	RETURN      0
; end of _wiegand26_open
_int_timer3:
;Validadora.c,2129 :: 		void int_timer3(){
;Validadora.c,2132 :: 		if(PIR2.TMR3IF && PIE2.TMR3IE){
0x801E	0xA2A1      	BTFSS       PIR2, 1 
0x8020	0xD01E      	BRA         L_int_timer3915
0x8022	0xA2A0      	BTFSS       PIE2, 1 
0x8024	0xD01C      	BRA         L_int_timer3915
L__int_timer3996:
;Validadora.c,2133 :: 		can.temp += 200;     //Can protocol
0x8026	0x0EC8      	MOVLW       200
0x8028	0x0104      	MOVLB       4
0x802A	0x256C      	ADDWF       _can+173, 0, 1
0x802C	0x6E00      	MOVWF       R0 
0x802E	0x0E00      	MOVLW       0
0x8030	0x216D      	ADDWFC      _can+174, 0, 1
0x8032	0x6E01      	MOVWF       R1 
0x8034	0xF46CC000  	MOVFF       R0, _can+173
0x8038	0xF46DC001  	MOVFF       R1, _can+174
;Validadora.c,2134 :: 		flagTMR3.B0 = true;
0x803C	0x0102      	MOVLB       2
0x803E	0x818C      	BSF         _flagTMR3, 0, 1
;Validadora.c,2137 :: 		if(++temp >= 5){
0x8040	0x0103      	MOVLB       3
0x8042	0x2B18      	INCF        int_timer3_temp_L0, 1, 1
0x8044	0x0E05      	MOVLW       5
0x8046	0x5D18      	SUBWF       int_timer3_temp_L0, 0, 1
0x8048	0xE305      	BNC         L_int_timer3916
;Validadora.c,2138 :: 		if(can.conected)
0x804A	0x53CC      	MOVF        _can+13, 1, 1
0x804C	0xA4D8      	BTFSS       STATUS, 2 
;Validadora.c,2139 :: 		LED_LINK ^= 1;
0x804E	0x7482      	BTG         PORTC, 2 
L_int_timer3917:
;Validadora.c,2140 :: 		temp = 0;
0x8050	0x6B18      	CLRF        int_timer3_temp_L0, 1
;Validadora.c,2141 :: 		flagSecondTMR3.B0 = true;
0x8052	0x801E      	BSF         _flagSecondTMR3, 0 
;Validadora.c,2142 :: 		}
L_int_timer3916:
;Validadora.c,2144 :: 		TMR3H = getByte(sampler3,1);
0x8054	0xFFB3C344  	MOVFF       _sampler3+1, TMR3H
;Validadora.c,2145 :: 		TMR3L = getByte(sampler3,0);
0x8058	0xFFB2C343  	MOVFF       _sampler3, TMR3L
;Validadora.c,2146 :: 		PIR2.TMR3IF = 0;   //LIMPÍAR BANDERA
0x805C	0x92A1      	BCF         PIR2, 1 
;Validadora.c,2147 :: 		}
L_int_timer3915:
;Validadora.c,2148 :: 		}
L_end_int_timer3:
0x805E	0x0012      	RETURN      0
; end of _int_timer3
_int_timer2:
;wiegand26.h,196 :: 		void int_timer2(){
;wiegand26.h,197 :: 		if(PIR1.TMR2IF && PIE1.TMR2IE){
0x8060	0xA29E      	BTFSS       PIR1, 1 
0x8062	0xD023      	BRA         L_int_timer2613
0x8064	0xA29D      	BTFSS       PIE1, 1 
0x8066	0xD021      	BRA         L_int_timer2613
L__int_timer2971:
;wiegand26.h,199 :: 		WIEGAND_TEMP += 5;  //Cada 5ms
0x8068	0x0E05      	MOVLW       5
0x806A	0x0103      	MOVLB       3
0x806C	0x273F      	ADDWF       _WIEGAND_TEMP, 1, 1
0x806E	0x0E00      	MOVLW       0
0x8070	0x2340      	ADDWFC      _WIEGAND_TEMP+1, 1, 1
;wiegand26.h,200 :: 		if(WIEGAND_TEMP >= WIEGAND_TIME_FRAME_RESET){
0x8072	0x0E13      	MOVLW       19
0x8074	0x5D40      	SUBWF       _WIEGAND_TEMP+1, 0, 1
0x8076	0xE102      	BNZ         L__int_timer21329
0x8078	0x0E88      	MOVLW       136
0x807A	0x5D3F      	SUBWF       _WIEGAND_TEMP, 0, 1
L__int_timer21329:
0x807C	0xE315      	BNC         L_int_timer2614
;wiegand26.h,201 :: 		WIEGAND_TEMP = 0;
0x807E	0x6B3F      	CLRF        _WIEGAND_TEMP, 1
0x8080	0x6B40      	CLRF        _WIEGAND_TEMP+1, 1
;wiegand26.h,203 :: 		if(WIEGAN26_CONT){
0x8082	0x5338      	MOVF        Validadora_WIEGAN26_CONT, 1, 1
0x8084	0xE011      	BZ          L_int_timer2615
;wiegand26.h,204 :: 		if(!(WIEGAN26_CONT == WIEGAND_BITS_CARD || WIEGAN26_CONT == WIEGAND_BITS_NIP)){
0x8086	0x5138      	MOVF        Validadora_WIEGAN26_CONT, 0, 1
0x8088	0x0A1A      	XORLW       26
0x808A	0xE005      	BZ          L_int_timer2617
0x808C	0x5138      	MOVF        Validadora_WIEGAN26_CONT, 0, 1
0x808E	0x0A20      	XORLW       32
0x8090	0xE002      	BZ          L_int_timer2617
0x8092	0x6A00      	CLRF        R0 
0x8094	0xD002      	BRA         L_int_timer2616
L_int_timer2617:
0x8096	0x0E01      	MOVLW       1
0x8098	0x6E00      	MOVWF       R0 
L_int_timer2616:
0x809A	0x5200      	MOVF        R0, 1 
0x809C	0xE105      	BNZ         L_int_timer2618
;wiegand26.h,205 :: 		WIEGAN26_CONT = 0;
0x809E	0x6B38      	CLRF        Validadora_WIEGAN26_CONT, 1
;wiegand26.h,206 :: 		WIEGAN26_DATA = 0;
0x80A0	0x6B39      	CLRF        Validadora_WIEGAN26_DATA, 1
0x80A2	0x6B3A      	CLRF        Validadora_WIEGAN26_DATA+1, 1
0x80A4	0x6B3B      	CLRF        Validadora_WIEGAN26_DATA+2, 1
0x80A6	0x6B3C      	CLRF        Validadora_WIEGAN26_DATA+3, 1
;wiegand26.h,207 :: 		}
L_int_timer2618:
;wiegand26.h,208 :: 		}
L_int_timer2615:
;wiegand26.h,209 :: 		}
L_int_timer2614:
;wiegand26.h,211 :: 		PIR1.TMR2IF = 0;   //LIMPÍAR BANDERA
0x80A8	0x929E      	BCF         PIR1, 1 
;wiegand26.h,212 :: 		}
L_int_timer2613:
;wiegand26.h,213 :: 		}
L_end_int_timer2:
0x80AA	0x0012      	RETURN      0
; end of _int_timer2
_int_timer1:
;Validadora.c,2101 :: 		void int_timer1(){
;Validadora.c,2105 :: 		if(PIR1.TMR1IF && PIE1.TMR1IE){
0x80AC	0xA09E      	BTFSS       PIR1, 0 
0x80AE	0xD01C      	BRA         L_int_timer1908
0x80B0	0xA09D      	BTFSS       PIE1, 0 
0x80B2	0xD01A      	BRA         L_int_timer1908
L__int_timer1995:
;Validadora.c,2107 :: 		if(++temp >= 5){
0x80B4	0x0102      	MOVLB       2
0x80B6	0x2B5B      	INCF        int_timer1_temp_L0, 1, 1
0x80B8	0x0E05      	MOVLW       5
0x80BA	0x5D5B      	SUBWF       int_timer1_temp_L0, 0, 1
0x80BC	0xE310      	BNC         L_int_timer1909
;Validadora.c,2108 :: 		temp = 0;
0x80BE	0x6B5B      	CLRF        int_timer1_temp_L0, 1
;Validadora.c,2109 :: 		SALIDA_RELE1 = 0; //APAGAR RELE DESPUES DE UN SEGUNDO
0x80C0	0x9A80      	BCF         PORTA, 5 
;Validadora.c,2110 :: 		SALIDA_RELE2 = 0;
0x80C2	0x9084      	BCF         PORTE, 0 
;Validadora.c,2112 :: 		estados++;
0x80C4	0x0103      	MOVLB       3
0x80C6	0x2B0B      	INCF        int_timer1_estados_L0, 1, 1
;Validadora.c,2113 :: 		if(estados == 3){   //Segundos apagados
0x80C8	0x510B      	MOVF        int_timer1_estados_L0, 0, 1
0x80CA	0x0A03      	XORLW       3
0x80CC	0xE103      	BNZ         L_int_timer1910
;Validadora.c,2114 :: 		SALIDA_RELE1 = 1; //APAGAR RELE DESPUES DE UN SEGUNDO
0x80CE	0x8A80      	BSF         PORTA, 5 
;Validadora.c,2115 :: 		SALIDA_RELE2 = 1;
0x80D0	0x8084      	BSF         PORTE, 0 
;Validadora.c,2116 :: 		}else if(estados > 3){
0x80D2	0xD005      	BRA         L_int_timer1911
L_int_timer1910:
0x80D4	0x510B      	MOVF        int_timer1_estados_L0, 0, 1
0x80D6	0x0803      	SUBLW       3
0x80D8	0xE202      	BC          L_int_timer1912
;Validadora.c,2117 :: 		estados = 0;
0x80DA	0x6B0B      	CLRF        int_timer1_estados_L0, 1
;Validadora.c,2118 :: 		PIE1.TMR1IE  = 0;
0x80DC	0x909D      	BCF         PIE1, 0 
;Validadora.c,2119 :: 		}
L_int_timer1912:
L_int_timer1911:
;Validadora.c,2120 :: 		}
L_int_timer1909:
;Validadora.c,2123 :: 		TMR1H = getByte(sampler1,1);
0x80DE	0xFFCFC33E  	MOVFF       _sampler1+1, TMR1H
;Validadora.c,2124 :: 		TMR1L = getByte(sampler1,0);
0x80E2	0xFFCEC33D  	MOVFF       _sampler1, TMR1L
;Validadora.c,2125 :: 		PIR1.TMR1IF = 0;   //LIMPÍAR BANDERA
0x80E6	0x909E      	BCF         PIR1, 0 
;Validadora.c,2126 :: 		}
L_int_timer1908:
;Validadora.c,2127 :: 		}
L_end_int_timer1:
0x80E8	0x0012      	RETURN      0
; end of _int_timer1
_int_usart_rx:
;lib_usart.h,168 :: 		void int_usart_rx(void){
;lib_usart.h,169 :: 		if(PIE1.RCIE && PIR1.RCIF){
0x80EA	0xAA9D      	BTFSS       PIE1, 5 
0x80EC	0xD03D      	BRA         L_int_usart_rx181
0x80EE	0xAA9E      	BTFSS       PIR1, 5 
0x80F0	0xD03B      	BRA         L_int_usart_rx181
L__int_usart_rx929:
;lib_usart.h,170 :: 		if(!usart.rx_new_message.B0){
0x80F2	0x0103      	MOVLB       3
0x80F4	0xB166      	BTFSC       _usart+33, 0, 1
0x80F6	0xD035      	BRA         L_int_usart_rx182
;lib_usart.h,172 :: 		usart.message[usart.rx_cont] = RCREG;
0x80F8	0x0E45      	MOVLW       _usart
0x80FA	0x6EE1      	MOVWF       FSR1L 
0x80FC	0x0E03      	MOVLW       hi_addr(_usart)
0x80FE	0x6EE2      	MOVWF       FSR1H 
0x8100	0x5168      	MOVF        _usart+35, 0, 1
0x8102	0x26E1      	ADDWF       FSR1L, 1 
0x8104	0xB0D8      	BTFSC       STATUS, 0 
0x8106	0x2AE2      	INCF        FSR1H, 1 
0x8108	0xFFE6CFAE  	MOVFF       RCREG, POSTINC1
;lib_usart.h,174 :: 		if(RCREG == usart.rx_delimiter){
0x810C	0x50AE      	MOVF        RCREG, 0 
0x810E	0x1965      	XORWF       _usart+32, 0, 1
0x8110	0xE10D      	BNZ         L_int_usart_rx183
;lib_usart.h,176 :: 		usart.rx_new_message.B0 = true;
0x8112	0x8166      	BSF         _usart+33, 0, 1
;lib_usart.h,177 :: 		usart.message[usart.rx_cont] = 0;  //Se le agrega final de cadena
0x8114	0x0E45      	MOVLW       _usart
0x8116	0x6EE1      	MOVWF       FSR1L 
0x8118	0x0E03      	MOVLW       hi_addr(_usart)
0x811A	0x6EE2      	MOVWF       FSR1H 
0x811C	0x5168      	MOVF        _usart+35, 0, 1
0x811E	0x26E1      	ADDWF       FSR1L, 1 
0x8120	0xB0D8      	BTFSC       STATUS, 0 
0x8122	0x2AE2      	INCF        FSR1H, 1 
0x8124	0x6AE6      	CLRF        POSTINC1 
;lib_usart.h,179 :: 		usart.rx_cont = 0;
0x8126	0x6B68      	CLRF        _usart+35, 1
;lib_usart.h,180 :: 		PIR1.RCIF = 0;
0x8128	0x9A9E      	BCF         PIR1, 5 
;lib_usart.h,181 :: 		return;
0x812A	0xD01E      	BRA         L_end_int_usart_rx
;lib_usart.h,182 :: 		}
L_int_usart_rx183:
;lib_usart.h,183 :: 		usart.rx_cont++;
0x812C	0x5168      	MOVF        _usart+35, 0, 1
0x812E	0x0F01      	ADDLW       1
0x8130	0x6E00      	MOVWF       R0 
0x8132	0xF368C000  	MOVFF       R0, _usart+35
;lib_usart.h,184 :: 		usart.rx_cont &= (UART_BUFFER_SIZE-1);
0x8136	0x0E1F      	MOVLW       31
0x8138	0x1568      	ANDWF       _usart+35, 0, 1
0x813A	0x6E00      	MOVWF       R0 
0x813C	0xF368C000  	MOVFF       R0, _usart+35
;lib_usart.h,186 :: 		usart.rx_overflow.B0 |= !usart.rx_cont? true:false;
0x8140	0x5200      	MOVF        R0, 1 
0x8142	0xE103      	BNZ         L_int_usart_rx184
0x8144	0x0E01      	MOVLW       1
0x8146	0x6E01      	MOVWF       R1 
0x8148	0xD001      	BRA         L_int_usart_rx185
L_int_usart_rx184:
0x814A	0x6A01      	CLRF        R1 
L_int_usart_rx185:
0x814C	0x6A00      	CLRF        R0 
0x814E	0xB167      	BTFSC       _usart+34, 0, 1
0x8150	0x2A00      	INCF        R0, 1 
0x8152	0x5001      	MOVF        R1, 0 
0x8154	0x1200      	IORWF       R0, 1 
0x8156	0xB000      	BTFSC       R0, 0 
0x8158	0xD002      	BRA         L__int_usart_rx1117
0x815A	0x9167      	BCF         _usart+34, 0, 1
0x815C	0xD001      	BRA         L__int_usart_rx1118
L__int_usart_rx1117:
0x815E	0x8167      	BSF         _usart+34, 0, 1
L__int_usart_rx1118:
;lib_usart.h,187 :: 		}else{
0x8160	0xD002      	BRA         L_int_usart_rx186
L_int_usart_rx182:
;lib_usart.h,188 :: 		RCREG &= 0xFF;  //Realizar and para evitar framing error, *#*
0x8162	0x0EFF      	MOVLW       255
0x8164	0x16AE      	ANDWF       RCREG, 1 
;lib_usart.h,189 :: 		}
L_int_usart_rx186:
;lib_usart.h,190 :: 		PIR1.RCIF = 0;
0x8166	0x9A9E      	BCF         PIR1, 5 
;lib_usart.h,191 :: 		}
L_int_usart_rx181:
;lib_usart.h,192 :: 		}
L_end_int_usart_rx:
0x8168	0x0012      	RETURN      0
; end of _int_usart_rx
_int_wiegand26:
;wiegand26.h,165 :: 		void int_wiegand26(){
;wiegand26.h,166 :: 		int_external_int0();
0x816A	0xF036EC06  	CALL        _int_external_int0, 0
;wiegand26.h,167 :: 		int_external_int1();
0x816E	0xF036EC1C  	CALL        _int_external_int1, 0
;wiegand26.h,168 :: 		}
L_end_int_wiegand26:
0x8172	0x0012      	RETURN      0
; end of _int_wiegand26
_int_can:
;lib_can.h,814 :: 		void int_can(){
;lib_can.h,822 :: 		if(PIE3.TXB0IE && PIR3.TXB0IF){
0x8174	0xA4A3      	BTFSS       PIE3, 2 
0x8176	0xD005      	BRA         L_int_can377
0x8178	0xA4A4      	BTFSS       PIR3, 2 
0x817A	0xD003      	BRA         L_int_can377
L__int_can953:
;lib_can.h,823 :: 		can.conected.B0 = true;
0x817C	0x0103      	MOVLB       3
0x817E	0x81CC      	BSF         _can+13, 0, 1
;lib_can.h,824 :: 		PIR3.TXB0IF = 0;
0x8180	0x94A4      	BCF         PIR3, 2 
;lib_can.h,825 :: 		}
L_int_can377:
;lib_can.h,826 :: 		if(PIE3.TXB1IE && PIR3.TXB1IF){
0x8182	0xA6A3      	BTFSS       PIE3, 3 
0x8184	0xD005      	BRA         L_int_can380
0x8186	0xA6A4      	BTFSS       PIR3, 3 
0x8188	0xD003      	BRA         L_int_can380
L__int_can952:
0x818A	0x0103      	MOVLB       3
;lib_can.h,827 :: 		can.conected.B0 = true;
0x818C	0x81CC      	BSF         _can+13, 0, 1
;lib_can.h,828 :: 		PIR3.TXB1IF = 0;
0x818E	0x96A4      	BCF         PIR3, 3 
;lib_can.h,829 :: 		}
L_int_can380:
;lib_can.h,830 :: 		if(PIE3.TXBnIE && PIR3.TXBnIF){
0x8190	0xA8A3      	BTFSS       PIE3, 4 
0x8192	0xD005      	BRA         L_int_can383
0x8194	0xA8A4      	BTFSS       PIR3, 4 
0x8196	0xD003      	BRA         L_int_can383
L__int_can951:
0x8198	0x0103      	MOVLB       3
;lib_can.h,831 :: 		can.conected.B0 = true;
0x819A	0x81CC      	BSF         _can+13, 0, 1
;lib_can.h,832 :: 		PIR3.TXBnIF = 0;
0x819C	0x98A4      	BCF         PIR3, 4 
;lib_can.h,833 :: 		}
L_int_can383:
;lib_can.h,834 :: 		}
L_end_int_can:
0x819E	0x0012      	RETURN      0
; end of _int_can
_usart_do_read_text:
;lib_usart.h,146 :: 		void usart_do_read_text(){
;lib_usart.h,148 :: 		if(usart.rx_new_message){
0x81A0	0x0103      	MOVLB       3
0x81A2	0x5366      	MOVF        _usart+33, 1, 1
0x81A4	0xE004      	BZ          L_usart_do_read_text175
;lib_usart.h,149 :: 		usart_user_read_text();
0x81A6	0xF03BEC6A  	CALL        _usart_user_read_text, 0
;lib_usart.h,150 :: 		usart.rx_new_message = false;
0x81AA	0x0103      	MOVLB       3
0x81AC	0x6B66      	CLRF        _usart+33, 1
;lib_usart.h,151 :: 		}
L_usart_do_read_text175:
;lib_usart.h,152 :: 		}
L_end_usart_do_read_text:
0x81AE	0x0012      	RETURN      0
; end of _usart_do_read_text
_validadora_barrera:
;Validadora.c,490 :: 		void validadora_barrera(){
;Validadora.c,495 :: 		if(BOTON_ENTRADA1 && !sensor.B0){
0x81B0	0xA883      	BTFSS       PORTD, 4 
0x81B2	0xD06E      	BRA         L_validadora_barrera624
0x81B4	0x0102      	MOVLB       2
0x81B6	0xB18D      	BTFSC       validadora_barrera_sensor_L0, 0, 1
0x81B8	0xD06B      	BRA         L_validadora_barrera624
L__validadora_barrera973:
;Validadora.c,496 :: 		sensor.B0 = true;
0x81BA	0x818D      	BSF         validadora_barrera_sensor_L0, 0, 1
;Validadora.c,498 :: 		string_cpyc(bufferEeprom, CAN_TPV);
0x81BC	0x0ED2      	MOVLW       _bufferEeprom
0x81BE	0x0105      	MOVLB       5
0x81C0	0x6F78      	MOVWF       FARG_string_cpyc_destino, 1
0x81C2	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x81C4	0x6F79      	MOVWF       FARG_string_cpyc_destino+1, 1
0x81C6	0x0E0E      	MOVLW       _CAN_TPV
0x81C8	0x6F7A      	MOVWF       FARG_string_cpyc_origen, 1
0x81CA	0x0E9F      	MOVLW       hi_addr(_CAN_TPV)
0x81CC	0x6F7B      	MOVWF       FARG_string_cpyc_origen+1, 1
0x81CE	0x0E00      	MOVLW       higher_addr(_CAN_TPV)
0x81D0	0x6F7C      	MOVWF       FARG_string_cpyc_origen+2, 1
0x81D2	0xF014ECBC  	CALL        _string_cpyc, 0
;Validadora.c,499 :: 		string_addc(bufferEeprom, CAN_BAR);         //BAR
0x81D6	0x0ED2      	MOVLW       _bufferEeprom
0x81D8	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x81DA	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x81DC	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x81DE	0x0E52      	MOVLW       validadora_barrera_CAN_BAR_L0
0x81E0	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x81E2	0x0E9F      	MOVLW       hi_addr(validadora_barrera_CAN_BAR_L0)
0x81E4	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x81E6	0x0E00      	MOVLW       higher_addr(validadora_barrera_CAN_BAR_L0)
0x81E8	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x81EA	0xF00FEC40  	CALL        _string_addc, 0
;Validadora.c,500 :: 		string_addc(bufferEeprom, BARRERA_ABIERTA);
0x81EE	0x0ED2      	MOVLW       _bufferEeprom
0x81F0	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x81F2	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x81F4	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x81F6	0x0EFC      	MOVLW       validadora_barrera_BARRERA_ABIERTA_L0
0x81F8	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x81FA	0x0E9E      	MOVLW       hi_addr(validadora_barrera_BARRERA_ABIERTA_L0)
0x81FC	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x81FE	0x0E00      	MOVLW       higher_addr(validadora_barrera_BARRERA_ABIERTA_L0)
0x8200	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x8202	0xF00FEC40  	CALL        _string_addc, 0
;Validadora.c,501 :: 		DS1307_read(&myRTC, false);
0x8206	0x0E77      	MOVLW       _myRTC
0x8208	0x6F78      	MOVWF       FARG_DS1307_read_myDS, 1
0x820A	0x0E04      	MOVLW       hi_addr(_myRTC)
0x820C	0x6F79      	MOVWF       FARG_DS1307_read_myDS+1, 1
0x820E	0x6B7A      	CLRF        FARG_DS1307_read_formatComplet, 1
0x8210	0xF010ECF9  	CALL        _DS1307_read, 0
;Validadora.c,502 :: 		string_add(bufferEeprom, &myRTC.time[1]);
0x8214	0x0ED2      	MOVLW       _bufferEeprom
0x8216	0x6F78      	MOVWF       FARG_string_add_destino, 1
0x8218	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x821A	0x6F79      	MOVWF       FARG_string_add_destino+1, 1
0x821C	0x0E7F      	MOVLW       _myRTC+8
0x821E	0x6F7A      	MOVWF       FARG_string_add_addEnd, 1
0x8220	0x0E04      	MOVLW       hi_addr(_myRTC+8)
0x8222	0x6F7B      	MOVWF       FARG_string_add_addEnd+1, 1
0x8224	0xF016EC4C  	CALL        _string_add, 0
;Validadora.c,504 :: 		string_addc(bufferEeprom, CAN_MODULE);
0x8228	0x0ED2      	MOVLW       _bufferEeprom
0x822A	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x822C	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x822E	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x8230	0x0E86      	MOVLW       _CAN_MODULE
0x8232	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x8234	0x0E9F      	MOVLW       hi_addr(_CAN_MODULE)
0x8236	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x8238	0x0E00      	MOVLW       higher_addr(_CAN_MODULE)
0x823A	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x823C	0xF00FEC40  	CALL        _string_addc, 0
;Validadora.c,505 :: 		numToHex(canId, msjConst, 1);
0x8240	0xF578C2ED  	MOVFF       _canId, FARG_numToHex_valor
0x8244	0x0E00      	MOVLW       0
0x8246	0x6F79      	MOVWF       FARG_numToHex_valor+1, 1
0x8248	0x6F7A      	MOVWF       FARG_numToHex_valor+2, 1
0x824A	0x6F7B      	MOVWF       FARG_numToHex_valor+3, 1
0x824C	0x0E12      	MOVLW       _msjConst
0x824E	0x6F7C      	MOVWF       FARG_numToHex_cadena, 1
0x8250	0x0E05      	MOVLW       hi_addr(_msjConst)
0x8252	0x6F7D      	MOVWF       FARG_numToHex_cadena+1, 1
0x8254	0x0E01      	MOVLW       1
0x8256	0x6F7E      	MOVWF       FARG_numToHex_bytes, 1
0x8258	0xF00DECAD  	CALL        _numToHex, 0
;Validadora.c,506 :: 		string_add(bufferEeprom, msjConst);
0x825C	0x0ED2      	MOVLW       _bufferEeprom
0x825E	0x6F78      	MOVWF       FARG_string_add_destino, 1
0x8260	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x8262	0x6F79      	MOVWF       FARG_string_add_destino+1, 1
0x8264	0x0E12      	MOVLW       _msjConst
0x8266	0x6F7A      	MOVWF       FARG_string_add_addEnd, 1
0x8268	0x0E05      	MOVLW       hi_addr(_msjConst)
0x826A	0x6F7B      	MOVWF       FARG_string_add_addEnd+1, 1
0x826C	0xF016EC4C  	CALL        _string_add, 0
;Validadora.c,507 :: 		buffer_save_send(false, bufferEeprom);
0x8270	0x6B78      	CLRF        FARG_buffer_save_send_guardar, 1
0x8272	0x0ED2      	MOVLW       _bufferEeprom
0x8274	0x6F79      	MOVWF       FARG_buffer_save_send_buffer, 1
0x8276	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x8278	0x6F7A      	MOVWF       FARG_buffer_save_send_buffer+1, 1
0x827A	0xF00FECCD  	CALL        _buffer_save_send, 0
;Validadora.c,511 :: 		delay_ms(50);
0x827E	0x0EA3      	MOVLW       163
0x8280	0x6E0C      	MOVWF       R12, 0
0x8282	0x0E55      	MOVLW       85
0x8284	0x6E0D      	MOVWF       R13, 0
L_validadora_barrera625:
0x8286	0x2E0D      	DECFSZ      R13, 1, 0
0x8288	0xD7FE      	BRA         L_validadora_barrera625
0x828A	0x2E0C      	DECFSZ      R12, 1, 0
0x828C	0xD7FC      	BRA         L_validadora_barrera625
;Validadora.c,512 :: 		}else if(!BOTON_ENTRADA1 && sensor){
0x828E	0xD00E      	BRA         L_validadora_barrera626
L_validadora_barrera624:
0x8290	0xB883      	BTFSC       PORTD, 4 
0x8292	0xD00C      	BRA         L_validadora_barrera629
0x8294	0x0102      	MOVLB       2
0x8296	0x538D      	MOVF        validadora_barrera_sensor_L0, 1, 1
0x8298	0xE009      	BZ          L_validadora_barrera629
L__validadora_barrera972:
;Validadora.c,513 :: 		sensor.B0 = false;
0x829A	0x918D      	BCF         validadora_barrera_sensor_L0, 0, 1
;Validadora.c,514 :: 		delay_ms(50);
0x829C	0x0EA3      	MOVLW       163
0x829E	0x6E0C      	MOVWF       R12, 0
0x82A0	0x0E55      	MOVLW       85
0x82A2	0x6E0D      	MOVWF       R13, 0
L_validadora_barrera630:
0x82A4	0x2E0D      	DECFSZ      R13, 1, 0
0x82A6	0xD7FE      	BRA         L_validadora_barrera630
0x82A8	0x2E0C      	DECFSZ      R12, 1, 0
0x82AA	0xD7FC      	BRA         L_validadora_barrera630
;Validadora.c,515 :: 		}
L_validadora_barrera629:
L_validadora_barrera626:
;Validadora.c,516 :: 		}
L_end_validadora_barrera:
0x82AC	0x0012      	RETURN      0
; end of _validadora_barrera
_can_do_work:
;lib_can.h,808 :: 		void can_do_work(){
;lib_can.h,809 :: 		can_do_read_message();
0x82AE	0xF038ECE4  	CALL        _can_do_read_message, 0
;lib_can.h,810 :: 		can_do_write_message();
0x82B2	0xF037ECB9  	CALL        _can_do_write_message, 0
;lib_can.h,811 :: 		can_desonexion();
0x82B6	0xF03BEC26  	CALL        _can_desonexion, 0
;lib_can.h,812 :: 		}
L_end_can_do_work:
0x82BA	0x0012      	RETURN      0
; end of _can_do_work
_validadora_bufferEventos:
;Validadora.c,1067 :: 		void validadora_bufferEventos(){
;Validadora.c,1072 :: 		if(!pilaBufferCAN || !can.conected)
0x82BC	0x0103      	MOVLB       3
0x82BE	0x51BD      	MOVF        _pilaBufferCAN, 0, 1
0x82C0	0x11BE      	IORWF       _pilaBufferCAN+1, 0, 1
0x82C2	0xE003      	BZ          L__validadora_bufferEventos992
0x82C4	0x53CC      	MOVF        _can+13, 1, 1
0x82C6	0xE001      	BZ          L__validadora_bufferEventos992
0x82C8	0xD001      	BRA         L_validadora_bufferEventos735
L__validadora_bufferEventos992:
;Validadora.c,1073 :: 		return;
0x82CA	0xD067      	BRA         L_end_validadora_bufferEventos
L_validadora_bufferEventos735:
;Validadora.c,1076 :: 		if(!can.txQueu && !can.rxBusy && !modeBufferEventos){
0x82CC	0x53E0      	MOVF        _can+33, 1, 1
0x82CE	0xE165      	BNZ         L_validadora_bufferEventos738
0x82D0	0x0104      	MOVLB       4
0x82D2	0x5329      	MOVF        _can+106, 1, 1
0x82D4	0xE162      	BNZ         L_validadora_bufferEventos738
0x82D6	0x5249      	MOVF        _modeBufferEventos, 1 
0x82D8	0xE160      	BNZ         L_validadora_bufferEventos738
L__validadora_bufferEventos991:
;Validadora.c,1078 :: 		if(!mysql_read_forced(tableEventosCAN, eventosEstatus, pilaBufferPointer, &estatus)){
0x82DA	0x0E6D      	MOVLW       _tableEventosCAN
0x82DC	0x0105      	MOVLB       5
0x82DE	0x6F86      	MOVWF       FARG_mysql_read_forced_name, 1
0x82E0	0x0E02      	MOVLW       hi_addr(_tableEventosCAN)
0x82E2	0x6F87      	MOVWF       FARG_mysql_read_forced_name+1, 1
0x82E4	0x0E65      	MOVLW       _eventosEstatus
0x82E6	0x6F88      	MOVWF       FARG_mysql_read_forced_column, 1
0x82E8	0x0E02      	MOVLW       hi_addr(_eventosEstatus)
0x82EA	0x6F89      	MOVWF       FARG_mysql_read_forced_column+1, 1
0x82EC	0xF58AC341  	MOVFF       _pilaBufferPointer, FARG_mysql_read_forced_fila
0x82F0	0xF58BC342  	MOVFF       _pilaBufferPointer+1, FARG_mysql_read_forced_fila+1
0x82F4	0x0E26      	MOVLW       validadora_bufferEventos_estatus_L0
0x82F6	0x6F8C      	MOVWF       FARG_mysql_read_forced_result, 1
0x82F8	0x0E05      	MOVLW       hi_addr(validadora_bufferEventos_estatus_L0)
0x82FA	0x6F8D      	MOVWF       FARG_mysql_read_forced_result+1, 1
0x82FC	0xF008EC2A  	CALL        _mysql_read_forced, 0
0x8300	0x5200      	MOVF        R0, 1 
0x8302	0xE12B      	BNZ         L_validadora_bufferEventos739
;Validadora.c,1088 :: 		if(estatus == '1'){  //Data no enviada
0x8304	0x0105      	MOVLB       5
0x8306	0x5126      	MOVF        validadora_bufferEventos_estatus_L0, 0, 1
0x8308	0x0A31      	XORLW       49
0x830A	0xE127      	BNZ         L_validadora_bufferEventos740
;Validadora.c,1089 :: 		mysql_read_string(tableEventosCAN, eventosRegistro, pilaBufferPointer, bufferEeprom);
0x830C	0x0E6D      	MOVLW       _tableEventosCAN
0x830E	0x6F78      	MOVWF       FARG_mysql_read_string_name, 1
0x8310	0x0E02      	MOVLW       hi_addr(_tableEventosCAN)
0x8312	0x6F79      	MOVWF       FARG_mysql_read_string_name+1, 1
0x8314	0x0E5C      	MOVLW       _eventosRegistro
0x8316	0x6F7A      	MOVWF       FARG_mysql_read_string_column, 1
0x8318	0x0E02      	MOVLW       hi_addr(_eventosRegistro)
0x831A	0x6F7B      	MOVWF       FARG_mysql_read_string_column+1, 1
0x831C	0xF57CC341  	MOVFF       _pilaBufferPointer, FARG_mysql_read_string_fila
0x8320	0xF57DC342  	MOVFF       _pilaBufferPointer+1, FARG_mysql_read_string_fila+1
0x8324	0x0ED2      	MOVLW       _bufferEeprom
0x8326	0x6F7E      	MOVWF       FARG_mysql_read_string_result, 1
0x8328	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x832A	0x6F7F      	MOVWF       FARG_mysql_read_string_result+1, 1
0x832C	0xF015EC0E  	CALL        _mysql_read_string, 0
;Validadora.c,1091 :: 		if(can_write_text(can.ip+canIdTPV, bufferEeprom, 0)){
0x8330	0xF586C3BF  	MOVFF       _can, FARG_can_write_text_ipAddress
0x8334	0xF587C3C0  	MOVFF       _can+1, FARG_can_write_text_ipAddress+1
0x8338	0xF588C3C1  	MOVFF       _can+2, FARG_can_write_text_ipAddress+2
0x833C	0xF589C3C2  	MOVFF       _can+3, FARG_can_write_text_ipAddress+3
0x8340	0x0ED2      	MOVLW       _bufferEeprom
0x8342	0x0105      	MOVLB       5
0x8344	0x6F8A      	MOVWF       FARG_can_write_text_texto, 1
0x8346	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x8348	0x6F8B      	MOVWF       FARG_can_write_text_texto+1, 1
0x834A	0x6B8C      	CLRF        FARG_can_write_text_priority, 1
0x834C	0xF007EC54  	CALL        _can_write_text, 0
0x8350	0x5200      	MOVF        R0, 1 
0x8352	0xE002      	BZ          L_validadora_bufferEventos741
;Validadora.c,1092 :: 		modeBufferEventos = true;
0x8354	0x0E01      	MOVLW       1
0x8356	0x6E49      	MOVWF       _modeBufferEventos 
;Validadora.c,1093 :: 		}
L_validadora_bufferEventos741:
;Validadora.c,1102 :: 		return;
0x8358	0xD020      	BRA         L_end_validadora_bufferEventos
;Validadora.c,1103 :: 		}
L_validadora_bufferEventos740:
;Validadora.c,1104 :: 		}
L_validadora_bufferEventos739:
;Validadora.c,1106 :: 		pilaBufferPointer = clamp_shift(++pilaBufferPointer, 1, myTable.row);
0x835A	0x0103      	MOVLB       3
0x835C	0x4B41      	INFSNZ      _pilaBufferPointer, 1, 1
0x835E	0x2B42      	INCF        _pilaBufferPointer+1, 1, 1
0x8360	0xF590C341  	MOVFF       _pilaBufferPointer, FARG_clamp_shift_valor
0x8364	0xF591C342  	MOVFF       _pilaBufferPointer+1, FARG_clamp_shift_valor+1
0x8368	0x0E00      	MOVLW       0
0x836A	0xBF42      	BTFSC       _pilaBufferPointer+1, 7, 1
0x836C	0x0EFF      	MOVLW       255
0x836E	0x0105      	MOVLB       5
0x8370	0x6F92      	MOVWF       FARG_clamp_shift_valor+2, 1
0x8372	0x6F93      	MOVWF       FARG_clamp_shift_valor+3, 1
0x8374	0x0E01      	MOVLW       1
0x8376	0x6F94      	MOVWF       FARG_clamp_shift_min, 1
0x8378	0x0E00      	MOVLW       0
0x837A	0x6F95      	MOVWF       FARG_clamp_shift_min+1, 1
0x837C	0x6F96      	MOVWF       FARG_clamp_shift_min+2, 1
0x837E	0x6F97      	MOVWF       FARG_clamp_shift_min+3, 1
0x8380	0xF598C38D  	MOVFF       Validadora_myTable+2, FARG_clamp_shift_max
0x8384	0xF599C38E  	MOVFF       Validadora_myTable+3, FARG_clamp_shift_max+1
0x8388	0x0E00      	MOVLW       0
0x838A	0x6F9A      	MOVWF       FARG_clamp_shift_max+2, 1
0x838C	0x6F9B      	MOVWF       FARG_clamp_shift_max+3, 1
0x838E	0xF003ECB0  	CALL        _clamp_shift, 0
0x8392	0xF341C000  	MOVFF       R0, _pilaBufferPointer
0x8396	0xF342C001  	MOVFF       R1, _pilaBufferPointer+1
;Validadora.c,1107 :: 		}
L_validadora_bufferEventos738:
;Validadora.c,1108 :: 		}
L_end_validadora_bufferEventos:
0x839A	0x0012      	RETURN      0
; end of _validadora_bufferEventos
_validadora_monedero:
;Validadora.c,518 :: 		void validadora_monedero(){
;Validadora.c,525 :: 		if(BOTON_IMPRIMIR && !sensado){
0x839C	0xA283      	BTFSS       PORTD, 1 
0x839E	0xD00E      	BRA         L_validadora_monedero633
0x83A0	0x0102      	MOVLB       2
0x83A2	0x5388      	MOVF        validadora_monedero_sensado_L0, 1, 1
0x83A4	0xE10B      	BNZ         L_validadora_monedero633
L__validadora_monedero975:
;Validadora.c,527 :: 		sensado = true;
0x83A6	0x0E01      	MOVLW       1
0x83A8	0x6F88      	MOVWF       validadora_monedero_sensado_L0, 1
;Validadora.c,528 :: 		if(!startRelay)
0x83AA	0x5387      	MOVF        validadora_monedero_startRelay_L0, 1, 1
0x83AC	0xE102      	BNZ         L_validadora_monedero634
;Validadora.c,529 :: 		tempMonedero = 0;
0x83AE	0x0103      	MOVLB       3
0x83B0	0x6B32      	CLRF        _tempMonedero, 1
L_validadora_monedero634:
;Validadora.c,531 :: 		startRelay = true;
0x83B2	0x0E01      	MOVLW       1
0x83B4	0x0102      	MOVLB       2
0x83B6	0x6F87      	MOVWF       validadora_monedero_startRelay_L0, 1
;Validadora.c,532 :: 		pulsosMonederos++;
0x83B8	0x2B89      	INCF        validadora_monedero_pulsosMonederos_L0, 1, 1
;Validadora.c,533 :: 		}else if(!BOTON_IMPRIMIR && sensado){
0x83BA	0xD00E      	BRA         L_validadora_monedero635
L_validadora_monedero633:
0x83BC	0xB283      	BTFSC       PORTD, 1 
0x83BE	0xD00C      	BRA         L_validadora_monedero638
0x83C0	0x0102      	MOVLB       2
0x83C2	0x5388      	MOVF        validadora_monedero_sensado_L0, 1, 1
0x83C4	0xE009      	BZ          L_validadora_monedero638
L__validadora_monedero974:
;Validadora.c,534 :: 		sensado = false;
0x83C6	0x6B88      	CLRF        validadora_monedero_sensado_L0, 1
;Validadora.c,535 :: 		delay_ms(50);
0x83C8	0x0EA3      	MOVLW       163
0x83CA	0x6E0C      	MOVWF       R12, 0
0x83CC	0x0E55      	MOVLW       85
0x83CE	0x6E0D      	MOVWF       R13, 0
L_validadora_monedero639:
0x83D0	0x2E0D      	DECFSZ      R13, 1, 0
0x83D2	0xD7FE      	BRA         L_validadora_monedero639
0x83D4	0x2E0C      	DECFSZ      R12, 1, 0
0x83D6	0xD7FC      	BRA         L_validadora_monedero639
;Validadora.c,536 :: 		}
L_validadora_monedero638:
L_validadora_monedero635:
0x83D8	0x0102      	MOVLB       2
;Validadora.c,538 :: 		if(startRelay){
0x83DA	0x5387      	MOVF        validadora_monedero_startRelay_L0, 1, 1
0x83DC	0xE01C      	BZ          L_validadora_monedero640
;Validadora.c,539 :: 		if(tempMonedero >= timeMaxMonedero){
0x83DE	0x0E03      	MOVLW       3
0x83E0	0x0103      	MOVLB       3
0x83E2	0x5D32      	SUBWF       _tempMonedero, 0, 1
0x83E4	0xE318      	BNC         L_validadora_monedero641
;Validadora.c,540 :: 		if(pulsosMonederos == 1){
0x83E6	0x0102      	MOVLB       2
0x83E8	0x5189      	MOVF        validadora_monedero_pulsosMonederos_L0, 0, 1
0x83EA	0x0A01      	XORLW       1
0x83EC	0xE111      	BNZ         L_validadora_monedero642
;Validadora.c,542 :: 		if(!SALIDA_RELE1){
0x83EE	0xBA80      	BTFSC       PORTA, 5 
0x83F0	0xD00D      	BRA         L_validadora_monedero643
;Validadora.c,543 :: 		abrirBarrera = true;
0x83F2	0x0E01      	MOVLW       1
0x83F4	0x0103      	MOVLB       3
0x83F6	0x6F31      	MOVWF       _abrirBarrera, 1
;Validadora.c,544 :: 		SALIDA_RELE1 = 1;
0x83F8	0x8A80      	BSF         PORTA, 5 
;Validadora.c,545 :: 		SALIDA_RELE2 = 1;
0x83FA	0x8084      	BSF         PORTE, 0 
;Validadora.c,546 :: 		timer1_reset();
0x83FC	0xF00DEC30  	CALL        _timer1_reset, 0
;Validadora.c,547 :: 		timer1_enable(true);
0x8400	0x0E01      	MOVLW       1
0x8402	0x0105      	MOVLB       5
0x8404	0x6F78      	MOVWF       FARG_timer1_enable_enable, 1
0x8406	0xF012EC5F  	CALL        _timer1_enable, 0
;Validadora.c,549 :: 		}else
0x840A	0xD001      	BRA         L_validadora_monedero644
L_validadora_monedero643:
;Validadora.c,550 :: 		asm nop;
0x840C	0x0000      	NOP
L_validadora_monedero644:
;Validadora.c,552 :: 		}else{
0x840E	0xD000      	BRA         L_validadora_monedero645
L_validadora_monedero642:
;Validadora.c,554 :: 		}
L_validadora_monedero645:
;Validadora.c,556 :: 		pulsosMonederos = 0;
0x8410	0x0102      	MOVLB       2
0x8412	0x6B89      	CLRF        validadora_monedero_pulsosMonederos_L0, 1
;Validadora.c,557 :: 		startRelay = false;
0x8414	0x6B87      	CLRF        validadora_monedero_startRelay_L0, 1
;Validadora.c,558 :: 		}
L_validadora_monedero641:
;Validadora.c,559 :: 		}
L_validadora_monedero640:
;Validadora.c,560 :: 		}
L_end_validadora_monedero:
0x8416	0x0012      	RETURN      0
; end of _validadora_monedero
_validadora_checkTarjeta:
;Validadora.c,607 :: 		void validadora_checkTarjeta(){
;Validadora.c,621 :: 		if(wiegand26_read_card(&id)){
0x8418	0x0E6F      	MOVLW       validadora_checkTarjeta_id_L0
0x841A	0x0105      	MOVLB       5
0x841C	0x6F46      	MOVWF       FARG_wiegand26_read_card_id, 1
0x841E	0x0E04      	MOVLW       hi_addr(validadora_checkTarjeta_id_L0)
0x8420	0x6F47      	MOVWF       FARG_wiegand26_read_card_id+1, 1
0x8422	0xF036EC33  	CALL        _wiegand26_read_card, 0
0x8426	0x5200      	MOVF        R0, 1 
0x8428	0xE034      	BZ          L_validadora_checkTarjeta652
;Validadora.c,622 :: 		limpiarLCD = true;
0x842A	0x0E01      	MOVLW       1
0x842C	0x0103      	MOVLB       3
0x842E	0x6F10      	MOVWF       _limpiarLCD, 1
;Validadora.c,623 :: 		tempLCD = 0;
0x8430	0x6B0F      	CLRF        _tempLCD, 1
;Validadora.c,624 :: 		if(!buscarID && !buscarNIP)
0x8432	0x0102      	MOVLB       2
0x8434	0x538F      	MOVF        validadora_checkTarjeta_buscarID_L0, 1, 1
0x8436	0xE104      	BNZ         L_validadora_checkTarjeta655
0x8438	0x538E      	MOVF        validadora_checkTarjeta_buscarNIP_L0, 1, 1
0x843A	0xE102      	BNZ         L_validadora_checkTarjeta655
L__validadora_checkTarjeta990:
;Validadora.c,625 :: 		buscarID = true;
0x843C	0x0E01      	MOVLW       1
0x843E	0x6F8F      	MOVWF       validadora_checkTarjeta_buscarID_L0, 1
L_validadora_checkTarjeta655:
;Validadora.c,626 :: 		lcd_clean_row(1);
0x8440	0x0E01      	MOVLW       1
0x8442	0x0105      	MOVLB       5
0x8444	0x6F78      	MOVWF       FARG_lcd_clean_row_fila, 1
0x8446	0xF00FECA1  	CALL        _lcd_clean_row, 0
;Validadora.c,627 :: 		lcd_out(1, 1, "CARD: ");
0x844A	0x0E01      	MOVLW       1
0x844C	0x6F78      	MOVWF       FARG_Lcd_Out_row, 1
0x844E	0x0E01      	MOVLW       1
0x8450	0x6F79      	MOVWF       FARG_Lcd_Out_column, 1
0x8452	0x0E11      	MOVLW       ?lstr6_Validadora
0x8454	0x6F7A      	MOVWF       FARG_Lcd_Out_text, 1
0x8456	0x0E03      	MOVLW       hi_addr(?lstr6_Validadora)
0x8458	0x6F7B      	MOVWF       FARG_Lcd_Out_text+1, 1
0x845A	0xF012EC66  	CALL        _Lcd_Out, 0
;Validadora.c,628 :: 		longtostr(id, msjConst);
0x845E	0xF546C46F  	MOVFF       validadora_checkTarjeta_id_L0, FARG_LongToStr_input
0x8462	0xF547C470  	MOVFF       validadora_checkTarjeta_id_L0+1, FARG_LongToStr_input+1
0x8466	0xF548C471  	MOVFF       validadora_checkTarjeta_id_L0+2, FARG_LongToStr_input+2
0x846A	0xF549C472  	MOVFF       validadora_checkTarjeta_id_L0+3, FARG_LongToStr_input+3
0x846E	0x0E12      	MOVLW       _msjConst
0x8470	0x0105      	MOVLB       5
0x8472	0x6F4A      	MOVWF       FARG_LongToStr_output, 1
0x8474	0x0E05      	MOVLW       hi_addr(_msjConst)
0x8476	0x6F4B      	MOVWF       FARG_LongToStr_output+1, 1
0x8478	0xF036ECD4  	CALL        _LongToStr, 0
;Validadora.c,629 :: 		lcd_out(1, sizeof("CARD: "), msjConst);
0x847C	0x0E01      	MOVLW       1
0x847E	0x6F78      	MOVWF       FARG_Lcd_Out_row, 1
0x8480	0x0E06      	MOVLW       6
0x8482	0x6F79      	MOVWF       FARG_Lcd_Out_column, 1
0x8484	0x0E12      	MOVLW       _msjConst
0x8486	0x6F7A      	MOVWF       FARG_Lcd_Out_text, 1
0x8488	0x0E05      	MOVLW       hi_addr(_msjConst)
0x848A	0x6F7B      	MOVWF       FARG_Lcd_Out_text+1, 1
0x848C	0xF012EC66  	CALL        _Lcd_Out, 0
;Validadora.c,635 :: 		}else if(wiegand26_read_nip(&nip)){
0x8490	0xD041      	BRA         L_validadora_checkTarjeta656
L_validadora_checkTarjeta652:
0x8492	0x0E73      	MOVLW       validadora_checkTarjeta_nip_L0
0x8494	0x0105      	MOVLB       5
0x8496	0x6F46      	MOVWF       FARG_wiegand26_read_nip_nip, 1
0x8498	0x0E04      	MOVLW       hi_addr(validadora_checkTarjeta_nip_L0)
0x849A	0x6F47      	MOVWF       FARG_wiegand26_read_nip_nip+1, 1
0x849C	0xF039ECD8  	CALL        _wiegand26_read_nip, 0
0x84A0	0x5200      	MOVF        R0, 1 
0x84A2	0xE038      	BZ          L_validadora_checkTarjeta657
;Validadora.c,636 :: 		limpiarLCD = true;
0x84A4	0x0E01      	MOVLW       1
0x84A6	0x0103      	MOVLB       3
0x84A8	0x6F10      	MOVWF       _limpiarLCD, 1
;Validadora.c,637 :: 		tempLCD = 0;
0x84AA	0x6B0F      	CLRF        _tempLCD, 1
;Validadora.c,638 :: 		if(!buscarID && !buscarNIP)
0x84AC	0x0102      	MOVLB       2
0x84AE	0x538F      	MOVF        validadora_checkTarjeta_buscarID_L0, 1, 1
0x84B0	0xE104      	BNZ         L_validadora_checkTarjeta660
0x84B2	0x538E      	MOVF        validadora_checkTarjeta_buscarNIP_L0, 1, 1
0x84B4	0xE102      	BNZ         L_validadora_checkTarjeta660
L__validadora_checkTarjeta989:
;Validadora.c,639 :: 		buscarNIP = true;
0x84B6	0x0E01      	MOVLW       1
0x84B8	0x6F8E      	MOVWF       validadora_checkTarjeta_buscarNIP_L0, 1
L_validadora_checkTarjeta660:
;Validadora.c,640 :: 		lcd_clean_row(1);
0x84BA	0x0E01      	MOVLW       1
0x84BC	0x0105      	MOVLB       5
0x84BE	0x6F78      	MOVWF       FARG_lcd_clean_row_fila, 1
0x84C0	0xF00FECA1  	CALL        _lcd_clean_row, 0
;Validadora.c,641 :: 		lcd_out(1, 1, "NIP: ");
0x84C4	0x0E01      	MOVLW       1
0x84C6	0x6F78      	MOVWF       FARG_Lcd_Out_row, 1
0x84C8	0x0E01      	MOVLW       1
0x84CA	0x6F79      	MOVWF       FARG_Lcd_Out_column, 1
0x84CC	0x0E05      	MOVLW       ?lstr7_Validadora
0x84CE	0x6F7A      	MOVWF       FARG_Lcd_Out_text, 1
0x84D0	0x0E03      	MOVLW       hi_addr(?lstr7_Validadora)
0x84D2	0x6F7B      	MOVWF       FARG_Lcd_Out_text+1, 1
0x84D4	0xF012EC66  	CALL        _Lcd_Out, 0
;Validadora.c,642 :: 		numToString(nip, msjConst, 4);
0x84D8	0xF590C473  	MOVFF       validadora_checkTarjeta_nip_L0, FARG_numToString_valor
0x84DC	0xF591C474  	MOVFF       validadora_checkTarjeta_nip_L0+1, FARG_numToString_valor+1
0x84E0	0x0E00      	MOVLW       0
0x84E2	0x0104      	MOVLB       4
0x84E4	0xBF74      	BTFSC       validadora_checkTarjeta_nip_L0+1, 7, 1
0x84E6	0x0EFF      	MOVLW       255
0x84E8	0x0105      	MOVLB       5
0x84EA	0x6F92      	MOVWF       FARG_numToString_valor+2, 1
0x84EC	0x6F93      	MOVWF       FARG_numToString_valor+3, 1
0x84EE	0x0E12      	MOVLW       _msjConst
0x84F0	0x6F94      	MOVWF       FARG_numToString_cadena, 1
0x84F2	0x0E05      	MOVLW       hi_addr(_msjConst)
0x84F4	0x6F95      	MOVWF       FARG_numToString_cadena+1, 1
0x84F6	0x0E04      	MOVLW       4
0x84F8	0x6F96      	MOVWF       FARG_numToString_digitos, 1
0x84FA	0xF004EC52  	CALL        _numToString, 0
;Validadora.c,644 :: 		lcd_out(1, sizeof("NIP: "), msjConst);
0x84FE	0x0E01      	MOVLW       1
0x8500	0x0105      	MOVLB       5
0x8502	0x6F78      	MOVWF       FARG_Lcd_Out_row, 1
0x8504	0x0E05      	MOVLW       5
0x8506	0x6F79      	MOVWF       FARG_Lcd_Out_column, 1
0x8508	0x0E12      	MOVLW       _msjConst
0x850A	0x6F7A      	MOVWF       FARG_Lcd_Out_text, 1
0x850C	0x0E05      	MOVLW       hi_addr(_msjConst)
0x850E	0x6F7B      	MOVWF       FARG_Lcd_Out_text+1, 1
0x8510	0xF012EC66  	CALL        _Lcd_Out, 0
;Validadora.c,650 :: 		}
L_validadora_checkTarjeta657:
L_validadora_checkTarjeta656:
;Validadora.c,653 :: 		if(buscarID){
0x8514	0x0102      	MOVLB       2
0x8516	0x538F      	MOVF        validadora_checkTarjeta_buscarID_L0, 1, 1
0x8518	0xB4D8      	BTFSC       STATUS, 2 
0x851A	0xD0A6      	BRA         L_validadora_checkTarjeta661
;Validadora.c,654 :: 		if(!mysql_search(tableSoporte, soporteID, id, &fila)){
0x851C	0x0EFD      	MOVLW       _tableSoporte
0x851E	0x0105      	MOVLB       5
0x8520	0x6F46      	MOVWF       FARG_mysql_search_tabla, 1
0x8522	0x0E02      	MOVLW       hi_addr(_tableSoporte)
0x8524	0x6F47      	MOVWF       FARG_mysql_search_tabla+1, 1
0x8526	0x0E0C      	MOVLW       _soporteID
0x8528	0x6F48      	MOVWF       FARG_mysql_search_columna, 1
0x852A	0x0E03      	MOVLW       hi_addr(_soporteID)
0x852C	0x6F49      	MOVWF       FARG_mysql_search_columna+1, 1
0x852E	0xF54AC46F  	MOVFF       validadora_checkTarjeta_id_L0, FARG_mysql_search_buscar
0x8532	0xF54BC470  	MOVFF       validadora_checkTarjeta_id_L0+1, FARG_mysql_search_buscar+1
0x8536	0xF54CC471  	MOVFF       validadora_checkTarjeta_id_L0+2, FARG_mysql_search_buscar+2
0x853A	0xF54DC472  	MOVFF       validadora_checkTarjeta_id_L0+3, FARG_mysql_search_buscar+3
0x853E	0x0E75      	MOVLW       validadora_checkTarjeta_fila_L0
0x8540	0x6F4E      	MOVWF       FARG_mysql_search_fila, 1
0x8542	0x0E04      	MOVLW       hi_addr(validadora_checkTarjeta_fila_L0)
0x8544	0x6F4F      	MOVWF       FARG_mysql_search_fila+1, 1
0x8546	0xF03AECC6  	CALL        _mysql_search, 0
0x854A	0x5200      	MOVF        R0, 1 
0x854C	0xA4D8      	BTFSS       STATUS, 2 
0x854E	0xD08C      	BRA         L_validadora_checkTarjeta662
;Validadora.c,655 :: 		abrirBarrera = true;
0x8550	0x0E01      	MOVLW       1
0x8552	0x0103      	MOVLB       3
0x8554	0x6F31      	MOVWF       _abrirBarrera, 1
;Validadora.c,656 :: 		SALIDA_RELE1 = 1;
0x8556	0x8A80      	BSF         PORTA, 5 
;Validadora.c,657 :: 		SALIDA_RELE2 = 1;
0x8558	0x8084      	BSF         PORTE, 0 
;Validadora.c,658 :: 		timer1_reset();
0x855A	0xF00DEC30  	CALL        _timer1_reset, 0
;Validadora.c,659 :: 		timer1_enable(true);
0x855E	0x0E01      	MOVLW       1
0x8560	0x0105      	MOVLB       5
0x8562	0x6F78      	MOVWF       FARG_timer1_enable_enable, 1
0x8564	0xF012EC5F  	CALL        _timer1_enable, 0
;Validadora.c,660 :: 		lcd_clean_row(3);
0x8568	0x0E03      	MOVLW       3
0x856A	0x6F78      	MOVWF       FARG_lcd_clean_row_fila, 1
0x856C	0xF00FECA1  	CALL        _lcd_clean_row, 0
;Validadora.c,661 :: 		lcd_out(3,1,"Tarjeta de soporte");
0x8570	0x0E03      	MOVLW       3
0x8572	0x6F78      	MOVWF       FARG_Lcd_Out_row, 1
0x8574	0x0E01      	MOVLW       1
0x8576	0x6F79      	MOVWF       FARG_Lcd_Out_column, 1
0x8578	0x0E1E      	MOVLW       ?lstr8_Validadora
0x857A	0x6F7A      	MOVWF       FARG_Lcd_Out_text, 1
0x857C	0x0E03      	MOVLW       hi_addr(?lstr8_Validadora)
0x857E	0x6F7B      	MOVWF       FARG_Lcd_Out_text+1, 1
0x8580	0xF012EC66  	CALL        _Lcd_Out, 0
;Validadora.c,662 :: 		buscarID = false;
0x8584	0x0102      	MOVLB       2
0x8586	0x6B8F      	CLRF        validadora_checkTarjeta_buscarID_L0, 1
;Validadora.c,664 :: 		string_cpyc(canCommand, CAN_TPV);
0x8588	0x0E92      	MOVLW       _canCommand
0x858A	0x0105      	MOVLB       5
0x858C	0x6F78      	MOVWF       FARG_string_cpyc_destino, 1
0x858E	0x0E04      	MOVLW       hi_addr(_canCommand)
0x8590	0x6F79      	MOVWF       FARG_string_cpyc_destino+1, 1
0x8592	0x0E0E      	MOVLW       _CAN_TPV
0x8594	0x6F7A      	MOVWF       FARG_string_cpyc_origen, 1
0x8596	0x0E9F      	MOVLW       hi_addr(_CAN_TPV)
0x8598	0x6F7B      	MOVWF       FARG_string_cpyc_origen+1, 1
0x859A	0x0E00      	MOVLW       higher_addr(_CAN_TPV)
0x859C	0x6F7C      	MOVWF       FARG_string_cpyc_origen+2, 1
0x859E	0xF014ECBC  	CALL        _string_cpyc, 0
;Validadora.c,665 :: 		string_addc(canCommand, CAN_SOPORTE);       //SOP
0x85A2	0x0E92      	MOVLW       _canCommand
0x85A4	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x85A6	0x0E04      	MOVLW       hi_addr(_canCommand)
0x85A8	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x85AA	0x0E6A      	MOVLW       _CAN_SOPORTE
0x85AC	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x85AE	0x0E9F      	MOVLW       hi_addr(_CAN_SOPORTE)
0x85B0	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x85B2	0x0E00      	MOVLW       higher_addr(_CAN_SOPORTE)
0x85B4	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x85B6	0xF00FEC40  	CALL        _string_addc, 0
;Validadora.c,666 :: 		numToHex(id, msjConst, 3);
0x85BA	0xF578C46F  	MOVFF       validadora_checkTarjeta_id_L0, FARG_numToHex_valor
0x85BE	0xF579C470  	MOVFF       validadora_checkTarjeta_id_L0+1, FARG_numToHex_valor+1
0x85C2	0xF57AC471  	MOVFF       validadora_checkTarjeta_id_L0+2, FARG_numToHex_valor+2
0x85C6	0xF57BC472  	MOVFF       validadora_checkTarjeta_id_L0+3, FARG_numToHex_valor+3
0x85CA	0x0E12      	MOVLW       _msjConst
0x85CC	0x6F7C      	MOVWF       FARG_numToHex_cadena, 1
0x85CE	0x0E05      	MOVLW       hi_addr(_msjConst)
0x85D0	0x6F7D      	MOVWF       FARG_numToHex_cadena+1, 1
0x85D2	0x0E03      	MOVLW       3
0x85D4	0x6F7E      	MOVWF       FARG_numToHex_bytes, 1
0x85D6	0xF00DECAD  	CALL        _numToHex, 0
;Validadora.c,667 :: 		string_add(canCommand, msjConst);           //IDX + RFID(HEX)
0x85DA	0x0E92      	MOVLW       _canCommand
0x85DC	0x6F78      	MOVWF       FARG_string_add_destino, 1
0x85DE	0x0E04      	MOVLW       hi_addr(_canCommand)
0x85E0	0x6F79      	MOVWF       FARG_string_add_destino+1, 1
0x85E2	0x0E12      	MOVLW       _msjConst
0x85E4	0x6F7A      	MOVWF       FARG_string_add_addEnd, 1
0x85E6	0x0E05      	MOVLW       hi_addr(_msjConst)
0x85E8	0x6F7B      	MOVWF       FARG_string_add_addEnd+1, 1
0x85EA	0xF016EC4C  	CALL        _string_add, 0
;Validadora.c,668 :: 		DS1307_read(&myRTC, false);
0x85EE	0x0E77      	MOVLW       _myRTC
0x85F0	0x6F78      	MOVWF       FARG_DS1307_read_myDS, 1
0x85F2	0x0E04      	MOVLW       hi_addr(_myRTC)
0x85F4	0x6F79      	MOVWF       FARG_DS1307_read_myDS+1, 1
0x85F6	0x6B7A      	CLRF        FARG_DS1307_read_formatComplet, 1
0x85F8	0xF010ECF9  	CALL        _DS1307_read, 0
;Validadora.c,669 :: 		string_add(canCommand, &myRTC.time[1]);     //IDX + ID(HEX) + DATE
0x85FC	0x0E92      	MOVLW       _canCommand
0x85FE	0x6F78      	MOVWF       FARG_string_add_destino, 1
0x8600	0x0E04      	MOVLW       hi_addr(_canCommand)
0x8602	0x6F79      	MOVWF       FARG_string_add_destino+1, 1
0x8604	0x0E7F      	MOVLW       _myRTC+8
0x8606	0x6F7A      	MOVWF       FARG_string_add_addEnd, 1
0x8608	0x0E04      	MOVLW       hi_addr(_myRTC+8)
0x860A	0x6F7B      	MOVWF       FARG_string_add_addEnd+1, 1
0x860C	0xF016EC4C  	CALL        _string_add, 0
;Validadora.c,671 :: 		string_addc(canCommand, CAN_MODULE);
0x8610	0x0E92      	MOVLW       _canCommand
0x8612	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x8614	0x0E04      	MOVLW       hi_addr(_canCommand)
0x8616	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x8618	0x0E86      	MOVLW       _CAN_MODULE
0x861A	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x861C	0x0E9F      	MOVLW       hi_addr(_CAN_MODULE)
0x861E	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x8620	0x0E00      	MOVLW       higher_addr(_CAN_MODULE)
0x8622	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x8624	0xF00FEC40  	CALL        _string_addc, 0
;Validadora.c,672 :: 		numToHex(canId, msjConst, 1);
0x8628	0xF578C2ED  	MOVFF       _canId, FARG_numToHex_valor
0x862C	0x0E00      	MOVLW       0
0x862E	0x6F79      	MOVWF       FARG_numToHex_valor+1, 1
0x8630	0x6F7A      	MOVWF       FARG_numToHex_valor+2, 1
0x8632	0x6F7B      	MOVWF       FARG_numToHex_valor+3, 1
0x8634	0x0E12      	MOVLW       _msjConst
0x8636	0x6F7C      	MOVWF       FARG_numToHex_cadena, 1
0x8638	0x0E05      	MOVLW       hi_addr(_msjConst)
0x863A	0x6F7D      	MOVWF       FARG_numToHex_cadena+1, 1
0x863C	0x0E01      	MOVLW       1
0x863E	0x6F7E      	MOVWF       FARG_numToHex_bytes, 1
0x8640	0xF00DECAD  	CALL        _numToHex, 0
;Validadora.c,673 :: 		string_add(canCommand, msjConst);
0x8644	0x0E92      	MOVLW       _canCommand
0x8646	0x6F78      	MOVWF       FARG_string_add_destino, 1
0x8648	0x0E04      	MOVLW       hi_addr(_canCommand)
0x864A	0x6F79      	MOVWF       FARG_string_add_destino+1, 1
0x864C	0x0E12      	MOVLW       _msjConst
0x864E	0x6F7A      	MOVWF       FARG_string_add_addEnd, 1
0x8650	0x0E05      	MOVLW       hi_addr(_msjConst)
0x8652	0x6F7B      	MOVWF       FARG_string_add_addEnd+1, 1
0x8654	0xF016EC4C  	CALL        _string_add, 0
;Validadora.c,674 :: 		buffer_save_send(true, canCommand);
0x8658	0x0E01      	MOVLW       1
0x865A	0x6F78      	MOVWF       FARG_buffer_save_send_guardar, 1
0x865C	0x0E92      	MOVLW       _canCommand
0x865E	0x6F79      	MOVWF       FARG_buffer_save_send_buffer, 1
0x8660	0x0E04      	MOVLW       hi_addr(_canCommand)
0x8662	0x6F7A      	MOVWF       FARG_buffer_save_send_buffer+1, 1
0x8664	0xF00FECCD  	CALL        _buffer_save_send, 0
;Validadora.c,675 :: 		}
L_validadora_checkTarjeta662:
;Validadora.c,676 :: 		}
L_validadora_checkTarjeta661:
;Validadora.c,679 :: 		if(buscarID){
0x8668	0x0102      	MOVLB       2
0x866A	0x538F      	MOVF        validadora_checkTarjeta_buscarID_L0, 1, 1
0x866C	0xB4D8      	BTFSC       STATUS, 2 
0x866E	0xF047EF89  	GOTO        L_validadora_checkTarjeta663
;Validadora.c,680 :: 		buscarID = false;
0x8672	0x6B8F      	CLRF        validadora_checkTarjeta_buscarID_L0, 1
;Validadora.c,682 :: 		DS1307_read(&myRTC, false);
0x8674	0x0E77      	MOVLW       _myRTC
0x8676	0x0105      	MOVLB       5
0x8678	0x6F78      	MOVWF       FARG_DS1307_read_myDS, 1
0x867A	0x0E04      	MOVLW       hi_addr(_myRTC)
0x867C	0x6F79      	MOVWF       FARG_DS1307_read_myDS+1, 1
0x867E	0x6B7A      	CLRF        FARG_DS1307_read_formatComplet, 1
0x8680	0xF010ECF9  	CALL        _DS1307_read, 0
;Validadora.c,684 :: 		string_cpyc(canCommand, CAN_TPV);
0x8684	0x0E92      	MOVLW       _canCommand
0x8686	0x6F78      	MOVWF       FARG_string_cpyc_destino, 1
0x8688	0x0E04      	MOVLW       hi_addr(_canCommand)
0x868A	0x6F79      	MOVWF       FARG_string_cpyc_destino+1, 1
0x868C	0x0E0E      	MOVLW       _CAN_TPV
0x868E	0x6F7A      	MOVWF       FARG_string_cpyc_origen, 1
0x8690	0x0E9F      	MOVLW       hi_addr(_CAN_TPV)
0x8692	0x6F7B      	MOVWF       FARG_string_cpyc_origen+1, 1
0x8694	0x0E00      	MOVLW       higher_addr(_CAN_TPV)
0x8696	0x6F7C      	MOVWF       FARG_string_cpyc_origen+2, 1
0x8698	0xF014ECBC  	CALL        _string_cpyc, 0
;Validadora.c,685 :: 		string_addc(canCommand, CAN_IDX);       //IDX
0x869C	0x0E92      	MOVLW       _canCommand
0x869E	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x86A0	0x0E04      	MOVLW       hi_addr(_canCommand)
0x86A2	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x86A4	0x0E7E      	MOVLW       _CAN_IDX
0x86A6	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x86A8	0x0E9F      	MOVLW       hi_addr(_CAN_IDX)
0x86AA	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x86AC	0x0E00      	MOVLW       higher_addr(_CAN_IDX)
0x86AE	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x86B0	0xF00FEC40  	CALL        _string_addc, 0
;Validadora.c,686 :: 		numToHex(id, msjConst, 3);
0x86B4	0xF578C46F  	MOVFF       validadora_checkTarjeta_id_L0, FARG_numToHex_valor
0x86B8	0xF579C470  	MOVFF       validadora_checkTarjeta_id_L0+1, FARG_numToHex_valor+1
0x86BC	0xF57AC471  	MOVFF       validadora_checkTarjeta_id_L0+2, FARG_numToHex_valor+2
0x86C0	0xF57BC472  	MOVFF       validadora_checkTarjeta_id_L0+3, FARG_numToHex_valor+3
0x86C4	0x0E12      	MOVLW       _msjConst
0x86C6	0x6F7C      	MOVWF       FARG_numToHex_cadena, 1
0x86C8	0x0E05      	MOVLW       hi_addr(_msjConst)
0x86CA	0x6F7D      	MOVWF       FARG_numToHex_cadena+1, 1
0x86CC	0x0E03      	MOVLW       3
0x86CE	0x6F7E      	MOVWF       FARG_numToHex_bytes, 1
0x86D0	0xF00DECAD  	CALL        _numToHex, 0
;Validadora.c,687 :: 		string_add(canCommand, msjConst);       //IDX + RFID(HEX)
0x86D4	0x0E92      	MOVLW       _canCommand
0x86D6	0x6F78      	MOVWF       FARG_string_add_destino, 1
0x86D8	0x0E04      	MOVLW       hi_addr(_canCommand)
0x86DA	0x6F79      	MOVWF       FARG_string_add_destino+1, 1
0x86DC	0x0E12      	MOVLW       _msjConst
0x86DE	0x6F7A      	MOVWF       FARG_string_add_addEnd, 1
0x86E0	0x0E05      	MOVLW       hi_addr(_msjConst)
0x86E2	0x6F7B      	MOVWF       FARG_string_add_addEnd+1, 1
0x86E4	0xF016EC4C  	CALL        _string_add, 0
;Validadora.c,688 :: 		string_add(canCommand, &myRTC.time[1]); //IDX + ID(HEX) + DATE
0x86E8	0x0E92      	MOVLW       _canCommand
0x86EA	0x6F78      	MOVWF       FARG_string_add_destino, 1
0x86EC	0x0E04      	MOVLW       hi_addr(_canCommand)
0x86EE	0x6F79      	MOVWF       FARG_string_add_destino+1, 1
0x86F0	0x0E7F      	MOVLW       _myRTC+8
0x86F2	0x6F7A      	MOVWF       FARG_string_add_addEnd, 1
0x86F4	0x0E04      	MOVLW       hi_addr(_myRTC+8)
0x86F6	0x6F7B      	MOVWF       FARG_string_add_addEnd+1, 1
0x86F8	0xF016EC4C  	CALL        _string_add, 0
;Validadora.c,690 :: 		string_cpyc(acceso, ACCESO_DENEGADO);   //Sin Acceso, Sin vigencia, no passback, desconocida id
0x86FC	0x0E2B      	MOVLW       validadora_checkTarjeta_acceso_L0
0x86FE	0x6F78      	MOVWF       FARG_string_cpyc_destino, 1
0x8700	0x0E05      	MOVLW       hi_addr(validadora_checkTarjeta_acceso_L0)
0x8702	0x6F79      	MOVWF       FARG_string_cpyc_destino+1, 1
0x8704	0x0E01      	MOVLW       _ACCESO_DENEGADO
0x8706	0x6F7A      	MOVWF       FARG_string_cpyc_origen, 1
0x8708	0x0E9F      	MOVLW       hi_addr(_ACCESO_DENEGADO)
0x870A	0x6F7B      	MOVWF       FARG_string_cpyc_origen+1, 1
0x870C	0x0E00      	MOVLW       higher_addr(_ACCESO_DENEGADO)
0x870E	0x6F7C      	MOVWF       FARG_string_cpyc_origen+2, 1
0x8710	0xF014ECBC  	CALL        _string_cpyc, 0
;Validadora.c,693 :: 		if(!mysql_search(tablePensionados, pensionadosID, id, &fila)){
0x8714	0x0EEE      	MOVLW       _tablePensionados
0x8716	0x6F46      	MOVWF       FARG_mysql_search_tabla, 1
0x8718	0x0E02      	MOVLW       hi_addr(_tablePensionados)
0x871A	0x6F47      	MOVWF       FARG_mysql_search_tabla+1, 1
0x871C	0x0EFA      	MOVLW       _pensionadosID
0x871E	0x6F48      	MOVWF       FARG_mysql_search_columna, 1
0x8720	0x0E02      	MOVLW       hi_addr(_pensionadosID)
0x8722	0x6F49      	MOVWF       FARG_mysql_search_columna+1, 1
0x8724	0xF54AC46F  	MOVFF       validadora_checkTarjeta_id_L0, FARG_mysql_search_buscar
0x8728	0xF54BC470  	MOVFF       validadora_checkTarjeta_id_L0+1, FARG_mysql_search_buscar+1
0x872C	0xF54CC471  	MOVFF       validadora_checkTarjeta_id_L0+2, FARG_mysql_search_buscar+2
0x8730	0xF54DC472  	MOVFF       validadora_checkTarjeta_id_L0+3, FARG_mysql_search_buscar+3
0x8734	0x0E75      	MOVLW       validadora_checkTarjeta_fila_L0
0x8736	0x6F4E      	MOVWF       FARG_mysql_search_fila, 1
0x8738	0x0E04      	MOVLW       hi_addr(validadora_checkTarjeta_fila_L0)
0x873A	0x6F4F      	MOVWF       FARG_mysql_search_fila+1, 1
0x873C	0xF03AECC6  	CALL        _mysql_search, 0
0x8740	0x5200      	MOVF        R0, 1 
0x8742	0xA4D8      	BTFSS       STATUS, 2 
0x8744	0xD129      	BRA         L_validadora_checkTarjeta664
;Validadora.c,695 :: 		canCommand[3] = CAN_PENSIONADO[0];
0x8746	0x0E50      	MOVLW       80
0x8748	0x0104      	MOVLB       4
0x874A	0x6F95      	MOVWF       _canCommand+3, 1
;Validadora.c,696 :: 		canCommand[4] = CAN_PENSIONADO[1];
0x874C	0x0E45      	MOVLW       69
0x874E	0x6F96      	MOVWF       _canCommand+4, 1
;Validadora.c,697 :: 		canCommand[5] = CAN_PENSIONADO[2];
0x8750	0x0E4E      	MOVLW       78
0x8752	0x6F97      	MOVWF       _canCommand+5, 1
;Validadora.c,699 :: 		mysql_read_string(tablePensionados, pensionadosVigencia, fila, &vigencia);
0x8754	0x0EEE      	MOVLW       _tablePensionados
0x8756	0x0105      	MOVLB       5
0x8758	0x6F78      	MOVWF       FARG_mysql_read_string_name, 1
0x875A	0x0E02      	MOVLW       hi_addr(_tablePensionados)
0x875C	0x6F79      	MOVWF       FARG_mysql_read_string_name+1, 1
0x875E	0x0EE4      	MOVLW       _pensionadosVigencia
0x8760	0x6F7A      	MOVWF       FARG_mysql_read_string_column, 1
0x8762	0x0E02      	MOVLW       hi_addr(_pensionadosVigencia)
0x8764	0x6F7B      	MOVWF       FARG_mysql_read_string_column+1, 1
0x8766	0xF57CC475  	MOVFF       validadora_checkTarjeta_fila_L0, FARG_mysql_read_string_fila
0x876A	0xF57DC476  	MOVFF       validadora_checkTarjeta_fila_L0+1, FARG_mysql_read_string_fila+1
0x876E	0x0E29      	MOVLW       validadora_checkTarjeta_vigencia_L0
0x8770	0x6F7E      	MOVWF       FARG_mysql_read_string_result, 1
0x8772	0x0E05      	MOVLW       hi_addr(validadora_checkTarjeta_vigencia_L0)
0x8774	0x6F7F      	MOVWF       FARG_mysql_read_string_result+1, 1
0x8776	0xF015EC0E  	CALL        _mysql_read_string, 0
;Validadora.c,700 :: 		mysql_read_string(tablePensionados, pensionadosEstatus, fila, &estatus);
0x877A	0x0EEE      	MOVLW       _tablePensionados
0x877C	0x0105      	MOVLB       5
0x877E	0x6F78      	MOVWF       FARG_mysql_read_string_name, 1
0x8780	0x0E02      	MOVLW       hi_addr(_tablePensionados)
0x8782	0x6F79      	MOVWF       FARG_mysql_read_string_name+1, 1
0x8784	0x0ECB      	MOVLW       _pensionadosEstatus
0x8786	0x6F7A      	MOVWF       FARG_mysql_read_string_column, 1
0x8788	0x0E02      	MOVLW       hi_addr(_pensionadosEstatus)
0x878A	0x6F7B      	MOVWF       FARG_mysql_read_string_column+1, 1
0x878C	0xF57CC475  	MOVFF       validadora_checkTarjeta_fila_L0, FARG_mysql_read_string_fila
0x8790	0xF57DC476  	MOVFF       validadora_checkTarjeta_fila_L0+1, FARG_mysql_read_string_fila+1
0x8794	0x0E2A      	MOVLW       validadora_checkTarjeta_estatus_L0
0x8796	0x6F7E      	MOVWF       FARG_mysql_read_string_result, 1
0x8798	0x0E05      	MOVLW       hi_addr(validadora_checkTarjeta_estatus_L0)
0x879A	0x6F7F      	MOVWF       FARG_mysql_read_string_result+1, 1
0x879C	0xF015EC0E  	CALL        _mysql_read_string, 0
;Validadora.c,707 :: 		if(vigencia == VIGENTE && (estatus == ESTATUS_PAS || estatus == ESTATUS_BREAK || !canSynchrony || !can.conected)){
0x87A0	0x0105      	MOVLB       5
0x87A2	0x5129      	MOVF        validadora_checkTarjeta_vigencia_L0, 0, 1
0x87A4	0x0A56      	XORLW       86
0x87A6	0xE15E      	BNZ         L_validadora_checkTarjeta669
0x87A8	0x512A      	MOVF        validadora_checkTarjeta_estatus_L0, 0, 1
0x87AA	0x0A49      	XORLW       73
0x87AC	0xE00A      	BZ          L__validadora_checkTarjeta988
0x87AE	0x512A      	MOVF        validadora_checkTarjeta_estatus_L0, 0, 1
0x87B0	0x0A2D      	XORLW       45
0x87B2	0xE007      	BZ          L__validadora_checkTarjeta988
0x87B4	0x0102      	MOVLB       2
0x87B6	0x53D3      	MOVF        _canSynchrony, 1, 1
0x87B8	0xE004      	BZ          L__validadora_checkTarjeta988
0x87BA	0x0103      	MOVLB       3
0x87BC	0x53CC      	MOVF        _can+13, 1, 1
0x87BE	0xE001      	BZ          L__validadora_checkTarjeta988
0x87C0	0xD051      	BRA         L_validadora_checkTarjeta669
L__validadora_checkTarjeta988:
L__validadora_checkTarjeta987:
0x87C2	0x0103      	MOVLB       3
;Validadora.c,709 :: 		abrirBarrera = true;
0x87C4	0x0E01      	MOVLW       1
0x87C6	0x6F31      	MOVWF       _abrirBarrera, 1
;Validadora.c,710 :: 		SALIDA_RELE1 = 1;
0x87C8	0x8A80      	BSF         PORTA, 5 
;Validadora.c,711 :: 		SALIDA_RELE2 = 1;
0x87CA	0x8084      	BSF         PORTE, 0 
;Validadora.c,712 :: 		timer1_reset();
0x87CC	0xF00DEC30  	CALL        _timer1_reset, 0
;Validadora.c,713 :: 		timer1_enable(true);
0x87D0	0x0E01      	MOVLW       1
0x87D2	0x0105      	MOVLB       5
0x87D4	0x6F78      	MOVWF       FARG_timer1_enable_enable, 1
0x87D6	0xF012EC5F  	CALL        _timer1_enable, 0
;Validadora.c,714 :: 		acceso[0] = TPV_ACCESO;     //Acceso
0x87DA	0x0E41      	MOVLW       65
0x87DC	0x6F2B      	MOVWF       validadora_checkTarjeta_acceso_L0, 1
;Validadora.c,716 :: 		if(!can.conected || !canSynchrony || estatus == ESTATUS_BREAK)
0x87DE	0x0103      	MOVLB       3
0x87E0	0x53CC      	MOVF        _can+13, 1, 1
0x87E2	0xE008      	BZ          L__validadora_checkTarjeta986
0x87E4	0x0102      	MOVLB       2
0x87E6	0x53D3      	MOVF        _canSynchrony, 1, 1
0x87E8	0xE005      	BZ          L__validadora_checkTarjeta986
0x87EA	0x0105      	MOVLB       5
0x87EC	0x512A      	MOVF        validadora_checkTarjeta_estatus_L0, 0, 1
0x87EE	0x0A2D      	XORLW       45
0x87F0	0xE001      	BZ          L__validadora_checkTarjeta986
0x87F2	0xD003      	BRA         L_validadora_checkTarjeta672
L__validadora_checkTarjeta986:
0x87F4	0x0105      	MOVLB       5
;Validadora.c,717 :: 		acceso[2] = ESTATUS_BREAK;   //Estado del passback roto
0x87F6	0x0E2D      	MOVLW       45
0x87F8	0x6F2D      	MOVWF       validadora_checkTarjeta_acceso_L0+2, 1
L_validadora_checkTarjeta672:
;Validadora.c,719 :: 		estatus = (!can.conected || !canSynchrony)? ESTATUS_BREAK:ESTATUS_MOD;
0x87FA	0x0103      	MOVLB       3
0x87FC	0x53CC      	MOVF        _can+13, 1, 1
0x87FE	0xE004      	BZ          L__validadora_checkTarjeta985
0x8800	0x0102      	MOVLB       2
0x8802	0x53D3      	MOVF        _canSynchrony, 1, 1
0x8804	0xE001      	BZ          L__validadora_checkTarjeta985
0x8806	0xD004      	BRA         L_validadora_checkTarjeta675
L__validadora_checkTarjeta985:
0x8808	0x0E2D      	MOVLW       45
0x880A	0x0105      	MOVLB       5
0x880C	0x6F26      	MOVWF       ?FLOC___validadora_checkTarjetaT2671, 1
0x880E	0xD003      	BRA         L_validadora_checkTarjeta676
L_validadora_checkTarjeta675:
0x8810	0x0105      	MOVLB       5
0x8812	0x0E4F      	MOVLW       79
0x8814	0x6F26      	MOVWF       ?FLOC___validadora_checkTarjetaT2671, 1
L_validadora_checkTarjeta676:
0x8816	0xF52AC526  	MOVFF       ?FLOC___validadora_checkTarjetaT2671, validadora_checkTarjeta_estatus_L0
;Validadora.c,720 :: 		mysql_write(tablePensionados, pensionadosEstatus, fila, estatus, false);
0x881A	0x0EEE      	MOVLW       _tablePensionados
0x881C	0x6F78      	MOVWF       FARG_mysql_write_name, 1
0x881E	0x0E02      	MOVLW       hi_addr(_tablePensionados)
0x8820	0x6F79      	MOVWF       FARG_mysql_write_name+1, 1
0x8822	0x0ECB      	MOVLW       _pensionadosEstatus
0x8824	0x6F7A      	MOVWF       FARG_mysql_write_column, 1
0x8826	0x0E02      	MOVLW       hi_addr(_pensionadosEstatus)
0x8828	0x6F7B      	MOVWF       FARG_mysql_write_column+1, 1
0x882A	0xF57CC475  	MOVFF       validadora_checkTarjeta_fila_L0, FARG_mysql_write_fila
0x882E	0xF57DC476  	MOVFF       validadora_checkTarjeta_fila_L0+1, FARG_mysql_write_fila+1
0x8832	0xF57EC526  	MOVFF       ?FLOC___validadora_checkTarjetaT2671, FARG_mysql_write_value
0x8836	0x0E00      	MOVLW       0
0x8838	0x6F7F      	MOVWF       FARG_mysql_write_value+1, 1
0x883A	0x6F80      	MOVWF       FARG_mysql_write_value+2, 1
0x883C	0x6F81      	MOVWF       FARG_mysql_write_value+3, 1
0x883E	0x6B82      	CLRF        FARG_mysql_write_endWrite, 1
0x8840	0xF014EC20  	CALL        _mysql_write, 0
;Validadora.c,722 :: 		lcd_clean_row(2);
0x8844	0x0E02      	MOVLW       2
0x8846	0x0105      	MOVLB       5
0x8848	0x6F78      	MOVWF       FARG_lcd_clean_row_fila, 1
0x884A	0xF00FECA1  	CALL        _lcd_clean_row, 0
;Validadora.c,723 :: 		lcd_out(2, 1, "Acceso aceptado");
0x884E	0x0E02      	MOVLW       2
0x8850	0x6F78      	MOVWF       FARG_Lcd_Out_row, 1
0x8852	0x0E01      	MOVLW       1
0x8854	0x6F79      	MOVWF       FARG_Lcd_Out_column, 1
0x8856	0x0ED4      	MOVLW       ?lstr9_Validadora
0x8858	0x6F7A      	MOVWF       FARG_Lcd_Out_text, 1
0x885A	0x0E02      	MOVLW       hi_addr(?lstr9_Validadora)
0x885C	0x6F7B      	MOVWF       FARG_Lcd_Out_text+1, 1
0x885E	0xF012EC66  	CALL        _Lcd_Out, 0
;Validadora.c,729 :: 		}else{
0x8862	0xD029      	BRA         L_validadora_checkTarjeta677
L_validadora_checkTarjeta669:
;Validadora.c,730 :: 		if(vigencia == ESTATUS_NOT){
0x8864	0x0105      	MOVLB       5
0x8866	0x5129      	MOVF        validadora_checkTarjeta_vigencia_L0, 0, 1
0x8868	0x0A4E      	XORLW       78
0x886A	0xE111      	BNZ         L_validadora_checkTarjeta678
;Validadora.c,731 :: 		acceso[1] = TPV_NO_VIGENCIA;    //Vigencia
0x886C	0x0E56      	MOVLW       86
0x886E	0x6F2C      	MOVWF       validadora_checkTarjeta_acceso_L0+1, 1
;Validadora.c,732 :: 		lcd_clean_row(2);
0x8870	0x0E02      	MOVLW       2
0x8872	0x6F78      	MOVWF       FARG_lcd_clean_row_fila, 1
0x8874	0xF00FECA1  	CALL        _lcd_clean_row, 0
;Validadora.c,733 :: 		lcd_out(2, 1, "Vigencia terminada");
0x8878	0x0E02      	MOVLW       2
0x887A	0x6F78      	MOVWF       FARG_Lcd_Out_row, 1
0x887C	0x0E01      	MOVLW       1
0x887E	0x6F79      	MOVWF       FARG_Lcd_Out_column, 1
0x8880	0x0EB8      	MOVLW       ?lstr10_Validadora
0x8882	0x6F7A      	MOVWF       FARG_Lcd_Out_text, 1
0x8884	0x0E02      	MOVLW       hi_addr(?lstr10_Validadora)
0x8886	0x6F7B      	MOVWF       FARG_Lcd_Out_text+1, 1
0x8888	0xF012EC66  	CALL        _Lcd_Out, 0
;Validadora.c,737 :: 		}else if(estatus == ESTATUS_MOD){
0x888C	0xD014      	BRA         L_validadora_checkTarjeta679
L_validadora_checkTarjeta678:
0x888E	0x0105      	MOVLB       5
0x8890	0x512A      	MOVF        validadora_checkTarjeta_estatus_L0, 0, 1
0x8892	0x0A4F      	XORLW       79
0x8894	0xE110      	BNZ         L_validadora_checkTarjeta680
;Validadora.c,738 :: 		acceso[2] = TPV_PASSBACK;   //Estado del passback
0x8896	0x0E50      	MOVLW       80
0x8898	0x6F2D      	MOVWF       validadora_checkTarjeta_acceso_L0+2, 1
;Validadora.c,739 :: 		lcd_clean_row(2);
0x889A	0x0E02      	MOVLW       2
0x889C	0x6F78      	MOVWF       FARG_lcd_clean_row_fila, 1
0x889E	0xF00FECA1  	CALL        _lcd_clean_row, 0
;Validadora.c,740 :: 		lcd_out(2,1,"Passback activo");
0x88A2	0x0E02      	MOVLW       2
0x88A4	0x6F78      	MOVWF       FARG_Lcd_Out_row, 1
0x88A6	0x0E01      	MOVLW       1
0x88A8	0x6F79      	MOVWF       FARG_Lcd_Out_column, 1
0x88AA	0x0EA8      	MOVLW       ?lstr11_Validadora
0x88AC	0x6F7A      	MOVWF       FARG_Lcd_Out_text, 1
0x88AE	0x0E02      	MOVLW       hi_addr(?lstr11_Validadora)
0x88B0	0x6F7B      	MOVWF       FARG_Lcd_Out_text+1, 1
0x88B2	0xF012EC66  	CALL        _Lcd_Out, 0
;Validadora.c,744 :: 		}
L_validadora_checkTarjeta680:
L_validadora_checkTarjeta679:
;Validadora.c,745 :: 		}
L_validadora_checkTarjeta677:
;Validadora.c,747 :: 		string_add(canCommand, acceso);
0x88B6	0x0E92      	MOVLW       _canCommand
0x88B8	0x0105      	MOVLB       5
0x88BA	0x6F78      	MOVWF       FARG_string_add_destino, 1
0x88BC	0x0E04      	MOVLW       hi_addr(_canCommand)
0x88BE	0x6F79      	MOVWF       FARG_string_add_destino+1, 1
0x88C0	0x0E2B      	MOVLW       validadora_checkTarjeta_acceso_L0
0x88C2	0x6F7A      	MOVWF       FARG_string_add_addEnd, 1
0x88C4	0x0E05      	MOVLW       hi_addr(validadora_checkTarjeta_acceso_L0)
0x88C6	0x6F7B      	MOVWF       FARG_string_add_addEnd+1, 1
0x88C8	0xF016EC4C  	CALL        _string_add, 0
;Validadora.c,749 :: 		string_cpyc(bufferEeprom, CAN_PENSIONADO);
0x88CC	0x0ED2      	MOVLW       _bufferEeprom
0x88CE	0x6F78      	MOVWF       FARG_string_cpyc_destino, 1
0x88D0	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x88D2	0x6F79      	MOVWF       FARG_string_cpyc_destino+1, 1
0x88D4	0x0E5A      	MOVLW       _CAN_PENSIONADO
0x88D6	0x6F7A      	MOVWF       FARG_string_cpyc_origen, 1
0x88D8	0x0E9F      	MOVLW       hi_addr(_CAN_PENSIONADO)
0x88DA	0x6F7B      	MOVWF       FARG_string_cpyc_origen+1, 1
0x88DC	0x0E00      	MOVLW       higher_addr(_CAN_PENSIONADO)
0x88DE	0x6F7C      	MOVWF       FARG_string_cpyc_origen+2, 1
0x88E0	0xF014ECBC  	CALL        _string_cpyc, 0
;Validadora.c,750 :: 		numTohex(id, msjConst, 3);
0x88E4	0xF578C46F  	MOVFF       validadora_checkTarjeta_id_L0, FARG_numToHex_valor
0x88E8	0xF579C470  	MOVFF       validadora_checkTarjeta_id_L0+1, FARG_numToHex_valor+1
0x88EC	0xF57AC471  	MOVFF       validadora_checkTarjeta_id_L0+2, FARG_numToHex_valor+2
0x88F0	0xF57BC472  	MOVFF       validadora_checkTarjeta_id_L0+3, FARG_numToHex_valor+3
0x88F4	0x0E12      	MOVLW       _msjConst
0x88F6	0x6F7C      	MOVWF       FARG_numToHex_cadena, 1
0x88F8	0x0E05      	MOVLW       hi_addr(_msjConst)
0x88FA	0x6F7D      	MOVWF       FARG_numToHex_cadena+1, 1
0x88FC	0x0E03      	MOVLW       3
0x88FE	0x6F7E      	MOVWF       FARG_numToHex_bytes, 1
0x8900	0xF00DECAD  	CALL        _numToHex, 0
;Validadora.c,751 :: 		string_add(bufferEeprom, msjConst);
0x8904	0x0ED2      	MOVLW       _bufferEeprom
0x8906	0x6F78      	MOVWF       FARG_string_add_destino, 1
0x8908	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x890A	0x6F79      	MOVWF       FARG_string_add_destino+1, 1
0x890C	0x0E12      	MOVLW       _msjConst
0x890E	0x6F7A      	MOVWF       FARG_string_add_addEnd, 1
0x8910	0x0E05      	MOVLW       hi_addr(_msjConst)
0x8912	0x6F7B      	MOVWF       FARG_string_add_addEnd+1, 1
0x8914	0xF016EC4C  	CALL        _string_add, 0
;Validadora.c,752 :: 		string_addc(bufferEeprom, CAN_PASSBACK);   //CODIGO DE ACCION
0x8918	0x0ED2      	MOVLW       _bufferEeprom
0x891A	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x891C	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x891E	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x8920	0x0E56      	MOVLW       _CAN_PASSBACK
0x8922	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x8924	0x0E9F      	MOVLW       hi_addr(_CAN_PASSBACK)
0x8926	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x8928	0x0E00      	MOVLW       higher_addr(_CAN_PASSBACK)
0x892A	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x892C	0xF00FEC40  	CALL        _string_addc, 0
;Validadora.c,753 :: 		numToString(fila, msjConst, 4);
0x8930	0xF590C475  	MOVFF       validadora_checkTarjeta_fila_L0, FARG_numToString_valor
0x8934	0xF591C476  	MOVFF       validadora_checkTarjeta_fila_L0+1, FARG_numToString_valor+1
0x8938	0x0E00      	MOVLW       0
0x893A	0x0104      	MOVLB       4
0x893C	0xBF76      	BTFSC       validadora_checkTarjeta_fila_L0+1, 7, 1
0x893E	0x0EFF      	MOVLW       255
0x8940	0x0105      	MOVLB       5
0x8942	0x6F92      	MOVWF       FARG_numToString_valor+2, 1
0x8944	0x6F93      	MOVWF       FARG_numToString_valor+3, 1
0x8946	0x0E12      	MOVLW       _msjConst
0x8948	0x6F94      	MOVWF       FARG_numToString_cadena, 1
0x894A	0x0E05      	MOVLW       hi_addr(_msjConst)
0x894C	0x6F95      	MOVWF       FARG_numToString_cadena+1, 1
0x894E	0x0E04      	MOVLW       4
0x8950	0x6F96      	MOVWF       FARG_numToString_digitos, 1
0x8952	0xF004EC52  	CALL        _numToString, 0
;Validadora.c,754 :: 		string_add(bufferEeprom, msjConst);
0x8956	0x0ED2      	MOVLW       _bufferEeprom
0x8958	0x0105      	MOVLB       5
0x895A	0x6F78      	MOVWF       FARG_string_add_destino, 1
0x895C	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x895E	0x6F79      	MOVWF       FARG_string_add_destino+1, 1
0x8960	0x0E12      	MOVLW       _msjConst
0x8962	0x6F7A      	MOVWF       FARG_string_add_addEnd, 1
0x8964	0x0E05      	MOVLW       hi_addr(_msjConst)
0x8966	0x6F7B      	MOVWF       FARG_string_add_addEnd+1, 1
0x8968	0xF016EC4C  	CALL        _string_add, 0
;Validadora.c,756 :: 		msjConst[0] = estatus;
0x896C	0xF512C52A  	MOVFF       validadora_checkTarjeta_estatus_L0, _msjConst
;Validadora.c,757 :: 		msjConst[1] = 0;
0x8970	0x6B13      	CLRF        _msjConst+1, 1
;Validadora.c,758 :: 		string_add(bufferEeprom, msjConst);
0x8972	0x0ED2      	MOVLW       _bufferEeprom
0x8974	0x6F78      	MOVWF       FARG_string_add_destino, 1
0x8976	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x8978	0x6F79      	MOVWF       FARG_string_add_destino+1, 1
0x897A	0x0E12      	MOVLW       _msjConst
0x897C	0x6F7A      	MOVWF       FARG_string_add_addEnd, 1
0x897E	0x0E05      	MOVLW       hi_addr(_msjConst)
0x8980	0x6F7B      	MOVWF       FARG_string_add_addEnd+1, 1
0x8982	0xF016EC4C  	CALL        _string_add, 0
;Validadora.c,760 :: 		buffer_save_send(true, bufferEeprom);
0x8986	0x0E01      	MOVLW       1
0x8988	0x6F78      	MOVWF       FARG_buffer_save_send_guardar, 1
0x898A	0x0ED2      	MOVLW       _bufferEeprom
0x898C	0x6F79      	MOVWF       FARG_buffer_save_send_buffer, 1
0x898E	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x8990	0x6F7A      	MOVWF       FARG_buffer_save_send_buffer+1, 1
0x8992	0xF00FECCD  	CALL        _buffer_save_send, 0
;Validadora.c,761 :: 		}else if(!mysql_search(tablePrepago, pensionadosID, id, &fila)){
0x8996	0xD28F      	BRA         L_validadora_checkTarjeta681
L_validadora_checkTarjeta664:
0x8998	0x0E9A      	MOVLW       _tablePrepago
0x899A	0x0105      	MOVLB       5
0x899C	0x6F46      	MOVWF       FARG_mysql_search_tabla, 1
0x899E	0x0E02      	MOVLW       hi_addr(_tablePrepago)
0x89A0	0x6F47      	MOVWF       FARG_mysql_search_tabla+1, 1
0x89A2	0x0EFA      	MOVLW       _pensionadosID
0x89A4	0x6F48      	MOVWF       FARG_mysql_search_columna, 1
0x89A6	0x0E02      	MOVLW       hi_addr(_pensionadosID)
0x89A8	0x6F49      	MOVWF       FARG_mysql_search_columna+1, 1
0x89AA	0xF54AC46F  	MOVFF       validadora_checkTarjeta_id_L0, FARG_mysql_search_buscar
0x89AE	0xF54BC470  	MOVFF       validadora_checkTarjeta_id_L0+1, FARG_mysql_search_buscar+1
0x89B2	0xF54CC471  	MOVFF       validadora_checkTarjeta_id_L0+2, FARG_mysql_search_buscar+2
0x89B6	0xF54DC472  	MOVFF       validadora_checkTarjeta_id_L0+3, FARG_mysql_search_buscar+3
0x89BA	0x0E75      	MOVLW       validadora_checkTarjeta_fila_L0
0x89BC	0x6F4E      	MOVWF       FARG_mysql_search_fila, 1
0x89BE	0x0E04      	MOVLW       hi_addr(validadora_checkTarjeta_fila_L0)
0x89C0	0x6F4F      	MOVWF       FARG_mysql_search_fila+1, 1
0x89C2	0xF03AECC6  	CALL        _mysql_search, 0
0x89C6	0x5200      	MOVF        R0, 1 
0x89C8	0xA4D8      	BTFSS       STATUS, 2 
0x89CA	0xD259      	BRA         L_validadora_checkTarjeta682
;Validadora.c,763 :: 		canCommand[3] = CAN_PREPAGO[0];
0x89CC	0x0E50      	MOVLW       80
0x89CE	0x0104      	MOVLB       4
0x89D0	0x6F95      	MOVWF       _canCommand+3, 1
;Validadora.c,764 :: 		canCommand[4] = CAN_PREPAGO[1];
0x89D2	0x0E52      	MOVLW       82
0x89D4	0x6F96      	MOVWF       _canCommand+4, 1
;Validadora.c,765 :: 		canCommand[5] = CAN_PREPAGO[2];
0x89D6	0x0E45      	MOVLW       69
0x89D8	0x6F97      	MOVWF       _canCommand+5, 1
;Validadora.c,768 :: 		mysql_read_string(tablePrepago, prepagoEstatus, fila, &estatus);
0x89DA	0x0E9A      	MOVLW       _tablePrepago
0x89DC	0x0105      	MOVLB       5
0x89DE	0x6F78      	MOVWF       FARG_mysql_read_string_name, 1
0x89E0	0x0E02      	MOVLW       hi_addr(_tablePrepago)
0x89E2	0x6F79      	MOVWF       FARG_mysql_read_string_name+1, 1
0x89E4	0x0E92      	MOVLW       _prepagoEstatus
0x89E6	0x6F7A      	MOVWF       FARG_mysql_read_string_column, 1
0x89E8	0x0E02      	MOVLW       hi_addr(_prepagoEstatus)
0x89EA	0x6F7B      	MOVWF       FARG_mysql_read_string_column+1, 1
0x89EC	0xF57CC475  	MOVFF       validadora_checkTarjeta_fila_L0, FARG_mysql_read_string_fila
0x89F0	0xF57DC476  	MOVFF       validadora_checkTarjeta_fila_L0+1, FARG_mysql_read_string_fila+1
0x89F4	0x0E2A      	MOVLW       validadora_checkTarjeta_estatus_L0
0x89F6	0x6F7E      	MOVWF       FARG_mysql_read_string_result, 1
0x89F8	0x0E05      	MOVLW       hi_addr(validadora_checkTarjeta_estatus_L0)
0x89FA	0x6F7F      	MOVWF       FARG_mysql_read_string_result+1, 1
0x89FC	0xF015EC0E  	CALL        _mysql_read_string, 0
;Validadora.c,769 :: 		mysql_read(tablePrepago, prepagoSaldo, fila, &saldo);
0x8A00	0x0E9A      	MOVLW       _tablePrepago
0x8A02	0x0105      	MOVLB       5
0x8A04	0x6F86      	MOVWF       FARG_mysql_read_name, 1
0x8A06	0x0E02      	MOVLW       hi_addr(_tablePrepago)
0x8A08	0x6F87      	MOVWF       FARG_mysql_read_name+1, 1
0x8A0A	0x0EA2      	MOVLW       _prepagoSaldo
0x8A0C	0x6F88      	MOVWF       FARG_mysql_read_column, 1
0x8A0E	0x0E02      	MOVLW       hi_addr(_prepagoSaldo)
0x8A10	0x6F89      	MOVWF       FARG_mysql_read_column+1, 1
0x8A12	0xF58AC475  	MOVFF       validadora_checkTarjeta_fila_L0, FARG_mysql_read_fila
0x8A16	0xF58BC476  	MOVFF       validadora_checkTarjeta_fila_L0+1, FARG_mysql_read_fila+1
0x8A1A	0x0E30      	MOVLW       validadora_checkTarjeta_saldo_L0
0x8A1C	0x6F8C      	MOVWF       FARG_mysql_read_result, 1
0x8A1E	0x0E05      	MOVLW       hi_addr(validadora_checkTarjeta_saldo_L0)
0x8A20	0x6F8D      	MOVWF       FARG_mysql_read_result+1, 1
0x8A22	0xF009EC2C  	CALL        _mysql_read, 0
;Validadora.c,770 :: 		mysql_read_string(tablePrepago, prepagoDate, fila, fecha);
0x8A26	0x0E9A      	MOVLW       _tablePrepago
0x8A28	0x0105      	MOVLB       5
0x8A2A	0x6F78      	MOVWF       FARG_mysql_read_string_name, 1
0x8A2C	0x0E02      	MOVLW       hi_addr(_tablePrepago)
0x8A2E	0x6F79      	MOVWF       FARG_mysql_read_string_name+1, 1
0x8A30	0x0E19      	MOVLW       _prepagoDate
0x8A32	0x6F7A      	MOVWF       FARG_mysql_read_string_column, 1
0x8A34	0x0E03      	MOVLW       hi_addr(_prepagoDate)
0x8A36	0x6F7B      	MOVWF       FARG_mysql_read_string_column+1, 1
0x8A38	0xF57CC475  	MOVFF       validadora_checkTarjeta_fila_L0, FARG_mysql_read_string_fila
0x8A3C	0xF57DC476  	MOVFF       validadora_checkTarjeta_fila_L0+1, FARG_mysql_read_string_fila+1
0x8A40	0x0E38      	MOVLW       validadora_checkTarjeta_fecha_L0
0x8A42	0x6F7E      	MOVWF       FARG_mysql_read_string_result, 1
0x8A44	0x0E05      	MOVLW       hi_addr(validadora_checkTarjeta_fecha_L0)
0x8A46	0x6F7F      	MOVWF       FARG_mysql_read_string_result+1, 1
0x8A48	0xF015EC0E  	CALL        _mysql_read_string, 0
;Validadora.c,773 :: 		if(/*saldo > 0 && */(estatus == ESTATUS_PAS || estatus == ESTATUS_BREAK || !canSynchrony || !can.conected)){
0x8A4C	0x0105      	MOVLB       5
0x8A4E	0x512A      	MOVF        validadora_checkTarjeta_estatus_L0, 0, 1
0x8A50	0x0A49      	XORLW       73
0x8A52	0xE00A      	BZ          L__validadora_checkTarjeta984
0x8A54	0x512A      	MOVF        validadora_checkTarjeta_estatus_L0, 0, 1
0x8A56	0x0A2D      	XORLW       45
0x8A58	0xE007      	BZ          L__validadora_checkTarjeta984
0x8A5A	0x0102      	MOVLB       2
0x8A5C	0x53D3      	MOVF        _canSynchrony, 1, 1
0x8A5E	0xE004      	BZ          L__validadora_checkTarjeta984
0x8A60	0x0103      	MOVLB       3
0x8A62	0x53CC      	MOVF        _can+13, 1, 1
0x8A64	0xE001      	BZ          L__validadora_checkTarjeta984
0x8A66	0xD140      	BRA         L_validadora_checkTarjeta685
L__validadora_checkTarjeta984:
0x8A68	0x0103      	MOVLB       3
;Validadora.c,775 :: 		abrirBarrera = true;
0x8A6A	0x0E01      	MOVLW       1
0x8A6C	0x6F31      	MOVWF       _abrirBarrera, 1
;Validadora.c,776 :: 		SALIDA_RELE1 = 1;
0x8A6E	0x8A80      	BSF         PORTA, 5 
;Validadora.c,777 :: 		SALIDA_RELE2 = 1;
0x8A70	0x8084      	BSF         PORTE, 0 
;Validadora.c,778 :: 		timer1_reset();
0x8A72	0xF00DEC30  	CALL        _timer1_reset, 0
;Validadora.c,779 :: 		timer1_enable(true);
0x8A76	0x0E01      	MOVLW       1
0x8A78	0x0105      	MOVLB       5
0x8A7A	0x6F78      	MOVWF       FARG_timer1_enable_enable, 1
0x8A7C	0xF012EC5F  	CALL        _timer1_enable, 0
;Validadora.c,780 :: 		acceso[0] = TPV_ACCESO;    //Acceso
0x8A80	0x0E41      	MOVLW       65
0x8A82	0x6F2B      	MOVWF       validadora_checkTarjeta_acceso_L0, 1
;Validadora.c,782 :: 		if(!can.conected || !canSynchrony || estatus == ESTATUS_BREAK)
0x8A84	0x0103      	MOVLB       3
0x8A86	0x53CC      	MOVF        _can+13, 1, 1
0x8A88	0xE008      	BZ          L__validadora_checkTarjeta983
0x8A8A	0x0102      	MOVLB       2
0x8A8C	0x53D3      	MOVF        _canSynchrony, 1, 1
0x8A8E	0xE005      	BZ          L__validadora_checkTarjeta983
0x8A90	0x0105      	MOVLB       5
0x8A92	0x512A      	MOVF        validadora_checkTarjeta_estatus_L0, 0, 1
0x8A94	0x0A2D      	XORLW       45
0x8A96	0xE001      	BZ          L__validadora_checkTarjeta983
0x8A98	0xD003      	BRA         L_validadora_checkTarjeta688
L__validadora_checkTarjeta983:
0x8A9A	0x0105      	MOVLB       5
;Validadora.c,783 :: 		acceso[2] = ESTATUS_BREAK;   //Estado del passback roto
0x8A9C	0x0E2D      	MOVLW       45
0x8A9E	0x6F2D      	MOVWF       validadora_checkTarjeta_acceso_L0+2, 1
L_validadora_checkTarjeta688:
;Validadora.c,785 :: 		estatus = (!can.conected || !canSynchrony)? ESTATUS_BREAK:ESTATUS_MOD;
0x8AA0	0x0103      	MOVLB       3
0x8AA2	0x53CC      	MOVF        _can+13, 1, 1
0x8AA4	0xE004      	BZ          L__validadora_checkTarjeta982
0x8AA6	0x0102      	MOVLB       2
0x8AA8	0x53D3      	MOVF        _canSynchrony, 1, 1
0x8AAA	0xE001      	BZ          L__validadora_checkTarjeta982
0x8AAC	0xD004      	BRA         L_validadora_checkTarjeta691
L__validadora_checkTarjeta982:
0x8AAE	0x0E2D      	MOVLW       45
0x8AB0	0x0105      	MOVLB       5
0x8AB2	0x6F27      	MOVWF       ?FLOC___validadora_checkTarjetaT2731, 1
0x8AB4	0xD003      	BRA         L_validadora_checkTarjeta692
L_validadora_checkTarjeta691:
0x8AB6	0x0105      	MOVLB       5
0x8AB8	0x0E4F      	MOVLW       79
0x8ABA	0x6F27      	MOVWF       ?FLOC___validadora_checkTarjetaT2731, 1
L_validadora_checkTarjeta692:
0x8ABC	0xF52AC527  	MOVFF       ?FLOC___validadora_checkTarjetaT2731, validadora_checkTarjeta_estatus_L0
;Validadora.c,786 :: 		mysql_write(tablePrepago, prepagoEstatus, fila, estatus, false);
0x8AC0	0x0E9A      	MOVLW       _tablePrepago
0x8AC2	0x6F78      	MOVWF       FARG_mysql_write_name, 1
0x8AC4	0x0E02      	MOVLW       hi_addr(_tablePrepago)
0x8AC6	0x6F79      	MOVWF       FARG_mysql_write_name+1, 1
0x8AC8	0x0E92      	MOVLW       _prepagoEstatus
0x8ACA	0x6F7A      	MOVWF       FARG_mysql_write_column, 1
0x8ACC	0x0E02      	MOVLW       hi_addr(_prepagoEstatus)
0x8ACE	0x6F7B      	MOVWF       FARG_mysql_write_column+1, 1
0x8AD0	0xF57CC475  	MOVFF       validadora_checkTarjeta_fila_L0, FARG_mysql_write_fila
0x8AD4	0xF57DC476  	MOVFF       validadora_checkTarjeta_fila_L0+1, FARG_mysql_write_fila+1
0x8AD8	0xF57EC527  	MOVFF       ?FLOC___validadora_checkTarjetaT2731, FARG_mysql_write_value
0x8ADC	0x0E00      	MOVLW       0
0x8ADE	0x6F7F      	MOVWF       FARG_mysql_write_value+1, 1
0x8AE0	0x6F80      	MOVWF       FARG_mysql_write_value+2, 1
0x8AE2	0x6F81      	MOVWF       FARG_mysql_write_value+3, 1
0x8AE4	0x6B82      	CLRF        FARG_mysql_write_endWrite, 1
0x8AE6	0xF014EC20  	CALL        _mysql_write, 0
;Validadora.c,788 :: 		DS1307_read(&myRTC, false);   //Fecha actual de corte
0x8AEA	0x0E77      	MOVLW       _myRTC
0x8AEC	0x0105      	MOVLB       5
0x8AEE	0x6F78      	MOVWF       FARG_DS1307_read_myDS, 1
0x8AF0	0x0E04      	MOVLW       hi_addr(_myRTC)
0x8AF2	0x6F79      	MOVWF       FARG_DS1307_read_myDS+1, 1
0x8AF4	0x6B7A      	CLRF        FARG_DS1307_read_formatComplet, 1
0x8AF6	0xF010ECF9  	CALL        _DS1307_read, 0
;Validadora.c,789 :: 		string_cpyn(msjConst, &myRTC.time[1], 6);
0x8AFA	0x0E12      	MOVLW       _msjConst
0x8AFC	0x6F78      	MOVWF       FARG_string_cpyn_destino, 1
0x8AFE	0x0E05      	MOVLW       hi_addr(_msjConst)
0x8B00	0x6F79      	MOVWF       FARG_string_cpyn_destino+1, 1
0x8B02	0x0E7F      	MOVLW       _myRTC+8
0x8B04	0x6F7A      	MOVWF       FARG_string_cpyn_origen, 1
0x8B06	0x0E04      	MOVLW       hi_addr(_myRTC+8)
0x8B08	0x6F7B      	MOVWF       FARG_string_cpyn_origen+1, 1
0x8B0A	0x0E06      	MOVLW       6
0x8B0C	0x6F7C      	MOVWF       FARG_string_cpyn_size, 1
0x8B0E	0xF00DEC35  	CALL        _string_cpyn, 0
;Validadora.c,790 :: 		seconds = DS1307_getSeconds(msjConst);
0x8B12	0x0E12      	MOVLW       _msjConst
0x8B14	0x6F54      	MOVWF       FARG_DS1307_getSeconds_HHMMSS, 1
0x8B16	0x0E05      	MOVLW       hi_addr(_msjConst)
0x8B18	0x6F55      	MOVWF       FARG_DS1307_getSeconds_HHMMSS+1, 1
0x8B1A	0xF01DECC0  	CALL        _DS1307_getSeconds, 0
0x8B1E	0xF534C000  	MOVFF       R0, validadora_checkTarjeta_seconds_L0
0x8B22	0xF535C001  	MOVFF       R1, validadora_checkTarjeta_seconds_L0+1
0x8B26	0xF536C002  	MOVFF       R2, validadora_checkTarjeta_seconds_L0+2
0x8B2A	0xF537C003  	MOVFF       R3, validadora_checkTarjeta_seconds_L0+3
;Validadora.c,792 :: 		string_cpyn(msjconst, fecha, 6);  //Obtener fecha
0x8B2E	0x0E12      	MOVLW       _msjConst
0x8B30	0x6F78      	MOVWF       FARG_string_cpyn_destino, 1
0x8B32	0x0E05      	MOVLW       hi_addr(_msjConst)
0x8B34	0x6F79      	MOVWF       FARG_string_cpyn_destino+1, 1
0x8B36	0x0E38      	MOVLW       validadora_checkTarjeta_fecha_L0
0x8B38	0x6F7A      	MOVWF       FARG_string_cpyn_origen, 1
0x8B3A	0x0E05      	MOVLW       hi_addr(validadora_checkTarjeta_fecha_L0)
0x8B3C	0x6F7B      	MOVWF       FARG_string_cpyn_origen+1, 1
0x8B3E	0x0E06      	MOVLW       6
0x8B40	0x6F7C      	MOVWF       FARG_string_cpyn_size, 1
0x8B42	0xF00DEC35  	CALL        _string_cpyn, 0
;Validadora.c,793 :: 		seconds -= DS1307_getSeconds(msjConst);
0x8B46	0x0E12      	MOVLW       _msjConst
0x8B48	0x6F54      	MOVWF       FARG_DS1307_getSeconds_HHMMSS, 1
0x8B4A	0x0E05      	MOVLW       hi_addr(_msjConst)
0x8B4C	0x6F55      	MOVWF       FARG_DS1307_getSeconds_HHMMSS+1, 1
0x8B4E	0xF01DECC0  	CALL        _DS1307_getSeconds, 0
0x8B52	0xF004C534  	MOVFF       validadora_checkTarjeta_seconds_L0, R4
0x8B56	0xF005C535  	MOVFF       validadora_checkTarjeta_seconds_L0+1, R5
0x8B5A	0xF006C536  	MOVFF       validadora_checkTarjeta_seconds_L0+2, R6
0x8B5E	0xF007C537  	MOVFF       validadora_checkTarjeta_seconds_L0+3, R7
0x8B62	0x5000      	MOVF        R0, 0 
0x8B64	0x5E04      	SUBWF       R4, 1 
0x8B66	0x5001      	MOVF        R1, 0 
0x8B68	0x5A05      	SUBWFB      R5, 1 
0x8B6A	0x5002      	MOVF        R2, 0 
0x8B6C	0x5A06      	SUBWFB      R6, 1 
0x8B6E	0x5003      	MOVF        R3, 0 
0x8B70	0x5A07      	SUBWFB      R7, 1 
0x8B72	0xF534C004  	MOVFF       R4, validadora_checkTarjeta_seconds_L0
0x8B76	0xF535C005  	MOVFF       R5, validadora_checkTarjeta_seconds_L0+1
0x8B7A	0xF536C006  	MOVFF       R6, validadora_checkTarjeta_seconds_L0+2
0x8B7E	0xF537C007  	MOVFF       R7, validadora_checkTarjeta_seconds_L0+3
;Validadora.c,794 :: 		saldo -= clamp(seconds, 0, 999999); //No exceder 24hrs
0x8B82	0xF554C004  	MOVFF       R4, FARG_clamp_valor
0x8B86	0xF555C005  	MOVFF       R5, FARG_clamp_valor+1
0x8B8A	0xF556C006  	MOVFF       R6, FARG_clamp_valor+2
0x8B8E	0xF557C007  	MOVFF       R7, FARG_clamp_valor+3
0x8B92	0x6B58      	CLRF        FARG_clamp_min, 1
0x8B94	0x6B59      	CLRF        FARG_clamp_min+1, 1
0x8B96	0x6B5A      	CLRF        FARG_clamp_min+2, 1
0x8B98	0x6B5B      	CLRF        FARG_clamp_min+3, 1
0x8B9A	0x0E3F      	MOVLW       63
0x8B9C	0x6F5C      	MOVWF       FARG_clamp_max, 1
0x8B9E	0x0E42      	MOVLW       66
0x8BA0	0x6F5D      	MOVWF       FARG_clamp_max+1, 1
0x8BA2	0x0E0F      	MOVLW       15
0x8BA4	0x6F5E      	MOVWF       FARG_clamp_max+2, 1
0x8BA6	0x0E00      	MOVLW       0
0x8BA8	0x6F5F      	MOVWF       FARG_clamp_max+3, 1
0x8BAA	0xF019EC7E  	CALL        _clamp, 0
0x8BAE	0xF004C530  	MOVFF       validadora_checkTarjeta_saldo_L0, R4
0x8BB2	0xF005C531  	MOVFF       validadora_checkTarjeta_saldo_L0+1, R5
0x8BB6	0xF006C532  	MOVFF       validadora_checkTarjeta_saldo_L0+2, R6
0x8BBA	0xF007C533  	MOVFF       validadora_checkTarjeta_saldo_L0+3, R7
0x8BBE	0x5000      	MOVF        R0, 0 
0x8BC0	0x5E04      	SUBWF       R4, 1 
0x8BC2	0x5001      	MOVF        R1, 0 
0x8BC4	0x5A05      	SUBWFB      R5, 1 
0x8BC6	0x5002      	MOVF        R2, 0 
0x8BC8	0x5A06      	SUBWFB      R6, 1 
0x8BCA	0x5003      	MOVF        R3, 0 
0x8BCC	0x5A07      	SUBWFB      R7, 1 
0x8BCE	0xF530C004  	MOVFF       R4, validadora_checkTarjeta_saldo_L0
0x8BD2	0xF531C005  	MOVFF       R5, validadora_checkTarjeta_saldo_L0+1
0x8BD6	0xF532C006  	MOVFF       R6, validadora_checkTarjeta_saldo_L0+2
0x8BDA	0xF533C007  	MOVFF       R7, validadora_checkTarjeta_saldo_L0+3
;Validadora.c,795 :: 		saldo /= 3600;  //Redondea en horas
0x8BDE	0xF000C004  	MOVFF       R4, R0
0x8BE2	0xF001C005  	MOVFF       R5, R1
0x8BE6	0xF002C006  	MOVFF       R6, R2
0x8BEA	0xF003C007  	MOVFF       R7, R3
0x8BEE	0x0E10      	MOVLW       16
0x8BF0	0x6E04      	MOVWF       R4 
0x8BF2	0x0E0E      	MOVLW       14
0x8BF4	0x6E05      	MOVWF       R5 
0x8BF6	0x0E00      	MOVLW       0
0x8BF8	0x6E06      	MOVWF       R6 
0x8BFA	0x6E07      	MOVWF       R7 
0x8BFC	0xF002ECEB  	CALL        _Div_32x32_S, 0
0x8C00	0xF530C000  	MOVFF       R0, validadora_checkTarjeta_saldo_L0
0x8C04	0xF531C001  	MOVFF       R1, validadora_checkTarjeta_saldo_L0+1
0x8C08	0xF532C002  	MOVFF       R2, validadora_checkTarjeta_saldo_L0+2
0x8C0C	0xF533C003  	MOVFF       R3, validadora_checkTarjeta_saldo_L0+3
;Validadora.c,796 :: 		saldo *= 3600;  //Obtiene las horas totales
0x8C10	0x0E10      	MOVLW       16
0x8C12	0x6E04      	MOVWF       R4 
0x8C14	0x0E0E      	MOVLW       14
0x8C16	0x6E05      	MOVWF       R5 
0x8C18	0x0E00      	MOVLW       0
0x8C1A	0x6E06      	MOVWF       R6 
0x8C1C	0x6E07      	MOVWF       R7 
0x8C1E	0xF004EC29  	CALL        _Mul_32x32_U, 0
0x8C22	0xF530C000  	MOVFF       R0, validadora_checkTarjeta_saldo_L0
0x8C26	0xF531C001  	MOVFF       R1, validadora_checkTarjeta_saldo_L0+1
0x8C2A	0xF532C002  	MOVFF       R2, validadora_checkTarjeta_saldo_L0+2
0x8C2E	0xF533C003  	MOVFF       R3, validadora_checkTarjeta_saldo_L0+3
;Validadora.c,798 :: 		mysql_write(tablePrepago, prepagoSaldo, fila, saldo, false);
0x8C32	0x0E9A      	MOVLW       _tablePrepago
0x8C34	0x0105      	MOVLB       5
0x8C36	0x6F78      	MOVWF       FARG_mysql_write_name, 1
0x8C38	0x0E02      	MOVLW       hi_addr(_tablePrepago)
0x8C3A	0x6F79      	MOVWF       FARG_mysql_write_name+1, 1
0x8C3C	0x0EA2      	MOVLW       _prepagoSaldo
0x8C3E	0x6F7A      	MOVWF       FARG_mysql_write_column, 1
0x8C40	0x0E02      	MOVLW       hi_addr(_prepagoSaldo)
0x8C42	0x6F7B      	MOVWF       FARG_mysql_write_column+1, 1
0x8C44	0xF57CC475  	MOVFF       validadora_checkTarjeta_fila_L0, FARG_mysql_write_fila
0x8C48	0xF57DC476  	MOVFF       validadora_checkTarjeta_fila_L0+1, FARG_mysql_write_fila+1
0x8C4C	0xF57EC000  	MOVFF       R0, FARG_mysql_write_value
0x8C50	0xF57FC001  	MOVFF       R1, FARG_mysql_write_value+1
0x8C54	0xF580C002  	MOVFF       R2, FARG_mysql_write_value+2
0x8C58	0xF581C003  	MOVFF       R3, FARG_mysql_write_value+3
0x8C5C	0x6B82      	CLRF        FARG_mysql_write_endWrite, 1
0x8C5E	0xF014EC20  	CALL        _mysql_write, 0
;Validadora.c,801 :: 		lcd_clean_row(2);
0x8C62	0x0E02      	MOVLW       2
0x8C64	0x0105      	MOVLB       5
0x8C66	0x6F78      	MOVWF       FARG_lcd_clean_row_fila, 1
0x8C68	0xF00FECA1  	CALL        _lcd_clean_row, 0
;Validadora.c,802 :: 		lcd_clean_row(3);
0x8C6C	0x0E03      	MOVLW       3
0x8C6E	0x6F78      	MOVWF       FARG_lcd_clean_row_fila, 1
0x8C70	0xF00FECA1  	CALL        _lcd_clean_row, 0
;Validadora.c,803 :: 		lcd_out(2,1,"Acceso aceptado");
0x8C74	0x0E02      	MOVLW       2
0x8C76	0x6F78      	MOVWF       FARG_Lcd_Out_row, 1
0x8C78	0x0E01      	MOVLW       1
0x8C7A	0x6F79      	MOVWF       FARG_Lcd_Out_column, 1
0x8C7C	0x0E38      	MOVLW       ?lstr12_Validadora
0x8C7E	0x6F7A      	MOVWF       FARG_Lcd_Out_text, 1
0x8C80	0x0E02      	MOVLW       hi_addr(?lstr12_Validadora)
0x8C82	0x6F7B      	MOVWF       FARG_Lcd_Out_text+1, 1
0x8C84	0xF012EC66  	CALL        _Lcd_Out, 0
;Validadora.c,804 :: 		lcd_out(3,1,"Saldo(hrs): ");
0x8C88	0x0E03      	MOVLW       3
0x8C8A	0x0105      	MOVLB       5
0x8C8C	0x6F78      	MOVWF       FARG_Lcd_Out_row, 1
0x8C8E	0x0E01      	MOVLW       1
0x8C90	0x6F79      	MOVWF       FARG_Lcd_Out_column, 1
0x8C92	0x0E9B      	MOVLW       ?lstr13_Validadora
0x8C94	0x6F7A      	MOVWF       FARG_Lcd_Out_text, 1
0x8C96	0x0E00      	MOVLW       hi_addr(?lstr13_Validadora)
0x8C98	0x6F7B      	MOVWF       FARG_Lcd_Out_text+1, 1
0x8C9A	0xF012EC66  	CALL        _Lcd_Out, 0
;Validadora.c,805 :: 		bytetostr(saldo/3600, msjConst);
0x8C9E	0x0E10      	MOVLW       16
0x8CA0	0x6E04      	MOVWF       R4 
0x8CA2	0x0E0E      	MOVLW       14
0x8CA4	0x6E05      	MOVWF       R5 
0x8CA6	0x0E00      	MOVLW       0
0x8CA8	0x6E06      	MOVWF       R6 
0x8CAA	0x6E07      	MOVWF       R7 
0x8CAC	0xF000C530  	MOVFF       validadora_checkTarjeta_saldo_L0, R0
0x8CB0	0xF001C531  	MOVFF       validadora_checkTarjeta_saldo_L0+1, R1
0x8CB4	0xF002C532  	MOVFF       validadora_checkTarjeta_saldo_L0+2, R2
0x8CB8	0xF003C533  	MOVFF       validadora_checkTarjeta_saldo_L0+3, R3
0x8CBC	0xF002ECEB  	CALL        _Div_32x32_S, 0
0x8CC0	0xF546C000  	MOVFF       R0, FARG_ByteToStr_input
0x8CC4	0x0E12      	MOVLW       _msjConst
0x8CC6	0x0105      	MOVLB       5
0x8CC8	0x6F47      	MOVWF       FARG_ByteToStr_output, 1
0x8CCA	0x0E05      	MOVLW       hi_addr(_msjConst)
0x8CCC	0x6F48      	MOVWF       FARG_ByteToStr_output+1, 1
0x8CCE	0xF03AEC8A  	CALL        _ByteToStr, 0
;Validadora.c,806 :: 		lcd_out(3,13,msjConst);
0x8CD2	0x0E03      	MOVLW       3
0x8CD4	0x6F78      	MOVWF       FARG_Lcd_Out_row, 1
0x8CD6	0x0E0D      	MOVLW       13
0x8CD8	0x6F79      	MOVWF       FARG_Lcd_Out_column, 1
0x8CDA	0x0E12      	MOVLW       _msjConst
0x8CDC	0x6F7A      	MOVWF       FARG_Lcd_Out_text, 1
0x8CDE	0x0E05      	MOVLW       hi_addr(_msjConst)
0x8CE0	0x6F7B      	MOVWF       FARG_Lcd_Out_text+1, 1
0x8CE2	0xF012EC66  	CALL        _Lcd_Out, 0
;Validadora.c,823 :: 		}else{
0x8CE6	0xD035      	BRA         L_validadora_checkTarjeta693
L_validadora_checkTarjeta685:
;Validadora.c,825 :: 		if(saldo <= 0){
0x8CE8	0x0E80      	MOVLW       128
0x8CEA	0x6E00      	MOVWF       R0 
0x8CEC	0x0E80      	MOVLW       128
0x8CEE	0x0105      	MOVLB       5
0x8CF0	0x1933      	XORWF       validadora_checkTarjeta_saldo_L0+3, 0, 1
0x8CF2	0x5C00      	SUBWF       R0, 0 
0x8CF4	0xE108      	BNZ         L__validadora_checkTarjeta1340
0x8CF6	0x5132      	MOVF        validadora_checkTarjeta_saldo_L0+2, 0, 1
0x8CF8	0x0800      	SUBLW       0
0x8CFA	0xE105      	BNZ         L__validadora_checkTarjeta1340
0x8CFC	0x5131      	MOVF        validadora_checkTarjeta_saldo_L0+1, 0, 1
0x8CFE	0x0800      	SUBLW       0
0x8D00	0xE102      	BNZ         L__validadora_checkTarjeta1340
0x8D02	0x5130      	MOVF        validadora_checkTarjeta_saldo_L0, 0, 1
0x8D04	0x0800      	SUBLW       0
L__validadora_checkTarjeta1340:
0x8D06	0xE311      	BNC         L_validadora_checkTarjeta694
;Validadora.c,826 :: 		acceso[1] = TPV_SIN_SALDO;  //Sin saldo
0x8D08	0x0E53      	MOVLW       83
0x8D0A	0x6F2C      	MOVWF       validadora_checkTarjeta_acceso_L0+1, 1
;Validadora.c,827 :: 		lcd_clean_row(2);
0x8D0C	0x0E02      	MOVLW       2
0x8D0E	0x6F78      	MOVWF       FARG_lcd_clean_row_fila, 1
0x8D10	0xF00FECA1  	CALL        _lcd_clean_row, 0
;Validadora.c,828 :: 		lcd_out(2,1,"Saldo terminado");
0x8D14	0x0E02      	MOVLW       2
0x8D16	0x6F78      	MOVWF       FARG_Lcd_Out_row, 1
0x8D18	0x0E01      	MOVLW       1
0x8D1A	0x6F79      	MOVWF       FARG_Lcd_Out_column, 1
0x8D1C	0x0E8B      	MOVLW       ?lstr14_Validadora
0x8D1E	0x6F7A      	MOVWF       FARG_Lcd_Out_text, 1
0x8D20	0x0E00      	MOVLW       hi_addr(?lstr14_Validadora)
0x8D22	0x6F7B      	MOVWF       FARG_Lcd_Out_text+1, 1
0x8D24	0xF012EC66  	CALL        _Lcd_Out, 0
;Validadora.c,832 :: 		}else if(estatus == ESTATUS_MOD){
0x8D28	0xD014      	BRA         L_validadora_checkTarjeta695
L_validadora_checkTarjeta694:
0x8D2A	0x0105      	MOVLB       5
0x8D2C	0x512A      	MOVF        validadora_checkTarjeta_estatus_L0, 0, 1
0x8D2E	0x0A4F      	XORLW       79
0x8D30	0xE110      	BNZ         L_validadora_checkTarjeta696
;Validadora.c,833 :: 		acceso[2] = TPV_PASSBACK;   //Estado del passback
0x8D32	0x0E50      	MOVLW       80
0x8D34	0x6F2D      	MOVWF       validadora_checkTarjeta_acceso_L0+2, 1
;Validadora.c,834 :: 		lcd_clean_row(2);
0x8D36	0x0E02      	MOVLW       2
0x8D38	0x6F78      	MOVWF       FARG_lcd_clean_row_fila, 1
0x8D3A	0xF00FECA1  	CALL        _lcd_clean_row, 0
;Validadora.c,835 :: 		lcd_out(2,1,"Passback activo");
0x8D3E	0x0E02      	MOVLW       2
0x8D40	0x6F78      	MOVWF       FARG_Lcd_Out_row, 1
0x8D42	0x0E01      	MOVLW       1
0x8D44	0x6F79      	MOVWF       FARG_Lcd_Out_column, 1
0x8D46	0x0EBC      	MOVLW       ?lstr15_Validadora
0x8D48	0x6F7A      	MOVWF       FARG_Lcd_Out_text, 1
0x8D4A	0x0E00      	MOVLW       hi_addr(?lstr15_Validadora)
0x8D4C	0x6F7B      	MOVWF       FARG_Lcd_Out_text+1, 1
0x8D4E	0xF012EC66  	CALL        _Lcd_Out, 0
;Validadora.c,839 :: 		}
L_validadora_checkTarjeta696:
L_validadora_checkTarjeta695:
;Validadora.c,840 :: 		}
L_validadora_checkTarjeta693:
;Validadora.c,842 :: 		string_add(canCommand, acceso);
0x8D52	0x0E92      	MOVLW       _canCommand
0x8D54	0x0105      	MOVLB       5
0x8D56	0x6F78      	MOVWF       FARG_string_add_destino, 1
0x8D58	0x0E04      	MOVLW       hi_addr(_canCommand)
0x8D5A	0x6F79      	MOVWF       FARG_string_add_destino+1, 1
0x8D5C	0x0E2B      	MOVLW       validadora_checkTarjeta_acceso_L0
0x8D5E	0x6F7A      	MOVWF       FARG_string_add_addEnd, 1
0x8D60	0x0E05      	MOVLW       hi_addr(validadora_checkTarjeta_acceso_L0)
0x8D62	0x6F7B      	MOVWF       FARG_string_add_addEnd+1, 1
0x8D64	0xF016EC4C  	CALL        _string_add, 0
;Validadora.c,844 :: 		string_cpyc(bufferEeprom, CAN_PREPAGO);
0x8D68	0x0ED2      	MOVLW       _bufferEeprom
0x8D6A	0x6F78      	MOVWF       FARG_string_cpyc_destino, 1
0x8D6C	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x8D6E	0x6F79      	MOVWF       FARG_string_cpyc_destino+1, 1
0x8D70	0x0E62      	MOVLW       _CAN_PREPAGO
0x8D72	0x6F7A      	MOVWF       FARG_string_cpyc_origen, 1
0x8D74	0x0E9F      	MOVLW       hi_addr(_CAN_PREPAGO)
0x8D76	0x6F7B      	MOVWF       FARG_string_cpyc_origen+1, 1
0x8D78	0x0E00      	MOVLW       higher_addr(_CAN_PREPAGO)
0x8D7A	0x6F7C      	MOVWF       FARG_string_cpyc_origen+2, 1
0x8D7C	0xF014ECBC  	CALL        _string_cpyc, 0
;Validadora.c,845 :: 		numTohex(id, msjConst, 3);
0x8D80	0xF578C46F  	MOVFF       validadora_checkTarjeta_id_L0, FARG_numToHex_valor
0x8D84	0xF579C470  	MOVFF       validadora_checkTarjeta_id_L0+1, FARG_numToHex_valor+1
0x8D88	0xF57AC471  	MOVFF       validadora_checkTarjeta_id_L0+2, FARG_numToHex_valor+2
0x8D8C	0xF57BC472  	MOVFF       validadora_checkTarjeta_id_L0+3, FARG_numToHex_valor+3
0x8D90	0x0E12      	MOVLW       _msjConst
0x8D92	0x6F7C      	MOVWF       FARG_numToHex_cadena, 1
0x8D94	0x0E05      	MOVLW       hi_addr(_msjConst)
0x8D96	0x6F7D      	MOVWF       FARG_numToHex_cadena+1, 1
0x8D98	0x0E03      	MOVLW       3
0x8D9A	0x6F7E      	MOVWF       FARG_numToHex_bytes, 1
0x8D9C	0xF00DECAD  	CALL        _numToHex, 0
;Validadora.c,846 :: 		string_add(bufferEeprom, msjConst);
0x8DA0	0x0ED2      	MOVLW       _bufferEeprom
0x8DA2	0x6F78      	MOVWF       FARG_string_add_destino, 1
0x8DA4	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x8DA6	0x6F79      	MOVWF       FARG_string_add_destino+1, 1
0x8DA8	0x0E12      	MOVLW       _msjConst
0x8DAA	0x6F7A      	MOVWF       FARG_string_add_addEnd, 1
0x8DAC	0x0E05      	MOVLW       hi_addr(_msjConst)
0x8DAE	0x6F7B      	MOVWF       FARG_string_add_addEnd+1, 1
0x8DB0	0xF016EC4C  	CALL        _string_add, 0
;Validadora.c,847 :: 		if(acceso[0] == TPV_ACCESO)
0x8DB4	0x512B      	MOVF        validadora_checkTarjeta_acceso_L0, 0, 1
0x8DB6	0x0A41      	XORLW       65
0x8DB8	0xE10D      	BNZ         L_validadora_checkTarjeta697
;Validadora.c,848 :: 		string_addc(bufferEeprom, CAN_SPECIAL_SALDO);   //CODIGO DE ACCION
0x8DBA	0x0ED2      	MOVLW       _bufferEeprom
0x8DBC	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x8DBE	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x8DC0	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x8DC2	0x0E5E      	MOVLW       _CAN_SPECIAL_SALDO
0x8DC4	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x8DC6	0x0E9F      	MOVLW       hi_addr(_CAN_SPECIAL_SALDO)
0x8DC8	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x8DCA	0x0E00      	MOVLW       higher_addr(_CAN_SPECIAL_SALDO)
0x8DCC	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x8DCE	0xF00FEC40  	CALL        _string_addc, 0
0x8DD2	0xD00C      	BRA         L_validadora_checkTarjeta698
L_validadora_checkTarjeta697:
;Validadora.c,850 :: 		string_addc(bufferEeprom, CAN_PASSBACK);   //CODIGO DE ACCION
0x8DD4	0x0ED2      	MOVLW       _bufferEeprom
0x8DD6	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x8DD8	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x8DDA	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x8DDC	0x0E56      	MOVLW       _CAN_PASSBACK
0x8DDE	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x8DE0	0x0E9F      	MOVLW       hi_addr(_CAN_PASSBACK)
0x8DE2	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x8DE4	0x0E00      	MOVLW       higher_addr(_CAN_PASSBACK)
0x8DE6	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x8DE8	0xF00FEC40  	CALL        _string_addc, 0
L_validadora_checkTarjeta698:
;Validadora.c,851 :: 		numToString(fila, msjConst, 4);
0x8DEC	0xF590C475  	MOVFF       validadora_checkTarjeta_fila_L0, FARG_numToString_valor
0x8DF0	0xF591C476  	MOVFF       validadora_checkTarjeta_fila_L0+1, FARG_numToString_valor+1
0x8DF4	0x0E00      	MOVLW       0
0x8DF6	0x0104      	MOVLB       4
0x8DF8	0xBF76      	BTFSC       validadora_checkTarjeta_fila_L0+1, 7, 1
0x8DFA	0x0EFF      	MOVLW       255
0x8DFC	0x0105      	MOVLB       5
0x8DFE	0x6F92      	MOVWF       FARG_numToString_valor+2, 1
0x8E00	0x6F93      	MOVWF       FARG_numToString_valor+3, 1
0x8E02	0x0E12      	MOVLW       _msjConst
0x8E04	0x6F94      	MOVWF       FARG_numToString_cadena, 1
0x8E06	0x0E05      	MOVLW       hi_addr(_msjConst)
0x8E08	0x6F95      	MOVWF       FARG_numToString_cadena+1, 1
0x8E0A	0x0E04      	MOVLW       4
0x8E0C	0x6F96      	MOVWF       FARG_numToString_digitos, 1
0x8E0E	0xF004EC52  	CALL        _numToString, 0
;Validadora.c,852 :: 		string_add(bufferEeprom, msjConst);
0x8E12	0x0ED2      	MOVLW       _bufferEeprom
0x8E14	0x0105      	MOVLB       5
0x8E16	0x6F78      	MOVWF       FARG_string_add_destino, 1
0x8E18	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x8E1A	0x6F79      	MOVWF       FARG_string_add_destino+1, 1
0x8E1C	0x0E12      	MOVLW       _msjConst
0x8E1E	0x6F7A      	MOVWF       FARG_string_add_addEnd, 1
0x8E20	0x0E05      	MOVLW       hi_addr(_msjConst)
0x8E22	0x6F7B      	MOVWF       FARG_string_add_addEnd+1, 1
0x8E24	0xF016EC4C  	CALL        _string_add, 0
;Validadora.c,854 :: 		string_push(bufferEeprom, estatus);
0x8E28	0x0ED2      	MOVLW       _bufferEeprom
0x8E2A	0x6F78      	MOVWF       FARG_string_push_texto, 1
0x8E2C	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x8E2E	0x6F79      	MOVWF       FARG_string_push_texto+1, 1
0x8E30	0xF57AC52A  	MOVFF       validadora_checkTarjeta_estatus_L0, FARG_string_push_caracter
0x8E34	0xF014ECEF  	CALL        _string_push, 0
;Validadora.c,856 :: 		numToHex(saldo, msjConst, 4);
0x8E38	0xF578C530  	MOVFF       validadora_checkTarjeta_saldo_L0, FARG_numToHex_valor
0x8E3C	0xF579C531  	MOVFF       validadora_checkTarjeta_saldo_L0+1, FARG_numToHex_valor+1
0x8E40	0xF57AC532  	MOVFF       validadora_checkTarjeta_saldo_L0+2, FARG_numToHex_valor+2
0x8E44	0xF57BC533  	MOVFF       validadora_checkTarjeta_saldo_L0+3, FARG_numToHex_valor+3
0x8E48	0x0E12      	MOVLW       _msjConst
0x8E4A	0x6F7C      	MOVWF       FARG_numToHex_cadena, 1
0x8E4C	0x0E05      	MOVLW       hi_addr(_msjConst)
0x8E4E	0x6F7D      	MOVWF       FARG_numToHex_cadena+1, 1
0x8E50	0x0E04      	MOVLW       4
0x8E52	0x6F7E      	MOVWF       FARG_numToHex_bytes, 1
0x8E54	0xF00DECAD  	CALL        _numToHex, 0
;Validadora.c,857 :: 		string_add(bufferEeprom, msjConst);
0x8E58	0x0ED2      	MOVLW       _bufferEeprom
0x8E5A	0x6F78      	MOVWF       FARG_string_add_destino, 1
0x8E5C	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x8E5E	0x6F79      	MOVWF       FARG_string_add_destino+1, 1
0x8E60	0x0E12      	MOVLW       _msjConst
0x8E62	0x6F7A      	MOVWF       FARG_string_add_addEnd, 1
0x8E64	0x0E05      	MOVLW       hi_addr(_msjConst)
0x8E66	0x6F7B      	MOVWF       FARG_string_add_addEnd+1, 1
0x8E68	0xF016EC4C  	CALL        _string_add, 0
;Validadora.c,859 :: 		buffer_save_send(true, bufferEeprom);
0x8E6C	0x0E01      	MOVLW       1
0x8E6E	0x6F78      	MOVWF       FARG_buffer_save_send_guardar, 1
0x8E70	0x0ED2      	MOVLW       _bufferEeprom
0x8E72	0x6F79      	MOVWF       FARG_buffer_save_send_buffer, 1
0x8E74	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x8E76	0x6F7A      	MOVWF       FARG_buffer_save_send_buffer+1, 1
0x8E78	0xF00FECCD  	CALL        _buffer_save_send, 0
;Validadora.c,860 :: 		}else{
0x8E7C	0xD01C      	BRA         L_validadora_checkTarjeta699
L_validadora_checkTarjeta682:
;Validadora.c,861 :: 		lcd_clean_row(2);
0x8E7E	0x0E02      	MOVLW       2
0x8E80	0x0105      	MOVLB       5
0x8E82	0x6F78      	MOVWF       FARG_lcd_clean_row_fila, 1
0x8E84	0xF00FECA1  	CALL        _lcd_clean_row, 0
;Validadora.c,862 :: 		lcd_out(2,1,"Tarjeta desconocida");
0x8E88	0x0E02      	MOVLW       2
0x8E8A	0x6F78      	MOVWF       FARG_Lcd_Out_row, 1
0x8E8C	0x0E01      	MOVLW       1
0x8E8E	0x6F79      	MOVWF       FARG_Lcd_Out_column, 1
0x8E90	0x0EA8      	MOVLW       ?lstr16_Validadora
0x8E92	0x6F7A      	MOVWF       FARG_Lcd_Out_text, 1
0x8E94	0x0E00      	MOVLW       hi_addr(?lstr16_Validadora)
0x8E96	0x6F7B      	MOVWF       FARG_Lcd_Out_text+1, 1
0x8E98	0xF012EC66  	CALL        _Lcd_Out, 0
;Validadora.c,867 :: 		acceso[3] = TPV_DESCONOCIDO;      //Tarjeta desconocida
0x8E9C	0x0E44      	MOVLW       68
0x8E9E	0x0105      	MOVLB       5
0x8EA0	0x6F2E      	MOVWF       validadora_checkTarjeta_acceso_L0+3, 1
;Validadora.c,868 :: 		string_add(canCommand, acceso);
0x8EA2	0x0E92      	MOVLW       _canCommand
0x8EA4	0x6F78      	MOVWF       FARG_string_add_destino, 1
0x8EA6	0x0E04      	MOVLW       hi_addr(_canCommand)
0x8EA8	0x6F79      	MOVWF       FARG_string_add_destino+1, 1
0x8EAA	0x0E2B      	MOVLW       validadora_checkTarjeta_acceso_L0
0x8EAC	0x6F7A      	MOVWF       FARG_string_add_addEnd, 1
0x8EAE	0x0E05      	MOVLW       hi_addr(validadora_checkTarjeta_acceso_L0)
0x8EB0	0x6F7B      	MOVWF       FARG_string_add_addEnd+1, 1
0x8EB2	0xF016EC4C  	CALL        _string_add, 0
;Validadora.c,869 :: 		}
L_validadora_checkTarjeta699:
L_validadora_checkTarjeta681:
0x8EB6	0x0105      	MOVLB       5
;Validadora.c,871 :: 		string_addc(canCommand, CAN_MODULE);    //E
0x8EB8	0x0E92      	MOVLW       _canCommand
0x8EBA	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x8EBC	0x0E04      	MOVLW       hi_addr(_canCommand)
0x8EBE	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x8EC0	0x0E86      	MOVLW       _CAN_MODULE
0x8EC2	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x8EC4	0x0E9F      	MOVLW       hi_addr(_CAN_MODULE)
0x8EC6	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x8EC8	0x0E00      	MOVLW       higher_addr(_CAN_MODULE)
0x8ECA	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x8ECC	0xF00FEC40  	CALL        _string_addc, 0
;Validadora.c,872 :: 		numToHex(canId, msjConst, 1);
0x8ED0	0xF578C2ED  	MOVFF       _canId, FARG_numToHex_valor
0x8ED4	0x0E00      	MOVLW       0
0x8ED6	0x6F79      	MOVWF       FARG_numToHex_valor+1, 1
0x8ED8	0x6F7A      	MOVWF       FARG_numToHex_valor+2, 1
0x8EDA	0x6F7B      	MOVWF       FARG_numToHex_valor+3, 1
0x8EDC	0x0E12      	MOVLW       _msjConst
0x8EDE	0x6F7C      	MOVWF       FARG_numToHex_cadena, 1
0x8EE0	0x0E05      	MOVLW       hi_addr(_msjConst)
0x8EE2	0x6F7D      	MOVWF       FARG_numToHex_cadena+1, 1
0x8EE4	0x0E01      	MOVLW       1
0x8EE6	0x6F7E      	MOVWF       FARG_numToHex_bytes, 1
0x8EE8	0xF00DECAD  	CALL        _numToHex, 0
;Validadora.c,873 :: 		string_add(canCommand, msjConst);       //NODO(HEX)
0x8EEC	0x0E92      	MOVLW       _canCommand
0x8EEE	0x6F78      	MOVWF       FARG_string_add_destino, 1
0x8EF0	0x0E04      	MOVLW       hi_addr(_canCommand)
0x8EF2	0x6F79      	MOVWF       FARG_string_add_destino+1, 1
0x8EF4	0x0E12      	MOVLW       _msjConst
0x8EF6	0x6F7A      	MOVWF       FARG_string_add_addEnd, 1
0x8EF8	0x0E05      	MOVLW       hi_addr(_msjConst)
0x8EFA	0x6F7B      	MOVWF       FARG_string_add_addEnd+1, 1
0x8EFC	0xF016EC4C  	CALL        _string_add, 0
;Validadora.c,874 :: 		buffer_save_send(false, canCommand);
0x8F00	0x6B78      	CLRF        FARG_buffer_save_send_guardar, 1
0x8F02	0x0E92      	MOVLW       _canCommand
0x8F04	0x6F79      	MOVWF       FARG_buffer_save_send_buffer, 1
0x8F06	0x0E04      	MOVLW       hi_addr(_canCommand)
0x8F08	0x6F7A      	MOVWF       FARG_buffer_save_send_buffer+1, 1
0x8F0A	0xF00FECCD  	CALL        _buffer_save_send, 0
;Validadora.c,875 :: 		}else if(buscarNIP){
0x8F0E	0xF04CEF28  	GOTO        L_validadora_checkTarjeta700
L_validadora_checkTarjeta663:
0x8F12	0x0102      	MOVLB       2
0x8F14	0x538E      	MOVF        validadora_checkTarjeta_buscarNIP_L0, 1, 1
0x8F16	0xB4D8      	BTFSC       STATUS, 2 
0x8F18	0xF04CEF28  	GOTO        L_validadora_checkTarjeta701
;Validadora.c,876 :: 		buscarNIP = false;
0x8F1C	0x6B8E      	CLRF        validadora_checkTarjeta_buscarNIP_L0, 1
;Validadora.c,878 :: 		DS1307_read(&myRTC, false);
0x8F1E	0x0E77      	MOVLW       _myRTC
0x8F20	0x0105      	MOVLB       5
0x8F22	0x6F78      	MOVWF       FARG_DS1307_read_myDS, 1
0x8F24	0x0E04      	MOVLW       hi_addr(_myRTC)
0x8F26	0x6F79      	MOVWF       FARG_DS1307_read_myDS+1, 1
0x8F28	0x6B7A      	CLRF        FARG_DS1307_read_formatComplet, 1
0x8F2A	0xF010ECF9  	CALL        _DS1307_read, 0
;Validadora.c,880 :: 		string_cpyc(canCommand, CAN_TPV);
0x8F2E	0x0E92      	MOVLW       _canCommand
0x8F30	0x6F78      	MOVWF       FARG_string_cpyc_destino, 1
0x8F32	0x0E04      	MOVLW       hi_addr(_canCommand)
0x8F34	0x6F79      	MOVWF       FARG_string_cpyc_destino+1, 1
0x8F36	0x0E0E      	MOVLW       _CAN_TPV
0x8F38	0x6F7A      	MOVWF       FARG_string_cpyc_origen, 1
0x8F3A	0x0E9F      	MOVLW       hi_addr(_CAN_TPV)
0x8F3C	0x6F7B      	MOVWF       FARG_string_cpyc_origen+1, 1
0x8F3E	0x0E00      	MOVLW       higher_addr(_CAN_TPV)
0x8F40	0x6F7C      	MOVWF       FARG_string_cpyc_origen+2, 1
0x8F42	0xF014ECBC  	CALL        _string_cpyc, 0
;Validadora.c,881 :: 		string_addc(canCommand, CAN_NIP);       //NIP
0x8F46	0x0E92      	MOVLW       _canCommand
0x8F48	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x8F4A	0x0E04      	MOVLW       hi_addr(_canCommand)
0x8F4C	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x8F4E	0x0E4A      	MOVLW       _CAN_NIP
0x8F50	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x8F52	0x0E9F      	MOVLW       hi_addr(_CAN_NIP)
0x8F54	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x8F56	0x0E00      	MOVLW       higher_addr(_CAN_NIP)
0x8F58	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x8F5A	0xF00FEC40  	CALL        _string_addc, 0
;Validadora.c,882 :: 		numToString(nip, msjConst, 4);
0x8F5E	0xF590C473  	MOVFF       validadora_checkTarjeta_nip_L0, FARG_numToString_valor
0x8F62	0xF591C474  	MOVFF       validadora_checkTarjeta_nip_L0+1, FARG_numToString_valor+1
0x8F66	0x0E00      	MOVLW       0
0x8F68	0x0104      	MOVLB       4
0x8F6A	0xBF74      	BTFSC       validadora_checkTarjeta_nip_L0+1, 7, 1
0x8F6C	0x0EFF      	MOVLW       255
0x8F6E	0x0105      	MOVLB       5
0x8F70	0x6F92      	MOVWF       FARG_numToString_valor+2, 1
0x8F72	0x6F93      	MOVWF       FARG_numToString_valor+3, 1
0x8F74	0x0E12      	MOVLW       _msjConst
0x8F76	0x6F94      	MOVWF       FARG_numToString_cadena, 1
0x8F78	0x0E05      	MOVLW       hi_addr(_msjConst)
0x8F7A	0x6F95      	MOVWF       FARG_numToString_cadena+1, 1
0x8F7C	0x0E04      	MOVLW       4
0x8F7E	0x6F96      	MOVWF       FARG_numToString_digitos, 1
0x8F80	0xF004EC52  	CALL        _numToString, 0
;Validadora.c,883 :: 		string_add(canCommand, msjConst);       //NIP + NIP(DEC)
0x8F84	0x0E92      	MOVLW       _canCommand
0x8F86	0x0105      	MOVLB       5
0x8F88	0x6F78      	MOVWF       FARG_string_add_destino, 1
0x8F8A	0x0E04      	MOVLW       hi_addr(_canCommand)
0x8F8C	0x6F79      	MOVWF       FARG_string_add_destino+1, 1
0x8F8E	0x0E12      	MOVLW       _msjConst
0x8F90	0x6F7A      	MOVWF       FARG_string_add_addEnd, 1
0x8F92	0x0E05      	MOVLW       hi_addr(_msjConst)
0x8F94	0x6F7B      	MOVWF       FARG_string_add_addEnd+1, 1
0x8F96	0xF016EC4C  	CALL        _string_add, 0
;Validadora.c,884 :: 		string_add(canCommand, &myRTC.time[1]); //NIP + NIP(DEC) + DATE
0x8F9A	0x0E92      	MOVLW       _canCommand
0x8F9C	0x6F78      	MOVWF       FARG_string_add_destino, 1
0x8F9E	0x0E04      	MOVLW       hi_addr(_canCommand)
0x8FA0	0x6F79      	MOVWF       FARG_string_add_destino+1, 1
0x8FA2	0x0E7F      	MOVLW       _myRTC+8
0x8FA4	0x6F7A      	MOVWF       FARG_string_add_addEnd, 1
0x8FA6	0x0E04      	MOVLW       hi_addr(_myRTC+8)
0x8FA8	0x6F7B      	MOVWF       FARG_string_add_addEnd+1, 1
0x8FAA	0xF016EC4C  	CALL        _string_add, 0
;Validadora.c,886 :: 		string_cpyc(acceso, ACCESO_DENEGADO);   //sin acceso, sin Saldo, sin passback, desconocida nip
0x8FAE	0x0E2B      	MOVLW       validadora_checkTarjeta_acceso_L0
0x8FB0	0x6F78      	MOVWF       FARG_string_cpyc_destino, 1
0x8FB2	0x0E05      	MOVLW       hi_addr(validadora_checkTarjeta_acceso_L0)
0x8FB4	0x6F79      	MOVWF       FARG_string_cpyc_destino+1, 1
0x8FB6	0x0E01      	MOVLW       _ACCESO_DENEGADO
0x8FB8	0x6F7A      	MOVWF       FARG_string_cpyc_origen, 1
0x8FBA	0x0E9F      	MOVLW       hi_addr(_ACCESO_DENEGADO)
0x8FBC	0x6F7B      	MOVWF       FARG_string_cpyc_origen+1, 1
0x8FBE	0x0E00      	MOVLW       higher_addr(_ACCESO_DENEGADO)
0x8FC0	0x6F7C      	MOVWF       FARG_string_cpyc_origen+2, 1
0x8FC2	0xF014ECBC  	CALL        _string_cpyc, 0
;Validadora.c,889 :: 		if(!mysql_search(tablePrepago, prepagoNip, nip, &fila)){
0x8FC6	0x0E9A      	MOVLW       _tablePrepago
0x8FC8	0x6F46      	MOVWF       FARG_mysql_search_tabla, 1
0x8FCA	0x0E02      	MOVLW       hi_addr(_tablePrepago)
0x8FCC	0x6F47      	MOVWF       FARG_mysql_search_tabla+1, 1
0x8FCE	0x0E87      	MOVLW       _prepagoNip
0x8FD0	0x6F48      	MOVWF       FARG_mysql_search_columna, 1
0x8FD2	0x0E00      	MOVLW       hi_addr(_prepagoNip)
0x8FD4	0x6F49      	MOVWF       FARG_mysql_search_columna+1, 1
0x8FD6	0xF54AC473  	MOVFF       validadora_checkTarjeta_nip_L0, FARG_mysql_search_buscar
0x8FDA	0xF54BC474  	MOVFF       validadora_checkTarjeta_nip_L0+1, FARG_mysql_search_buscar+1
0x8FDE	0x0E00      	MOVLW       0
0x8FE0	0x0104      	MOVLB       4
0x8FE2	0xBF74      	BTFSC       validadora_checkTarjeta_nip_L0+1, 7, 1
0x8FE4	0x0EFF      	MOVLW       255
0x8FE6	0x0105      	MOVLB       5
0x8FE8	0x6F4C      	MOVWF       FARG_mysql_search_buscar+2, 1
0x8FEA	0x6F4D      	MOVWF       FARG_mysql_search_buscar+3, 1
0x8FEC	0x0E75      	MOVLW       validadora_checkTarjeta_fila_L0
0x8FEE	0x6F4E      	MOVWF       FARG_mysql_search_fila, 1
0x8FF0	0x0E04      	MOVLW       hi_addr(validadora_checkTarjeta_fila_L0)
0x8FF2	0x6F4F      	MOVWF       FARG_mysql_search_fila+1, 1
0x8FF4	0xF03AECC6  	CALL        _mysql_search, 0
0x8FF8	0x5200      	MOVF        R0, 1 
0x8FFA	0xA4D8      	BTFSS       STATUS, 2 
0x8FFC	0xD262      	BRA         L_validadora_checkTarjeta702
;Validadora.c,891 :: 		mysql_read_string(tablePrepago, prepagoEstatus, fila, &estatus);
0x8FFE	0x0E9A      	MOVLW       _tablePrepago
0x9000	0x0105      	MOVLB       5
0x9002	0x6F78      	MOVWF       FARG_mysql_read_string_name, 1
0x9004	0x0E02      	MOVLW       hi_addr(_tablePrepago)
0x9006	0x6F79      	MOVWF       FARG_mysql_read_string_name+1, 1
0x9008	0x0E92      	MOVLW       _prepagoEstatus
0x900A	0x6F7A      	MOVWF       FARG_mysql_read_string_column, 1
0x900C	0x0E02      	MOVLW       hi_addr(_prepagoEstatus)
0x900E	0x6F7B      	MOVWF       FARG_mysql_read_string_column+1, 1
0x9010	0xF57CC475  	MOVFF       validadora_checkTarjeta_fila_L0, FARG_mysql_read_string_fila
0x9014	0xF57DC476  	MOVFF       validadora_checkTarjeta_fila_L0+1, FARG_mysql_read_string_fila+1
0x9018	0x0E2A      	MOVLW       validadora_checkTarjeta_estatus_L0
0x901A	0x6F7E      	MOVWF       FARG_mysql_read_string_result, 1
0x901C	0x0E05      	MOVLW       hi_addr(validadora_checkTarjeta_estatus_L0)
0x901E	0x6F7F      	MOVWF       FARG_mysql_read_string_result+1, 1
0x9020	0xF015EC0E  	CALL        _mysql_read_string, 0
;Validadora.c,892 :: 		mysql_read(tablePrepago, prepagoSaldo, fila, &saldo);
0x9024	0x0E9A      	MOVLW       _tablePrepago
0x9026	0x0105      	MOVLB       5
0x9028	0x6F86      	MOVWF       FARG_mysql_read_name, 1
0x902A	0x0E02      	MOVLW       hi_addr(_tablePrepago)
0x902C	0x6F87      	MOVWF       FARG_mysql_read_name+1, 1
0x902E	0x0EA2      	MOVLW       _prepagoSaldo
0x9030	0x6F88      	MOVWF       FARG_mysql_read_column, 1
0x9032	0x0E02      	MOVLW       hi_addr(_prepagoSaldo)
0x9034	0x6F89      	MOVWF       FARG_mysql_read_column+1, 1
0x9036	0xF58AC475  	MOVFF       validadora_checkTarjeta_fila_L0, FARG_mysql_read_fila
0x903A	0xF58BC476  	MOVFF       validadora_checkTarjeta_fila_L0+1, FARG_mysql_read_fila+1
0x903E	0x0E30      	MOVLW       validadora_checkTarjeta_saldo_L0
0x9040	0x6F8C      	MOVWF       FARG_mysql_read_result, 1
0x9042	0x0E05      	MOVLW       hi_addr(validadora_checkTarjeta_saldo_L0)
0x9044	0x6F8D      	MOVWF       FARG_mysql_read_result+1, 1
0x9046	0xF009EC2C  	CALL        _mysql_read, 0
;Validadora.c,893 :: 		mysql_read(tablePrepago, prepagoID, fila, &id);
0x904A	0x0E9A      	MOVLW       _tablePrepago
0x904C	0x0105      	MOVLB       5
0x904E	0x6F86      	MOVWF       FARG_mysql_read_name, 1
0x9050	0x0E02      	MOVLW       hi_addr(_tablePrepago)
0x9052	0x6F87      	MOVWF       FARG_mysql_read_name+1, 1
0x9054	0x0E69      	MOVLW       _prepagoId
0x9056	0x6F88      	MOVWF       FARG_mysql_read_column, 1
0x9058	0x0E00      	MOVLW       hi_addr(_prepagoId)
0x905A	0x6F89      	MOVWF       FARG_mysql_read_column+1, 1
0x905C	0xF58AC475  	MOVFF       validadora_checkTarjeta_fila_L0, FARG_mysql_read_fila
0x9060	0xF58BC476  	MOVFF       validadora_checkTarjeta_fila_L0+1, FARG_mysql_read_fila+1
0x9064	0x0E6F      	MOVLW       validadora_checkTarjeta_id_L0
0x9066	0x6F8C      	MOVWF       FARG_mysql_read_result, 1
0x9068	0x0E04      	MOVLW       hi_addr(validadora_checkTarjeta_id_L0)
0x906A	0x6F8D      	MOVWF       FARG_mysql_read_result+1, 1
0x906C	0xF009EC2C  	CALL        _mysql_read, 0
;Validadora.c,895 :: 		if(saldo >= 3600 && (estatus == ESTATUS_PAS || estatus == ESTATUS_BREAK || !canSynchrony || !can.conected)){
0x9070	0x0E80      	MOVLW       128
0x9072	0x0105      	MOVLB       5
0x9074	0x1933      	XORWF       validadora_checkTarjeta_saldo_L0+3, 0, 1
0x9076	0x6E00      	MOVWF       R0 
0x9078	0x0E80      	MOVLW       128
0x907A	0x5C00      	SUBWF       R0, 0 
0x907C	0xE108      	BNZ         L__validadora_checkTarjeta1341
0x907E	0x0E00      	MOVLW       0
0x9080	0x5D32      	SUBWF       validadora_checkTarjeta_saldo_L0+2, 0, 1
0x9082	0xE105      	BNZ         L__validadora_checkTarjeta1341
0x9084	0x0E0E      	MOVLW       14
0x9086	0x5D31      	SUBWF       validadora_checkTarjeta_saldo_L0+1, 0, 1
0x9088	0xE102      	BNZ         L__validadora_checkTarjeta1341
0x908A	0x0E10      	MOVLW       16
0x908C	0x5D30      	SUBWF       validadora_checkTarjeta_saldo_L0, 0, 1
L__validadora_checkTarjeta1341:
0x908E	0xA0D8      	BTFSS       STATUS, 0 
0x9090	0xD14D      	BRA         L_validadora_checkTarjeta707
0x9092	0x512A      	MOVF        validadora_checkTarjeta_estatus_L0, 0, 1
0x9094	0x0A49      	XORLW       73
0x9096	0xE00A      	BZ          L__validadora_checkTarjeta981
0x9098	0x512A      	MOVF        validadora_checkTarjeta_estatus_L0, 0, 1
0x909A	0x0A2D      	XORLW       45
0x909C	0xE007      	BZ          L__validadora_checkTarjeta981
0x909E	0x0102      	MOVLB       2
0x90A0	0x53D3      	MOVF        _canSynchrony, 1, 1
0x90A2	0xE004      	BZ          L__validadora_checkTarjeta981
0x90A4	0x0103      	MOVLB       3
0x90A6	0x53CC      	MOVF        _can+13, 1, 1
0x90A8	0xE001      	BZ          L__validadora_checkTarjeta981
0x90AA	0xD140      	BRA         L_validadora_checkTarjeta707
L__validadora_checkTarjeta981:
L__validadora_checkTarjeta980:
0x90AC	0x0103      	MOVLB       3
;Validadora.c,897 :: 		abrirBarrera = true;
0x90AE	0x0E01      	MOVLW       1
0x90B0	0x6F31      	MOVWF       _abrirBarrera, 1
;Validadora.c,898 :: 		SALIDA_RELE1 = 1;
0x90B2	0x8A80      	BSF         PORTA, 5 
;Validadora.c,899 :: 		SALIDA_RELE2 = 1;
0x90B4	0x8084      	BSF         PORTE, 0 
;Validadora.c,900 :: 		timer1_reset();
0x90B6	0xF00DEC30  	CALL        _timer1_reset, 0
;Validadora.c,901 :: 		timer1_enable(true);
0x90BA	0x0E01      	MOVLW       1
0x90BC	0x0105      	MOVLB       5
0x90BE	0x6F78      	MOVWF       FARG_timer1_enable_enable, 1
0x90C0	0xF012EC5F  	CALL        _timer1_enable, 0
;Validadora.c,903 :: 		acceso[0] = TPV_ACCESO;    //Acceso
0x90C4	0x0E41      	MOVLW       65
0x90C6	0x6F2B      	MOVWF       validadora_checkTarjeta_acceso_L0, 1
;Validadora.c,904 :: 		if(!can.conected || !canSynchrony || estatus == ESTATUS_BREAK)
0x90C8	0x0103      	MOVLB       3
0x90CA	0x53CC      	MOVF        _can+13, 1, 1
0x90CC	0xE008      	BZ          L__validadora_checkTarjeta979
0x90CE	0x0102      	MOVLB       2
0x90D0	0x53D3      	MOVF        _canSynchrony, 1, 1
0x90D2	0xE005      	BZ          L__validadora_checkTarjeta979
0x90D4	0x0105      	MOVLB       5
0x90D6	0x512A      	MOVF        validadora_checkTarjeta_estatus_L0, 0, 1
0x90D8	0x0A2D      	XORLW       45
0x90DA	0xE001      	BZ          L__validadora_checkTarjeta979
0x90DC	0xD003      	BRA         L_validadora_checkTarjeta710
L__validadora_checkTarjeta979:
0x90DE	0x0105      	MOVLB       5
;Validadora.c,905 :: 		acceso[2] = ESTATUS_BREAK;   //Estado del passback roto
0x90E0	0x0E2D      	MOVLW       45
0x90E2	0x6F2D      	MOVWF       validadora_checkTarjeta_acceso_L0+2, 1
L_validadora_checkTarjeta710:
;Validadora.c,907 :: 		estatus = (!can.conected || !canSynchrony)? ESTATUS_BREAK:ESTATUS_MOD;
0x90E4	0x0103      	MOVLB       3
0x90E6	0x53CC      	MOVF        _can+13, 1, 1
0x90E8	0xE004      	BZ          L__validadora_checkTarjeta978
0x90EA	0x0102      	MOVLB       2
0x90EC	0x53D3      	MOVF        _canSynchrony, 1, 1
0x90EE	0xE001      	BZ          L__validadora_checkTarjeta978
0x90F0	0xD004      	BRA         L_validadora_checkTarjeta713
L__validadora_checkTarjeta978:
0x90F2	0x0E2D      	MOVLW       45
0x90F4	0x0105      	MOVLB       5
0x90F6	0x6F28      	MOVWF       ?FLOC___validadora_checkTarjetaT2832, 1
0x90F8	0xD003      	BRA         L_validadora_checkTarjeta714
L_validadora_checkTarjeta713:
0x90FA	0x0105      	MOVLB       5
0x90FC	0x0E4F      	MOVLW       79
0x90FE	0x6F28      	MOVWF       ?FLOC___validadora_checkTarjetaT2832, 1
L_validadora_checkTarjeta714:
0x9100	0xF52AC528  	MOVFF       ?FLOC___validadora_checkTarjetaT2832, validadora_checkTarjeta_estatus_L0
;Validadora.c,908 :: 		mysql_write(tablePrepago, prepagoEstatus, fila, estatus, false);
0x9104	0x0E9A      	MOVLW       _tablePrepago
0x9106	0x6F78      	MOVWF       FARG_mysql_write_name, 1
0x9108	0x0E02      	MOVLW       hi_addr(_tablePrepago)
0x910A	0x6F79      	MOVWF       FARG_mysql_write_name+1, 1
0x910C	0x0E92      	MOVLW       _prepagoEstatus
0x910E	0x6F7A      	MOVWF       FARG_mysql_write_column, 1
0x9110	0x0E02      	MOVLW       hi_addr(_prepagoEstatus)
0x9112	0x6F7B      	MOVWF       FARG_mysql_write_column+1, 1
0x9114	0xF57CC475  	MOVFF       validadora_checkTarjeta_fila_L0, FARG_mysql_write_fila
0x9118	0xF57DC476  	MOVFF       validadora_checkTarjeta_fila_L0+1, FARG_mysql_write_fila+1
0x911C	0xF57EC528  	MOVFF       ?FLOC___validadora_checkTarjetaT2832, FARG_mysql_write_value
0x9120	0x0E00      	MOVLW       0
0x9122	0x6F7F      	MOVWF       FARG_mysql_write_value+1, 1
0x9124	0x6F80      	MOVWF       FARG_mysql_write_value+2, 1
0x9126	0x6F81      	MOVWF       FARG_mysql_write_value+3, 1
0x9128	0x6B82      	CLRF        FARG_mysql_write_endWrite, 1
0x912A	0xF014EC20  	CALL        _mysql_write, 0
;Validadora.c,910 :: 		DS1307_read(&myRTC, false);   //Fecha actual de corte
0x912E	0x0E77      	MOVLW       _myRTC
0x9130	0x0105      	MOVLB       5
0x9132	0x6F78      	MOVWF       FARG_DS1307_read_myDS, 1
0x9134	0x0E04      	MOVLW       hi_addr(_myRTC)
0x9136	0x6F79      	MOVWF       FARG_DS1307_read_myDS+1, 1
0x9138	0x6B7A      	CLRF        FARG_DS1307_read_formatComplet, 1
0x913A	0xF010ECF9  	CALL        _DS1307_read, 0
;Validadora.c,911 :: 		string_cpyn(msjConst, &myRTC.time[1], 6);
0x913E	0x0E12      	MOVLW       _msjConst
0x9140	0x6F78      	MOVWF       FARG_string_cpyn_destino, 1
0x9142	0x0E05      	MOVLW       hi_addr(_msjConst)
0x9144	0x6F79      	MOVWF       FARG_string_cpyn_destino+1, 1
0x9146	0x0E7F      	MOVLW       _myRTC+8
0x9148	0x6F7A      	MOVWF       FARG_string_cpyn_origen, 1
0x914A	0x0E04      	MOVLW       hi_addr(_myRTC+8)
0x914C	0x6F7B      	MOVWF       FARG_string_cpyn_origen+1, 1
0x914E	0x0E06      	MOVLW       6
0x9150	0x6F7C      	MOVWF       FARG_string_cpyn_size, 1
0x9152	0xF00DEC35  	CALL        _string_cpyn, 0
;Validadora.c,912 :: 		seconds = DS1307_getSeconds(msjConst);
0x9156	0x0E12      	MOVLW       _msjConst
0x9158	0x6F54      	MOVWF       FARG_DS1307_getSeconds_HHMMSS, 1
0x915A	0x0E05      	MOVLW       hi_addr(_msjConst)
0x915C	0x6F55      	MOVWF       FARG_DS1307_getSeconds_HHMMSS+1, 1
0x915E	0xF01DECC0  	CALL        _DS1307_getSeconds, 0
0x9162	0xF534C000  	MOVFF       R0, validadora_checkTarjeta_seconds_L0
0x9166	0xF535C001  	MOVFF       R1, validadora_checkTarjeta_seconds_L0+1
0x916A	0xF536C002  	MOVFF       R2, validadora_checkTarjeta_seconds_L0+2
0x916E	0xF537C003  	MOVFF       R3, validadora_checkTarjeta_seconds_L0+3
;Validadora.c,914 :: 		string_cpyn(msjconst, fecha, 6);  //Obtener fecha
0x9172	0x0E12      	MOVLW       _msjConst
0x9174	0x6F78      	MOVWF       FARG_string_cpyn_destino, 1
0x9176	0x0E05      	MOVLW       hi_addr(_msjConst)
0x9178	0x6F79      	MOVWF       FARG_string_cpyn_destino+1, 1
0x917A	0x0E38      	MOVLW       validadora_checkTarjeta_fecha_L0
0x917C	0x6F7A      	MOVWF       FARG_string_cpyn_origen, 1
0x917E	0x0E05      	MOVLW       hi_addr(validadora_checkTarjeta_fecha_L0)
0x9180	0x6F7B      	MOVWF       FARG_string_cpyn_origen+1, 1
0x9182	0x0E06      	MOVLW       6
0x9184	0x6F7C      	MOVWF       FARG_string_cpyn_size, 1
0x9186	0xF00DEC35  	CALL        _string_cpyn, 0
;Validadora.c,915 :: 		seconds -= DS1307_getSeconds(msjConst);
0x918A	0x0E12      	MOVLW       _msjConst
0x918C	0x6F54      	MOVWF       FARG_DS1307_getSeconds_HHMMSS, 1
0x918E	0x0E05      	MOVLW       hi_addr(_msjConst)
0x9190	0x6F55      	MOVWF       FARG_DS1307_getSeconds_HHMMSS+1, 1
0x9192	0xF01DECC0  	CALL        _DS1307_getSeconds, 0
0x9196	0xF004C534  	MOVFF       validadora_checkTarjeta_seconds_L0, R4
0x919A	0xF005C535  	MOVFF       validadora_checkTarjeta_seconds_L0+1, R5
0x919E	0xF006C536  	MOVFF       validadora_checkTarjeta_seconds_L0+2, R6
0x91A2	0xF007C537  	MOVFF       validadora_checkTarjeta_seconds_L0+3, R7
0x91A6	0x5000      	MOVF        R0, 0 
0x91A8	0x5E04      	SUBWF       R4, 1 
0x91AA	0x5001      	MOVF        R1, 0 
0x91AC	0x5A05      	SUBWFB      R5, 1 
0x91AE	0x5002      	MOVF        R2, 0 
0x91B0	0x5A06      	SUBWFB      R6, 1 
0x91B2	0x5003      	MOVF        R3, 0 
0x91B4	0x5A07      	SUBWFB      R7, 1 
0x91B6	0xF534C004  	MOVFF       R4, validadora_checkTarjeta_seconds_L0
0x91BA	0xF535C005  	MOVFF       R5, validadora_checkTarjeta_seconds_L0+1
0x91BE	0xF536C006  	MOVFF       R6, validadora_checkTarjeta_seconds_L0+2
0x91C2	0xF537C007  	MOVFF       R7, validadora_checkTarjeta_seconds_L0+3
;Validadora.c,916 :: 		saldo -= clamp(seconds, 0, 999999); //No exceder 24hrs
0x91C6	0xF554C004  	MOVFF       R4, FARG_clamp_valor
0x91CA	0xF555C005  	MOVFF       R5, FARG_clamp_valor+1
0x91CE	0xF556C006  	MOVFF       R6, FARG_clamp_valor+2
0x91D2	0xF557C007  	MOVFF       R7, FARG_clamp_valor+3
0x91D6	0x6B58      	CLRF        FARG_clamp_min, 1
0x91D8	0x6B59      	CLRF        FARG_clamp_min+1, 1
0x91DA	0x6B5A      	CLRF        FARG_clamp_min+2, 1
0x91DC	0x6B5B      	CLRF        FARG_clamp_min+3, 1
0x91DE	0x0E3F      	MOVLW       63
0x91E0	0x6F5C      	MOVWF       FARG_clamp_max, 1
0x91E2	0x0E42      	MOVLW       66
0x91E4	0x6F5D      	MOVWF       FARG_clamp_max+1, 1
0x91E6	0x0E0F      	MOVLW       15
0x91E8	0x6F5E      	MOVWF       FARG_clamp_max+2, 1
0x91EA	0x0E00      	MOVLW       0
0x91EC	0x6F5F      	MOVWF       FARG_clamp_max+3, 1
0x91EE	0xF019EC7E  	CALL        _clamp, 0
0x91F2	0xF004C530  	MOVFF       validadora_checkTarjeta_saldo_L0, R4
0x91F6	0xF005C531  	MOVFF       validadora_checkTarjeta_saldo_L0+1, R5
0x91FA	0xF006C532  	MOVFF       validadora_checkTarjeta_saldo_L0+2, R6
0x91FE	0xF007C533  	MOVFF       validadora_checkTarjeta_saldo_L0+3, R7
0x9202	0x5000      	MOVF        R0, 0 
0x9204	0x5E04      	SUBWF       R4, 1 
0x9206	0x5001      	MOVF        R1, 0 
0x9208	0x5A05      	SUBWFB      R5, 1 
0x920A	0x5002      	MOVF        R2, 0 
0x920C	0x5A06      	SUBWFB      R6, 1 
0x920E	0x5003      	MOVF        R3, 0 
0x9210	0x5A07      	SUBWFB      R7, 1 
0x9212	0xF530C004  	MOVFF       R4, validadora_checkTarjeta_saldo_L0
0x9216	0xF531C005  	MOVFF       R5, validadora_checkTarjeta_saldo_L0+1
0x921A	0xF532C006  	MOVFF       R6, validadora_checkTarjeta_saldo_L0+2
0x921E	0xF533C007  	MOVFF       R7, validadora_checkTarjeta_saldo_L0+3
;Validadora.c,917 :: 		saldo /= 3600;  //Redondea en horas
0x9222	0xF000C004  	MOVFF       R4, R0
0x9226	0xF001C005  	MOVFF       R5, R1
0x922A	0xF002C006  	MOVFF       R6, R2
0x922E	0xF003C007  	MOVFF       R7, R3
0x9232	0x0E10      	MOVLW       16
0x9234	0x6E04      	MOVWF       R4 
0x9236	0x0E0E      	MOVLW       14
0x9238	0x6E05      	MOVWF       R5 
0x923A	0x0E00      	MOVLW       0
0x923C	0x6E06      	MOVWF       R6 
0x923E	0x6E07      	MOVWF       R7 
0x9240	0xF002ECEB  	CALL        _Div_32x32_S, 0
0x9244	0xF530C000  	MOVFF       R0, validadora_checkTarjeta_saldo_L0
0x9248	0xF531C001  	MOVFF       R1, validadora_checkTarjeta_saldo_L0+1
0x924C	0xF532C002  	MOVFF       R2, validadora_checkTarjeta_saldo_L0+2
0x9250	0xF533C003  	MOVFF       R3, validadora_checkTarjeta_saldo_L0+3
;Validadora.c,918 :: 		saldo *= 3600;  //Obtiene las horas totales
0x9254	0x0E10      	MOVLW       16
0x9256	0x6E04      	MOVWF       R4 
0x9258	0x0E0E      	MOVLW       14
0x925A	0x6E05      	MOVWF       R5 
0x925C	0x0E00      	MOVLW       0
0x925E	0x6E06      	MOVWF       R6 
0x9260	0x6E07      	MOVWF       R7 
0x9262	0xF004EC29  	CALL        _Mul_32x32_U, 0
0x9266	0xF530C000  	MOVFF       R0, validadora_checkTarjeta_saldo_L0
0x926A	0xF531C001  	MOVFF       R1, validadora_checkTarjeta_saldo_L0+1
0x926E	0xF532C002  	MOVFF       R2, validadora_checkTarjeta_saldo_L0+2
0x9272	0xF533C003  	MOVFF       R3, validadora_checkTarjeta_saldo_L0+3
;Validadora.c,920 :: 		mysql_write(tablePrepago, prepagoSaldo, fila, saldo, false);
0x9276	0x0E9A      	MOVLW       _tablePrepago
0x9278	0x0105      	MOVLB       5
0x927A	0x6F78      	MOVWF       FARG_mysql_write_name, 1
0x927C	0x0E02      	MOVLW       hi_addr(_tablePrepago)
0x927E	0x6F79      	MOVWF       FARG_mysql_write_name+1, 1
0x9280	0x0EA2      	MOVLW       _prepagoSaldo
0x9282	0x6F7A      	MOVWF       FARG_mysql_write_column, 1
0x9284	0x0E02      	MOVLW       hi_addr(_prepagoSaldo)
0x9286	0x6F7B      	MOVWF       FARG_mysql_write_column+1, 1
0x9288	0xF57CC475  	MOVFF       validadora_checkTarjeta_fila_L0, FARG_mysql_write_fila
0x928C	0xF57DC476  	MOVFF       validadora_checkTarjeta_fila_L0+1, FARG_mysql_write_fila+1
0x9290	0xF57EC000  	MOVFF       R0, FARG_mysql_write_value
0x9294	0xF57FC001  	MOVFF       R1, FARG_mysql_write_value+1
0x9298	0xF580C002  	MOVFF       R2, FARG_mysql_write_value+2
0x929C	0xF581C003  	MOVFF       R3, FARG_mysql_write_value+3
0x92A0	0x6B82      	CLRF        FARG_mysql_write_endWrite, 1
0x92A2	0xF014EC20  	CALL        _mysql_write, 0
;Validadora.c,923 :: 		lcd_clean_row(2);
0x92A6	0x0E02      	MOVLW       2
0x92A8	0x0105      	MOVLB       5
0x92AA	0x6F78      	MOVWF       FARG_lcd_clean_row_fila, 1
0x92AC	0xF00FECA1  	CALL        _lcd_clean_row, 0
;Validadora.c,924 :: 		lcd_clean_row(3);
0x92B0	0x0E03      	MOVLW       3
0x92B2	0x6F78      	MOVWF       FARG_lcd_clean_row_fila, 1
0x92B4	0xF00FECA1  	CALL        _lcd_clean_row, 0
;Validadora.c,925 :: 		lcd_out(2,1,"Acceso aceptado");
0x92B8	0x0E02      	MOVLW       2
0x92BA	0x6F78      	MOVWF       FARG_Lcd_Out_row, 1
0x92BC	0x0E01      	MOVLW       1
0x92BE	0x6F79      	MOVWF       FARG_Lcd_Out_column, 1
0x92C0	0x0E59      	MOVLW       ?lstr17_Validadora
0x92C2	0x6F7A      	MOVWF       FARG_Lcd_Out_text, 1
0x92C4	0x0E00      	MOVLW       hi_addr(?lstr17_Validadora)
0x92C6	0x6F7B      	MOVWF       FARG_Lcd_Out_text+1, 1
0x92C8	0xF012EC66  	CALL        _Lcd_Out, 0
;Validadora.c,926 :: 		lcd_out(3,1,"Saldo(hrs): ");
0x92CC	0x0E03      	MOVLW       3
0x92CE	0x0105      	MOVLB       5
0x92D0	0x6F78      	MOVWF       FARG_Lcd_Out_row, 1
0x92D2	0x0E01      	MOVLW       1
0x92D4	0x6F79      	MOVWF       FARG_Lcd_Out_column, 1
0x92D6	0x0E7A      	MOVLW       ?lstr18_Validadora
0x92D8	0x6F7A      	MOVWF       FARG_Lcd_Out_text, 1
0x92DA	0x0E00      	MOVLW       hi_addr(?lstr18_Validadora)
0x92DC	0x6F7B      	MOVWF       FARG_Lcd_Out_text+1, 1
0x92DE	0xF012EC66  	CALL        _Lcd_Out, 0
;Validadora.c,927 :: 		bytetostr(saldo/3600, msjConst);
0x92E2	0x0E10      	MOVLW       16
0x92E4	0x6E04      	MOVWF       R4 
0x92E6	0x0E0E      	MOVLW       14
0x92E8	0x6E05      	MOVWF       R5 
0x92EA	0x0E00      	MOVLW       0
0x92EC	0x6E06      	MOVWF       R6 
0x92EE	0x6E07      	MOVWF       R7 
0x92F0	0xF000C530  	MOVFF       validadora_checkTarjeta_saldo_L0, R0
0x92F4	0xF001C531  	MOVFF       validadora_checkTarjeta_saldo_L0+1, R1
0x92F8	0xF002C532  	MOVFF       validadora_checkTarjeta_saldo_L0+2, R2
0x92FC	0xF003C533  	MOVFF       validadora_checkTarjeta_saldo_L0+3, R3
0x9300	0xF002ECEB  	CALL        _Div_32x32_S, 0
0x9304	0xF546C000  	MOVFF       R0, FARG_ByteToStr_input
0x9308	0x0E12      	MOVLW       _msjConst
0x930A	0x0105      	MOVLB       5
0x930C	0x6F47      	MOVWF       FARG_ByteToStr_output, 1
0x930E	0x0E05      	MOVLW       hi_addr(_msjConst)
0x9310	0x6F48      	MOVWF       FARG_ByteToStr_output+1, 1
0x9312	0xF03AEC8A  	CALL        _ByteToStr, 0
;Validadora.c,928 :: 		lcd_out(3,13,msjConst);
0x9316	0x0E03      	MOVLW       3
0x9318	0x6F78      	MOVWF       FARG_Lcd_Out_row, 1
0x931A	0x0E0D      	MOVLW       13
0x931C	0x6F79      	MOVWF       FARG_Lcd_Out_column, 1
0x931E	0x0E12      	MOVLW       _msjConst
0x9320	0x6F7A      	MOVWF       FARG_Lcd_Out_text, 1
0x9322	0x0E05      	MOVLW       hi_addr(_msjConst)
0x9324	0x6F7B      	MOVWF       FARG_Lcd_Out_text+1, 1
0x9326	0xF012EC66  	CALL        _Lcd_Out, 0
;Validadora.c,945 :: 		}else{
0x932A	0xD035      	BRA         L_validadora_checkTarjeta715
L_validadora_checkTarjeta707:
;Validadora.c,946 :: 		if(saldo < 3600){
0x932C	0x0E80      	MOVLW       128
0x932E	0x0105      	MOVLB       5
0x9330	0x1933      	XORWF       validadora_checkTarjeta_saldo_L0+3, 0, 1
0x9332	0x6E00      	MOVWF       R0 
0x9334	0x0E80      	MOVLW       128
0x9336	0x5C00      	SUBWF       R0, 0 
0x9338	0xE108      	BNZ         L__validadora_checkTarjeta1342
0x933A	0x0E00      	MOVLW       0
0x933C	0x5D32      	SUBWF       validadora_checkTarjeta_saldo_L0+2, 0, 1
0x933E	0xE105      	BNZ         L__validadora_checkTarjeta1342
0x9340	0x0E0E      	MOVLW       14
0x9342	0x5D31      	SUBWF       validadora_checkTarjeta_saldo_L0+1, 0, 1
0x9344	0xE102      	BNZ         L__validadora_checkTarjeta1342
0x9346	0x0E10      	MOVLW       16
0x9348	0x5D30      	SUBWF       validadora_checkTarjeta_saldo_L0, 0, 1
L__validadora_checkTarjeta1342:
0x934A	0xE211      	BC          L_validadora_checkTarjeta716
;Validadora.c,947 :: 		acceso[1] = TPV_SIN_SALDO;  //Sin saldo
0x934C	0x0E53      	MOVLW       83
0x934E	0x6F2C      	MOVWF       validadora_checkTarjeta_acceso_L0+1, 1
;Validadora.c,948 :: 		lcd_clean_row(2);
0x9350	0x0E02      	MOVLW       2
0x9352	0x6F78      	MOVWF       FARG_lcd_clean_row_fila, 1
0x9354	0xF00FECA1  	CALL        _lcd_clean_row, 0
;Validadora.c,949 :: 		lcd_out(2,1,"Saldo agotado");
0x9358	0x0E02      	MOVLW       2
0x935A	0x6F78      	MOVWF       FARG_Lcd_Out_row, 1
0x935C	0x0E01      	MOVLW       1
0x935E	0x6F79      	MOVWF       FARG_Lcd_Out_column, 1
0x9360	0x0E6C      	MOVLW       ?lstr19_Validadora
0x9362	0x6F7A      	MOVWF       FARG_Lcd_Out_text, 1
0x9364	0x0E00      	MOVLW       hi_addr(?lstr19_Validadora)
0x9366	0x6F7B      	MOVWF       FARG_Lcd_Out_text+1, 1
0x9368	0xF012EC66  	CALL        _Lcd_Out, 0
;Validadora.c,953 :: 		}else if(estatus == ESTATUS_MOD){
0x936C	0xD014      	BRA         L_validadora_checkTarjeta717
L_validadora_checkTarjeta716:
0x936E	0x0105      	MOVLB       5
0x9370	0x512A      	MOVF        validadora_checkTarjeta_estatus_L0, 0, 1
0x9372	0x0A4F      	XORLW       79
0x9374	0xE110      	BNZ         L_validadora_checkTarjeta718
;Validadora.c,954 :: 		acceso[2] = TPV_PASSBACK;   //Estado del passback
0x9376	0x0E50      	MOVLW       80
0x9378	0x6F2D      	MOVWF       validadora_checkTarjeta_acceso_L0+2, 1
;Validadora.c,955 :: 		lcd_clean_row(2);
0x937A	0x0E02      	MOVLW       2
0x937C	0x6F78      	MOVWF       FARG_lcd_clean_row_fila, 1
0x937E	0xF00FECA1  	CALL        _lcd_clean_row, 0
;Validadora.c,956 :: 		lcd_out(2,1,"Passback activo");
0x9382	0x0E02      	MOVLW       2
0x9384	0x6F78      	MOVWF       FARG_Lcd_Out_row, 1
0x9386	0x0E01      	MOVLW       1
0x9388	0x6F79      	MOVWF       FARG_Lcd_Out_column, 1
0x938A	0x0E06      	MOVLW       ?lstr20_Validadora
0x938C	0x6F7A      	MOVWF       FARG_Lcd_Out_text, 1
0x938E	0x0E01      	MOVLW       hi_addr(?lstr20_Validadora)
0x9390	0x6F7B      	MOVWF       FARG_Lcd_Out_text+1, 1
0x9392	0xF012EC66  	CALL        _Lcd_Out, 0
;Validadora.c,960 :: 		}
L_validadora_checkTarjeta718:
L_validadora_checkTarjeta717:
;Validadora.c,961 :: 		}
L_validadora_checkTarjeta715:
;Validadora.c,963 :: 		string_add(canCommand, acceso);
0x9396	0x0E92      	MOVLW       _canCommand
0x9398	0x0105      	MOVLB       5
0x939A	0x6F78      	MOVWF       FARG_string_add_destino, 1
0x939C	0x0E04      	MOVLW       hi_addr(_canCommand)
0x939E	0x6F79      	MOVWF       FARG_string_add_destino+1, 1
0x93A0	0x0E2B      	MOVLW       validadora_checkTarjeta_acceso_L0
0x93A2	0x6F7A      	MOVWF       FARG_string_add_addEnd, 1
0x93A4	0x0E05      	MOVLW       hi_addr(validadora_checkTarjeta_acceso_L0)
0x93A6	0x6F7B      	MOVWF       FARG_string_add_addEnd+1, 1
0x93A8	0xF016EC4C  	CALL        _string_add, 0
;Validadora.c,965 :: 		string_cpyc(bufferEeprom, CAN_PREPAGO);
0x93AC	0x0ED2      	MOVLW       _bufferEeprom
0x93AE	0x6F78      	MOVWF       FARG_string_cpyc_destino, 1
0x93B0	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x93B2	0x6F79      	MOVWF       FARG_string_cpyc_destino+1, 1
0x93B4	0x0E62      	MOVLW       _CAN_PREPAGO
0x93B6	0x6F7A      	MOVWF       FARG_string_cpyc_origen, 1
0x93B8	0x0E9F      	MOVLW       hi_addr(_CAN_PREPAGO)
0x93BA	0x6F7B      	MOVWF       FARG_string_cpyc_origen+1, 1
0x93BC	0x0E00      	MOVLW       higher_addr(_CAN_PREPAGO)
0x93BE	0x6F7C      	MOVWF       FARG_string_cpyc_origen+2, 1
0x93C0	0xF014ECBC  	CALL        _string_cpyc, 0
;Validadora.c,966 :: 		numTohex(id, msjConst, 3);
0x93C4	0xF578C46F  	MOVFF       validadora_checkTarjeta_id_L0, FARG_numToHex_valor
0x93C8	0xF579C470  	MOVFF       validadora_checkTarjeta_id_L0+1, FARG_numToHex_valor+1
0x93CC	0xF57AC471  	MOVFF       validadora_checkTarjeta_id_L0+2, FARG_numToHex_valor+2
0x93D0	0xF57BC472  	MOVFF       validadora_checkTarjeta_id_L0+3, FARG_numToHex_valor+3
0x93D4	0x0E12      	MOVLW       _msjConst
0x93D6	0x6F7C      	MOVWF       FARG_numToHex_cadena, 1
0x93D8	0x0E05      	MOVLW       hi_addr(_msjConst)
0x93DA	0x6F7D      	MOVWF       FARG_numToHex_cadena+1, 1
0x93DC	0x0E03      	MOVLW       3
0x93DE	0x6F7E      	MOVWF       FARG_numToHex_bytes, 1
0x93E0	0xF00DECAD  	CALL        _numToHex, 0
;Validadora.c,967 :: 		string_add(bufferEeprom, msjConst);
0x93E4	0x0ED2      	MOVLW       _bufferEeprom
0x93E6	0x6F78      	MOVWF       FARG_string_add_destino, 1
0x93E8	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x93EA	0x6F79      	MOVWF       FARG_string_add_destino+1, 1
0x93EC	0x0E12      	MOVLW       _msjConst
0x93EE	0x6F7A      	MOVWF       FARG_string_add_addEnd, 1
0x93F0	0x0E05      	MOVLW       hi_addr(_msjConst)
0x93F2	0x6F7B      	MOVWF       FARG_string_add_addEnd+1, 1
0x93F4	0xF016EC4C  	CALL        _string_add, 0
;Validadora.c,968 :: 		if(acceso[0] == TPV_ACCESO)
0x93F8	0x512B      	MOVF        validadora_checkTarjeta_acceso_L0, 0, 1
0x93FA	0x0A41      	XORLW       65
0x93FC	0xE10D      	BNZ         L_validadora_checkTarjeta719
;Validadora.c,969 :: 		string_addc(bufferEeprom, CAN_SPECIAL_SALDO);   //CODIGO DE ACCION
0x93FE	0x0ED2      	MOVLW       _bufferEeprom
0x9400	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x9402	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x9404	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x9406	0x0E5E      	MOVLW       _CAN_SPECIAL_SALDO
0x9408	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x940A	0x0E9F      	MOVLW       hi_addr(_CAN_SPECIAL_SALDO)
0x940C	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x940E	0x0E00      	MOVLW       higher_addr(_CAN_SPECIAL_SALDO)
0x9410	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x9412	0xF00FEC40  	CALL        _string_addc, 0
0x9416	0xD00C      	BRA         L_validadora_checkTarjeta720
L_validadora_checkTarjeta719:
;Validadora.c,971 :: 		string_addc(bufferEeprom, CAN_PASSBACK);   //CODIGO DE ACCION
0x9418	0x0ED2      	MOVLW       _bufferEeprom
0x941A	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x941C	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x941E	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x9420	0x0E56      	MOVLW       _CAN_PASSBACK
0x9422	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x9424	0x0E9F      	MOVLW       hi_addr(_CAN_PASSBACK)
0x9426	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x9428	0x0E00      	MOVLW       higher_addr(_CAN_PASSBACK)
0x942A	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x942C	0xF00FEC40  	CALL        _string_addc, 0
L_validadora_checkTarjeta720:
;Validadora.c,972 :: 		numToString(fila, msjConst, 4);
0x9430	0xF590C475  	MOVFF       validadora_checkTarjeta_fila_L0, FARG_numToString_valor
0x9434	0xF591C476  	MOVFF       validadora_checkTarjeta_fila_L0+1, FARG_numToString_valor+1
0x9438	0x0E00      	MOVLW       0
0x943A	0x0104      	MOVLB       4
0x943C	0xBF76      	BTFSC       validadora_checkTarjeta_fila_L0+1, 7, 1
0x943E	0x0EFF      	MOVLW       255
0x9440	0x0105      	MOVLB       5
0x9442	0x6F92      	MOVWF       FARG_numToString_valor+2, 1
0x9444	0x6F93      	MOVWF       FARG_numToString_valor+3, 1
0x9446	0x0E12      	MOVLW       _msjConst
0x9448	0x6F94      	MOVWF       FARG_numToString_cadena, 1
0x944A	0x0E05      	MOVLW       hi_addr(_msjConst)
0x944C	0x6F95      	MOVWF       FARG_numToString_cadena+1, 1
0x944E	0x0E04      	MOVLW       4
0x9450	0x6F96      	MOVWF       FARG_numToString_digitos, 1
0x9452	0xF004EC52  	CALL        _numToString, 0
;Validadora.c,973 :: 		string_add(bufferEeprom, msjConst);
0x9456	0x0ED2      	MOVLW       _bufferEeprom
0x9458	0x0105      	MOVLB       5
0x945A	0x6F78      	MOVWF       FARG_string_add_destino, 1
0x945C	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x945E	0x6F79      	MOVWF       FARG_string_add_destino+1, 1
0x9460	0x0E12      	MOVLW       _msjConst
0x9462	0x6F7A      	MOVWF       FARG_string_add_addEnd, 1
0x9464	0x0E05      	MOVLW       hi_addr(_msjConst)
0x9466	0x6F7B      	MOVWF       FARG_string_add_addEnd+1, 1
0x9468	0xF016EC4C  	CALL        _string_add, 0
;Validadora.c,975 :: 		string_push(bufferEeprom, estatus);
0x946C	0x0ED2      	MOVLW       _bufferEeprom
0x946E	0x6F78      	MOVWF       FARG_string_push_texto, 1
0x9470	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x9472	0x6F79      	MOVWF       FARG_string_push_texto+1, 1
0x9474	0xF57AC52A  	MOVFF       validadora_checkTarjeta_estatus_L0, FARG_string_push_caracter
0x9478	0xF014ECEF  	CALL        _string_push, 0
;Validadora.c,977 :: 		numToHex(saldo, msjConst, 4);
0x947C	0xF578C530  	MOVFF       validadora_checkTarjeta_saldo_L0, FARG_numToHex_valor
0x9480	0xF579C531  	MOVFF       validadora_checkTarjeta_saldo_L0+1, FARG_numToHex_valor+1
0x9484	0xF57AC532  	MOVFF       validadora_checkTarjeta_saldo_L0+2, FARG_numToHex_valor+2
0x9488	0xF57BC533  	MOVFF       validadora_checkTarjeta_saldo_L0+3, FARG_numToHex_valor+3
0x948C	0x0E12      	MOVLW       _msjConst
0x948E	0x6F7C      	MOVWF       FARG_numToHex_cadena, 1
0x9490	0x0E05      	MOVLW       hi_addr(_msjConst)
0x9492	0x6F7D      	MOVWF       FARG_numToHex_cadena+1, 1
0x9494	0x0E04      	MOVLW       4
0x9496	0x6F7E      	MOVWF       FARG_numToHex_bytes, 1
0x9498	0xF00DECAD  	CALL        _numToHex, 0
;Validadora.c,978 :: 		string_add(bufferEeprom, msjConst);
0x949C	0x0ED2      	MOVLW       _bufferEeprom
0x949E	0x6F78      	MOVWF       FARG_string_add_destino, 1
0x94A0	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x94A2	0x6F79      	MOVWF       FARG_string_add_destino+1, 1
0x94A4	0x0E12      	MOVLW       _msjConst
0x94A6	0x6F7A      	MOVWF       FARG_string_add_addEnd, 1
0x94A8	0x0E05      	MOVLW       hi_addr(_msjConst)
0x94AA	0x6F7B      	MOVWF       FARG_string_add_addEnd+1, 1
0x94AC	0xF016EC4C  	CALL        _string_add, 0
;Validadora.c,980 :: 		buffer_save_send(true, bufferEeprom);
0x94B0	0x0E01      	MOVLW       1
0x94B2	0x6F78      	MOVWF       FARG_buffer_save_send_guardar, 1
0x94B4	0x0ED2      	MOVLW       _bufferEeprom
0x94B6	0x6F79      	MOVWF       FARG_buffer_save_send_buffer, 1
0x94B8	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x94BA	0x6F7A      	MOVWF       FARG_buffer_save_send_buffer+1, 1
0x94BC	0xF00FECCD  	CALL        _buffer_save_send, 0
;Validadora.c,981 :: 		}else if(!mysql_search_forced(tableKeyOutNip, keyOutNip, nip, &fila)){
0x94C0	0xD19B      	BRA         L_validadora_checkTarjeta721
L_validadora_checkTarjeta702:
0x94C2	0x0EFF      	MOVLW       _tableKeyOutNip
0x94C4	0x0105      	MOVLB       5
0x94C6	0x6F78      	MOVWF       FARG_mysql_search_forced_tabla, 1
0x94C8	0x0E00      	MOVLW       hi_addr(_tableKeyOutNip)
0x94CA	0x6F79      	MOVWF       FARG_mysql_search_forced_tabla+1, 1
0x94CC	0x0E1E      	MOVLW       _keyOutNip
0x94CE	0x6F7A      	MOVWF       FARG_mysql_search_forced_columna, 1
0x94D0	0x0E01      	MOVLW       hi_addr(_keyOutNip)
0x94D2	0x6F7B      	MOVWF       FARG_mysql_search_forced_columna+1, 1
0x94D4	0xF57CC473  	MOVFF       validadora_checkTarjeta_nip_L0, FARG_mysql_search_forced_buscar
0x94D8	0xF57DC474  	MOVFF       validadora_checkTarjeta_nip_L0+1, FARG_mysql_search_forced_buscar+1
0x94DC	0x0E00      	MOVLW       0
0x94DE	0x0104      	MOVLB       4
0x94E0	0xBF74      	BTFSC       validadora_checkTarjeta_nip_L0+1, 7, 1
0x94E2	0x0EFF      	MOVLW       255
0x94E4	0x0105      	MOVLB       5
0x94E6	0x6F7E      	MOVWF       FARG_mysql_search_forced_buscar+2, 1
0x94E8	0x6F7F      	MOVWF       FARG_mysql_search_forced_buscar+3, 1
0x94EA	0x0E75      	MOVLW       validadora_checkTarjeta_fila_L0
0x94EC	0x6F80      	MOVWF       FARG_mysql_search_forced_fila, 1
0x94EE	0x0E04      	MOVLW       hi_addr(validadora_checkTarjeta_fila_L0)
0x94F0	0x6F81      	MOVWF       FARG_mysql_search_forced_fila+1, 1
0x94F2	0xF00BEC0D  	CALL        _mysql_search_forced, 0
0x94F6	0x5200      	MOVF        R0, 1 
0x94F8	0xA4D8      	BTFSS       STATUS, 2 
0x94FA	0xD162      	BRA         L_validadora_checkTarjeta722
;Validadora.c,983 :: 		canCommand[3] = CAN_KEY[0];
0x94FC	0x0E4B      	MOVLW       75
0x94FE	0x0104      	MOVLB       4
0x9500	0x6F95      	MOVWF       _canCommand+3, 1
;Validadora.c,984 :: 		canCommand[4] = CAN_KEY[1];
0x9502	0x0E45      	MOVLW       69
0x9504	0x6F96      	MOVWF       _canCommand+4, 1
;Validadora.c,985 :: 		canCommand[5] = CAN_KEY[2];
0x9506	0x0E59      	MOVLW       89
0x9508	0x6F97      	MOVWF       _canCommand+5, 1
;Validadora.c,986 :: 		mysql_read_forced(tableKeyOutNip, keyOutEstatus, fila, &estatus);
0x950A	0x0EFF      	MOVLW       _tableKeyOutNip
0x950C	0x0105      	MOVLB       5
0x950E	0x6F86      	MOVWF       FARG_mysql_read_forced_name, 1
0x9510	0x0E00      	MOVLW       hi_addr(_tableKeyOutNip)
0x9512	0x6F87      	MOVWF       FARG_mysql_read_forced_name+1, 1
0x9514	0x0E16      	MOVLW       _keyOutEstatus
0x9516	0x6F88      	MOVWF       FARG_mysql_read_forced_column, 1
0x9518	0x0E01      	MOVLW       hi_addr(_keyOutEstatus)
0x951A	0x6F89      	MOVWF       FARG_mysql_read_forced_column+1, 1
0x951C	0xF58AC475  	MOVFF       validadora_checkTarjeta_fila_L0, FARG_mysql_read_forced_fila
0x9520	0xF58BC476  	MOVFF       validadora_checkTarjeta_fila_L0+1, FARG_mysql_read_forced_fila+1
0x9524	0x0E2A      	MOVLW       validadora_checkTarjeta_estatus_L0
0x9526	0x6F8C      	MOVWF       FARG_mysql_read_forced_result, 1
0x9528	0x0E05      	MOVLW       hi_addr(validadora_checkTarjeta_estatus_L0)
0x952A	0x6F8D      	MOVWF       FARG_mysql_read_forced_result+1, 1
0x952C	0xF008EC2A  	CALL        _mysql_read_forced, 0
;Validadora.c,987 :: 		mysql_read_forced(tableKeyOutNip, keyOutDate, fila, fecha);
0x9530	0x0EFF      	MOVLW       _tableKeyOutNip
0x9532	0x0105      	MOVLB       5
0x9534	0x6F86      	MOVWF       FARG_mysql_read_forced_name, 1
0x9536	0x0E00      	MOVLW       hi_addr(_tableKeyOutNip)
0x9538	0x6F87      	MOVWF       FARG_mysql_read_forced_name+1, 1
0x953A	0x0EFA      	MOVLW       _keyOutDate
0x953C	0x6F88      	MOVWF       FARG_mysql_read_forced_column, 1
0x953E	0x0E00      	MOVLW       hi_addr(_keyOutDate)
0x9540	0x6F89      	MOVWF       FARG_mysql_read_forced_column+1, 1
0x9542	0xF58AC475  	MOVFF       validadora_checkTarjeta_fila_L0, FARG_mysql_read_forced_fila
0x9546	0xF58BC476  	MOVFF       validadora_checkTarjeta_fila_L0+1, FARG_mysql_read_forced_fila+1
0x954A	0x0E38      	MOVLW       validadora_checkTarjeta_fecha_L0
0x954C	0x6F8C      	MOVWF       FARG_mysql_read_forced_result, 1
0x954E	0x0E05      	MOVLW       hi_addr(validadora_checkTarjeta_fecha_L0)
0x9550	0x6F8D      	MOVWF       FARG_mysql_read_forced_result+1, 1
0x9552	0xF008EC2A  	CALL        _mysql_read_forced, 0
;Validadora.c,988 :: 		fecha[12] = 0; //Agregar final de cadena, proteccion
0x9556	0x0105      	MOVLB       5
0x9558	0x6B44      	CLRF        validadora_checkTarjeta_fecha_L0+12, 1
;Validadora.c,989 :: 		DS1307_read(&myRTC, false);
0x955A	0x0E77      	MOVLW       _myRTC
0x955C	0x6F78      	MOVWF       FARG_DS1307_read_myDS, 1
0x955E	0x0E04      	MOVLW       hi_addr(_myRTC)
0x9560	0x6F79      	MOVWF       FARG_DS1307_read_myDS+1, 1
0x9562	0x6B7A      	CLRF        FARG_DS1307_read_formatComplet, 1
0x9564	0xF010ECF9  	CALL        _DS1307_read, 0
;Validadora.c,998 :: 		string_cpyn(msjConst, &myRTC.time[1], 6);
0x9568	0x0E12      	MOVLW       _msjConst
0x956A	0x6F78      	MOVWF       FARG_string_cpyn_destino, 1
0x956C	0x0E05      	MOVLW       hi_addr(_msjConst)
0x956E	0x6F79      	MOVWF       FARG_string_cpyn_destino+1, 1
0x9570	0x0E7F      	MOVLW       _myRTC+8
0x9572	0x6F7A      	MOVWF       FARG_string_cpyn_origen, 1
0x9574	0x0E04      	MOVLW       hi_addr(_myRTC+8)
0x9576	0x6F7B      	MOVWF       FARG_string_cpyn_origen+1, 1
0x9578	0x0E06      	MOVLW       6
0x957A	0x6F7C      	MOVWF       FARG_string_cpyn_size, 1
0x957C	0xF00DEC35  	CALL        _string_cpyn, 0
;Validadora.c,999 :: 		seconds = DS1307_getSeconds(msjConst);
0x9580	0x0E12      	MOVLW       _msjConst
0x9582	0x6F54      	MOVWF       FARG_DS1307_getSeconds_HHMMSS, 1
0x9584	0x0E05      	MOVLW       hi_addr(_msjConst)
0x9586	0x6F55      	MOVWF       FARG_DS1307_getSeconds_HHMMSS+1, 1
0x9588	0xF01DECC0  	CALL        _DS1307_getSeconds, 0
0x958C	0xF534C000  	MOVFF       R0, validadora_checkTarjeta_seconds_L0
0x9590	0xF535C001  	MOVFF       R1, validadora_checkTarjeta_seconds_L0+1
0x9594	0xF536C002  	MOVFF       R2, validadora_checkTarjeta_seconds_L0+2
0x9598	0xF537C003  	MOVFF       R3, validadora_checkTarjeta_seconds_L0+3
;Validadora.c,1000 :: 		string_cpyn(msjConst, fecha, 6);
0x959C	0x0E12      	MOVLW       _msjConst
0x959E	0x6F78      	MOVWF       FARG_string_cpyn_destino, 1
0x95A0	0x0E05      	MOVLW       hi_addr(_msjConst)
0x95A2	0x6F79      	MOVWF       FARG_string_cpyn_destino+1, 1
0x95A4	0x0E38      	MOVLW       validadora_checkTarjeta_fecha_L0
0x95A6	0x6F7A      	MOVWF       FARG_string_cpyn_origen, 1
0x95A8	0x0E05      	MOVLW       hi_addr(validadora_checkTarjeta_fecha_L0)
0x95AA	0x6F7B      	MOVWF       FARG_string_cpyn_origen+1, 1
0x95AC	0x0E06      	MOVLW       6
0x95AE	0x6F7C      	MOVWF       FARG_string_cpyn_size, 1
0x95B0	0xF00DEC35  	CALL        _string_cpyn, 0
;Validadora.c,1001 :: 		seconds -= DS1307_getSeconds(msjConst);
0x95B4	0x0E12      	MOVLW       _msjConst
0x95B6	0x6F54      	MOVWF       FARG_DS1307_getSeconds_HHMMSS, 1
0x95B8	0x0E05      	MOVLW       hi_addr(_msjConst)
0x95BA	0x6F55      	MOVWF       FARG_DS1307_getSeconds_HHMMSS+1, 1
0x95BC	0xF01DECC0  	CALL        _DS1307_getSeconds, 0
0x95C0	0xF004C534  	MOVFF       validadora_checkTarjeta_seconds_L0, R4
0x95C4	0xF005C535  	MOVFF       validadora_checkTarjeta_seconds_L0+1, R5
0x95C8	0xF006C536  	MOVFF       validadora_checkTarjeta_seconds_L0+2, R6
0x95CC	0xF007C537  	MOVFF       validadora_checkTarjeta_seconds_L0+3, R7
0x95D0	0x5000      	MOVF        R0, 0 
0x95D2	0x5E04      	SUBWF       R4, 1 
0x95D4	0x5001      	MOVF        R1, 0 
0x95D6	0x5A05      	SUBWFB      R5, 1 
0x95D8	0x5002      	MOVF        R2, 0 
0x95DA	0x5A06      	SUBWFB      R6, 1 
0x95DC	0x5003      	MOVF        R3, 0 
0x95DE	0x5A07      	SUBWFB      R7, 1 
0x95E0	0xF534C004  	MOVFF       R4, validadora_checkTarjeta_seconds_L0
0x95E4	0xF535C005  	MOVFF       R5, validadora_checkTarjeta_seconds_L0+1
0x95E8	0xF536C006  	MOVFF       R6, validadora_checkTarjeta_seconds_L0+2
0x95EC	0xF537C007  	MOVFF       R7, validadora_checkTarjeta_seconds_L0+3
;Validadora.c,1002 :: 		seconds = clamp(seconds, 0, TOLERANCIA_OUT); //Saturar en este rango
0x95F0	0xF554C004  	MOVFF       R4, FARG_clamp_valor
0x95F4	0xF555C005  	MOVFF       R5, FARG_clamp_valor+1
0x95F8	0xF556C006  	MOVFF       R6, FARG_clamp_valor+2
0x95FC	0xF557C007  	MOVFF       R7, FARG_clamp_valor+3
0x9600	0x6B58      	CLRF        FARG_clamp_min, 1
0x9602	0x6B59      	CLRF        FARG_clamp_min+1, 1
0x9604	0x6B5A      	CLRF        FARG_clamp_min+2, 1
0x9606	0x6B5B      	CLRF        FARG_clamp_min+3, 1
0x9608	0x0E8E      	MOVLW       142
0x960A	0x6F5C      	MOVWF       FARG_clamp_max, 1
0x960C	0x0E03      	MOVLW       3
0x960E	0x6F5D      	MOVWF       FARG_clamp_max+1, 1
0x9610	0x0E00      	MOVLW       0
0x9612	0x6F5E      	MOVWF       FARG_clamp_max+2, 1
0x9614	0x6F5F      	MOVWF       FARG_clamp_max+3, 1
0x9616	0xF019EC7E  	CALL        _clamp, 0
0x961A	0xF534C000  	MOVFF       R0, validadora_checkTarjeta_seconds_L0
0x961E	0xF535C001  	MOVFF       R1, validadora_checkTarjeta_seconds_L0+1
0x9622	0xF536C002  	MOVFF       R2, validadora_checkTarjeta_seconds_L0+2
0x9626	0xF537C003  	MOVFF       R3, validadora_checkTarjeta_seconds_L0+3
;Validadora.c,1005 :: 		string_cpy(msjConst, &myRTC.time[1]);
0x962A	0x0E12      	MOVLW       _msjConst
0x962C	0x6F54      	MOVWF       FARG_string_cpy_destino, 1
0x962E	0x0E05      	MOVLW       hi_addr(_msjConst)
0x9630	0x6F55      	MOVWF       FARG_string_cpy_destino+1, 1
0x9632	0x0E7F      	MOVLW       _myRTC+8
0x9634	0x6F56      	MOVWF       FARG_string_cpy_origen, 1
0x9636	0x0E04      	MOVLW       hi_addr(_myRTC+8)
0x9638	0x6F57      	MOVWF       FARG_string_cpy_origen+1, 1
0x963A	0xF016ECD3  	CALL        _string_cpy, 0
;Validadora.c,1006 :: 		isOtherToday = !string_cmpn(&msjConst[6], &fecha[6], 2);
0x963E	0x0E18      	MOVLW       _msjConst+6
0x9640	0x6F54      	MOVWF       FARG_string_cmpn_text1, 1
0x9642	0x0E05      	MOVLW       hi_addr(_msjConst+6)
0x9644	0x6F55      	MOVWF       FARG_string_cmpn_text1+1, 1
0x9646	0x0E3E      	MOVLW       validadora_checkTarjeta_fecha_L0+6
0x9648	0x6F56      	MOVWF       FARG_string_cmpn_text2, 1
0x964A	0x0E05      	MOVLW       hi_addr(validadora_checkTarjeta_fecha_L0+6)
0x964C	0x6F57      	MOVWF       FARG_string_cmpn_text2+1, 1
0x964E	0x0E02      	MOVLW       2
0x9650	0x6F58      	MOVWF       FARG_string_cmpn_bytes, 1
0x9652	0xF01BEC5D  	CALL        _string_cmpn, 0
0x9656	0x5200      	MOVF        R0, 1 
0x9658	0x0E01      	MOVLW       1
0x965A	0xA4D8      	BTFSS       STATUS, 2 
0x965C	0x0E00      	MOVLW       0
0x965E	0x6F45      	MOVWF       validadora_checkTarjeta_isOtherToday_L0, 1
;Validadora.c,1007 :: 		isOtherToday |= !string_cmpn(&msjConst[8], &fecha[8], 2);
0x9660	0x0E1A      	MOVLW       _msjConst+8
0x9662	0x6F54      	MOVWF       FARG_string_cmpn_text1, 1
0x9664	0x0E05      	MOVLW       hi_addr(_msjConst+8)
0x9666	0x6F55      	MOVWF       FARG_string_cmpn_text1+1, 1
0x9668	0x0E40      	MOVLW       validadora_checkTarjeta_fecha_L0+8
0x966A	0x6F56      	MOVWF       FARG_string_cmpn_text2, 1
0x966C	0x0E05      	MOVLW       hi_addr(validadora_checkTarjeta_fecha_L0+8)
0x966E	0x6F57      	MOVWF       FARG_string_cmpn_text2+1, 1
0x9670	0x0E02      	MOVLW       2
0x9672	0x6F58      	MOVWF       FARG_string_cmpn_bytes, 1
0x9674	0xF01BEC5D  	CALL        _string_cmpn, 0
0x9678	0x5200      	MOVF        R0, 1 
0x967A	0x0E01      	MOVLW       1
0x967C	0xA4D8      	BTFSS       STATUS, 2 
0x967E	0x0E00      	MOVLW       0
0x9680	0x6E01      	MOVWF       R1 
0x9682	0x5001      	MOVF        R1, 0 
0x9684	0x1345      	IORWF       validadora_checkTarjeta_isOtherToday_L0, 1, 1
;Validadora.c,1008 :: 		isOtherToday |= !string_cmpn(&msjConst[10], &fecha[10], 2);
0x9686	0x0E1C      	MOVLW       _msjConst+10
0x9688	0x6F54      	MOVWF       FARG_string_cmpn_text1, 1
0x968A	0x0E05      	MOVLW       hi_addr(_msjConst+10)
0x968C	0x6F55      	MOVWF       FARG_string_cmpn_text1+1, 1
0x968E	0x0E42      	MOVLW       validadora_checkTarjeta_fecha_L0+10
0x9690	0x6F56      	MOVWF       FARG_string_cmpn_text2, 1
0x9692	0x0E05      	MOVLW       hi_addr(validadora_checkTarjeta_fecha_L0+10)
0x9694	0x6F57      	MOVWF       FARG_string_cmpn_text2+1, 1
0x9696	0x0E02      	MOVLW       2
0x9698	0x6F58      	MOVWF       FARG_string_cmpn_bytes, 1
0x969A	0xF01BEC5D  	CALL        _string_cmpn, 0
0x969E	0x5200      	MOVF        R0, 1 
0x96A0	0x0E01      	MOVLW       1
0x96A2	0xA4D8      	BTFSS       STATUS, 2 
0x96A4	0x0E00      	MOVLW       0
0x96A6	0x6E01      	MOVWF       R1 
0x96A8	0x5001      	MOVF        R1, 0 
0x96AA	0x1345      	IORWF       validadora_checkTarjeta_isOtherToday_L0, 1, 1
;Validadora.c,1011 :: 		if(estatus == '1' && seconds < TOLERANCIA_OUT && !isOtherToday){
0x96AC	0x512A      	MOVF        validadora_checkTarjeta_estatus_L0, 0, 1
0x96AE	0x0A31      	XORLW       49
0x96B0	0xE143      	BNZ         L_validadora_checkTarjeta725
0x96B2	0x0E80      	MOVLW       128
0x96B4	0x1937      	XORWF       validadora_checkTarjeta_seconds_L0+3, 0, 1
0x96B6	0x6E00      	MOVWF       R0 
0x96B8	0x0E80      	MOVLW       128
0x96BA	0x5C00      	SUBWF       R0, 0 
0x96BC	0xE108      	BNZ         L__validadora_checkTarjeta1343
0x96BE	0x0E00      	MOVLW       0
0x96C0	0x5D36      	SUBWF       validadora_checkTarjeta_seconds_L0+2, 0, 1
0x96C2	0xE105      	BNZ         L__validadora_checkTarjeta1343
0x96C4	0x0E03      	MOVLW       3
0x96C6	0x5D35      	SUBWF       validadora_checkTarjeta_seconds_L0+1, 0, 1
0x96C8	0xE102      	BNZ         L__validadora_checkTarjeta1343
0x96CA	0x0E8E      	MOVLW       142
0x96CC	0x5D34      	SUBWF       validadora_checkTarjeta_seconds_L0, 0, 1
L__validadora_checkTarjeta1343:
0x96CE	0xE234      	BC          L_validadora_checkTarjeta725
0x96D0	0x5345      	MOVF        validadora_checkTarjeta_isOtherToday_L0, 1, 1
0x96D2	0xE132      	BNZ         L_validadora_checkTarjeta725
L__validadora_checkTarjeta977:
;Validadora.c,1013 :: 		abrirBarrera = true;
0x96D4	0x0E01      	MOVLW       1
0x96D6	0x0103      	MOVLB       3
0x96D8	0x6F31      	MOVWF       _abrirBarrera, 1
;Validadora.c,1014 :: 		SALIDA_RELE1 = 1;
0x96DA	0x8A80      	BSF         PORTA, 5 
;Validadora.c,1015 :: 		SALIDA_RELE2 = 1;
0x96DC	0x8084      	BSF         PORTE, 0 
;Validadora.c,1016 :: 		timer1_reset();
0x96DE	0xF00DEC30  	CALL        _timer1_reset, 0
;Validadora.c,1017 :: 		timer1_enable(true);
0x96E2	0x0E01      	MOVLW       1
0x96E4	0x0105      	MOVLB       5
0x96E6	0x6F78      	MOVWF       FARG_timer1_enable_enable, 1
0x96E8	0xF012EC5F  	CALL        _timer1_enable, 0
;Validadora.c,1019 :: 		acceso[0] = TPV_ACCESO;    //Acceso
0x96EC	0x0E41      	MOVLW       65
0x96EE	0x6F2B      	MOVWF       validadora_checkTarjeta_acceso_L0, 1
;Validadora.c,1023 :: 		mysql_write_forced(tableKeyOutNip, keyOutEstatus, fila, "0", 1);
0x96F0	0x0EFF      	MOVLW       _tableKeyOutNip
0x96F2	0x6F86      	MOVWF       FARG_mysql_write_forced_name, 1
0x96F4	0x0E00      	MOVLW       hi_addr(_tableKeyOutNip)
0x96F6	0x6F87      	MOVWF       FARG_mysql_write_forced_name+1, 1
0x96F8	0x0E16      	MOVLW       _keyOutEstatus
0x96FA	0x6F88      	MOVWF       FARG_mysql_write_forced_column, 1
0x96FC	0x0E01      	MOVLW       hi_addr(_keyOutEstatus)
0x96FE	0x6F89      	MOVWF       FARG_mysql_write_forced_column+1, 1
0x9700	0xF58AC475  	MOVFF       validadora_checkTarjeta_fila_L0, FARG_mysql_write_forced_fila
0x9704	0xF58BC476  	MOVFF       validadora_checkTarjeta_fila_L0+1, FARG_mysql_write_forced_fila+1
0x9708	0x0ED9      	MOVLW       ?lstr21_Validadora
0x970A	0x6F8C      	MOVWF       FARG_mysql_write_forced_texto, 1
0x970C	0x0E00      	MOVLW       hi_addr(?lstr21_Validadora)
0x970E	0x6F8D      	MOVWF       FARG_mysql_write_forced_texto+1, 1
0x9710	0x0E01      	MOVLW       1
0x9712	0x6F8E      	MOVWF       FARG_mysql_write_forced_bytes, 1
0x9714	0xF008EC72  	CALL        _mysql_write_forced, 0
;Validadora.c,1024 :: 		lcd_clean_row(2);
0x9718	0x0E02      	MOVLW       2
0x971A	0x0105      	MOVLB       5
0x971C	0x6F78      	MOVWF       FARG_lcd_clean_row_fila, 1
0x971E	0xF00FECA1  	CALL        _lcd_clean_row, 0
;Validadora.c,1025 :: 		lcd_out(2,1,"NIP aceptado");
0x9722	0x0E02      	MOVLW       2
0x9724	0x6F78      	MOVWF       FARG_Lcd_Out_row, 1
0x9726	0x0E01      	MOVLW       1
0x9728	0x6F79      	MOVWF       FARG_Lcd_Out_column, 1
0x972A	0x0ECC      	MOVLW       ?lstr22_Validadora
0x972C	0x6F7A      	MOVWF       FARG_Lcd_Out_text, 1
0x972E	0x0E00      	MOVLW       hi_addr(?lstr22_Validadora)
0x9730	0x6F7B      	MOVWF       FARG_Lcd_Out_text+1, 1
0x9732	0xF012EC66  	CALL        _Lcd_Out, 0
;Validadora.c,1031 :: 		}else if(estatus == '0'){
0x9736	0xD038      	BRA         L_validadora_checkTarjeta726
L_validadora_checkTarjeta725:
0x9738	0x0105      	MOVLB       5
0x973A	0x512A      	MOVF        validadora_checkTarjeta_estatus_L0, 0, 1
0x973C	0x0A30      	XORLW       48
0x973E	0xE111      	BNZ         L_validadora_checkTarjeta727
;Validadora.c,1032 :: 		acceso[2] = TPV_PASSBACK;   //Llave ya utilizada
0x9740	0x0E50      	MOVLW       80
0x9742	0x6F2D      	MOVWF       validadora_checkTarjeta_acceso_L0+2, 1
;Validadora.c,1033 :: 		lcd_clean_row(2);
0x9744	0x0E02      	MOVLW       2
0x9746	0x6F78      	MOVWF       FARG_lcd_clean_row_fila, 1
0x9748	0xF00FECA1  	CALL        _lcd_clean_row, 0
;Validadora.c,1034 :: 		lcd_out(2,1,"NIP desconocido*");
0x974C	0x0E02      	MOVLW       2
0x974E	0x6F78      	MOVWF       FARG_Lcd_Out_row, 1
0x9750	0x0E01      	MOVLW       1
0x9752	0x6F79      	MOVWF       FARG_Lcd_Out_column, 1
0x9754	0x0EE9      	MOVLW       ?lstr23_Validadora
0x9756	0x6F7A      	MOVWF       FARG_Lcd_Out_text, 1
0x9758	0x0E00      	MOVLW       hi_addr(?lstr23_Validadora)
0x975A	0x6F7B      	MOVWF       FARG_Lcd_Out_text+1, 1
0x975C	0xF012EC66  	CALL        _Lcd_Out, 0
;Validadora.c,1040 :: 		}else if(isOtherToday || seconds >= TOLERANCIA_OUT){
0x9760	0xD023      	BRA         L_validadora_checkTarjeta728
L_validadora_checkTarjeta727:
0x9762	0x0105      	MOVLB       5
0x9764	0x5345      	MOVF        validadora_checkTarjeta_isOtherToday_L0, 1, 1
0x9766	0xE110      	BNZ         L__validadora_checkTarjeta976
0x9768	0x0E80      	MOVLW       128
0x976A	0x1937      	XORWF       validadora_checkTarjeta_seconds_L0+3, 0, 1
0x976C	0x6E00      	MOVWF       R0 
0x976E	0x0E80      	MOVLW       128
0x9770	0x5C00      	SUBWF       R0, 0 
0x9772	0xE108      	BNZ         L__validadora_checkTarjeta1344
0x9774	0x0E00      	MOVLW       0
0x9776	0x5D36      	SUBWF       validadora_checkTarjeta_seconds_L0+2, 0, 1
0x9778	0xE105      	BNZ         L__validadora_checkTarjeta1344
0x977A	0x0E03      	MOVLW       3
0x977C	0x5D35      	SUBWF       validadora_checkTarjeta_seconds_L0+1, 0, 1
0x977E	0xE102      	BNZ         L__validadora_checkTarjeta1344
0x9780	0x0E8E      	MOVLW       142
0x9782	0x5D34      	SUBWF       validadora_checkTarjeta_seconds_L0, 0, 1
L__validadora_checkTarjeta1344:
0x9784	0xE201      	BC          L__validadora_checkTarjeta976
0x9786	0xD010      	BRA         L_validadora_checkTarjeta731
L__validadora_checkTarjeta976:
;Validadora.c,1041 :: 		acceso[1] = TPV_OUT_TIME;  //FECHA EN FUERA DE RANGO
0x9788	0x0E54      	MOVLW       84
0x978A	0x6F2C      	MOVWF       validadora_checkTarjeta_acceso_L0+1, 1
;Validadora.c,1042 :: 		lcd_clean_row(2);
0x978C	0x0E02      	MOVLW       2
0x978E	0x6F78      	MOVWF       FARG_lcd_clean_row_fila, 1
0x9790	0xF00FECA1  	CALL        _lcd_clean_row, 0
;Validadora.c,1043 :: 		lcd_out(2,1,"NIP invalido*");
0x9794	0x0E02      	MOVLW       2
0x9796	0x6F78      	MOVWF       FARG_Lcd_Out_row, 1
0x9798	0x0E01      	MOVLW       1
0x979A	0x6F79      	MOVWF       FARG_Lcd_Out_column, 1
0x979C	0x0EDB      	MOVLW       ?lstr24_Validadora
0x979E	0x6F7A      	MOVWF       FARG_Lcd_Out_text, 1
0x97A0	0x0E00      	MOVLW       hi_addr(?lstr24_Validadora)
0x97A2	0x6F7B      	MOVWF       FARG_Lcd_Out_text+1, 1
0x97A4	0xF012EC66  	CALL        _Lcd_Out, 0
;Validadora.c,1047 :: 		}
L_validadora_checkTarjeta731:
L_validadora_checkTarjeta728:
L_validadora_checkTarjeta726:
;Validadora.c,1049 :: 		string_add(canCommand, acceso);
0x97A8	0x0E92      	MOVLW       _canCommand
0x97AA	0x0105      	MOVLB       5
0x97AC	0x6F78      	MOVWF       FARG_string_add_destino, 1
0x97AE	0x0E04      	MOVLW       hi_addr(_canCommand)
0x97B0	0x6F79      	MOVWF       FARG_string_add_destino+1, 1
0x97B2	0x0E2B      	MOVLW       validadora_checkTarjeta_acceso_L0
0x97B4	0x6F7A      	MOVWF       FARG_string_add_addEnd, 1
0x97B6	0x0E05      	MOVLW       hi_addr(validadora_checkTarjeta_acceso_L0)
0x97B8	0x6F7B      	MOVWF       FARG_string_add_addEnd+1, 1
0x97BA	0xF016EC4C  	CALL        _string_add, 0
;Validadora.c,1050 :: 		}else{
0x97BE	0xD01C      	BRA         L_validadora_checkTarjeta732
L_validadora_checkTarjeta722:
0x97C0	0x0105      	MOVLB       5
;Validadora.c,1051 :: 		lcd_clean_row(2);
0x97C2	0x0E02      	MOVLW       2
0x97C4	0x6F78      	MOVWF       FARG_lcd_clean_row_fila, 1
0x97C6	0xF00FECA1  	CALL        _lcd_clean_row, 0
;Validadora.c,1052 :: 		lcd_out(2,1,"Nip descnocido");
0x97CA	0x0E02      	MOVLW       2
0x97CC	0x6F78      	MOVWF       FARG_Lcd_Out_row, 1
0x97CE	0x0E01      	MOVLW       1
0x97D0	0x6F79      	MOVWF       FARG_Lcd_Out_column, 1
0x97D2	0x0E4A      	MOVLW       ?lstr25_Validadora
0x97D4	0x6F7A      	MOVWF       FARG_Lcd_Out_text, 1
0x97D6	0x0E00      	MOVLW       hi_addr(?lstr25_Validadora)
0x97D8	0x6F7B      	MOVWF       FARG_Lcd_Out_text+1, 1
0x97DA	0xF012EC66  	CALL        _Lcd_Out, 0
;Validadora.c,1056 :: 		acceso[3] = TPV_DESCONOCIDO;
0x97DE	0x0E44      	MOVLW       68
0x97E0	0x0105      	MOVLB       5
0x97E2	0x6F2E      	MOVWF       validadora_checkTarjeta_acceso_L0+3, 1
;Validadora.c,1057 :: 		string_add(canCommand,acceso);
0x97E4	0x0E92      	MOVLW       _canCommand
0x97E6	0x6F78      	MOVWF       FARG_string_add_destino, 1
0x97E8	0x0E04      	MOVLW       hi_addr(_canCommand)
0x97EA	0x6F79      	MOVWF       FARG_string_add_destino+1, 1
0x97EC	0x0E2B      	MOVLW       validadora_checkTarjeta_acceso_L0
0x97EE	0x6F7A      	MOVWF       FARG_string_add_addEnd, 1
0x97F0	0x0E05      	MOVLW       hi_addr(validadora_checkTarjeta_acceso_L0)
0x97F2	0x6F7B      	MOVWF       FARG_string_add_addEnd+1, 1
0x97F4	0xF016EC4C  	CALL        _string_add, 0
;Validadora.c,1058 :: 		}
L_validadora_checkTarjeta732:
L_validadora_checkTarjeta721:
0x97F8	0x0105      	MOVLB       5
;Validadora.c,1060 :: 		string_addc(canCommand, CAN_MODULE);    //E
0x97FA	0x0E92      	MOVLW       _canCommand
0x97FC	0x6F78      	MOVWF       FARG_string_addc_destino, 1
0x97FE	0x0E04      	MOVLW       hi_addr(_canCommand)
0x9800	0x6F79      	MOVWF       FARG_string_addc_destino+1, 1
0x9802	0x0E86      	MOVLW       _CAN_MODULE
0x9804	0x6F7A      	MOVWF       FARG_string_addc_addEnd, 1
0x9806	0x0E9F      	MOVLW       hi_addr(_CAN_MODULE)
0x9808	0x6F7B      	MOVWF       FARG_string_addc_addEnd+1, 1
0x980A	0x0E00      	MOVLW       higher_addr(_CAN_MODULE)
0x980C	0x6F7C      	MOVWF       FARG_string_addc_addEnd+2, 1
0x980E	0xF00FEC40  	CALL        _string_addc, 0
;Validadora.c,1061 :: 		numToHex(canId, msjConst, 1);
0x9812	0xF578C2ED  	MOVFF       _canId, FARG_numToHex_valor
0x9816	0x0E00      	MOVLW       0
0x9818	0x6F79      	MOVWF       FARG_numToHex_valor+1, 1
0x981A	0x6F7A      	MOVWF       FARG_numToHex_valor+2, 1
0x981C	0x6F7B      	MOVWF       FARG_numToHex_valor+3, 1
0x981E	0x0E12      	MOVLW       _msjConst
0x9820	0x6F7C      	MOVWF       FARG_numToHex_cadena, 1
0x9822	0x0E05      	MOVLW       hi_addr(_msjConst)
0x9824	0x6F7D      	MOVWF       FARG_numToHex_cadena+1, 1
0x9826	0x0E01      	MOVLW       1
0x9828	0x6F7E      	MOVWF       FARG_numToHex_bytes, 1
0x982A	0xF00DECAD  	CALL        _numToHex, 0
;Validadora.c,1062 :: 		string_add(canCommand, msjConst);       //NODO(HEX)
0x982E	0x0E92      	MOVLW       _canCommand
0x9830	0x6F78      	MOVWF       FARG_string_add_destino, 1
0x9832	0x0E04      	MOVLW       hi_addr(_canCommand)
0x9834	0x6F79      	MOVWF       FARG_string_add_destino+1, 1
0x9836	0x0E12      	MOVLW       _msjConst
0x9838	0x6F7A      	MOVWF       FARG_string_add_addEnd, 1
0x983A	0x0E05      	MOVLW       hi_addr(_msjConst)
0x983C	0x6F7B      	MOVWF       FARG_string_add_addEnd+1, 1
0x983E	0xF016EC4C  	CALL        _string_add, 0
;Validadora.c,1063 :: 		buffer_save_send(false, canCommand);
0x9842	0x6B78      	CLRF        FARG_buffer_save_send_guardar, 1
0x9844	0x0E92      	MOVLW       _canCommand
0x9846	0x6F79      	MOVWF       FARG_buffer_save_send_buffer, 1
0x9848	0x0E04      	MOVLW       hi_addr(_canCommand)
0x984A	0x6F7A      	MOVWF       FARG_buffer_save_send_buffer+1, 1
0x984C	0xF00FECCD  	CALL        _buffer_save_send, 0
;Validadora.c,1064 :: 		}
L_validadora_checkTarjeta701:
L_validadora_checkTarjeta700:
;Validadora.c,1065 :: 		}
L_end_validadora_checkTarjeta:
0x9850	0x0012      	RETURN      0
; end of _validadora_checkTarjeta
_pic_init:
;Validadora.c,302 :: 		void pic_init(){
;Validadora.c,304 :: 		OSCCON = 0x40;  //Oscilador externo
0x9852	0x0E40      	MOVLW       64
0x9854	0x6ED3      	MOVWF       OSCCON 
;Validadora.c,307 :: 		ADCON1 = 0x0F;  //Todos digitales
0x9856	0x0E0F      	MOVLW       15
0x9858	0x6EC1      	MOVWF       ADCON1 
;Validadora.c,308 :: 		CMCON = 0x07;   //Apagar los comparadores
0x985A	0x0E07      	MOVLW       7
0x985C	0x6EB4      	MOVWF       CMCON 
;Validadora.c,311 :: 		SENSOR_COCHED = 1;
0x985E	0x8095      	BSF         TRISD, 0 
;Validadora.c,312 :: 		BOTON_IMPRIMIRD = 1;
0x9860	0x8295      	BSF         TRISD, 1 
;Validadora.c,313 :: 		LED_LINKD = 0;
0x9862	0x9494      	BCF         TRISC, 2 
;Validadora.c,314 :: 		BOTON_ENTRADA1D = 1;
0x9864	0x8895      	BSF         TRISD, 4 
;Validadora.c,315 :: 		SALIDA_RELE1D = 0;
0x9866	0x9A92      	BCF         TRISA, 5 
;Validadora.c,316 :: 		SALIDA_RELE2D = 0;
0x9868	0x9096      	BCF         TRISE, 0 
;Validadora.c,317 :: 		SALIDA_RELE3D = 0;
0x986A	0x9495      	BCF         TRISD, 2 
;Validadora.c,318 :: 		SALIDA_RELE4D = 0;
0x986C	0x9695      	BCF         TRISD, 3 
;Validadora.c,319 :: 		SALIDA_RELE5D = 0;
0x986E	0x9E95      	BCF         TRISD, 7 
;Validadora.c,321 :: 		SALIDA_RELE1 = 0;
0x9870	0x9A80      	BCF         PORTA, 5 
;Validadora.c,322 :: 		SALIDA_RELE2 = 0;
0x9872	0x9084      	BCF         PORTE, 0 
;Validadora.c,323 :: 		SALIDA_RELE3 = 0;
0x9874	0x9483      	BCF         PORTD, 2 
;Validadora.c,324 :: 		SALIDA_RELE4 = 0;
0x9876	0x9683      	BCF         PORTD, 3 
;Validadora.c,325 :: 		SALIDA_RELE5 = 0;
0x9878	0x9E83      	BCF         PORTD, 7 
;Validadora.c,326 :: 		LED_LINK = 0;
0x987A	0x9482      	BCF         PORTC, 2 
;Validadora.c,329 :: 		canId = eeprom_read(0);
0x987C	0x0105      	MOVLB       5
0x987E	0x6B46      	CLRF        FARG_EEPROM_Read_address, 1
0x9880	0x6B47      	CLRF        FARG_EEPROM_Read_address+1, 1
0x9882	0xF034ECF5  	CALL        _EEPROM_Read, 0
0x9886	0xF2EDC000  	MOVFF       R0, _canId
;Validadora.c,332 :: 		timer1_open(200e3, true, false, false);
0x988A	0x0E40      	MOVLW       64
0x988C	0x6F46      	MOVWF       FARG_timer1_open_time_us, 1
0x988E	0x0E0D      	MOVLW       13
0x9890	0x6F47      	MOVWF       FARG_timer1_open_time_us+1, 1
0x9892	0x0E03      	MOVLW       3
0x9894	0x6F48      	MOVWF       FARG_timer1_open_time_us+2, 1
0x9896	0x0E00      	MOVLW       0
0x9898	0x6F49      	MOVWF       FARG_timer1_open_time_us+3, 1
0x989A	0x0E01      	MOVLW       1
0x989C	0x6F4A      	MOVWF       FARG_timer1_open_powerOn, 1
0x989E	0x6B4B      	CLRF        FARG_timer1_open_enable, 1
0x98A0	0x6B4C      	CLRF        FARG_timer1_open_priorityHigh, 1
0x98A2	0xF034EC42  	CALL        _timer1_open, 0
;Validadora.c,333 :: 		timer3_open(200e3, true, true, false);
0x98A6	0x0E40      	MOVLW       64
0x98A8	0x6F46      	MOVWF       FARG_timer3_open_time_us, 1
0x98AA	0x0E0D      	MOVLW       13
0x98AC	0x6F47      	MOVWF       FARG_timer3_open_time_us+1, 1
0x98AE	0x0E03      	MOVLW       3
0x98B0	0x6F48      	MOVWF       FARG_timer3_open_time_us+2, 1
0x98B2	0x0E00      	MOVLW       0
0x98B4	0x6F49      	MOVWF       FARG_timer3_open_time_us+3, 1
0x98B6	0x0E01      	MOVLW       1
0x98B8	0x6F4A      	MOVWF       FARG_timer3_open_powerOn, 1
0x98BA	0x0E01      	MOVLW       1
0x98BC	0x6F4B      	MOVWF       FARG_timer3_open_enable, 1
0x98BE	0x6B4C      	CLRF        FARG_timer3_open_priorityHigh, 1
0x98C0	0xF034ECFF  	CALL        _timer3_open, 0
;Validadora.c,334 :: 		usart_open(baudiosRate);
0x98C4	0x0E80      	MOVLW       128
0x98C6	0x6F46      	MOVWF       FARG_usart_open_baudRate, 1
0x98C8	0x0E25      	MOVLW       37
0x98CA	0x6F47      	MOVWF       FARG_usart_open_baudRate+1, 1
0x98CC	0x0E00      	MOVLW       0
0x98CE	0x6F48      	MOVWF       FARG_usart_open_baudRate+2, 1
0x98D0	0x0E00      	MOVLW       0
0x98D2	0x6F49      	MOVWF       FARG_usart_open_baudRate+3, 1
0x98D4	0xF037EC55  	CALL        _usart_open, 0
;Validadora.c,335 :: 		usart_enable_rx(true, true, 0x0D);
0x98D8	0x0E01      	MOVLW       1
0x98DA	0x6F46      	MOVWF       FARG_usart_enable_rx_enable, 1
0x98DC	0x0E01      	MOVLW       1
0x98DE	0x6F47      	MOVWF       FARG_usart_enable_rx_priorityHigh, 1
0x98E0	0x0E0D      	MOVLW       13
0x98E2	0x6F48      	MOVWF       FARG_usart_enable_rx_delimitir, 1
0x98E4	0xF035ECF3  	CALL        _usart_enable_rx, 0
;Validadora.c,339 :: 		DS1307_open();
0x98E8	0xF036ECD1  	CALL        _DS1307_open, 0
;Validadora.c,340 :: 		lcd_init();
0x98EC	0xF035EC90  	CALL        _Lcd_Init, 0
;Validadora.c,341 :: 		lcd_cmd(_LCD_CURSOR_OFF);
0x98F0	0x0E0C      	MOVLW       12
0x98F2	0x0105      	MOVLB       5
0x98F4	0x6F90      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x98F6	0xF005ECA9  	CALL        _Lcd_Cmd, 0
;Validadora.c,342 :: 		lcd_cmd(_LCD_CLEAR);
0x98FA	0x0E01      	MOVLW       1
0x98FC	0x0105      	MOVLB       5
0x98FE	0x6F90      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x9900	0xF005ECA9  	CALL        _Lcd_Cmd, 0
;Validadora.c,343 :: 		mysql_init(32768);
0x9904	0x0E00      	MOVLW       0
0x9906	0x0105      	MOVLB       5
0x9908	0x6F46      	MOVWF       FARG_mysql_init_memoryMax, 1
0x990A	0x0E80      	MOVLW       128
0x990C	0x6F47      	MOVWF       FARG_mysql_init_memoryMax+1, 1
0x990E	0xF034EC1C  	CALL        _mysql_init, 0
;Validadora.c,344 :: 		wiegand26_open();
0x9912	0xF03FECEC  	CALL        _wiegand26_open, 0
;Validadora.c,345 :: 		can_open(canIp, canMask, canId, 4);
0x9916	0xF546C13D  	MOVFF       _canIp, FARG_can_open_ip
0x991A	0xF547C13E  	MOVFF       _canIp+1, FARG_can_open_ip+1
0x991E	0xF548C13F  	MOVFF       _canIp+2, FARG_can_open_ip+2
0x9922	0xF549C140  	MOVFF       _canIp+3, FARG_can_open_ip+3
0x9926	0xF54AC141  	MOVFF       _canMask, FARG_can_open_mask
0x992A	0xF54BC142  	MOVFF       _canMask+1, FARG_can_open_mask+1
0x992E	0xF54CC143  	MOVFF       _canMask+2, FARG_can_open_mask+2
0x9932	0xF54DC144  	MOVFF       _canMask+3, FARG_can_open_mask+3
0x9936	0xF54EC2ED  	MOVFF       _canId, FARG_can_open_id
0x993A	0x0E04      	MOVLW       4
0x993C	0x6F4F      	MOVWF       FARG_can_open_speed_us, 1
0x993E	0xF03EEC85  	CALL        _can_open, 0
;Validadora.c,346 :: 		can_interrupt(true, false);
0x9942	0x0E01      	MOVLW       1
0x9944	0x6F46      	MOVWF       FARG_can_interrupt_enable, 1
0x9946	0x6B47      	CLRF        FARG_can_interrupt_hihgPriprity, 1
0x9948	0xF03BEC3D  	CALL        _can_interrupt, 0
;Validadora.c,349 :: 		lcd_out(1, 1, "Inicializando...");
0x994C	0x0E01      	MOVLW       1
0x994E	0x6F78      	MOVWF       FARG_Lcd_Out_row, 1
0x9950	0x0E01      	MOVLW       1
0x9952	0x6F79      	MOVWF       FARG_Lcd_Out_column, 1
0x9954	0x0E22      	MOVLW       ?lstr1_Validadora
0x9956	0x6F7A      	MOVWF       FARG_Lcd_Out_text, 1
0x9958	0x0E01      	MOVLW       hi_addr(?lstr1_Validadora)
0x995A	0x6F7B      	MOVWF       FARG_Lcd_Out_text+1, 1
0x995C	0xF012EC66  	CALL        _Lcd_Out, 0
;Validadora.c,353 :: 		wiegand26_enable();
0x9960	0xF03BEC60  	CALL        _wiegand26_enable, 0
;Validadora.c,354 :: 		DS1307_Read(&myRTC, true);
0x9964	0x0E77      	MOVLW       _myRTC
0x9966	0x6F78      	MOVWF       FARG_DS1307_read_myDS, 1
0x9968	0x0E04      	MOVLW       hi_addr(_myRTC)
0x996A	0x6F79      	MOVWF       FARG_DS1307_read_myDS+1, 1
0x996C	0x0E01      	MOVLW       1
0x996E	0x6F7A      	MOVWF       FARG_DS1307_read_formatComplet, 1
0x9970	0xF010ECF9  	CALL        _DS1307_read, 0
;Validadora.c,356 :: 		pilaBufferCAN = mysql_count_forced(tableEventosCAN, eventosEstatus, '1');
0x9974	0x0E6D      	MOVLW       _tableEventosCAN
0x9976	0x6F46      	MOVWF       FARG_mysql_count_forced_tabla, 1
0x9978	0x0E02      	MOVLW       hi_addr(_tableEventosCAN)
0x997A	0x6F47      	MOVWF       FARG_mysql_count_forced_tabla+1, 1
0x997C	0x0E65      	MOVLW       _eventosEstatus
0x997E	0x6F48      	MOVWF       FARG_mysql_count_forced_columna, 1
0x9980	0x0E02      	MOVLW       hi_addr(_eventosEstatus)
0x9982	0x6F49      	MOVWF       FARG_mysql_count_forced_columna+1, 1
0x9984	0x0E31      	MOVLW       49
0x9986	0x6F4A      	MOVWF       FARG_mysql_count_forced_buscar, 1
0x9988	0x0E00      	MOVLW       0
0x998A	0x6F4B      	MOVWF       FARG_mysql_count_forced_buscar+1, 1
0x998C	0x6F4C      	MOVWF       FARG_mysql_count_forced_buscar+2, 1
0x998E	0x6F4D      	MOVWF       FARG_mysql_count_forced_buscar+3, 1
0x9990	0xF03FECA4  	CALL        _mysql_count_forced, 0
0x9994	0xF3BDC000  	MOVFF       R0, _pilaBufferCAN
0x9998	0xF3BEC001  	MOVFF       R1, _pilaBufferCAN+1
;Validadora.c,363 :: 		mysql_read_string(tableSyncronia, columnaEstado, 1, &canSynchrony);
0x999C	0x0E33      	MOVLW       _tableSyncronia
0x999E	0x0105      	MOVLB       5
0x99A0	0x6F78      	MOVWF       FARG_mysql_read_string_name, 1
0x99A2	0x0E01      	MOVLW       hi_addr(_tableSyncronia)
0x99A4	0x6F79      	MOVWF       FARG_mysql_read_string_name+1, 1
0x99A6	0x0ED9      	MOVLW       _columnaEstado
0x99A8	0x6F7A      	MOVWF       FARG_mysql_read_string_column, 1
0x99AA	0x0E01      	MOVLW       hi_addr(_columnaEstado)
0x99AC	0x6F7B      	MOVWF       FARG_mysql_read_string_column+1, 1
0x99AE	0x0E01      	MOVLW       1
0x99B0	0x6F7C      	MOVWF       FARG_mysql_read_string_fila, 1
0x99B2	0x0E00      	MOVLW       0
0x99B4	0x6F7D      	MOVWF       FARG_mysql_read_string_fila+1, 1
0x99B6	0x0ED3      	MOVLW       _canSynchrony
0x99B8	0x6F7E      	MOVWF       FARG_mysql_read_string_result, 1
0x99BA	0x0E02      	MOVLW       hi_addr(_canSynchrony)
0x99BC	0x6F7F      	MOVWF       FARG_mysql_read_string_result+1, 1
0x99BE	0xF015EC0E  	CALL        _mysql_read_string, 0
;Validadora.c,366 :: 		RCON.IPEN = 1;     //ACTIVAR NIVELES DE INTERRUPCION
0x99C2	0x8ED0      	BSF         RCON, 7 
;Validadora.c,367 :: 		INTCON.PEIE = 1;   //ACTIVAR INTERRUPCIONES PERIFERICAS
0x99C4	0x8CF2      	BSF         INTCON, 6 
;Validadora.c,368 :: 		INTCON.GIE = 1;    //ACTIVAR INTERRUPCIONES GLOBALES
0x99C6	0x8EF2      	BSF         INTCON, 7 
;Validadora.c,480 :: 		delay_ms(timeAwake);
0x99C8	0x0E04      	MOVLW       4
0x99CA	0x6E0B      	MOVWF       R11, 0
0x99CC	0x0ECF      	MOVLW       207
0x99CE	0x6E0C      	MOVWF       R12, 0
0x99D0	0x0E01      	MOVLW       1
0x99D2	0x6E0D      	MOVWF       R13, 0
L_pic_init621:
0x99D4	0x2E0D      	DECFSZ      R13, 1, 0
0x99D6	0xD7FE      	BRA         L_pic_init621
0x99D8	0x2E0C      	DECFSZ      R12, 1, 0
0x99DA	0xD7FC      	BRA         L_pic_init621
0x99DC	0x2E0B      	DECFSZ      R11, 1, 0
0x99DE	0xD7FA      	BRA         L_pic_init621
0x99E0	0x0000      	NOP
0x99E2	0x0000      	NOP
;Validadora.c,484 :: 		lcd_clean_row(1);
0x99E4	0x0E01      	MOVLW       1
0x99E6	0x0105      	MOVLB       5
0x99E8	0x6F78      	MOVWF       FARG_lcd_clean_row_fila, 1
0x99EA	0xF00FECA1  	CALL        _lcd_clean_row, 0
;Validadora.c,486 :: 		lcd_out(1, 4, "Teclee su NIP");
0x99EE	0x0E01      	MOVLW       1
0x99F0	0x6F78      	MOVWF       FARG_Lcd_Out_row, 1
0x99F2	0x0E04      	MOVLW       4
0x99F4	0x6F79      	MOVWF       FARG_Lcd_Out_column, 1
0x99F6	0x0EE0      	MOVLW       ?lstr2_Validadora
0x99F8	0x6F7A      	MOVWF       FARG_Lcd_Out_text, 1
0x99FA	0x0E01      	MOVLW       hi_addr(?lstr2_Validadora)
0x99FC	0x6F7B      	MOVWF       FARG_Lcd_Out_text+1, 1
0x99FE	0xF012EC66  	CALL        _Lcd_Out, 0
;Validadora.c,487 :: 		lcd_out(2, 6, "para salir");
0x9A02	0x0E02      	MOVLW       2
0x9A04	0x0105      	MOVLB       5
0x9A06	0x6F78      	MOVWF       FARG_Lcd_Out_row, 1
0x9A08	0x0E06      	MOVLW       6
0x9A0A	0x6F79      	MOVWF       FARG_Lcd_Out_column, 1
0x9A0C	0x0E25      	MOVLW       ?lstr3_Validadora
0x9A0E	0x6F7A      	MOVWF       FARG_Lcd_Out_text, 1
0x9A10	0x0E00      	MOVLW       hi_addr(?lstr3_Validadora)
0x9A12	0x6F7B      	MOVWF       FARG_Lcd_Out_text+1, 1
0x9A14	0xF012EC66  	CALL        _Lcd_Out, 0
;Validadora.c,488 :: 		}
L_end_pic_init:
0x9A18	0x0012      	RETURN      0
; end of _pic_init
_validadora_temporizadores:
;Validadora.c,562 :: 		void validadora_temporizadores(){
;Validadora.c,565 :: 		if(flagSecondTMR3){
0x9A1A	0x521E      	MOVF        _flagSecondTMR3, 1 
0x9A1C	0xB4D8      	BTFSC       STATUS, 2 
0x9A1E	0xD087      	BRA         L_validadora_temporizadores646
;Validadora.c,566 :: 		flagSecondTMR3 = false;
0x9A20	0x6A1E      	CLRF        _flagSecondTMR3 
;Validadora.c,567 :: 		can_heartbeat();              //Envia heartbeat
0x9A22	0xF034ECD2  	CALL        _can_heartbeat, 0
;Validadora.c,568 :: 		tempSensor++;
0x9A26	0x0103      	MOVLB       3
0x9A28	0x2B33      	INCF        _tempSensor, 1, 1
;Validadora.c,569 :: 		tempMonedero++;
0x9A2A	0x2B32      	INCF        _tempMonedero, 1, 1
;Validadora.c,572 :: 		if(isCanConect != can.conected){
0x9A2C	0x0102      	MOVLB       2
0x9A2E	0x518A      	MOVF        validadora_temporizadores_isCanConect_L0, 0, 1
0x9A30	0x0103      	MOVLB       3
0x9A32	0x19CC      	XORWF       _can+13, 0, 1
0x9A34	0xE002      	BZ          L_validadora_temporizadores647
;Validadora.c,577 :: 		isCanConect = can.conected;
0x9A36	0xF28AC3CC  	MOVFF       _can+13, validadora_temporizadores_isCanConect_L0
;Validadora.c,578 :: 		}
L_validadora_temporizadores647:
;Validadora.c,580 :: 		DS1307_Read(&myRTC,true);
0x9A3A	0x0E77      	MOVLW       _myRTC
0x9A3C	0x0105      	MOVLB       5
0x9A3E	0x6F78      	MOVWF       FARG_DS1307_read_myDS, 1
0x9A40	0x0E04      	MOVLW       hi_addr(_myRTC)
0x9A42	0x6F79      	MOVWF       FARG_DS1307_read_myDS+1, 1
0x9A44	0x0E01      	MOVLW       1
0x9A46	0x6F7A      	MOVWF       FARG_DS1307_read_formatComplet, 1
0x9A48	0xF010ECF9  	CALL        _DS1307_read, 0
;Validadora.c,581 :: 		string_cpyn(msjConst, &myRTC.time[2], 8);
0x9A4C	0x0E12      	MOVLW       _msjConst
0x9A4E	0x6F78      	MOVWF       FARG_string_cpyn_destino, 1
0x9A50	0x0E05      	MOVLW       hi_addr(_msjConst)
0x9A52	0x6F79      	MOVWF       FARG_string_cpyn_destino+1, 1
0x9A54	0x0E80      	MOVLW       _myRTC+9
0x9A56	0x6F7A      	MOVWF       FARG_string_cpyn_origen, 1
0x9A58	0x0E04      	MOVLW       hi_addr(_myRTC+9)
0x9A5A	0x6F7B      	MOVWF       FARG_string_cpyn_origen+1, 1
0x9A5C	0x0E08      	MOVLW       8
0x9A5E	0x6F7C      	MOVWF       FARG_string_cpyn_size, 1
0x9A60	0xF00DEC35  	CALL        _string_cpyn, 0
;Validadora.c,582 :: 		lcd_out(4, 2, msjConst);
0x9A64	0x0E04      	MOVLW       4
0x9A66	0x6F78      	MOVWF       FARG_Lcd_Out_row, 1
0x9A68	0x0E02      	MOVLW       2
0x9A6A	0x6F79      	MOVWF       FARG_Lcd_Out_column, 1
0x9A6C	0x0E12      	MOVLW       _msjConst
0x9A6E	0x6F7A      	MOVWF       FARG_Lcd_Out_text, 1
0x9A70	0x0E05      	MOVLW       hi_addr(_msjConst)
0x9A72	0x6F7B      	MOVWF       FARG_Lcd_Out_text+1, 1
0x9A74	0xF012EC66  	CALL        _Lcd_Out, 0
;Validadora.c,583 :: 		string_cpyn(msjConst, &myRTC.time[11], 8);
0x9A78	0x0E12      	MOVLW       _msjConst
0x9A7A	0x0105      	MOVLB       5
0x9A7C	0x6F78      	MOVWF       FARG_string_cpyn_destino, 1
0x9A7E	0x0E05      	MOVLW       hi_addr(_msjConst)
0x9A80	0x6F79      	MOVWF       FARG_string_cpyn_destino+1, 1
0x9A82	0x0E89      	MOVLW       _myRTC+18
0x9A84	0x6F7A      	MOVWF       FARG_string_cpyn_origen, 1
0x9A86	0x0E04      	MOVLW       hi_addr(_myRTC+18)
0x9A88	0x6F7B      	MOVWF       FARG_string_cpyn_origen+1, 1
0x9A8A	0x0E08      	MOVLW       8
0x9A8C	0x6F7C      	MOVWF       FARG_string_cpyn_size, 1
0x9A8E	0xF00DEC35  	CALL        _string_cpyn, 0
;Validadora.c,584 :: 		lcd_out(4, 12, msjConst);
0x9A92	0x0E04      	MOVLW       4
0x9A94	0x6F78      	MOVWF       FARG_Lcd_Out_row, 1
0x9A96	0x0E0C      	MOVLW       12
0x9A98	0x6F79      	MOVWF       FARG_Lcd_Out_column, 1
0x9A9A	0x0E12      	MOVLW       _msjConst
0x9A9C	0x6F7A      	MOVWF       FARG_Lcd_Out_text, 1
0x9A9E	0x0E05      	MOVLW       hi_addr(_msjConst)
0x9AA0	0x6F7B      	MOVWF       FARG_Lcd_Out_text+1, 1
0x9AA2	0xF012EC66  	CALL        _Lcd_Out, 0
;Validadora.c,586 :: 		if(limpiarLCD){
0x9AA6	0x5310      	MOVF        _limpiarLCD, 1, 1
0x9AA8	0xE042      	BZ          L_validadora_temporizadores648
;Validadora.c,587 :: 		if(++tempLCD >= 5){
0x9AAA	0x2B0F      	INCF        _tempLCD, 1, 1
0x9AAC	0x0E05      	MOVLW       5
0x9AAE	0x5D0F      	SUBWF       _tempLCD, 0, 1
0x9AB0	0xE33E      	BNC         L_validadora_temporizadores649
;Validadora.c,588 :: 		limpiarLCD = false;
0x9AB2	0x6B10      	CLRF        _limpiarLCD, 1
;Validadora.c,589 :: 		tempLCD = 0;
0x9AB4	0x6B0F      	CLRF        _tempLCD, 1
;Validadora.c,590 :: 		lcd_clean_row(1);
0x9AB6	0x0E01      	MOVLW       1
0x9AB8	0x0105      	MOVLB       5
0x9ABA	0x6F78      	MOVWF       FARG_lcd_clean_row_fila, 1
0x9ABC	0xF00FECA1  	CALL        _lcd_clean_row, 0
;Validadora.c,591 :: 		lcd_clean_row(2);
0x9AC0	0x0E02      	MOVLW       2
0x9AC2	0x6F78      	MOVWF       FARG_lcd_clean_row_fila, 1
0x9AC4	0xF00FECA1  	CALL        _lcd_clean_row, 0
;Validadora.c,592 :: 		lcd_clean_row(3);
0x9AC8	0x0E03      	MOVLW       3
0x9ACA	0x6F78      	MOVWF       FARG_lcd_clean_row_fila, 1
0x9ACC	0xF00FECA1  	CALL        _lcd_clean_row, 0
;Validadora.c,593 :: 		lcd_clean_row(4);
0x9AD0	0x0E04      	MOVLW       4
0x9AD2	0x6F78      	MOVWF       FARG_lcd_clean_row_fila, 1
0x9AD4	0xF00FECA1  	CALL        _lcd_clean_row, 0
;Validadora.c,595 :: 		lcd_out(1, 4, "Teclee su NIP");
0x9AD8	0x0E01      	MOVLW       1
0x9ADA	0x6F78      	MOVWF       FARG_Lcd_Out_row, 1
0x9ADC	0x0E04      	MOVLW       4
0x9ADE	0x6F79      	MOVWF       FARG_Lcd_Out_column, 1
0x9AE0	0x0E3B      	MOVLW       ?lstr4_Validadora
0x9AE2	0x6F7A      	MOVWF       FARG_Lcd_Out_text, 1
0x9AE4	0x0E00      	MOVLW       hi_addr(?lstr4_Validadora)
0x9AE6	0x6F7B      	MOVWF       FARG_Lcd_Out_text+1, 1
0x9AE8	0xF012EC66  	CALL        _Lcd_Out, 0
;Validadora.c,596 :: 		lcd_out(2, 6, "para salir");
0x9AEC	0x0E02      	MOVLW       2
0x9AEE	0x0105      	MOVLB       5
0x9AF0	0x6F78      	MOVWF       FARG_Lcd_Out_row, 1
0x9AF2	0x0E06      	MOVLW       6
0x9AF4	0x6F79      	MOVWF       FARG_Lcd_Out_column, 1
0x9AF6	0x0E30      	MOVLW       ?lstr5_Validadora
0x9AF8	0x6F7A      	MOVWF       FARG_Lcd_Out_text, 1
0x9AFA	0x0E00      	MOVLW       hi_addr(?lstr5_Validadora)
0x9AFC	0x6F7B      	MOVWF       FARG_Lcd_Out_text+1, 1
0x9AFE	0xF012EC66  	CALL        _Lcd_Out, 0
;Validadora.c,598 :: 		if(BOTON_ENTRADA1)
0x9B02	0xA883      	BTFSS       PORTD, 4 
0x9B04	0xD009      	BRA         L_validadora_temporizadores650
;Validadora.c,599 :: 		lcd_chr(1,18,'B');
0x9B06	0x0E01      	MOVLW       1
0x9B08	0x0105      	MOVLB       5
0x9B0A	0x6F86      	MOVWF       FARG_Lcd_Chr_row, 1
0x9B0C	0x0E12      	MOVLW       18
0x9B0E	0x6F87      	MOVWF       FARG_Lcd_Chr_column, 1
0x9B10	0x0E42      	MOVLW       66
0x9B12	0x6F88      	MOVWF       FARG_Lcd_Chr_out_char, 1
0x9B14	0xF006ECF9  	CALL        _Lcd_Chr, 0
L_validadora_temporizadores650:
;Validadora.c,600 :: 		if(SENSOR_COCHE)
0x9B18	0xA083      	BTFSS       PORTD, 0 
0x9B1A	0xD009      	BRA         L_validadora_temporizadores651
;Validadora.c,601 :: 		lcd_chr(1,20,'C');
0x9B1C	0x0E01      	MOVLW       1
0x9B1E	0x0105      	MOVLB       5
0x9B20	0x6F86      	MOVWF       FARG_Lcd_Chr_row, 1
0x9B22	0x0E14      	MOVLW       20
0x9B24	0x6F87      	MOVWF       FARG_Lcd_Chr_column, 1
0x9B26	0x0E43      	MOVLW       67
0x9B28	0x6F88      	MOVWF       FARG_Lcd_Chr_out_char, 1
0x9B2A	0xF006ECF9  	CALL        _Lcd_Chr, 0
L_validadora_temporizadores651:
;Validadora.c,602 :: 		}
L_validadora_temporizadores649:
;Validadora.c,603 :: 		}
L_validadora_temporizadores648:
;Validadora.c,604 :: 		}
L_validadora_temporizadores646:
;Validadora.c,605 :: 		}
L_end_validadora_temporizadores:
0x9B2E	0x0012      	RETURN      0
; end of _validadora_temporizadores
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x9B30	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x9B32	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x9B36	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x9B38	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x9B3A	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x9B3C	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x9B3E	0x0012      	RETURN      0
; end of ___CC2DW
_main:
0x9B40	0xF04FECC4  	CALL        40840, 0
;Validadora.c,271 :: 		void main(){
;Validadora.c,273 :: 		pic_init();
0x9B44	0xDE86      	RCALL       _pic_init
;Validadora.c,275 :: 		while(true){
L_main619:
;Validadora.c,276 :: 		can_do_work();                  //Tareas can open
0x9B46	0xF041EC57  	CALL        _can_do_work, 0
;Validadora.c,277 :: 		usart_do_read_text();           //Verifica si hay datos en buffer
0x9B4A	0xF040ECD0  	CALL        _usart_do_read_text, 0
;Validadora.c,279 :: 		validadora_checkTarjeta();      //Verifica la tarjeta del pensionado
0x9B4E	0xF042EC0C  	CALL        _validadora_checkTarjeta, 0
;Validadora.c,280 :: 		validadora_bufferEventos();     //Envia enventos guardados en buffer
0x9B52	0xF041EC5E  	CALL        _validadora_bufferEventos, 0
;Validadora.c,281 :: 		validadora_temporizadores();
0x9B56	0xDF61      	RCALL       _validadora_temporizadores
;Validadora.c,282 :: 		validadora_barrera();
0x9B58	0xF040ECD8  	CALL        _validadora_barrera, 0
;Validadora.c,283 :: 		validadora_monedero();
0x9B5C	0xF041ECCE  	CALL        _validadora_monedero, 0
;Validadora.c,284 :: 		}
0x9B60	0xD7F2      	BRA         L_main619
;Validadora.c,285 :: 		}
L_end_main:
0x9B62	0xD7FF      	BRA         $+0
; end of _main
0x9B64	0xF019C000  	MOVFF       R0, 25
0x9B68	0xF018C001  	MOVFF       R1, 24
_interrupt_low:
0x9B6C	0x6E15      	MOVWF       ___Low_saveWREG 
0x9B6E	0xF016CFD8  	MOVFF       STATUS, ___Low_saveSTATUS
0x9B72	0xF017CFE0  	MOVFF       BSR, ___Low_saveBSR
;Validadora.c,292 :: 		void interrupt_low(){
;Validadora.c,293 :: 		int_timer1();
0x9B76	0xF040EC56  	CALL        _int_timer1, 0
;Validadora.c,294 :: 		int_timer2();
0x9B7A	0xF040EC30  	CALL        _int_timer2, 0
;Validadora.c,295 :: 		int_timer3();
0x9B7E	0xF040EC0F  	CALL        _int_timer3, 0
;Validadora.c,297 :: 		int_can();
0x9B82	0xF040ECBA  	CALL        _int_can, 0
;Validadora.c,298 :: 		}
L_end_interrupt_low:
L__interrupt_low1334:
0x9B86	0x5017      	MOVF        ___Low_saveBSR, 0 
0x9B88	0x6EE0      	MOVWF       BSR 
0x9B8A	0x5016      	MOVF        ___Low_saveSTATUS, 0 
0x9B8C	0x6ED8      	MOVWF       STATUS 
0x9B8E	0x3A15      	SWAPF       ___Low_saveWREG, 1 
0x9B90	0x3815      	SWAPF       ___Low_saveWREG, 0 
0x9B92	0xF000C019  	MOVFF       25, R0
0x9B96	0xF001C018  	MOVFF       24, R1
0x9B9A	0x0010      	RETFIE      0
; end of _interrupt_low
_interrupt:
;Validadora.c,287 :: 		void interrupt(){
0x9B9C	0xF01BC000  	MOVFF       R0, 27
0x9BA0	0xF01AC001  	MOVFF       R1, 26
;Validadora.c,288 :: 		int_wiegand26();
0x9BA4	0xF01CCFE1  	MOVFF       FSR1L, 28
0x9BA8	0xF01DCFE2  	MOVFF       FSR1H, 29
0x9BAC	0xF040ECB5  	CALL        _int_wiegand26, 0
;Validadora.c,289 :: 		int_usart_rx();
0x9BB0	0xF040EC75  	CALL        _int_usart_rx, 0
;Validadora.c,290 :: 		}
L_end_interrupt:
L__interrupt1332:
0x9BB4	0xF000C01B  	MOVFF       27, R0
0x9BB8	0xF001C01A  	MOVFF       26, R1
0x9BBC	0xFFE1C01C  	MOVFF       28, FSR1L
0x9BC0	0xFFE2C01D  	MOVFF       29, FSR1H
0x9BC4	0x0011      	RETFIE      1
; end of _interrupt
0x9F88	0xF01EEE10  	LFSR        1, 30
0x9F8C	0x0E14      	MOVLW       20
0x9F8E	0x6E00      	MOVWF       R0 
0x9F90	0x0E04      	MOVLW       4
0x9F92	0x6E01      	MOVWF       R1 
0x9F94	0x0EC6      	MOVLW       198
0x9F96	0x6EF6      	MOVWF       4086 
0x9F98	0x0E9B      	MOVLW       155
0x9F9A	0x6EF7      	MOVWF       TBLPTRH 
0x9F9C	0x0E00      	MOVLW       0
0x9F9E	0x6EF8      	MOVWF       TBLPTRU 
0x9FA0	0xF04DEC98  	CALL        39728, 0
0x9FA4	0x0012      	RETURN      0
;Validadora.c,0 :: ?ICS_flagSecondTMR3
0x9BC6	0x00 ;?ICS_flagSecondTMR3+0
; end of ?ICS_flagSecondTMR3
;Validadora.c,0 :: ?ICS_temp_heartbeat
0x9BC7	0x0000 ;?ICS_temp_heartbeat+0
; end of ?ICS_temp_heartbeat
;Validadora.c,0 :: ?ICS?lstr38_Validadora
0x9BC9	0x534D ;?ICS?lstr38_Validadora+0
0x9BCB	0x0047 ;?ICS?lstr38_Validadora+2
; end of ?ICS?lstr38_Validadora
;Validadora.c,0 :: ?ICS?lstr3_Validadora
0x9BCD	0x6170 ;?ICS?lstr3_Validadora+0
0x9BCF	0x6172 ;?ICS?lstr3_Validadora+2
0x9BD1	0x7320 ;?ICS?lstr3_Validadora+4
0x9BD3	0x6C61 ;?ICS?lstr3_Validadora+6
0x9BD5	0x7269 ;?ICS?lstr3_Validadora+8
0x9BD7	0x00 ;?ICS?lstr3_Validadora+10
; end of ?ICS?lstr3_Validadora
;Validadora.c,0 :: ?ICS?lstr5_Validadora
0x9BD8	0x6170 ;?ICS?lstr5_Validadora+0
0x9BDA	0x6172 ;?ICS?lstr5_Validadora+2
0x9BDC	0x7320 ;?ICS?lstr5_Validadora+4
0x9BDE	0x6C61 ;?ICS?lstr5_Validadora+6
0x9BE0	0x7269 ;?ICS?lstr5_Validadora+8
0x9BE2	0x00 ;?ICS?lstr5_Validadora+10
; end of ?ICS?lstr5_Validadora
;Validadora.c,0 :: ?ICS?lstr4_Validadora
0x9BE3	0x6554 ;?ICS?lstr4_Validadora+0
0x9BE5	0x6C63 ;?ICS?lstr4_Validadora+2
0x9BE7	0x6565 ;?ICS?lstr4_Validadora+4
0x9BE9	0x7320 ;?ICS?lstr4_Validadora+6
0x9BEB	0x2075 ;?ICS?lstr4_Validadora+8
0x9BED	0x494E ;?ICS?lstr4_Validadora+10
0x9BEF	0x0050 ;?ICS?lstr4_Validadora+12
; end of ?ICS?lstr4_Validadora
;Validadora.c,0 :: ?ICS_modeBufferEventos
0x9BF1	0x00 ;?ICS_modeBufferEventos+0
; end of ?ICS_modeBufferEventos
;Validadora.c,0 :: ?ICS?lstr25_Validadora
0x9BF2	0x694E ;?ICS?lstr25_Validadora+0
0x9BF4	0x2070 ;?ICS?lstr25_Validadora+2
0x9BF6	0x6564 ;?ICS?lstr25_Validadora+4
0x9BF8	0x6373 ;?ICS?lstr25_Validadora+6
0x9BFA	0x6F6E ;?ICS?lstr25_Validadora+8
0x9BFC	0x6963 ;?ICS?lstr25_Validadora+10
0x9BFE	0x6F64 ;?ICS?lstr25_Validadora+12
0x9C00	0x00 ;?ICS?lstr25_Validadora+14
; end of ?ICS?lstr25_Validadora
;Validadora.c,0 :: ?ICS?lstr17_Validadora
0x9C01	0x6341 ;?ICS?lstr17_Validadora+0
0x9C03	0x6563 ;?ICS?lstr17_Validadora+2
0x9C05	0x6F73 ;?ICS?lstr17_Validadora+4
0x9C07	0x6120 ;?ICS?lstr17_Validadora+6
0x9C09	0x6563 ;?ICS?lstr17_Validadora+8
0x9C0B	0x7470 ;?ICS?lstr17_Validadora+10
0x9C0D	0x6461 ;?ICS?lstr17_Validadora+12
0x9C0F	0x006F ;?ICS?lstr17_Validadora+14
; end of ?ICS?lstr17_Validadora
;Validadora.c,0 :: ?ICS_prepagoId
0x9C11	0x6469 ;?ICS_prepagoId+0
0x9C13	0x00 ;?ICS_prepagoId+2
; end of ?ICS_prepagoId
;Validadora.c,0 :: ?ICS?lstr19_Validadora
0x9C14	0x6153 ;?ICS?lstr19_Validadora+0
0x9C16	0x646C ;?ICS?lstr19_Validadora+2
0x9C18	0x206F ;?ICS?lstr19_Validadora+4
0x9C1A	0x6761 ;?ICS?lstr19_Validadora+6
0x9C1C	0x746F ;?ICS?lstr19_Validadora+8
0x9C1E	0x6461 ;?ICS?lstr19_Validadora+10
0x9C20	0x006F ;?ICS?lstr19_Validadora+12
; end of ?ICS?lstr19_Validadora
;Validadora.c,0 :: ?ICS?lstr18_Validadora
0x9C22	0x6153 ;?ICS?lstr18_Validadora+0
0x9C24	0x646C ;?ICS?lstr18_Validadora+2
0x9C26	0x286F ;?ICS?lstr18_Validadora+4
0x9C28	0x7268 ;?ICS?lstr18_Validadora+6
0x9C2A	0x2973 ;?ICS?lstr18_Validadora+8
0x9C2C	0x203A ;?ICS?lstr18_Validadora+10
0x9C2E	0x00 ;?ICS?lstr18_Validadora+12
; end of ?ICS?lstr18_Validadora
;Validadora.c,0 :: ?ICS_prepagoNip
0x9C2F	0x696E ;?ICS_prepagoNip+0
0x9C31	0x0070 ;?ICS_prepagoNip+2
; end of ?ICS_prepagoNip
;Validadora.c,0 :: ?ICS?lstr14_Validadora
0x9C33	0x6153 ;?ICS?lstr14_Validadora+0
0x9C35	0x646C ;?ICS?lstr14_Validadora+2
0x9C37	0x206F ;?ICS?lstr14_Validadora+4
0x9C39	0x6574 ;?ICS?lstr14_Validadora+6
0x9C3B	0x6D72 ;?ICS?lstr14_Validadora+8
0x9C3D	0x6E69 ;?ICS?lstr14_Validadora+10
0x9C3F	0x6461 ;?ICS?lstr14_Validadora+12
0x9C41	0x006F ;?ICS?lstr14_Validadora+14
; end of ?ICS?lstr14_Validadora
;Validadora.c,0 :: ?ICS?lstr13_Validadora
0x9C43	0x6153 ;?ICS?lstr13_Validadora+0
0x9C45	0x646C ;?ICS?lstr13_Validadora+2
0x9C47	0x286F ;?ICS?lstr13_Validadora+4
0x9C49	0x7268 ;?ICS?lstr13_Validadora+6
0x9C4B	0x2973 ;?ICS?lstr13_Validadora+8
0x9C4D	0x203A ;?ICS?lstr13_Validadora+10
0x9C4F	0x00 ;?ICS?lstr13_Validadora+12
; end of ?ICS?lstr13_Validadora
;Validadora.c,0 :: ?ICS?lstr16_Validadora
0x9C50	0x6154 ;?ICS?lstr16_Validadora+0
0x9C52	0x6A72 ;?ICS?lstr16_Validadora+2
0x9C54	0x7465 ;?ICS?lstr16_Validadora+4
0x9C56	0x2061 ;?ICS?lstr16_Validadora+6
0x9C58	0x6564 ;?ICS?lstr16_Validadora+8
0x9C5A	0x6373 ;?ICS?lstr16_Validadora+10
0x9C5C	0x6E6F ;?ICS?lstr16_Validadora+12
0x9C5E	0x636F ;?ICS?lstr16_Validadora+14
0x9C60	0x6469 ;?ICS?lstr16_Validadora+16
0x9C62	0x0061 ;?ICS?lstr16_Validadora+18
; end of ?ICS?lstr16_Validadora
;Validadora.c,0 :: ?ICS?lstr15_Validadora
0x9C64	0x6150 ;?ICS?lstr15_Validadora+0
0x9C66	0x7373 ;?ICS?lstr15_Validadora+2
0x9C68	0x6162 ;?ICS?lstr15_Validadora+4
0x9C6A	0x6B63 ;?ICS?lstr15_Validadora+6
0x9C6C	0x6120 ;?ICS?lstr15_Validadora+8
0x9C6E	0x7463 ;?ICS?lstr15_Validadora+10
0x9C70	0x7669 ;?ICS?lstr15_Validadora+12
0x9C72	0x006F ;?ICS?lstr15_Validadora+14
; end of ?ICS?lstr15_Validadora
;Validadora.c,0 :: ?ICS?lstr22_Validadora
0x9C74	0x494E ;?ICS?lstr22_Validadora+0
0x9C76	0x2050 ;?ICS?lstr22_Validadora+2
0x9C78	0x6361 ;?ICS?lstr22_Validadora+4
0x9C7A	0x7065 ;?ICS?lstr22_Validadora+6
0x9C7C	0x6174 ;?ICS?lstr22_Validadora+8
0x9C7E	0x6F64 ;?ICS?lstr22_Validadora+10
0x9C80	0x00 ;?ICS?lstr22_Validadora+12
; end of ?ICS?lstr22_Validadora
;Validadora.c,0 :: ?ICS?lstr21_Validadora
0x9C81	0x0030 ;?ICS?lstr21_Validadora+0
; end of ?ICS?lstr21_Validadora
;Validadora.c,0 :: ?ICS?lstr24_Validadora
0x9C83	0x494E ;?ICS?lstr24_Validadora+0
0x9C85	0x2050 ;?ICS?lstr24_Validadora+2
0x9C87	0x6E69 ;?ICS?lstr24_Validadora+4
0x9C89	0x6176 ;?ICS?lstr24_Validadora+6
0x9C8B	0x696C ;?ICS?lstr24_Validadora+8
0x9C8D	0x6F64 ;?ICS?lstr24_Validadora+10
0x9C8F	0x002A ;?ICS?lstr24_Validadora+12
; end of ?ICS?lstr24_Validadora
;Validadora.c,0 :: ?ICS?lstr23_Validadora
0x9C91	0x494E ;?ICS?lstr23_Validadora+0
0x9C93	0x2050 ;?ICS?lstr23_Validadora+2
0x9C95	0x6564 ;?ICS?lstr23_Validadora+4
0x9C97	0x6373 ;?ICS?lstr23_Validadora+6
0x9C99	0x6E6F ;?ICS?lstr23_Validadora+8
0x9C9B	0x636F ;?ICS?lstr23_Validadora+10
0x9C9D	0x6469 ;?ICS?lstr23_Validadora+12
0x9C9F	0x2A6F ;?ICS?lstr23_Validadora+14
0x9CA1	0x00 ;?ICS?lstr23_Validadora+16
; end of ?ICS?lstr23_Validadora
;Validadora.c,0 :: ?ICS_keyOutDate
0x9CA2	0x6164 ;?ICS_keyOutDate+0
0x9CA4	0x6574 ;?ICS_keyOutDate+2
0x9CA6	0x00 ;?ICS_keyOutDate+4
; end of ?ICS_keyOutDate
;Validadora.c,0 :: ?ICS_tableKeyOutNip
0x9CA7	0x654B ;?ICS_tableKeyOutNip+0
0x9CA9	0x4E79 ;?ICS_tableKeyOutNip+2
0x9CAB	0x7069 ;?ICS_tableKeyOutNip+4
0x9CAD	0x00 ;?ICS_tableKeyOutNip+6
; end of ?ICS_tableKeyOutNip
;Validadora.c,0 :: ?ICS?lstr20_Validadora
0x9CAE	0x6150 ;?ICS?lstr20_Validadora+0
0x9CB0	0x7373 ;?ICS?lstr20_Validadora+2
0x9CB2	0x6162 ;?ICS?lstr20_Validadora+4
0x9CB4	0x6B63 ;?ICS?lstr20_Validadora+6
0x9CB6	0x6120 ;?ICS?lstr20_Validadora+8
0x9CB8	0x7463 ;?ICS?lstr20_Validadora+10
0x9CBA	0x7669 ;?ICS?lstr20_Validadora+12
0x9CBC	0x006F ;?ICS?lstr20_Validadora+14
; end of ?ICS?lstr20_Validadora
;Validadora.c,0 :: ?ICS_keyOutEstatus
0x9CBE	0x7365 ;?ICS_keyOutEstatus+0
0x9CC0	0x6174 ;?ICS_keyOutEstatus+2
0x9CC2	0x7574 ;?ICS_keyOutEstatus+4
0x9CC4	0x0073 ;?ICS_keyOutEstatus+6
; end of ?ICS_keyOutEstatus
;Validadora.c,0 :: ?ICS_keyOutNip
0x9CC6	0x696E ;?ICS_keyOutNip+0
0x9CC8	0x0070 ;?ICS_keyOutNip+2
; end of ?ICS_keyOutNip
;Validadora.c,0 :: ?ICS?lstr1_Validadora
0x9CCA	0x6E49 ;?ICS?lstr1_Validadora+0
0x9CCC	0x6369 ;?ICS?lstr1_Validadora+2
0x9CCE	0x6169 ;?ICS?lstr1_Validadora+4
0x9CD0	0x696C ;?ICS?lstr1_Validadora+6
0x9CD2	0x617A ;?ICS?lstr1_Validadora+8
0x9CD4	0x646E ;?ICS?lstr1_Validadora+10
0x9CD6	0x2E6F ;?ICS?lstr1_Validadora+12
0x9CD8	0x2E2E ;?ICS?lstr1_Validadora+14
0x9CDA	0x00 ;?ICS?lstr1_Validadora+16
; end of ?ICS?lstr1_Validadora
;Validadora.c,0 :: ?ICS_tableSyncronia
0x9CDB	0x6953 ;?ICS_tableSyncronia+0
0x9CDD	0x636E ;?ICS_tableSyncronia+2
0x9CDF	0x6F72 ;?ICS_tableSyncronia+4
0x9CE1	0x696E ;?ICS_tableSyncronia+6
0x9CE3	0x0061 ;?ICS_tableSyncronia+8
; end of ?ICS_tableSyncronia
;Validadora.c,0 :: ?ICS_canIp
0x9CE5	0x9500 ;?ICS_canIp+0
0x9CE7	0x1E54 ;?ICS_canIp+2
; end of ?ICS_canIp
;Validadora.c,0 :: ?ICS_canMask
0x9CE9	0xFFFF ;?ICS_canMask+0
0x9CEB	0xFFFF ;?ICS_canMask+2
; end of ?ICS_canMask
;Validadora.c,0 :: ?ICS?lstr44_Validadora
0x9CED	0x0030 ;?ICS?lstr44_Validadora+0
; end of ?ICS?lstr44_Validadora
;Validadora.c,0 :: ?ICS?lstr29_Validadora
0x9CEF	0x6C4C ;?ICS?lstr29_Validadora+0
0x9CF1	0x7661 ;?ICS?lstr29_Validadora+2
0x9CF3	0x2065 ;?ICS?lstr29_Validadora+4
0x9CF5	0x6361 ;?ICS?lstr29_Validadora+6
0x9CF7	0x7065 ;?ICS?lstr29_Validadora+8
0x9CF9	0x6174 ;?ICS?lstr29_Validadora+10
0x9CFB	0x6164 ;?ICS?lstr29_Validadora+12
0x9CFD	0x00 ;?ICS?lstr29_Validadora+14
; end of ?ICS?lstr29_Validadora
;Validadora.c,0 :: ?ICS?lstr28_Validadora
0x9CFE	0x0030 ;?ICS?lstr28_Validadora+0
; end of ?ICS?lstr28_Validadora
;Validadora.c,0 :: ?ICS?lstr31_Validadora
0x9D00	0x462A ;?ICS?lstr31_Validadora+0
0x9D02	0x6C6F ;?ICS?lstr31_Validadora+2
0x9D04	0x6F69 ;?ICS?lstr31_Validadora+4
0x9D06	0x6920 ;?ICS?lstr31_Validadora+6
0x9D08	0x766E ;?ICS?lstr31_Validadora+8
0x9D0A	0x6C61 ;?ICS?lstr31_Validadora+10
0x9D0C	0x6469 ;?ICS?lstr31_Validadora+12
0x9D0E	0x206F ;?ICS?lstr31_Validadora+14
0x9D10	0x2A54 ;?ICS?lstr31_Validadora+16
0x9D12	0x00 ;?ICS?lstr31_Validadora+18
; end of ?ICS?lstr31_Validadora
;Validadora.c,0 :: ?ICS?lstr30_Validadora
0x9D13	0x462A ;?ICS?lstr30_Validadora+0
0x9D15	0x6C6F ;?ICS?lstr30_Validadora+2
0x9D17	0x6F69 ;?ICS?lstr30_Validadora+4
0x9D19	0x6420 ;?ICS?lstr30_Validadora+6
0x9D1B	0x7365 ;?ICS?lstr30_Validadora+8
0x9D1D	0x6F63 ;?ICS?lstr30_Validadora+10
0x9D1F	0x6F6E ;?ICS?lstr30_Validadora+12
0x9D21	0x6963 ;?ICS?lstr30_Validadora+14
0x9D23	0x6F64 ;?ICS?lstr30_Validadora+16
0x9D25	0x5020 ;?ICS?lstr30_Validadora+18
0x9D27	0x002A ;?ICS?lstr30_Validadora+20
; end of ?ICS?lstr30_Validadora
;Validadora.c,0 :: ?ICS_keyOutFol
0x9D29	0x6F66 ;?ICS_keyOutFol+0
0x9D2B	0x696C ;?ICS_keyOutFol+2
0x9D2D	0x006F ;?ICS_keyOutFol+4
; end of ?ICS_keyOutFol
;Validadora.c,0 :: ?ICS?lstr26_Validadora
0x9D2F	0x4C2A ;?ICS?lstr26_Validadora+0
0x9D31	0x616C ;?ICS?lstr26_Validadora+2
0x9D33	0x6576 ;?ICS?lstr26_Validadora+4
0x9D35	0x6920 ;?ICS?lstr26_Validadora+6
0x9D37	0x766E ;?ICS?lstr26_Validadora+8
0x9D39	0x6C61 ;?ICS?lstr26_Validadora+10
0x9D3B	0x6469 ;?ICS?lstr26_Validadora+12
0x9D3D	0x2061 ;?ICS?lstr26_Validadora+14
0x9D3F	0x2A53 ;?ICS?lstr26_Validadora+16
0x9D41	0x00 ;?ICS?lstr26_Validadora+18
; end of ?ICS?lstr26_Validadora
;Validadora.c,0 :: ?ICS_tableKeyOutFol
0x9D42	0x654B ;?ICS_tableKeyOutFol+0
0x9D44	0x4679 ;?ICS_tableKeyOutFol+2
0x9D46	0x6C6F ;?ICS_tableKeyOutFol+4
0x9D48	0x6F69 ;?ICS_tableKeyOutFol+6
0x9D4A	0x0073 ;?ICS_tableKeyOutFol+8
; end of ?ICS_tableKeyOutFol
;Validadora.c,0 :: ?ICS?lstr27_Validadora
0x9D4C	0x4C2A ;?ICS?lstr27_Validadora+0
0x9D4E	0x616C ;?ICS?lstr27_Validadora+2
0x9D50	0x6576 ;?ICS?lstr27_Validadora+4
0x9D52	0x6920 ;?ICS?lstr27_Validadora+6
0x9D54	0x766E ;?ICS?lstr27_Validadora+8
0x9D56	0x6C61 ;?ICS?lstr27_Validadora+10
0x9D58	0x6469 ;?ICS?lstr27_Validadora+12
0x9D5A	0x2061 ;?ICS?lstr27_Validadora+14
0x9D5C	0x2A46 ;?ICS?lstr27_Validadora+16
0x9D5E	0x00 ;?ICS?lstr27_Validadora+18
; end of ?ICS?lstr27_Validadora
;Validadora.c,0 :: ?ICS?lstr37_Validadora
0x9D5F	0x654C ;?ICS?lstr37_Validadora+0
0x9D61	0x7463 ;?ICS?lstr37_Validadora+2
0x9D63	0x7275 ;?ICS?lstr37_Validadora+4
0x9D65	0x2061 ;?ICS?lstr37_Validadora+6
0x9D67	0x6164 ;?ICS?lstr37_Validadora+8
0x9D69	0x61F1 ;?ICS?lstr37_Validadora+10
0x9D6B	0x6164 ;?ICS?lstr37_Validadora+12
0x9D6D	0x00 ;?ICS?lstr37_Validadora+14
; end of ?ICS?lstr37_Validadora
;Validadora.c,0 :: ?ICS?lstr36_Validadora
0x9D6E	0x4C2A ;?ICS?lstr36_Validadora+0
0x9D70	0x616C ;?ICS?lstr36_Validadora+2
0x9D72	0x6576 ;?ICS?lstr36_Validadora+4
0x9D74	0x6920 ;?ICS?lstr36_Validadora+6
0x9D76	0x766E ;?ICS?lstr36_Validadora+8
0x9D78	0x6C61 ;?ICS?lstr36_Validadora+10
0x9D7A	0x6469 ;?ICS?lstr36_Validadora+12
0x9D7C	0x2061 ;?ICS?lstr36_Validadora+14
0x9D7E	0x2A44 ;?ICS?lstr36_Validadora+16
0x9D80	0x00 ;?ICS?lstr36_Validadora+18
; end of ?ICS?lstr36_Validadora
;Validadora.c,0 :: ?ICS_columnaEstado
0x9D81	0x7365 ;?ICS_columnaEstado+0
0x9D83	0x6174 ;?ICS_columnaEstado+2
0x9D85	0x6F64 ;?ICS_columnaEstado+4
0x9D87	0x00 ;?ICS_columnaEstado+6
; end of ?ICS_columnaEstado
;Validadora.c,0 :: ?ICS?lstr2_Validadora
0x9D88	0x6554 ;?ICS?lstr2_Validadora+0
0x9D8A	0x6C63 ;?ICS?lstr2_Validadora+2
0x9D8C	0x6565 ;?ICS?lstr2_Validadora+4
0x9D8E	0x7320 ;?ICS?lstr2_Validadora+6
0x9D90	0x2075 ;?ICS?lstr2_Validadora+8
0x9D92	0x494E ;?ICS?lstr2_Validadora+10
0x9D94	0x0050 ;?ICS?lstr2_Validadora+12
; end of ?ICS?lstr2_Validadora
;Validadora.c,0 :: ?ICS?lstr35_Validadora
0x9D96	0x6954 ;?ICS?lstr35_Validadora+0
0x9D98	0x6D65 ;?ICS?lstr35_Validadora+2
0x9D9A	0x6F70 ;?ICS?lstr35_Validadora+4
0x9D9C	0x6120 ;?ICS?lstr35_Validadora+6
0x9D9E	0x6F67 ;?ICS?lstr35_Validadora+8
0x9DA0	0x6174 ;?ICS?lstr35_Validadora+10
0x9DA2	0x6F64 ;?ICS?lstr35_Validadora+12
0x9DA4	0x00 ;?ICS?lstr35_Validadora+14
; end of ?ICS?lstr35_Validadora
;Validadora.c,0 :: ?ICS_tableKeyOutDate
0x9DA5	0x654B ;?ICS_tableKeyOutDate+0
0x9DA7	0x4479 ;?ICS_tableKeyOutDate+2
0x9DA9	0x7461 ;?ICS_tableKeyOutDate+4
0x9DAB	0x0065 ;?ICS_tableKeyOutDate+6
; end of ?ICS_tableKeyOutDate
;Validadora.c,0 :: ?ICS?lstr32_Validadora
0x9DAD	0x4C2A ;?ICS?lstr32_Validadora+0
0x9DAF	0x616C ;?ICS?lstr32_Validadora+2
0x9DB1	0x6576 ;?ICS?lstr32_Validadora+4
0x9DB3	0x6920 ;?ICS?lstr32_Validadora+6
0x9DB5	0x766E ;?ICS?lstr32_Validadora+8
0x9DB7	0x6C61 ;?ICS?lstr32_Validadora+10
0x9DB9	0x6469 ;?ICS?lstr32_Validadora+12
0x9DBB	0x2061 ;?ICS?lstr32_Validadora+14
0x9DBD	0x2A49 ;?ICS?lstr32_Validadora+16
0x9DBF	0x00 ;?ICS?lstr32_Validadora+18
; end of ?ICS?lstr32_Validadora
;Validadora.c,0 :: ?ICS?lstr34_Validadora
0x9DC0	0x6341 ;?ICS?lstr34_Validadora+0
0x9DC2	0x6563 ;?ICS?lstr34_Validadora+2
0x9DC4	0x6F73 ;?ICS?lstr34_Validadora+4
0x9DC6	0x6120 ;?ICS?lstr34_Validadora+6
0x9DC8	0x6563 ;?ICS?lstr34_Validadora+8
0x9DCA	0x7470 ;?ICS?lstr34_Validadora+10
0x9DCC	0x6461 ;?ICS?lstr34_Validadora+12
0x9DCE	0x006F ;?ICS?lstr34_Validadora+14
; end of ?ICS?lstr34_Validadora
;Validadora.c,0 :: ?ICS?lstr33_Validadora
0x9DD0	0x6C4C ;?ICS?lstr33_Validadora+0
0x9DD2	0x7661 ;?ICS?lstr33_Validadora+2
0x9DD4	0x2065 ;?ICS?lstr33_Validadora+4
0x9DD6	0x7475 ;?ICS?lstr33_Validadora+6
0x9DD8	0x6C69 ;?ICS?lstr33_Validadora+8
0x9DDA	0x7A69 ;?ICS?lstr33_Validadora+10
0x9DDC	0x6461 ;?ICS?lstr33_Validadora+12
0x9DDE	0x0061 ;?ICS?lstr33_Validadora+14
; end of ?ICS?lstr33_Validadora
;Validadora.c,0 :: ?ICS?lstr12_Validadora
0x9DE0	0x6341 ;?ICS?lstr12_Validadora+0
0x9DE2	0x6563 ;?ICS?lstr12_Validadora+2
0x9DE4	0x6F73 ;?ICS?lstr12_Validadora+4
0x9DE6	0x6120 ;?ICS?lstr12_Validadora+6
0x9DE8	0x6563 ;?ICS?lstr12_Validadora+8
0x9DEA	0x7470 ;?ICS?lstr12_Validadora+10
0x9DEC	0x6461 ;?ICS?lstr12_Validadora+12
0x9DEE	0x006F ;?ICS?lstr12_Validadora+14
; end of ?ICS?lstr12_Validadora
;Validadora.c,0 :: ?ICS?lstr42_Validadora
0x9DF0	0x0031 ;?ICS?lstr42_Validadora+0
; end of ?ICS?lstr42_Validadora
;Validadora.c,0 :: ?ICS?lstr41_Validadora
0x9DF2	0x6544 ;?ICS?lstr41_Validadora+0
0x9DF4	0x6973 ;?ICS?lstr41_Validadora+2
0x9DF6	0x636E ;?ICS?lstr41_Validadora+4
0x9DF8	0x6F72 ;?ICS?lstr41_Validadora+6
0x9DFA	0x696E ;?ICS?lstr41_Validadora+8
0x9DFC	0x617A ;?ICS?lstr41_Validadora+10
0x9DFE	0x6F64 ;?ICS?lstr41_Validadora+12
0x9E00	0x00 ;?ICS?lstr41_Validadora+14
; end of ?ICS?lstr41_Validadora
;Validadora.c,0 :: ?ICS?lstr43_Validadora
0x9E01	0x0031 ;?ICS?lstr43_Validadora+0
; end of ?ICS?lstr43_Validadora
;Validadora.c,0 :: ?ICSint_timer1_temp_L0
0x9E03	0x00 ;?ICSint_timer1_temp_L0+0
; end of ?ICSint_timer1_temp_L0
;Validadora.c,0 :: ?ICS_eventosRegistro
0x9E04	0x6572 ;?ICS_eventosRegistro+0
0x9E06	0x6967 ;?ICS_eventosRegistro+2
0x9E08	0x7473 ;?ICS_eventosRegistro+4
0x9E0A	0x6F72 ;?ICS_eventosRegistro+6
0x9E0C	0x00 ;?ICS_eventosRegistro+8
; end of ?ICS_eventosRegistro
;Validadora.c,0 :: ?ICS_eventosEstatus
0x9E0D	0x7365 ;?ICS_eventosEstatus+0
0x9E0F	0x6174 ;?ICS_eventosEstatus+2
0x9E11	0x7574 ;?ICS_eventosEstatus+4
0x9E13	0x0073 ;?ICS_eventosEstatus+6
; end of ?ICS_eventosEstatus
;Validadora.c,0 :: ?ICS_tableEventosCAN
0x9E15	0x7645 ;?ICS_tableEventosCAN+0
0x9E17	0x6E65 ;?ICS_tableEventosCAN+2
0x9E19	0x6F74 ;?ICS_tableEventosCAN+4
0x9E1B	0x4373 ;?ICS_tableEventosCAN+6
0x9E1D	0x4E41 ;?ICS_tableEventosCAN+8
0x9E1F	0x00 ;?ICS_tableEventosCAN+10
; end of ?ICS_tableEventosCAN
;Validadora.c,0 :: ?ICS?lstr40_Validadora
0x9E20	0x6953 ;?ICS?lstr40_Validadora+0
0x9E22	0x636E ;?ICS?lstr40_Validadora+2
0x9E24	0x6F72 ;?ICS?lstr40_Validadora+4
0x9E26	0x696E ;?ICS?lstr40_Validadora+6
0x9E28	0x617A ;?ICS?lstr40_Validadora+8
0x9E2A	0x6F64 ;?ICS?lstr40_Validadora+10
0x9E2C	0x00 ;?ICS?lstr40_Validadora+12
; end of ?ICS?lstr40_Validadora
;Validadora.c,0 :: ?ICS?lstr39_Validadora
0x9E2D	0x00 ;?ICS?lstr39_Validadora+0
; end of ?ICS?lstr39_Validadora
;Validadora.c,0 :: ?ICScan_do_read_message_len_L0
0x9E2E	0x00 ;?ICScan_do_read_message_len_L0+0
; end of ?ICScan_do_read_message_len_L0
;Validadora.c,0 :: ?ICSvalidadora_monedero_startRelay_L0
0x9E2F	0x00 ;?ICSvalidadora_monedero_startRelay_L0+0
; end of ?ICSvalidadora_monedero_startRelay_L0
;Validadora.c,0 :: ?ICSvalidadora_monedero_sensado_L0
0x9E30	0x00 ;?ICSvalidadora_monedero_sensado_L0+0
; end of ?ICSvalidadora_monedero_sensado_L0
;Validadora.c,0 :: ?ICSvalidadora_monedero_pulsosMonederos_L0
0x9E31	0x00 ;?ICSvalidadora_monedero_pulsosMonederos_L0+0
; end of ?ICSvalidadora_monedero_pulsosMonederos_L0
;Validadora.c,0 :: ?ICSvalidadora_temporizadores_isCanConect_L0
0x9E32	0xFF ;?ICSvalidadora_temporizadores_isCanConect_L0+0
; end of ?ICSvalidadora_temporizadores_isCanConect_L0
;Validadora.c,0 :: ?ICScan_do_write_message_maquinaE_L0
0x9E33	0x00 ;?ICScan_do_write_message_maquinaE_L0+0
; end of ?ICScan_do_write_message_maquinaE_L0
;Validadora.c,0 :: ?ICS_flagTMR3
0x9E34	0x00 ;?ICS_flagTMR3+0
; end of ?ICS_flagTMR3
;Validadora.c,0 :: ?ICSvalidadora_barrera_sensor_L0
0x9E35	0x00 ;?ICSvalidadora_barrera_sensor_L0+0
; end of ?ICSvalidadora_barrera_sensor_L0
;Validadora.c,0 :: ?ICSvalidadora_checkTarjeta_buscarNIP_L0
0x9E36	0x00 ;?ICSvalidadora_checkTarjeta_buscarNIP_L0+0
; end of ?ICSvalidadora_checkTarjeta_buscarNIP_L0
;Validadora.c,0 :: ?ICSvalidadora_checkTarjeta_buscarID_L0
0x9E37	0x00 ;?ICSvalidadora_checkTarjeta_buscarID_L0+0
; end of ?ICSvalidadora_checkTarjeta_buscarID_L0
;Validadora.c,0 :: ?ICS?lstr45_Validadora
0x9E38	0x0031 ;?ICS?lstr45_Validadora+0
; end of ?ICS?lstr45_Validadora
;Validadora.c,0 :: ?ICS_prepagoEstatus
0x9E3A	0x7365 ;?ICS_prepagoEstatus+0
0x9E3C	0x6174 ;?ICS_prepagoEstatus+2
0x9E3E	0x7574 ;?ICS_prepagoEstatus+4
0x9E40	0x0073 ;?ICS_prepagoEstatus+6
; end of ?ICS_prepagoEstatus
;Validadora.c,0 :: ?ICS_tablePrepago
0x9E42	0x7250 ;?ICS_tablePrepago+0
0x9E44	0x7065 ;?ICS_tablePrepago+2
0x9E46	0x6761 ;?ICS_tablePrepago+4
0x9E48	0x006F ;?ICS_tablePrepago+6
; end of ?ICS_tablePrepago
;Validadora.c,0 :: ?ICS_prepagoSaldo
0x9E4A	0x6173 ;?ICS_prepagoSaldo+0
0x9E4C	0x646C ;?ICS_prepagoSaldo+2
0x9E4E	0x006F ;?ICS_prepagoSaldo+4
; end of ?ICS_prepagoSaldo
;Validadora.c,0 :: ?ICS?lstr11_Validadora
0x9E50	0x6150 ;?ICS?lstr11_Validadora+0
0x9E52	0x7373 ;?ICS?lstr11_Validadora+2
0x9E54	0x6162 ;?ICS?lstr11_Validadora+4
0x9E56	0x6B63 ;?ICS?lstr11_Validadora+6
0x9E58	0x6120 ;?ICS?lstr11_Validadora+8
0x9E5A	0x7463 ;?ICS?lstr11_Validadora+10
0x9E5C	0x7669 ;?ICS?lstr11_Validadora+12
0x9E5E	0x006F ;?ICS?lstr11_Validadora+14
; end of ?ICS?lstr11_Validadora
;Validadora.c,0 :: ?ICS?lstr10_Validadora
0x9E60	0x6956 ;?ICS?lstr10_Validadora+0
0x9E62	0x6567 ;?ICS?lstr10_Validadora+2
0x9E64	0x636E ;?ICS?lstr10_Validadora+4
0x9E66	0x6169 ;?ICS?lstr10_Validadora+6
0x9E68	0x7420 ;?ICS?lstr10_Validadora+8
0x9E6A	0x7265 ;?ICS?lstr10_Validadora+10
0x9E6C	0x696D ;?ICS?lstr10_Validadora+12
0x9E6E	0x616E ;?ICS?lstr10_Validadora+14
0x9E70	0x6164 ;?ICS?lstr10_Validadora+16
0x9E72	0x00 ;?ICS?lstr10_Validadora+18
; end of ?ICS?lstr10_Validadora
;Validadora.c,0 :: ?ICS_pensionadosEstatus
0x9E73	0x7365 ;?ICS_pensionadosEstatus+0
0x9E75	0x6174 ;?ICS_pensionadosEstatus+2
0x9E77	0x7574 ;?ICS_pensionadosEstatus+4
0x9E79	0x0073 ;?ICS_pensionadosEstatus+6
; end of ?ICS_pensionadosEstatus
;Validadora.c,0 :: ?ICS_canSynchrony
0x9E7B	0x01 ;?ICS_canSynchrony+0
; end of ?ICS_canSynchrony
;Validadora.c,0 :: ?ICS?lstr9_Validadora
0x9E7C	0x6341 ;?ICS?lstr9_Validadora+0
0x9E7E	0x6563 ;?ICS?lstr9_Validadora+2
0x9E80	0x6F73 ;?ICS?lstr9_Validadora+4
0x9E82	0x6120 ;?ICS?lstr9_Validadora+6
0x9E84	0x6563 ;?ICS?lstr9_Validadora+8
0x9E86	0x7470 ;?ICS?lstr9_Validadora+10
0x9E88	0x6461 ;?ICS?lstr9_Validadora+12
0x9E8A	0x006F ;?ICS?lstr9_Validadora+14
; end of ?ICS?lstr9_Validadora
;Validadora.c,0 :: ?ICS_pensionadosVigencia
0x9E8C	0x6976 ;?ICS_pensionadosVigencia+0
0x9E8E	0x6567 ;?ICS_pensionadosVigencia+2
0x9E90	0x636E ;?ICS_pensionadosVigencia+4
0x9E92	0x6169 ;?ICS_pensionadosVigencia+6
0x9E94	0x00 ;?ICS_pensionadosVigencia+8
; end of ?ICS_pensionadosVigencia
;Validadora.c,0 :: ?ICS_canId
0x9E95	0x02 ;?ICS_canId+0
; end of ?ICS_canId
;Validadora.c,0 :: ?ICS_tablePensionados
0x9E96	0x6550 ;?ICS_tablePensionados+0
0x9E98	0x736E ;?ICS_tablePensionados+2
0x9E9A	0x6F69 ;?ICS_tablePensionados+4
0x9E9C	0x616E ;?ICS_tablePensionados+6
0x9E9E	0x6F64 ;?ICS_tablePensionados+8
0x9EA0	0x0073 ;?ICS_tablePensionados+10
; end of ?ICS_tablePensionados
;Validadora.c,0 :: ?ICS_pensionadosID
0x9EA2	0x6469 ;?ICS_pensionadosID+0
0x9EA4	0x00 ;?ICS_pensionadosID+2
; end of ?ICS_pensionadosID
;Validadora.c,0 :: ?ICS_tableSoporte
0x9EA5	0x6F53 ;?ICS_tableSoporte+0
0x9EA7	0x6F70 ;?ICS_tableSoporte+2
0x9EA9	0x7472 ;?ICS_tableSoporte+4
0x9EAB	0x0065 ;?ICS_tableSoporte+6
; end of ?ICS_tableSoporte
;Validadora.c,0 :: ?ICS?lstr7_Validadora
0x9EAD	0x494E ;?ICS?lstr7_Validadora+0
0x9EAF	0x3A50 ;?ICS?lstr7_Validadora+2
0x9EB1	0x0020 ;?ICS?lstr7_Validadora+4
; end of ?ICS?lstr7_Validadora
;Validadora.c,0 :: ?ICSint_timer1_estados_L0
0x9EB3	0x00 ;?ICSint_timer1_estados_L0+0
; end of ?ICSint_timer1_estados_L0
;Validadora.c,0 :: ?ICS_soporteID
0x9EB4	0x6469 ;?ICS_soporteID+0
0x9EB6	0x00 ;?ICS_soporteID+2
; end of ?ICS_soporteID
;Validadora.c,0 :: ?ICS_tempLCD
0x9EB7	0x00 ;?ICS_tempLCD+0
; end of ?ICS_tempLCD
;Validadora.c,0 :: ?ICS_limpiarLCD
0x9EB8	0x00 ;?ICS_limpiarLCD+0
; end of ?ICS_limpiarLCD
;Validadora.c,0 :: ?ICS?lstr6_Validadora
0x9EB9	0x4143 ;?ICS?lstr6_Validadora+0
0x9EBB	0x4452 ;?ICS?lstr6_Validadora+2
0x9EBD	0x203A ;?ICS?lstr6_Validadora+4
0x9EBF	0x00 ;?ICS?lstr6_Validadora+6
; end of ?ICS?lstr6_Validadora
;Validadora.c,0 :: ?ICSint_timer3_temp_L0
0x9EC0	0x00 ;?ICSint_timer3_temp_L0+0
; end of ?ICSint_timer3_temp_L0
;Validadora.c,0 :: ?ICS_prepagoDate
0x9EC1	0x6164 ;?ICS_prepagoDate+0
0x9EC3	0x6574 ;?ICS_prepagoDate+2
0x9EC5	0x00 ;?ICS_prepagoDate+4
; end of ?ICS_prepagoDate
;Validadora.c,0 :: ?ICS?lstr8_Validadora
0x9EC6	0x6154 ;?ICS?lstr8_Validadora+0
0x9EC8	0x6A72 ;?ICS?lstr8_Validadora+2
0x9ECA	0x7465 ;?ICS?lstr8_Validadora+4
0x9ECC	0x2061 ;?ICS?lstr8_Validadora+6
0x9ECE	0x6564 ;?ICS?lstr8_Validadora+8
0x9ED0	0x7320 ;?ICS?lstr8_Validadora+10
0x9ED2	0x706F ;?ICS?lstr8_Validadora+12
0x9ED4	0x726F ;?ICS?lstr8_Validadora+14
0x9ED6	0x6574 ;?ICS?lstr8_Validadora+16
0x9ED8	0x00 ;?ICS?lstr8_Validadora+18
; end of ?ICS?lstr8_Validadora
;Validadora.c,0 :: ?ICS_abrirBarrera
0x9ED9	0x00 ;?ICS_abrirBarrera+0
; end of ?ICS_abrirBarrera
;Validadora.c,124 :: _CAN_TABLE_MODIFICADO
0x9EDA	0x4F4D ;_CAN_TABLE_MODIFICADO+0
0x9EDC	0x4944 ;_CAN_TABLE_MODIFICADO+2
0x9EDE	0x4946 ;_CAN_TABLE_MODIFICADO+4
0x9EE0	0x4143 ;_CAN_TABLE_MODIFICADO+6
0x9EE2	0x4F44 ;_CAN_TABLE_MODIFICADO+8
0x9EE4	0x00 ;_CAN_TABLE_MODIFICADO+10
; end of _CAN_TABLE_MODIFICADO
;Validadora.c,125 :: _CAN_TABLE_NO_FOUND
0x9EE5	0x4F4E ;_CAN_TABLE_NO_FOUND+0
0x9EE7	0x4620 ;_CAN_TABLE_NO_FOUND+2
0x9EE9	0x554F ;_CAN_TABLE_NO_FOUND+4
0x9EEB	0x444E ;_CAN_TABLE_NO_FOUND+6
0x9EED	0x00 ;_CAN_TABLE_NO_FOUND+8
; end of _CAN_TABLE_NO_FOUND
;Validadora.c,182 :: _ticketAddr
0x9EEE	0x0100 ;_ticketAddr+0
0x9EF0	0x0114 ;_ticketAddr+2
0x9EF2	0x011F ;_ticketAddr+4
0x9EF4	0x0000 ;_ticketAddr+6
; end of _ticketAddr
;Validadora.c,123 :: _CAN_TABLE_ERROR
0x9EF6	0x5245 ;_CAN_TABLE_ERROR+0
0x9EF8	0x4F52 ;_CAN_TABLE_ERROR+2
0x9EFA	0x0052 ;_CAN_TABLE_ERROR+4
; end of _CAN_TABLE_ERROR
;Validadora.c,493 :: validadora_barrera_BARRERA_ABIERTA_L0
0x9EFC	0x504F ;validadora_barrera_BARRERA_ABIERTA_L0+0
0x9EFE	0x4E45 ;validadora_barrera_BARRERA_ABIERTA_L0+2
0x9F00	0x00 ;validadora_barrera_BARRERA_ABIERTA_L0+4
; end of validadora_barrera_BARRERA_ABIERTA_L0
;Validadora.c,142 :: _ACCESO_DENEGADO
0x9F01	0x4E4E ;_ACCESO_DENEGADO+0
0x9F03	0x4E4E ;_ACCESO_DENEGADO+2
0x9F05	0x00 ;_ACCESO_DENEGADO+4
; end of _ACCESO_DENEGADO
;Validadora.c,1294 :: can_user_read_message_FILAS_ACTUALES_L0
0x9F06	0x5246 ;can_user_read_message_FILAS_ACTUALES_L0+0
0x9F08	0x003A ;can_user_read_message_FILAS_ACTUALES_L0+2
; end of can_user_read_message_FILAS_ACTUALES_L0
;Validadora.c,1295 :: can_user_read_message_FILAS_PROG_L0
0x9F0A	0x5046 ;can_user_read_message_FILAS_PROG_L0+0
0x9F0C	0x003A ;can_user_read_message_FILAS_PROG_L0+2
; end of can_user_read_message_FILAS_PROG_L0
;Validadora.c,127 :: _CAN_TPV
0x9F0E	0x5054 ;_CAN_TPV+0
0x9F10	0x0056 ;_CAN_TPV+2
; end of _CAN_TPV
;Validadora.c,115 :: _CAN_TABLE_INFO
0x9F12	0x4E49 ;_CAN_TABLE_INFO+0
0x9F14	0x0046 ;_CAN_TABLE_INFO+2
; end of _CAN_TABLE_INFO
;Validadora.c,108 :: _CAN_SPECIAL_DATE
0x9F16	0x5053 ;_CAN_SPECIAL_DATE+0
0x9F18	0x0044 ;_CAN_SPECIAL_DATE+2
; end of _CAN_SPECIAL_DATE
;Validadora.c,107 :: _CAN_SALDO
0x9F1A	0x4C53 ;_CAN_SALDO+0
0x9F1C	0x0044 ;_CAN_SALDO+2
; end of _CAN_SALDO
;Validadora.c,116 :: _CAN_TABLE_ERASE
0x9F1E	0x5245 ;_CAN_TABLE_ERASE+0
0x9F20	0x0053 ;_CAN_TABLE_ERASE+2
; end of _CAN_TABLE_ERASE
;Validadora.c,114 :: _CAN_TABLE
0x9F22	0x4254 ;_CAN_TABLE+0
0x9F24	0x004C ;_CAN_TABLE+2
; end of _CAN_TABLE
;Validadora.c,138 :: _CAN_ABRIR
0x9F26	0x504F ;_CAN_ABRIR+0
0x9F28	0x004E ;_CAN_ABRIR+2
; end of _CAN_ABRIR
;Validadora.c,135 :: _CAN_CMD
0x9F2A	0x4D43 ;_CAN_CMD+0
0x9F2C	0x0044 ;_CAN_CMD+2
; end of _CAN_CMD
;Validadora.c,129 :: _CAN_FOL
0x9F2E	0x4F46 ;_CAN_FOL+0
0x9F30	0x004C ;_CAN_FOL+2
; end of _CAN_FOL
;Validadora.c,139 :: _CAN_OUT
0x9F32	0x554F ;_CAN_OUT+0
0x9F34	0x0054 ;_CAN_OUT+2
; end of _CAN_OUT
;Validadora.c,131 :: _CAN_TBL
0x9F36	0x4254 ;_CAN_TBL+0
0x9F38	0x004C ;_CAN_TBL+2
; end of _CAN_TBL
;Validadora.c,117 :: _CAN_TABLE_RW
0x9F3A	0x5254 ;_CAN_TABLE_RW+0
0x9F3C	0x0057 ;_CAN_TABLE_RW+2
; end of _CAN_TABLE_RW
;Validadora.c,119 :: _CAN_TABLE_WRITE
0x9F3E	0x4254 ;_CAN_TABLE_WRITE+0
0x9F40	0x0057 ;_CAN_TABLE_WRITE+2
; end of _CAN_TABLE_WRITE
;Validadora.c,118 :: _CAN_TABLE_READ
0x9F42	0x4254 ;_CAN_TABLE_READ+0
0x9F44	0x0052 ;_CAN_TABLE_READ+2
; end of _CAN_TABLE_READ
;Validadora.c,136 :: _CAN_KEY
0x9F46	0x454B ;_CAN_KEY+0
0x9F48	0x0059 ;_CAN_KEY+2
; end of _CAN_KEY
;Validadora.c,130 :: _CAN_NIP
0x9F4A	0x494E ;_CAN_NIP+0
0x9F4C	0x0050 ;_CAN_NIP+2
; end of _CAN_NIP
;Validadora.c,101 :: _CAN_REGISTRAR
0x9F4E	0x4552 ;_CAN_REGISTRAR+0
0x9F50	0x0047 ;_CAN_REGISTRAR+2
; end of _CAN_REGISTRAR
;Validadora.c,492 :: validadora_barrera_CAN_BAR_L0
0x9F52	0x4142 ;validadora_barrera_CAN_BAR_L0+0
0x9F54	0x0052 ;validadora_barrera_CAN_BAR_L0+2
; end of validadora_barrera_CAN_BAR_L0
;Validadora.c,105 :: _CAN_PASSBACK
0x9F56	0x4150 ;_CAN_PASSBACK+0
0x9F58	0x0053 ;_CAN_PASSBACK+2
; end of _CAN_PASSBACK
;Validadora.c,100 :: _CAN_PENSIONADO
0x9F5A	0x4550 ;_CAN_PENSIONADO+0
0x9F5C	0x004E ;_CAN_PENSIONADO+2
; end of _CAN_PENSIONADO
;Validadora.c,109 :: _CAN_SPECIAL_SALDO
0x9F5E	0x5053 ;_CAN_SPECIAL_SALDO+0
0x9F60	0x0053 ;_CAN_SPECIAL_SALDO+2
; end of _CAN_SPECIAL_SALDO
;Validadora.c,106 :: _CAN_PREPAGO
0x9F62	0x5250 ;_CAN_PREPAGO+0
0x9F64	0x0045 ;_CAN_PREPAGO+2
; end of _CAN_PREPAGO
;Validadora.c,112 :: _CAN_RTC
0x9F66	0x5452 ;_CAN_RTC+0
0x9F68	0x0043 ;_CAN_RTC+2
; end of _CAN_RTC
;Validadora.c,110 :: _CAN_SOPORTE
0x9F6A	0x4F53 ;_CAN_SOPORTE+0
0x9F6C	0x0050 ;_CAN_SOPORTE+2
; end of _CAN_SOPORTE
;Validadora.c,120 :: _CAN_TABLE_GET
0x9F6E	0x4547 ;_CAN_TABLE_GET+0
0x9F70	0x0054 ;_CAN_TABLE_GET+2
; end of _CAN_TABLE_GET
;Validadora.c,121 :: _CAN_TABLE_SET
0x9F72	0x4553 ;_CAN_TABLE_SET+0
0x9F74	0x0054 ;_CAN_TABLE_SET+2
; end of _CAN_TABLE_SET
;Validadora.c,104 :: _CAN_VIGENCIA
0x9F76	0x4956 ;_CAN_VIGENCIA+0
0x9F78	0x0047 ;_CAN_VIGENCIA+2
; end of _CAN_VIGENCIA
;Validadora.c,102 :: _CAN_ACTUALIZAR
0x9F7A	0x4341 ;_CAN_ACTUALIZAR+0
0x9F7C	0x0054 ;_CAN_ACTUALIZAR+2
; end of _CAN_ACTUALIZAR
;Validadora.c,128 :: _CAN_IDX
0x9F7E	0x4449 ;_CAN_IDX+0
0x9F80	0x0058 ;_CAN_IDX+2
; end of _CAN_IDX
;Validadora.c,103 :: _CAN_CONSULTAR
0x9F82	0x4F43 ;_CAN_CONSULTAR+0
0x9F84	0x004E ;_CAN_CONSULTAR+2
; end of _CAN_CONSULTAR
;Validadora.c,133 :: _CAN_MODULE
0x9F86	0x0056 ;_CAN_MODULE+0
; end of _CAN_MODULE
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C      [84]    _I2C_soft_read
0x0070      [92]    _I2C_soft_write
0x00CC      [34]    _I2C_soft_start
0x00EE      [30]    _I2C_soft_stop
0x010C     [600]    _SDIV3232L
0x0364     [130]    _eeprom_i2c_read
0x03E6      [98]    _strncmp
0x0448      [24]    _COMFREM
0x0460      [20]    _Delay_5500us
0x0474     [268]    _mysql_exist
0x0580      [80]    _Mul_16X16_U
0x05D0       [6]    _Delay_1us
0x05D6     [346]    _Div_32x32_S
0x0730      [12]    _Delay_50us
0x073C      [18]    __Lib_SoftI2C_PutZerosToLATSda
0x074E      [18]    __Lib_SoftI2C_PutZerosToLATScl
0x0760     [118]    _clamp_shift
0x07D6     [124]    _eeprom_i2c_write
0x0852      [82]    _Mul_32x32_U
0x08A4     [178]    _numToString
0x0956     [478]    __mysql_calculate_address
0x0B34      [30]    _Div_8X8_U
0x0B52     [132]    _Lcd_Cmd
0x0BD6       [8]    _Swap
0x0BDE      [26]    _Soft_I2C_Start
0x0BF8       [8]    _FIXSIGN32
0x0C00      [26]    _SETFUN32
0x0C1A     [202]    _Soft_I2C_Write
0x0CE4      [46]    _decToBcd
0x0D12     [224]    _mysql_write_roundTrip
0x0DF2      [96]    _Lcd_Chr
0x0E52      [14]    _RES032
0x0E60      [14]    _Lcd_Chr_CP
0x0E6E      [58]    _strlen
0x0EA8     [130]    _can_write_text
0x0F2A      [30]    _string_len
0x0F48      [84]    _string_isNumeric
0x0F9C     [160]    _stringToNumN
0x103C      [24]    _SETFOV32
0x1054     [144]    _mysql_read_forced
0x10E4     [160]    _mysql_write_forced
0x1184     [176]    _Soft_I2C_Read
0x1234      [36]    _bcdToDec
0x1258     [176]    _mysql_read
0x1308     [710]    _DS1307_date
0x15CE      [76]    _Soft_I2C_Stop
0x161A     [190]    _mysql_search_forced
0x16D8       [8]    _SETFDZ32
0x16E0     [566]    _DS1307_write_string
0x1916     [330]    _mysql_write_string
0x1A60      [10]    _timer1_reset
0x1A6A      [78]    _string_cpyn
0x1AB8     [162]    _stringToNum
0x1B5A     [328]    _numToHex
0x1CA2     [478]    _hexToNum
0x1E80     [120]    _string_addc
0x1EF8      [74]    _mysql_erase
0x1F42      [34]    _lcd_clean_row
0x1F64      [54]    _Div_16X16_U
0x1F9A     [198]    _buffer_save_send
0x2060     [254]    _can_get_id
0x215E     [148]    _can_set_id
0x21F2     [606]    _DS1307_read
0x2450     [110]    _string_toUpper
0x24BE      [14]    _timer1_enable
0x24CC     [136]    _Lcd_Out
0x2554     [748]    _Div_32x32_U
0x2840     [312]    _mysql_write
0x2978      [96]    _string_cpyc
0x29D8       [6]    _I2C_soft_init
0x29DE      [62]    _string_push
0x2A1C     [146]    _mysql_read_string
0x2AAE     [490]    _NRM4032
0x2C98      [96]    _string_add
0x2CF8      [66]    _string_cmpnc
0x2D3A      [28]    _SETIOV3224
0x2D56      [80]    _can_set_operation
0x2DA6      [72]    _string_cpy
0x2DEE     [984]    _can_read
0x31C6     [310]    _double2longword
0x32FC     [118]    _clamp
0x3372     [740]    _can_write
0x3656       [2]    _can_user_guardHeartBeat
0x3658      [76]    _can_set_mode
0x36A4      [22]    _Soft_I2C_Init
0x36BA      [54]    _string_cmpn
0x36F0     [312]    _can_set_baud
0x3828      [14]    _external_int1_enable
0x3836      [14]    _external_int0_enable
0x3844     [386]    _decrypt_basic
0x39C6      [88]    _string_cmp
0x3A1E     [102]    _can_user_write_message
0x3A84      [26]    _external_int0_open
0x3A9E     [226]    _LongWordToStr
0x3B80     [172]    _DS1307_getSeconds
0x3C2C       [6]    _eeprom_i2c_open
0x3C32      [94]    _wiegand26_checkTouch
0x3C90     [412]    _timer2_open
0x3E2C     [380]    _Div_32x32_FP
0x3FA8   [10310]    _can_user_read_message
0x67EE      [36]    _external_int1_open
0x6812      [38]    _longword2double
0x6838      [76]    _mysql_init
0x6884     [288]    _timer1_open
0x69A4      [70]    _can_heartbeat
0x69EA      [20]    _EEPROM_Read
0x69FE     [290]    _timer3_open
0x6B20     [198]    _Lcd_Init
0x6BE6      [38]    _usart_enable_rx
0x6C0C      [44]    _int_external_int0
0x6C38      [46]    _int_external_int1
0x6C66     [316]    _wiegand26_read_card
0x6DA2       [6]    _DS1307_open
0x6DA8     [258]    _LongToStr
0x6EAA     [200]    _usart_open
0x6F72     [598]    _can_do_write_message
0x71C8     [488]    _can_do_read_message
0x73B0     [356]    _wiegand26_read_nip
0x7514     [120]    _ByteToStr
0x758C     [192]    _mysql_search
0x764C      [46]    _can_desonexion
0x767A      [70]    _can_interrupt
0x76C0      [20]    _wiegand26_enable
0x76D4    [1590]    _usart_user_read_text
0x7D0A     [574]    _can_open
0x7F48     [144]    _mysql_count_forced
0x7FD8      [70]    _wiegand26_open
0x801E      [66]    _int_timer3
0x8060      [76]    _int_timer2
0x80AC      [62]    _int_timer1
0x80EA     [128]    _int_usart_rx
0x816A      [10]    _int_wiegand26
0x8174      [44]    _int_can
0x81A0      [16]    _usart_do_read_text
0x81B0     [254]    _validadora_barrera
0x82AE      [14]    _can_do_work
0x82BC     [224]    _validadora_bufferEventos
0x839C     [124]    _validadora_monedero
0x8418    [5178]    _validadora_checkTarjeta
0x9852     [456]    _pic_init
0x9A1A     [278]    _validadora_temporizadores
0x9B30      [16]    ___CC2DW
0x9B40      [36]    _main
0x9B64      [56]    _interrupt_low
0x9B9C      [42]    _interrupt
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATSda_temp_sda_L0
0x0000       [1]    SPI1_Write_tmp_L0
0x0000       [1]    UART1_Init_tmp_L0
0x0000       [1]    R0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATScl_temp_scl_L0
0x0000       [1]    EEPROM_Write_SaveINTCON_L0
0x0001       [1]    ispunct_rslt_L0
0x0001       [1]    I2C_soft_write_i_L0
0x0001       [1]    ?FLOC___int_usart_rxT742
0x0001       [1]    string_cpyn_cont_L0
0x0001       [1]    UART1_Read___tmp_UART1_Read_L0
0x0001       [1]    R1
0x0001       [1]    string_cmpn_cont_L0
0x0001       [1]    I2C_soft_read_i_L0
0x0002       [2]    memset_pp_L0
0x0002       [2]    memcpy_dd_L0
0x0002       [1]    string_cmpnc_cont_L0
0x0002       [2]    memchr_s_L0
0x0002       [2]    strlen_28j60_cp_L0
0x0002       [2]    strlen_cp_L0
0x0002       [2]    memset_28j60_pp_L0
0x0002       [2]    memcpy_28j60_dd_L0
0x0002       [1]    string_pop_result_L0
0x0002       [1]    R2
0x0003       [1]    __Lib_CAN_C_A_CANIDToRegs_loVal_L0
0x0003       [2]    Ltrim_original_L0
0x0003       [1]    R3
0x0003       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT29
0x0003       [2]    memmove_tt_L0
0x0004       [2]    strncat_cp_L0
0x0004       [2]    memcpy_ss_L0
0x0004       [1]    __Lib_CAN_C_A_CANIDToRegs_hiVal_L0
0x0004       [2]    strncpy_cp_L0
0x0004       [1]    R4
0x0004       [2]    strcat_cp_L0
0x0004       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT40
0x0004       [2]    memcpy_28j60_ss_L0
0x0004       [2]    frexp_pom_L0
0x0004       [2]    strcpy_cp_L0
0x0005       [2]    memmove_ff_L0
0x0005       [2]    LongIntToHex_input_half_L0
0x0005       [1]    R5
0x0005       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT54
0x0005       [2]    Ltrim_p_L0
0x0005       [1]    __Lib_CAN_C_A_CANIDToRegs_hrVal_L0
0x0005       [2]    LongWordToHex_input_half_L0
0x0006       [1]    __Lib_CAN_C_A_CANIDToRegs_hsVal_L0
0x0006       [1]    R6
0x0006       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT69
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    wiegand26_read_card_i_L0
0x0009       [1]    R9
0x000A       [1]    R10
0x000A       [1]    wiegand26_read_card_paridad_L0
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000E       [4]    wiegand26_read_card_aux_L0
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [1]    ___Low_saveWREG
0x0016       [1]    ___Low_saveSTATUS
0x0017       [1]    ___Low_saveBSR
0x001E       [1]    _flagSecondTMR3
0x001F       [2]    _temp_heartbeat
0x0021       [4]    ?lstr38_Validadora
0x0025      [11]    ?lstr3_Validadora
0x0030      [11]    ?lstr5_Validadora
0x003B      [14]    ?lstr4_Validadora
0x0049       [1]    _modeBufferEventos
0x004A      [15]    ?lstr25_Validadora
0x0059      [16]    ?lstr17_Validadora
0x0069       [3]    _prepagoId
0x006C      [14]    ?lstr19_Validadora
0x007A      [13]    ?lstr18_Validadora
0x0087       [4]    _prepagoNip
0x008B      [16]    ?lstr14_Validadora
0x009B      [13]    ?lstr13_Validadora
0x00A8      [20]    ?lstr16_Validadora
0x00BC      [16]    ?lstr15_Validadora
0x00CC      [13]    ?lstr22_Validadora
0x00D9       [2]    ?lstr21_Validadora
0x00DB      [14]    ?lstr24_Validadora
0x00E9      [17]    ?lstr23_Validadora
0x00FA       [5]    _keyOutDate
0x00FF       [7]    _tableKeyOutNip
0x0106      [16]    ?lstr20_Validadora
0x0116       [8]    _keyOutEstatus
0x011E       [4]    _keyOutNip
0x0122      [17]    ?lstr1_Validadora
0x0133      [10]    _tableSyncronia
0x013D       [4]    _canIp
0x0141       [4]    _canMask
0x0145       [2]    ?lstr44_Validadora
0x0147      [15]    ?lstr29_Validadora
0x0156       [2]    ?lstr28_Validadora
0x0158      [19]    ?lstr31_Validadora
0x016B      [22]    ?lstr30_Validadora
0x0181       [6]    _keyOutFol
0x0187      [19]    ?lstr26_Validadora
0x019A      [10]    _tableKeyOutFol
0x01A4      [19]    ?lstr27_Validadora
0x01B7      [15]    ?lstr37_Validadora
0x01C6      [19]    ?lstr36_Validadora
0x01D9       [7]    _columnaEstado
0x01E0      [14]    ?lstr2_Validadora
0x01EE      [15]    ?lstr35_Validadora
0x01FD       [8]    _tableKeyOutDate
0x0205      [19]    ?lstr32_Validadora
0x0218      [16]    ?lstr34_Validadora
0x0228      [16]    ?lstr33_Validadora
0x0238      [16]    ?lstr12_Validadora
0x0248       [2]    ?lstr42_Validadora
0x024A      [15]    ?lstr41_Validadora
0x0259       [2]    ?lstr43_Validadora
0x025B       [1]    int_timer1_temp_L0
0x025C       [9]    _eventosRegistro
0x0265       [8]    _eventosEstatus
0x026D      [11]    _tableEventosCAN
0x0278      [13]    ?lstr40_Validadora
0x0285       [1]    ?lstr39_Validadora
0x0286       [1]    can_do_read_message_len_L0
0x0287       [1]    validadora_monedero_startRelay_L0
0x0288       [1]    validadora_monedero_sensado_L0
0x0289       [1]    validadora_monedero_pulsosMonederos_L0
0x028A       [1]    validadora_temporizadores_isCanConect_L0
0x028B       [1]    can_do_write_message_maquinaE_L0
0x028C       [1]    _flagTMR3
0x028D       [1]    validadora_barrera_sensor_L0
0x028E       [1]    validadora_checkTarjeta_buscarNIP_L0
0x028F       [1]    validadora_checkTarjeta_buscarID_L0
0x0290       [2]    ?lstr45_Validadora
0x0292       [8]    _prepagoEstatus
0x029A       [8]    _tablePrepago
0x02A2       [6]    _prepagoSaldo
0x02A8      [16]    ?lstr11_Validadora
0x02B8      [19]    ?lstr10_Validadora
0x02CB       [8]    _pensionadosEstatus
0x02D3       [1]    _canSynchrony
0x02D4      [16]    ?lstr9_Validadora
0x02E4       [9]    _pensionadosVigencia
0x02ED       [1]    _canId
0x02EE      [12]    _tablePensionados
0x02FA       [3]    _pensionadosID
0x02FD       [8]    _tableSoporte
0x0305       [6]    ?lstr7_Validadora
0x030B       [1]    int_timer1_estados_L0
0x030C       [3]    _soporteID
0x030F       [1]    _tempLCD
0x0310       [1]    _limpiarLCD
0x0311       [7]    ?lstr6_Validadora
0x0318       [1]    int_timer3_temp_L0
0x0319       [5]    _prepagoDate
0x031E      [19]    ?lstr8_Validadora
0x0331       [1]    _abrirBarrera
0x0332       [1]    _tempMonedero
0x0333       [1]    _tempSensor
0x0334       [4]    Validadora_WIEGAN26_BUFFER
0x0338       [1]    Validadora_WIEGAN26_CONT
0x0339       [4]    Validadora_WIEGAN26_DATA
0x033D       [2]    _sampler1
0x033F       [2]    _WIEGAND_TEMP
0x0341       [2]    _pilaBufferPointer
0x0343       [2]    _sampler3
0x0345      [70]    _usart
0x038B      [48]    Validadora_myTable
0x03BB       [1]    can_do_write_message_datosEnviados_L0
0x03BC       [0]    __Lib_SoftI2C___StopWaiting
0x03BC       [0]    __Lib_Lcd_cmd_status
0x03BD       [2]    _pilaBufferCAN
0x03BF     [175]    _can
0x046E       [1]    can_do_write_message_finalizar_L0
0x046F       [4]    validadora_checkTarjeta_id_L0
0x0473       [2]    validadora_checkTarjeta_nip_L0
0x0475       [2]    validadora_checkTarjeta_fila_L0
0x0477      [27]    _myRTC
0x0492      [64]    _canCommand
0x04D2      [64]    _bufferEeprom
0x0512      [20]    _msjConst
0x0526       [1]    validadora_bufferEventos_estatus_L0
0x0526       [1]    ?FLOC___validadora_checkTarjetaT2671
0x0527       [1]    ?FLOC___validadora_checkTarjetaT2731
0x0528       [1]    ?FLOC___validadora_checkTarjetaT2832
0x0529       [1]    validadora_checkTarjeta_vigencia_L0
0x052A       [1]    validadora_checkTarjeta_estatus_L0
0x052B       [5]    validadora_checkTarjeta_acceso_L0
0x0530       [4]    validadora_checkTarjeta_saldo_L0
0x0534       [4]    validadora_checkTarjeta_seconds_L0
0x0538      [13]    validadora_checkTarjeta_fecha_L0
0x0545       [1]    validadora_checkTarjeta_isOtherToday_L0
0x0546       [4]    FARG_LongToStr_input
0x0546       [1]    FARG_can_interrupt_enable
0x0546       [4]    FARG_timer3_open_time_us
0x0546       [4]    FARG_usart_open_baudRate
0x0546       [2]    FARG_mysql_count_forced_tabla
0x0546       [4]    FARG_can_open_ip
0x0546       [1]    FARG_usart_enable_rx_enable
0x0546       [4]    FARG_timer1_open_time_us
0x0546       [2]    FARG_mysql_search_tabla
0x0546       [2]    FARG_EEPROM_Read_address
0x0546       [1]    FARG_ByteToStr_input
0x0546       [1]    usart_user_read_text_isOtherToday_L0
0x0546       [2]    FARG_wiegand26_read_nip_nip
0x0546       [1]    ?FLOC___can_do_write_messageT798
0x0546       [2]    FARG_wiegand26_read_card_id
0x0546       [4]    can_do_read_message_id_L0
0x0546       [2]    can_heartbeat_cmdHeartBeat_L0
0x0546       [2]    FARG_mysql_init_memoryMax
0x0547       [1]    usart_user_read_text_tam_L0
0x0547       [2]    FARG_ByteToStr_output
0x0547       [1]    FARG_usart_enable_rx_priorityHigh
0x0547       [1]    FARG_can_interrupt_hihgPriprity
0x0547       [1]    ?FLOC___can_do_write_messageT829
0x0548       [2]    FARG_mysql_count_forced_columna
0x0548       [2]    FARG_mysql_search_columna
0x0548       [1]    wiegand26_read_nip_i_L0
0x0548       [1]    can_do_write_message_cont_L0
0x0548       [1]    FARG_usart_enable_rx_delimitir
0x0548       [1]    usart_user_read_text_estatus_L0
0x0549       [4]    can_do_write_message_id_L0
0x0549       [1]    ByteToStr_DigitPos_L0
0x0549       [2]    usart_user_read_text_fila_L0
0x054A       [4]    FARG_mysql_search_buscar
0x054A       [2]    FARG_LongToStr_output
0x054A       [4]    FARG_mysql_count_forced_buscar
0x054A       [4]    FARG_can_open_mask
0x054A       [1]    FARG_timer3_open_powerOn
0x054A       [1]    FARG_timer1_open_powerOn
0x054A       [2]    FLOC__ByteToStr
0x054A       [1]    can_do_read_message_cont_L0
0x054B       [4]    usart_user_read_text_seconds_L0
0x054B       [1]    FARG_timer1_open_enable
0x054B       [1]    FARG_timer3_open_enable
0x054C       [2]    LongToStr_i_L0
0x054C       [1]    FARG_timer1_open_priorityHigh
0x054C       [1]    FARG_timer3_open_priorityHigh
0x054D       [1]    timer3_open_i_L0
0x054D       [1]    timer1_open_i_L0
0x054E       [1]    FARG_can_open_id
0x054E       [2]    LongToStr_negative_L0
0x054E       [2]    FARG_mysql_search_fila
0x054E       [2]    mysql_count_forced_coincidencias_L0
0x054F       [5]    usart_user_read_text_acceso_L0
0x054F       [1]    FARG_can_open_speed_us
0x0550       [4]    mysql_count_forced_busqueda_L0
0x0550       [4]    mysql_search_busqueda_L0
0x0550       [4]    LongToStr_inword_L0
0x0554       [4]    FARG_clamp_valor
0x0554       [4]    FARG_can_write_id
0x0554       [4]    FARG_LongWordToStr_input
0x0554       [2]    FARG_can_set_baud_speed_us
0x0554       [2]    FARG_can_read_id
0x0554       [1]    FARG_can_set_mode_CAN_MODE
0x0554       [2]    FARG_string_cmpn_text1
0x0554       [2]    FARG_decrypt_basic_cadena
0x0554       [1]    FARG_external_int0_enable_enable
0x0554       [4]    FARG_timer2_open_time_us
0x0554       [1]    FARG_external_int1_open_enable
0x0554       [1]    FARG_can_user_guardHeartBeat_idNodo
0x0554       [2]    FARG_DS1307_getSeconds_HHMMSS
0x0554       [2]    ?FLOC___can_user_read_messageT3810
0x0554       [2]    FARG_string_cpy_destino
0x0554       [2]    FARG_string_cmp_text1
0x0554       [1]    FARG_wiegand26_checkTouch_bytes
0x0554       [1]    FARG_external_int0_open_enable
0x0554       [1]    FARG_external_int1_enable_enable
0x0555       [1]    wiegand26_checkTouch_i_L0
0x0555       [1]    can_set_mode_modeAct_L0
0x0555       [1]    FARG_external_int0_open_edgeOnRising
0x0555       [1]    FARG_external_int1_open_edgeOnRising
0x0556       [2]    FARG_can_read_datos
0x0556       [2]    FARG_string_cmp_text2
0x0556       [1]    can_user_read_message_sizeKey_L0
0x0556       [2]    FARG_string_cpy_origen
0x0556       [1]    decrypt_basic_cont_L0
0x0556       [1]    DS1307_getSeconds_cont_L0
0x0556       [1]    can_set_baud_Tqp_L0
0x0556       [1]    wiegand26_checkTouch_nibleH_L0
0x0556       [1]    FARG_external_int1_open_priorityHigh
0x0556       [2]    FARG_string_cmpn_text2
0x0557       [1]    can_user_read_message_sizeTotal_L0
0x0557       [1]    can_set_baud_pre_L0
0x0557       [1]    wiegand26_checkTouch_nibleL_L0
0x0557       [4]    DS1307_getSeconds_segundos_L0
0x0558       [4]    FARG_clamp_min
0x0558       [1]    string_cmp_cont_L0
0x0558       [2]    can_user_read_message_fila_L0
0x0558       [2]    FARG_can_read_size
0x0558       [1]    FARG_string_cmpn_bytes
0x0558       [1]    string_cpy_cont_L0
0x0558       [2]    FARG_can_write_datos
0x0558       [2]    FARG_LongWordToStr_output
0x0558       [1]    FARG_timer2_open_powerOn
0x0559       [1]    FARG_timer2_open_enable
0x055A       [1]    ?FLOC___can_readT990
0x055A       [1]    FARG_can_write_size
0x055A       [1]    FARG_timer2_open_priorityHigh
0x055A       [1]    can_user_read_message_vigencia_L0
0x055A       [2]    LongWordToStr_len_L0
0x055B       [1]    can_user_read_message_estatus_L0
0x055B       [1]    ?FLOC___can_readT1003
0x055B       [1]    timer2_open_post_L0
0x055B       [1]    FARG_can_write_priority
0x055C       [4]    can_user_read_message_idConsulta_L0
0x055C       [1]    FARG_can_write_rtr
0x055C       [4]    FARG_clamp_max
0x055C       [2]    FLOC__LongWordToStr
0x055C       [1]    timer2_open_pres_L0
0x055C       [1]    ?FLOC___can_readT1005
0x055D       [1]    ?FLOC___can_readT1013
0x055D       [1]    ?FLOC___can_writeT1132
0x055D       [1]    timer2_open_auxPre_L0
0x055E       [1]    ?FLOC___can_writeT1140
0x055E       [2]    can_read_receptor_L0
0x055F       [1]    ?FLOC___can_writeT1148
0x0560       [2]    can_read_regLen_L0
0x0560       [4]    can_user_read_message_idNew_L0
0x0560       [2]    can_write_transmisor_L0
0x0562       [2]    can_read_buffer_L0
0x0562       [2]    can_write_mascara_L0
0x0564       [2]    can_read_bufferBX_L0
0x0564       [2]    can_write_regLen_L0
0x0564       [4]    can_user_read_message_id_L0
0x0566       [2]    can_write_buffer_L0
0x0566       [1]    can_read_ref_L0
0x0568       [1]    can_write_ref_L0
0x0568       [4]    can_user_read_message_nip_L0
0x056C       [4]    can_user_read_message_folioKey_L0
0x0570       [4]    can_user_read_message_saldo_L0
0x0574       [4]    can_user_read_message_auxNip_L0
0x0578       [2]    FARG_string_push_texto
0x0578       [2]    FARG_stringToNum_cadena
0x0578       [2]    FARG_mysql_write_name
0x0578       [3]    FARG_string_cmpnc_text1
0x0578       [2]    FARG_mysql_search_forced_tabla
0x0578       [2]    FARG_mysql_erase_name
0x0578       [2]    FARG_string_cpyc_destino
0x0578       [2]    FARG_DS1307_read_myDS
0x0578       [1]    FARG_buffer_save_send_guardar
0x0578       [2]    FARG_mysql_read_string_name
0x0578       [1]    FARG_lcd_clean_row_fila
0x0578       [2]    FARG_string_add_destino
0x0578       [1]    FARG_Lcd_Out_row
0x0578       [1]    FARG_can_set_operation_CAN_OPERATION
0x0578       [1]    FARG_timer1_enable_enable
0x0578       [2]    FARG_string_cpyn_destino
0x0578       [2]    FARG_mysql_write_string_name
0x0578       [2]    FARG_can_set_id_address
0x0578       [2]    FARG_can_get_id_address
0x0578       [4]    FARG_numToHex_valor
0x0578       [2]    FARG_string_toUpper_cadena
0x0578       [2]    FARG_string_addc_destino
0x0578       [2]    FARG_hexToNum_hex
0x0578       [2]    FARG_DS1307_write_string_myDS
0x0579       [2]    FARG_buffer_save_send_buffer
0x0579       [1]    lcd_clean_row_i_L0
0x0579       [1]    FARG_Lcd_Out_column
0x057A       [1]    string_toUpper_cont_L0
0x057A       [1]    stringToNum_cont_L0
0x057A       [2]    FARG_string_cpyn_origen
0x057A       [1]    hexToNum_cont_L0
0x057A       [1]    FARG_string_push_caracter
0x057A       [2]    FARG_string_add_addEnd
0x057A       [3]    FARG_string_cpyc_origen
0x057A       [3]    FARG_string_addc_addEnd
0x057A       [1]    FARG_DS1307_read_formatComplet
0x057A       [2]    FARG_DS1307_write_string_date
0x057A       [2]    FARG_mysql_read_string_column
0x057A       [2]    FARG_mysql_write_string_column
0x057A       [2]    FARG_mysql_write_column
0x057A       [4]    FARG_can_set_id_value
0x057A       [2]    FARG_mysql_search_forced_columna
0x057A       [4]    can_get_id_value_L0
0x057A       [2]    FARG_Lcd_Out_text
0x057B       [2]    FLOC__DS1307_read
0x057B       [1]    buffer_save_send_result_L0
0x057B       [1]    hexToNum_ref_L0
0x057B       [4]    stringToNum_numero_L0
0x057B       [1]    string_push_cont_L0
0x057B       [2]    FARG_string_cmpnc_text2
0x057C       [2]    FARG_mysql_write_fila
0x057C       [4]    hexToNum_valor_L0
0x057C       [4]    FARG_mysql_search_forced_buscar
0x057C       [1]    string_add_total_L0
0x057C       [1]    FARG_string_cpyn_size
0x057C       [2]    FARG_numToHex_cadena
0x057C       [2]    FARG_mysql_write_string_fila
0x057C       [2]    FLOC__DS1307_write_string
0x057C       [2]    FARG_mysql_read_string_fila
0x057C       [1]    Lcd_Out_i_L0
0x057D       [1]    string_addc_total_L0
0x057D       [1]    string_add_cont_L0
0x057D       [1]    FARG_string_cmpnc_bytes
0x057D       [1]    string_cpyc_cont_L0
0x057E       [4]    FARG_mysql_write_value
0x057E       [1]    string_addc_cont_L0
0x057E       [1]    FARG_numToHex_bytes
0x057E       [2]    FARG_mysql_read_string_result
0x057E       [2]    FARG_mysql_write_string_texto
0x057F       [1]    numToHex_cont_L0
0x0580       [1]    FARG_mysql_write_string_endWrite
0x0580       [2]    FARG_mysql_search_forced_fila
0x0580       [1]    mysql_read_string_res_L0
0x0580       [2]    FLOC__numToHex
0x0580       [2]    FLOC__hexToNum
0x0581       [1]    mysql_write_string_res_L0
0x0582       [1]    FARG_mysql_write_endWrite
0x0582       [4]    mysql_search_forced_busqueda_L0
0x0583       [1]    mysql_write_res_L0
0x0586       [2]    FARG_mysql_write_roundTrip_name
0x0586       [2]    FARG_mysql_write_forced_name
0x0586       [4]    FARG_can_write_text_ipAddress
0x0586       [2]    FARG_string_len_texto
0x0586       [2]    FARG_string_isNumeric_cadena
0x0586       [2]    FARG_stringToNumN_cadena
0x0586       [1]    FARG_Soft_I2C_Write_data_
0x0586       [2]    FARG_mysql_read_name
0x0586       [2]    FARG_mysql_read_forced_name
0x0586       [2]    FARG_strlen_s
0x0586       [1]    FARG_bcdToDec_dato
0x0586       [2]    FARG_Soft_I2C_Read_ack
0x0586       [1]    FARG_decToBcd_dato
0x0586       [1]    FARG_Lcd_Chr_CP_out_char
0x0586       [2]    FARG_DS1307_date_myDS
0x0586       [1]    FARG_Lcd_Chr_row
0x0587       [2]    Soft_I2C_Write_temp_L0
0x0587       [1]    FARG_Lcd_Chr_column
0x0587       [1]    FLOC__decToBcd
0x0588       [1]    FARG_stringToNumN_size
0x0588       [1]    string_len_cont_L0
0x0588       [2]    FARG_mysql_write_roundTrip_column
0x0588       [1]    FARG_Lcd_Chr_out_char
0x0588       [2]    FARG_mysql_read_column
0x0588       [1]    FARG_DS1307_date_formatComplet
0x0588       [2]    Soft_I2C_Read_result_L0
0x0588       [2]    FARG_mysql_write_forced_column
0x0588       [2]    FARG_mysql_read_forced_column
0x0588       [1]    string_isNumeric_cont_L0
0x0589       [1]    DS1307_date_cont_L0
0x0589       [1]    stringToNumN_cont_L0
0x0589       [2]    Soft_I2C_Write_result_L0
0x058A       [2]    FARG_mysql_read_forced_fila
0x058A       [2]    FARG_mysql_read_fila
0x058A       [2]    FARG_can_write_text_texto
0x058A       [2]    FARG_mysql_write_forced_fila
0x058A       [2]    FARG_mysql_write_roundTrip_texto
0x058A       [4]    stringToNumN_numero_L0
0x058A       [2]    Soft_I2C_Read_temp_L0
0x058C       [1]    FARG_mysql_write_roundTrip_bytes
0x058C       [2]    FARG_mysql_write_forced_texto
0x058C       [2]    FARG_mysql_read_result
0x058C       [1]    FARG_can_write_text_priority
0x058C       [2]    FARG_mysql_read_forced_result
0x058D       [1]    mysql_write_roundTrip_res_L0
0x058E       [1]    mysql_read_forced_res_L0
0x058E       [1]    FARG_mysql_write_forced_bytes
0x058E       [1]    mysql_read_res_L0
0x058F       [1]    mysql_write_forced_res_L0
0x0590       [4]    FARG_numToString_valor
0x0590       [4]    FARG_clamp_shift_valor
0x0590       [2]    FARG_eeprom_i2c_write_address
0x0590       [1]    FARG_Lcd_Cmd_out_char
0x0590       [1]    FARG_Swap_input
0x0590       [2]    FARG__mysql_calculate_address_name
0x0592       [2]    FARG__mysql_calculate_address_column
0x0592       [2]    FARG_eeprom_i2c_write_datos
0x0594       [1]    FARG_eeprom_i2c_write_size
0x0594       [4]    FARG_clamp_shift_min
0x0594       [2]    FARG_numToString_cadena
0x0594       [2]    _mysql_calculate_address_addressAux_L0
0x0595       [1]    eeprom_i2c_write_cont_L0
0x0596       [1]    FARG_numToString_digitos
0x0596       [2]    FLOC___mysql_calculate_address
0x0597       [2]    FLOC__numToString
0x0598       [4]    FARG_clamp_shift_max
0x059C       [2]    FARG_mysql_exist_name
0x059E       [2]    FARG_strncmp_s1
0x059E       [2]    FARG_eeprom_i2c_read_address
0x05A0       [2]    FARG_strncmp_s2
0x05A0       [2]    FARG_eeprom_i2c_read_datos
0x05A2       [1]    FARG_strncmp_len
0x05A2       [1]    FARG_eeprom_i2c_read_size
0x05A3       [1]    eeprom_i2c_read_cont_L0
0x05A4       [2]    FLOC__eeprom_i2c_read
0x05A6       [1]    FARG_I2C_soft_read_ACK
0x05A6       [1]    FARG_I2C_soft_write_dato
0x05A7       [1]    I2C_soft_read_result_L0
0x0D63       [1]    RXF6EIDL
0x0D67       [1]    RXF7EIDL
0x0D6B       [1]    RXF8EIDL
0x0D73       [1]    RXF9EIDL
0x0D77       [1]    RXF10EIDL
0x0D7B       [1]    RXF11EIDL
0x0D83       [1]    RXF12EIDL
0x0D87       [1]    RXF13EIDL
0x0D8B       [1]    RXF14EIDL
0x0D93       [1]    RXF15EIDL
0x0DF8       [1]    BSEL0
0x0E20       [1]    B0CON
0x0E24       [1]    B0EIDL
0x0E25       [1]    B0DLC
0x0E26       [1]    B0D0
0x0E30       [1]    B1CON
0x0E34       [1]    B1EIDL
0x0E35       [1]    B1DLC
0x0E36       [1]    B1D0
0x0E40       [1]    B2CON
0x0E44       [1]    B2EIDL
0x0E45       [1]    B2DLC
0x0E46       [1]    B2D0
0x0E50       [1]    B3CON
0x0E54       [1]    B3EIDL
0x0E55       [1]    B3DLC
0x0E56       [1]    B3D0
0x0E60       [1]    B4CON
0x0E64       [1]    B4EIDL
0x0E65       [1]    B4DLC
0x0E66       [1]    B4D0
0x0E70       [1]    B5CON
0x0E74       [1]    B5EIDL
0x0E75       [1]    B5DLC
0x0E76       [1]    B5D0
0x0F03       [1]    RXF0EIDL
0x0F07       [1]    RXF1EIDL
0x0F0B       [1]    RXF2EIDL
0x0F0F       [1]    RXF3EIDL
0x0F13       [1]    RXF4EIDL
0x0F17       [1]    RXF5EIDL
0x0F1B       [1]    RXM0EIDL
0x0F1F       [1]    RXM1EIDL
0x0F20       [1]    TXB2CON
0x0F24       [1]    TXB2EIDL
0x0F25       [1]    TXB2DLC
0x0F26       [1]    TXB2D0
0x0F30       [1]    TXB1CON
0x0F34       [1]    TXB1EIDL
0x0F35       [1]    TXB1DLC
0x0F36       [1]    TXB1D0
0x0F40       [1]    TXB0CON
0x0F44       [1]    TXB0EIDL
0x0F45       [1]    TXB0DLC
0x0F46       [1]    TXB0D0
0x0F50       [1]    RXB1CON
0x0F54       [1]    RXB1EIDL
0x0F56       [1]    RXB1D0
0x0F60       [1]    RXB0CON
0x0F64       [1]    RXB0EIDL
0x0F65       [1]    RXB0DLC
0x0F66       [1]    RXB0D0
0x0F6E       [1]    CANSTAT
0x0F6F       [1]    CANCON
0x0F70       [1]    BRGCON1
0x0F71       [1]    BRGCON2
0x0F72       [1]    BRGCON3
0x0F73       [1]    CIOCON
0x0F74       [1]    COMSTAT
0x0F77       [1]    ECANCON
0x0F80       [0]    LCD_D4
0x0F80       [0]    LCD_EN
0x0F80       [0]    SALIDA_RELE1
0x0F80       [0]    LCD_D5
0x0F80       [1]    PORTA
0x0F80       [0]    LCD_D7
0x0F80       [0]    LCD_D6
0x0F81       [1]    PORTB
0x0F81       [0]    I2C_SDA
0x0F81       [0]    I2C_SCL
0x0F82       [1]    PORTC
0x0F82       [0]    LED_LINK
0x0F83       [0]    SALIDA_RELE4
0x0F83       [0]    SALIDA_RELE5
0x0F83       [0]    SALIDA_RELE3
0x0F83       [0]    BOTON_ENTRADA1
0x0F83       [0]    Soft_I2C_Sda
0x0F83       [0]    SENSOR_COCHE
0x0F83       [1]    PORTD
0x0F83       [0]    BOTON_IMPRIMIR
0x0F84       [0]    Soft_I2C_Scl
0x0F84       [1]    PORTE
0x0F84       [0]    SALIDA_RELE2
0x0F84       [0]    LCD_RS
0x0F92       [0]    LCD_D6_Direction
0x0F92       [0]    LCD_D7_Direction
0x0F92       [0]    SALIDA_RELE1D
0x0F92       [0]    LCD_EN_Direction
0x0F92       [0]    LCD_D4_Direction
0x0F92       [0]    LCD_D5_Direction
0x0F92       [1]    TRISA
0x0F93       [1]    TRISB
0x0F93       [0]    I2C_SDAD
0x0F93       [0]    I2C_SCLD
0x0F94       [0]    LED_LINKD
0x0F94       [1]    TRISC
0x0F95       [1]    TRISD
0x0F95       [0]    SALIDA_RELE5D
0x0F95       [0]    SALIDA_RELE3D
0x0F95       [0]    SALIDA_RELE4D
0x0F95       [0]    Soft_I2C_Sda_Direction
0x0F95       [0]    BOTON_ENTRADA1D
0x0F95       [0]    BOTON_IMPRIMIRD
0x0F95       [0]    SENSOR_COCHED
0x0F96       [0]    Soft_I2C_Scl_Direction
0x0F96       [1]    TRISE
0x0F96       [0]    SALIDA_RELE2D
0x0F96       [0]    LCD_RS_Direction
0x0F9D       [1]    PIE1
0x0F9E       [1]    PIR1
0x0F9F       [1]    IPR1
0x0FA0       [1]    PIE2
0x0FA1       [1]    PIR2
0x0FA2       [1]    IPR2
0x0FA3       [1]    PIE3
0x0FA4       [1]    PIR3
0x0FA5       [1]    IPR3
0x0FA6       [1]    EECON1
0x0FA8       [1]    EEDATA
0x0FA9       [1]    EEADR
0x0FAA       [1]    EEADRH
0x0FAB       [1]    RCSTA
0x0FAC       [1]    TXSTA
0x0FAE       [1]    RCREG
0x0FAF       [1]    SPBRG
0x0FB0       [1]    SPBRGH
0x0FB1       [1]    T3CON
0x0FB2       [1]    TMR3L
0x0FB3       [1]    TMR3H
0x0FB4       [1]    CMCON
0x0FB8       [1]    BAUDCON
0x0FC1       [1]    ADCON1
0x0FCA       [1]    T2CON
0x0FCB       [1]    PR2
0x0FCC       [1]    TMR2
0x0FCD       [1]    T1CON
0x0FCE       [1]    TMR1L
0x0FCF       [1]    TMR1H
0x0FD0       [1]    RCON
0x0FD3       [1]    OSCCON
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FEF       [1]    INDF0
0x0FF0       [1]    INTCON3
0x0FF1       [1]    INTCON2
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x9BC6       [1]    ?ICS_flagSecondTMR3
0x9BC7       [2]    ?ICS_temp_heartbeat
0x9BC9       [4]    ?ICS?lstr38_Validadora
0x9BCD      [11]    ?ICS?lstr3_Validadora
0x9BD8      [11]    ?ICS?lstr5_Validadora
0x9BE3      [14]    ?ICS?lstr4_Validadora
0x9BF1       [1]    ?ICS_modeBufferEventos
0x9BF2      [15]    ?ICS?lstr25_Validadora
0x9C01      [16]    ?ICS?lstr17_Validadora
0x9C11       [3]    ?ICS_prepagoId
0x9C14      [14]    ?ICS?lstr19_Validadora
0x9C22      [13]    ?ICS?lstr18_Validadora
0x9C2F       [4]    ?ICS_prepagoNip
0x9C33      [16]    ?ICS?lstr14_Validadora
0x9C43      [13]    ?ICS?lstr13_Validadora
0x9C50      [20]    ?ICS?lstr16_Validadora
0x9C64      [16]    ?ICS?lstr15_Validadora
0x9C74      [13]    ?ICS?lstr22_Validadora
0x9C81       [2]    ?ICS?lstr21_Validadora
0x9C83      [14]    ?ICS?lstr24_Validadora
0x9C91      [17]    ?ICS?lstr23_Validadora
0x9CA2       [5]    ?ICS_keyOutDate
0x9CA7       [7]    ?ICS_tableKeyOutNip
0x9CAE      [16]    ?ICS?lstr20_Validadora
0x9CBE       [8]    ?ICS_keyOutEstatus
0x9CC6       [4]    ?ICS_keyOutNip
0x9CCA      [17]    ?ICS?lstr1_Validadora
0x9CDB      [10]    ?ICS_tableSyncronia
0x9CE5       [4]    ?ICS_canIp
0x9CE9       [4]    ?ICS_canMask
0x9CED       [2]    ?ICS?lstr44_Validadora
0x9CEF      [15]    ?ICS?lstr29_Validadora
0x9CFE       [2]    ?ICS?lstr28_Validadora
0x9D00      [19]    ?ICS?lstr31_Validadora
0x9D13      [22]    ?ICS?lstr30_Validadora
0x9D29       [6]    ?ICS_keyOutFol
0x9D2F      [19]    ?ICS?lstr26_Validadora
0x9D42      [10]    ?ICS_tableKeyOutFol
0x9D4C      [19]    ?ICS?lstr27_Validadora
0x9D5F      [15]    ?ICS?lstr37_Validadora
0x9D6E      [19]    ?ICS?lstr36_Validadora
0x9D81       [7]    ?ICS_columnaEstado
0x9D88      [14]    ?ICS?lstr2_Validadora
0x9D96      [15]    ?ICS?lstr35_Validadora
0x9DA5       [8]    ?ICS_tableKeyOutDate
0x9DAD      [19]    ?ICS?lstr32_Validadora
0x9DC0      [16]    ?ICS?lstr34_Validadora
0x9DD0      [16]    ?ICS?lstr33_Validadora
0x9DE0      [16]    ?ICS?lstr12_Validadora
0x9DF0       [2]    ?ICS?lstr42_Validadora
0x9DF2      [15]    ?ICS?lstr41_Validadora
0x9E01       [2]    ?ICS?lstr43_Validadora
0x9E03       [1]    ?ICSint_timer1_temp_L0
0x9E04       [9]    ?ICS_eventosRegistro
0x9E0D       [8]    ?ICS_eventosEstatus
0x9E15      [11]    ?ICS_tableEventosCAN
0x9E20      [13]    ?ICS?lstr40_Validadora
0x9E2D       [1]    ?ICS?lstr39_Validadora
0x9E2E       [1]    ?ICScan_do_read_message_len_L0
0x9E2F       [1]    ?ICSvalidadora_monedero_startRelay_L0
0x9E30       [1]    ?ICSvalidadora_monedero_sensado_L0
0x9E31       [1]    ?ICSvalidadora_monedero_pulsosMonederos_L0
0x9E32       [1]    ?ICSvalidadora_temporizadores_isCanConect_L0
0x9E33       [1]    ?ICScan_do_write_message_maquinaE_L0
0x9E34       [1]    ?ICS_flagTMR3
0x9E35       [1]    ?ICSvalidadora_barrera_sensor_L0
0x9E36       [1]    ?ICSvalidadora_checkTarjeta_buscarNIP_L0
0x9E37       [1]    ?ICSvalidadora_checkTarjeta_buscarID_L0
0x9E38       [2]    ?ICS?lstr45_Validadora
0x9E3A       [8]    ?ICS_prepagoEstatus
0x9E42       [8]    ?ICS_tablePrepago
0x9E4A       [6]    ?ICS_prepagoSaldo
0x9E50      [16]    ?ICS?lstr11_Validadora
0x9E60      [19]    ?ICS?lstr10_Validadora
0x9E73       [8]    ?ICS_pensionadosEstatus
0x9E7B       [1]    ?ICS_canSynchrony
0x9E7C      [16]    ?ICS?lstr9_Validadora
0x9E8C       [9]    ?ICS_pensionadosVigencia
0x9E95       [1]    ?ICS_canId
0x9E96      [12]    ?ICS_tablePensionados
0x9EA2       [3]    ?ICS_pensionadosID
0x9EA5       [8]    ?ICS_tableSoporte
0x9EAD       [6]    ?ICS?lstr7_Validadora
0x9EB3       [1]    ?ICSint_timer1_estados_L0
0x9EB4       [3]    ?ICS_soporteID
0x9EB7       [1]    ?ICS_tempLCD
0x9EB8       [1]    ?ICS_limpiarLCD
0x9EB9       [7]    ?ICS?lstr6_Validadora
0x9EC0       [1]    ?ICSint_timer3_temp_L0
0x9EC1       [5]    ?ICS_prepagoDate
0x9EC6      [19]    ?ICS?lstr8_Validadora
0x9ED9       [1]    ?ICS_abrirBarrera
0x9EDA      [11]    _CAN_TABLE_MODIFICADO
0x9EE5       [9]    _CAN_TABLE_NO_FOUND
0x9EEE       [8]    _ticketAddr
0x9EF6       [6]    _CAN_TABLE_ERROR
0x9EFC       [5]    validadora_barrera_BARRERA_ABIERTA_L0
0x9F01       [5]    _ACCESO_DENEGADO
0x9F06       [4]    can_user_read_message_FILAS_ACTUALES_L0
0x9F0A       [4]    can_user_read_message_FILAS_PROG_L0
0x9F0E       [4]    _CAN_TPV
0x9F12       [4]    _CAN_TABLE_INFO
0x9F16       [4]    _CAN_SPECIAL_DATE
0x9F1A       [4]    _CAN_SALDO
0x9F1E       [4]    _CAN_TABLE_ERASE
0x9F22       [4]    _CAN_TABLE
0x9F26       [4]    _CAN_ABRIR
0x9F2A       [4]    _CAN_CMD
0x9F2E       [4]    _CAN_FOL
0x9F32       [4]    _CAN_OUT
0x9F36       [4]    _CAN_TBL
0x9F3A       [4]    _CAN_TABLE_RW
0x9F3E       [4]    _CAN_TABLE_WRITE
0x9F42       [4]    _CAN_TABLE_READ
0x9F46       [4]    _CAN_KEY
0x9F4A       [4]    _CAN_NIP
0x9F4E       [4]    _CAN_REGISTRAR
0x9F52       [4]    validadora_barrera_CAN_BAR_L0
0x9F56       [4]    _CAN_PASSBACK
0x9F5A       [4]    _CAN_PENSIONADO
0x9F5E       [4]    _CAN_SPECIAL_SALDO
0x9F62       [4]    _CAN_PREPAGO
0x9F66       [4]    _CAN_RTC
0x9F6A       [4]    _CAN_SOPORTE
0x9F6E       [4]    _CAN_TABLE_GET
0x9F72       [4]    _CAN_TABLE_SET
0x9F76       [4]    _CAN_VIGENCIA
0x9F7A       [4]    _CAN_ACTUALIZAR
0x9F7E       [4]    _CAN_IDX
0x9F82       [4]    _CAN_CONSULTAR
0x9F86       [2]    _CAN_MODULE
