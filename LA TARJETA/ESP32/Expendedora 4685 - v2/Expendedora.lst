;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 08/11/2021 01:05:31 p. m.
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF04DEFD1  	GOTO        39842
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF04DEFFB  	GOTO        39926
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xF04DEFDF  	GOTO        39870
_I2C_soft_write:
;i2c_soft.h,45 :: 		bool I2C_soft_write(char dato){
;i2c_soft.h,49 :: 		for(i = 0; i < 8; i++){
0x001C	0x6A01      	CLRF        R1 
L_I2C_soft_write413:
0x001E	0x0E08      	MOVLW       8
0x0020	0x5C01      	SUBWF       R1, 0 
0x0022	0xE217      	BC          L_I2C_soft_write414
;i2c_soft.h,50 :: 		I2C_SDA = dato.B7;  //El valor del bit
0x0024	0x0105      	MOVLB       5
0x0026	0xBF51      	BTFSC       FARG_I2C_soft_write_dato, 7, 1
0x0028	0xD002      	BRA         L__I2C_soft_write1256
0x002A	0x9A81      	BCF         I2C_SDA, BitPos(I2C_SDA+0) 
0x002C	0xD001      	BRA         L__I2C_soft_write1257
L__I2C_soft_write1256:
0x002E	0x8A81      	BSF         I2C_SDA, BitPos(I2C_SDA+0) 
L__I2C_soft_write1257:
;i2c_soft.h,51 :: 		I2C_SCL = 1;        //Activar dato
0x0030	0x8881      	BSF         I2C_SCL, BitPos(I2C_SCL+0) 
;i2c_soft.h,52 :: 		delay_us(2);
0x0032	0x0E06      	MOVLW       6
0x0034	0x6E0D      	MOVWF       R13, 0
L_I2C_soft_write416:
0x0036	0x0105      	MOVLB       5
0x0038	0x2E0D      	DECFSZ      R13, 1, 0
0x003A	0xD7FD      	BRA         L_I2C_soft_write416
0x003C	0x0000      	NOP
;i2c_soft.h,53 :: 		dato <<= 1;         //Recorro hacia la izquierda
0x003E	0x3751      	RLCF        FARG_I2C_soft_write_dato, 1, 1
0x0040	0x9151      	BCF         FARG_I2C_soft_write_dato, 0, 1
;i2c_soft.h,54 :: 		I2C_SCL = 0;
0x0042	0x9881      	BCF         I2C_SCL, BitPos(I2C_SCL+0) 
;i2c_soft.h,55 :: 		delay_us(2);
0x0044	0x0E06      	MOVLW       6
0x0046	0x6E0D      	MOVWF       R13, 0
L_I2C_soft_write417:
0x0048	0x2E0D      	DECFSZ      R13, 1, 0
0x004A	0xD7FE      	BRA         L_I2C_soft_write417
0x004C	0x0000      	NOP
;i2c_soft.h,49 :: 		for(i = 0; i < 8; i++){
0x004E	0x2A01      	INCF        R1, 1 
;i2c_soft.h,56 :: 		}
0x0050	0xD7E6      	BRA         L_I2C_soft_write413
L_I2C_soft_write414:
;i2c_soft.h,59 :: 		I2C_SDAD = 1;
0x0052	0x8A93      	BSF         I2C_SDAD, BitPos(I2C_SDAD+0) 
;i2c_soft.h,60 :: 		asm nop;
0x0054	0x0000      	NOP
;i2c_soft.h,61 :: 		I2C_SCL = 1;     //Mandar el púlso para recibir el ACK
0x0056	0x8881      	BSF         I2C_SCL, BitPos(I2C_SCL+0) 
;i2c_soft.h,62 :: 		delay_us(2);
0x0058	0x0E06      	MOVLW       6
0x005A	0x6E0D      	MOVWF       R13, 0
L_I2C_soft_write418:
0x005C	0x2E0D      	DECFSZ      R13, 1, 0
0x005E	0xD7FE      	BRA         L_I2C_soft_write418
0x0060	0x0000      	NOP
;i2c_soft.h,63 :: 		i.B0 = I2C_SDA;  //Guardo el valor del ACK
0x0062	0xBA81      	BTFSC       I2C_SDA, BitPos(I2C_SDA+0) 
0x0064	0xD002      	BRA         L__I2C_soft_write1258
0x0066	0x9001      	BCF         R1, 0 
0x0068	0xD001      	BRA         L__I2C_soft_write1259
L__I2C_soft_write1258:
0x006A	0x8001      	BSF         R1, 0 
L__I2C_soft_write1259:
;i2c_soft.h,64 :: 		I2C_SCL = 0;
0x006C	0x9881      	BCF         I2C_SCL, BitPos(I2C_SCL+0) 
;i2c_soft.h,65 :: 		I2C_SDAD = 0;    //Configurar como salida el pin
0x006E	0x9A93      	BCF         I2C_SDAD, BitPos(I2C_SDAD+0) 
;i2c_soft.h,67 :: 		return i.B0;
0x0070	0x0E00      	MOVLW       0
0x0072	0xB001      	BTFSC       R1, 0 
0x0074	0x0E01      	MOVLW       1
0x0076	0x6E00      	MOVWF       R0 
;i2c_soft.h,68 :: 		}
L_end_I2C_soft_write:
0x0078	0x0012      	RETURN      0
; end of _I2C_soft_write
_I2C_soft_read:
;i2c_soft.h,70 :: 		char I2C_soft_read(bool ACK){
;i2c_soft.h,71 :: 		char i, result = 0;
0x007A	0x0105      	MOVLB       5
0x007C	0x6B52      	CLRF        I2C_soft_read_result_L0, 1
;i2c_soft.h,74 :: 		I2C_SDAD = 1;
0x007E	0x8A93      	BSF         I2C_SDAD, BitPos(I2C_SDAD+0) 
;i2c_soft.h,76 :: 		for(i = 0; i < 8; i++){
0x0080	0x6A01      	CLRF        R1 
L_I2C_soft_read419:
0x0082	0x0E08      	MOVLW       8
0x0084	0x5C01      	SUBWF       R1, 0 
0x0086	0xE212      	BC          L_I2C_soft_read420
;i2c_soft.h,77 :: 		result <<= 1;
0x0088	0x3752      	RLCF        I2C_soft_read_result_L0, 1, 1
0x008A	0x9152      	BCF         I2C_soft_read_result_L0, 0, 1
;i2c_soft.h,78 :: 		I2C_SCL = 1;
0x008C	0x8881      	BSF         I2C_SCL, BitPos(I2C_SCL+0) 
;i2c_soft.h,79 :: 		delay_us(2);
0x008E	0x0E06      	MOVLW       6
0x0090	0x6E0D      	MOVWF       R13, 0
L_I2C_soft_read422:
0x0092	0x2E0D      	DECFSZ      R13, 1, 0
0x0094	0xD7FE      	BRA         L_I2C_soft_read422
0x0096	0x0000      	NOP
;i2c_soft.h,81 :: 		if(I2C_SDA)
0x0098	0xBA81      	BTFSC       I2C_SDA, BitPos(I2C_SDA+0) 
;i2c_soft.h,82 :: 		result |= 0x01;
0x009A	0x8152      	BSF         I2C_soft_read_result_L0, 0, 1
L_I2C_soft_read423:
;i2c_soft.h,83 :: 		I2C_SCL = 0;
0x009C	0x9881      	BCF         I2C_SCL, BitPos(I2C_SCL+0) 
;i2c_soft.h,84 :: 		delay_us(2);
0x009E	0x0E06      	MOVLW       6
0x00A0	0x6E0D      	MOVWF       R13, 0
L_I2C_soft_read424:
0x00A2	0x2E0D      	DECFSZ      R13, 1, 0
0x00A4	0xD7FE      	BRA         L_I2C_soft_read424
0x00A6	0x0000      	NOP
;i2c_soft.h,76 :: 		for(i = 0; i < 8; i++){
0x00A8	0x2A01      	INCF        R1, 1 
;i2c_soft.h,85 :: 		}
0x00AA	0xD7EB      	BRA         L_I2C_soft_read419
L_I2C_soft_read420:
;i2c_soft.h,88 :: 		I2C_SDAD = 0;
0x00AC	0x9A93      	BCF         I2C_SDAD, BitPos(I2C_SDAD+0) 
;i2c_soft.h,89 :: 		I2C_SDA = !ACK.B0;  //Señal negada
0x00AE	0xB151      	BTFSC       FARG_I2C_soft_read_ACK, 0, 1
0x00B0	0xD002      	BRA         L__I2C_soft_read1261
0x00B2	0x8A81      	BSF         I2C_SDA, BitPos(I2C_SDA+0) 
0x00B4	0xD001      	BRA         L__I2C_soft_read1262
L__I2C_soft_read1261:
0x00B6	0x9A81      	BCF         I2C_SDA, BitPos(I2C_SDA+0) 
L__I2C_soft_read1262:
;i2c_soft.h,90 :: 		asm nop;
0x00B8	0x0000      	NOP
;i2c_soft.h,91 :: 		I2C_SCL = 1;
0x00BA	0x8881      	BSF         I2C_SCL, BitPos(I2C_SCL+0) 
;i2c_soft.h,92 :: 		delay_us(2);
0x00BC	0x0E06      	MOVLW       6
0x00BE	0x6E0D      	MOVWF       R13, 0
L_I2C_soft_read425:
0x00C0	0x2E0D      	DECFSZ      R13, 1, 0
0x00C2	0xD7FE      	BRA         L_I2C_soft_read425
0x00C4	0x0000      	NOP
;i2c_soft.h,93 :: 		I2C_SCL = 0;
0x00C6	0x9881      	BCF         I2C_SCL, BitPos(I2C_SCL+0) 
;i2c_soft.h,95 :: 		return result;
0x00C8	0xF000C552  	MOVFF       I2C_soft_read_result_L0, R0
;i2c_soft.h,96 :: 		}
L_end_I2C_soft_read:
0x00CC	0x0012      	RETURN      0
; end of _I2C_soft_read
_I2C_soft_stop:
;i2c_soft.h,36 :: 		void I2C_soft_stop(){
;i2c_soft.h,37 :: 		I2C_SDAD = 0;  //Configuro de salida por seguridad
0x00CE	0x9A93      	BCF         I2C_SDAD, BitPos(I2C_SDAD+0) 
;i2c_soft.h,38 :: 		I2C_SDA = 0;   //Mando cero por el protocolo
0x00D0	0x9A81      	BCF         I2C_SDA, BitPos(I2C_SDA+0) 
;i2c_soft.h,39 :: 		delay_us(2);
0x00D2	0x0E06      	MOVLW       6
0x00D4	0x6E0D      	MOVWF       R13, 0
L_I2C_soft_stop411:
0x00D6	0x2E0D      	DECFSZ      R13, 1, 0
0x00D8	0xD7FE      	BRA         L_I2C_soft_stop411
0x00DA	0x0000      	NOP
;i2c_soft.h,40 :: 		I2C_SCLD = 1;
0x00DC	0x8893      	BSF         I2C_SCLD, BitPos(I2C_SCLD+0) 
;i2c_soft.h,41 :: 		delay_us(2);
0x00DE	0x0E06      	MOVLW       6
0x00E0	0x6E0D      	MOVWF       R13, 0
L_I2C_soft_stop412:
0x00E2	0x2E0D      	DECFSZ      R13, 1, 0
0x00E4	0xD7FE      	BRA         L_I2C_soft_stop412
0x00E6	0x0000      	NOP
;i2c_soft.h,42 :: 		I2C_SDAD = 1;
0x00E8	0x8A93      	BSF         I2C_SDAD, BitPos(I2C_SDAD+0) 
;i2c_soft.h,43 :: 		}
L_end_I2C_soft_stop:
0x00EA	0x0012      	RETURN      0
; end of _I2C_soft_stop
_I2C_soft_start:
;i2c_soft.h,22 :: 		void I2C_soft_start(){
;i2c_soft.h,24 :: 		I2C_SDAD = 1;
0x00EC	0x8A93      	BSF         I2C_SDAD, BitPos(I2C_SDAD+0) 
;i2c_soft.h,25 :: 		I2C_SCLD = 1;
0x00EE	0x8893      	BSF         I2C_SCLD, BitPos(I2C_SCLD+0) 
;i2c_soft.h,26 :: 		delay_us(2);
0x00F0	0x0E06      	MOVLW       6
0x00F2	0x6E0D      	MOVWF       R13, 0
L_I2C_soft_start409:
0x00F4	0x2E0D      	DECFSZ      R13, 1, 0
0x00F6	0xD7FE      	BRA         L_I2C_soft_start409
0x00F8	0x0000      	NOP
;i2c_soft.h,28 :: 		I2C_SDAD = 0;
0x00FA	0x9A93      	BCF         I2C_SDAD, BitPos(I2C_SDAD+0) 
;i2c_soft.h,29 :: 		I2C_SDA = 0;  //Señal en bajo
0x00FC	0x9A81      	BCF         I2C_SDA, BitPos(I2C_SDA+0) 
;i2c_soft.h,30 :: 		delay_us(2);
0x00FE	0x0E06      	MOVLW       6
0x0100	0x6E0D      	MOVWF       R13, 0
L_I2C_soft_start410:
0x0102	0x2E0D      	DECFSZ      R13, 1, 0
0x0104	0xD7FE      	BRA         L_I2C_soft_start410
0x0106	0x0000      	NOP
;i2c_soft.h,32 :: 		I2C_SCLD = 0;
0x0108	0x9893      	BCF         I2C_SCLD, BitPos(I2C_SCLD+0) 
;i2c_soft.h,33 :: 		I2C_SCL = 0;  //Señal en bajo
0x010A	0x9881      	BCF         I2C_SCL, BitPos(I2C_SCL+0) 
;i2c_soft.h,34 :: 		}
L_end_I2C_soft_start:
0x010C	0x0012      	RETURN      0
; end of _I2C_soft_start
_strncmp:
;__Lib_CString.c,226 :: 		
;__Lib_CString.c,228 :: 		
L_strncmp58:
0x010E	0xF000C54D  	MOVFF       FARG_strncmp_len, R0
0x0112	0x0105      	MOVLB       5
0x0114	0x074D      	DECF        FARG_strncmp_len, 1, 1
0x0116	0x5200      	MOVF        R0, 1 
0x0118	0xE028      	BZ          L_strncmp59
;__Lib_CString.c,229 :: 		
0x011A	0xFFE9C549  	MOVFF       FARG_strncmp_s1, FSR0L
0x011E	0xFFEAC54A  	MOVFF       FARG_strncmp_s1+1, FSR0H
0x0122	0x50EE      	MOVF        POSTINC0, 0 
0x0124	0x0A00      	XORLW       0
0x0126	0xE00C      	BZ          L__strncmp85
0x0128	0xFFE9C549  	MOVFF       FARG_strncmp_s1, FSR0L
0x012C	0xFFEAC54A  	MOVFF       FARG_strncmp_s1+1, FSR0H
0x0130	0xFFD9C54B  	MOVFF       FARG_strncmp_s2, FSR2L
0x0134	0xFFDAC54C  	MOVFF       FARG_strncmp_s2+1, FSR2H
0x0138	0x50EE      	MOVF        POSTINC0, 0 
0x013A	0x18DE      	XORWF       POSTINC2, 0 
0x013C	0xE101      	BNZ         L__strncmp85
0x013E	0xD00F      	BRA         L_strncmp62
L__strncmp85:
;__Lib_CString.c,230 :: 		
0x0140	0xFFE9C549  	MOVFF       FARG_strncmp_s1, FSR0L
0x0144	0xFFEAC54A  	MOVFF       FARG_strncmp_s1+1, FSR0H
0x0148	0xFFD9C54B  	MOVFF       FARG_strncmp_s2, FSR2L
0x014C	0xFFDAC54C  	MOVFF       FARG_strncmp_s2+1, FSR2H
0x0150	0x50DE      	MOVF        POSTINC2, 0 
0x0152	0x5CEE      	SUBWF       POSTINC0, 0 
0x0154	0x6E00      	MOVWF       R0 
0x0156	0x6A01      	CLRF        R1 
0x0158	0x0E00      	MOVLW       0
0x015A	0x5A01      	SUBWFB      R1, 1 
0x015C	0xD008      	BRA         L_end_strncmp
L_strncmp62:
0x015E	0x0105      	MOVLB       5
;__Lib_CString.c,231 :: 		
0x0160	0x4B49      	INFSNZ      FARG_strncmp_s1, 1, 1
0x0162	0x2B4A      	INCF        FARG_strncmp_s1+1, 1, 1
;__Lib_CString.c,232 :: 		
0x0164	0x4B4B      	INFSNZ      FARG_strncmp_s2, 1, 1
0x0166	0x2B4C      	INCF        FARG_strncmp_s2+1, 1, 1
;__Lib_CString.c,233 :: 		
0x0168	0xD7D2      	BRA         L_strncmp58
L_strncmp59:
;__Lib_CString.c,234 :: 		
0x016A	0x6A00      	CLRF        R0 
0x016C	0x6A01      	CLRF        R1 
;__Lib_CString.c,235 :: 		
L_end_strncmp:
0x016E	0x0012      	RETURN      0
; end of _strncmp
_SDIV3232L:
;__Lib_Math.c,553 :: 		
;__Lib_Math.c,563 :: 		
0x0170	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,564 :: 		
0x0172	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,565 :: 		
0x0174	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,566 :: 		
0x0176	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,567 :: 		
0x0178	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,568 :: 		
0x017A	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,569 :: 		
0x017C	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,570 :: 		
0x017E	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,571 :: 		
0x0180	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,572 :: 		
0x0182	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,573 :: 		
0x0184	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,574 :: 		
0x0186	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,575 :: 		
0x0188	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,576 :: 		
0x018A	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,577 :: 		
0x018C	0x3603      	RLCF        R3, 1, 0
;__Lib_Math.c,579 :: 		
0x018E	0x0E07      	MOVLW       7
;__Lib_Math.c,580 :: 		
0x0190	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,582 :: 		
LOOPS3232A:
;__Lib_Math.c,583 :: 		
0x0192	0x3403      	RLCF        R3, 0, 0
;__Lib_Math.c,584 :: 		
0x0194	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,585 :: 		
0x0196	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,586 :: 		
0x0198	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,587 :: 		
0x019A	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,588 :: 		
0x019C	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,589 :: 		
0x019E	0xA003      	BTFSS       R3, 0, 0
;__Lib_Math.c,590 :: 		
0x01A0	0xD00E      	BRA         SADD22LA
;__Lib_Math.c,592 :: 		
0x01A2	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,593 :: 		
0x01A4	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,594 :: 		
0x01A6	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,595 :: 		
0x01A8	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,596 :: 		
0x01AA	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,597 :: 		
0x01AC	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,598 :: 		
0x01AE	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,599 :: 		
0x01B0	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,600 :: 		
0x01B2	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,601 :: 		
0x01B4	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,602 :: 		
0x01B6	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,603 :: 		
0x01B8	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,604 :: 		
0x01BA	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,605 :: 		
0x01BC	0xD00D      	BRA         SOK22LA
;__Lib_Math.c,607 :: 		
SADD22LA:
;__Lib_Math.c,608 :: 		
0x01BE	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,609 :: 		
0x01C0	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,610 :: 		
0x01C2	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,611 :: 		
0x01C4	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,612 :: 		
0x01C6	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,613 :: 		
0x01C8	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,614 :: 		
0x01CA	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,615 :: 		
0x01CC	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,616 :: 		
0x01CE	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,617 :: 		
0x01D0	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,618 :: 		
0x01D2	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,619 :: 		
0x01D4	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,620 :: 		
0x01D6	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,622 :: 		
SOK22LA:
;__Lib_Math.c,623 :: 		
0x01D8	0x3603      	RLCF        R3, 1, 0
;__Lib_Math.c,625 :: 		
0x01DA	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,626 :: 		
0x01DC	0xD7DA      	BRA         LOOPS3232A
;__Lib_Math.c,628 :: 		
0x01DE	0x3402      	RLCF        R2, 0, 0
;__Lib_Math.c,629 :: 		
0x01E0	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,630 :: 		
0x01E2	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,631 :: 		
0x01E4	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,632 :: 		
0x01E6	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,633 :: 		
0x01E8	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,634 :: 		
0x01EA	0xA003      	BTFSS       R3, 0, 0
;__Lib_Math.c,635 :: 		
0x01EC	0xD00E      	BRA         SADD22L8
;__Lib_Math.c,637 :: 		
0x01EE	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,638 :: 		
0x01F0	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,639 :: 		
0x01F2	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,640 :: 		
0x01F4	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,641 :: 		
0x01F6	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,642 :: 		
0x01F8	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,643 :: 		
0x01FA	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,644 :: 		
0x01FC	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,645 :: 		
0x01FE	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,646 :: 		
0x0200	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,647 :: 		
0x0202	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,648 :: 		
0x0204	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,649 :: 		
0x0206	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,650 :: 		
0x0208	0xD00D      	BRA         SOK22L8
;__Lib_Math.c,652 :: 		
SADD22L8:
;__Lib_Math.c,653 :: 		
0x020A	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,654 :: 		
0x020C	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,655 :: 		
0x020E	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,656 :: 		
0x0210	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,657 :: 		
0x0212	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,658 :: 		
0x0214	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,659 :: 		
0x0216	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,660 :: 		
0x0218	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,661 :: 		
0x021A	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,662 :: 		
0x021C	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,663 :: 		
0x021E	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,664 :: 		
0x0220	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,665 :: 		
0x0222	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,667 :: 		
SOK22L8:
;__Lib_Math.c,668 :: 		
0x0224	0x3602      	RLCF        R2, 1, 0
;__Lib_Math.c,670 :: 		
0x0226	0x0E07      	MOVLW       7
;__Lib_Math.c,671 :: 		
0x0228	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,673 :: 		
LOOPS3232B:
;__Lib_Math.c,674 :: 		
0x022A	0x3402      	RLCF        R2, 0, 0
;__Lib_Math.c,675 :: 		
0x022C	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,676 :: 		
0x022E	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,677 :: 		
0x0230	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,678 :: 		
0x0232	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,679 :: 		
0x0234	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,680 :: 		
0x0236	0xA002      	BTFSS       R2, 0, 0
;__Lib_Math.c,681 :: 		
0x0238	0xD00E      	BRA         SADD22LB
;__Lib_Math.c,683 :: 		
0x023A	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,684 :: 		
0x023C	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,685 :: 		
0x023E	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,686 :: 		
0x0240	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,687 :: 		
0x0242	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,688 :: 		
0x0244	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,689 :: 		
0x0246	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,690 :: 		
0x0248	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,691 :: 		
0x024A	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,692 :: 		
0x024C	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,693 :: 		
0x024E	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,694 :: 		
0x0250	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,695 :: 		
0x0252	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,696 :: 		
0x0254	0xD00D      	BRA         SOK22LB
;__Lib_Math.c,698 :: 		
SADD22LB:
;__Lib_Math.c,699 :: 		
0x0256	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,700 :: 		
0x0258	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,701 :: 		
0x025A	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,702 :: 		
0x025C	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,703 :: 		
0x025E	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,704 :: 		
0x0260	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,705 :: 		
0x0262	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,706 :: 		
0x0264	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,707 :: 		
0x0266	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,708 :: 		
0x0268	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,709 :: 		
0x026A	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,710 :: 		
0x026C	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,711 :: 		
0x026E	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,713 :: 		
SOK22LB:
;__Lib_Math.c,714 :: 		
0x0270	0x3602      	RLCF        R2, 1, 0
;__Lib_Math.c,716 :: 		
0x0272	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,717 :: 		
0x0274	0xD7DA      	BRA         LOOPS3232B
;__Lib_Math.c,719 :: 		
0x0276	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,720 :: 		
0x0278	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,721 :: 		
0x027A	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,722 :: 		
0x027C	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,723 :: 		
0x027E	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,724 :: 		
0x0280	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,725 :: 		
0x0282	0xA002      	BTFSS       R2, 0, 0
;__Lib_Math.c,726 :: 		
0x0284	0xD00E      	BRA         SADD22L16
;__Lib_Math.c,728 :: 		
0x0286	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,729 :: 		
0x0288	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,730 :: 		
0x028A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,731 :: 		
0x028C	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,732 :: 		
0x028E	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,733 :: 		
0x0290	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,734 :: 		
0x0292	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,735 :: 		
0x0294	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,736 :: 		
0x0296	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,737 :: 		
0x0298	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,738 :: 		
0x029A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,739 :: 		
0x029C	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,740 :: 		
0x029E	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,741 :: 		
0x02A0	0xD00D      	BRA         SOK22L16
;__Lib_Math.c,743 :: 		
SADD22L16:
;__Lib_Math.c,744 :: 		
0x02A2	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,745 :: 		
0x02A4	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,746 :: 		
0x02A6	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,747 :: 		
0x02A8	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,748 :: 		
0x02AA	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,749 :: 		
0x02AC	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,750 :: 		
0x02AE	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,751 :: 		
0x02B0	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,752 :: 		
0x02B2	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,753 :: 		
0x02B4	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,754 :: 		
0x02B6	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,755 :: 		
0x02B8	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,756 :: 		
0x02BA	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,758 :: 		
SOK22L16:
;__Lib_Math.c,759 :: 		
0x02BC	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,761 :: 		
0x02BE	0x0E07      	MOVLW       7
;__Lib_Math.c,762 :: 		
0x02C0	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,764 :: 		
LOOPS3232C:
;__Lib_Math.c,765 :: 		
0x02C2	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,766 :: 		
0x02C4	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,767 :: 		
0x02C6	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,768 :: 		
0x02C8	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,769 :: 		
0x02CA	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,770 :: 		
0x02CC	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,771 :: 		
0x02CE	0xA001      	BTFSS       R1, 0, 0
;__Lib_Math.c,772 :: 		
0x02D0	0xD00E      	BRA         SADD22LC
;__Lib_Math.c,774 :: 		
0x02D2	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,775 :: 		
0x02D4	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,776 :: 		
0x02D6	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,777 :: 		
0x02D8	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,778 :: 		
0x02DA	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,779 :: 		
0x02DC	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,780 :: 		
0x02DE	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,781 :: 		
0x02E0	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,782 :: 		
0x02E2	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,783 :: 		
0x02E4	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,784 :: 		
0x02E6	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,785 :: 		
0x02E8	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,786 :: 		
0x02EA	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,787 :: 		
0x02EC	0xD00D      	BRA         SOK22LC
;__Lib_Math.c,789 :: 		
SADD22LC:
;__Lib_Math.c,790 :: 		
0x02EE	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,791 :: 		
0x02F0	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,792 :: 		
0x02F2	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,793 :: 		
0x02F4	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,794 :: 		
0x02F6	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,795 :: 		
0x02F8	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,796 :: 		
0x02FA	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,797 :: 		
0x02FC	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,798 :: 		
0x02FE	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,799 :: 		
0x0300	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,800 :: 		
0x0302	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,801 :: 		
0x0304	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,802 :: 		
0x0306	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,804 :: 		
SOK22LC:
;__Lib_Math.c,805 :: 		
0x0308	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,807 :: 		
0x030A	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,808 :: 		
0x030C	0xD7DA      	BRA         LOOPS3232C
;__Lib_Math.c,810 :: 		
0x030E	0x3400      	RLCF        R0, 0, 0
;__Lib_Math.c,811 :: 		
0x0310	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,812 :: 		
0x0312	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,813 :: 		
0x0314	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,814 :: 		
0x0316	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,815 :: 		
0x0318	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,816 :: 		
0x031A	0xA001      	BTFSS       R1, 0, 0
;__Lib_Math.c,817 :: 		
0x031C	0xD00E      	BRA         SADD22L24
;__Lib_Math.c,819 :: 		
0x031E	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,820 :: 		
0x0320	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,821 :: 		
0x0322	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,822 :: 		
0x0324	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,823 :: 		
0x0326	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,824 :: 		
0x0328	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,825 :: 		
0x032A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,826 :: 		
0x032C	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,827 :: 		
0x032E	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,828 :: 		
0x0330	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,829 :: 		
0x0332	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,830 :: 		
0x0334	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,831 :: 		
0x0336	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,832 :: 		
0x0338	0xD00D      	BRA         SOK22L24
;__Lib_Math.c,834 :: 		
SADD22L24:
;__Lib_Math.c,835 :: 		
0x033A	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,836 :: 		
0x033C	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,837 :: 		
0x033E	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,838 :: 		
0x0340	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,839 :: 		
0x0342	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,840 :: 		
0x0344	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,841 :: 		
0x0346	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,842 :: 		
0x0348	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,843 :: 		
0x034A	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,844 :: 		
0x034C	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,845 :: 		
0x034E	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,846 :: 		
0x0350	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,847 :: 		
0x0352	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,849 :: 		
SOK22L24:
;__Lib_Math.c,850 :: 		
0x0354	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,852 :: 		
0x0356	0x0E07      	MOVLW       7
;__Lib_Math.c,853 :: 		
0x0358	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,855 :: 		
LOOPS3232D:
;__Lib_Math.c,856 :: 		
0x035A	0x3400      	RLCF        R0, 0, 0
;__Lib_Math.c,857 :: 		
0x035C	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,858 :: 		
0x035E	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,859 :: 		
0x0360	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,860 :: 		
0x0362	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,861 :: 		
0x0364	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,862 :: 		
0x0366	0xA000      	BTFSS       R0, 0, 0
;__Lib_Math.c,863 :: 		
0x0368	0xD00E      	BRA         SADD22LD
;__Lib_Math.c,865 :: 		
0x036A	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,866 :: 		
0x036C	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,867 :: 		
0x036E	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,868 :: 		
0x0370	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,869 :: 		
0x0372	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,870 :: 		
0x0374	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,871 :: 		
0x0376	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,872 :: 		
0x0378	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,873 :: 		
0x037A	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,874 :: 		
0x037C	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,875 :: 		
0x037E	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,876 :: 		
0x0380	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,877 :: 		
0x0382	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,878 :: 		
0x0384	0xD00D      	BRA         SOK22LD
;__Lib_Math.c,880 :: 		
SADD22LD:
;__Lib_Math.c,881 :: 		
0x0386	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,882 :: 		
0x0388	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,883 :: 		
0x038A	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,884 :: 		
0x038C	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,885 :: 		
0x038E	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,886 :: 		
0x0390	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,887 :: 		
0x0392	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,888 :: 		
0x0394	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,889 :: 		
0x0396	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,890 :: 		
0x0398	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,891 :: 		
0x039A	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,893 :: 		
0x039C	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,894 :: 		
0x039E	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,896 :: 		
SOK22LD:
;__Lib_Math.c,897 :: 		
0x03A0	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,899 :: 		
0x03A2	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,900 :: 		
0x03A4	0xD7DA      	BRA         LOOPS3232D
;__Lib_Math.c,902 :: 		
0x03A6	0xB000      	BTFSC       R0, 0, 0
;__Lib_Math.c,903 :: 		
0x03A8	0xD00E      	BRA         SOK22L
;__Lib_Math.c,904 :: 		
0x03AA	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,905 :: 		
0x03AC	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,906 :: 		
0x03AE	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,907 :: 		
0x03B0	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,908 :: 		
0x03B2	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,909 :: 		
0x03B4	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,910 :: 		
0x03B6	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,911 :: 		
0x03B8	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,912 :: 		
0x03BA	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,913 :: 		
0x03BC	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,914 :: 		
0x03BE	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,915 :: 		
0x03C0	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,916 :: 		
0x03C2	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,917 :: 		
0x03C4	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,918 :: 		
SOK22L:
;__Lib_Math.c,920 :: 		
L_end_SDIV3232L:
0x03C6	0x0012      	RETURN      0
; end of _SDIV3232L
_COMFREM:
;__Lib_Math.c,922 :: 		
;__Lib_Math.c,927 :: 		
0x03C8	0x1E0B      	COMF        R11, 1, 0
;__Lib_Math.c,928 :: 		
0x03CA	0x1E0A      	COMF        R10, 1, 0
;__Lib_Math.c,929 :: 		
0x03CC	0x1E09      	COMF        R9, 1, 0
;__Lib_Math.c,930 :: 		
0x03CE	0x1E08      	COMF        R8, 1, 0
;__Lib_Math.c,931 :: 		
0x03D0	0x2A08      	INCF        R8, 1, 0
;__Lib_Math.c,932 :: 		
0x03D2	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,933 :: 		
0x03D4	0x2A09      	INCF        R9, 1, 0
;__Lib_Math.c,934 :: 		
0x03D6	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,935 :: 		
0x03D8	0x2A0A      	INCF        R10, 1, 0
;__Lib_Math.c,936 :: 		
0x03DA	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,937 :: 		
0x03DC	0x2A0B      	INCF        R11, 1, 0
;__Lib_Math.c,939 :: 		
L_end_COMFREM:
0x03DE	0x0012      	RETURN      0
; end of _COMFREM
_eeprom_i2c_read:
;eeprom_i2c_soft.h,52 :: 		void eeprom_i2c_read(unsigned int address, char *datos, char size){
;eeprom_i2c_soft.h,55 :: 		I2C_soft_start();                       // Issue start signal
0x03E0	0xDE85      	RCALL       _I2C_soft_start
;eeprom_i2c_soft.h,57 :: 		I2C_soft_write(EEPROM_ADDRESS_24LC256); // Escritura e multiples bytes
0x03E2	0x0EA0      	MOVLW       160
0x03E4	0x0105      	MOVLB       5
0x03E6	0x6F51      	MOVWF       FARG_I2C_soft_write_dato, 1
0x03E8	0xDE19      	RCALL       _I2C_soft_write
;eeprom_i2c_soft.h,58 :: 		I2C_soft_write(getByte(address,1));     // Start from address hihg
0x03EA	0xF551C54A  	MOVFF       FARG_eeprom_i2c_read_address+1, FARG_I2C_soft_write_dato
0x03EE	0xDE16      	RCALL       _I2C_soft_write
;eeprom_i2c_soft.h,59 :: 		I2C_soft_write(getByte(address,0));     // Start from address low
0x03F0	0xF551C549  	MOVFF       FARG_eeprom_i2c_read_address, FARG_I2C_soft_write_dato
0x03F4	0xDE13      	RCALL       _I2C_soft_write
;eeprom_i2c_soft.h,60 :: 		I2C_soft_start();                       // Issue repeated start signal
0x03F6	0xDE7A      	RCALL       _I2C_soft_start
;eeprom_i2c_soft.h,61 :: 		I2C_soft_write(EEPROM_ADDRESS_24LC256|0x01);    // Address EEPROM_ADDRESS_24LC256 for reading R/W=1
0x03F8	0x0EA1      	MOVLW       161
0x03FA	0x0105      	MOVLB       5
0x03FC	0x6F51      	MOVWF       FARG_I2C_soft_write_dato, 1
0x03FE	0xDE0E      	RCALL       _I2C_soft_write
;eeprom_i2c_soft.h,63 :: 		for(cont = 0; cont < size-1; cont++)
0x0400	0x0105      	MOVLB       5
0x0402	0x6B4E      	CLRF        eeprom_i2c_read_cont_L0, 1
L_eeprom_i2c_read435:
0x0404	0x054D      	DECF        FARG_eeprom_i2c_read_size, 0, 1
0x0406	0x6E01      	MOVWF       R1 
0x0408	0x6A02      	CLRF        R2 
0x040A	0x0E00      	MOVLW       0
0x040C	0x5A02      	SUBWFB      R2, 1 
0x040E	0x0E80      	MOVLW       128
0x0410	0x6E00      	MOVWF       R0 
0x0412	0x0E80      	MOVLW       128
0x0414	0x1802      	XORWF       R2, 0 
0x0416	0x5C00      	SUBWF       R0, 0 
0x0418	0xE102      	BNZ         L__eeprom_i2c_read1267
0x041A	0x5001      	MOVF        R1, 0 
0x041C	0x5D4E      	SUBWF       eeprom_i2c_read_cont_L0, 0, 1
L__eeprom_i2c_read1267:
0x041E	0xE211      	BC          L_eeprom_i2c_read436
;eeprom_i2c_soft.h,64 :: 		datos[cont] = I2C_soft_read(ACK);
0x0420	0x514E      	MOVF        eeprom_i2c_read_cont_L0, 0, 1
0x0422	0x254B      	ADDWF       FARG_eeprom_i2c_read_datos, 0, 1
0x0424	0x6F4F      	MOVWF       FLOC__eeprom_i2c_read, 1
0x0426	0x0E00      	MOVLW       0
0x0428	0x214C      	ADDWFC      FARG_eeprom_i2c_read_datos+1, 0, 1
0x042A	0x6F50      	MOVWF       FLOC__eeprom_i2c_read+1, 1
0x042C	0x0E01      	MOVLW       1
0x042E	0x6F51      	MOVWF       FARG_I2C_soft_read_ACK, 1
0x0430	0xDE24      	RCALL       _I2C_soft_read
0x0432	0xFFE1C54F  	MOVFF       FLOC__eeprom_i2c_read, FSR1L
0x0436	0xFFE2C550  	MOVFF       FLOC__eeprom_i2c_read+1, FSR1H
0x043A	0xFFE6C000  	MOVFF       R0, POSTINC1
;eeprom_i2c_soft.h,63 :: 		for(cont = 0; cont < size-1; cont++)
0x043E	0x2B4E      	INCF        eeprom_i2c_read_cont_L0, 1, 1
;eeprom_i2c_soft.h,64 :: 		datos[cont] = I2C_soft_read(ACK);
0x0440	0xD7E1      	BRA         L_eeprom_i2c_read435
L_eeprom_i2c_read436:
;eeprom_i2c_soft.h,65 :: 		datos[cont] = I2C_soft_read(NO_ACK);
0x0442	0x514E      	MOVF        eeprom_i2c_read_cont_L0, 0, 1
0x0444	0x254B      	ADDWF       FARG_eeprom_i2c_read_datos, 0, 1
0x0446	0x6F4F      	MOVWF       FLOC__eeprom_i2c_read, 1
0x0448	0x0E00      	MOVLW       0
0x044A	0x214C      	ADDWFC      FARG_eeprom_i2c_read_datos+1, 0, 1
0x044C	0x6F50      	MOVWF       FLOC__eeprom_i2c_read+1, 1
0x044E	0x6B51      	CLRF        FARG_I2C_soft_read_ACK, 1
0x0450	0xDE14      	RCALL       _I2C_soft_read
0x0452	0xFFE1C54F  	MOVFF       FLOC__eeprom_i2c_read, FSR1L
0x0456	0xFFE2C550  	MOVFF       FLOC__eeprom_i2c_read+1, FSR1H
0x045A	0xFFE6C000  	MOVFF       R0, POSTINC1
;eeprom_i2c_soft.h,66 :: 		I2C_soft_stop();                                // Issue stop signal
0x045E	0xDE37      	RCALL       _I2C_soft_stop
;eeprom_i2c_soft.h,67 :: 		}
L_end_eeprom_i2c_read:
0x0460	0x0012      	RETURN      0
; end of _eeprom_i2c_read
_lcd_send_nibble:
;lcd_4x20.h,27 :: 		void lcd_send_nibble(char nibble){
;lcd_4x20.h,28 :: 		LCD_D4 = nibble.B0;
0x0462	0x0105      	MOVLB       5
0x0464	0xB149      	BTFSC       FARG_lcd_send_nibble_nibble, 0, 1
0x0466	0xD002      	BRA         L__lcd_send_nibble1350
0x0468	0x9880      	BCF         LCD_D4, BitPos(LCD_D4+0) 
0x046A	0xD001      	BRA         L__lcd_send_nibble1351
L__lcd_send_nibble1350:
0x046C	0x8880      	BSF         LCD_D4, BitPos(LCD_D4+0) 
L__lcd_send_nibble1351:
;lcd_4x20.h,29 :: 		LCD_D5 = nibble.B1;
0x046E	0xB349      	BTFSC       FARG_lcd_send_nibble_nibble, 1, 1
0x0470	0xD002      	BRA         L__lcd_send_nibble1352
0x0472	0x9480      	BCF         LCD_D5, BitPos(LCD_D5+0) 
0x0474	0xD001      	BRA         L__lcd_send_nibble1353
L__lcd_send_nibble1352:
0x0476	0x8480      	BSF         LCD_D5, BitPos(LCD_D5+0) 
L__lcd_send_nibble1353:
;lcd_4x20.h,30 :: 		LCD_D6 = nibble.B2;
0x0478	0xB549      	BTFSC       FARG_lcd_send_nibble_nibble, 2, 1
0x047A	0xD002      	BRA         L__lcd_send_nibble1354
0x047C	0x9280      	BCF         LCD_D6, BitPos(LCD_D6+0) 
0x047E	0xD001      	BRA         L__lcd_send_nibble1355
L__lcd_send_nibble1354:
0x0480	0x8280      	BSF         LCD_D6, BitPos(LCD_D6+0) 
L__lcd_send_nibble1355:
;lcd_4x20.h,31 :: 		LCD_D7 = nibble.B3;
0x0482	0xB749      	BTFSC       FARG_lcd_send_nibble_nibble, 3, 1
0x0484	0xD002      	BRA         L__lcd_send_nibble1356
0x0486	0x9080      	BCF         LCD_D7, BitPos(LCD_D7+0) 
0x0488	0xD001      	BRA         L__lcd_send_nibble1357
L__lcd_send_nibble1356:
0x048A	0x8080      	BSF         LCD_D7, BitPos(LCD_D7+0) 
L__lcd_send_nibble1357:
;lcd_4x20.h,32 :: 		asm nop;
0x048C	0x0000      	NOP
;lcd_4x20.h,33 :: 		asm nop;
0x048E	0x0000      	NOP
;lcd_4x20.h,34 :: 		LCD_EN = 1;
0x0490	0x8680      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;lcd_4x20.h,35 :: 		delay_us(2);
0x0492	0x0E06      	MOVLW       6
0x0494	0x6E0D      	MOVWF       R13, 0
L_lcd_send_nibble629:
0x0496	0x2E0D      	DECFSZ      R13, 1, 0
0x0498	0xD7FE      	BRA         L_lcd_send_nibble629
0x049A	0x0000      	NOP
;lcd_4x20.h,36 :: 		LCD_EN = 0;
0x049C	0x9680      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;lcd_4x20.h,37 :: 		}
L_end_lcd_send_nibble:
0x049E	0x0012      	RETURN      0
; end of _lcd_send_nibble
_Swap:
;__Lib_System.c,109 :: 		
;__Lib_System.c,110 :: 		
0x04A0	0xF000C549  	MOVFF       FARG_Swap_input, R0
;__Lib_System.c,111 :: 		
0x04A4	0x3A00      	SWAPF       R0, 1, 0
;__Lib_System.c,112 :: 		
;__Lib_System.c,113 :: 		
L_end_Swap:
0x04A6	0x0012      	RETURN      0
; end of _Swap
_Mul_16X16_U:
;__Lib_Math.c,440 :: 		
;__Lib_Math.c,447 :: 		
0x04A8	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,448 :: 		
0x04AA	0x6A0A      	CLRF        R10, 0
;__Lib_Math.c,449 :: 		
0x04AC	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,450 :: 		
0x04AE	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,451 :: 		
0x04B0	0x0204      	MULWF       R4, 0
;__Lib_Math.c,453 :: 		
0x04B2	0xF009CFF4  	MOVFF       PRODH, R9
;__Lib_Math.c,454 :: 		
0x04B6	0xF008CFF3  	MOVFF       PRODL, R8
;__Lib_Math.c,455 :: 		
0x04BA	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,456 :: 		
0x04BC	0x0205      	MULWF       R5, 0
;__Lib_Math.c,458 :: 		
0x04BE	0xF00BCFF4  	MOVFF       PRODH, R11
;__Lib_Math.c,459 :: 		
0x04C2	0xF00ACFF3  	MOVFF       PRODL, R10
;__Lib_Math.c,460 :: 		
0x04C6	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,461 :: 		
0x04C8	0x0205      	MULWF       R5, 0
;__Lib_Math.c,463 :: 		
0x04CA	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,464 :: 		
0x04CC	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,465 :: 		
0x04CE	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,466 :: 		
0x04D0	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,467 :: 		
0x04D2	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,468 :: 		
0x04D4	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,469 :: 		
0x04D6	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,470 :: 		
0x04D8	0x0204      	MULWF       R4, 0
;__Lib_Math.c,472 :: 		
0x04DA	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,473 :: 		
0x04DC	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,474 :: 		
0x04DE	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,475 :: 		
0x04E0	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,476 :: 		
0x04E2	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,477 :: 		
0x04E4	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,479 :: 		
0x04E6	0xF000C008  	MOVFF       R8, R0
;__Lib_Math.c,480 :: 		
0x04EA	0xF001C009  	MOVFF       R9, R1
;__Lib_Math.c,481 :: 		
0x04EE	0xF002C00A  	MOVFF       R10, R2
;__Lib_Math.c,482 :: 		
0x04F2	0xF003C00B  	MOVFF       R11, R3
;__Lib_Math.c,485 :: 		
L_end_Mul_16X16_U:
0x04F6	0x0012      	RETURN      0
; end of _Mul_16X16_U
_lcd_send_byte:
;lcd_4x20.h,39 :: 		void lcd_send_byte(char address, char enviar){
;lcd_4x20.h,40 :: 		LCD_RS = 0;
0x04F8	0x9484      	BCF         LCD_RS, BitPos(LCD_RS+0) 
;lcd_4x20.h,41 :: 		delay_us(60);
0x04FA	0x0EC7      	MOVLW       199
0x04FC	0x6E0D      	MOVWF       R13, 0
L_lcd_send_byte630:
0x04FE	0x2E0D      	DECFSZ      R13, 1, 0
0x0500	0xD7FE      	BRA         L_lcd_send_byte630
0x0502	0x0000      	NOP
0x0504	0x0000      	NOP
;lcd_4x20.h,43 :: 		if(address)
0x0506	0x0105      	MOVLB       5
0x0508	0x5347      	MOVF        FARG_lcd_send_byte_address, 1, 1
0x050A	0xE002      	BZ          L_lcd_send_byte631
;lcd_4x20.h,44 :: 		LCD_RS = 1;
0x050C	0x8484      	BSF         LCD_RS, BitPos(LCD_RS+0) 
0x050E	0xD001      	BRA         L_lcd_send_byte632
L_lcd_send_byte631:
;lcd_4x20.h,46 :: 		LCD_RS = 0;
0x0510	0x9484      	BCF         LCD_RS, BitPos(LCD_RS+0) 
L_lcd_send_byte632:
;lcd_4x20.h,47 :: 		asm nop;
0x0512	0x0000      	NOP
;lcd_4x20.h,50 :: 		LCD_EN = 0;
0x0514	0x9680      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;lcd_4x20.h,52 :: 		lcd_send_nibble(swap(enviar));
0x0516	0xF549C548  	MOVFF       FARG_lcd_send_byte_enviar, FARG_Swap_input
0x051A	0xDFC2      	RCALL       _Swap
0x051C	0xF549C000  	MOVFF       R0, FARG_lcd_send_nibble_nibble
0x0520	0xDFA0      	RCALL       _lcd_send_nibble
;lcd_4x20.h,53 :: 		lcd_send_nibble(enviar);
0x0522	0xF549C548  	MOVFF       FARG_lcd_send_byte_enviar, FARG_lcd_send_nibble_nibble
0x0526	0xDF9D      	RCALL       _lcd_send_nibble
;lcd_4x20.h,54 :: 		}
L_end_lcd_send_byte:
0x0528	0x0012      	RETURN      0
; end of _lcd_send_byte
_Div_32x32_S:
;__Lib_Math.c,942 :: 		
;__Lib_Math.c,955 :: 		
0x052A	0x5004      	MOVF        R4, 0 
0x052C	0x0A00      	XORLW       0
0x052E	0xE112      	BNZ         L_Div_32x32_S6
;__Lib_Math.c,956 :: 		
0x0530	0x5005      	MOVF        R5, 0 
0x0532	0x0A00      	XORLW       0
0x0534	0xE10F      	BNZ         L_Div_32x32_S7
;__Lib_Math.c,957 :: 		
0x0536	0x5006      	MOVF        R6, 0 
0x0538	0x0A00      	XORLW       0
0x053A	0xE10C      	BNZ         L_Div_32x32_S8
;__Lib_Math.c,958 :: 		
0x053C	0x5007      	MOVF        R7, 0 
0x053E	0x0A00      	XORLW       0
0x0540	0xE109      	BNZ         L_Div_32x32_S9
;__Lib_Math.c,959 :: 		
0x0542	0x0EFF      	MOVLW       255
0x0544	0x6E00      	MOVWF       R0 
;__Lib_Math.c,960 :: 		
0x0546	0x0EFF      	MOVLW       255
0x0548	0x6E01      	MOVWF       R1 
;__Lib_Math.c,961 :: 		
0x054A	0x0EFF      	MOVLW       255
0x054C	0x6E02      	MOVWF       R2 
;__Lib_Math.c,962 :: 		
0x054E	0x0E7F      	MOVLW       127
0x0550	0x6E03      	MOVWF       R3 
;__Lib_Math.c,963 :: 		
0x0552	0xD097      	BRA         L_end_Div_32x32_S
;__Lib_Math.c,964 :: 		
L_Div_32x32_S9:
L_Div_32x32_S8:
L_Div_32x32_S7:
L_Div_32x32_S6:
;__Lib_Math.c,968 :: 		
0x0554	0x6A0C      	CLRF        R12, 0
;__Lib_Math.c,969 :: 		
0x0556	0xBE07      	BTFSC       R7, 7, 0
;__Lib_Math.c,970 :: 		
0x0558	0x2A0C      	INCF        R12, 1, 0
;__Lib_Math.c,972 :: 		
0x055A	0x6A0D      	CLRF        R13, 0
;__Lib_Math.c,973 :: 		
0x055C	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,974 :: 		
0x055E	0x6A0A      	CLRF        R10, 0
;__Lib_Math.c,975 :: 		
0x0560	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,976 :: 		
0x0562	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,977 :: 		
0x0564	0x5003      	MOVF        R3, 0, 0
;__Lib_Math.c,978 :: 		
0x0566	0x1002      	IORWF       R2, 0, 0
;__Lib_Math.c,979 :: 		
0x0568	0x1001      	IORWF       R1, 0, 0
;__Lib_Math.c,980 :: 		
0x056A	0x1000      	IORWF       R0, 0, 0
;__Lib_Math.c,981 :: 		
0x056C	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,982 :: 		
0x056E	0xD084      	BRA         END_ALL
;__Lib_Math.c,986 :: 		
0x0570	0x5003      	MOVF        R3, 0, 0
;__Lib_Math.c,987 :: 		
0x0572	0x1807      	XORWF       R7, 0, 0
;__Lib_Math.c,988 :: 		
0x0574	0x6E0E      	MOVWF       R14, 0
;__Lib_Math.c,989 :: 		
0x0576	0xBE0E      	BTFSC       R14, 7, 0
;__Lib_Math.c,990 :: 		
0x0578	0x1E0D      	COMF        R13, 1, 0
;__Lib_Math.c,993 :: 		
0x057A	0xAE07      	BTFSS       R7, 7, 0
;__Lib_Math.c,994 :: 		
0x057C	0xD00B      	BRA         CA3232S
;__Lib_Math.c,996 :: 		
0x057E	0x1E04      	COMF        R4, 1, 0
;__Lib_Math.c,997 :: 		
0x0580	0x1E05      	COMF        R5, 1, 0
;__Lib_Math.c,998 :: 		
0x0582	0x1E06      	COMF        R6, 1, 0
;__Lib_Math.c,999 :: 		
0x0584	0x1E07      	COMF        R7, 1, 0
;__Lib_Math.c,1000 :: 		
0x0586	0x2A04      	INCF        R4, 1, 0
;__Lib_Math.c,1001 :: 		
0x0588	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1002 :: 		
0x058A	0x2A05      	INCF        R5, 1, 0
;__Lib_Math.c,1003 :: 		
0x058C	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1004 :: 		
0x058E	0x2A06      	INCF        R6, 1, 0
;__Lib_Math.c,1005 :: 		
0x0590	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1006 :: 		
0x0592	0x2A07      	INCF        R7, 1, 0
;__Lib_Math.c,1008 :: 		
CA3232S:
;__Lib_Math.c,1009 :: 		
0x0594	0xAE03      	BTFSS       R3, 7, 0
;__Lib_Math.c,1010 :: 		
0x0596	0xD00B      	BRA         C3232SX
;__Lib_Math.c,1012 :: 		
0x0598	0x1E00      	COMF        R0, 1, 0
;__Lib_Math.c,1013 :: 		
0x059A	0x1E01      	COMF        R1, 1, 0
;__Lib_Math.c,1014 :: 		
0x059C	0x1E02      	COMF        R2, 1, 0
;__Lib_Math.c,1015 :: 		
0x059E	0x1E03      	COMF        R3, 1, 0
;__Lib_Math.c,1016 :: 		
0x05A0	0x2A00      	INCF        R0, 1, 0
;__Lib_Math.c,1017 :: 		
0x05A2	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1018 :: 		
0x05A4	0x2A01      	INCF        R1, 1, 0
;__Lib_Math.c,1019 :: 		
0x05A6	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1020 :: 		
0x05A8	0x2A02      	INCF        R2, 1, 0
;__Lib_Math.c,1021 :: 		
0x05AA	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1022 :: 		
0x05AC	0x2A03      	INCF        R3, 1, 0
;__Lib_Math.c,1024 :: 		
C3232SX:
;__Lib_Math.c,1025 :: 		
0x05AE	0x5003      	MOVF        R3, 0, 0
;__Lib_Math.c,1026 :: 		
0x05B0	0x1007      	IORWF       R7, 0, 0
;__Lib_Math.c,1027 :: 		
0x05B2	0x6E0E      	MOVWF       R14, 0
;__Lib_Math.c,1028 :: 		
0x05B4	0xBE0E      	BTFSC       R14, 7, 0
;__Lib_Math.c,1029 :: 		
0x05B6	0xD01C      	BRA         C3232SX1
;__Lib_Math.c,1030 :: 		
C3232S:
;__Lib_Math.c,1034 :: 		
0x05B8	0xDDDB      	RCALL       _SDIV3232L
;__Lib_Math.c,1038 :: 		
0x05BA	0xBE0C      	BTFSC       R12, 7, 0
;__Lib_Math.c,1039 :: 		
0x05BC	0xD036      	BRA         C3232SX4
;__Lib_Math.c,1041 :: 		
C3232SOK:
;__Lib_Math.c,1042 :: 		
0x05BE	0xAE0D      	BTFSS       R13, 7, 0
;__Lib_Math.c,1043 :: 		
0x05C0	0xD05B      	BRA         END_ALL
;__Lib_Math.c,1045 :: 		
0x05C2	0x1E00      	COMF        R0, 1, 0
;__Lib_Math.c,1046 :: 		
0x05C4	0x1E01      	COMF        R1, 1, 0
;__Lib_Math.c,1047 :: 		
0x05C6	0x1E02      	COMF        R2, 1, 0
;__Lib_Math.c,1048 :: 		
0x05C8	0x1E03      	COMF        R3, 1, 0
;__Lib_Math.c,1049 :: 		
0x05CA	0x2A00      	INCF        R0, 1, 0
;__Lib_Math.c,1050 :: 		
0x05CC	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1051 :: 		
0x05CE	0x2A01      	INCF        R1, 1, 0
;__Lib_Math.c,1052 :: 		
0x05D0	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1053 :: 		
0x05D2	0x2A02      	INCF        R2, 1, 0
;__Lib_Math.c,1054 :: 		
0x05D4	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1055 :: 		
0x05D6	0x2A03      	INCF        R3, 1, 0
;__Lib_Math.c,1057 :: 		
0x05D8	0x1E08      	COMF        R8, 1, 0
;__Lib_Math.c,1058 :: 		
0x05DA	0x1E09      	COMF        R9, 1, 0
;__Lib_Math.c,1059 :: 		
0x05DC	0x1E0A      	COMF        R10, 1, 0
;__Lib_Math.c,1060 :: 		
0x05DE	0x1E0B      	COMF        R11, 1, 0
;__Lib_Math.c,1061 :: 		
0x05E0	0x2A08      	INCF        R8, 1, 0
;__Lib_Math.c,1062 :: 		
0x05E2	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1063 :: 		
0x05E4	0x2A09      	INCF        R9, 1, 0
;__Lib_Math.c,1064 :: 		
0x05E6	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1065 :: 		
0x05E8	0x2A0A      	INCF        R10, 1, 0
;__Lib_Math.c,1066 :: 		
0x05EA	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1067 :: 		
0x05EC	0x2A0B      	INCF        R11, 1, 0
;__Lib_Math.c,1068 :: 		
0x05EE	0xD044      	BRA         END_ALL
;__Lib_Math.c,1069 :: 		
C3232SX1:
;__Lib_Math.c,1072 :: 		
0x05F0	0xAE07      	BTFSS       R7, 7, 0
;__Lib_Math.c,1073 :: 		
0x05F2	0xD015      	BRA         C3232SX3
;__Lib_Math.c,1074 :: 		
0x05F4	0xBE03      	BTFSC       R3, 7, 0
;__Lib_Math.c,1075 :: 		
0x05F6	0xD00D      	BRA         C3232SX2
;__Lib_Math.c,1076 :: 		
0x05F8	0x5003      	MOVF        R3, 0, 0
;__Lib_Math.c,1077 :: 		
0x05FA	0x6E0B      	MOVWF       R11, 0
;__Lib_Math.c,1078 :: 		
0x05FC	0x5002      	MOVF        R2, 0, 0
;__Lib_Math.c,1079 :: 		
0x05FE	0x6E0A      	MOVWF       R10, 0
;__Lib_Math.c,1080 :: 		
0x0600	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,1081 :: 		
0x0602	0x6E09      	MOVWF       R9, 0
;__Lib_Math.c,1082 :: 		
0x0604	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,1083 :: 		
0x0606	0x6E08      	MOVWF       R8, 0
;__Lib_Math.c,1084 :: 		
0x0608	0x6A03      	CLRF        R3, 0
;__Lib_Math.c,1085 :: 		
0x060A	0x6A02      	CLRF        R2, 0
;__Lib_Math.c,1086 :: 		
0x060C	0x6A01      	CLRF        R1, 0
;__Lib_Math.c,1087 :: 		
0x060E	0x6A00      	CLRF        R0, 0
;__Lib_Math.c,1088 :: 		
0x0610	0xD7D6      	BRA         C3232SOK
;__Lib_Math.c,1089 :: 		
C3232SX2:
;__Lib_Math.c,1090 :: 		
0x0612	0x6A03      	CLRF        R3, 0
;__Lib_Math.c,1091 :: 		
0x0614	0x6A02      	CLRF        R2, 0
;__Lib_Math.c,1092 :: 		
0x0616	0x6A01      	CLRF        R1, 0
;__Lib_Math.c,1093 :: 		
0x0618	0x6A00      	CLRF        R0, 0
;__Lib_Math.c,1094 :: 		
0x061A	0x2A00      	INCF        R0, 1, 0
;__Lib_Math.c,1095 :: 		
0x061C	0x0C00      	RETLW       0
;__Lib_Math.c,1097 :: 		
C3232SX3:
;__Lib_Math.c,1098 :: 		
0x061E	0x1E03      	COMF        R3, 1, 0
;__Lib_Math.c,1099 :: 		
0x0620	0x1E02      	COMF        R2, 1, 0
;__Lib_Math.c,1100 :: 		
0x0622	0x1E01      	COMF        R1, 1, 0
;__Lib_Math.c,1101 :: 		
0x0624	0x1E00      	COMF        R0, 1, 0
;__Lib_Math.c,1103 :: 		
0x0626	0x8E0C      	BSF         R12, 7, 0
;__Lib_Math.c,1104 :: 		
0x0628	0xD7C7      	BRA         C3232S
;__Lib_Math.c,1105 :: 		
C3232SX4:
;__Lib_Math.c,1108 :: 		
0x062A	0x2A08      	INCF        R8, 1, 0
;__Lib_Math.c,1109 :: 		
0x062C	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1110 :: 		
0x062E	0x2A09      	INCF        R9, 1, 0
;__Lib_Math.c,1111 :: 		
0x0630	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1112 :: 		
0x0632	0x2A0A      	INCF        R10, 1, 0
;__Lib_Math.c,1113 :: 		
0x0634	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1114 :: 		
0x0636	0x2A0B      	INCF        R11, 1, 0
;__Lib_Math.c,1115 :: 		
0x0638	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1116 :: 		
0x063A	0x5C08      	SUBWF       R8, 0, 0
;__Lib_Math.c,1117 :: 		
0x063C	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_Math.c,1118 :: 		
0x063E	0xD7BF      	BRA         C3232SOK
;__Lib_Math.c,1119 :: 		
0x0640	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1120 :: 		
0x0642	0x5C09      	SUBWF       R9, 0, 0
;__Lib_Math.c,1121 :: 		
0x0644	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_Math.c,1122 :: 		
0x0646	0xD7BB      	BRA         C3232SOK
;__Lib_Math.c,1123 :: 		
0x0648	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1124 :: 		
0x064A	0x5C0A      	SUBWF       R10, 0, 0
;__Lib_Math.c,1125 :: 		
0x064C	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_Math.c,1126 :: 		
0x064E	0xD7B7      	BRA         C3232SOK
;__Lib_Math.c,1127 :: 		
0x0650	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1128 :: 		
0x0652	0x5C0B      	SUBWF       R11, 0, 0
;__Lib_Math.c,1129 :: 		
0x0654	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_Math.c,1130 :: 		
0x0656	0xD7B3      	BRA         C3232SOK
;__Lib_Math.c,1131 :: 		
0x0658	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,1132 :: 		
0x065A	0x6A0A      	CLRF        R10, 0
;__Lib_Math.c,1133 :: 		
0x065C	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,1134 :: 		
0x065E	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,1135 :: 		
0x0660	0x2A00      	INCF        R0, 1, 0
;__Lib_Math.c,1136 :: 		
0x0662	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1137 :: 		
0x0664	0x2A01      	INCF        R1, 1, 0
;__Lib_Math.c,1138 :: 		
0x0666	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1139 :: 		
0x0668	0x2A02      	INCF        R2, 1, 0
;__Lib_Math.c,1140 :: 		
0x066A	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1141 :: 		
0x066C	0x2A03      	INCF        R3, 1, 0
;__Lib_Math.c,1142 :: 		
0x066E	0xAE03      	BTFSS       R3, 7, 0
;__Lib_Math.c,1143 :: 		
0x0670	0xD7A6      	BRA         C3232SOK
;__Lib_Math.c,1144 :: 		
0x0672	0x6A0E      	CLRF        R14, 0
;__Lib_Math.c,1145 :: 		
0x0674	0x880E      	BSF         R14, 4, 0
;__Lib_Math.c,1146 :: 		
0x0676	0x0CFF      	RETLW       255
;__Lib_Math.c,1147 :: 		
END_ALL:
;__Lib_Math.c,1148 :: 		
0x0678	0x6A0E      	CLRF        R14, 0
;__Lib_Math.c,1149 :: 		
0x067A	0xA00C      	BTFSS       R12, 0, 0
;__Lib_Math.c,1150 :: 		
0x067C	0xD001      	BRA         avoid_comfrem
;__Lib_Math.c,1153 :: 		
0x067E	0xDEA4      	RCALL       _COMFREM
;__Lib_Math.c,1155 :: 		
avoid_comfrem:
;__Lib_Math.c,1156 :: 		
0x0680	0x0F00      	ADDLW       0
;__Lib_Math.c,1158 :: 		
L_end_Div_32x32_S:
0x0682	0x0012      	RETURN      0
; end of _Div_32x32_S
_mysql_exist:
;table_eeprom.h,81 :: 		bool mysql_exist(char *name){
;table_eeprom.h,82 :: 		myTable.address = 0x0003;  //Direccion 3 para lectura
0x0684	0x0E03      	MOVLW       3
0x0686	0x0103      	MOVLB       3
0x0688	0x6F44      	MOVWF       Expendedora_myTable+43, 1
0x068A	0x0E00      	MOVLW       0
0x068C	0x6F45      	MOVWF       Expendedora_myTable+44, 1
;table_eeprom.h,83 :: 		myTable.nameColAct[0] = 0; //Resetear mensaje
0x068E	0x6B30      	CLRF        Expendedora_myTable+23, 1
;table_eeprom.h,85 :: 		for(myTable.cont = 0; myTable.cont < myTable.numTables; myTable.cont++){
0x0690	0x6B48      	CLRF        Expendedora_myTable+47, 1
L_mysql_exist438:
0x0692	0x5119      	MOVF        Expendedora_myTable, 0, 1
0x0694	0x5D48      	SUBWF       Expendedora_myTable+47, 0, 1
0x0696	0xE235      	BC          L_mysql_exist439
;table_eeprom.h,87 :: 		eeprom_i2c_read(myTable.address, myTable.nameAct, TABLE_MAX_SIZE_NAME+1);
0x0698	0xF549C344  	MOVFF       Expendedora_myTable+43, FARG_eeprom_i2c_read_address
0x069C	0xF54AC345  	MOVFF       Expendedora_myTable+44, FARG_eeprom_i2c_read_address+1
0x06A0	0x0E20      	MOVLW       Expendedora_myTable+7
0x06A2	0x0105      	MOVLB       5
0x06A4	0x6F4B      	MOVWF       FARG_eeprom_i2c_read_datos, 1
0x06A6	0x0E03      	MOVLW       hi_addr(Expendedora_myTable+7)
0x06A8	0x6F4C      	MOVWF       FARG_eeprom_i2c_read_datos+1, 1
0x06AA	0x0E10      	MOVLW       16
0x06AC	0x6F4D      	MOVWF       FARG_eeprom_i2c_read_size, 1
0x06AE	0xDE98      	RCALL       _eeprom_i2c_read
;table_eeprom.h,89 :: 		if(!strncmp(name, myTable.nameAct, TABLE_MAX_SIZE_NAME+1))
0x06B0	0xF549C547  	MOVFF       FARG_mysql_exist_name, FARG_strncmp_s1
0x06B4	0xF54AC548  	MOVFF       FARG_mysql_exist_name+1, FARG_strncmp_s1+1
0x06B8	0x0E20      	MOVLW       Expendedora_myTable+7
0x06BA	0x6F4B      	MOVWF       FARG_strncmp_s2, 1
0x06BC	0x0E03      	MOVLW       hi_addr(Expendedora_myTable+7)
0x06BE	0x6F4C      	MOVWF       FARG_strncmp_s2+1, 1
0x06C0	0x0E10      	MOVLW       16
0x06C2	0x6F4D      	MOVWF       FARG_strncmp_len, 1
0x06C4	0xDD24      	RCALL       _strncmp
0x06C6	0x5000      	MOVF        R0, 0 
0x06C8	0x1001      	IORWF       R1, 0 
0x06CA	0xE101      	BNZ         L_mysql_exist441
;table_eeprom.h,90 :: 		break;
0x06CC	0xD01A      	BRA         L_mysql_exist439
L_mysql_exist441:
;table_eeprom.h,92 :: 		eeprom_i2c_read(myTable.address+TABLE_MAX_SIZE_NAME+1, (char*)&myTable.address, 2);
0x06CE	0x0E0F      	MOVLW       15
0x06D0	0x0103      	MOVLB       3
0x06D2	0x2544      	ADDWF       Expendedora_myTable+43, 0, 1
0x06D4	0x0105      	MOVLB       5
0x06D6	0x6F49      	MOVWF       FARG_eeprom_i2c_read_address, 1
0x06D8	0x0E00      	MOVLW       0
0x06DA	0x0103      	MOVLB       3
0x06DC	0x2145      	ADDWFC      Expendedora_myTable+44, 0, 1
0x06DE	0x0105      	MOVLB       5
0x06E0	0x6F4A      	MOVWF       FARG_eeprom_i2c_read_address+1, 1
0x06E2	0x4B49      	INFSNZ      FARG_eeprom_i2c_read_address, 1, 1
0x06E4	0x2B4A      	INCF        FARG_eeprom_i2c_read_address+1, 1, 1
0x06E6	0x0E44      	MOVLW       Expendedora_myTable+43
0x06E8	0x6F4B      	MOVWF       FARG_eeprom_i2c_read_datos, 1
0x06EA	0x0E03      	MOVLW       hi_addr(Expendedora_myTable+43)
0x06EC	0x6F4C      	MOVWF       FARG_eeprom_i2c_read_datos+1, 1
0x06EE	0x0E02      	MOVLW       2
0x06F0	0x6F4D      	MOVWF       FARG_eeprom_i2c_read_size, 1
0x06F2	0xDE76      	RCALL       _eeprom_i2c_read
;table_eeprom.h,85 :: 		for(myTable.cont = 0; myTable.cont < myTable.numTables; myTable.cont++){
0x06F4	0x0103      	MOVLB       3
0x06F6	0x5148      	MOVF        Expendedora_myTable+47, 0, 1
0x06F8	0x0F01      	ADDLW       1
0x06FA	0x6E00      	MOVWF       R0 
0x06FC	0xF348C000  	MOVFF       R0, Expendedora_myTable+47
;table_eeprom.h,93 :: 		}
0x0700	0xD7C8      	BRA         L_mysql_exist438
L_mysql_exist439:
0x0702	0x0103      	MOVLB       3
;table_eeprom.h,95 :: 		if(myTable.cont < myTable.numTables){
0x0704	0x5119      	MOVF        Expendedora_myTable, 0, 1
0x0706	0x5D48      	SUBWF       Expendedora_myTable+47, 0, 1
0x0708	0xE23F      	BC          L_mysql_exist442
;table_eeprom.h,96 :: 		myTable.addressAct = myTable.address;   //Copiar direccion casa de la tabla
0x070A	0xF346C344  	MOVFF       Expendedora_myTable+43, Expendedora_myTable+45
0x070E	0xF347C345  	MOVFF       Expendedora_myTable+44, Expendedora_myTable+46
;table_eeprom.h,98 :: 		myTable.addressAct += TABLE_MAX_SIZE_NAME+3;
0x0712	0x0E12      	MOVLW       18
0x0714	0x2544      	ADDWF       Expendedora_myTable+43, 0, 1
0x0716	0x6E00      	MOVWF       R0 
0x0718	0x0E00      	MOVLW       0
0x071A	0x2145      	ADDWFC      Expendedora_myTable+44, 0, 1
0x071C	0x6E01      	MOVWF       R1 
0x071E	0xF346C000  	MOVFF       R0, Expendedora_myTable+45
0x0722	0xF347C001  	MOVFF       R1, Expendedora_myTable+46
;table_eeprom.h,99 :: 		eeprom_i2c_read(myTable.addressAct,(char*)&myTable.rowAct, 2);
0x0726	0xF549C000  	MOVFF       R0, FARG_eeprom_i2c_read_address
0x072A	0xF54AC001  	MOVFF       R1, FARG_eeprom_i2c_read_address+1
0x072E	0x0E1D      	MOVLW       Expendedora_myTable+4
0x0730	0x0105      	MOVLB       5
0x0732	0x6F4B      	MOVWF       FARG_eeprom_i2c_read_datos, 1
0x0734	0x0E03      	MOVLW       hi_addr(Expendedora_myTable+4)
0x0736	0x6F4C      	MOVWF       FARG_eeprom_i2c_read_datos+1, 1
0x0738	0x0E02      	MOVLW       2
0x073A	0x6F4D      	MOVWF       FARG_eeprom_i2c_read_size, 1
0x073C	0xDE51      	RCALL       _eeprom_i2c_read
;table_eeprom.h,100 :: 		eeprom_i2c_read(myTable.addressAct+2,(char*)&myTable.row, 2);
0x073E	0x0E02      	MOVLW       2
0x0740	0x0103      	MOVLB       3
0x0742	0x2546      	ADDWF       Expendedora_myTable+45, 0, 1
0x0744	0x0105      	MOVLB       5
0x0746	0x6F49      	MOVWF       FARG_eeprom_i2c_read_address, 1
0x0748	0x0E00      	MOVLW       0
0x074A	0x0103      	MOVLB       3
0x074C	0x2147      	ADDWFC      Expendedora_myTable+46, 0, 1
0x074E	0x0105      	MOVLB       5
0x0750	0x6F4A      	MOVWF       FARG_eeprom_i2c_read_address+1, 1
0x0752	0x0E1B      	MOVLW       Expendedora_myTable+2
0x0754	0x6F4B      	MOVWF       FARG_eeprom_i2c_read_datos, 1
0x0756	0x0E03      	MOVLW       hi_addr(Expendedora_myTable+2)
0x0758	0x6F4C      	MOVWF       FARG_eeprom_i2c_read_datos+1, 1
0x075A	0x0E02      	MOVLW       2
0x075C	0x6F4D      	MOVWF       FARG_eeprom_i2c_read_size, 1
0x075E	0xDE40      	RCALL       _eeprom_i2c_read
;table_eeprom.h,101 :: 		eeprom_i2c_read(myTable.addressAct+4,&myTable.col, 1); //Filas totales de busqueda
0x0760	0x0E04      	MOVLW       4
0x0762	0x0103      	MOVLB       3
0x0764	0x2546      	ADDWF       Expendedora_myTable+45, 0, 1
0x0766	0x0105      	MOVLB       5
0x0768	0x6F49      	MOVWF       FARG_eeprom_i2c_read_address, 1
0x076A	0x0E00      	MOVLW       0
0x076C	0x0103      	MOVLB       3
0x076E	0x2147      	ADDWFC      Expendedora_myTable+46, 0, 1
0x0770	0x0105      	MOVLB       5
0x0772	0x6F4A      	MOVWF       FARG_eeprom_i2c_read_address+1, 1
0x0774	0x0E1A      	MOVLW       Expendedora_myTable+1
0x0776	0x6F4B      	MOVWF       FARG_eeprom_i2c_read_datos, 1
0x0778	0x0E03      	MOVLW       hi_addr(Expendedora_myTable+1)
0x077A	0x6F4C      	MOVWF       FARG_eeprom_i2c_read_datos+1, 1
0x077C	0x0E01      	MOVLW       1
0x077E	0x6F4D      	MOVWF       FARG_eeprom_i2c_read_size, 1
0x0780	0xDE2F      	RCALL       _eeprom_i2c_read
;table_eeprom.h,102 :: 		return true;
0x0782	0x0E01      	MOVLW       1
0x0784	0x6E00      	MOVWF       R0 
0x0786	0xD003      	BRA         L_end_mysql_exist
;table_eeprom.h,103 :: 		}else{
L_mysql_exist442:
;table_eeprom.h,104 :: 		myTable.nameAct[0] = 0;
0x0788	0x0103      	MOVLB       3
0x078A	0x6B20      	CLRF        Expendedora_myTable+7, 1
;table_eeprom.h,105 :: 		return false;
0x078C	0x6A00      	CLRF        R0 
;table_eeprom.h,107 :: 		}
L_end_mysql_exist:
0x078E	0x0012      	RETURN      0
; end of _mysql_exist
_Mul_32x32_U:
;__Lib_Math.c,1616 :: 		
;__Lib_Math.c,1631 :: 		
0x0790	0x0E22      	MOVLW       34
;__Lib_Math.c,1632 :: 		
0x0792	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,1633 :: 		
0x0794	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,1634 :: 		
0x0796	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,1635 :: 		
0x0798	0x6A0A      	CLRF        R10, 0
;__Lib_Math.c,1636 :: 		
0x079A	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,1638 :: 		
_NEXT:
;__Lib_Math.c,1642 :: 		
0x079C	0x060C      	DECF        R12, 1, 0
;__Lib_Math.c,1643 :: 		
0x079E	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1644 :: 		
0x07A0	0xD01F      	BRA         _EXIT2
;__Lib_Math.c,1645 :: 		
0x07A2	0x90D8      	BCF         STATUS, 0, 0
;__Lib_Math.c,1647 :: 		
_LOOP:
;__Lib_Math.c,1656 :: 		
0x07A4	0x320B      	RRCF        R11, 1, 0
;__Lib_Math.c,1657 :: 		
0x07A6	0x320A      	RRCF        R10, 1, 0
;__Lib_Math.c,1658 :: 		
0x07A8	0x3209      	RRCF        R9, 1, 0
;__Lib_Math.c,1659 :: 		
0x07AA	0x3208      	RRCF        R8, 1, 0
;__Lib_Math.c,1660 :: 		
0x07AC	0x3203      	RRCF        R3, 1, 0
;__Lib_Math.c,1661 :: 		
0x07AE	0x3202      	RRCF        R2, 1, 0
;__Lib_Math.c,1662 :: 		
0x07B0	0x3201      	RRCF        R1, 1, 0
;__Lib_Math.c,1663 :: 		
0x07B2	0x3200      	RRCF        R0, 1, 0
;__Lib_Math.c,1668 :: 		
0x07B4	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1669 :: 		
0x07B6	0xD7F2      	BRA         _NEXT
;__Lib_Math.c,1670 :: 		
0x07B8	0x060C      	DECF        R12, 1, 0
;__Lib_Math.c,1671 :: 		
0x07BA	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1672 :: 		
0x07BC	0xD009      	BRA         _EXIT1
;__Lib_Math.c,1679 :: 		
0x07BE	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1680 :: 		
0x07C0	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1681 :: 		
0x07C2	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1684 :: 		
0x07C4	0x2209      	ADDWFC      R9, 1, 0
;__Lib_Math.c,1685 :: 		
0x07C6	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1688 :: 		
0x07C8	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,1689 :: 		
0x07CA	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1692 :: 		
0x07CC	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,1694 :: 		
0x07CE	0xD7EA      	BRA         _LOOP
;__Lib_Math.c,1696 :: 		
_EXIT1:
;__Lib_Math.c,1701 :: 		
0x07D0	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1702 :: 		
0x07D2	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1703 :: 		
0x07D4	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1706 :: 		
0x07D6	0x2209      	ADDWFC      R9, 1, 0
;__Lib_Math.c,1707 :: 		
0x07D8	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1710 :: 		
0x07DA	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,1711 :: 		
0x07DC	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1714 :: 		
0x07DE	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,1717 :: 		
_EXIT2:
;__Lib_Math.c,1719 :: 		
L_end_Mul_32x32_U:
0x07E0	0x0012      	RETURN      0
; end of _Mul_32x32_U
_Delay_1us:
;__Lib_Delays.c,7 :: 		void Delay_1us() {
;__Lib_Delays.c,8 :: 		Delay_us(1);
0x07E2	0x0E03      	MOVLW       3
0x07E4	0x6E0D      	MOVWF       R13, 0
L_Delay_1us0:
0x07E6	0x2E0D      	DECFSZ      R13, 1, 0
0x07E8	0xD7FE      	BRA         L_Delay_1us0
;__Lib_Delays.c,9 :: 		}
L_end_Delay_1us:
0x07EA	0x0012      	RETURN      0
; end of _Delay_1us
_lcd_gotoxy:
;lcd_4x20.h,90 :: 		void lcd_gotoxy(char fila, char col){
;lcd_4x20.h,91 :: 		if(fila == 1)
0x07EC	0x0105      	MOVLB       5
0x07EE	0x513B      	MOVF        FARG_lcd_gotoxy_fila, 0, 1
0x07F0	0x0A01      	XORLW       1
0x07F2	0xE102      	BNZ         L_lcd_gotoxy642
;lcd_4x20.h,92 :: 		fila = LCD_LINE_1_ADDRESS;
0x07F4	0x6B3B      	CLRF        FARG_lcd_gotoxy_fila, 1
0x07F6	0xD013      	BRA         L_lcd_gotoxy643
L_lcd_gotoxy642:
;lcd_4x20.h,93 :: 		else if(fila == 2)
0x07F8	0x513B      	MOVF        FARG_lcd_gotoxy_fila, 0, 1
0x07FA	0x0A02      	XORLW       2
0x07FC	0xE103      	BNZ         L_lcd_gotoxy644
;lcd_4x20.h,94 :: 		fila = LCD_LINE_2_ADDRESS;
0x07FE	0x0E40      	MOVLW       64
0x0800	0x6F3B      	MOVWF       FARG_lcd_gotoxy_fila, 1
0x0802	0xD00D      	BRA         L_lcd_gotoxy645
L_lcd_gotoxy644:
;lcd_4x20.h,95 :: 		else if(fila == 3)
0x0804	0x513B      	MOVF        FARG_lcd_gotoxy_fila, 0, 1
0x0806	0x0A03      	XORLW       3
0x0808	0xE103      	BNZ         L_lcd_gotoxy646
;lcd_4x20.h,96 :: 		fila = LCD_LINE_3_ADDRESS;
0x080A	0x0E14      	MOVLW       20
0x080C	0x6F3B      	MOVWF       FARG_lcd_gotoxy_fila, 1
0x080E	0xD007      	BRA         L_lcd_gotoxy647
L_lcd_gotoxy646:
;lcd_4x20.h,97 :: 		else if(fila == 4)
0x0810	0x513B      	MOVF        FARG_lcd_gotoxy_fila, 0, 1
0x0812	0x0A04      	XORLW       4
0x0814	0xE103      	BNZ         L_lcd_gotoxy648
;lcd_4x20.h,98 :: 		fila = LCD_LINE_4_ADDRESS;
0x0816	0x0E54      	MOVLW       84
0x0818	0x6F3B      	MOVWF       FARG_lcd_gotoxy_fila, 1
0x081A	0xD001      	BRA         L_lcd_gotoxy649
L_lcd_gotoxy648:
;lcd_4x20.h,100 :: 		fila = LCD_LINE_1_ADDRESS;
0x081C	0x6B3B      	CLRF        FARG_lcd_gotoxy_fila, 1
L_lcd_gotoxy649:
L_lcd_gotoxy647:
L_lcd_gotoxy645:
L_lcd_gotoxy643:
;lcd_4x20.h,102 :: 		fila += (col-1);
0x081E	0x053C      	DECF        FARG_lcd_gotoxy_col, 0, 1
0x0820	0x6E00      	MOVWF       R0 
0x0822	0x513B      	MOVF        FARG_lcd_gotoxy_fila, 0, 1
0x0824	0x2600      	ADDWF       R0, 1 
0x0826	0xF53BC000  	MOVFF       R0, FARG_lcd_gotoxy_fila
;lcd_4x20.h,103 :: 		fila |= 0x80;
0x082A	0x8E00      	BSF         R0, 7 
0x082C	0xF53BC000  	MOVFF       R0, FARG_lcd_gotoxy_fila
;lcd_4x20.h,105 :: 		lcd_send_byte(0, fila);
0x0830	0x6B47      	CLRF        FARG_lcd_send_byte_address, 1
0x0832	0xF548C000  	MOVFF       R0, FARG_lcd_send_byte_enviar
0x0836	0xDE60      	RCALL       _lcd_send_byte
;lcd_4x20.h,106 :: 		}
L_end_lcd_gotoxy:
0x0838	0x0012      	RETURN      0
; end of _lcd_gotoxy
__mysql_calculate_address:
;table_eeprom.h,458 :: 		char _mysql_calculate_address(char *name, char *column){
;table_eeprom.h,459 :: 		unsigned int addressAux = 0;
0x083A	0x0105      	MOVLB       5
0x083C	0x6B3F      	CLRF        _mysql_calculate_address_addressAux_L0, 1
0x083E	0x6B40      	CLRF        _mysql_calculate_address_addressAux_L0+1, 1
;table_eeprom.h,462 :: 		if(strncmp(name, myTable.nameAct, TABLE_MAX_SIZE_NAME+1)){
0x0840	0xF549C53B  	MOVFF       FARG__mysql_calculate_address_name, FARG_strncmp_s1
0x0844	0xF54AC53C  	MOVFF       FARG__mysql_calculate_address_name+1, FARG_strncmp_s1+1
0x0848	0x0E20      	MOVLW       Expendedora_myTable+7
0x084A	0x6F4B      	MOVWF       FARG_strncmp_s2, 1
0x084C	0x0E03      	MOVLW       hi_addr(Expendedora_myTable+7)
0x084E	0x6F4C      	MOVWF       FARG_strncmp_s2+1, 1
0x0850	0x0E10      	MOVLW       16
0x0852	0x6F4D      	MOVWF       FARG_strncmp_len, 1
0x0854	0xDC5C      	RCALL       _strncmp
0x0856	0x5000      	MOVF        R0, 0 
0x0858	0x1001      	IORWF       R1, 0 
0x085A	0xE00A      	BZ          L__mysql_calculate_address533
;table_eeprom.h,463 :: 		if(!mysql_exist(name)){
0x085C	0xF547C53B  	MOVFF       FARG__mysql_calculate_address_name, FARG_mysql_exist_name
0x0860	0xF548C53C  	MOVFF       FARG__mysql_calculate_address_name+1, FARG_mysql_exist_name+1
0x0864	0xDF0F      	RCALL       _mysql_exist
0x0866	0x5200      	MOVF        R0, 1 
0x0868	0xE103      	BNZ         L__mysql_calculate_address534
;table_eeprom.h,464 :: 		return TABLE_RW_NO_EXIST_TABLE;  //No existe la tabla buscada
0x086A	0x0E01      	MOVLW       1
0x086C	0x6E00      	MOVWF       R0 
0x086E	0xD0CF      	BRA         L_end__mysql_calculate_address
;table_eeprom.h,465 :: 		}
L__mysql_calculate_address534:
;table_eeprom.h,466 :: 		}
L__mysql_calculate_address533:
;table_eeprom.h,468 :: 		if(strncmp(column, myTable.nameColAct, TABLE_MAX_SIZE_NAME+1)){
0x0870	0xF549C53D  	MOVFF       FARG__mysql_calculate_address_column, FARG_strncmp_s1
0x0874	0xF54AC53E  	MOVFF       FARG__mysql_calculate_address_column+1, FARG_strncmp_s1+1
0x0878	0x0E30      	MOVLW       Expendedora_myTable+23
0x087A	0x0105      	MOVLB       5
0x087C	0x6F4B      	MOVWF       FARG_strncmp_s2, 1
0x087E	0x0E03      	MOVLW       hi_addr(Expendedora_myTable+23)
0x0880	0x6F4C      	MOVWF       FARG_strncmp_s2+1, 1
0x0882	0x0E10      	MOVLW       16
0x0884	0x6F4D      	MOVWF       FARG_strncmp_len, 1
0x0886	0xDC43      	RCALL       _strncmp
0x0888	0x5000      	MOVF        R0, 0 
0x088A	0x1001      	IORWF       R1, 0 
0x088C	0xB4D8      	BTFSC       STATUS, 2 
0x088E	0xD0BE      	BRA         L__mysql_calculate_address535
;table_eeprom.h,469 :: 		myTable.addressAct = myTable.address;   //Copiar direccion casa de la tabla
0x0890	0xF346C344  	MOVFF       Expendedora_myTable+43, Expendedora_myTable+45
0x0894	0xF347C345  	MOVFF       Expendedora_myTable+44, Expendedora_myTable+46
;table_eeprom.h,471 :: 		myTable.addressAct += TABLE_MAX_SIZE_NAME+3;
0x0898	0x0E12      	MOVLW       18
0x089A	0x0103      	MOVLB       3
0x089C	0x2544      	ADDWF       Expendedora_myTable+43, 0, 1
0x089E	0x6E00      	MOVWF       R0 
0x08A0	0x0E00      	MOVLW       0
0x08A2	0x2145      	ADDWFC      Expendedora_myTable+44, 0, 1
0x08A4	0x6E01      	MOVWF       R1 
0x08A6	0xF346C000  	MOVFF       R0, Expendedora_myTable+45
0x08AA	0xF347C001  	MOVFF       R1, Expendedora_myTable+46
;table_eeprom.h,472 :: 		eeprom_i2c_read(myTable.addressAct,(char*)&myTable.rowAct, 2);
0x08AE	0xF549C000  	MOVFF       R0, FARG_eeprom_i2c_read_address
0x08B2	0xF54AC001  	MOVFF       R1, FARG_eeprom_i2c_read_address+1
0x08B6	0x0E1D      	MOVLW       Expendedora_myTable+4
0x08B8	0x0105      	MOVLB       5
0x08BA	0x6F4B      	MOVWF       FARG_eeprom_i2c_read_datos, 1
0x08BC	0x0E03      	MOVLW       hi_addr(Expendedora_myTable+4)
0x08BE	0x6F4C      	MOVWF       FARG_eeprom_i2c_read_datos+1, 1
0x08C0	0x0E02      	MOVLW       2
0x08C2	0x6F4D      	MOVWF       FARG_eeprom_i2c_read_size, 1
0x08C4	0xDD8D      	RCALL       _eeprom_i2c_read
;table_eeprom.h,473 :: 		eeprom_i2c_read(myTable.addressAct+2,(char*)&myTable.row, 2);
0x08C6	0x0E02      	MOVLW       2
0x08C8	0x0103      	MOVLB       3
0x08CA	0x2546      	ADDWF       Expendedora_myTable+45, 0, 1
0x08CC	0x0105      	MOVLB       5
0x08CE	0x6F49      	MOVWF       FARG_eeprom_i2c_read_address, 1
0x08D0	0x0E00      	MOVLW       0
0x08D2	0x0103      	MOVLB       3
0x08D4	0x2147      	ADDWFC      Expendedora_myTable+46, 0, 1
0x08D6	0x0105      	MOVLB       5
0x08D8	0x6F4A      	MOVWF       FARG_eeprom_i2c_read_address+1, 1
0x08DA	0x0E1B      	MOVLW       Expendedora_myTable+2
0x08DC	0x6F4B      	MOVWF       FARG_eeprom_i2c_read_datos, 1
0x08DE	0x0E03      	MOVLW       hi_addr(Expendedora_myTable+2)
0x08E0	0x6F4C      	MOVWF       FARG_eeprom_i2c_read_datos+1, 1
0x08E2	0x0E02      	MOVLW       2
0x08E4	0x6F4D      	MOVWF       FARG_eeprom_i2c_read_size, 1
0x08E6	0xDD7C      	RCALL       _eeprom_i2c_read
;table_eeprom.h,474 :: 		eeprom_i2c_read(myTable.addressAct+4,&myTable.col, 1); //Filas totales de busqueda
0x08E8	0x0E04      	MOVLW       4
0x08EA	0x0103      	MOVLB       3
0x08EC	0x2546      	ADDWF       Expendedora_myTable+45, 0, 1
0x08EE	0x0105      	MOVLB       5
0x08F0	0x6F49      	MOVWF       FARG_eeprom_i2c_read_address, 1
0x08F2	0x0E00      	MOVLW       0
0x08F4	0x0103      	MOVLB       3
0x08F6	0x2147      	ADDWFC      Expendedora_myTable+46, 0, 1
0x08F8	0x0105      	MOVLB       5
0x08FA	0x6F4A      	MOVWF       FARG_eeprom_i2c_read_address+1, 1
0x08FC	0x0E1A      	MOVLW       Expendedora_myTable+1
0x08FE	0x6F4B      	MOVWF       FARG_eeprom_i2c_read_datos, 1
0x0900	0x0E03      	MOVLW       hi_addr(Expendedora_myTable+1)
0x0902	0x6F4C      	MOVWF       FARG_eeprom_i2c_read_datos+1, 1
0x0904	0x0E01      	MOVLW       1
0x0906	0x6F4D      	MOVWF       FARG_eeprom_i2c_read_size, 1
0x0908	0xDD6B      	RCALL       _eeprom_i2c_read
;table_eeprom.h,476 :: 		myTable.addressAct += (4+1);   //Apuntamos a la primera columna name
0x090A	0x0E05      	MOVLW       5
0x090C	0x0103      	MOVLB       3
0x090E	0x2546      	ADDWF       Expendedora_myTable+45, 0, 1
0x0910	0x6E02      	MOVWF       R2 
0x0912	0x0E00      	MOVLW       0
0x0914	0x2147      	ADDWFC      Expendedora_myTable+46, 0, 1
0x0916	0x6E03      	MOVWF       R3 
0x0918	0xF346C002  	MOVFF       R2, Expendedora_myTable+45
0x091C	0xF347C003  	MOVFF       R3, Expendedora_myTable+46
;table_eeprom.h,477 :: 		addressAux = myTable.addressAct;
0x0920	0xF53FC002  	MOVFF       R2, _mysql_calculate_address_addressAux_L0
0x0924	0xF540C003  	MOVFF       R3, _mysql_calculate_address_addressAux_L0+1
;table_eeprom.h,478 :: 		addressAux += myTable.col*(TABLE_MAX_SIZE_NAME+1+1); //Apuntar a los datos
0x0928	0x0E11      	MOVLW       17
0x092A	0x031A      	MULWF       Expendedora_myTable+1, 1
0x092C	0xF000CFF3  	MOVFF       PRODL, R0
0x0930	0xF001CFF4  	MOVFF       PRODH, R1
0x0934	0x5000      	MOVF        R0, 0 
0x0936	0x2402      	ADDWF       R2, 0 
0x0938	0x0105      	MOVLB       5
0x093A	0x6F3F      	MOVWF       _mysql_calculate_address_addressAux_L0, 1
0x093C	0x5001      	MOVF        R1, 0 
0x093E	0x2003      	ADDWFC      R3, 0 
0x0940	0x6F40      	MOVWF       _mysql_calculate_address_addressAux_L0+1, 1
;table_eeprom.h,481 :: 		for(myTable.cont = 0; myTable.cont < myTable.col; myTable.cont++){
0x0942	0x0103      	MOVLB       3
0x0944	0x6B48      	CLRF        Expendedora_myTable+47, 1
L__mysql_calculate_address536:
0x0946	0x511A      	MOVF        Expendedora_myTable+1, 0, 1
0x0948	0x5D48      	SUBWF       Expendedora_myTable+47, 0, 1
0x094A	0xE254      	BC          L__mysql_calculate_address537
;table_eeprom.h,483 :: 		eeprom_i2c_read(myTable.addressAct, myTable.nameColAct, TABLE_MAX_SIZE_NAME+1);
0x094C	0xF549C346  	MOVFF       Expendedora_myTable+45, FARG_eeprom_i2c_read_address
0x0950	0xF54AC347  	MOVFF       Expendedora_myTable+46, FARG_eeprom_i2c_read_address+1
0x0954	0x0E30      	MOVLW       Expendedora_myTable+23
0x0956	0x0105      	MOVLB       5
0x0958	0x6F4B      	MOVWF       FARG_eeprom_i2c_read_datos, 1
0x095A	0x0E03      	MOVLW       hi_addr(Expendedora_myTable+23)
0x095C	0x6F4C      	MOVWF       FARG_eeprom_i2c_read_datos+1, 1
0x095E	0x0E10      	MOVLW       16
0x0960	0x6F4D      	MOVWF       FARG_eeprom_i2c_read_size, 1
0x0962	0xDD3E      	RCALL       _eeprom_i2c_read
;table_eeprom.h,485 :: 		myTable.addressAct += TABLE_MAX_SIZE_NAME+1;
0x0964	0x0E10      	MOVLW       16
0x0966	0x0103      	MOVLB       3
0x0968	0x2546      	ADDWF       Expendedora_myTable+45, 0, 1
0x096A	0x6E00      	MOVWF       R0 
0x096C	0x0E00      	MOVLW       0
0x096E	0x2147      	ADDWFC      Expendedora_myTable+46, 0, 1
0x0970	0x6E01      	MOVWF       R1 
0x0972	0xF346C000  	MOVFF       R0, Expendedora_myTable+45
0x0976	0xF347C001  	MOVFF       R1, Expendedora_myTable+46
;table_eeprom.h,486 :: 		eeprom_i2c_read(myTable.addressAct, &myTable.tamCol, 1); //1 de esta direccion
0x097A	0xF549C000  	MOVFF       R0, FARG_eeprom_i2c_read_address
0x097E	0xF54AC001  	MOVFF       R1, FARG_eeprom_i2c_read_address+1
0x0982	0x0E1F      	MOVLW       Expendedora_myTable+6
0x0984	0x0105      	MOVLB       5
0x0986	0x6F4B      	MOVWF       FARG_eeprom_i2c_read_datos, 1
0x0988	0x0E03      	MOVLW       hi_addr(Expendedora_myTable+6)
0x098A	0x6F4C      	MOVWF       FARG_eeprom_i2c_read_datos+1, 1
0x098C	0x0E01      	MOVLW       1
0x098E	0x6F4D      	MOVWF       FARG_eeprom_i2c_read_size, 1
0x0990	0xDD27      	RCALL       _eeprom_i2c_read
;table_eeprom.h,487 :: 		myTable.addressAct += 1;
0x0992	0x0E01      	MOVLW       1
0x0994	0x0103      	MOVLB       3
0x0996	0x2546      	ADDWF       Expendedora_myTable+45, 0, 1
0x0998	0x6E00      	MOVWF       R0 
0x099A	0x0E00      	MOVLW       0
0x099C	0x2147      	ADDWFC      Expendedora_myTable+46, 0, 1
0x099E	0x6E01      	MOVWF       R1 
0x09A0	0xF346C000  	MOVFF       R0, Expendedora_myTable+45
0x09A4	0xF347C001  	MOVFF       R1, Expendedora_myTable+46
;table_eeprom.h,489 :: 		if(!strncmp(column, myTable.nameColAct, TABLE_MAX_SIZE_NAME+1))
0x09A8	0xF549C53D  	MOVFF       FARG__mysql_calculate_address_column, FARG_strncmp_s1
0x09AC	0xF54AC53E  	MOVFF       FARG__mysql_calculate_address_column+1, FARG_strncmp_s1+1
0x09B0	0x0E30      	MOVLW       Expendedora_myTable+23
0x09B2	0x0105      	MOVLB       5
0x09B4	0x6F4B      	MOVWF       FARG_strncmp_s2, 1
0x09B6	0x0E03      	MOVLW       hi_addr(Expendedora_myTable+23)
0x09B8	0x6F4C      	MOVWF       FARG_strncmp_s2+1, 1
0x09BA	0x0E10      	MOVLW       16
0x09BC	0x6F4D      	MOVWF       FARG_strncmp_len, 1
0x09BE	0xF000EC87  	CALL        _strncmp, 0
0x09C2	0x5000      	MOVF        R0, 0 
0x09C4	0x1001      	IORWF       R1, 0 
0x09C6	0xE101      	BNZ         L__mysql_calculate_address539
;table_eeprom.h,490 :: 		break;
0x09C8	0xD015      	BRA         L__mysql_calculate_address537
L__mysql_calculate_address539:
;table_eeprom.h,492 :: 		addressAux += myTable.tamCol*myTable.row;   //Acumular las columnas para saber la direccion
0x09CA	0xF000C31F  	MOVFF       Expendedora_myTable+6, R0
0x09CE	0x0E00      	MOVLW       0
0x09D0	0x6E01      	MOVWF       R1 
0x09D2	0xF004C31B  	MOVFF       Expendedora_myTable+2, R4
0x09D6	0xF005C31C  	MOVFF       Expendedora_myTable+3, R5
0x09DA	0xDD66      	RCALL       _Mul_16X16_U
0x09DC	0x5000      	MOVF        R0, 0 
0x09DE	0x0105      	MOVLB       5
0x09E0	0x273F      	ADDWF       _mysql_calculate_address_addressAux_L0, 1, 1
0x09E2	0x5001      	MOVF        R1, 0 
0x09E4	0x2340      	ADDWFC      _mysql_calculate_address_addressAux_L0+1, 1, 1
;table_eeprom.h,481 :: 		for(myTable.cont = 0; myTable.cont < myTable.col; myTable.cont++){
0x09E6	0x0103      	MOVLB       3
0x09E8	0x5148      	MOVF        Expendedora_myTable+47, 0, 1
0x09EA	0x0F01      	ADDLW       1
0x09EC	0x6E00      	MOVWF       R0 
0x09EE	0xF348C000  	MOVFF       R0, Expendedora_myTable+47
;table_eeprom.h,494 :: 		}
0x09F2	0xD7A9      	BRA         L__mysql_calculate_address536
L__mysql_calculate_address537:
0x09F4	0x0103      	MOVLB       3
;table_eeprom.h,496 :: 		if(myTable.cont >= myTable.col){
0x09F6	0x511A      	MOVF        Expendedora_myTable+1, 0, 1
0x09F8	0x5D48      	SUBWF       Expendedora_myTable+47, 0, 1
0x09FA	0xE304      	BNC         L__mysql_calculate_address540
;table_eeprom.h,497 :: 		myTable.nameColAct[0] = 0;
0x09FC	0x6B30      	CLRF        Expendedora_myTable+23, 1
;table_eeprom.h,498 :: 		return TABLE_RW_NO_EXIST_NAME_COL;
0x09FE	0x0E02      	MOVLW       2
0x0A00	0x6E00      	MOVWF       R0 
0x0A02	0xD005      	BRA         L_end__mysql_calculate_address
;table_eeprom.h,499 :: 		}
L__mysql_calculate_address540:
;table_eeprom.h,500 :: 		myTable.addressAct = addressAux;
0x0A04	0xF346C53F  	MOVFF       _mysql_calculate_address_addressAux_L0, Expendedora_myTable+45
0x0A08	0xF347C540  	MOVFF       _mysql_calculate_address_addressAux_L0+1, Expendedora_myTable+46
;table_eeprom.h,501 :: 		}
L__mysql_calculate_address535:
;table_eeprom.h,503 :: 		return TABLE_RW_SUCCESS;
0x0A0C	0x6A00      	CLRF        R0 
;table_eeprom.h,504 :: 		}
L_end__mysql_calculate_address:
0x0A0E	0x0012      	RETURN      0
; end of __mysql_calculate_address
_Div_8X8_U:
;__Lib_Math.c,77 :: 		
;__Lib_Math.c,84 :: 		
0x0A10	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,85 :: 		
0x0A12	0x0E08      	MOVLW       8
;__Lib_Math.c,86 :: 		
0x0A14	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,87 :: 		
0x0A16	0x3400      	RLCF        R0, 0, 0
;__Lib_Math.c,88 :: 		
0x0A18	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,89 :: 		
0x0A1A	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,90 :: 		
0x0A1C	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,91 :: 		
0x0A1E	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,92 :: 		
0x0A20	0xD002      	BRA         $+6
;__Lib_Math.c,93 :: 		
0x0A22	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,94 :: 		
0x0A24	0x90D8      	BCF         STATUS, 0, 0
;__Lib_Math.c,95 :: 		
0x0A26	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,96 :: 		
0x0A28	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,97 :: 		
0x0A2A	0xD7F5      	BRA         $-20
;__Lib_Math.c,99 :: 		
L_end_Div_8X8_U:
0x0A2C	0x0012      	RETURN      0
; end of _Div_8X8_U
_numToString:
;string.h,197 :: 		char* numToString(long valor, char *cadena, short digitos){
;string.h,198 :: 		cadena[digitos--] = 0;//Agregar final de cadena
0x0A2E	0x0105      	MOVLB       5
0x0A30	0x5141      	MOVF        FARG_numToString_digitos, 0, 1
0x0A32	0x253F      	ADDWF       FARG_numToString_cadena, 0, 1
0x0A34	0x6EE1      	MOVWF       FSR1L 
0x0A36	0x0E00      	MOVLW       0
0x0A38	0xBF41      	BTFSC       FARG_numToString_digitos, 7, 1
0x0A3A	0x0EFF      	MOVLW       255
0x0A3C	0x2140      	ADDWFC      FARG_numToString_cadena+1, 0, 1
0x0A3E	0x6EE2      	MOVWF       FSR1H 
0x0A40	0x6AE6      	CLRF        POSTINC1 
0x0A42	0x0741      	DECF        FARG_numToString_digitos, 1, 1
;string.h,199 :: 		while(digitos >= 0){
L_numToString70:
0x0A44	0x0105      	MOVLB       5
0x0A46	0x0E80      	MOVLW       128
0x0A48	0x1941      	XORWF       FARG_numToString_digitos, 0, 1
0x0A4A	0x6E00      	MOVWF       R0 
0x0A4C	0x0E80      	MOVLW       128
0x0A4E	0x0A00      	XORLW       0
0x0A50	0x5C00      	SUBWF       R0, 0 
0x0A52	0xE341      	BNC         L_numToString71
;string.h,201 :: 		cadena[digitos--] = (valor % 10) + '0';
0x0A54	0x5141      	MOVF        FARG_numToString_digitos, 0, 1
0x0A56	0x253F      	ADDWF       FARG_numToString_cadena, 0, 1
0x0A58	0x6F42      	MOVWF       FLOC__numToString, 1
0x0A5A	0x0E00      	MOVLW       0
0x0A5C	0xBF41      	BTFSC       FARG_numToString_digitos, 7, 1
0x0A5E	0x0EFF      	MOVLW       255
0x0A60	0x2140      	ADDWFC      FARG_numToString_cadena+1, 0, 1
0x0A62	0x6F43      	MOVWF       FLOC__numToString+1, 1
0x0A64	0x0E0A      	MOVLW       10
0x0A66	0x6E04      	MOVWF       R4 
0x0A68	0x0E00      	MOVLW       0
0x0A6A	0x6E05      	MOVWF       R5 
0x0A6C	0x6E06      	MOVWF       R6 
0x0A6E	0x6E07      	MOVWF       R7 
0x0A70	0xF000C53B  	MOVFF       FARG_numToString_valor, R0
0x0A74	0xF001C53C  	MOVFF       FARG_numToString_valor+1, R1
0x0A78	0xF002C53D  	MOVFF       FARG_numToString_valor+2, R2
0x0A7C	0xF003C53E  	MOVFF       FARG_numToString_valor+3, R3
0x0A80	0xDD54      	RCALL       _Div_32x32_S
0x0A82	0xF000C008  	MOVFF       R8, R0
0x0A86	0xF001C009  	MOVFF       R9, R1
0x0A8A	0xF002C00A  	MOVFF       R10, R2
0x0A8E	0xF003C00B  	MOVFF       R11, R3
0x0A92	0x0E30      	MOVLW       48
0x0A94	0x2600      	ADDWF       R0, 1 
0x0A96	0xFFE1C542  	MOVFF       FLOC__numToString, FSR1L
0x0A9A	0xFFE2C543  	MOVFF       FLOC__numToString+1, FSR1H
0x0A9E	0xFFE6C000  	MOVFF       R0, POSTINC1
0x0AA2	0x0105      	MOVLB       5
0x0AA4	0x0741      	DECF        FARG_numToString_digitos, 1, 1
;string.h,202 :: 		valor /= 10;
0x0AA6	0x0E0A      	MOVLW       10
0x0AA8	0x6E04      	MOVWF       R4 
0x0AAA	0x0E00      	MOVLW       0
0x0AAC	0x6E05      	MOVWF       R5 
0x0AAE	0x6E06      	MOVWF       R6 
0x0AB0	0x6E07      	MOVWF       R7 
0x0AB2	0xF000C53B  	MOVFF       FARG_numToString_valor, R0
0x0AB6	0xF001C53C  	MOVFF       FARG_numToString_valor+1, R1
0x0ABA	0xF002C53D  	MOVFF       FARG_numToString_valor+2, R2
0x0ABE	0xF003C53E  	MOVFF       FARG_numToString_valor+3, R3
0x0AC2	0xDD33      	RCALL       _Div_32x32_S
0x0AC4	0xF53BC000  	MOVFF       R0, FARG_numToString_valor
0x0AC8	0xF53CC001  	MOVFF       R1, FARG_numToString_valor+1
0x0ACC	0xF53DC002  	MOVFF       R2, FARG_numToString_valor+2
0x0AD0	0xF53EC003  	MOVFF       R3, FARG_numToString_valor+3
;string.h,203 :: 		}
0x0AD4	0xD7B7      	BRA         L_numToString70
L_numToString71:
;string.h,205 :: 		return cadena;
0x0AD6	0xF000C53F  	MOVFF       FARG_numToString_cadena, R0
0x0ADA	0xF001C540  	MOVFF       FARG_numToString_cadena+1, R1
;string.h,206 :: 		}
L_end_numToString:
0x0ADE	0x0012      	RETURN      0
; end of _numToString
__Lib_SoftI2C_PutZerosToLATSda:
;__Lib_SoftI2C.c,28 :: 		
;__Lib_SoftI2C.c,37 :: 		
0x0AE0	0xF083EE0F  	LFSR        0, Soft_I2C_Sda
;__Lib_SoftI2C.c,38 :: 		
0x0AE4	0x50EF      	MOVF        INDF0, 0, 0
;__Lib_SoftI2C.c,39 :: 		
0x0AE6	0xF000CFEF  	MOVFF       INDF0, R0
;__Lib_SoftI2C.c,41 :: 		
0x0AEA	0x9C00      	BCF         __Lib_SoftI2C_PutZerosToLATSda_temp_sda_L0, BitPos(Soft_I2C_Sda+0), 0
;__Lib_SoftI2C.c,43 :: 		
0x0AEC	0xFFEFC000  	MOVFF       R0, INDF0
;__Lib_SoftI2C.c,44 :: 		
L_end_PutZerosToLATSda:
0x0AF0	0x0012      	RETURN      0
; end of __Lib_SoftI2C_PutZerosToLATSda
__Lib_SoftI2C_PutZerosToLATScl:
;__Lib_SoftI2C.c,45 :: 		
;__Lib_SoftI2C.c,53 :: 		
0x0AF2	0xF084EE0F  	LFSR        0, Soft_I2C_Scl
;__Lib_SoftI2C.c,54 :: 		
0x0AF6	0x50EF      	MOVF        INDF0, 0, 0
;__Lib_SoftI2C.c,55 :: 		
0x0AF8	0xF000CFEF  	MOVFF       INDF0, R0
;__Lib_SoftI2C.c,58 :: 		
0x0AFC	0x9200      	BCF         __Lib_SoftI2C_PutZerosToLATScl_temp_scl_L0, BitPos(Soft_I2C_Scl+0), 0
;__Lib_SoftI2C.c,60 :: 		
0x0AFE	0xFFEFC000  	MOVFF       R0, INDF0
;__Lib_SoftI2C.c,61 :: 		
L_end_PutZerosToLATScl:
0x0B02	0x0012      	RETURN      0
; end of __Lib_SoftI2C_PutZerosToLATScl
_eeprom_i2c_write:
;eeprom_i2c_soft.h,24 :: 		void eeprom_i2c_write(unsigned int address, char *datos, char size){
;eeprom_i2c_soft.h,25 :: 		char cont = 0;
0x0B04	0x0105      	MOVLB       5
0x0B06	0x6B40      	CLRF        eeprom_i2c_write_cont_L0, 1
;eeprom_i2c_soft.h,27 :: 		while(cont < size){
L_eeprom_i2c_write426:
0x0B08	0x0105      	MOVLB       5
0x0B0A	0x513F      	MOVF        FARG_eeprom_i2c_write_size, 0, 1
0x0B0C	0x5D40      	SUBWF       eeprom_i2c_write_cont_L0, 0, 1
0x0B0E	0xE240      	BC          L_eeprom_i2c_write427
;eeprom_i2c_soft.h,28 :: 		I2C_soft_start();                       // Issue start signal
0x0B10	0xF000EC76  	CALL        _I2C_soft_start, 0
;eeprom_i2c_soft.h,30 :: 		I2C_soft_write(EEPROM_ADDRESS_24LC256); //Escritura e multiples bytes
0x0B14	0x0EA0      	MOVLW       160
0x0B16	0x6F51      	MOVWF       FARG_I2C_soft_write_dato, 1
0x0B18	0xF000EC0E  	CALL        _I2C_soft_write, 0
;eeprom_i2c_soft.h,31 :: 		I2C_soft_write(getByte(address,1));     // Start from address hihg
0x0B1C	0xF551C53C  	MOVFF       FARG_eeprom_i2c_write_address+1, FARG_I2C_soft_write_dato
0x0B20	0xF000EC0E  	CALL        _I2C_soft_write, 0
;eeprom_i2c_soft.h,32 :: 		I2C_soft_write(getByte(address,0));     // Start from address low
0x0B24	0xF551C53B  	MOVFF       FARG_eeprom_i2c_write_address, FARG_I2C_soft_write_dato
0x0B28	0xF000EC0E  	CALL        _I2C_soft_write, 0
;eeprom_i2c_soft.h,34 :: 		for(; cont < size; cont++){
L_eeprom_i2c_write428:
0x0B2C	0x0105      	MOVLB       5
0x0B2E	0x513F      	MOVF        FARG_eeprom_i2c_write_size, 0, 1
0x0B30	0x5D40      	SUBWF       eeprom_i2c_write_cont_L0, 0, 1
0x0B32	0xE21E      	BC          L_eeprom_i2c_write429
;eeprom_i2c_soft.h,35 :: 		I2C_soft_write(datos[cont]);           // Byte para ser escrito
0x0B34	0x5140      	MOVF        eeprom_i2c_write_cont_L0, 0, 1
0x0B36	0x253D      	ADDWF       FARG_eeprom_i2c_write_datos, 0, 1
0x0B38	0x6EE9      	MOVWF       FSR0L 
0x0B3A	0x0E00      	MOVLW       0
0x0B3C	0x213E      	ADDWFC      FARG_eeprom_i2c_write_datos+1, 0, 1
0x0B3E	0x6EEA      	MOVWF       FSR0H 
0x0B40	0xF551CFEE  	MOVFF       POSTINC0, FARG_I2C_soft_write_dato
0x0B44	0xF000EC0E  	CALL        _I2C_soft_write, 0
;eeprom_i2c_soft.h,36 :: 		if(++address%64 == 0){
0x0B48	0x0105      	MOVLB       5
0x0B4A	0x4B3B      	INFSNZ      FARG_eeprom_i2c_write_address, 1, 1
0x0B4C	0x2B3C      	INCF        FARG_eeprom_i2c_write_address+1, 1, 1
0x0B4E	0x0E3F      	MOVLW       63
0x0B50	0x153B      	ANDWF       FARG_eeprom_i2c_write_address, 0, 1
0x0B52	0x6E01      	MOVWF       R1 
0x0B54	0xF002C53C  	MOVFF       FARG_eeprom_i2c_write_address+1, R2
0x0B58	0x0E00      	MOVLW       0
0x0B5A	0x1602      	ANDWF       R2, 1 
0x0B5C	0x0E00      	MOVLW       0
0x0B5E	0x1802      	XORWF       R2, 0 
0x0B60	0xE102      	BNZ         L__eeprom_i2c_write1265
0x0B62	0x0E00      	MOVLW       0
0x0B64	0x1801      	XORWF       R1, 0 
L__eeprom_i2c_write1265:
0x0B66	0xE102      	BNZ         L_eeprom_i2c_write431
;eeprom_i2c_soft.h,37 :: 		cont++;
0x0B68	0x2B40      	INCF        eeprom_i2c_write_cont_L0, 1, 1
;eeprom_i2c_soft.h,38 :: 		break;
0x0B6A	0xD002      	BRA         L_eeprom_i2c_write429
;eeprom_i2c_soft.h,39 :: 		}
L_eeprom_i2c_write431:
;eeprom_i2c_soft.h,34 :: 		for(; cont < size; cont++){
0x0B6C	0x2B40      	INCF        eeprom_i2c_write_cont_L0, 1, 1
;eeprom_i2c_soft.h,40 :: 		}
0x0B6E	0xD7DE      	BRA         L_eeprom_i2c_write428
L_eeprom_i2c_write429:
;eeprom_i2c_soft.h,41 :: 		I2C_soft_stop();                         // Issue stop signal
0x0B70	0xF000EC67  	CALL        _I2C_soft_stop, 0
;eeprom_i2c_soft.h,43 :: 		while(true){
L_eeprom_i2c_write432:
0x0B74	0x0105      	MOVLB       5
;eeprom_i2c_soft.h,44 :: 		I2C_soft_start();
0x0B76	0xF000EC76  	CALL        _I2C_soft_start, 0
;eeprom_i2c_soft.h,45 :: 		if(!I2C_soft_write(EEPROM_ADDRESS_24LC256))
0x0B7A	0x0EA0      	MOVLW       160
0x0B7C	0x6F51      	MOVWF       FARG_I2C_soft_write_dato, 1
0x0B7E	0xF000EC0E  	CALL        _I2C_soft_write, 0
0x0B82	0x5200      	MOVF        R0, 1 
0x0B84	0xE101      	BNZ         L_eeprom_i2c_write434
;eeprom_i2c_soft.h,46 :: 		break;
0x0B86	0xD001      	BRA         L_eeprom_i2c_write433
L_eeprom_i2c_write434:
;eeprom_i2c_soft.h,47 :: 		}
0x0B88	0xD7F5      	BRA         L_eeprom_i2c_write432
L_eeprom_i2c_write433:
;eeprom_i2c_soft.h,48 :: 		I2C_soft_stop();      // Issue stop signal
0x0B8A	0xF000EC67  	CALL        _I2C_soft_stop, 0
;eeprom_i2c_soft.h,49 :: 		}
0x0B8E	0xD7BC      	BRA         L_eeprom_i2c_write426
L_eeprom_i2c_write427:
;eeprom_i2c_soft.h,50 :: 		}
L_end_eeprom_i2c_write:
0x0B90	0x0012      	RETURN      0
; end of _eeprom_i2c_write
_isdigit:
;__Lib_CType.c,23 :: 		
;__Lib_CType.c,24 :: 		
0x0B92	0x0105      	MOVLB       5
0x0B94	0x513B      	MOVF        FARG_isdigit_character, 0, 1
0x0B96	0x0839      	SUBLW       57
0x0B98	0xE306      	BNC         L_isdigit9
0x0B9A	0x0E30      	MOVLW       48
0x0B9C	0x5D3B      	SUBWF       FARG_isdigit_character, 0, 1
0x0B9E	0xE303      	BNC         L_isdigit9
0x0BA0	0x0E01      	MOVLW       1
0x0BA2	0x6E00      	MOVWF       R0 
0x0BA4	0xD001      	BRA         L_isdigit8
L_isdigit9:
0x0BA6	0x6A00      	CLRF        R0 
L_isdigit8:
;__Lib_CType.c,25 :: 		
L_end_isdigit:
0x0BA8	0x0012      	RETURN      0
; end of _isdigit
_clamp_shift:
;miscelaneos.h,46 :: 		long clamp_shift(long valor, long min, long max){
;miscelaneos.h,47 :: 		if(valor > max)
0x0BAA	0x0E80      	MOVLW       128
0x0BAC	0x0105      	MOVLB       5
0x0BAE	0x1946      	XORWF       FARG_clamp_shift_max+3, 0, 1
0x0BB0	0x6E00      	MOVWF       R0 
0x0BB2	0x0E80      	MOVLW       128
0x0BB4	0x193E      	XORWF       FARG_clamp_shift_valor+3, 0, 1
0x0BB6	0x5C00      	SUBWF       R0, 0 
0x0BB8	0xE108      	BNZ         L__clamp_shift1027
0x0BBA	0x513D      	MOVF        FARG_clamp_shift_valor+2, 0, 1
0x0BBC	0x5D45      	SUBWF       FARG_clamp_shift_max+2, 0, 1
0x0BBE	0xE105      	BNZ         L__clamp_shift1027
0x0BC0	0x513C      	MOVF        FARG_clamp_shift_valor+1, 0, 1
0x0BC2	0x5D44      	SUBWF       FARG_clamp_shift_max+1, 0, 1
0x0BC4	0xE102      	BNZ         L__clamp_shift1027
0x0BC6	0x513B      	MOVF        FARG_clamp_shift_valor, 0, 1
0x0BC8	0x5D43      	SUBWF       FARG_clamp_shift_max, 0, 1
L__clamp_shift1027:
0x0BCA	0xE209      	BC          L_clamp_shift5
;miscelaneos.h,48 :: 		valor = min;
0x0BCC	0xF53BC53F  	MOVFF       FARG_clamp_shift_min, FARG_clamp_shift_valor
0x0BD0	0xF53CC540  	MOVFF       FARG_clamp_shift_min+1, FARG_clamp_shift_valor+1
0x0BD4	0xF53DC541  	MOVFF       FARG_clamp_shift_min+2, FARG_clamp_shift_valor+2
0x0BD8	0xF53EC542  	MOVFF       FARG_clamp_shift_min+3, FARG_clamp_shift_valor+3
0x0BDC	0xD018      	BRA         L_clamp_shift6
L_clamp_shift5:
;miscelaneos.h,49 :: 		else if(valor < min)
0x0BDE	0x0E80      	MOVLW       128
0x0BE0	0x193E      	XORWF       FARG_clamp_shift_valor+3, 0, 1
0x0BE2	0x6E00      	MOVWF       R0 
0x0BE4	0x0E80      	MOVLW       128
0x0BE6	0x1942      	XORWF       FARG_clamp_shift_min+3, 0, 1
0x0BE8	0x5C00      	SUBWF       R0, 0 
0x0BEA	0xE108      	BNZ         L__clamp_shift1028
0x0BEC	0x5141      	MOVF        FARG_clamp_shift_min+2, 0, 1
0x0BEE	0x5D3D      	SUBWF       FARG_clamp_shift_valor+2, 0, 1
0x0BF0	0xE105      	BNZ         L__clamp_shift1028
0x0BF2	0x5140      	MOVF        FARG_clamp_shift_min+1, 0, 1
0x0BF4	0x5D3C      	SUBWF       FARG_clamp_shift_valor+1, 0, 1
0x0BF6	0xE102      	BNZ         L__clamp_shift1028
0x0BF8	0x513F      	MOVF        FARG_clamp_shift_min, 0, 1
0x0BFA	0x5D3B      	SUBWF       FARG_clamp_shift_valor, 0, 1
L__clamp_shift1028:
0x0BFC	0xE208      	BC          L_clamp_shift7
;miscelaneos.h,50 :: 		valor = max;
0x0BFE	0xF53BC543  	MOVFF       FARG_clamp_shift_max, FARG_clamp_shift_valor
0x0C02	0xF53CC544  	MOVFF       FARG_clamp_shift_max+1, FARG_clamp_shift_valor+1
0x0C06	0xF53DC545  	MOVFF       FARG_clamp_shift_max+2, FARG_clamp_shift_valor+2
0x0C0A	0xF53EC546  	MOVFF       FARG_clamp_shift_max+3, FARG_clamp_shift_valor+3
L_clamp_shift7:
L_clamp_shift6:
;miscelaneos.h,52 :: 		return valor;
0x0C0E	0xF000C53B  	MOVFF       FARG_clamp_shift_valor, R0
0x0C12	0xF001C53C  	MOVFF       FARG_clamp_shift_valor+1, R1
0x0C16	0xF002C53D  	MOVFF       FARG_clamp_shift_valor+2, R2
0x0C1A	0xF003C53E  	MOVFF       FARG_clamp_shift_valor+3, R3
;miscelaneos.h,53 :: 		}
L_end_clamp_shift:
0x0C1E	0x0012      	RETURN      0
; end of _clamp_shift
_Soft_I2C_Stop:
;__Lib_SoftI2C.c,167 :: 		
;__Lib_SoftI2C.c,169 :: 		
0x0C20	0xDF5F      	RCALL       __Lib_SoftI2C_PutZerosToLATSda
;__Lib_SoftI2C.c,170 :: 		
0x0C22	0x9C95      	BCF         Soft_I2C_Sda_Direction, BitPos(Soft_I2C_Sda_Direction+0) 
;__Lib_SoftI2C.c,172 :: 		
0x0C24	0xDDDE      	RCALL       _Delay_1us
0x0C26	0xDDDD      	RCALL       _Delay_1us
;__Lib_SoftI2C.c,174 :: 		
0x0C28	0x8296      	BSF         Soft_I2C_Scl_Direction, BitPos(Soft_I2C_Scl_Direction+0) 
;__Lib_SoftI2C.c,176 :: 		
0x0C2A	0x0102      	MOVLB       2
0x0C2C	0x91E4      	BCF         __Lib_SoftI2C___StopWaiting, BitPos(__Lib_SoftI2C___StopWaiting+0), 1
;__Lib_SoftI2C.c,177 :: 		
L_Soft_I2C_Stop13:
0x0C2E	0xB284      	BTFSC       Soft_I2C_Scl, BitPos(Soft_I2C_Scl+0) 
0x0C30	0xD004      	BRA         L_Soft_I2C_Stop14
;__Lib_SoftI2C.c,178 :: 		
0x0C32	0xA1E4      	BTFSS       __Lib_SoftI2C___StopWaiting, BitPos(__Lib_SoftI2C___StopWaiting+0), 1
0x0C34	0xD001      	BRA         L_Soft_I2C_Stop15
;__Lib_SoftI2C.c,179 :: 		
0x0C36	0xD001      	BRA         L_Soft_I2C_Stop14
L_Soft_I2C_Stop15:
0x0C38	0xD7FA      	BRA         L_Soft_I2C_Stop13
L_Soft_I2C_Stop14:
;__Lib_SoftI2C.c,181 :: 		
0x0C3A	0xDDD3      	RCALL       _Delay_1us
0x0C3C	0xDDD2      	RCALL       _Delay_1us
;__Lib_SoftI2C.c,182 :: 		
0x0C3E	0xDDD1      	RCALL       _Delay_1us
0x0C40	0xDDD0      	RCALL       _Delay_1us
;__Lib_SoftI2C.c,183 :: 		
0x0C42	0xDDCF      	RCALL       _Delay_1us
0x0C44	0xDDCE      	RCALL       _Delay_1us
;__Lib_SoftI2C.c,184 :: 		
0x0C46	0xDDCD      	RCALL       _Delay_1us
0x0C48	0xDDCC      	RCALL       _Delay_1us
;__Lib_SoftI2C.c,186 :: 		
0x0C4A	0x8C95      	BSF         Soft_I2C_Sda_Direction, BitPos(Soft_I2C_Sda_Direction+0) 
;__Lib_SoftI2C.c,188 :: 		
0x0C4C	0xDDCA      	RCALL       _Delay_1us
0x0C4E	0xDDC9      	RCALL       _Delay_1us
;__Lib_SoftI2C.c,189 :: 		
L_end_Soft_I2C_Stop:
0x0C50	0x0012      	RETURN      0
; end of _Soft_I2C_Stop
_decToBcd:
;miscelaneos.h,23 :: 		char decToBcd(char dato){
;miscelaneos.h,24 :: 		dato = swap(dato/10) + (dato%10);
0x0C52	0x0E0A      	MOVLW       10
0x0C54	0x6E04      	MOVWF       R4 
0x0C56	0xF000C531  	MOVFF       FARG_decToBcd_dato, R0
0x0C5A	0xDEDA      	RCALL       _Div_8X8_U
0x0C5C	0xF549C000  	MOVFF       R0, FARG_Swap_input
0x0C60	0xDC1F      	RCALL       _Swap
0x0C62	0xF532C000  	MOVFF       R0, FLOC__decToBcd
0x0C66	0x0E0A      	MOVLW       10
0x0C68	0x6E04      	MOVWF       R4 
0x0C6A	0xF000C531  	MOVFF       FARG_decToBcd_dato, R0
0x0C6E	0xDED0      	RCALL       _Div_8X8_U
0x0C70	0xF000C008  	MOVFF       R8, R0
0x0C74	0x0105      	MOVLB       5
0x0C76	0x5132      	MOVF        FLOC__decToBcd, 0, 1
0x0C78	0x2600      	ADDWF       R0, 1 
0x0C7A	0xF531C000  	MOVFF       R0, FARG_decToBcd_dato
;miscelaneos.h,26 :: 		return dato;
;miscelaneos.h,27 :: 		}
L_end_decToBcd:
0x0C7E	0x0012      	RETURN      0
; end of _decToBcd
_isxdigit:
;__Lib_CType.c,58 :: 		
;__Lib_CType.c,61 :: 		
0x0C80	0x0105      	MOVLB       5
0x0C82	0x5131      	MOVF        FARG_isxdigit_character, 0, 1
0x0C84	0x0866      	SUBLW       102
0x0C86	0xE306      	BNC         L_isxdigit27
0x0C88	0x0E61      	MOVLW       97
0x0C8A	0x5D31      	SUBWF       FARG_isxdigit_character, 0, 1
0x0C8C	0xE303      	BNC         L_isxdigit27
0x0C8E	0x0E01      	MOVLW       1
0x0C90	0x6E00      	MOVWF       R0 
0x0C92	0xD001      	BRA         L_isxdigit26
L_isxdigit27:
0x0C94	0x6A00      	CLRF        R0 
L_isxdigit26:
0x0C96	0xF532C000  	MOVFF       R0, isxdigit_rslt_L0
;__Lib_CType.c,62 :: 		
0x0C9A	0x5131      	MOVF        FARG_isxdigit_character, 0, 1
0x0C9C	0x0846      	SUBLW       70
0x0C9E	0xE306      	BNC         L_isxdigit29
0x0CA0	0x0E41      	MOVLW       65
0x0CA2	0x5D31      	SUBWF       FARG_isxdigit_character, 0, 1
0x0CA4	0xE303      	BNC         L_isxdigit29
0x0CA6	0x0E01      	MOVLW       1
0x0CA8	0x6E00      	MOVWF       R0 
0x0CAA	0xD001      	BRA         L_isxdigit28
L_isxdigit29:
0x0CAC	0x6A00      	CLRF        R0 
L_isxdigit28:
0x0CAE	0x5000      	MOVF        R0, 0 
0x0CB0	0x1332      	IORWF       isxdigit_rslt_L0, 1, 1
;__Lib_CType.c,63 :: 		
0x0CB2	0xF53BC531  	MOVFF       FARG_isxdigit_character, FARG_isdigit_character
0x0CB6	0xDF6D      	RCALL       _isdigit
0x0CB8	0x5132      	MOVF        isxdigit_rslt_L0, 0, 1
0x0CBA	0x1200      	IORWF       R0, 1 
0x0CBC	0xF532C000  	MOVFF       R0, isxdigit_rslt_L0
;__Lib_CType.c,65 :: 		
;__Lib_CType.c,66 :: 		
L_end_isxdigit:
0x0CC0	0x0012      	RETURN      0
; end of _isxdigit
_isspace:
;__Lib_CType.c,35 :: 		
;__Lib_CType.c,36 :: 		
0x0CC2	0x0105      	MOVLB       5
0x0CC4	0x5131      	MOVF        FARG_isspace_character, 0, 1
0x0CC6	0x0A20      	XORLW       32
0x0CC8	0xE009      	BZ          L_isspace15
0x0CCA	0x5131      	MOVF        FARG_isspace_character, 0, 1
0x0CCC	0x080D      	SUBLW       13
0x0CCE	0xE304      	BNC         L__isspace36
0x0CD0	0x0E09      	MOVLW       9
0x0CD2	0x5D31      	SUBWF       FARG_isspace_character, 0, 1
0x0CD4	0xE301      	BNC         L__isspace36
0x0CD6	0xD002      	BRA         L_isspace15
L__isspace36:
0x0CD8	0x6A00      	CLRF        R0 
0x0CDA	0xD002      	BRA         L_isspace14
L_isspace15:
0x0CDC	0x0E01      	MOVLW       1
0x0CDE	0x6E00      	MOVWF       R0 
L_isspace14:
;__Lib_CType.c,37 :: 		
L_end_isspace:
0x0CE0	0x0012      	RETURN      0
; end of _isspace
_tolower:
;__Lib_CType.c,69 :: 		
;__Lib_CType.c,70 :: 		
0x0CE2	0x0105      	MOVLB       5
0x0CE4	0x5131      	MOVF        FARG_tolower_character, 0, 1
0x0CE6	0x085A      	SUBLW       90
0x0CE8	0xE304      	BNC         L_tolower32
0x0CEA	0x0E41      	MOVLW       65
0x0CEC	0x5D31      	SUBWF       FARG_tolower_character, 0, 1
0x0CEE	0xB0D8      	BTFSC       STATUS, 0 
L__tolower37:
;__Lib_CType.c,71 :: 		
0x0CF0	0x8B31      	BSF         FARG_tolower_character, 5, 1
L_tolower32:
;__Lib_CType.c,72 :: 		
0x0CF2	0xF000C531  	MOVFF       FARG_tolower_character, R0
;__Lib_CType.c,73 :: 		
L_end_tolower:
0x0CF6	0x0012      	RETURN      0
; end of _tolower
_DS1307_date:
;ds1307.h,148 :: 		char* DS1307_date(DS1307 *myDS, bool formatComplet){
;ds1307.h,149 :: 		char cont = 0;
0x0CF8	0x0105      	MOVLB       5
0x0CFA	0x6B34      	CLRF        DS1307_date_cont_L0, 1
;ds1307.h,153 :: 		numToString(myDs->dayOfWeek, &myDs->time[cont++], 1);
0x0CFC	0x0E03      	MOVLW       3
0x0CFE	0x2531      	ADDWF       FARG_DS1307_date_myDS, 0, 1
0x0D00	0x6EE9      	MOVWF       FSR0L 
0x0D02	0x0E00      	MOVLW       0
0x0D04	0x2132      	ADDWFC      FARG_DS1307_date_myDS+1, 0, 1
0x0D06	0x6EEA      	MOVWF       FSR0H 
0x0D08	0xF53BCFEE  	MOVFF       POSTINC0, FARG_numToString_valor
0x0D0C	0x0E00      	MOVLW       0
0x0D0E	0x6F3C      	MOVWF       FARG_numToString_valor+1, 1
0x0D10	0x6F3D      	MOVWF       FARG_numToString_valor+2, 1
0x0D12	0x6F3E      	MOVWF       FARG_numToString_valor+3, 1
0x0D14	0x0E00      	MOVLW       0
0x0D16	0x6F3C      	MOVWF       FARG_numToString_valor+1, 1
0x0D18	0x6F3D      	MOVWF       FARG_numToString_valor+2, 1
0x0D1A	0x6F3E      	MOVWF       FARG_numToString_valor+3, 1
0x0D1C	0x0E07      	MOVLW       7
0x0D1E	0x2531      	ADDWF       FARG_DS1307_date_myDS, 0, 1
0x0D20	0x6F3F      	MOVWF       FARG_numToString_cadena, 1
0x0D22	0x0E00      	MOVLW       0
0x0D24	0x2132      	ADDWFC      FARG_DS1307_date_myDS+1, 0, 1
0x0D26	0x6F40      	MOVWF       FARG_numToString_cadena+1, 1
0x0D28	0x5134      	MOVF        DS1307_date_cont_L0, 0, 1
0x0D2A	0x273F      	ADDWF       FARG_numToString_cadena, 1, 1
0x0D2C	0x0E00      	MOVLW       0
0x0D2E	0x2340      	ADDWFC      FARG_numToString_cadena+1, 1, 1
0x0D30	0x0E01      	MOVLW       1
0x0D32	0x6F41      	MOVWF       FARG_numToString_digitos, 1
0x0D34	0xDE7C      	RCALL       _numToString
0x0D36	0x0105      	MOVLB       5
0x0D38	0x2B34      	INCF        DS1307_date_cont_L0, 1, 1
;ds1307.h,154 :: 		if(formatComplet)
0x0D3A	0x5333      	MOVF        FARG_DS1307_date_formatComplet, 1, 1
0x0D3C	0xE00F      	BZ          L_DS1307_date345
;ds1307.h,155 :: 		myDS->time[cont++] = '-';
0x0D3E	0x0E07      	MOVLW       7
0x0D40	0x2531      	ADDWF       FARG_DS1307_date_myDS, 0, 1
0x0D42	0x6E00      	MOVWF       R0 
0x0D44	0x0E00      	MOVLW       0
0x0D46	0x2132      	ADDWFC      FARG_DS1307_date_myDS+1, 0, 1
0x0D48	0x6E01      	MOVWF       R1 
0x0D4A	0x5134      	MOVF        DS1307_date_cont_L0, 0, 1
0x0D4C	0x2400      	ADDWF       R0, 0 
0x0D4E	0x6EE1      	MOVWF       FSR1L 
0x0D50	0x0E00      	MOVLW       0
0x0D52	0x2001      	ADDWFC      R1, 0 
0x0D54	0x6EE2      	MOVWF       FSR1H 
0x0D56	0x0E2D      	MOVLW       45
0x0D58	0x6EE6      	MOVWF       POSTINC1 
0x0D5A	0x2B34      	INCF        DS1307_date_cont_L0, 1, 1
L_DS1307_date345:
;ds1307.h,157 :: 		numToString(myDs->hours, &myDs->time[cont], 2);
0x0D5C	0x0E02      	MOVLW       2
0x0D5E	0x2531      	ADDWF       FARG_DS1307_date_myDS, 0, 1
0x0D60	0x6EE9      	MOVWF       FSR0L 
0x0D62	0x0E00      	MOVLW       0
0x0D64	0x2132      	ADDWFC      FARG_DS1307_date_myDS+1, 0, 1
0x0D66	0x6EEA      	MOVWF       FSR0H 
0x0D68	0xF53BCFEE  	MOVFF       POSTINC0, FARG_numToString_valor
0x0D6C	0x0E00      	MOVLW       0
0x0D6E	0x6F3C      	MOVWF       FARG_numToString_valor+1, 1
0x0D70	0x6F3D      	MOVWF       FARG_numToString_valor+2, 1
0x0D72	0x6F3E      	MOVWF       FARG_numToString_valor+3, 1
0x0D74	0x0E00      	MOVLW       0
0x0D76	0x6F3C      	MOVWF       FARG_numToString_valor+1, 1
0x0D78	0x6F3D      	MOVWF       FARG_numToString_valor+2, 1
0x0D7A	0x6F3E      	MOVWF       FARG_numToString_valor+3, 1
0x0D7C	0x0E07      	MOVLW       7
0x0D7E	0x2531      	ADDWF       FARG_DS1307_date_myDS, 0, 1
0x0D80	0x6F3F      	MOVWF       FARG_numToString_cadena, 1
0x0D82	0x0E00      	MOVLW       0
0x0D84	0x2132      	ADDWFC      FARG_DS1307_date_myDS+1, 0, 1
0x0D86	0x6F40      	MOVWF       FARG_numToString_cadena+1, 1
0x0D88	0x5134      	MOVF        DS1307_date_cont_L0, 0, 1
0x0D8A	0x273F      	ADDWF       FARG_numToString_cadena, 1, 1
0x0D8C	0x0E00      	MOVLW       0
0x0D8E	0x2340      	ADDWFC      FARG_numToString_cadena+1, 1, 1
0x0D90	0x0E02      	MOVLW       2
0x0D92	0x6F41      	MOVWF       FARG_numToString_digitos, 1
0x0D94	0xDE4C      	RCALL       _numToString
;ds1307.h,158 :: 		cont += 2;
0x0D96	0x0E02      	MOVLW       2
0x0D98	0x0105      	MOVLB       5
0x0D9A	0x2734      	ADDWF       DS1307_date_cont_L0, 1, 1
;ds1307.h,159 :: 		if(formatComplet)
0x0D9C	0x5333      	MOVF        FARG_DS1307_date_formatComplet, 1, 1
0x0D9E	0xE00F      	BZ          L_DS1307_date346
;ds1307.h,160 :: 		myDS->time[cont++] = ':';
0x0DA0	0x0E07      	MOVLW       7
0x0DA2	0x2531      	ADDWF       FARG_DS1307_date_myDS, 0, 1
0x0DA4	0x6E00      	MOVWF       R0 
0x0DA6	0x0E00      	MOVLW       0
0x0DA8	0x2132      	ADDWFC      FARG_DS1307_date_myDS+1, 0, 1
0x0DAA	0x6E01      	MOVWF       R1 
0x0DAC	0x5134      	MOVF        DS1307_date_cont_L0, 0, 1
0x0DAE	0x2400      	ADDWF       R0, 0 
0x0DB0	0x6EE1      	MOVWF       FSR1L 
0x0DB2	0x0E00      	MOVLW       0
0x0DB4	0x2001      	ADDWFC      R1, 0 
0x0DB6	0x6EE2      	MOVWF       FSR1H 
0x0DB8	0x0E3A      	MOVLW       58
0x0DBA	0x6EE6      	MOVWF       POSTINC1 
0x0DBC	0x2B34      	INCF        DS1307_date_cont_L0, 1, 1
L_DS1307_date346:
;ds1307.h,162 :: 		numToString(myDs->minutes, &myDs->time[cont], 2);
0x0DBE	0x0E01      	MOVLW       1
0x0DC0	0x2531      	ADDWF       FARG_DS1307_date_myDS, 0, 1
0x0DC2	0x6EE9      	MOVWF       FSR0L 
0x0DC4	0x0E00      	MOVLW       0
0x0DC6	0x2132      	ADDWFC      FARG_DS1307_date_myDS+1, 0, 1
0x0DC8	0x6EEA      	MOVWF       FSR0H 
0x0DCA	0xF53BCFEE  	MOVFF       POSTINC0, FARG_numToString_valor
0x0DCE	0x0E00      	MOVLW       0
0x0DD0	0x6F3C      	MOVWF       FARG_numToString_valor+1, 1
0x0DD2	0x6F3D      	MOVWF       FARG_numToString_valor+2, 1
0x0DD4	0x6F3E      	MOVWF       FARG_numToString_valor+3, 1
0x0DD6	0x0E00      	MOVLW       0
0x0DD8	0x6F3C      	MOVWF       FARG_numToString_valor+1, 1
0x0DDA	0x6F3D      	MOVWF       FARG_numToString_valor+2, 1
0x0DDC	0x6F3E      	MOVWF       FARG_numToString_valor+3, 1
0x0DDE	0x0E07      	MOVLW       7
0x0DE0	0x2531      	ADDWF       FARG_DS1307_date_myDS, 0, 1
0x0DE2	0x6F3F      	MOVWF       FARG_numToString_cadena, 1
0x0DE4	0x0E00      	MOVLW       0
0x0DE6	0x2132      	ADDWFC      FARG_DS1307_date_myDS+1, 0, 1
0x0DE8	0x6F40      	MOVWF       FARG_numToString_cadena+1, 1
0x0DEA	0x5134      	MOVF        DS1307_date_cont_L0, 0, 1
0x0DEC	0x273F      	ADDWF       FARG_numToString_cadena, 1, 1
0x0DEE	0x0E00      	MOVLW       0
0x0DF0	0x2340      	ADDWFC      FARG_numToString_cadena+1, 1, 1
0x0DF2	0x0E02      	MOVLW       2
0x0DF4	0x6F41      	MOVWF       FARG_numToString_digitos, 1
0x0DF6	0xDE1B      	RCALL       _numToString
;ds1307.h,163 :: 		cont += 2;
0x0DF8	0x0E02      	MOVLW       2
0x0DFA	0x0105      	MOVLB       5
0x0DFC	0x2734      	ADDWF       DS1307_date_cont_L0, 1, 1
;ds1307.h,164 :: 		if(formatComplet)
0x0DFE	0x5333      	MOVF        FARG_DS1307_date_formatComplet, 1, 1
0x0E00	0xE00F      	BZ          L_DS1307_date347
;ds1307.h,165 :: 		myDS->time[cont++] = ':';
0x0E02	0x0E07      	MOVLW       7
0x0E04	0x2531      	ADDWF       FARG_DS1307_date_myDS, 0, 1
0x0E06	0x6E00      	MOVWF       R0 
0x0E08	0x0E00      	MOVLW       0
0x0E0A	0x2132      	ADDWFC      FARG_DS1307_date_myDS+1, 0, 1
0x0E0C	0x6E01      	MOVWF       R1 
0x0E0E	0x5134      	MOVF        DS1307_date_cont_L0, 0, 1
0x0E10	0x2400      	ADDWF       R0, 0 
0x0E12	0x6EE1      	MOVWF       FSR1L 
0x0E14	0x0E00      	MOVLW       0
0x0E16	0x2001      	ADDWFC      R1, 0 
0x0E18	0x6EE2      	MOVWF       FSR1H 
0x0E1A	0x0E3A      	MOVLW       58
0x0E1C	0x6EE6      	MOVWF       POSTINC1 
0x0E1E	0x2B34      	INCF        DS1307_date_cont_L0, 1, 1
L_DS1307_date347:
;ds1307.h,167 :: 		numToString(myDs->seconds, &myDs->time[cont], 2);
0x0E20	0xFFE9C531  	MOVFF       FARG_DS1307_date_myDS, FSR0L
0x0E24	0xFFEAC532  	MOVFF       FARG_DS1307_date_myDS+1, FSR0H
0x0E28	0xF53BCFEE  	MOVFF       POSTINC0, FARG_numToString_valor
0x0E2C	0x0E00      	MOVLW       0
0x0E2E	0x6F3C      	MOVWF       FARG_numToString_valor+1, 1
0x0E30	0x6F3D      	MOVWF       FARG_numToString_valor+2, 1
0x0E32	0x6F3E      	MOVWF       FARG_numToString_valor+3, 1
0x0E34	0x0E00      	MOVLW       0
0x0E36	0x6F3C      	MOVWF       FARG_numToString_valor+1, 1
0x0E38	0x6F3D      	MOVWF       FARG_numToString_valor+2, 1
0x0E3A	0x6F3E      	MOVWF       FARG_numToString_valor+3, 1
0x0E3C	0x0E07      	MOVLW       7
0x0E3E	0x2531      	ADDWF       FARG_DS1307_date_myDS, 0, 1
0x0E40	0x6F3F      	MOVWF       FARG_numToString_cadena, 1
0x0E42	0x0E00      	MOVLW       0
0x0E44	0x2132      	ADDWFC      FARG_DS1307_date_myDS+1, 0, 1
0x0E46	0x6F40      	MOVWF       FARG_numToString_cadena+1, 1
0x0E48	0x5134      	MOVF        DS1307_date_cont_L0, 0, 1
0x0E4A	0x273F      	ADDWF       FARG_numToString_cadena, 1, 1
0x0E4C	0x0E00      	MOVLW       0
0x0E4E	0x2340      	ADDWFC      FARG_numToString_cadena+1, 1, 1
0x0E50	0x0E02      	MOVLW       2
0x0E52	0x6F41      	MOVWF       FARG_numToString_digitos, 1
0x0E54	0xDDEC      	RCALL       _numToString
;ds1307.h,168 :: 		cont += 2;
0x0E56	0x0E02      	MOVLW       2
0x0E58	0x0105      	MOVLB       5
0x0E5A	0x2734      	ADDWF       DS1307_date_cont_L0, 1, 1
;ds1307.h,169 :: 		if(formatComplet)
0x0E5C	0x5333      	MOVF        FARG_DS1307_date_formatComplet, 1, 1
0x0E5E	0xE00F      	BZ          L_DS1307_date348
;ds1307.h,170 :: 		myDS->time[cont++] = ' ';
0x0E60	0x0E07      	MOVLW       7
0x0E62	0x2531      	ADDWF       FARG_DS1307_date_myDS, 0, 1
0x0E64	0x6E00      	MOVWF       R0 
0x0E66	0x0E00      	MOVLW       0
0x0E68	0x2132      	ADDWFC      FARG_DS1307_date_myDS+1, 0, 1
0x0E6A	0x6E01      	MOVWF       R1 
0x0E6C	0x5134      	MOVF        DS1307_date_cont_L0, 0, 1
0x0E6E	0x2400      	ADDWF       R0, 0 
0x0E70	0x6EE1      	MOVWF       FSR1L 
0x0E72	0x0E00      	MOVLW       0
0x0E74	0x2001      	ADDWFC      R1, 0 
0x0E76	0x6EE2      	MOVWF       FSR1H 
0x0E78	0x0E20      	MOVLW       32
0x0E7A	0x6EE6      	MOVWF       POSTINC1 
0x0E7C	0x2B34      	INCF        DS1307_date_cont_L0, 1, 1
L_DS1307_date348:
;ds1307.h,172 :: 		numToString(myDs->day, &myDs->time[cont], 2);
0x0E7E	0x0E04      	MOVLW       4
0x0E80	0x2531      	ADDWF       FARG_DS1307_date_myDS, 0, 1
0x0E82	0x6EE9      	MOVWF       FSR0L 
0x0E84	0x0E00      	MOVLW       0
0x0E86	0x2132      	ADDWFC      FARG_DS1307_date_myDS+1, 0, 1
0x0E88	0x6EEA      	MOVWF       FSR0H 
0x0E8A	0xF53BCFEE  	MOVFF       POSTINC0, FARG_numToString_valor
0x0E8E	0x0E00      	MOVLW       0
0x0E90	0x6F3C      	MOVWF       FARG_numToString_valor+1, 1
0x0E92	0x6F3D      	MOVWF       FARG_numToString_valor+2, 1
0x0E94	0x6F3E      	MOVWF       FARG_numToString_valor+3, 1
0x0E96	0x0E00      	MOVLW       0
0x0E98	0x6F3C      	MOVWF       FARG_numToString_valor+1, 1
0x0E9A	0x6F3D      	MOVWF       FARG_numToString_valor+2, 1
0x0E9C	0x6F3E      	MOVWF       FARG_numToString_valor+3, 1
0x0E9E	0x0E07      	MOVLW       7
0x0EA0	0x2531      	ADDWF       FARG_DS1307_date_myDS, 0, 1
0x0EA2	0x6F3F      	MOVWF       FARG_numToString_cadena, 1
0x0EA4	0x0E00      	MOVLW       0
0x0EA6	0x2132      	ADDWFC      FARG_DS1307_date_myDS+1, 0, 1
0x0EA8	0x6F40      	MOVWF       FARG_numToString_cadena+1, 1
0x0EAA	0x5134      	MOVF        DS1307_date_cont_L0, 0, 1
0x0EAC	0x273F      	ADDWF       FARG_numToString_cadena, 1, 1
0x0EAE	0x0E00      	MOVLW       0
0x0EB0	0x2340      	ADDWFC      FARG_numToString_cadena+1, 1, 1
0x0EB2	0x0E02      	MOVLW       2
0x0EB4	0x6F41      	MOVWF       FARG_numToString_digitos, 1
0x0EB6	0xDDBB      	RCALL       _numToString
;ds1307.h,173 :: 		cont += 2;
0x0EB8	0x0E02      	MOVLW       2
0x0EBA	0x0105      	MOVLB       5
0x0EBC	0x2734      	ADDWF       DS1307_date_cont_L0, 1, 1
;ds1307.h,174 :: 		if(formatComplet)
0x0EBE	0x5333      	MOVF        FARG_DS1307_date_formatComplet, 1, 1
0x0EC0	0xE00F      	BZ          L_DS1307_date349
;ds1307.h,175 :: 		myDS->time[cont++] = '/';
0x0EC2	0x0E07      	MOVLW       7
0x0EC4	0x2531      	ADDWF       FARG_DS1307_date_myDS, 0, 1
0x0EC6	0x6E00      	MOVWF       R0 
0x0EC8	0x0E00      	MOVLW       0
0x0ECA	0x2132      	ADDWFC      FARG_DS1307_date_myDS+1, 0, 1
0x0ECC	0x6E01      	MOVWF       R1 
0x0ECE	0x5134      	MOVF        DS1307_date_cont_L0, 0, 1
0x0ED0	0x2400      	ADDWF       R0, 0 
0x0ED2	0x6EE1      	MOVWF       FSR1L 
0x0ED4	0x0E00      	MOVLW       0
0x0ED6	0x2001      	ADDWFC      R1, 0 
0x0ED8	0x6EE2      	MOVWF       FSR1H 
0x0EDA	0x0E2F      	MOVLW       47
0x0EDC	0x6EE6      	MOVWF       POSTINC1 
0x0EDE	0x2B34      	INCF        DS1307_date_cont_L0, 1, 1
L_DS1307_date349:
;ds1307.h,177 :: 		numToString(myDs->month, &myDs->time[cont], 2);
0x0EE0	0x0E05      	MOVLW       5
0x0EE2	0x2531      	ADDWF       FARG_DS1307_date_myDS, 0, 1
0x0EE4	0x6EE9      	MOVWF       FSR0L 
0x0EE6	0x0E00      	MOVLW       0
0x0EE8	0x2132      	ADDWFC      FARG_DS1307_date_myDS+1, 0, 1
0x0EEA	0x6EEA      	MOVWF       FSR0H 
0x0EEC	0xF53BCFEE  	MOVFF       POSTINC0, FARG_numToString_valor
0x0EF0	0x0E00      	MOVLW       0
0x0EF2	0x6F3C      	MOVWF       FARG_numToString_valor+1, 1
0x0EF4	0x6F3D      	MOVWF       FARG_numToString_valor+2, 1
0x0EF6	0x6F3E      	MOVWF       FARG_numToString_valor+3, 1
0x0EF8	0x0E00      	MOVLW       0
0x0EFA	0x6F3C      	MOVWF       FARG_numToString_valor+1, 1
0x0EFC	0x6F3D      	MOVWF       FARG_numToString_valor+2, 1
0x0EFE	0x6F3E      	MOVWF       FARG_numToString_valor+3, 1
0x0F00	0x0E07      	MOVLW       7
0x0F02	0x2531      	ADDWF       FARG_DS1307_date_myDS, 0, 1
0x0F04	0x6F3F      	MOVWF       FARG_numToString_cadena, 1
0x0F06	0x0E00      	MOVLW       0
0x0F08	0x2132      	ADDWFC      FARG_DS1307_date_myDS+1, 0, 1
0x0F0A	0x6F40      	MOVWF       FARG_numToString_cadena+1, 1
0x0F0C	0x5134      	MOVF        DS1307_date_cont_L0, 0, 1
0x0F0E	0x273F      	ADDWF       FARG_numToString_cadena, 1, 1
0x0F10	0x0E00      	MOVLW       0
0x0F12	0x2340      	ADDWFC      FARG_numToString_cadena+1, 1, 1
0x0F14	0x0E02      	MOVLW       2
0x0F16	0x6F41      	MOVWF       FARG_numToString_digitos, 1
0x0F18	0xDD8A      	RCALL       _numToString
;ds1307.h,178 :: 		cont += 2;
0x0F1A	0x0E02      	MOVLW       2
0x0F1C	0x0105      	MOVLB       5
0x0F1E	0x2734      	ADDWF       DS1307_date_cont_L0, 1, 1
;ds1307.h,179 :: 		if(formatComplet)
0x0F20	0x5333      	MOVF        FARG_DS1307_date_formatComplet, 1, 1
0x0F22	0xE00F      	BZ          L_DS1307_date350
;ds1307.h,180 :: 		myDS->time[cont++] = '/';
0x0F24	0x0E07      	MOVLW       7
0x0F26	0x2531      	ADDWF       FARG_DS1307_date_myDS, 0, 1
0x0F28	0x6E00      	MOVWF       R0 
0x0F2A	0x0E00      	MOVLW       0
0x0F2C	0x2132      	ADDWFC      FARG_DS1307_date_myDS+1, 0, 1
0x0F2E	0x6E01      	MOVWF       R1 
0x0F30	0x5134      	MOVF        DS1307_date_cont_L0, 0, 1
0x0F32	0x2400      	ADDWF       R0, 0 
0x0F34	0x6EE1      	MOVWF       FSR1L 
0x0F36	0x0E00      	MOVLW       0
0x0F38	0x2001      	ADDWFC      R1, 0 
0x0F3A	0x6EE2      	MOVWF       FSR1H 
0x0F3C	0x0E2F      	MOVLW       47
0x0F3E	0x6EE6      	MOVWF       POSTINC1 
0x0F40	0x2B34      	INCF        DS1307_date_cont_L0, 1, 1
L_DS1307_date350:
;ds1307.h,182 :: 		numToString(myDs->year, &myDs->time[cont], 2);
0x0F42	0x0E06      	MOVLW       6
0x0F44	0x2531      	ADDWF       FARG_DS1307_date_myDS, 0, 1
0x0F46	0x6EE9      	MOVWF       FSR0L 
0x0F48	0x0E00      	MOVLW       0
0x0F4A	0x2132      	ADDWFC      FARG_DS1307_date_myDS+1, 0, 1
0x0F4C	0x6EEA      	MOVWF       FSR0H 
0x0F4E	0xF53BCFEE  	MOVFF       POSTINC0, FARG_numToString_valor
0x0F52	0x0E00      	MOVLW       0
0x0F54	0x6F3C      	MOVWF       FARG_numToString_valor+1, 1
0x0F56	0x6F3D      	MOVWF       FARG_numToString_valor+2, 1
0x0F58	0x6F3E      	MOVWF       FARG_numToString_valor+3, 1
0x0F5A	0x0E00      	MOVLW       0
0x0F5C	0x6F3C      	MOVWF       FARG_numToString_valor+1, 1
0x0F5E	0x6F3D      	MOVWF       FARG_numToString_valor+2, 1
0x0F60	0x6F3E      	MOVWF       FARG_numToString_valor+3, 1
0x0F62	0x0E07      	MOVLW       7
0x0F64	0x2531      	ADDWF       FARG_DS1307_date_myDS, 0, 1
0x0F66	0x6F3F      	MOVWF       FARG_numToString_cadena, 1
0x0F68	0x0E00      	MOVLW       0
0x0F6A	0x2132      	ADDWFC      FARG_DS1307_date_myDS+1, 0, 1
0x0F6C	0x6F40      	MOVWF       FARG_numToString_cadena+1, 1
0x0F6E	0x5134      	MOVF        DS1307_date_cont_L0, 0, 1
0x0F70	0x273F      	ADDWF       FARG_numToString_cadena, 1, 1
0x0F72	0x0E00      	MOVLW       0
0x0F74	0x2340      	ADDWFC      FARG_numToString_cadena+1, 1, 1
0x0F76	0x0E02      	MOVLW       2
0x0F78	0x6F41      	MOVWF       FARG_numToString_digitos, 1
0x0F7A	0xDD59      	RCALL       _numToString
;ds1307.h,183 :: 		cont += 2;
0x0F7C	0x0E02      	MOVLW       2
0x0F7E	0x0105      	MOVLB       5
0x0F80	0x2534      	ADDWF       DS1307_date_cont_L0, 0, 1
0x0F82	0x6E02      	MOVWF       R2 
0x0F84	0xF534C002  	MOVFF       R2, DS1307_date_cont_L0
;ds1307.h,184 :: 		myDS->time[cont] = 0;  //Final de cadena
0x0F88	0x0E07      	MOVLW       7
0x0F8A	0x2531      	ADDWF       FARG_DS1307_date_myDS, 0, 1
0x0F8C	0x6E00      	MOVWF       R0 
0x0F8E	0x0E00      	MOVLW       0
0x0F90	0x2132      	ADDWFC      FARG_DS1307_date_myDS+1, 0, 1
0x0F92	0x6E01      	MOVWF       R1 
0x0F94	0x5002      	MOVF        R2, 0 
0x0F96	0x2400      	ADDWF       R0, 0 
0x0F98	0x6EE1      	MOVWF       FSR1L 
0x0F9A	0x0E00      	MOVLW       0
0x0F9C	0x2001      	ADDWFC      R1, 0 
0x0F9E	0x6EE2      	MOVWF       FSR1H 
0x0FA0	0x6AE6      	CLRF        POSTINC1 
;ds1307.h,186 :: 		return myDS->time;
0x0FA2	0x0E07      	MOVLW       7
0x0FA4	0x2531      	ADDWF       FARG_DS1307_date_myDS, 0, 1
0x0FA6	0x6E00      	MOVWF       R0 
0x0FA8	0x0E00      	MOVLW       0
0x0FAA	0x2132      	ADDWFC      FARG_DS1307_date_myDS+1, 0, 1
0x0FAC	0x6E01      	MOVWF       R1 
;ds1307.h,187 :: 		}
L_end_DS1307_date:
0x0FAE	0x0012      	RETURN      0
; end of _DS1307_date
_isupper:
;__Lib_CType.c,8 :: 		
;__Lib_CType.c,9 :: 		
0x0FB0	0x0105      	MOVLB       5
0x0FB2	0x5131      	MOVF        FARG_isupper_character, 0, 1
0x0FB4	0x085A      	SUBLW       90
0x0FB6	0xE306      	BNC         L_isupper3
0x0FB8	0x0E41      	MOVLW       65
0x0FBA	0x5D31      	SUBWF       FARG_isupper_character, 0, 1
0x0FBC	0xE303      	BNC         L_isupper3
0x0FBE	0x0E01      	MOVLW       1
0x0FC0	0x6E00      	MOVWF       R0 
0x0FC2	0xD001      	BRA         L_isupper2
L_isupper3:
0x0FC4	0x6A00      	CLRF        R0 
L_isupper2:
;__Lib_CType.c,10 :: 		
L_end_isupper:
0x0FC6	0x0012      	RETURN      0
; end of _isupper
_Soft_I2C_Write:
;__Lib_SoftI2C.c,193 :: 		
;__Lib_SoftI2C.c,194 :: 		
0x0FC8	0x0E01      	MOVLW       1
0x0FCA	0x0105      	MOVLB       5
0x0FCC	0x6F34      	MOVWF       Soft_I2C_Write_result_L0, 1
0x0FCE	0x0E00      	MOVLW       0
0x0FD0	0x6F35      	MOVWF       Soft_I2C_Write_result_L0+1, 1
;__Lib_SoftI2C.c,196 :: 		
0x0FD2	0x0E80      	MOVLW       128
0x0FD4	0x6F32      	MOVWF       Soft_I2C_Write_temp_L0, 1
0x0FD6	0x0E00      	MOVLW       0
0x0FD8	0x6F33      	MOVWF       Soft_I2C_Write_temp_L0+1, 1
;__Lib_SoftI2C.c,198 :: 		
L_Soft_I2C_Write16:
0x0FDA	0x5132      	MOVF        Soft_I2C_Write_temp_L0, 0, 1
0x0FDC	0x1133      	IORWF       Soft_I2C_Write_temp_L0+1, 0, 1
0x0FDE	0xE02C      	BZ          L_Soft_I2C_Write17
;__Lib_SoftI2C.c,199 :: 		
0x0FE0	0xDC00      	RCALL       _Delay_1us
0x0FE2	0xF003ECF1  	CALL        _Delay_1us, 0
;__Lib_SoftI2C.c,200 :: 		
0x0FE6	0xF003ECF1  	CALL        _Delay_1us, 0
0x0FEA	0xF003ECF1  	CALL        _Delay_1us, 0
;__Lib_SoftI2C.c,202 :: 		
0x0FEE	0xDD81      	RCALL       __Lib_SoftI2C_PutZerosToLATScl
;__Lib_SoftI2C.c,203 :: 		
0x0FF0	0x9296      	BCF         Soft_I2C_Scl_Direction, BitPos(Soft_I2C_Scl_Direction+0) 
;__Lib_SoftI2C.c,205 :: 		
0x0FF2	0xF003ECF1  	CALL        _Delay_1us, 0
0x0FF6	0xF003ECF1  	CALL        _Delay_1us, 0
;__Lib_SoftI2C.c,207 :: 		
0x0FFA	0x5132      	MOVF        Soft_I2C_Write_temp_L0, 0, 1
0x0FFC	0x1531      	ANDWF       FARG_Soft_I2C_Write_data_, 0, 1
0x0FFE	0x6E00      	MOVWF       R0 
0x1000	0x0E00      	MOVLW       0
0x1002	0x1533      	ANDWF       Soft_I2C_Write_temp_L0+1, 0, 1
0x1004	0x6E01      	MOVWF       R1 
0x1006	0x5000      	MOVF        R0, 0 
0x1008	0x1001      	IORWF       R1, 0 
0x100A	0xE002      	BZ          L_Soft_I2C_Write18
;__Lib_SoftI2C.c,208 :: 		
0x100C	0x8C95      	BSF         Soft_I2C_Sda_Direction, BitPos(Soft_I2C_Sda_Direction+0) 
;__Lib_SoftI2C.c,209 :: 		
0x100E	0xD002      	BRA         L_Soft_I2C_Write19
L_Soft_I2C_Write18:
;__Lib_SoftI2C.c,211 :: 		
0x1010	0xDD67      	RCALL       __Lib_SoftI2C_PutZerosToLATSda
;__Lib_SoftI2C.c,212 :: 		
0x1012	0x9C95      	BCF         Soft_I2C_Sda_Direction, BitPos(Soft_I2C_Sda_Direction+0) 
;__Lib_SoftI2C.c,213 :: 		
L_Soft_I2C_Write19:
;__Lib_SoftI2C.c,215 :: 		
0x1014	0xF003ECF1  	CALL        _Delay_1us, 0
0x1018	0xF003ECF1  	CALL        _Delay_1us, 0
;__Lib_SoftI2C.c,217 :: 		
0x101C	0x8296      	BSF         Soft_I2C_Scl_Direction, BitPos(Soft_I2C_Scl_Direction+0) 
;__Lib_SoftI2C.c,219 :: 		
0x101E	0x0102      	MOVLB       2
0x1020	0x91E4      	BCF         __Lib_SoftI2C___StopWaiting, BitPos(__Lib_SoftI2C___StopWaiting+0), 1
;__Lib_SoftI2C.c,220 :: 		
L_Soft_I2C_Write20:
0x1022	0xB284      	BTFSC       Soft_I2C_Scl, BitPos(Soft_I2C_Scl+0) 
0x1024	0xD004      	BRA         L_Soft_I2C_Write21
;__Lib_SoftI2C.c,221 :: 		
0x1026	0xA1E4      	BTFSS       __Lib_SoftI2C___StopWaiting, BitPos(__Lib_SoftI2C___StopWaiting+0), 1
0x1028	0xD001      	BRA         L_Soft_I2C_Write22
;__Lib_SoftI2C.c,222 :: 		
0x102A	0xD001      	BRA         L_Soft_I2C_Write21
L_Soft_I2C_Write22:
0x102C	0xD7FA      	BRA         L_Soft_I2C_Write20
L_Soft_I2C_Write21:
;__Lib_SoftI2C.c,224 :: 		
0x102E	0x0105      	MOVLB       5
0x1030	0x3333      	RRCF        Soft_I2C_Write_temp_L0+1, 1, 1
0x1032	0x3332      	RRCF        Soft_I2C_Write_temp_L0, 1, 1
0x1034	0x9F33      	BCF         Soft_I2C_Write_temp_L0+1, 7, 1
;__Lib_SoftI2C.c,225 :: 		
0x1036	0xD7D1      	BRA         L_Soft_I2C_Write16
L_Soft_I2C_Write17:
;__Lib_SoftI2C.c,227 :: 		
0x1038	0x6B34      	CLRF        Soft_I2C_Write_result_L0, 1
0x103A	0x6B35      	CLRF        Soft_I2C_Write_result_L0+1, 1
;__Lib_SoftI2C.c,229 :: 		
0x103C	0xF003ECF1  	CALL        _Delay_1us, 0
0x1040	0xF003ECF1  	CALL        _Delay_1us, 0
;__Lib_SoftI2C.c,231 :: 		
0x1044	0xDD56      	RCALL       __Lib_SoftI2C_PutZerosToLATScl
;__Lib_SoftI2C.c,232 :: 		
0x1046	0x9296      	BCF         Soft_I2C_Scl_Direction, BitPos(Soft_I2C_Scl_Direction+0) 
;__Lib_SoftI2C.c,234 :: 		
0x1048	0xF003ECF1  	CALL        _Delay_1us, 0
0x104C	0xF003ECF1  	CALL        _Delay_1us, 0
;__Lib_SoftI2C.c,236 :: 		
0x1050	0x8C95      	BSF         Soft_I2C_Sda_Direction, BitPos(Soft_I2C_Sda_Direction+0) 
;__Lib_SoftI2C.c,238 :: 		
0x1052	0xF003ECF1  	CALL        _Delay_1us, 0
0x1056	0xF003ECF1  	CALL        _Delay_1us, 0
;__Lib_SoftI2C.c,239 :: 		
0x105A	0xF003ECF1  	CALL        _Delay_1us, 0
0x105E	0xF003ECF1  	CALL        _Delay_1us, 0
;__Lib_SoftI2C.c,241 :: 		
0x1062	0x8296      	BSF         Soft_I2C_Scl_Direction, BitPos(Soft_I2C_Scl_Direction+0) 
;__Lib_SoftI2C.c,243 :: 		
0x1064	0x0102      	MOVLB       2
0x1066	0x91E4      	BCF         __Lib_SoftI2C___StopWaiting, BitPos(__Lib_SoftI2C___StopWaiting+0), 1
;__Lib_SoftI2C.c,244 :: 		
L_Soft_I2C_Write23:
0x1068	0xB284      	BTFSC       Soft_I2C_Scl, BitPos(Soft_I2C_Scl+0) 
0x106A	0xD004      	BRA         L_Soft_I2C_Write24
;__Lib_SoftI2C.c,245 :: 		
0x106C	0xA1E4      	BTFSS       __Lib_SoftI2C___StopWaiting, BitPos(__Lib_SoftI2C___StopWaiting+0), 1
0x106E	0xD001      	BRA         L_Soft_I2C_Write25
;__Lib_SoftI2C.c,246 :: 		
0x1070	0xD001      	BRA         L_Soft_I2C_Write24
L_Soft_I2C_Write25:
0x1072	0xD7FA      	BRA         L_Soft_I2C_Write23
L_Soft_I2C_Write24:
;__Lib_SoftI2C.c,248 :: 		
0x1074	0x0105      	MOVLB       5
0x1076	0x6B34      	CLRF        Soft_I2C_Write_result_L0, 1
0x1078	0x6B35      	CLRF        Soft_I2C_Write_result_L0+1, 1
;__Lib_SoftI2C.c,250 :: 		
0x107A	0xF003ECF1  	CALL        _Delay_1us, 0
0x107E	0xF003ECF1  	CALL        _Delay_1us, 0
;__Lib_SoftI2C.c,252 :: 		
0x1082	0xBC83      	BTFSC       Soft_I2C_Sda, BitPos(Soft_I2C_Sda+0) 
;__Lib_SoftI2C.c,253 :: 		
0x1084	0x8134      	BSF         Soft_I2C_Write_result_L0, 0, 1
L_Soft_I2C_Write26:
;__Lib_SoftI2C.c,255 :: 		
0x1086	0xF003ECF1  	CALL        _Delay_1us, 0
0x108A	0xF003ECF1  	CALL        _Delay_1us, 0
;__Lib_SoftI2C.c,256 :: 		
0x108E	0xF003ECF1  	CALL        _Delay_1us, 0
0x1092	0xF003ECF1  	CALL        _Delay_1us, 0
;__Lib_SoftI2C.c,257 :: 		
0x1096	0xF003ECF1  	CALL        _Delay_1us, 0
0x109A	0xF003ECF1  	CALL        _Delay_1us, 0
;__Lib_SoftI2C.c,258 :: 		
0x109E	0xF003ECF1  	CALL        _Delay_1us, 0
0x10A2	0xF003ECF1  	CALL        _Delay_1us, 0
;__Lib_SoftI2C.c,259 :: 		
0x10A6	0xF003ECF1  	CALL        _Delay_1us, 0
0x10AA	0xF003ECF1  	CALL        _Delay_1us, 0
;__Lib_SoftI2C.c,260 :: 		
0x10AE	0xF003ECF1  	CALL        _Delay_1us, 0
0x10B2	0xF003ECF1  	CALL        _Delay_1us, 0
;__Lib_SoftI2C.c,261 :: 		
0x10B6	0xF003ECF1  	CALL        _Delay_1us, 0
0x10BA	0xF003ECF1  	CALL        _Delay_1us, 0
;__Lib_SoftI2C.c,262 :: 		
0x10BE	0xF003ECF1  	CALL        _Delay_1us, 0
0x10C2	0xF003ECF1  	CALL        _Delay_1us, 0
;__Lib_SoftI2C.c,264 :: 		
0x10C6	0xDD15      	RCALL       __Lib_SoftI2C_PutZerosToLATScl
;__Lib_SoftI2C.c,265 :: 		
0x10C8	0x9296      	BCF         Soft_I2C_Scl_Direction, BitPos(Soft_I2C_Scl_Direction+0) 
;__Lib_SoftI2C.c,266 :: 		
0x10CA	0xDD0A      	RCALL       __Lib_SoftI2C_PutZerosToLATSda
;__Lib_SoftI2C.c,267 :: 		
0x10CC	0x9C95      	BCF         Soft_I2C_Sda_Direction, BitPos(Soft_I2C_Sda_Direction+0) 
;__Lib_SoftI2C.c,269 :: 		
0x10CE	0xF000C534  	MOVFF       Soft_I2C_Write_result_L0, R0
;__Lib_SoftI2C.c,270 :: 		
L_end_Soft_I2C_Write:
0x10D2	0x0012      	RETURN      0
; end of _Soft_I2C_Write
_can_write_text:
;lib_can.h,157 :: 		bool can_write_text(long ipAddress, char *texto, char priority){
;lib_can.h,159 :: 		if(!can.txQueu && !can.rxBusy){
0x10D4	0x0103      	MOVLB       3
0x10D6	0x536A      	MOVF        _can+33, 1, 1
0x10D8	0xE13A      	BNZ         L_can_write_text151
0x10DA	0x53B3      	MOVF        _can+106, 1, 1
0x10DC	0xE138      	BNZ         L_can_write_text151
L__can_write_text953:
;lib_can.h,160 :: 		can.txSize = 0;
0x10DE	0x6B6C      	CLRF        _can+35, 1
;lib_can.h,161 :: 		can.txQueu = true;
0x10E0	0x0E01      	MOVLW       1
0x10E2	0x6F6A      	MOVWF       _can+33, 1
;lib_can.h,162 :: 		can.txId = ipAddress;      //Conecta a la red + el id
0x10E4	0xF36EC531  	MOVFF       FARG_can_write_text_ipAddress, _can+37
0x10E8	0xF36FC532  	MOVFF       FARG_can_write_text_ipAddress+1, _can+38
0x10EC	0xF370C533  	MOVFF       FARG_can_write_text_ipAddress+2, _can+39
0x10F0	0xF371C534  	MOVFF       FARG_can_write_text_ipAddress+3, _can+40
;lib_can.h,163 :: 		can.txPriority = priority;
0x10F4	0xF36DC537  	MOVFF       FARG_can_write_text_priority, _can+36
;lib_can.h,165 :: 		while(true){
L_can_write_text152:
0x10F8	0x0103      	MOVLB       3
;lib_can.h,166 :: 		can.txBuffer[can.txSize] = texto[can.txSize];
0x10FA	0x0E72      	MOVLW       _can+41
0x10FC	0x6EE1      	MOVWF       FSR1L 
0x10FE	0x0E03      	MOVLW       hi_addr(_can+41)
0x1100	0x6EE2      	MOVWF       FSR1H 
0x1102	0x516C      	MOVF        _can+35, 0, 1
0x1104	0x26E1      	ADDWF       FSR1L, 1 
0x1106	0xB0D8      	BTFSC       STATUS, 0 
0x1108	0x2AE2      	INCF        FSR1H, 1 
0x110A	0x516C      	MOVF        _can+35, 0, 1
0x110C	0x0105      	MOVLB       5
0x110E	0x2535      	ADDWF       FARG_can_write_text_texto, 0, 1
0x1110	0x6EE9      	MOVWF       FSR0L 
0x1112	0x0E00      	MOVLW       0
0x1114	0x2136      	ADDWFC      FARG_can_write_text_texto+1, 0, 1
0x1116	0x6EEA      	MOVWF       FSR0H 
0x1118	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
;lib_can.h,168 :: 		if(texto[can.txSize])
0x111C	0x0103      	MOVLB       3
0x111E	0x516C      	MOVF        _can+35, 0, 1
0x1120	0x0105      	MOVLB       5
0x1122	0x2535      	ADDWF       FARG_can_write_text_texto, 0, 1
0x1124	0x6EE9      	MOVWF       FSR0L 
0x1126	0x0E00      	MOVLW       0
0x1128	0x2136      	ADDWFC      FARG_can_write_text_texto+1, 0, 1
0x112A	0x6EEA      	MOVWF       FSR0H 
0x112C	0x52EE      	MOVF        POSTINC0, 1 
0x112E	0xE007      	BZ          L_can_write_text154
;lib_can.h,169 :: 		can.txSize++;
0x1130	0x0103      	MOVLB       3
0x1132	0x516C      	MOVF        _can+35, 0, 1
0x1134	0x0F01      	ADDLW       1
0x1136	0x6E00      	MOVWF       R0 
0x1138	0xF36CC000  	MOVFF       R0, _can+35
0x113C	0xD001      	BRA         L_can_write_text155
L_can_write_text154:
;lib_can.h,171 :: 		break;
0x113E	0xD001      	BRA         L_can_write_text153
L_can_write_text155:
;lib_can.h,172 :: 		}
0x1140	0xD7DB      	BRA         L_can_write_text152
L_can_write_text153:
0x1142	0x0103      	MOVLB       3
;lib_can.h,173 :: 		can.temp = 0;
0x1144	0x6BF6      	CLRF        _can+173, 1
0x1146	0x6BF7      	CLRF        _can+174, 1
;lib_can.h,174 :: 		return true; //Datos encolados
0x1148	0x0E01      	MOVLW       1
0x114A	0x6E00      	MOVWF       R0 
0x114C	0xD001      	BRA         L_end_can_write_text
;lib_can.h,175 :: 		}
L_can_write_text151:
;lib_can.h,177 :: 		return false;
0x114E	0x6A00      	CLRF        R0 
;lib_can.h,178 :: 		}
L_end_can_write_text:
0x1150	0x0012      	RETURN      0
; end of _can_write_text
_mysql_write_forced:
;table_eeprom.h,334 :: 		char mysql_write_forced(char *name, char *column, int fila, char *texto, char bytes){
;table_eeprom.h,335 :: 		char res = _mysql_calculate_address(name, column);
0x1152	0xF53BC531  	MOVFF       FARG_mysql_write_forced_name, FARG__mysql_calculate_address_name
0x1156	0xF53CC532  	MOVFF       FARG_mysql_write_forced_name+1, FARG__mysql_calculate_address_name+1
0x115A	0xF53DC533  	MOVFF       FARG_mysql_write_forced_column, FARG__mysql_calculate_address_column
0x115E	0xF53EC534  	MOVFF       FARG_mysql_write_forced_column+1, FARG__mysql_calculate_address_column+1
0x1162	0xF004EC1D  	CALL        __mysql_calculate_address, 0
0x1166	0xF53AC000  	MOVFF       R0, mysql_write_forced_res_L0
;table_eeprom.h,338 :: 		if(res)
0x116A	0x5200      	MOVF        R0, 1 
0x116C	0xE003      	BZ          L_mysql_write_forced500
;table_eeprom.h,339 :: 		return res;
0x116E	0xF000C53A  	MOVFF       mysql_write_forced_res_L0, R0
0x1172	0xD03E      	BRA         L_end_mysql_write_forced
L_mysql_write_forced500:
;table_eeprom.h,342 :: 		if(bytes > myTable.tamCol)
0x1174	0x0105      	MOVLB       5
0x1176	0x5139      	MOVF        FARG_mysql_write_forced_bytes, 0, 1
0x1178	0x0103      	MOVLB       3
0x117A	0x5D1F      	SUBWF       Expendedora_myTable+6, 0, 1
0x117C	0xE203      	BC          L_mysql_write_forced501
;table_eeprom.h,343 :: 		return TABLE_RW_OUT_RANGE;
0x117E	0x0E04      	MOVLW       4
0x1180	0x6E00      	MOVWF       R0 
0x1182	0xD036      	BRA         L_end_mysql_write_forced
L_mysql_write_forced501:
;table_eeprom.h,346 :: 		if(fila >= 1 && fila <= myTable.row)
0x1184	0x0E80      	MOVLW       128
0x1186	0x0105      	MOVLB       5
0x1188	0x1936      	XORWF       FARG_mysql_write_forced_fila+1, 0, 1
0x118A	0x6E00      	MOVWF       R0 
0x118C	0x0E80      	MOVLW       128
0x118E	0x5C00      	SUBWF       R0, 0 
0x1190	0xE102      	BNZ         L__mysql_write_forced1292
0x1192	0x0E01      	MOVLW       1
0x1194	0x5D35      	SUBWF       FARG_mysql_write_forced_fila, 0, 1
L__mysql_write_forced1292:
0x1196	0xE328      	BNC         L_mysql_write_forced504
0x1198	0x5136      	MOVF        FARG_mysql_write_forced_fila+1, 0, 1
0x119A	0x0103      	MOVLB       3
0x119C	0x5D1C      	SUBWF       Expendedora_myTable+3, 0, 1
0x119E	0xE104      	BNZ         L__mysql_write_forced1293
0x11A0	0x0105      	MOVLB       5
0x11A2	0x5135      	MOVF        FARG_mysql_write_forced_fila, 0, 1
0x11A4	0x0103      	MOVLB       3
0x11A6	0x5D1B      	SUBWF       Expendedora_myTable+2, 0, 1
L__mysql_write_forced1293:
0x11A8	0xE31F      	BNC         L_mysql_write_forced504
L__mysql_write_forced989:
;table_eeprom.h,347 :: 		eeprom_i2c_write(myTable.addressAct+(fila-1)*myTable.tamCol, texto, bytes);
0x11AA	0x0E01      	MOVLW       1
0x11AC	0x0105      	MOVLB       5
0x11AE	0x5D35      	SUBWF       FARG_mysql_write_forced_fila, 0, 1
0x11B0	0x6E00      	MOVWF       R0 
0x11B2	0x0E00      	MOVLW       0
0x11B4	0x5936      	SUBWFB      FARG_mysql_write_forced_fila+1, 0, 1
0x11B6	0x6E01      	MOVWF       R1 
0x11B8	0xF004C31F  	MOVFF       Expendedora_myTable+6, R4
0x11BC	0x0E00      	MOVLW       0
0x11BE	0x6E05      	MOVWF       R5 
0x11C0	0xF002EC54  	CALL        _Mul_16X16_U, 0
0x11C4	0x5000      	MOVF        R0, 0 
0x11C6	0x0103      	MOVLB       3
0x11C8	0x2546      	ADDWF       Expendedora_myTable+45, 0, 1
0x11CA	0x0105      	MOVLB       5
0x11CC	0x6F3B      	MOVWF       FARG_eeprom_i2c_write_address, 1
0x11CE	0x5001      	MOVF        R1, 0 
0x11D0	0x0103      	MOVLB       3
0x11D2	0x2147      	ADDWFC      Expendedora_myTable+46, 0, 1
0x11D4	0x0105      	MOVLB       5
0x11D6	0x6F3C      	MOVWF       FARG_eeprom_i2c_write_address+1, 1
0x11D8	0xF53DC537  	MOVFF       FARG_mysql_write_forced_texto, FARG_eeprom_i2c_write_datos
0x11DC	0xF53EC538  	MOVFF       FARG_mysql_write_forced_texto+1, FARG_eeprom_i2c_write_datos+1
0x11E0	0xF53FC539  	MOVFF       FARG_mysql_write_forced_bytes, FARG_eeprom_i2c_write_size
0x11E4	0xDC8F      	RCALL       _eeprom_i2c_write
0x11E6	0xD003      	BRA         L_mysql_write_forced505
L_mysql_write_forced504:
;table_eeprom.h,349 :: 		return TABLE_RW_NO_EXIST_ROW;   //Fila inexistente
0x11E8	0x0E03      	MOVLW       3
0x11EA	0x6E00      	MOVWF       R0 
0x11EC	0xD001      	BRA         L_end_mysql_write_forced
L_mysql_write_forced505:
;table_eeprom.h,351 :: 		return TABLE_RW_SUCCESS;     //Exito en grabacion
0x11EE	0x6A00      	CLRF        R0 
;table_eeprom.h,352 :: 		}
L_end_mysql_write_forced:
0x11F0	0x0012      	RETURN      0
; end of _mysql_write_forced
_string_len:
;string.h,96 :: 		char string_len(char *texto){
;string.h,97 :: 		char cont = 0;
0x11F2	0x0105      	MOVLB       5
0x11F4	0x6B33      	CLRF        string_len_cont_L0, 1
;string.h,98 :: 		while(texto[cont])
L_string_len30:
0x11F6	0x5133      	MOVF        string_len_cont_L0, 0, 1
0x11F8	0x2531      	ADDWF       FARG_string_len_texto, 0, 1
0x11FA	0x6EE9      	MOVWF       FSR0L 
0x11FC	0x0E00      	MOVLW       0
0x11FE	0x2132      	ADDWFC      FARG_string_len_texto+1, 0, 1
0x1200	0x6EEA      	MOVWF       FSR0H 
0x1202	0x52EE      	MOVF        POSTINC0, 1 
0x1204	0xE002      	BZ          L_string_len31
;string.h,99 :: 		cont++;
0x1206	0x2B33      	INCF        string_len_cont_L0, 1, 1
0x1208	0xD7F6      	BRA         L_string_len30
L_string_len31:
;string.h,101 :: 		return cont;
0x120A	0xF000C533  	MOVFF       string_len_cont_L0, R0
;string.h,102 :: 		}
L_end_string_len:
0x120E	0x0012      	RETURN      0
; end of _string_len
_string_isNumeric:
;string.h,156 :: 		bool string_isNumeric(char *cadena){
;string.h,157 :: 		char cont = 0;
0x1210	0x0105      	MOVLB       5
0x1212	0x6B33      	CLRF        string_isNumeric_cont_L0, 1
;string.h,159 :: 		while(cadena[cont] != 0){
L_string_isNumeric56:
0x1214	0x5133      	MOVF        string_isNumeric_cont_L0, 0, 1
0x1216	0x2531      	ADDWF       FARG_string_isNumeric_cadena, 0, 1
0x1218	0x6EE9      	MOVWF       FSR0L 
0x121A	0x0E00      	MOVLW       0
0x121C	0x2132      	ADDWFC      FARG_string_isNumeric_cadena+1, 0, 1
0x121E	0x6EEA      	MOVWF       FSR0H 
0x1220	0x50EE      	MOVF        POSTINC0, 0 
0x1222	0x0A00      	XORLW       0
0x1224	0xE017      	BZ          L_string_isNumeric57
;string.h,160 :: 		if(cadena[cont] < '0' || cadena[cont] > '9')
0x1226	0x5133      	MOVF        string_isNumeric_cont_L0, 0, 1
0x1228	0x2531      	ADDWF       FARG_string_isNumeric_cadena, 0, 1
0x122A	0x6EE9      	MOVWF       FSR0L 
0x122C	0x0E00      	MOVLW       0
0x122E	0x2132      	ADDWFC      FARG_string_isNumeric_cadena+1, 0, 1
0x1230	0x6EEA      	MOVWF       FSR0H 
0x1232	0x0E30      	MOVLW       48
0x1234	0x5CEE      	SUBWF       POSTINC0, 0 
0x1236	0xE30A      	BNC         L__string_isNumeric943
0x1238	0x5133      	MOVF        string_isNumeric_cont_L0, 0, 1
0x123A	0x2531      	ADDWF       FARG_string_isNumeric_cadena, 0, 1
0x123C	0x6EE9      	MOVWF       FSR0L 
0x123E	0x0E00      	MOVLW       0
0x1240	0x2132      	ADDWFC      FARG_string_isNumeric_cadena+1, 0, 1
0x1242	0x6EEA      	MOVWF       FSR0H 
0x1244	0x50EE      	MOVF        POSTINC0, 0 
0x1246	0x0839      	SUBLW       57
0x1248	0xE301      	BNC         L__string_isNumeric943
0x124A	0xD002      	BRA         L_string_isNumeric60
L__string_isNumeric943:
;string.h,161 :: 		return false;
0x124C	0x6A00      	CLRF        R0 
0x124E	0xD009      	BRA         L_end_string_isNumeric
L_string_isNumeric60:
;string.h,162 :: 		cont++;
0x1250	0x2B33      	INCF        string_isNumeric_cont_L0, 1, 1
;string.h,163 :: 		}
0x1252	0xD7E0      	BRA         L_string_isNumeric56
L_string_isNumeric57:
;string.h,165 :: 		if(cont != 0)
0x1254	0x5133      	MOVF        string_isNumeric_cont_L0, 0, 1
0x1256	0x0A00      	XORLW       0
0x1258	0xE003      	BZ          L_string_isNumeric61
;string.h,166 :: 		return true;
0x125A	0x0E01      	MOVLW       1
0x125C	0x6E00      	MOVWF       R0 
0x125E	0xD001      	BRA         L_end_string_isNumeric
L_string_isNumeric61:
;string.h,168 :: 		return false;
0x1260	0x6A00      	CLRF        R0 
;string.h,169 :: 		}
L_end_string_isNumeric:
0x1262	0x0012      	RETURN      0
; end of _string_isNumeric
_Soft_I2C_Start:
;__Lib_SoftI2C.c,146 :: 		
;__Lib_SoftI2C.c,147 :: 		
0x1264	0x8C95      	BSF         Soft_I2C_Sda_Direction, BitPos(Soft_I2C_Sda_Direction+0) 
;__Lib_SoftI2C.c,149 :: 		
0x1266	0xF003ECF1  	CALL        _Delay_1us, 0
0x126A	0xF003ECF1  	CALL        _Delay_1us, 0
;__Lib_SoftI2C.c,151 :: 		
0x126E	0x8296      	BSF         Soft_I2C_Scl_Direction, BitPos(Soft_I2C_Scl_Direction+0) 
;__Lib_SoftI2C.c,153 :: 		
0x1270	0xF003ECF1  	CALL        _Delay_1us, 0
0x1274	0xF003ECF1  	CALL        _Delay_1us, 0
;__Lib_SoftI2C.c,155 :: 		
0x1278	0xDC33      	RCALL       __Lib_SoftI2C_PutZerosToLATSda
;__Lib_SoftI2C.c,156 :: 		
0x127A	0x9C95      	BCF         Soft_I2C_Sda_Direction, BitPos(Soft_I2C_Sda_Direction+0) 
;__Lib_SoftI2C.c,158 :: 		
0x127C	0xF003ECF1  	CALL        _Delay_1us, 0
0x1280	0xF003ECF1  	CALL        _Delay_1us, 0
;__Lib_SoftI2C.c,160 :: 		
0x1284	0xDC36      	RCALL       __Lib_SoftI2C_PutZerosToLATScl
;__Lib_SoftI2C.c,161 :: 		
0x1286	0x9296      	BCF         Soft_I2C_Scl_Direction, BitPos(Soft_I2C_Scl_Direction+0) 
;__Lib_SoftI2C.c,164 :: 		
L_end_Soft_I2C_Start:
0x1288	0x0012      	RETURN      0
; end of _Soft_I2C_Start
_mysql_write_roundTrip:
;table_eeprom.h,354 :: 		char mysql_write_roundTrip(char *name, char *column, char *texto, char bytes){
;table_eeprom.h,355 :: 		char res = _mysql_calculate_address(name, column);
0x128A	0xF53BC531  	MOVFF       FARG_mysql_write_roundTrip_name, FARG__mysql_calculate_address_name
0x128E	0xF53CC532  	MOVFF       FARG_mysql_write_roundTrip_name+1, FARG__mysql_calculate_address_name+1
0x1292	0xF53DC533  	MOVFF       FARG_mysql_write_roundTrip_column, FARG__mysql_calculate_address_column
0x1296	0xF53EC534  	MOVFF       FARG_mysql_write_roundTrip_column+1, FARG__mysql_calculate_address_column+1
0x129A	0xF004EC1D  	CALL        __mysql_calculate_address, 0
0x129E	0xF538C000  	MOVFF       R0, mysql_write_roundTrip_res_L0
;table_eeprom.h,358 :: 		if(res)
0x12A2	0x5200      	MOVF        R0, 1 
0x12A4	0xE003      	BZ          L_mysql_write_roundTrip506
;table_eeprom.h,359 :: 		return res;
0x12A6	0xF000C538  	MOVFF       mysql_write_roundTrip_res_L0, R0
0x12AA	0xD061      	BRA         L_end_mysql_write_roundTrip
L_mysql_write_roundTrip506:
;table_eeprom.h,362 :: 		if(bytes > myTable.tamCol)
0x12AC	0x0105      	MOVLB       5
0x12AE	0x5137      	MOVF        FARG_mysql_write_roundTrip_bytes, 0, 1
0x12B0	0x0103      	MOVLB       3
0x12B2	0x5D1F      	SUBWF       Expendedora_myTable+6, 0, 1
0x12B4	0xE203      	BC          L_mysql_write_roundTrip507
;table_eeprom.h,363 :: 		return TABLE_RW_OUT_RANGE;
0x12B6	0x0E04      	MOVLW       4
0x12B8	0x6E00      	MOVWF       R0 
0x12BA	0xD059      	BRA         L_end_mysql_write_roundTrip
L_mysql_write_roundTrip507:
;table_eeprom.h,366 :: 		myTable.rowAct = clamp_shift(++myTable.rowAct, 1, myTable.row);
0x12BC	0x0E01      	MOVLW       1
0x12BE	0x251D      	ADDWF       Expendedora_myTable+4, 0, 1
0x12C0	0x6E00      	MOVWF       R0 
0x12C2	0x0E00      	MOVLW       0
0x12C4	0x211E      	ADDWFC      Expendedora_myTable+5, 0, 1
0x12C6	0x6E01      	MOVWF       R1 
0x12C8	0xF31DC000  	MOVFF       R0, Expendedora_myTable+4
0x12CC	0xF31EC001  	MOVFF       R1, Expendedora_myTable+5
0x12D0	0xF53BC31D  	MOVFF       Expendedora_myTable+4, FARG_clamp_shift_valor
0x12D4	0xF53CC31E  	MOVFF       Expendedora_myTable+5, FARG_clamp_shift_valor+1
0x12D8	0x0E00      	MOVLW       0
0x12DA	0x0105      	MOVLB       5
0x12DC	0x6F3D      	MOVWF       FARG_clamp_shift_valor+2, 1
0x12DE	0x6F3E      	MOVWF       FARG_clamp_shift_valor+3, 1
0x12E0	0x0E01      	MOVLW       1
0x12E2	0x6F3F      	MOVWF       FARG_clamp_shift_min, 1
0x12E4	0x0E00      	MOVLW       0
0x12E6	0x6F40      	MOVWF       FARG_clamp_shift_min+1, 1
0x12E8	0x6F41      	MOVWF       FARG_clamp_shift_min+2, 1
0x12EA	0x6F42      	MOVWF       FARG_clamp_shift_min+3, 1
0x12EC	0xF543C31B  	MOVFF       Expendedora_myTable+2, FARG_clamp_shift_max
0x12F0	0xF544C31C  	MOVFF       Expendedora_myTable+3, FARG_clamp_shift_max+1
0x12F4	0x0E00      	MOVLW       0
0x12F6	0x6F45      	MOVWF       FARG_clamp_shift_max+2, 1
0x12F8	0x6F46      	MOVWF       FARG_clamp_shift_max+3, 1
0x12FA	0xDC57      	RCALL       _clamp_shift
0x12FC	0xF31DC000  	MOVFF       R0, Expendedora_myTable+4
0x1300	0xF31EC001  	MOVFF       R1, Expendedora_myTable+5
;table_eeprom.h,367 :: 		eeprom_i2c_write(myTable.address+TABLE_MAX_SIZE_NAME+3, (char*)&myTable.rowAct, 2);
0x1304	0x0E0F      	MOVLW       15
0x1306	0x0103      	MOVLB       3
0x1308	0x2544      	ADDWF       Expendedora_myTable+43, 0, 1
0x130A	0x0105      	MOVLB       5
0x130C	0x6F3B      	MOVWF       FARG_eeprom_i2c_write_address, 1
0x130E	0x0E00      	MOVLW       0
0x1310	0x0103      	MOVLB       3
0x1312	0x2145      	ADDWFC      Expendedora_myTable+44, 0, 1
0x1314	0x0105      	MOVLB       5
0x1316	0x6F3C      	MOVWF       FARG_eeprom_i2c_write_address+1, 1
0x1318	0x0E03      	MOVLW       3
0x131A	0x273B      	ADDWF       FARG_eeprom_i2c_write_address, 1, 1
0x131C	0x0E00      	MOVLW       0
0x131E	0x233C      	ADDWFC      FARG_eeprom_i2c_write_address+1, 1, 1
0x1320	0x0E1D      	MOVLW       Expendedora_myTable+4
0x1322	0x6F3D      	MOVWF       FARG_eeprom_i2c_write_datos, 1
0x1324	0x0E03      	MOVLW       hi_addr(Expendedora_myTable+4)
0x1326	0x6F3E      	MOVWF       FARG_eeprom_i2c_write_datos+1, 1
0x1328	0x0E02      	MOVLW       2
0x132A	0x6F3F      	MOVWF       FARG_eeprom_i2c_write_size, 1
0x132C	0xF005EC82  	CALL        _eeprom_i2c_write, 0
;table_eeprom.h,368 :: 		eeprom_i2c_write(myTable.addressAct+(myTable.rowAct-1)*myTable.tamCol, texto, bytes);
0x1330	0x0E01      	MOVLW       1
0x1332	0x0103      	MOVLB       3
0x1334	0x5D1D      	SUBWF       Expendedora_myTable+4, 0, 1
0x1336	0x6E00      	MOVWF       R0 
0x1338	0x0E00      	MOVLW       0
0x133A	0x591E      	SUBWFB      Expendedora_myTable+5, 0, 1
0x133C	0x6E01      	MOVWF       R1 
0x133E	0xF004C31F  	MOVFF       Expendedora_myTable+6, R4
0x1342	0x0E00      	MOVLW       0
0x1344	0x6E05      	MOVWF       R5 
0x1346	0xF002EC54  	CALL        _Mul_16X16_U, 0
0x134A	0x5000      	MOVF        R0, 0 
0x134C	0x2546      	ADDWF       Expendedora_myTable+45, 0, 1
0x134E	0x0105      	MOVLB       5
0x1350	0x6F3B      	MOVWF       FARG_eeprom_i2c_write_address, 1
0x1352	0x5001      	MOVF        R1, 0 
0x1354	0x0103      	MOVLB       3
0x1356	0x2147      	ADDWFC      Expendedora_myTable+46, 0, 1
0x1358	0x0105      	MOVLB       5
0x135A	0x6F3C      	MOVWF       FARG_eeprom_i2c_write_address+1, 1
0x135C	0xF53DC535  	MOVFF       FARG_mysql_write_roundTrip_texto, FARG_eeprom_i2c_write_datos
0x1360	0xF53EC536  	MOVFF       FARG_mysql_write_roundTrip_texto+1, FARG_eeprom_i2c_write_datos+1
0x1364	0xF53FC537  	MOVFF       FARG_mysql_write_roundTrip_bytes, FARG_eeprom_i2c_write_size
0x1368	0xF005EC82  	CALL        _eeprom_i2c_write, 0
;table_eeprom.h,370 :: 		return TABLE_RW_SUCCESS;     //Exito en grabacion
0x136C	0x6A00      	CLRF        R0 
;table_eeprom.h,371 :: 		}
L_end_mysql_write_roundTrip:
0x136E	0x0012      	RETURN      0
; end of _mysql_write_roundTrip
_stringToNumN:
;string.h,171 :: 		long stringToNumN(char *cadena, char size){
;string.h,173 :: 		long numero = 0;
0x1370	0x0105      	MOVLB       5
0x1372	0x6B35      	CLRF        stringToNumN_numero_L0, 1
0x1374	0x6B36      	CLRF        stringToNumN_numero_L0+1, 1
0x1376	0x6B37      	CLRF        stringToNumN_numero_L0+2, 1
0x1378	0x6B38      	CLRF        stringToNumN_numero_L0+3, 1
;string.h,176 :: 		for(cont = 0; cont < size && cadena[cont] != 0; cont++){
0x137A	0x6B34      	CLRF        stringToNumN_cont_L0, 1
L_stringToNumN63:
0x137C	0x5133      	MOVF        FARG_stringToNumN_size, 0, 1
0x137E	0x5D34      	SUBWF       stringToNumN_cont_L0, 0, 1
0x1380	0xE23F      	BC          L_stringToNumN64
0x1382	0x5134      	MOVF        stringToNumN_cont_L0, 0, 1
0x1384	0x2531      	ADDWF       FARG_stringToNumN_cadena, 0, 1
0x1386	0x6EE9      	MOVWF       FSR0L 
0x1388	0x0E00      	MOVLW       0
0x138A	0x2132      	ADDWFC      FARG_stringToNumN_cadena+1, 0, 1
0x138C	0x6EEA      	MOVWF       FSR0H 
0x138E	0x50EE      	MOVF        POSTINC0, 0 
0x1390	0x0A00      	XORLW       0
0x1392	0xE036      	BZ          L_stringToNumN64
L__stringToNumN944:
;string.h,177 :: 		numero *= 10;
0x1394	0xF000C535  	MOVFF       stringToNumN_numero_L0, R0
0x1398	0xF001C536  	MOVFF       stringToNumN_numero_L0+1, R1
0x139C	0xF002C537  	MOVFF       stringToNumN_numero_L0+2, R2
0x13A0	0xF003C538  	MOVFF       stringToNumN_numero_L0+3, R3
0x13A4	0x0E0A      	MOVLW       10
0x13A6	0x6E04      	MOVWF       R4 
0x13A8	0x0E00      	MOVLW       0
0x13AA	0x6E05      	MOVWF       R5 
0x13AC	0x6E06      	MOVWF       R6 
0x13AE	0x6E07      	MOVWF       R7 
0x13B0	0xF003ECC8  	CALL        _Mul_32x32_U, 0
0x13B4	0xF535C000  	MOVFF       R0, stringToNumN_numero_L0
0x13B8	0xF536C001  	MOVFF       R1, stringToNumN_numero_L0+1
0x13BC	0xF537C002  	MOVFF       R2, stringToNumN_numero_L0+2
0x13C0	0xF538C003  	MOVFF       R3, stringToNumN_numero_L0+3
;string.h,178 :: 		numero += cadena[cont]-'0';
0x13C4	0x5134      	MOVF        stringToNumN_cont_L0, 0, 1
0x13C6	0x2531      	ADDWF       FARG_stringToNumN_cadena, 0, 1
0x13C8	0x6EE9      	MOVWF       FSR0L 
0x13CA	0x0E00      	MOVLW       0
0x13CC	0x2132      	ADDWFC      FARG_stringToNumN_cadena+1, 0, 1
0x13CE	0x6EEA      	MOVWF       FSR0H 
0x13D0	0x0E30      	MOVLW       48
0x13D2	0x5CEE      	SUBWF       POSTINC0, 0 
0x13D4	0x6E04      	MOVWF       R4 
0x13D6	0x6A05      	CLRF        R5 
0x13D8	0x0E00      	MOVLW       0
0x13DA	0x5A05      	SUBWFB      R5, 1 
0x13DC	0x5004      	MOVF        R4, 0 
0x13DE	0x2400      	ADDWF       R0, 0 
0x13E0	0x6F35      	MOVWF       stringToNumN_numero_L0, 1
0x13E2	0x5005      	MOVF        R5, 0 
0x13E4	0x2001      	ADDWFC      R1, 0 
0x13E6	0x6F36      	MOVWF       stringToNumN_numero_L0+1, 1
0x13E8	0x0E00      	MOVLW       0
0x13EA	0xBE05      	BTFSC       R5, 7 
0x13EC	0x0EFF      	MOVLW       255
0x13EE	0x2002      	ADDWFC      R2, 0 
0x13F0	0x6F37      	MOVWF       stringToNumN_numero_L0+2, 1
0x13F2	0x0E00      	MOVLW       0
0x13F4	0xBE05      	BTFSC       R5, 7 
0x13F6	0x0EFF      	MOVLW       255
0x13F8	0x2003      	ADDWFC      R3, 0 
0x13FA	0x6F38      	MOVWF       stringToNumN_numero_L0+3, 1
;string.h,176 :: 		for(cont = 0; cont < size && cadena[cont] != 0; cont++){
0x13FC	0x2B34      	INCF        stringToNumN_cont_L0, 1, 1
;string.h,179 :: 		}
0x13FE	0xD7BE      	BRA         L_stringToNumN63
L_stringToNumN64:
;string.h,181 :: 		return numero;
0x1400	0xF000C535  	MOVFF       stringToNumN_numero_L0, R0
0x1404	0xF001C536  	MOVFF       stringToNumN_numero_L0+1, R1
0x1408	0xF002C537  	MOVFF       stringToNumN_numero_L0+2, R2
0x140C	0xF003C538  	MOVFF       stringToNumN_numero_L0+3, R3
;string.h,182 :: 		}
L_end_stringToNumN:
0x1410	0x0012      	RETURN      0
; end of _stringToNumN
_mysql_read_forced:
;table_eeprom.h,259 :: 		char mysql_read_forced(char *name, char *column, int fila, char *result){
;table_eeprom.h,260 :: 		char res = _mysql_calculate_address(name, column);
0x1412	0xF53BC531  	MOVFF       FARG_mysql_read_forced_name, FARG__mysql_calculate_address_name
0x1416	0xF53CC532  	MOVFF       FARG_mysql_read_forced_name+1, FARG__mysql_calculate_address_name+1
0x141A	0xF53DC533  	MOVFF       FARG_mysql_read_forced_column, FARG__mysql_calculate_address_column
0x141E	0xF53EC534  	MOVFF       FARG_mysql_read_forced_column+1, FARG__mysql_calculate_address_column+1
0x1422	0xF004EC1D  	CALL        __mysql_calculate_address, 0
0x1426	0xF539C000  	MOVFF       R0, mysql_read_forced_res_L0
;table_eeprom.h,263 :: 		if(res)
0x142A	0x5200      	MOVF        R0, 1 
0x142C	0xE003      	BZ          L_mysql_read_forced475
;table_eeprom.h,264 :: 		return res;
0x142E	0xF000C539  	MOVFF       mysql_read_forced_res_L0, R0
0x1432	0xD037      	BRA         L_end_mysql_read_forced
L_mysql_read_forced475:
;table_eeprom.h,267 :: 		if(fila >= 1 && fila <= myTable.row)
0x1434	0x0E80      	MOVLW       128
0x1436	0x0105      	MOVLB       5
0x1438	0x1936      	XORWF       FARG_mysql_read_forced_fila+1, 0, 1
0x143A	0x6E00      	MOVWF       R0 
0x143C	0x0E80      	MOVLW       128
0x143E	0x5C00      	SUBWF       R0, 0 
0x1440	0xE102      	BNZ         L__mysql_read_forced1281
0x1442	0x0E01      	MOVLW       1
0x1444	0x5D35      	SUBWF       FARG_mysql_read_forced_fila, 0, 1
L__mysql_read_forced1281:
0x1446	0xE329      	BNC         L_mysql_read_forced478
0x1448	0x5136      	MOVF        FARG_mysql_read_forced_fila+1, 0, 1
0x144A	0x0103      	MOVLB       3
0x144C	0x5D1C      	SUBWF       Expendedora_myTable+3, 0, 1
0x144E	0xE104      	BNZ         L__mysql_read_forced1282
0x1450	0x0105      	MOVLB       5
0x1452	0x5135      	MOVF        FARG_mysql_read_forced_fila, 0, 1
0x1454	0x0103      	MOVLB       3
0x1456	0x5D1B      	SUBWF       Expendedora_myTable+2, 0, 1
L__mysql_read_forced1282:
0x1458	0xE320      	BNC         L_mysql_read_forced478
L__mysql_read_forced986:
;table_eeprom.h,268 :: 		eeprom_i2c_read(myTable.addressAct+(fila-1)*myTable.tamCol, result, myTable.tamCol);
0x145A	0x0E01      	MOVLW       1
0x145C	0x0105      	MOVLB       5
0x145E	0x5D35      	SUBWF       FARG_mysql_read_forced_fila, 0, 1
0x1460	0x6E00      	MOVWF       R0 
0x1462	0x0E00      	MOVLW       0
0x1464	0x5936      	SUBWFB      FARG_mysql_read_forced_fila+1, 0, 1
0x1466	0x6E01      	MOVWF       R1 
0x1468	0xF004C31F  	MOVFF       Expendedora_myTable+6, R4
0x146C	0x0E00      	MOVLW       0
0x146E	0x6E05      	MOVWF       R5 
0x1470	0xF002EC54  	CALL        _Mul_16X16_U, 0
0x1474	0x5000      	MOVF        R0, 0 
0x1476	0x0103      	MOVLB       3
0x1478	0x2546      	ADDWF       Expendedora_myTable+45, 0, 1
0x147A	0x0105      	MOVLB       5
0x147C	0x6F49      	MOVWF       FARG_eeprom_i2c_read_address, 1
0x147E	0x5001      	MOVF        R1, 0 
0x1480	0x0103      	MOVLB       3
0x1482	0x2147      	ADDWFC      Expendedora_myTable+46, 0, 1
0x1484	0x0105      	MOVLB       5
0x1486	0x6F4A      	MOVWF       FARG_eeprom_i2c_read_address+1, 1
0x1488	0xF54BC537  	MOVFF       FARG_mysql_read_forced_result, FARG_eeprom_i2c_read_datos
0x148C	0xF54CC538  	MOVFF       FARG_mysql_read_forced_result+1, FARG_eeprom_i2c_read_datos+1
0x1490	0xF54DC31F  	MOVFF       Expendedora_myTable+6, FARG_eeprom_i2c_read_size
0x1494	0xF001ECF0  	CALL        _eeprom_i2c_read, 0
0x1498	0xD003      	BRA         L_mysql_read_forced479
L_mysql_read_forced478:
;table_eeprom.h,270 :: 		return TABLE_RW_NO_EXIST_ROW;   //Fila inexistente
0x149A	0x0E03      	MOVLW       3
0x149C	0x6E00      	MOVWF       R0 
0x149E	0xD001      	BRA         L_end_mysql_read_forced
L_mysql_read_forced479:
;table_eeprom.h,272 :: 		return TABLE_RW_SUCCESS;     //Exito en la busqueda
0x14A0	0x6A00      	CLRF        R0 
;table_eeprom.h,273 :: 		}
L_end_mysql_read_forced:
0x14A2	0x0012      	RETURN      0
; end of _mysql_read_forced
_Soft_I2C_Read:
;__Lib_SoftI2C.c,85 :: 		
;__Lib_SoftI2C.c,86 :: 		
0x14A4	0x0105      	MOVLB       5
0x14A6	0x6B33      	CLRF        Soft_I2C_Read_result_L0, 1
0x14A8	0x6B34      	CLRF        Soft_I2C_Read_result_L0+1, 1
0x14AA	0x0E80      	MOVLW       128
0x14AC	0x6F35      	MOVWF       Soft_I2C_Read_temp_L0, 1
0x14AE	0x0E00      	MOVLW       0
0x14B0	0x6F36      	MOVWF       Soft_I2C_Read_temp_L0+1, 1
;__Lib_SoftI2C.c,88 :: 		
L_Soft_I2C_Read3:
0x14B2	0x5135      	MOVF        Soft_I2C_Read_temp_L0, 0, 1
0x14B4	0x1136      	IORWF       Soft_I2C_Read_temp_L0+1, 0, 1
0x14B6	0xE025      	BZ          L_Soft_I2C_Read4
;__Lib_SoftI2C.c,89 :: 		
0x14B8	0xF003ECF1  	CALL        _Delay_1us, 0
0x14BC	0xF003ECF1  	CALL        _Delay_1us, 0
;__Lib_SoftI2C.c,91 :: 		
0x14C0	0x8C95      	BSF         Soft_I2C_Sda_Direction, BitPos(Soft_I2C_Sda_Direction+0) 
;__Lib_SoftI2C.c,93 :: 		
0x14C2	0xF003ECF1  	CALL        _Delay_1us, 0
0x14C6	0xF003ECF1  	CALL        _Delay_1us, 0
;__Lib_SoftI2C.c,95 :: 		
0x14CA	0x8296      	BSF         Soft_I2C_Scl_Direction, BitPos(Soft_I2C_Scl_Direction+0) 
;__Lib_SoftI2C.c,97 :: 		
0x14CC	0x0102      	MOVLB       2
0x14CE	0x91E4      	BCF         __Lib_SoftI2C___StopWaiting, BitPos(__Lib_SoftI2C___StopWaiting+0), 1
;__Lib_SoftI2C.c,98 :: 		
L_Soft_I2C_Read5:
0x14D0	0xB284      	BTFSC       Soft_I2C_Scl, BitPos(Soft_I2C_Scl+0) 
0x14D2	0xD004      	BRA         L_Soft_I2C_Read6
;__Lib_SoftI2C.c,99 :: 		
0x14D4	0xA1E4      	BTFSS       __Lib_SoftI2C___StopWaiting, BitPos(__Lib_SoftI2C___StopWaiting+0), 1
0x14D6	0xD001      	BRA         L_Soft_I2C_Read7
;__Lib_SoftI2C.c,100 :: 		
0x14D8	0xD001      	BRA         L_Soft_I2C_Read6
L_Soft_I2C_Read7:
0x14DA	0xD7FA      	BRA         L_Soft_I2C_Read5
L_Soft_I2C_Read6:
;__Lib_SoftI2C.c,102 :: 		
0x14DC	0xAC83      	BTFSS       Soft_I2C_Sda, BitPos(Soft_I2C_Sda+0) 
0x14DE	0xD005      	BRA         L_Soft_I2C_Read8
;__Lib_SoftI2C.c,103 :: 		
0x14E0	0x0105      	MOVLB       5
0x14E2	0x5135      	MOVF        Soft_I2C_Read_temp_L0, 0, 1
0x14E4	0x1333      	IORWF       Soft_I2C_Read_result_L0, 1, 1
0x14E6	0x5136      	MOVF        Soft_I2C_Read_temp_L0+1, 0, 1
0x14E8	0x1334      	IORWF       Soft_I2C_Read_result_L0+1, 1, 1
L_Soft_I2C_Read8:
0x14EA	0x0105      	MOVLB       5
;__Lib_SoftI2C.c,105 :: 		
0x14EC	0xF003ECF1  	CALL        _Delay_1us, 0
0x14F0	0xF003ECF1  	CALL        _Delay_1us, 0
;__Lib_SoftI2C.c,107 :: 		
0x14F4	0xF005EC79  	CALL        __Lib_SoftI2C_PutZerosToLATScl, 0
;__Lib_SoftI2C.c,108 :: 		
0x14F8	0x9296      	BCF         Soft_I2C_Scl_Direction, BitPos(Soft_I2C_Scl_Direction+0) 
;__Lib_SoftI2C.c,110 :: 		
0x14FA	0x3336      	RRCF        Soft_I2C_Read_temp_L0+1, 1, 1
0x14FC	0x3335      	RRCF        Soft_I2C_Read_temp_L0, 1, 1
0x14FE	0x9F36      	BCF         Soft_I2C_Read_temp_L0+1, 7, 1
;__Lib_SoftI2C.c,111 :: 		
0x1500	0xD7D8      	BRA         L_Soft_I2C_Read3
L_Soft_I2C_Read4:
;__Lib_SoftI2C.c,113 :: 		
0x1502	0x8C95      	BSF         Soft_I2C_Sda_Direction, BitPos(Soft_I2C_Sda_Direction+0) 
;__Lib_SoftI2C.c,115 :: 		
0x1504	0xF003ECF1  	CALL        _Delay_1us, 0
0x1508	0xF003ECF1  	CALL        _Delay_1us, 0
;__Lib_SoftI2C.c,117 :: 		
0x150C	0x5131      	MOVF        FARG_Soft_I2C_Read_ack, 0, 1
0x150E	0x1132      	IORWF       FARG_Soft_I2C_Read_ack+1, 0, 1
0x1510	0xE003      	BZ          L_Soft_I2C_Read9
;__Lib_SoftI2C.c,118 :: 		
0x1512	0xF005EC70  	CALL        __Lib_SoftI2C_PutZerosToLATSda, 0
;__Lib_SoftI2C.c,119 :: 		
0x1516	0x9C95      	BCF         Soft_I2C_Sda_Direction, BitPos(Soft_I2C_Sda_Direction+0) 
;__Lib_SoftI2C.c,120 :: 		
L_Soft_I2C_Read9:
;__Lib_SoftI2C.c,122 :: 		
0x1518	0xF003ECF1  	CALL        _Delay_1us, 0
0x151C	0xF003ECF1  	CALL        _Delay_1us, 0
;__Lib_SoftI2C.c,124 :: 		
0x1520	0x8296      	BSF         Soft_I2C_Scl_Direction, BitPos(Soft_I2C_Scl_Direction+0) 
;__Lib_SoftI2C.c,126 :: 		
0x1522	0x0102      	MOVLB       2
0x1524	0x91E4      	BCF         __Lib_SoftI2C___StopWaiting, BitPos(__Lib_SoftI2C___StopWaiting+0), 1
;__Lib_SoftI2C.c,127 :: 		
L_Soft_I2C_Read10:
0x1526	0xB284      	BTFSC       Soft_I2C_Scl, BitPos(Soft_I2C_Scl+0) 
0x1528	0xD004      	BRA         L_Soft_I2C_Read11
;__Lib_SoftI2C.c,128 :: 		
0x152A	0xA1E4      	BTFSS       __Lib_SoftI2C___StopWaiting, BitPos(__Lib_SoftI2C___StopWaiting+0), 1
0x152C	0xD001      	BRA         L_Soft_I2C_Read12
;__Lib_SoftI2C.c,129 :: 		
0x152E	0xD001      	BRA         L_Soft_I2C_Read11
L_Soft_I2C_Read12:
0x1530	0xD7FA      	BRA         L_Soft_I2C_Read10
L_Soft_I2C_Read11:
;__Lib_SoftI2C.c,131 :: 		
0x1532	0xF003ECF1  	CALL        _Delay_1us, 0
0x1536	0xF003ECF1  	CALL        _Delay_1us, 0
;__Lib_SoftI2C.c,133 :: 		
0x153A	0xF005EC79  	CALL        __Lib_SoftI2C_PutZerosToLATScl, 0
;__Lib_SoftI2C.c,134 :: 		
0x153E	0x9296      	BCF         Soft_I2C_Scl_Direction, BitPos(Soft_I2C_Scl_Direction+0) 
;__Lib_SoftI2C.c,136 :: 		
0x1540	0xF003ECF1  	CALL        _Delay_1us, 0
0x1544	0xF003ECF1  	CALL        _Delay_1us, 0
;__Lib_SoftI2C.c,138 :: 		
0x1548	0xF005EC70  	CALL        __Lib_SoftI2C_PutZerosToLATSda, 0
;__Lib_SoftI2C.c,139 :: 		
0x154C	0x9C95      	BCF         Soft_I2C_Sda_Direction, BitPos(Soft_I2C_Sda_Direction+0) 
;__Lib_SoftI2C.c,141 :: 		
0x154E	0xF000C533  	MOVFF       Soft_I2C_Read_result_L0, R0
;__Lib_SoftI2C.c,142 :: 		
L_end_Soft_I2C_Read:
0x1552	0x0012      	RETURN      0
; end of _Soft_I2C_Read
_mysql_read:
;table_eeprom.h,235 :: 		char mysql_read(char *name, char *column, int fila, long *result){
;table_eeprom.h,236 :: 		char res = _mysql_calculate_address(name, column);
0x1554	0xF53BC531  	MOVFF       FARG_mysql_read_name, FARG__mysql_calculate_address_name
0x1558	0xF53CC532  	MOVFF       FARG_mysql_read_name+1, FARG__mysql_calculate_address_name+1
0x155C	0xF53DC533  	MOVFF       FARG_mysql_read_column, FARG__mysql_calculate_address_column
0x1560	0xF53EC534  	MOVFF       FARG_mysql_read_column+1, FARG__mysql_calculate_address_column+1
0x1564	0xF004EC1D  	CALL        __mysql_calculate_address, 0
0x1568	0xF539C000  	MOVFF       R0, mysql_read_res_L0
;table_eeprom.h,239 :: 		if(res)
0x156C	0x5200      	MOVF        R0, 1 
0x156E	0xE003      	BZ          L_mysql_read468
;table_eeprom.h,240 :: 		return res;
0x1570	0xF000C539  	MOVFF       mysql_read_res_L0, R0
0x1574	0xD046      	BRA         L_end_mysql_read
L_mysql_read468:
;table_eeprom.h,243 :: 		*result = 0;
0x1576	0xFFE1C537  	MOVFF       FARG_mysql_read_result, FSR1L
0x157A	0xFFE2C538  	MOVFF       FARG_mysql_read_result+1, FSR1H
0x157E	0x6AE6      	CLRF        POSTINC1 
0x1580	0x6AE6      	CLRF        POSTINC1 
0x1582	0x6AE6      	CLRF        POSTINC1 
0x1584	0x6AE6      	CLRF        POSTINC1 
;table_eeprom.h,246 :: 		if(fila >= 1 && fila <= myTable.rowAct){
0x1586	0x0E80      	MOVLW       128
0x1588	0x0105      	MOVLB       5
0x158A	0x1936      	XORWF       FARG_mysql_read_fila+1, 0, 1
0x158C	0x6E00      	MOVWF       R0 
0x158E	0x0E80      	MOVLW       128
0x1590	0x5C00      	SUBWF       R0, 0 
0x1592	0xE102      	BNZ         L__mysql_read1278
0x1594	0x0E01      	MOVLW       1
0x1596	0x5D35      	SUBWF       FARG_mysql_read_fila, 0, 1
L__mysql_read1278:
0x1598	0xE330      	BNC         L_mysql_read471
0x159A	0x5136      	MOVF        FARG_mysql_read_fila+1, 0, 1
0x159C	0x0103      	MOVLB       3
0x159E	0x5D1E      	SUBWF       Expendedora_myTable+5, 0, 1
0x15A0	0xE104      	BNZ         L__mysql_read1279
0x15A2	0x0105      	MOVLB       5
0x15A4	0x5135      	MOVF        FARG_mysql_read_fila, 0, 1
0x15A6	0x0103      	MOVLB       3
0x15A8	0x5D1D      	SUBWF       Expendedora_myTable+4, 0, 1
L__mysql_read1279:
0x15AA	0xE327      	BNC         L_mysql_read471
L__mysql_read985:
;table_eeprom.h,247 :: 		if(myTable.tamCol <= 4)
0x15AC	0x511F      	MOVF        Expendedora_myTable+6, 0, 1
0x15AE	0x0804      	SUBLW       4
0x15B0	0xE320      	BNC         L_mysql_read472
;table_eeprom.h,248 :: 		eeprom_i2c_read(myTable.addressAct+(fila-1)*myTable.tamCol, (char*)&(*result), myTable.tamCol);
0x15B2	0x0E01      	MOVLW       1
0x15B4	0x0105      	MOVLB       5
0x15B6	0x5D35      	SUBWF       FARG_mysql_read_fila, 0, 1
0x15B8	0x6E00      	MOVWF       R0 
0x15BA	0x0E00      	MOVLW       0
0x15BC	0x5936      	SUBWFB      FARG_mysql_read_fila+1, 0, 1
0x15BE	0x6E01      	MOVWF       R1 
0x15C0	0xF004C31F  	MOVFF       Expendedora_myTable+6, R4
0x15C4	0x0E00      	MOVLW       0
0x15C6	0x6E05      	MOVWF       R5 
0x15C8	0xF002EC54  	CALL        _Mul_16X16_U, 0
0x15CC	0x5000      	MOVF        R0, 0 
0x15CE	0x0103      	MOVLB       3
0x15D0	0x2546      	ADDWF       Expendedora_myTable+45, 0, 1
0x15D2	0x0105      	MOVLB       5
0x15D4	0x6F49      	MOVWF       FARG_eeprom_i2c_read_address, 1
0x15D6	0x5001      	MOVF        R1, 0 
0x15D8	0x0103      	MOVLB       3
0x15DA	0x2147      	ADDWFC      Expendedora_myTable+46, 0, 1
0x15DC	0x0105      	MOVLB       5
0x15DE	0x6F4A      	MOVWF       FARG_eeprom_i2c_read_address+1, 1
0x15E0	0xF54BC537  	MOVFF       FARG_mysql_read_result, FARG_eeprom_i2c_read_datos
0x15E4	0xF54CC538  	MOVFF       FARG_mysql_read_result+1, FARG_eeprom_i2c_read_datos+1
0x15E8	0xF54DC31F  	MOVFF       Expendedora_myTable+6, FARG_eeprom_i2c_read_size
0x15EC	0xF001ECF0  	CALL        _eeprom_i2c_read, 0
0x15F0	0xD003      	BRA         L_mysql_read473
L_mysql_read472:
;table_eeprom.h,250 :: 		return TABLE_RW_OUT_RANGE_BYTES;
0x15F2	0x0E06      	MOVLW       6
0x15F4	0x6E00      	MOVWF       R0 
0x15F6	0xD005      	BRA         L_end_mysql_read
;table_eeprom.h,251 :: 		}
L_mysql_read473:
;table_eeprom.h,252 :: 		}else{
0x15F8	0xD003      	BRA         L_mysql_read474
L_mysql_read471:
;table_eeprom.h,253 :: 		return TABLE_RW_NO_EXIST_ROW;   //Fila inexistente
0x15FA	0x0E03      	MOVLW       3
0x15FC	0x6E00      	MOVWF       R0 
0x15FE	0xD001      	BRA         L_end_mysql_read
;table_eeprom.h,254 :: 		}
L_mysql_read474:
;table_eeprom.h,256 :: 		return TABLE_RW_SUCCESS;
0x1600	0x6A00      	CLRF        R0 
;table_eeprom.h,257 :: 		}
L_end_mysql_read:
0x1602	0x0012      	RETURN      0
; end of _mysql_read
_RES032:
;__Lib_MathDouble.c,128 :: 		
;__Lib_MathDouble.c,134 :: 		
0x1604	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,135 :: 		
0x1606	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,136 :: 		
0x1608	0x6A00      	CLRF        R0, 0
;__Lib_MathDouble.c,137 :: 		
0x160A	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,138 :: 		
0x160C	0x6A03      	CLRF        R3, 0
;__Lib_MathDouble.c,139 :: 		
0x160E	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,141 :: 		
L_end_RES032:
0x1610	0x0012      	RETURN      0
; end of _RES032
_lcd_chr:
;lcd_4x20.h,108 :: 		void lcd_chr(char fila, char col, char c){
;lcd_4x20.h,109 :: 		lcd_gotoxy(fila, col);
0x1612	0xF53BC531  	MOVFF       FARG_lcd_chr_fila, FARG_lcd_gotoxy_fila
0x1616	0xF53CC532  	MOVFF       FARG_lcd_chr_col, FARG_lcd_gotoxy_col
0x161A	0xF003ECF6  	CALL        _lcd_gotoxy, 0
;lcd_4x20.h,110 :: 		lcd_send_byte(1, c);
0x161E	0x0E01      	MOVLW       1
0x1620	0x6F47      	MOVWF       FARG_lcd_send_byte_address, 1
0x1622	0xF548C533  	MOVFF       FARG_lcd_chr_c, FARG_lcd_send_byte_enviar
0x1626	0xF002EC7C  	CALL        _lcd_send_byte, 0
;lcd_4x20.h,111 :: 		}
L_end_lcd_chr:
0x162A	0x0012      	RETURN      0
; end of _lcd_chr
_strlen:
;__Lib_CString.c,143 :: 		
;__Lib_CString.c,146 :: 		
0x162C	0xF002C531  	MOVFF       FARG_strlen_s, R2
0x1630	0xF003C532  	MOVFF       FARG_strlen_s+1, R3
;__Lib_CString.c,147 :: 		
L_strlen36:
0x1634	0xF000C002  	MOVFF       R2, R0
0x1638	0xF001C003  	MOVFF       R3, R1
0x163C	0x4A02      	INFSNZ      R2, 1 
0x163E	0x2A03      	INCF        R3, 1 
0x1640	0xFFE9C000  	MOVFF       R0, FSR0L
0x1644	0xFFEAC001  	MOVFF       R1, FSR0H
0x1648	0x52EE      	MOVF        POSTINC0, 1 
0x164A	0xE001      	BZ          L_strlen37
;__Lib_CString.c,148 :: 		
0x164C	0xD7F3      	BRA         L_strlen36
L_strlen37:
;__Lib_CString.c,149 :: 		
0x164E	0x0105      	MOVLB       5
0x1650	0x5131      	MOVF        FARG_strlen_s, 0, 1
0x1652	0x5C02      	SUBWF       R2, 0 
0x1654	0x6E00      	MOVWF       R0 
0x1656	0x5132      	MOVF        FARG_strlen_s+1, 0, 1
0x1658	0x5803      	SUBWFB      R3, 0 
0x165A	0x6E01      	MOVWF       R1 
0x165C	0x0E01      	MOVLW       1
0x165E	0x5E00      	SUBWF       R0, 1 
0x1660	0x0E00      	MOVLW       0
0x1662	0x5A01      	SUBWFB      R1, 1 
;__Lib_CString.c,150 :: 		
L_end_strlen:
0x1664	0x0012      	RETURN      0
; end of _strlen
_SETFOV32:
;__Lib_MathDouble.c,82 :: 		
;__Lib_MathDouble.c,90 :: 		
0x1666	0x820B      	BSF         R11, 1, 0
;__Lib_MathDouble.c,91 :: 		
0x1668	0xAE0B      	BTFSS       R11, 7, 0
;__Lib_MathDouble.c,92 :: 		
0x166A	0xF00BEF3D  	GOTO        SETFOV32EEE
;__Lib_MathDouble.c,94 :: 		
0x166E	0x6803      	SETF        R3, 0
;__Lib_MathDouble.c,95 :: 		
0x1670	0x6802      	SETF        R2, 0
;__Lib_MathDouble.c,96 :: 		
0x1672	0x6801      	SETF        R1, 0
;__Lib_MathDouble.c,97 :: 		
0x1674	0x6800      	SETF        R0, 0
;__Lib_MathDouble.c,98 :: 		
0x1676	0x360A      	RLCF        R10, 1, 0
;__Lib_MathDouble.c,99 :: 		
0x1678	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,100 :: 		
SETFOV32EEE:
;__Lib_MathDouble.c,101 :: 		
0x167A	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,103 :: 		
L_end_SETFOV32:
0x167C	0x0012      	RETURN      0
; end of _SETFOV32
_SETFUN32:
;__Lib_MathDouble.c,144 :: 		
;__Lib_MathDouble.c,152 :: 		
0x167E	0x840B      	BSF         R11, 2, 0
;__Lib_MathDouble.c,153 :: 		
0x1680	0xAE0B      	BTFSS       R11, 7, 0
;__Lib_MathDouble.c,154 :: 		
0x1682	0xF00BEF4A  	GOTO        SETFUN32EEE
;__Lib_MathDouble.c,156 :: 		
0x1686	0x0E01      	MOVLW       1
;__Lib_MathDouble.c,157 :: 		
0x1688	0x6E03      	MOVWF       R3, 0
;__Lib_MathDouble.c,158 :: 		
0x168A	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,159 :: 		
0x168C	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,160 :: 		
0x168E	0x6A00      	CLRF        R0, 0
;__Lib_MathDouble.c,161 :: 		
0x1690	0x360A      	RLCF        R10, 1, 0
;__Lib_MathDouble.c,162 :: 		
0x1692	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,163 :: 		
SETFUN32EEE:
;__Lib_MathDouble.c,164 :: 		
0x1694	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,166 :: 		
L_end_SETFUN32:
0x1696	0x0012      	RETURN      0
; end of _SETFUN32
_bcdToDec:
;miscelaneos.h,17 :: 		char bcdToDec(char dato){
;miscelaneos.h,18 :: 		dato = 10*(swap(dato)&0x0F) + (dato&0x0F);
0x1698	0xF549C531  	MOVFF       FARG_bcdToDec_dato, FARG_Swap_input
0x169C	0xF002EC50  	CALL        _Swap, 0
0x16A0	0x0E0F      	MOVLW       15
0x16A2	0x1600      	ANDWF       R0, 1 
0x16A4	0x0E0A      	MOVLW       10
0x16A6	0x0200      	MULWF       R0 
0x16A8	0xF001CFF3  	MOVFF       PRODL, R1
0x16AC	0x0E0F      	MOVLW       15
0x16AE	0x0105      	MOVLB       5
0x16B0	0x1531      	ANDWF       FARG_bcdToDec_dato, 0, 1
0x16B2	0x6E00      	MOVWF       R0 
0x16B4	0x5001      	MOVF        R1, 0 
0x16B6	0x2600      	ADDWF       R0, 1 
0x16B8	0xF531C000  	MOVFF       R0, FARG_bcdToDec_dato
;miscelaneos.h,20 :: 		return dato;
;miscelaneos.h,21 :: 		}
L_end_bcdToDec:
0x16BC	0x0012      	RETURN      0
; end of _bcdToDec
_FIXSIGN32:
;__Lib_MathDouble.c,117 :: 		
;__Lib_MathDouble.c,121 :: 		
0x16BE	0xAE0A      	BTFSS       R10, 7, 0
;__Lib_MathDouble.c,122 :: 		
0x16C0	0x9E02      	BCF         R2, 7, 0
;__Lib_MathDouble.c,123 :: 		
0x16C2	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,125 :: 		
L_end_FIXSIGN32:
0x16C4	0x0012      	RETURN      0
; end of _FIXSIGN32
_atoi:
;__Lib_CStdlib.c,181 :: 		
;__Lib_CStdlib.c,186 :: 		
___atoi_skipws_atoi:
;__Lib_CStdlib.c,187 :: 		
0x16C6	0xFFE9C523  	MOVFF       FARG_atoi_s, FSR0L
0x16CA	0xFFEAC524  	MOVFF       FARG_atoi_s+1, FSR0H
0x16CE	0xF525CFEE  	MOVFF       POSTINC0, atoi_c_L0
0x16D2	0x0E00      	MOVLW       0
0x16D4	0x0105      	MOVLB       5
0x16D6	0x6F26      	MOVWF       atoi_c_L0+1, 1
0x16D8	0x0E00      	MOVLW       0
0x16DA	0x6F26      	MOVWF       atoi_c_L0+1, 1
;__Lib_CStdlib.c,188 :: 		
0x16DC	0x0E00      	MOVLW       0
0x16DE	0x1926      	XORWF       atoi_c_L0+1, 0, 1
0x16E0	0xE102      	BNZ         L__atoi100
0x16E2	0x0E20      	MOVLW       32
0x16E4	0x1925      	XORWF       atoi_c_L0, 0, 1
L__atoi100:
0x16E6	0xE007      	BZ          L__atoi90
0x16E8	0x0E00      	MOVLW       0
0x16EA	0x1926      	XORWF       atoi_c_L0+1, 0, 1
0x16EC	0xE102      	BNZ         L__atoi101
0x16EE	0x0E09      	MOVLW       9
0x16F0	0x1925      	XORWF       atoi_c_L0, 0, 1
L__atoi101:
0x16F2	0xE001      	BZ          L__atoi90
0x16F4	0xD003      	BRA         L_atoi55
L__atoi90:
;__Lib_CStdlib.c,189 :: 		
0x16F6	0x4B23      	INFSNZ      FARG_atoi_s, 1, 1
0x16F8	0x2B24      	INCF        FARG_atoi_s+1, 1, 1
;__Lib_CStdlib.c,190 :: 		
0x16FA	0xD7E5      	BRA         ___atoi_skipws_atoi
;__Lib_CStdlib.c,191 :: 		
L_atoi55:
;__Lib_CStdlib.c,192 :: 		
0x16FC	0x6B27      	CLRF        atoi_a_L0, 1
0x16FE	0x6B28      	CLRF        atoi_a_L0+1, 1
;__Lib_CStdlib.c,193 :: 		
0x1700	0x6B29      	CLRF        atoi_sign_L0, 1
0x1702	0x6B2A      	CLRF        atoi_sign_L0+1, 1
;__Lib_CStdlib.c,194 :: 		
0x1704	0x0E00      	MOVLW       0
0x1706	0x1926      	XORWF       atoi_c_L0+1, 0, 1
0x1708	0xE102      	BNZ         L__atoi102
0x170A	0x0E2D      	MOVLW       45
0x170C	0x1925      	XORWF       atoi_c_L0, 0, 1
L__atoi102:
0x170E	0xE105      	BNZ         L_atoi56
;__Lib_CStdlib.c,195 :: 		
0x1710	0x4B29      	INFSNZ      atoi_sign_L0, 1, 1
0x1712	0x2B2A      	INCF        atoi_sign_L0+1, 1, 1
;__Lib_CStdlib.c,196 :: 		
0x1714	0x4B23      	INFSNZ      FARG_atoi_s, 1, 1
0x1716	0x2B24      	INCF        FARG_atoi_s+1, 1, 1
;__Lib_CStdlib.c,197 :: 		
0x1718	0xD008      	BRA         L_atoi57
L_atoi56:
;__Lib_CStdlib.c,199 :: 		
0x171A	0x0E00      	MOVLW       0
0x171C	0x1926      	XORWF       atoi_c_L0+1, 0, 1
0x171E	0xE102      	BNZ         L__atoi103
0x1720	0x0E2B      	MOVLW       43
0x1722	0x1925      	XORWF       atoi_c_L0, 0, 1
L__atoi103:
0x1724	0xE102      	BNZ         L_atoi58
;__Lib_CStdlib.c,200 :: 		
0x1726	0x4B23      	INFSNZ      FARG_atoi_s, 1, 1
0x1728	0x2B24      	INCF        FARG_atoi_s+1, 1, 1
L_atoi58:
L_atoi57:
;__Lib_CStdlib.c,201 :: 		
___atoi_conv_atoi:
;__Lib_CStdlib.c,202 :: 		
0x172A	0xFFE9C523  	MOVFF       FARG_atoi_s, FSR0L
0x172E	0xFFEAC524  	MOVFF       FARG_atoi_s+1, FSR0H
0x1732	0xF525CFEE  	MOVFF       POSTINC0, atoi_c_L0
0x1736	0x0E00      	MOVLW       0
0x1738	0x6F26      	MOVWF       atoi_c_L0+1, 1
0x173A	0x0E00      	MOVLW       0
0x173C	0x6F26      	MOVWF       atoi_c_L0+1, 1
;__Lib_CStdlib.c,203 :: 		
0x173E	0xF53BC525  	MOVFF       atoi_c_L0, FARG_isdigit_character
0x1742	0xF005ECC9  	CALL        _isdigit, 0
0x1746	0x5200      	MOVF        R0, 1 
0x1748	0xE019      	BZ          L_atoi59
;__Lib_CStdlib.c,204 :: 		
0x174A	0xF000C527  	MOVFF       atoi_a_L0, R0
0x174E	0xF001C528  	MOVFF       atoi_a_L0+1, R1
0x1752	0x0E0A      	MOVLW       10
0x1754	0x6E04      	MOVWF       R4 
0x1756	0x0E00      	MOVLW       0
0x1758	0x6E05      	MOVWF       R5 
0x175A	0xF002EC54  	CALL        _Mul_16X16_U, 0
0x175E	0x0E30      	MOVLW       48
0x1760	0x5D25      	SUBWF       atoi_c_L0, 0, 1
0x1762	0x6E02      	MOVWF       R2 
0x1764	0x0E00      	MOVLW       0
0x1766	0x5926      	SUBWFB      atoi_c_L0+1, 0, 1
0x1768	0x6E03      	MOVWF       R3 
0x176A	0x5002      	MOVF        R2, 0 
0x176C	0x2400      	ADDWF       R0, 0 
0x176E	0x6F27      	MOVWF       atoi_a_L0, 1
0x1770	0x5003      	MOVF        R3, 0 
0x1772	0x2001      	ADDWFC      R1, 0 
0x1774	0x6F28      	MOVWF       atoi_a_L0+1, 1
;__Lib_CStdlib.c,205 :: 		
0x1776	0x4B23      	INFSNZ      FARG_atoi_s, 1, 1
0x1778	0x2B24      	INCF        FARG_atoi_s+1, 1, 1
;__Lib_CStdlib.c,206 :: 		
0x177A	0xD7D7      	BRA         ___atoi_conv_atoi
;__Lib_CStdlib.c,207 :: 		
L_atoi59:
;__Lib_CStdlib.c,208 :: 		
0x177C	0x5129      	MOVF        atoi_sign_L0, 0, 1
0x177E	0x112A      	IORWF       atoi_sign_L0+1, 0, 1
0x1780	0xE008      	BZ          L_atoi60
;__Lib_CStdlib.c,209 :: 		
0x1782	0x5127      	MOVF        atoi_a_L0, 0, 1
0x1784	0x0800      	SUBLW       0
0x1786	0x6E00      	MOVWF       R0 
0x1788	0xF001C528  	MOVFF       atoi_a_L0+1, R1
0x178C	0x0E00      	MOVLW       0
0x178E	0x5601      	SUBFWB      R1, 1 
0x1790	0xD004      	BRA         L_end_atoi
L_atoi60:
;__Lib_CStdlib.c,210 :: 		
0x1792	0xF000C527  	MOVFF       atoi_a_L0, R0
0x1796	0xF001C528  	MOVFF       atoi_a_L0+1, R1
;__Lib_CStdlib.c,211 :: 		
L_end_atoi:
0x179A	0x0012      	RETURN      0
; end of _atoi
_DS1307_write_string:
;ds1307.h,84 :: 		bool DS1307_write_string(DS1307 *myDS, char *date){
;ds1307.h,86 :: 		if(string_len(date) != 13 || !string_isNumeric(date))
0x179C	0xF531C525  	MOVFF       FARG_DS1307_write_string_date, FARG_string_len_texto
0x17A0	0xF532C526  	MOVFF       FARG_DS1307_write_string_date+1, FARG_string_len_texto+1
0x17A4	0xDD26      	RCALL       _string_len
0x17A6	0x5000      	MOVF        R0, 0 
0x17A8	0x0A0D      	XORLW       13
0x17AA	0xE108      	BNZ         L__DS1307_write_string976
0x17AC	0xF531C525  	MOVFF       FARG_DS1307_write_string_date, FARG_string_isNumeric_cadena
0x17B0	0xF532C526  	MOVFF       FARG_DS1307_write_string_date+1, FARG_string_isNumeric_cadena+1
0x17B4	0xDD2D      	RCALL       _string_isNumeric
0x17B6	0x5200      	MOVF        R0, 1 
0x17B8	0xE001      	BZ          L__DS1307_write_string976
0x17BA	0xD002      	BRA         L_DS1307_write_string344
L__DS1307_write_string976:
;ds1307.h,87 :: 		return false;
0x17BC	0x6A00      	CLRF        R0 
0x17BE	0xD106      	BRA         L_end_DS1307_write_string
L_DS1307_write_string344:
;ds1307.h,90 :: 		myDS->dayOfWeek = stringToNumN(&date[0], 1);
0x17C0	0x0E03      	MOVLW       3
0x17C2	0x2523      	ADDWF       FARG_DS1307_write_string_myDS, 0, 1
0x17C4	0x6F27      	MOVWF       FLOC__DS1307_write_string, 1
0x17C6	0x0E00      	MOVLW       0
0x17C8	0x2124      	ADDWFC      FARG_DS1307_write_string_myDS+1, 0, 1
0x17CA	0x6F28      	MOVWF       FLOC__DS1307_write_string+1, 1
0x17CC	0xF531C525  	MOVFF       FARG_DS1307_write_string_date, FARG_stringToNumN_cadena
0x17D0	0xF532C526  	MOVFF       FARG_DS1307_write_string_date+1, FARG_stringToNumN_cadena+1
0x17D4	0x0E01      	MOVLW       1
0x17D6	0x6F33      	MOVWF       FARG_stringToNumN_size, 1
0x17D8	0xDDCB      	RCALL       _stringToNumN
0x17DA	0xFFE1C527  	MOVFF       FLOC__DS1307_write_string, FSR1L
0x17DE	0xFFE2C528  	MOVFF       FLOC__DS1307_write_string+1, FSR1H
0x17E2	0xFFE6C000  	MOVFF       R0, POSTINC1
;ds1307.h,91 :: 		myDS->hours = stringToNumN(&date[1], 2);
0x17E6	0x0E02      	MOVLW       2
0x17E8	0x2523      	ADDWF       FARG_DS1307_write_string_myDS, 0, 1
0x17EA	0x6F27      	MOVWF       FLOC__DS1307_write_string, 1
0x17EC	0x0E00      	MOVLW       0
0x17EE	0x2124      	ADDWFC      FARG_DS1307_write_string_myDS+1, 0, 1
0x17F0	0x6F28      	MOVWF       FLOC__DS1307_write_string+1, 1
0x17F2	0x0E01      	MOVLW       1
0x17F4	0x2525      	ADDWF       FARG_DS1307_write_string_date, 0, 1
0x17F6	0x6F31      	MOVWF       FARG_stringToNumN_cadena, 1
0x17F8	0x0E00      	MOVLW       0
0x17FA	0x2126      	ADDWFC      FARG_DS1307_write_string_date+1, 0, 1
0x17FC	0x6F32      	MOVWF       FARG_stringToNumN_cadena+1, 1
0x17FE	0x0E02      	MOVLW       2
0x1800	0x6F33      	MOVWF       FARG_stringToNumN_size, 1
0x1802	0xDDB6      	RCALL       _stringToNumN
0x1804	0xFFE1C527  	MOVFF       FLOC__DS1307_write_string, FSR1L
0x1808	0xFFE2C528  	MOVFF       FLOC__DS1307_write_string+1, FSR1H
0x180C	0xFFE6C000  	MOVFF       R0, POSTINC1
;ds1307.h,92 :: 		myDs->minutes = stringToNumN(&date[3], 2);
0x1810	0x0E01      	MOVLW       1
0x1812	0x2523      	ADDWF       FARG_DS1307_write_string_myDS, 0, 1
0x1814	0x6F27      	MOVWF       FLOC__DS1307_write_string, 1
0x1816	0x0E00      	MOVLW       0
0x1818	0x2124      	ADDWFC      FARG_DS1307_write_string_myDS+1, 0, 1
0x181A	0x6F28      	MOVWF       FLOC__DS1307_write_string+1, 1
0x181C	0x0E03      	MOVLW       3
0x181E	0x2525      	ADDWF       FARG_DS1307_write_string_date, 0, 1
0x1820	0x6F31      	MOVWF       FARG_stringToNumN_cadena, 1
0x1822	0x0E00      	MOVLW       0
0x1824	0x2126      	ADDWFC      FARG_DS1307_write_string_date+1, 0, 1
0x1826	0x6F32      	MOVWF       FARG_stringToNumN_cadena+1, 1
0x1828	0x0E02      	MOVLW       2
0x182A	0x6F33      	MOVWF       FARG_stringToNumN_size, 1
0x182C	0xDDA1      	RCALL       _stringToNumN
0x182E	0xFFE1C527  	MOVFF       FLOC__DS1307_write_string, FSR1L
0x1832	0xFFE2C528  	MOVFF       FLOC__DS1307_write_string+1, FSR1H
0x1836	0xFFE6C000  	MOVFF       R0, POSTINC1
;ds1307.h,93 :: 		myDS->seconds = stringToNumN(&date[5], 2);
0x183A	0xF527C523  	MOVFF       FARG_DS1307_write_string_myDS, FLOC__DS1307_write_string
0x183E	0xF528C524  	MOVFF       FARG_DS1307_write_string_myDS+1, FLOC__DS1307_write_string+1
0x1842	0x0E05      	MOVLW       5
0x1844	0x2525      	ADDWF       FARG_DS1307_write_string_date, 0, 1
0x1846	0x6F31      	MOVWF       FARG_stringToNumN_cadena, 1
0x1848	0x0E00      	MOVLW       0
0x184A	0x2126      	ADDWFC      FARG_DS1307_write_string_date+1, 0, 1
0x184C	0x6F32      	MOVWF       FARG_stringToNumN_cadena+1, 1
0x184E	0x0E02      	MOVLW       2
0x1850	0x6F33      	MOVWF       FARG_stringToNumN_size, 1
0x1852	0xDD8E      	RCALL       _stringToNumN
0x1854	0xFFE1C527  	MOVFF       FLOC__DS1307_write_string, FSR1L
0x1858	0xFFE2C528  	MOVFF       FLOC__DS1307_write_string+1, FSR1H
0x185C	0xFFE6C000  	MOVFF       R0, POSTINC1
;ds1307.h,94 :: 		myDS->day = stringToNumN(&date[7], 2);
0x1860	0x0E04      	MOVLW       4
0x1862	0x2523      	ADDWF       FARG_DS1307_write_string_myDS, 0, 1
0x1864	0x6F27      	MOVWF       FLOC__DS1307_write_string, 1
0x1866	0x0E00      	MOVLW       0
0x1868	0x2124      	ADDWFC      FARG_DS1307_write_string_myDS+1, 0, 1
0x186A	0x6F28      	MOVWF       FLOC__DS1307_write_string+1, 1
0x186C	0x0E07      	MOVLW       7
0x186E	0x2525      	ADDWF       FARG_DS1307_write_string_date, 0, 1
0x1870	0x6F31      	MOVWF       FARG_stringToNumN_cadena, 1
0x1872	0x0E00      	MOVLW       0
0x1874	0x2126      	ADDWFC      FARG_DS1307_write_string_date+1, 0, 1
0x1876	0x6F32      	MOVWF       FARG_stringToNumN_cadena+1, 1
0x1878	0x0E02      	MOVLW       2
0x187A	0x6F33      	MOVWF       FARG_stringToNumN_size, 1
0x187C	0xDD79      	RCALL       _stringToNumN
0x187E	0xFFE1C527  	MOVFF       FLOC__DS1307_write_string, FSR1L
0x1882	0xFFE2C528  	MOVFF       FLOC__DS1307_write_string+1, FSR1H
0x1886	0xFFE6C000  	MOVFF       R0, POSTINC1
;ds1307.h,95 :: 		myDS->month = stringToNumN(&date[9], 2);
0x188A	0x0E05      	MOVLW       5
0x188C	0x2523      	ADDWF       FARG_DS1307_write_string_myDS, 0, 1
0x188E	0x6F27      	MOVWF       FLOC__DS1307_write_string, 1
0x1890	0x0E00      	MOVLW       0
0x1892	0x2124      	ADDWFC      FARG_DS1307_write_string_myDS+1, 0, 1
0x1894	0x6F28      	MOVWF       FLOC__DS1307_write_string+1, 1
0x1896	0x0E09      	MOVLW       9
0x1898	0x2525      	ADDWF       FARG_DS1307_write_string_date, 0, 1
0x189A	0x6F31      	MOVWF       FARG_stringToNumN_cadena, 1
0x189C	0x0E00      	MOVLW       0
0x189E	0x2126      	ADDWFC      FARG_DS1307_write_string_date+1, 0, 1
0x18A0	0x6F32      	MOVWF       FARG_stringToNumN_cadena+1, 1
0x18A2	0x0E02      	MOVLW       2
0x18A4	0x6F33      	MOVWF       FARG_stringToNumN_size, 1
0x18A6	0xDD64      	RCALL       _stringToNumN
0x18A8	0xFFE1C527  	MOVFF       FLOC__DS1307_write_string, FSR1L
0x18AC	0xFFE2C528  	MOVFF       FLOC__DS1307_write_string+1, FSR1H
0x18B0	0xFFE6C000  	MOVFF       R0, POSTINC1
;ds1307.h,96 :: 		myDS->year = stringToNumN(&date[11], 2);
0x18B4	0x0E06      	MOVLW       6
0x18B6	0x2523      	ADDWF       FARG_DS1307_write_string_myDS, 0, 1
0x18B8	0x6F27      	MOVWF       FLOC__DS1307_write_string, 1
0x18BA	0x0E00      	MOVLW       0
0x18BC	0x2124      	ADDWFC      FARG_DS1307_write_string_myDS+1, 0, 1
0x18BE	0x6F28      	MOVWF       FLOC__DS1307_write_string+1, 1
0x18C0	0x0E0B      	MOVLW       11
0x18C2	0x2525      	ADDWF       FARG_DS1307_write_string_date, 0, 1
0x18C4	0x6F31      	MOVWF       FARG_stringToNumN_cadena, 1
0x18C6	0x0E00      	MOVLW       0
0x18C8	0x2126      	ADDWFC      FARG_DS1307_write_string_date+1, 0, 1
0x18CA	0x6F32      	MOVWF       FARG_stringToNumN_cadena+1, 1
0x18CC	0x0E02      	MOVLW       2
0x18CE	0x6F33      	MOVWF       FARG_stringToNumN_size, 1
0x18D0	0xDD4F      	RCALL       _stringToNumN
0x18D2	0xFFE1C527  	MOVFF       FLOC__DS1307_write_string, FSR1L
0x18D6	0xFFE2C528  	MOVFF       FLOC__DS1307_write_string+1, FSR1H
0x18DA	0xFFE6C000  	MOVFF       R0, POSTINC1
;ds1307.h,98 :: 		Soft_I2C_Start();               // Issue start signal
0x18DE	0xDCC2      	RCALL       _Soft_I2C_Start
;ds1307.h,99 :: 		Soft_I2C_Write(DS1307_ADDRESS); // Address DS1307, see DS1307 datasheet
0x18E0	0x0ED0      	MOVLW       208
0x18E2	0x6F31      	MOVWF       FARG_Soft_I2C_Write_data_, 1
0x18E4	0xF007ECE4  	CALL        _Soft_I2C_Write, 0
;ds1307.h,100 :: 		Soft_I2C_Write(0x00);           // Start from address 0
0x18E8	0x6B31      	CLRF        FARG_Soft_I2C_Write_data_, 1
0x18EA	0xF007ECE4  	CALL        _Soft_I2C_Write, 0
;ds1307.h,103 :: 		Soft_I2C_Write(decToBcd(myDS->seconds));   //Segundos
0x18EE	0xFFE9C523  	MOVFF       FARG_DS1307_write_string_myDS, FSR0L
0x18F2	0xFFEAC524  	MOVFF       FARG_DS1307_write_string_myDS+1, FSR0H
0x18F6	0xF531CFEE  	MOVFF       POSTINC0, FARG_decToBcd_dato
0x18FA	0xF006EC29  	CALL        _decToBcd, 0
0x18FE	0xF531C000  	MOVFF       R0, FARG_Soft_I2C_Write_data_
0x1902	0xF007ECE4  	CALL        _Soft_I2C_Write, 0
;ds1307.h,104 :: 		Soft_I2C_Write(decToBcd(myDS->minutes));   //Minutos
0x1906	0x0E01      	MOVLW       1
0x1908	0x2523      	ADDWF       FARG_DS1307_write_string_myDS, 0, 1
0x190A	0x6EE9      	MOVWF       FSR0L 
0x190C	0x0E00      	MOVLW       0
0x190E	0x2124      	ADDWFC      FARG_DS1307_write_string_myDS+1, 0, 1
0x1910	0x6EEA      	MOVWF       FSR0H 
0x1912	0xF531CFEE  	MOVFF       POSTINC0, FARG_decToBcd_dato
0x1916	0xF006EC29  	CALL        _decToBcd, 0
0x191A	0xF531C000  	MOVFF       R0, FARG_Soft_I2C_Write_data_
0x191E	0xF007ECE4  	CALL        _Soft_I2C_Write, 0
;ds1307.h,105 :: 		Soft_I2C_Write(decToBcd(myDs->hours));     //Horas
0x1922	0x0E02      	MOVLW       2
0x1924	0x2523      	ADDWF       FARG_DS1307_write_string_myDS, 0, 1
0x1926	0x6EE9      	MOVWF       FSR0L 
0x1928	0x0E00      	MOVLW       0
0x192A	0x2124      	ADDWFC      FARG_DS1307_write_string_myDS+1, 0, 1
0x192C	0x6EEA      	MOVWF       FSR0H 
0x192E	0xF531CFEE  	MOVFF       POSTINC0, FARG_decToBcd_dato
0x1932	0xF006EC29  	CALL        _decToBcd, 0
0x1936	0xF531C000  	MOVFF       R0, FARG_Soft_I2C_Write_data_
0x193A	0xF007ECE4  	CALL        _Soft_I2C_Write, 0
;ds1307.h,106 :: 		Soft_I2C_Write(decToBcd(myDS->dayOfWeek)); //Dia de la semana
0x193E	0x0E03      	MOVLW       3
0x1940	0x2523      	ADDWF       FARG_DS1307_write_string_myDS, 0, 1
0x1942	0x6EE9      	MOVWF       FSR0L 
0x1944	0x0E00      	MOVLW       0
0x1946	0x2124      	ADDWFC      FARG_DS1307_write_string_myDS+1, 0, 1
0x1948	0x6EEA      	MOVWF       FSR0H 
0x194A	0xF531CFEE  	MOVFF       POSTINC0, FARG_decToBcd_dato
0x194E	0xF006EC29  	CALL        _decToBcd, 0
0x1952	0xF531C000  	MOVFF       R0, FARG_Soft_I2C_Write_data_
0x1956	0xF007ECE4  	CALL        _Soft_I2C_Write, 0
;ds1307.h,107 :: 		Soft_I2C_Write(decToBcd(myDS->day));       //Dia del mes
0x195A	0x0E04      	MOVLW       4
0x195C	0x2523      	ADDWF       FARG_DS1307_write_string_myDS, 0, 1
0x195E	0x6EE9      	MOVWF       FSR0L 
0x1960	0x0E00      	MOVLW       0
0x1962	0x2124      	ADDWFC      FARG_DS1307_write_string_myDS+1, 0, 1
0x1964	0x6EEA      	MOVWF       FSR0H 
0x1966	0xF531CFEE  	MOVFF       POSTINC0, FARG_decToBcd_dato
0x196A	0xF006EC29  	CALL        _decToBcd, 0
0x196E	0xF531C000  	MOVFF       R0, FARG_Soft_I2C_Write_data_
0x1972	0xF007ECE4  	CALL        _Soft_I2C_Write, 0
;ds1307.h,108 :: 		Soft_I2C_Write(decToBcd(myDS->month));     //Mes
0x1976	0x0E05      	MOVLW       5
0x1978	0x2523      	ADDWF       FARG_DS1307_write_string_myDS, 0, 1
0x197A	0x6EE9      	MOVWF       FSR0L 
0x197C	0x0E00      	MOVLW       0
0x197E	0x2124      	ADDWFC      FARG_DS1307_write_string_myDS+1, 0, 1
0x1980	0x6EEA      	MOVWF       FSR0H 
0x1982	0xF531CFEE  	MOVFF       POSTINC0, FARG_decToBcd_dato
0x1986	0xF006EC29  	CALL        _decToBcd, 0
0x198A	0xF531C000  	MOVFF       R0, FARG_Soft_I2C_Write_data_
0x198E	0xF007ECE4  	CALL        _Soft_I2C_Write, 0
;ds1307.h,109 :: 		Soft_I2C_Write(decToBcd(myDS->year));      //Año
0x1992	0x0E06      	MOVLW       6
0x1994	0x2523      	ADDWF       FARG_DS1307_write_string_myDS, 0, 1
0x1996	0x6EE9      	MOVWF       FSR0L 
0x1998	0x0E00      	MOVLW       0
0x199A	0x2124      	ADDWFC      FARG_DS1307_write_string_myDS+1, 0, 1
0x199C	0x6EEA      	MOVWF       FSR0H 
0x199E	0xF531CFEE  	MOVFF       POSTINC0, FARG_decToBcd_dato
0x19A2	0xF006EC29  	CALL        _decToBcd, 0
0x19A6	0xF531C000  	MOVFF       R0, FARG_Soft_I2C_Write_data_
0x19AA	0xF007ECE4  	CALL        _Soft_I2C_Write, 0
;ds1307.h,110 :: 		Soft_I2C_Write(0x80);                      //Register SQW
0x19AE	0x0E80      	MOVLW       128
0x19B0	0x6F31      	MOVWF       FARG_Soft_I2C_Write_data_, 1
0x19B2	0xF007ECE4  	CALL        _Soft_I2C_Write, 0
;ds1307.h,111 :: 		Soft_I2C_Stop();                           // Issue stop signal
0x19B6	0xF006EC10  	CALL        _Soft_I2C_Stop, 0
;ds1307.h,114 :: 		DS1307_date(myDS, true);
0x19BA	0xF531C523  	MOVFF       FARG_DS1307_write_string_myDS, FARG_DS1307_date_myDS
0x19BE	0xF532C524  	MOVFF       FARG_DS1307_write_string_myDS+1, FARG_DS1307_date_myDS+1
0x19C2	0x0E01      	MOVLW       1
0x19C4	0x0105      	MOVLB       5
0x19C6	0x6F33      	MOVWF       FARG_DS1307_date_formatComplet, 1
0x19C8	0xF006EC7C  	CALL        _DS1307_date, 0
;ds1307.h,115 :: 		}
L_end_DS1307_write_string:
0x19CC	0x0012      	RETURN      0
; end of _DS1307_write_string
_xtoi:
;__Lib_CStdlib.c,316 :: 		
;__Lib_CStdlib.c,320 :: 		
0x19CE	0x0105      	MOVLB       5
0x19D0	0x6B25      	CLRF        xtoi_sign_L0, 1
0x19D2	0x6B26      	CLRF        xtoi_sign_L0+1, 1
;__Lib_CStdlib.c,321 :: 		
0x19D4	0x6B29      	CLRF        xtoi_val_L0, 1
0x19D6	0x6B2A      	CLRF        xtoi_val_L0+1, 1
;__Lib_CStdlib.c,322 :: 		
L_xtoi76:
0x19D8	0xFFE9C523  	MOVFF       FARG_xtoi_s, FSR0L
0x19DC	0xFFEAC524  	MOVFF       FARG_xtoi_s+1, FSR0H
0x19E0	0xF531CFEE  	MOVFF       POSTINC0, FARG_isspace_character
0x19E4	0xF006EC61  	CALL        _isspace, 0
0x19E8	0x5200      	MOVF        R0, 1 
0x19EA	0xE003      	BZ          L_xtoi77
;__Lib_CStdlib.c,323 :: 		
0x19EC	0x4B23      	INFSNZ      FARG_xtoi_s, 1, 1
0x19EE	0x2B24      	INCF        FARG_xtoi_s+1, 1, 1
0x19F0	0xD7F3      	BRA         L_xtoi76
L_xtoi77:
;__Lib_CStdlib.c,324 :: 		
0x19F2	0xFFE9C523  	MOVFF       FARG_xtoi_s, FSR0L
0x19F6	0xFFEAC524  	MOVFF       FARG_xtoi_s+1, FSR0H
0x19FA	0x50EE      	MOVF        POSTINC0, 0 
0x19FC	0x0A2D      	XORLW       45
0x19FE	0xE105      	BNZ         L_xtoi78
;__Lib_CStdlib.c,326 :: 		
0x1A00	0x4B25      	INFSNZ      xtoi_sign_L0, 1, 1
0x1A02	0x2B26      	INCF        xtoi_sign_L0+1, 1, 1
;__Lib_CStdlib.c,327 :: 		
0x1A04	0x4B23      	INFSNZ      FARG_xtoi_s, 1, 1
0x1A06	0x2B24      	INCF        FARG_xtoi_s+1, 1, 1
;__Lib_CStdlib.c,328 :: 		
0x1A08	0xD009      	BRA         L_xtoi79
L_xtoi78:
;__Lib_CStdlib.c,330 :: 		
0x1A0A	0xFFE9C523  	MOVFF       FARG_xtoi_s, FSR0L
0x1A0E	0xFFEAC524  	MOVFF       FARG_xtoi_s+1, FSR0H
0x1A12	0x50EE      	MOVF        POSTINC0, 0 
0x1A14	0x0A2B      	XORLW       43
0x1A16	0xE102      	BNZ         L_xtoi80
;__Lib_CStdlib.c,331 :: 		
0x1A18	0x4B23      	INFSNZ      FARG_xtoi_s, 1, 1
0x1A1A	0x2B24      	INCF        FARG_xtoi_s+1, 1, 1
L_xtoi80:
L_xtoi79:
;__Lib_CStdlib.c,332 :: 		
L_xtoi81:
0x1A1C	0xF000C523  	MOVFF       FARG_xtoi_s, R0
0x1A20	0xF001C524  	MOVFF       FARG_xtoi_s+1, R1
0x1A24	0x4B23      	INFSNZ      FARG_xtoi_s, 1, 1
0x1A26	0x2B24      	INCF        FARG_xtoi_s+1, 1, 1
0x1A28	0xFFE9C000  	MOVFF       R0, FSR0L
0x1A2C	0xFFEAC001  	MOVFF       R1, FSR0H
0x1A30	0xF527CFEE  	MOVFF       POSTINC0, xtoi_c_L0
0x1A34	0x0E00      	MOVLW       0
0x1A36	0x6F28      	MOVWF       xtoi_c_L0+1, 1
0x1A38	0x0E00      	MOVLW       0
0x1A3A	0x6F28      	MOVWF       xtoi_c_L0+1, 1
0x1A3C	0xF531C527  	MOVFF       xtoi_c_L0, FARG_isxdigit_character
0x1A40	0xF006EC40  	CALL        _isxdigit, 0
0x1A44	0x5200      	MOVF        R0, 1 
0x1A46	0xE02E      	BZ          L_xtoi82
;__Lib_CStdlib.c,333 :: 		
0x1A48	0xF531C527  	MOVFF       xtoi_c_L0, FARG_isupper_character
0x1A4C	0xF007ECD8  	CALL        _isupper, 0
0x1A50	0x5200      	MOVF        R0, 1 
0x1A52	0xE008      	BZ          L_xtoi83
;__Lib_CStdlib.c,334 :: 		
0x1A54	0xF531C527  	MOVFF       xtoi_c_L0, FARG_tolower_character
0x1A58	0xF006EC71  	CALL        _tolower, 0
0x1A5C	0xF527C000  	MOVFF       R0, xtoi_c_L0
0x1A60	0x0E00      	MOVLW       0
0x1A62	0x6F28      	MOVWF       xtoi_c_L0+1, 1
L_xtoi83:
;__Lib_CStdlib.c,335 :: 		
0x1A64	0xF53BC527  	MOVFF       xtoi_c_L0, FARG_isdigit_character
0x1A68	0xF005ECC9  	CALL        _isdigit, 0
0x1A6C	0x5200      	MOVF        R0, 1 
0x1A6E	0xE005      	BZ          L_xtoi84
;__Lib_CStdlib.c,336 :: 		
0x1A70	0x0E30      	MOVLW       48
0x1A72	0x5F27      	SUBWF       xtoi_c_L0, 1, 1
0x1A74	0x0E00      	MOVLW       0
0x1A76	0x5B28      	SUBWFB      xtoi_c_L0+1, 1, 1
0x1A78	0xD004      	BRA         L_xtoi85
L_xtoi84:
;__Lib_CStdlib.c,338 :: 		
0x1A7A	0x0E57      	MOVLW       87
0x1A7C	0x5F27      	SUBWF       xtoi_c_L0, 1, 1
0x1A7E	0x0E00      	MOVLW       0
0x1A80	0x5B28      	SUBWFB      xtoi_c_L0+1, 1, 1
L_xtoi85:
;__Lib_CStdlib.c,339 :: 		
0x1A82	0x3729      	RLCF        xtoi_val_L0, 1, 1
0x1A84	0x9129      	BCF         xtoi_val_L0, 0, 1
0x1A86	0x372A      	RLCF        xtoi_val_L0+1, 1, 1
0x1A88	0x3729      	RLCF        xtoi_val_L0, 1, 1
0x1A8A	0x9129      	BCF         xtoi_val_L0, 0, 1
0x1A8C	0x372A      	RLCF        xtoi_val_L0+1, 1, 1
0x1A8E	0x3729      	RLCF        xtoi_val_L0, 1, 1
0x1A90	0x9129      	BCF         xtoi_val_L0, 0, 1
0x1A92	0x372A      	RLCF        xtoi_val_L0+1, 1, 1
0x1A94	0x3729      	RLCF        xtoi_val_L0, 1, 1
0x1A96	0x9129      	BCF         xtoi_val_L0, 0, 1
0x1A98	0x372A      	RLCF        xtoi_val_L0+1, 1, 1
;__Lib_CStdlib.c,340 :: 		
0x1A9A	0x5127      	MOVF        xtoi_c_L0, 0, 1
0x1A9C	0x2729      	ADDWF       xtoi_val_L0, 1, 1
0x1A9E	0x0E00      	MOVLW       0
0x1AA0	0x232A      	ADDWFC      xtoi_val_L0+1, 1, 1
;__Lib_CStdlib.c,341 :: 		
0x1AA2	0xD7BC      	BRA         L_xtoi81
L_xtoi82:
;__Lib_CStdlib.c,342 :: 		
0x1AA4	0x5125      	MOVF        xtoi_sign_L0, 0, 1
0x1AA6	0x1126      	IORWF       xtoi_sign_L0+1, 0, 1
0x1AA8	0xE008      	BZ          L_xtoi86
;__Lib_CStdlib.c,343 :: 		
0x1AAA	0x5129      	MOVF        xtoi_val_L0, 0, 1
0x1AAC	0x0800      	SUBLW       0
0x1AAE	0x6E00      	MOVWF       R0 
0x1AB0	0xF001C52A  	MOVFF       xtoi_val_L0+1, R1
0x1AB4	0x0E00      	MOVLW       0
0x1AB6	0x5601      	SUBFWB      R1, 1 
0x1AB8	0xD004      	BRA         L_end_xtoi
L_xtoi86:
;__Lib_CStdlib.c,344 :: 		
0x1ABA	0xF000C529  	MOVFF       xtoi_val_L0, R0
0x1ABE	0xF001C52A  	MOVFF       xtoi_val_L0+1, R1
;__Lib_CStdlib.c,345 :: 		
L_end_xtoi:
0x1AC2	0x0012      	RETURN      0
; end of _xtoi
_mysql_write_string:
;table_eeprom.h,275 :: 		char mysql_write_string(char *name, char *column, int fila, char *texto, bool endWrite){
;table_eeprom.h,276 :: 		char res = _mysql_calculate_address(name, column);
0x1AC4	0xF53BC523  	MOVFF       FARG_mysql_write_string_name, FARG__mysql_calculate_address_name
0x1AC8	0xF53CC524  	MOVFF       FARG_mysql_write_string_name+1, FARG__mysql_calculate_address_name+1
0x1ACC	0xF53DC525  	MOVFF       FARG_mysql_write_string_column, FARG__mysql_calculate_address_column
0x1AD0	0xF53EC526  	MOVFF       FARG_mysql_write_string_column+1, FARG__mysql_calculate_address_column+1
0x1AD4	0xF004EC1D  	CALL        __mysql_calculate_address, 0
0x1AD8	0xF52CC000  	MOVFF       R0, mysql_write_string_res_L0
;table_eeprom.h,279 :: 		if(res)
0x1ADC	0x5200      	MOVF        R0, 1 
0x1ADE	0xE003      	BZ          L_mysql_write_string480
;table_eeprom.h,280 :: 		return res;
0x1AE0	0xF000C52C  	MOVFF       mysql_write_string_res_L0, R0
0x1AE4	0xD092      	BRA         L_end_mysql_write_string
L_mysql_write_string480:
;table_eeprom.h,283 :: 		myTable.cont = strlen(texto)+1;   //Calcular el tamaño de la cadena a escribir
0x1AE6	0xF531C529  	MOVFF       FARG_mysql_write_string_texto, FARG_strlen_s
0x1AEA	0xF532C52A  	MOVFF       FARG_mysql_write_string_texto+1, FARG_strlen_s+1
0x1AEE	0xDD9E      	RCALL       _strlen
0x1AF0	0x5000      	MOVF        R0, 0 
0x1AF2	0x0F01      	ADDLW       1
0x1AF4	0x6E01      	MOVWF       R1 
0x1AF6	0xF348C001  	MOVFF       R1, Expendedora_myTable+47
;table_eeprom.h,285 :: 		if(myTable.cont > myTable.tamCol){
0x1AFA	0x5001      	MOVF        R1, 0 
0x1AFC	0x0103      	MOVLB       3
0x1AFE	0x5D1F      	SUBWF       Expendedora_myTable+6, 0, 1
0x1B00	0xE203      	BC          L_mysql_write_string481
;table_eeprom.h,286 :: 		return TABLE_RW_OUT_RANGE;
0x1B02	0x0E04      	MOVLW       4
0x1B04	0x6E00      	MOVWF       R0 
0x1B06	0xD081      	BRA         L_end_mysql_write_string
;table_eeprom.h,287 :: 		}
L_mysql_write_string481:
;table_eeprom.h,289 :: 		if(endWrite){
0x1B08	0x0105      	MOVLB       5
0x1B0A	0x532B      	MOVF        FARG_mysql_write_string_endWrite, 1, 1
0x1B0C	0xE047      	BZ          L_mysql_write_string482
;table_eeprom.h,290 :: 		if(myTable.rowAct < myTable.row){
0x1B0E	0x0103      	MOVLB       3
0x1B10	0x511C      	MOVF        Expendedora_myTable+3, 0, 1
0x1B12	0x5D1E      	SUBWF       Expendedora_myTable+5, 0, 1
0x1B14	0xE102      	BNZ         L__mysql_write_string1284
0x1B16	0x511B      	MOVF        Expendedora_myTable+2, 0, 1
0x1B18	0x5D1D      	SUBWF       Expendedora_myTable+4, 0, 1
L__mysql_write_string1284:
0x1B1A	0xE23C      	BC          L_mysql_write_string483
;table_eeprom.h,291 :: 		eeprom_i2c_write(myTable.addressAct+myTable.rowAct*myTable.tamCol, texto, myTable.cont);
0x1B1C	0xF000C31D  	MOVFF       Expendedora_myTable+4, R0
0x1B20	0xF001C31E  	MOVFF       Expendedora_myTable+5, R1
0x1B24	0xF004C31F  	MOVFF       Expendedora_myTable+6, R4
0x1B28	0x0E00      	MOVLW       0
0x1B2A	0x6E05      	MOVWF       R5 
0x1B2C	0xF002EC54  	CALL        _Mul_16X16_U, 0
0x1B30	0x5000      	MOVF        R0, 0 
0x1B32	0x2546      	ADDWF       Expendedora_myTable+45, 0, 1
0x1B34	0x0105      	MOVLB       5
0x1B36	0x6F3B      	MOVWF       FARG_eeprom_i2c_write_address, 1
0x1B38	0x5001      	MOVF        R1, 0 
0x1B3A	0x0103      	MOVLB       3
0x1B3C	0x2147      	ADDWFC      Expendedora_myTable+46, 0, 1
0x1B3E	0x0105      	MOVLB       5
0x1B40	0x6F3C      	MOVWF       FARG_eeprom_i2c_write_address+1, 1
0x1B42	0xF53DC529  	MOVFF       FARG_mysql_write_string_texto, FARG_eeprom_i2c_write_datos
0x1B46	0xF53EC52A  	MOVFF       FARG_mysql_write_string_texto+1, FARG_eeprom_i2c_write_datos+1
0x1B4A	0xF53FC348  	MOVFF       Expendedora_myTable+47, FARG_eeprom_i2c_write_size
0x1B4E	0xF005EC82  	CALL        _eeprom_i2c_write, 0
;table_eeprom.h,292 :: 		myTable.rowAct++;
0x1B52	0x0E01      	MOVLW       1
0x1B54	0x0103      	MOVLB       3
0x1B56	0x251D      	ADDWF       Expendedora_myTable+4, 0, 1
0x1B58	0x6E00      	MOVWF       R0 
0x1B5A	0x0E00      	MOVLW       0
0x1B5C	0x211E      	ADDWFC      Expendedora_myTable+5, 0, 1
0x1B5E	0x6E01      	MOVWF       R1 
0x1B60	0xF31DC000  	MOVFF       R0, Expendedora_myTable+4
0x1B64	0xF31EC001  	MOVFF       R1, Expendedora_myTable+5
;table_eeprom.h,293 :: 		eeprom_i2c_write(myTable.address+TABLE_MAX_SIZE_NAME+3, (char*)&myTable.rowAct, 2);
0x1B68	0x0E0F      	MOVLW       15
0x1B6A	0x2544      	ADDWF       Expendedora_myTable+43, 0, 1
0x1B6C	0x0105      	MOVLB       5
0x1B6E	0x6F3B      	MOVWF       FARG_eeprom_i2c_write_address, 1
0x1B70	0x0E00      	MOVLW       0
0x1B72	0x0103      	MOVLB       3
0x1B74	0x2145      	ADDWFC      Expendedora_myTable+44, 0, 1
0x1B76	0x0105      	MOVLB       5
0x1B78	0x6F3C      	MOVWF       FARG_eeprom_i2c_write_address+1, 1
0x1B7A	0x0E03      	MOVLW       3
0x1B7C	0x273B      	ADDWF       FARG_eeprom_i2c_write_address, 1, 1
0x1B7E	0x0E00      	MOVLW       0
0x1B80	0x233C      	ADDWFC      FARG_eeprom_i2c_write_address+1, 1, 1
0x1B82	0x0E1D      	MOVLW       Expendedora_myTable+4
0x1B84	0x6F3D      	MOVWF       FARG_eeprom_i2c_write_datos, 1
0x1B86	0x0E03      	MOVLW       hi_addr(Expendedora_myTable+4)
0x1B88	0x6F3E      	MOVWF       FARG_eeprom_i2c_write_datos+1, 1
0x1B8A	0x0E02      	MOVLW       2
0x1B8C	0x6F3F      	MOVWF       FARG_eeprom_i2c_write_size, 1
0x1B8E	0xF005EC82  	CALL        _eeprom_i2c_write, 0
;table_eeprom.h,294 :: 		}else{
0x1B92	0xD003      	BRA         L_mysql_write_string484
L_mysql_write_string483:
;table_eeprom.h,295 :: 		return TABLE_RW_TABLE_FULL;   //Memoria llena de la tabla
0x1B94	0x0E05      	MOVLW       5
0x1B96	0x6E00      	MOVWF       R0 
0x1B98	0xD038      	BRA         L_end_mysql_write_string
;table_eeprom.h,296 :: 		}
L_mysql_write_string484:
;table_eeprom.h,297 :: 		}else if(fila >= 1 && fila <= myTable.rowAct)
0x1B9A	0xD036      	BRA         L_mysql_write_string485
L_mysql_write_string482:
0x1B9C	0x0E80      	MOVLW       128
0x1B9E	0x0105      	MOVLB       5
0x1BA0	0x1928      	XORWF       FARG_mysql_write_string_fila+1, 0, 1
0x1BA2	0x6E00      	MOVWF       R0 
0x1BA4	0x0E80      	MOVLW       128
0x1BA6	0x5C00      	SUBWF       R0, 0 
0x1BA8	0xE102      	BNZ         L__mysql_write_string1285
0x1BAA	0x0E01      	MOVLW       1
0x1BAC	0x5D27      	SUBWF       FARG_mysql_write_string_fila, 0, 1
L__mysql_write_string1285:
0x1BAE	0xE329      	BNC         L_mysql_write_string488
0x1BB0	0x5128      	MOVF        FARG_mysql_write_string_fila+1, 0, 1
0x1BB2	0x0103      	MOVLB       3
0x1BB4	0x5D1E      	SUBWF       Expendedora_myTable+5, 0, 1
0x1BB6	0xE104      	BNZ         L__mysql_write_string1286
0x1BB8	0x0105      	MOVLB       5
0x1BBA	0x5127      	MOVF        FARG_mysql_write_string_fila, 0, 1
0x1BBC	0x0103      	MOVLB       3
0x1BBE	0x5D1D      	SUBWF       Expendedora_myTable+4, 0, 1
L__mysql_write_string1286:
0x1BC0	0xE320      	BNC         L_mysql_write_string488
L__mysql_write_string987:
;table_eeprom.h,298 :: 		eeprom_i2c_write(myTable.addressAct+(fila-1)*myTable.tamCol, texto, myTable.cont);
0x1BC2	0x0E01      	MOVLW       1
0x1BC4	0x0105      	MOVLB       5
0x1BC6	0x5D27      	SUBWF       FARG_mysql_write_string_fila, 0, 1
0x1BC8	0x6E00      	MOVWF       R0 
0x1BCA	0x0E00      	MOVLW       0
0x1BCC	0x5928      	SUBWFB      FARG_mysql_write_string_fila+1, 0, 1
0x1BCE	0x6E01      	MOVWF       R1 
0x1BD0	0xF004C31F  	MOVFF       Expendedora_myTable+6, R4
0x1BD4	0x0E00      	MOVLW       0
0x1BD6	0x6E05      	MOVWF       R5 
0x1BD8	0xF002EC54  	CALL        _Mul_16X16_U, 0
0x1BDC	0x5000      	MOVF        R0, 0 
0x1BDE	0x0103      	MOVLB       3
0x1BE0	0x2546      	ADDWF       Expendedora_myTable+45, 0, 1
0x1BE2	0x0105      	MOVLB       5
0x1BE4	0x6F3B      	MOVWF       FARG_eeprom_i2c_write_address, 1
0x1BE6	0x5001      	MOVF        R1, 0 
0x1BE8	0x0103      	MOVLB       3
0x1BEA	0x2147      	ADDWFC      Expendedora_myTable+46, 0, 1
0x1BEC	0x0105      	MOVLB       5
0x1BEE	0x6F3C      	MOVWF       FARG_eeprom_i2c_write_address+1, 1
0x1BF0	0xF53DC529  	MOVFF       FARG_mysql_write_string_texto, FARG_eeprom_i2c_write_datos
0x1BF4	0xF53EC52A  	MOVFF       FARG_mysql_write_string_texto+1, FARG_eeprom_i2c_write_datos+1
0x1BF8	0xF53FC348  	MOVFF       Expendedora_myTable+47, FARG_eeprom_i2c_write_size
0x1BFC	0xF005EC82  	CALL        _eeprom_i2c_write, 0
0x1C00	0xD003      	BRA         L_mysql_write_string489
L_mysql_write_string488:
;table_eeprom.h,300 :: 		return TABLE_RW_NO_EXIST_ROW;   //Fila inexistente
0x1C02	0x0E03      	MOVLW       3
0x1C04	0x6E00      	MOVWF       R0 
0x1C06	0xD001      	BRA         L_end_mysql_write_string
;table_eeprom.h,301 :: 		}
L_mysql_write_string489:
L_mysql_write_string485:
;table_eeprom.h,303 :: 		return TABLE_RW_SUCCESS;     //Exito en grabacion
0x1C08	0x6A00      	CLRF        R0 
;table_eeprom.h,304 :: 		}
L_end_mysql_write_string:
0x1C0A	0x0012      	RETURN      0
; end of _mysql_write_string
_mysql_erase:
;table_eeprom.h,373 :: 		bool mysql_erase(char *name){
;table_eeprom.h,375 :: 		if(!mysql_exist(name))
0x1C0C	0xF547C523  	MOVFF       FARG_mysql_erase_name, FARG_mysql_exist_name
0x1C10	0xF548C524  	MOVFF       FARG_mysql_erase_name+1, FARG_mysql_exist_name+1
0x1C14	0xF003EC42  	CALL        _mysql_exist, 0
0x1C18	0x5200      	MOVF        R0, 1 
0x1C1A	0xE102      	BNZ         L_mysql_erase508
;table_eeprom.h,376 :: 		return false;
0x1C1C	0x6A00      	CLRF        R0 
0x1C1E	0xD01A      	BRA         L_end_mysql_erase
L_mysql_erase508:
;table_eeprom.h,379 :: 		myTable.rowAct = 0;
0x1C20	0x0103      	MOVLB       3
0x1C22	0x6B1D      	CLRF        Expendedora_myTable+4, 1
0x1C24	0x6B1E      	CLRF        Expendedora_myTable+5, 1
;table_eeprom.h,380 :: 		eeprom_i2c_write(myTable.address+TABLE_MAX_SIZE_NAME+3, (char*)&myTable.rowAct, 2);
0x1C26	0x0E0F      	MOVLW       15
0x1C28	0x2544      	ADDWF       Expendedora_myTable+43, 0, 1
0x1C2A	0x0105      	MOVLB       5
0x1C2C	0x6F3B      	MOVWF       FARG_eeprom_i2c_write_address, 1
0x1C2E	0x0E00      	MOVLW       0
0x1C30	0x0103      	MOVLB       3
0x1C32	0x2145      	ADDWFC      Expendedora_myTable+44, 0, 1
0x1C34	0x0105      	MOVLB       5
0x1C36	0x6F3C      	MOVWF       FARG_eeprom_i2c_write_address+1, 1
0x1C38	0x0E03      	MOVLW       3
0x1C3A	0x273B      	ADDWF       FARG_eeprom_i2c_write_address, 1, 1
0x1C3C	0x0E00      	MOVLW       0
0x1C3E	0x233C      	ADDWFC      FARG_eeprom_i2c_write_address+1, 1, 1
0x1C40	0x0E1D      	MOVLW       Expendedora_myTable+4
0x1C42	0x6F3D      	MOVWF       FARG_eeprom_i2c_write_datos, 1
0x1C44	0x0E03      	MOVLW       hi_addr(Expendedora_myTable+4)
0x1C46	0x6F3E      	MOVWF       FARG_eeprom_i2c_write_datos+1, 1
0x1C48	0x0E02      	MOVLW       2
0x1C4A	0x6F3F      	MOVWF       FARG_eeprom_i2c_write_size, 1
0x1C4C	0xF005EC82  	CALL        _eeprom_i2c_write, 0
;table_eeprom.h,381 :: 		return true;
0x1C50	0x0E01      	MOVLW       1
0x1C52	0x6E00      	MOVWF       R0 
;table_eeprom.h,382 :: 		}
L_end_mysql_erase:
0x1C54	0x0012      	RETURN      0
; end of _mysql_erase
_can_set_operation:
;lib_can.h,693 :: 		void can_set_operation(const char CAN_OPERATION){
;lib_can.h,694 :: 		CANCON.REQOP0 = CAN_OPERATION.B0;
0x1C56	0x0105      	MOVLB       5
0x1C58	0xB123      	BTFSC       FARG_can_set_operation_CAN_OPERATION, 0, 1
0x1C5A	0xD002      	BRA         L__can_set_operation1178
0x1C5C	0x9A6F      	BCF         CANCON, 5 
0x1C5E	0xD001      	BRA         L__can_set_operation1179
L__can_set_operation1178:
0x1C60	0x8A6F      	BSF         CANCON, 5 
L__can_set_operation1179:
;lib_can.h,695 :: 		CANCON.REQOP1 = CAN_OPERATION.B1;
0x1C62	0xB323      	BTFSC       FARG_can_set_operation_CAN_OPERATION, 1, 1
0x1C64	0xD002      	BRA         L__can_set_operation1180
0x1C66	0x9C6F      	BCF         CANCON, 6 
0x1C68	0xD001      	BRA         L__can_set_operation1181
L__can_set_operation1180:
0x1C6A	0x8C6F      	BSF         CANCON, 6 
L__can_set_operation1181:
;lib_can.h,696 :: 		CANCON.REQOP2 = CAN_OPERATION.B2;
0x1C6C	0xB523      	BTFSC       FARG_can_set_operation_CAN_OPERATION, 2, 1
0x1C6E	0xD002      	BRA         L__can_set_operation1182
0x1C70	0x9E6F      	BCF         CANCON, 7 
0x1C72	0xD001      	BRA         L__can_set_operation1183
L__can_set_operation1182:
0x1C74	0x8E6F      	BSF         CANCON, 7 
L__can_set_operation1183:
;lib_can.h,698 :: 		while(CANSTAT.OPMODE0 != CANCON.REQOP0 ||
L_can_set_operation318:
;lib_can.h,699 :: 		CANSTAT.OPMODE1 != CANCON.REQOP1 ||
0x1C76	0xBA6E      	BTFSC       CANSTAT, 5 
0x1C78	0xD003      	BRA         L__can_set_operation1184
0x1C7A	0xAA6F      	BTFSS       CANCON, 5 
0x1C7C	0xD003      	BRA         L__can_set_operation1185
0x1C7E	0xD011      	BRA         L__can_set_operation971
L__can_set_operation1184:
0x1C80	0xAA6F      	BTFSS       CANCON, 5 
0x1C82	0xD00F      	BRA         L__can_set_operation971
L__can_set_operation1185:
0x1C84	0xBC6E      	BTFSC       CANSTAT, 6 
0x1C86	0xD003      	BRA         L__can_set_operation1186
0x1C88	0xAC6F      	BTFSS       CANCON, 6 
0x1C8A	0xD003      	BRA         L__can_set_operation1187
0x1C8C	0xD00A      	BRA         L__can_set_operation971
L__can_set_operation1186:
0x1C8E	0xAC6F      	BTFSS       CANCON, 6 
0x1C90	0xD008      	BRA         L__can_set_operation971
L__can_set_operation1187:
;lib_can.h,700 :: 		CANSTAT.OPMODE2 != CANCON.REQOP2);
0x1C92	0xBE6E      	BTFSC       CANSTAT, 7 
0x1C94	0xD003      	BRA         L__can_set_operation1188
0x1C96	0xAE6F      	BTFSS       CANCON, 7 
0x1C98	0xD003      	BRA         L__can_set_operation1189
0x1C9A	0xD003      	BRA         L__can_set_operation971
L__can_set_operation1188:
0x1C9C	0xAE6F      	BTFSS       CANCON, 7 
0x1C9E	0xD001      	BRA         L__can_set_operation971
L__can_set_operation1189:
0x1CA0	0xD001      	BRA         L_can_set_operation319
L__can_set_operation971:
0x1CA2	0xD7E9      	BRA         L_can_set_operation318
L_can_set_operation319:
;lib_can.h,701 :: 		}
L_end_can_set_operation:
0x1CA4	0x0012      	RETURN      0
; end of _can_set_operation
_SETIOV3224:
;__Lib_MathDouble.c,530 :: 		
;__Lib_MathDouble.c,537 :: 		
0x1CA6	0x800B      	BSF         R11, 0, 0
;__Lib_MathDouble.c,538 :: 		
0x1CA8	0xAE0B      	BTFSS       R11, 7, 0
;__Lib_MathDouble.c,539 :: 		
0x1CAA	0xF00EEF5F  	GOTO        SETIOV3224EEE
;__Lib_MathDouble.c,541 :: 		
0x1CAE	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,542 :: 		
0x1CB0	0xAE0A      	BTFSS       R10, 7, 0
;__Lib_MathDouble.c,543 :: 		
0x1CB2	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,544 :: 		
0x1CB4	0x6E02      	MOVWF       R2, 0
;__Lib_MathDouble.c,545 :: 		
0x1CB6	0x6E01      	MOVWF       R1, 0
;__Lib_MathDouble.c,546 :: 		
0x1CB8	0x6E00      	MOVWF       R0, 0
;__Lib_MathDouble.c,547 :: 		
0x1CBA	0x360A      	RLCF        R10, 1, 0
;__Lib_MathDouble.c,548 :: 		
0x1CBC	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,549 :: 		
SETIOV3224EEE:
;__Lib_MathDouble.c,550 :: 		
0x1CBE	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,552 :: 		
L_end_SETIOV3224:
0x1CC0	0x0012      	RETURN      0
; end of _SETIOV3224
_Div_16X16_U:
;__Lib_Math.c,102 :: 		
;__Lib_Math.c,109 :: 		
0x1CC2	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,110 :: 		
0x1CC4	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,111 :: 		
0x1CC6	0x0E10      	MOVLW       16
;__Lib_Math.c,112 :: 		
0x1CC8	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,113 :: 		
0x1CCA	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,114 :: 		
0x1CCC	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,115 :: 		
0x1CCE	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,116 :: 		
0x1CD0	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,117 :: 		
0x1CD2	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,118 :: 		
0x1CD4	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,119 :: 		
0x1CD6	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,120 :: 		
0x1CD8	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,121 :: 		
0x1CDA	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,122 :: 		
0x1CDC	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,123 :: 		
0x1CDE	0xD007      	BRA         $+16
;__Lib_Math.c,124 :: 		
0x1CE0	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,125 :: 		
0x1CE2	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,126 :: 		
0x1CE4	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,127 :: 		
0x1CE6	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,128 :: 		
0x1CE8	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,129 :: 		
0x1CEA	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,130 :: 		
0x1CEC	0x90D8      	BCF         STATUS, 0, 0
;__Lib_Math.c,131 :: 		
0x1CEE	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,132 :: 		
0x1CF0	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,133 :: 		
0x1CF2	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,134 :: 		
0x1CF4	0xD7EA      	BRA         $-42
;__Lib_Math.c,136 :: 		
L_end_Div_16X16_U:
0x1CF6	0x0012      	RETURN      0
; end of _Div_16X16_U
_Div_32x32_U:
;__Lib_Math.c,1162 :: 		
;__Lib_Math.c,1173 :: 		
0x1CF8	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,1174 :: 		
0x1CFA	0x6A0A      	CLRF        R10, 0
;__Lib_Math.c,1175 :: 		
0x1CFC	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,1176 :: 		
0x1CFE	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,1178 :: 		
0x1D00	0x6A0E      	CLRF        R14, 0
;__Lib_Math.c,1180 :: 		
0x1D02	0x3403      	RLCF        R3, 0, 0
;__Lib_Math.c,1181 :: 		
0x1D04	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1182 :: 		
0x1D06	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1183 :: 		
0x1D08	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1184 :: 		
0x1D0A	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1185 :: 		
0x1D0C	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1186 :: 		
0x1D0E	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1187 :: 		
0x1D10	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1188 :: 		
0x1D12	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1189 :: 		
0x1D14	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1190 :: 		
0x1D16	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1191 :: 		
0x1D18	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1192 :: 		
0x1D1A	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1193 :: 		
0x1D1C	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1194 :: 		
0x1D1E	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1195 :: 		
0x1D20	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1197 :: 		
0x1D22	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1198 :: 		
0x1D24	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1199 :: 		
0x1D26	0x0E01      	MOVLW       1
;__Lib_Math.c,1200 :: 		
0x1D28	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1201 :: 		
0x1D2A	0x3603      	RLCF        R3, 1, 0
;__Lib_Math.c,1203 :: 		
0x1D2C	0x0E07      	MOVLW       7
;__Lib_Math.c,1204 :: 		
0x1D2E	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,1206 :: 		
LOOPU3232A:
;__Lib_Math.c,1207 :: 		
0x1D30	0x3403      	RLCF        R3, 0, 0
;__Lib_Math.c,1208 :: 		
0x1D32	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1209 :: 		
0x1D34	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,1210 :: 		
0x1D36	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,1211 :: 		
0x1D38	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,1212 :: 		
0x1D3A	0x360E      	RLCF        R14, 1, 0
;__Lib_Math.c,1213 :: 		
0x1D3C	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1214 :: 		
0x1D3E	0xA003      	BTFSS       R3, 0, 0
;__Lib_Math.c,1215 :: 		
0x1D40	0xD012      	BRA         UADD22LA
;__Lib_Math.c,1217 :: 		
0x1D42	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1218 :: 		
0x1D44	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1219 :: 		
0x1D46	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1220 :: 		
0x1D48	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1221 :: 		
0x1D4A	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1222 :: 		
0x1D4C	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1223 :: 		
0x1D4E	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1224 :: 		
0x1D50	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1225 :: 		
0x1D52	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1226 :: 		
0x1D54	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1227 :: 		
0x1D56	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1228 :: 		
0x1D58	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1229 :: 		
0x1D5A	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1230 :: 		
0x1D5C	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1231 :: 		
0x1D5E	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1232 :: 		
0x1D60	0x0E01      	MOVLW       1
;__Lib_Math.c,1233 :: 		
0x1D62	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1234 :: 		
0x1D64	0xD011      	BRA         UOK22LA
;__Lib_Math.c,1236 :: 		
UADD22LA:
;__Lib_Math.c,1237 :: 		
0x1D66	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1238 :: 		
0x1D68	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1239 :: 		
0x1D6A	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1240 :: 		
0x1D6C	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1241 :: 		
0x1D6E	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1242 :: 		
0x1D70	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1243 :: 		
0x1D72	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1244 :: 		
0x1D74	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1245 :: 		
0x1D76	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1246 :: 		
0x1D78	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1247 :: 		
0x1D7A	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1248 :: 		
0x1D7C	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1249 :: 		
0x1D7E	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1250 :: 		
0x1D80	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1251 :: 		
0x1D82	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1252 :: 		
0x1D84	0x0E01      	MOVLW       1
;__Lib_Math.c,1253 :: 		
0x1D86	0x260E      	ADDWF       R14, 1, 0
;__Lib_Math.c,1255 :: 		
UOK22LA:
;__Lib_Math.c,1256 :: 		
0x1D88	0x3603      	RLCF        R3, 1, 0
;__Lib_Math.c,1258 :: 		
0x1D8A	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,1259 :: 		
0x1D8C	0xD7D1      	BRA         LOOPU3232A
;__Lib_Math.c,1261 :: 		
0x1D8E	0x3402      	RLCF        R2, 0, 0
;__Lib_Math.c,1262 :: 		
0x1D90	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1263 :: 		
0x1D92	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,1264 :: 		
0x1D94	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,1265 :: 		
0x1D96	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,1266 :: 		
0x1D98	0x360E      	RLCF        R14, 1, 0
;__Lib_Math.c,1267 :: 		
0x1D9A	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1268 :: 		
0x1D9C	0xA003      	BTFSS       R3, 0, 0
;__Lib_Math.c,1269 :: 		
0x1D9E	0xD012      	BRA         UADD22L8
;__Lib_Math.c,1271 :: 		
0x1DA0	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1272 :: 		
0x1DA2	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1273 :: 		
0x1DA4	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1274 :: 		
0x1DA6	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1275 :: 		
0x1DA8	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1276 :: 		
0x1DAA	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1277 :: 		
0x1DAC	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1278 :: 		
0x1DAE	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1279 :: 		
0x1DB0	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1280 :: 		
0x1DB2	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1281 :: 		
0x1DB4	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1282 :: 		
0x1DB6	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1283 :: 		
0x1DB8	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1284 :: 		
0x1DBA	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1285 :: 		
0x1DBC	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1286 :: 		
0x1DBE	0x0E01      	MOVLW       1
;__Lib_Math.c,1287 :: 		
0x1DC0	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1288 :: 		
0x1DC2	0xD011      	BRA         UOK22L8
;__Lib_Math.c,1290 :: 		
UADD22L8:
;__Lib_Math.c,1291 :: 		
0x1DC4	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1292 :: 		
0x1DC6	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1293 :: 		
0x1DC8	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1294 :: 		
0x1DCA	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1295 :: 		
0x1DCC	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1296 :: 		
0x1DCE	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1297 :: 		
0x1DD0	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1298 :: 		
0x1DD2	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1299 :: 		
0x1DD4	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1300 :: 		
0x1DD6	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1301 :: 		
0x1DD8	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1302 :: 		
0x1DDA	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1303 :: 		
0x1DDC	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1304 :: 		
0x1DDE	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1305 :: 		
0x1DE0	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1306 :: 		
0x1DE2	0x0E01      	MOVLW       1
;__Lib_Math.c,1307 :: 		
0x1DE4	0x260E      	ADDWF       R14, 1, 0
;__Lib_Math.c,1309 :: 		
UOK22L8:
;__Lib_Math.c,1310 :: 		
0x1DE6	0x3602      	RLCF        R2, 1, 0
;__Lib_Math.c,1312 :: 		
0x1DE8	0x0E07      	MOVLW       7
;__Lib_Math.c,1313 :: 		
0x1DEA	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,1315 :: 		
LOOPU3232B:
;__Lib_Math.c,1316 :: 		
0x1DEC	0x3402      	RLCF        R2, 0, 0
;__Lib_Math.c,1317 :: 		
0x1DEE	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1318 :: 		
0x1DF0	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,1319 :: 		
0x1DF2	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,1320 :: 		
0x1DF4	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,1321 :: 		
0x1DF6	0x360E      	RLCF        R14, 1, 0
;__Lib_Math.c,1322 :: 		
0x1DF8	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1323 :: 		
0x1DFA	0xA002      	BTFSS       R2, 0, 0
;__Lib_Math.c,1324 :: 		
0x1DFC	0xD012      	BRA         UADD22LB
;__Lib_Math.c,1326 :: 		
0x1DFE	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1327 :: 		
0x1E00	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1328 :: 		
0x1E02	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1329 :: 		
0x1E04	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1330 :: 		
0x1E06	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1331 :: 		
0x1E08	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1332 :: 		
0x1E0A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1333 :: 		
0x1E0C	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1334 :: 		
0x1E0E	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1335 :: 		
0x1E10	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1336 :: 		
0x1E12	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1337 :: 		
0x1E14	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1338 :: 		
0x1E16	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1339 :: 		
0x1E18	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1340 :: 		
0x1E1A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1341 :: 		
0x1E1C	0x0E01      	MOVLW       1
;__Lib_Math.c,1342 :: 		
0x1E1E	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1343 :: 		
0x1E20	0xD011      	BRA         UOK22LB
;__Lib_Math.c,1345 :: 		
UADD22LB:
;__Lib_Math.c,1346 :: 		
0x1E22	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1347 :: 		
0x1E24	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1348 :: 		
0x1E26	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1349 :: 		
0x1E28	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1350 :: 		
0x1E2A	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1351 :: 		
0x1E2C	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1352 :: 		
0x1E2E	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1353 :: 		
0x1E30	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1354 :: 		
0x1E32	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1355 :: 		
0x1E34	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1356 :: 		
0x1E36	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1357 :: 		
0x1E38	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1358 :: 		
0x1E3A	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1359 :: 		
0x1E3C	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1360 :: 		
0x1E3E	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1361 :: 		
0x1E40	0x0E01      	MOVLW       1
;__Lib_Math.c,1362 :: 		
0x1E42	0x260E      	ADDWF       R14, 1, 0
;__Lib_Math.c,1364 :: 		
UOK22LB:
;__Lib_Math.c,1365 :: 		
0x1E44	0x3602      	RLCF        R2, 1, 0
;__Lib_Math.c,1367 :: 		
0x1E46	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,1368 :: 		
0x1E48	0xD7D1      	BRA         LOOPU3232B
;__Lib_Math.c,1370 :: 		
0x1E4A	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,1371 :: 		
0x1E4C	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1372 :: 		
0x1E4E	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,1373 :: 		
0x1E50	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,1374 :: 		
0x1E52	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,1375 :: 		
0x1E54	0x360E      	RLCF        R14, 1, 0
;__Lib_Math.c,1376 :: 		
0x1E56	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1377 :: 		
0x1E58	0xA002      	BTFSS       R2, 0, 0
;__Lib_Math.c,1378 :: 		
0x1E5A	0xD012      	BRA         UADD22L16
;__Lib_Math.c,1380 :: 		
0x1E5C	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1381 :: 		
0x1E5E	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1382 :: 		
0x1E60	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1383 :: 		
0x1E62	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1384 :: 		
0x1E64	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1385 :: 		
0x1E66	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1386 :: 		
0x1E68	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1387 :: 		
0x1E6A	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1388 :: 		
0x1E6C	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1389 :: 		
0x1E6E	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1390 :: 		
0x1E70	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1391 :: 		
0x1E72	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1392 :: 		
0x1E74	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1393 :: 		
0x1E76	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1394 :: 		
0x1E78	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1395 :: 		
0x1E7A	0x0E01      	MOVLW       1
;__Lib_Math.c,1396 :: 		
0x1E7C	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1397 :: 		
0x1E7E	0xD011      	BRA         UOK22L16
;__Lib_Math.c,1399 :: 		
UADD22L16:
;__Lib_Math.c,1400 :: 		
0x1E80	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1401 :: 		
0x1E82	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1402 :: 		
0x1E84	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1403 :: 		
0x1E86	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1404 :: 		
0x1E88	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1405 :: 		
0x1E8A	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1406 :: 		
0x1E8C	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1407 :: 		
0x1E8E	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1408 :: 		
0x1E90	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1409 :: 		
0x1E92	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1410 :: 		
0x1E94	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1411 :: 		
0x1E96	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1412 :: 		
0x1E98	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1413 :: 		
0x1E9A	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1414 :: 		
0x1E9C	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1415 :: 		
0x1E9E	0x0E01      	MOVLW       1
;__Lib_Math.c,1416 :: 		
0x1EA0	0x260E      	ADDWF       R14, 1, 0
;__Lib_Math.c,1418 :: 		
UOK22L16:
;__Lib_Math.c,1419 :: 		
0x1EA2	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,1421 :: 		
0x1EA4	0x0E07      	MOVLW       7
;__Lib_Math.c,1422 :: 		
0x1EA6	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,1424 :: 		
LOOPU3232C:
;__Lib_Math.c,1425 :: 		
0x1EA8	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,1426 :: 		
0x1EAA	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1427 :: 		
0x1EAC	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,1428 :: 		
0x1EAE	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,1429 :: 		
0x1EB0	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,1430 :: 		
0x1EB2	0x360E      	RLCF        R14, 1, 0
;__Lib_Math.c,1431 :: 		
0x1EB4	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1432 :: 		
0x1EB6	0xA001      	BTFSS       R1, 0, 0
;__Lib_Math.c,1433 :: 		
0x1EB8	0xD012      	BRA         UADD22LC
;__Lib_Math.c,1435 :: 		
0x1EBA	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1436 :: 		
0x1EBC	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1437 :: 		
0x1EBE	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1438 :: 		
0x1EC0	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1439 :: 		
0x1EC2	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1440 :: 		
0x1EC4	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1441 :: 		
0x1EC6	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1442 :: 		
0x1EC8	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1443 :: 		
0x1ECA	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1444 :: 		
0x1ECC	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1445 :: 		
0x1ECE	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1446 :: 		
0x1ED0	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1447 :: 		
0x1ED2	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1448 :: 		
0x1ED4	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1449 :: 		
0x1ED6	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1450 :: 		
0x1ED8	0x0E01      	MOVLW       1
;__Lib_Math.c,1451 :: 		
0x1EDA	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1452 :: 		
0x1EDC	0xD011      	BRA         UOK22LC
;__Lib_Math.c,1454 :: 		
UADD22LC:
;__Lib_Math.c,1455 :: 		
0x1EDE	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1456 :: 		
0x1EE0	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1457 :: 		
0x1EE2	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1458 :: 		
0x1EE4	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1459 :: 		
0x1EE6	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1460 :: 		
0x1EE8	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1461 :: 		
0x1EEA	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1462 :: 		
0x1EEC	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1463 :: 		
0x1EEE	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1464 :: 		
0x1EF0	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1465 :: 		
0x1EF2	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1466 :: 		
0x1EF4	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1467 :: 		
0x1EF6	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1468 :: 		
0x1EF8	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1469 :: 		
0x1EFA	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1470 :: 		
0x1EFC	0x0E01      	MOVLW       1
;__Lib_Math.c,1471 :: 		
0x1EFE	0x260E      	ADDWF       R14, 1, 0
;__Lib_Math.c,1473 :: 		
UOK22LC:
;__Lib_Math.c,1474 :: 		
0x1F00	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,1476 :: 		
0x1F02	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,1477 :: 		
0x1F04	0xD7D1      	BRA         LOOPU3232C
;__Lib_Math.c,1479 :: 		
0x1F06	0x3400      	RLCF        R0, 0, 0
;__Lib_Math.c,1480 :: 		
0x1F08	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1481 :: 		
0x1F0A	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,1482 :: 		
0x1F0C	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,1483 :: 		
0x1F0E	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,1484 :: 		
0x1F10	0x360E      	RLCF        R14, 1, 0
;__Lib_Math.c,1485 :: 		
0x1F12	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1486 :: 		
0x1F14	0xA001      	BTFSS       R1, 0, 0
;__Lib_Math.c,1487 :: 		
0x1F16	0xD012      	BRA         UADD22L24
;__Lib_Math.c,1489 :: 		
0x1F18	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1490 :: 		
0x1F1A	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1491 :: 		
0x1F1C	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1492 :: 		
0x1F1E	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1493 :: 		
0x1F20	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1494 :: 		
0x1F22	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1495 :: 		
0x1F24	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1496 :: 		
0x1F26	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1497 :: 		
0x1F28	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1498 :: 		
0x1F2A	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1499 :: 		
0x1F2C	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1500 :: 		
0x1F2E	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1501 :: 		
0x1F30	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1502 :: 		
0x1F32	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1503 :: 		
0x1F34	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1504 :: 		
0x1F36	0x0E01      	MOVLW       1
;__Lib_Math.c,1505 :: 		
0x1F38	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1506 :: 		
0x1F3A	0xD011      	BRA         UOK22L24
;__Lib_Math.c,1508 :: 		
UADD22L24:
;__Lib_Math.c,1509 :: 		
0x1F3C	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1510 :: 		
0x1F3E	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1511 :: 		
0x1F40	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1512 :: 		
0x1F42	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1513 :: 		
0x1F44	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1514 :: 		
0x1F46	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1515 :: 		
0x1F48	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1516 :: 		
0x1F4A	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1517 :: 		
0x1F4C	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1518 :: 		
0x1F4E	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1519 :: 		
0x1F50	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1520 :: 		
0x1F52	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1521 :: 		
0x1F54	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1522 :: 		
0x1F56	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1523 :: 		
0x1F58	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1524 :: 		
0x1F5A	0x0E01      	MOVLW       1
;__Lib_Math.c,1525 :: 		
0x1F5C	0x260E      	ADDWF       R14, 1, 0
;__Lib_Math.c,1527 :: 		
UOK22L24:
;__Lib_Math.c,1528 :: 		
0x1F5E	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,1530 :: 		
0x1F60	0x0E07      	MOVLW       7
;__Lib_Math.c,1531 :: 		
0x1F62	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,1533 :: 		
LOOPU3232D:
;__Lib_Math.c,1534 :: 		
0x1F64	0x3400      	RLCF        R0, 0, 0
;__Lib_Math.c,1535 :: 		
0x1F66	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1536 :: 		
0x1F68	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,1537 :: 		
0x1F6A	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,1538 :: 		
0x1F6C	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,1539 :: 		
0x1F6E	0x360E      	RLCF        R14, 1, 0
;__Lib_Math.c,1540 :: 		
0x1F70	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1541 :: 		
0x1F72	0xA000      	BTFSS       R0, 0, 0
;__Lib_Math.c,1542 :: 		
0x1F74	0xD012      	BRA         UADD22LD
;__Lib_Math.c,1544 :: 		
0x1F76	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1545 :: 		
0x1F78	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1546 :: 		
0x1F7A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1547 :: 		
0x1F7C	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1548 :: 		
0x1F7E	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1549 :: 		
0x1F80	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1550 :: 		
0x1F82	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1551 :: 		
0x1F84	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1552 :: 		
0x1F86	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1553 :: 		
0x1F88	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1554 :: 		
0x1F8A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1555 :: 		
0x1F8C	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1556 :: 		
0x1F8E	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1557 :: 		
0x1F90	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1558 :: 		
0x1F92	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1559 :: 		
0x1F94	0x0E01      	MOVLW       1
;__Lib_Math.c,1560 :: 		
0x1F96	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1561 :: 		
0x1F98	0xD011      	BRA         UOK22LD
;__Lib_Math.c,1563 :: 		
UADD22LD:
;__Lib_Math.c,1564 :: 		
0x1F9A	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1565 :: 		
0x1F9C	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1566 :: 		
0x1F9E	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1567 :: 		
0x1FA0	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1568 :: 		
0x1FA2	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1569 :: 		
0x1FA4	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1570 :: 		
0x1FA6	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1571 :: 		
0x1FA8	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1572 :: 		
0x1FAA	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1573 :: 		
0x1FAC	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1574 :: 		
0x1FAE	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1575 :: 		
0x1FB0	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1576 :: 		
0x1FB2	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1577 :: 		
0x1FB4	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1578 :: 		
0x1FB6	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1579 :: 		
0x1FB8	0x0E01      	MOVLW       1
;__Lib_Math.c,1580 :: 		
0x1FBA	0x260E      	ADDWF       R14, 1, 0
;__Lib_Math.c,1582 :: 		
UOK22LD:
;__Lib_Math.c,1583 :: 		
0x1FBC	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,1585 :: 		
0x1FBE	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,1586 :: 		
0x1FC0	0xD7D1      	BRA         LOOPU3232D
;__Lib_Math.c,1588 :: 		
0x1FC2	0xB000      	BTFSC       R0, 0, 0
;__Lib_Math.c,1589 :: 		
0x1FC4	0xD00E      	BRA         UOK22L
;__Lib_Math.c,1590 :: 		
0x1FC6	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1591 :: 		
0x1FC8	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1592 :: 		
0x1FCA	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1593 :: 		
0x1FCC	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1594 :: 		
0x1FCE	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1595 :: 		
0x1FD0	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1596 :: 		
0x1FD2	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1597 :: 		
0x1FD4	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1598 :: 		
0x1FD6	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1599 :: 		
0x1FD8	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1600 :: 		
0x1FDA	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1601 :: 		
0x1FDC	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1602 :: 		
0x1FDE	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1603 :: 		
0x1FE0	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1605 :: 		
UOK22L:
;__Lib_Math.c,1607 :: 		
L_end_Div_32x32_U:
0x1FE2	0x0012      	RETURN      0
; end of _Div_32x32_U
_SETFDZ32:
;__Lib_MathDouble.c,106 :: 		
;__Lib_MathDouble.c,110 :: 		
0x1FE4	0x6A0B      	CLRF        R11, 0
;__Lib_MathDouble.c,111 :: 		
0x1FE6	0x860B      	BSF         R11, 3, 0
;__Lib_MathDouble.c,112 :: 		
0x1FE8	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,114 :: 		
L_end_SETFDZ32:
0x1FEA	0x0012      	RETURN      0
; end of _SETFDZ32
_usart_write:
;lib_usart.h,94 :: 		void usart_write(char caracter){
;lib_usart.h,95 :: 		TXREG = caracter;
0x1FEC	0xFFADC523  	MOVFF       FARG_usart_write_caracter, TXREG
;lib_usart.h,96 :: 		while(!TXSTA.TRMT);  //Esperar a que el buffer se vacie
L_usart_write119:
0x1FF0	0xB2AC      	BTFSC       TXSTA, 1 
0x1FF2	0xD001      	BRA         L_usart_write120
0x1FF4	0xD7FD      	BRA         L_usart_write119
L_usart_write120:
;lib_usart.h,97 :: 		}
L_end_usart_write:
0x1FF6	0x0012      	RETURN      0
; end of _usart_write
_timer1_reset:
;lib_timer1.h,57 :: 		void timer1_reset(){
;lib_timer1.h,58 :: 		TMR1H = getByte(sampler1,1);
0x1FF8	0xFFCFC49E  	MOVFF       _sampler1+1, TMR1H
;lib_timer1.h,59 :: 		TMR1L = getByte(sampler1,0);
0x1FFC	0xFFCEC49D  	MOVFF       _sampler1, TMR1L
;lib_timer1.h,60 :: 		}
L_end_timer1_reset:
0x2000	0x0012      	RETURN      0
; end of _timer1_reset
_lcd_out:
;lcd_4x20.h,113 :: 		void lcd_out(char fila, char col, char *texto){
;lcd_4x20.h,114 :: 		char cont = 0;
0x2002	0x0105      	MOVLB       5
0x2004	0x6B27      	CLRF        lcd_out_cont_L0, 1
;lcd_4x20.h,116 :: 		lcd_gotoxy(fila, col);
0x2006	0xF53BC523  	MOVFF       FARG_lcd_out_fila, FARG_lcd_gotoxy_fila
0x200A	0xF53CC524  	MOVFF       FARG_lcd_out_col, FARG_lcd_gotoxy_col
0x200E	0xF003ECF6  	CALL        _lcd_gotoxy, 0
;lcd_4x20.h,117 :: 		while(texto[cont])
L_lcd_out650:
0x2012	0x5127      	MOVF        lcd_out_cont_L0, 0, 1
0x2014	0x2525      	ADDWF       FARG_lcd_out_texto, 0, 1
0x2016	0x6EE9      	MOVWF       FSR0L 
0x2018	0x0E00      	MOVLW       0
0x201A	0x2126      	ADDWFC      FARG_lcd_out_texto+1, 0, 1
0x201C	0x6EEA      	MOVWF       FSR0H 
0x201E	0x52EE      	MOVF        POSTINC0, 1 
0x2020	0xE00E      	BZ          L_lcd_out651
;lcd_4x20.h,118 :: 		lcd_send_byte(1, texto[cont++]);
0x2022	0x0E01      	MOVLW       1
0x2024	0x6F47      	MOVWF       FARG_lcd_send_byte_address, 1
0x2026	0x5127      	MOVF        lcd_out_cont_L0, 0, 1
0x2028	0x2525      	ADDWF       FARG_lcd_out_texto, 0, 1
0x202A	0x6EE9      	MOVWF       FSR0L 
0x202C	0x0E00      	MOVLW       0
0x202E	0x2126      	ADDWFC      FARG_lcd_out_texto+1, 0, 1
0x2030	0x6EEA      	MOVWF       FSR0H 
0x2032	0xF548CFEE  	MOVFF       POSTINC0, FARG_lcd_send_byte_enviar
0x2036	0xF002EC7C  	CALL        _lcd_send_byte, 0
0x203A	0x2B27      	INCF        lcd_out_cont_L0, 1, 1
0x203C	0xD7EA      	BRA         L_lcd_out650
L_lcd_out651:
;lcd_4x20.h,119 :: 		}
L_end_lcd_out:
0x203E	0x0012      	RETURN      0
; end of _lcd_out
_string_toUpper:
;string.h,258 :: 		char* string_toUpper(char *cadena){
;string.h,259 :: 		char cont = 0;
0x2040	0x0105      	MOVLB       5
0x2042	0x6B25      	CLRF        string_toUpper_cont_L0, 1
;string.h,260 :: 		while(cadena[cont] != 0){
L_string_toUpper96:
0x2044	0x5125      	MOVF        string_toUpper_cont_L0, 0, 1
0x2046	0x2523      	ADDWF       FARG_string_toUpper_cadena, 0, 1
0x2048	0x6EE9      	MOVWF       FSR0L 
0x204A	0x0E00      	MOVLW       0
0x204C	0x2124      	ADDWFC      FARG_string_toUpper_cadena+1, 0, 1
0x204E	0x6EEA      	MOVWF       FSR0H 
0x2050	0x50EE      	MOVF        POSTINC0, 0 
0x2052	0x0A00      	XORLW       0
0x2054	0xE027      	BZ          L_string_toUpper97
;string.h,261 :: 		if(cadena[cont] >= 'a' && cadena[cont] <= 'z')
0x2056	0x5125      	MOVF        string_toUpper_cont_L0, 0, 1
0x2058	0x2523      	ADDWF       FARG_string_toUpper_cadena, 0, 1
0x205A	0x6EE9      	MOVWF       FSR0L 
0x205C	0x0E00      	MOVLW       0
0x205E	0x2124      	ADDWFC      FARG_string_toUpper_cadena+1, 0, 1
0x2060	0x6EEA      	MOVWF       FSR0H 
0x2062	0x0E61      	MOVLW       97
0x2064	0x5CEE      	SUBWF       POSTINC0, 0 
0x2066	0xE31C      	BNC         L_string_toUpper100
0x2068	0x5125      	MOVF        string_toUpper_cont_L0, 0, 1
0x206A	0x2523      	ADDWF       FARG_string_toUpper_cadena, 0, 1
0x206C	0x6EE9      	MOVWF       FSR0L 
0x206E	0x0E00      	MOVLW       0
0x2070	0x2124      	ADDWFC      FARG_string_toUpper_cadena+1, 0, 1
0x2072	0x6EEA      	MOVWF       FSR0H 
0x2074	0x50EE      	MOVF        POSTINC0, 0 
0x2076	0x087A      	SUBLW       122
0x2078	0xE313      	BNC         L_string_toUpper100
L__string_toUpper949:
;string.h,262 :: 		cadena[cont] -= 'a'-'A'; //a = 97, A = 65
0x207A	0x5125      	MOVF        string_toUpper_cont_L0, 0, 1
0x207C	0x2523      	ADDWF       FARG_string_toUpper_cadena, 0, 1
0x207E	0x6E01      	MOVWF       R1 
0x2080	0x0E00      	MOVLW       0
0x2082	0x2124      	ADDWFC      FARG_string_toUpper_cadena+1, 0, 1
0x2084	0x6E02      	MOVWF       R2 
0x2086	0xFFE9C001  	MOVFF       R1, FSR0L
0x208A	0xFFEAC002  	MOVFF       R2, FSR0H
0x208E	0x0E20      	MOVLW       32
0x2090	0x5CEE      	SUBWF       POSTINC0, 0 
0x2092	0x6E00      	MOVWF       R0 
0x2094	0xFFE1C001  	MOVFF       R1, FSR1L
0x2098	0xFFE2C002  	MOVFF       R2, FSR1H
0x209C	0xFFE6C000  	MOVFF       R0, POSTINC1
L_string_toUpper100:
;string.h,263 :: 		cont++;
0x20A0	0x2B25      	INCF        string_toUpper_cont_L0, 1, 1
;string.h,264 :: 		}
0x20A2	0xD7D0      	BRA         L_string_toUpper96
L_string_toUpper97:
;string.h,265 :: 		return cadena;
0x20A4	0xF000C523  	MOVFF       FARG_string_toUpper_cadena, R0
0x20A8	0xF001C524  	MOVFF       FARG_string_toUpper_cadena+1, R1
;string.h,266 :: 		}
L_end_string_toUpper:
0x20AC	0x0012      	RETURN      0
; end of _string_toUpper
_timer1_enable:
;lib_timer1.h,45 :: 		void timer1_enable(bool enable){
;lib_timer1.h,46 :: 		PIE1.TMR1IE = enable;
0x20AE	0x0105      	MOVLB       5
0x20B0	0xB123      	BTFSC       FARG_timer1_enable_enable, 0, 1
0x20B2	0xD002      	BRA         L__timer1_enable1061
0x20B4	0x909D      	BCF         PIE1, 0 
0x20B6	0xD001      	BRA         L__timer1_enable1062
L__timer1_enable1061:
0x20B8	0x809D      	BSF         PIE1, 0 
L__timer1_enable1062:
;lib_timer1.h,47 :: 		}
L_end_timer1_enable:
0x20BA	0x0012      	RETURN      0
; end of _timer1_enable
_hexToNum:
;string.h,233 :: 		long hexToNum(char *hex){
;string.h,235 :: 		char ref = strlen(hex)-1;
0x20BC	0xF531C523  	MOVFF       FARG_hexToNum_hex, FARG_strlen_s
0x20C0	0xF532C524  	MOVFF       FARG_hexToNum_hex+1, FARG_strlen_s+1
0x20C4	0xF00BEC16  	CALL        _strlen, 0
0x20C8	0x0E01      	MOVLW       1
0x20CA	0x5E00      	SUBWF       R0, 1 
0x20CC	0x0E00      	MOVLW       0
0x20CE	0x5A01      	SUBWFB      R1, 1 
0x20D0	0xF526C000  	MOVFF       R0, hexToNum_ref_L0
;string.h,236 :: 		long valor = 0;
0x20D4	0x6B27      	CLRF        hexToNum_valor_L0, 1
0x20D6	0x6B28      	CLRF        hexToNum_valor_L0+1, 1
0x20D8	0x6B29      	CLRF        hexToNum_valor_L0+2, 1
0x20DA	0x6B2A      	CLRF        hexToNum_valor_L0+3, 1
;string.h,239 :: 		for(cont = 0; cont < 8 && hex[cont]; cont++, ref--){
0x20DC	0x6B25      	CLRF        hexToNum_cont_L0, 1
L_hexToNum78:
0x20DE	0x0E08      	MOVLW       8
0x20E0	0x5D25      	SUBWF       hexToNum_cont_L0, 0, 1
0x20E2	0xB0D8      	BTFSC       STATUS, 0 
0x20E4	0xD0D1      	BRA         L_hexToNum79
0x20E6	0x5125      	MOVF        hexToNum_cont_L0, 0, 1
0x20E8	0x2523      	ADDWF       FARG_hexToNum_hex, 0, 1
0x20EA	0x6EE9      	MOVWF       FSR0L 
0x20EC	0x0E00      	MOVLW       0
0x20EE	0x2124      	ADDWFC      FARG_hexToNum_hex+1, 0, 1
0x20F0	0x6EEA      	MOVWF       FSR0H 
0x20F2	0x52EE      	MOVF        POSTINC0, 1 
0x20F4	0xB4D8      	BTFSC       STATUS, 2 
0x20F6	0xD0C8      	BRA         L_hexToNum79
L__hexToNum948:
;string.h,241 :: 		if(hex[cont] >= '0' && hex[cont] <= '9')
0x20F8	0x5125      	MOVF        hexToNum_cont_L0, 0, 1
0x20FA	0x2523      	ADDWF       FARG_hexToNum_hex, 0, 1
0x20FC	0x6EE9      	MOVWF       FSR0L 
0x20FE	0x0E00      	MOVLW       0
0x2100	0x2124      	ADDWFC      FARG_hexToNum_hex+1, 0, 1
0x2102	0x6EEA      	MOVWF       FSR0H 
0x2104	0x0E30      	MOVLW       48
0x2106	0x5CEE      	SUBWF       POSTINC0, 0 
0x2108	0xE32B      	BNC         L_hexToNum85
0x210A	0x5125      	MOVF        hexToNum_cont_L0, 0, 1
0x210C	0x2523      	ADDWF       FARG_hexToNum_hex, 0, 1
0x210E	0x6EE9      	MOVWF       FSR0L 
0x2110	0x0E00      	MOVLW       0
0x2112	0x2124      	ADDWFC      FARG_hexToNum_hex+1, 0, 1
0x2114	0x6EEA      	MOVWF       FSR0H 
0x2116	0x50EE      	MOVF        POSTINC0, 0 
0x2118	0x0839      	SUBLW       57
0x211A	0xE322      	BNC         L_hexToNum85
L__hexToNum947:
;string.h,242 :: 		getByte(valor, ref/2) |= hex[cont] - '0';
0x211C	0xF000C526  	MOVFF       hexToNum_ref_L0, R0
0x2120	0x3200      	RRCF        R0, 1 
0x2122	0x9E00      	BCF         R0, 7 
0x2124	0x0E27      	MOVLW       hexToNum_valor_L0
0x2126	0x6E01      	MOVWF       R1 
0x2128	0x0E05      	MOVLW       hi_addr(hexToNum_valor_L0)
0x212A	0x6E02      	MOVWF       R2 
0x212C	0x5000      	MOVF        R0, 0 
0x212E	0x2601      	ADDWF       R1, 1 
0x2130	0xB0D8      	BTFSC       STATUS, 0 
0x2132	0x2A02      	INCF        R2, 1 
0x2134	0x5125      	MOVF        hexToNum_cont_L0, 0, 1
0x2136	0x2523      	ADDWF       FARG_hexToNum_hex, 0, 1
0x2138	0x6EE9      	MOVWF       FSR0L 
0x213A	0x0E00      	MOVLW       0
0x213C	0x2124      	ADDWFC      FARG_hexToNum_hex+1, 0, 1
0x213E	0x6EEA      	MOVWF       FSR0H 
0x2140	0x0E30      	MOVLW       48
0x2142	0x5CEE      	SUBWF       POSTINC0, 0 
0x2144	0x6E00      	MOVWF       R0 
0x2146	0xFFE9C001  	MOVFF       R1, FSR0L
0x214A	0xFFEAC002  	MOVFF       R2, FSR0H
0x214E	0x50EE      	MOVF        POSTINC0, 0 
0x2150	0x1200      	IORWF       R0, 1 
0x2152	0xFFE1C001  	MOVFF       R1, FSR1L
0x2156	0xFFE2C002  	MOVFF       R2, FSR1H
0x215A	0xFFE6C000  	MOVFF       R0, POSTINC1
0x215E	0xD06D      	BRA         L_hexToNum86
L_hexToNum85:
;string.h,243 :: 		else if(hex[cont] >= 'a' && hex[cont] <= 'f')
0x2160	0x5125      	MOVF        hexToNum_cont_L0, 0, 1
0x2162	0x2523      	ADDWF       FARG_hexToNum_hex, 0, 1
0x2164	0x6EE9      	MOVWF       FSR0L 
0x2166	0x0E00      	MOVLW       0
0x2168	0x2124      	ADDWFC      FARG_hexToNum_hex+1, 0, 1
0x216A	0x6EEA      	MOVWF       FSR0H 
0x216C	0x0E61      	MOVLW       97
0x216E	0x5CEE      	SUBWF       POSTINC0, 0 
0x2170	0xE32D      	BNC         L_hexToNum89
0x2172	0x5125      	MOVF        hexToNum_cont_L0, 0, 1
0x2174	0x2523      	ADDWF       FARG_hexToNum_hex, 0, 1
0x2176	0x6EE9      	MOVWF       FSR0L 
0x2178	0x0E00      	MOVLW       0
0x217A	0x2124      	ADDWFC      FARG_hexToNum_hex+1, 0, 1
0x217C	0x6EEA      	MOVWF       FSR0H 
0x217E	0x50EE      	MOVF        POSTINC0, 0 
0x2180	0x0866      	SUBLW       102
0x2182	0xE324      	BNC         L_hexToNum89
L__hexToNum946:
;string.h,244 :: 		getByte(valor, ref/2) |= 10+(hex[cont] - 'a');
0x2184	0xF000C526  	MOVFF       hexToNum_ref_L0, R0
0x2188	0x3200      	RRCF        R0, 1 
0x218A	0x9E00      	BCF         R0, 7 
0x218C	0x0E27      	MOVLW       hexToNum_valor_L0
0x218E	0x6E01      	MOVWF       R1 
0x2190	0x0E05      	MOVLW       hi_addr(hexToNum_valor_L0)
0x2192	0x6E02      	MOVWF       R2 
0x2194	0x5000      	MOVF        R0, 0 
0x2196	0x2601      	ADDWF       R1, 1 
0x2198	0xB0D8      	BTFSC       STATUS, 0 
0x219A	0x2A02      	INCF        R2, 1 
0x219C	0x5125      	MOVF        hexToNum_cont_L0, 0, 1
0x219E	0x2523      	ADDWF       FARG_hexToNum_hex, 0, 1
0x21A0	0x6EE9      	MOVWF       FSR0L 
0x21A2	0x0E00      	MOVLW       0
0x21A4	0x2124      	ADDWFC      FARG_hexToNum_hex+1, 0, 1
0x21A6	0x6EEA      	MOVWF       FSR0H 
0x21A8	0x0E61      	MOVLW       97
0x21AA	0x5CEE      	SUBWF       POSTINC0, 0 
0x21AC	0x6E00      	MOVWF       R0 
0x21AE	0x0E0A      	MOVLW       10
0x21B0	0x2600      	ADDWF       R0, 1 
0x21B2	0xFFE9C001  	MOVFF       R1, FSR0L
0x21B6	0xFFEAC002  	MOVFF       R2, FSR0H
0x21BA	0x50EE      	MOVF        POSTINC0, 0 
0x21BC	0x1200      	IORWF       R0, 1 
0x21BE	0xFFE1C001  	MOVFF       R1, FSR1L
0x21C2	0xFFE2C002  	MOVFF       R2, FSR1H
0x21C6	0xFFE6C000  	MOVFF       R0, POSTINC1
0x21CA	0xD037      	BRA         L_hexToNum90
L_hexToNum89:
;string.h,245 :: 		else if(hex[cont] >= 'A' && hex[cont] <= 'F')
0x21CC	0x5125      	MOVF        hexToNum_cont_L0, 0, 1
0x21CE	0x2523      	ADDWF       FARG_hexToNum_hex, 0, 1
0x21D0	0x6EE9      	MOVWF       FSR0L 
0x21D2	0x0E00      	MOVLW       0
0x21D4	0x2124      	ADDWFC      FARG_hexToNum_hex+1, 0, 1
0x21D6	0x6EEA      	MOVWF       FSR0H 
0x21D8	0x0E41      	MOVLW       65
0x21DA	0x5CEE      	SUBWF       POSTINC0, 0 
0x21DC	0xE32D      	BNC         L_hexToNum93
0x21DE	0x5125      	MOVF        hexToNum_cont_L0, 0, 1
0x21E0	0x2523      	ADDWF       FARG_hexToNum_hex, 0, 1
0x21E2	0x6EE9      	MOVWF       FSR0L 
0x21E4	0x0E00      	MOVLW       0
0x21E6	0x2124      	ADDWFC      FARG_hexToNum_hex+1, 0, 1
0x21E8	0x6EEA      	MOVWF       FSR0H 
0x21EA	0x50EE      	MOVF        POSTINC0, 0 
0x21EC	0x0846      	SUBLW       70
0x21EE	0xE324      	BNC         L_hexToNum93
L__hexToNum945:
;string.h,246 :: 		getByte(valor, ref/2) |= 10+(hex[cont] - 'A');
0x21F0	0xF000C526  	MOVFF       hexToNum_ref_L0, R0
0x21F4	0x3200      	RRCF        R0, 1 
0x21F6	0x9E00      	BCF         R0, 7 
0x21F8	0x0E27      	MOVLW       hexToNum_valor_L0
0x21FA	0x6E01      	MOVWF       R1 
0x21FC	0x0E05      	MOVLW       hi_addr(hexToNum_valor_L0)
0x21FE	0x6E02      	MOVWF       R2 
0x2200	0x5000      	MOVF        R0, 0 
0x2202	0x2601      	ADDWF       R1, 1 
0x2204	0xB0D8      	BTFSC       STATUS, 0 
0x2206	0x2A02      	INCF        R2, 1 
0x2208	0x5125      	MOVF        hexToNum_cont_L0, 0, 1
0x220A	0x2523      	ADDWF       FARG_hexToNum_hex, 0, 1
0x220C	0x6EE9      	MOVWF       FSR0L 
0x220E	0x0E00      	MOVLW       0
0x2210	0x2124      	ADDWFC      FARG_hexToNum_hex+1, 0, 1
0x2212	0x6EEA      	MOVWF       FSR0H 
0x2214	0x0E41      	MOVLW       65
0x2216	0x5CEE      	SUBWF       POSTINC0, 0 
0x2218	0x6E00      	MOVWF       R0 
0x221A	0x0E0A      	MOVLW       10
0x221C	0x2600      	ADDWF       R0, 1 
0x221E	0xFFE9C001  	MOVFF       R1, FSR0L
0x2222	0xFFEAC002  	MOVFF       R2, FSR0H
0x2226	0x50EE      	MOVF        POSTINC0, 0 
0x2228	0x1200      	IORWF       R0, 1 
0x222A	0xFFE1C001  	MOVFF       R1, FSR1L
0x222E	0xFFE2C002  	MOVFF       R2, FSR1H
0x2232	0xFFE6C000  	MOVFF       R0, POSTINC1
0x2236	0xD001      	BRA         L_hexToNum94
L_hexToNum93:
;string.h,248 :: 		break;  //Fallo la conversion
0x2238	0xD027      	BRA         L_hexToNum79
L_hexToNum94:
L_hexToNum90:
L_hexToNum86:
;string.h,251 :: 		if(ref % 2 == 1)
0x223A	0x0E01      	MOVLW       1
0x223C	0x1526      	ANDWF       hexToNum_ref_L0, 0, 1
0x223E	0x6E01      	MOVWF       R1 
0x2240	0x5001      	MOVF        R1, 0 
0x2242	0x0A01      	XORLW       1
0x2244	0xE11E      	BNZ         L_hexToNum95
;string.h,252 :: 		getByte(valor, ref/2) = swap(getByte(valor, ref/2));
0x2246	0xF000C526  	MOVFF       hexToNum_ref_L0, R0
0x224A	0x3200      	RRCF        R0, 1 
0x224C	0x9E00      	BCF         R0, 7 
0x224E	0x0E27      	MOVLW       hexToNum_valor_L0
0x2250	0x6F2B      	MOVWF       FLOC__hexToNum, 1
0x2252	0x0E05      	MOVLW       hi_addr(hexToNum_valor_L0)
0x2254	0x6F2C      	MOVWF       FLOC__hexToNum+1, 1
0x2256	0x5000      	MOVF        R0, 0 
0x2258	0x272B      	ADDWF       FLOC__hexToNum, 1, 1
0x225A	0xB0D8      	BTFSC       STATUS, 0 
0x225C	0x2B2C      	INCF        FLOC__hexToNum+1, 1, 1
0x225E	0x0E27      	MOVLW       hexToNum_valor_L0
0x2260	0x6EE9      	MOVWF       FSR0L 
0x2262	0x0E05      	MOVLW       hi_addr(hexToNum_valor_L0)
0x2264	0x6EEA      	MOVWF       FSR0H 
0x2266	0x5000      	MOVF        R0, 0 
0x2268	0x26E9      	ADDWF       FSR0L, 1 
0x226A	0xB0D8      	BTFSC       STATUS, 0 
0x226C	0x2AEA      	INCF        FSR0H, 1 
0x226E	0xF549CFEE  	MOVFF       POSTINC0, FARG_Swap_input
0x2272	0xF002EC50  	CALL        _Swap, 0
0x2276	0xFFE1C52B  	MOVFF       FLOC__hexToNum, FSR1L
0x227A	0xFFE2C52C  	MOVFF       FLOC__hexToNum+1, FSR1H
0x227E	0xFFE6C000  	MOVFF       R0, POSTINC1
L_hexToNum95:
;string.h,239 :: 		for(cont = 0; cont < 8 && hex[cont]; cont++, ref--){
0x2282	0x2B25      	INCF        hexToNum_cont_L0, 1, 1
0x2284	0x0726      	DECF        hexToNum_ref_L0, 1, 1
;string.h,253 :: 		}
0x2286	0xD72B      	BRA         L_hexToNum78
L_hexToNum79:
;string.h,255 :: 		return valor;
0x2288	0xF000C527  	MOVFF       hexToNum_valor_L0, R0
0x228C	0xF001C528  	MOVFF       hexToNum_valor_L0+1, R1
0x2290	0xF002C529  	MOVFF       hexToNum_valor_L0+2, R2
0x2294	0xF003C52A  	MOVFF       hexToNum_valor_L0+3, R3
;string.h,256 :: 		}
L_end_hexToNum:
0x2298	0x0012      	RETURN      0
; end of _hexToNum
_mysql_search_forced:
;table_eeprom.h,402 :: 		char mysql_search_forced(char *tabla, char *columna, long buscar, int *fila){
;table_eeprom.h,406 :: 		if(mysql_exist(tabla)){
0x229A	0xF547C523  	MOVFF       FARG_mysql_search_forced_tabla, FARG_mysql_exist_name
0x229E	0xF548C524  	MOVFF       FARG_mysql_search_forced_tabla+1, FARG_mysql_exist_name+1
0x22A2	0xF003EC42  	CALL        _mysql_exist, 0
0x22A6	0x5200      	MOVF        R0, 1 
0x22A8	0xE055      	BZ          L_mysql_search_forced515
;table_eeprom.h,407 :: 		for(*fila = 1; *fila <= myTable.row; (*fila)++){
0x22AA	0xFFE1C52B  	MOVFF       FARG_mysql_search_forced_fila, FSR1L
0x22AE	0xFFE2C52C  	MOVFF       FARG_mysql_search_forced_fila+1, FSR1H
0x22B2	0x0E01      	MOVLW       1
0x22B4	0x6EE6      	MOVWF       POSTINC1 
0x22B6	0x0E00      	MOVLW       0
0x22B8	0x6EE6      	MOVWF       POSTINC1 
L_mysql_search_forced516:
0x22BA	0xFFE9C52B  	MOVFF       FARG_mysql_search_forced_fila, FSR0L
0x22BE	0xFFEAC52C  	MOVFF       FARG_mysql_search_forced_fila+1, FSR0H
0x22C2	0xF001CFEE  	MOVFF       POSTINC0, R1
0x22C6	0xF002CFEE  	MOVFF       POSTINC0, R2
0x22CA	0x5002      	MOVF        R2, 0 
0x22CC	0x0103      	MOVLB       3
0x22CE	0x5D1C      	SUBWF       Expendedora_myTable+3, 0, 1
0x22D0	0xE102      	BNZ         L__mysql_search_forced1300
0x22D2	0x5001      	MOVF        R1, 0 
0x22D4	0x5D1B      	SUBWF       Expendedora_myTable+2, 0, 1
L__mysql_search_forced1300:
0x22D6	0xE33B      	BNC         L_mysql_search_forced517
;table_eeprom.h,409 :: 		if(!mysql_read(tabla, columna, *fila, &busqueda)){
0x22D8	0xF531C523  	MOVFF       FARG_mysql_search_forced_tabla, FARG_mysql_read_name
0x22DC	0xF532C524  	MOVFF       FARG_mysql_search_forced_tabla+1, FARG_mysql_read_name+1
0x22E0	0xF533C525  	MOVFF       FARG_mysql_search_forced_columna, FARG_mysql_read_column
0x22E4	0xF534C526  	MOVFF       FARG_mysql_search_forced_columna+1, FARG_mysql_read_column+1
0x22E8	0xFFE9C52B  	MOVFF       FARG_mysql_search_forced_fila, FSR0L
0x22EC	0xFFEAC52C  	MOVFF       FARG_mysql_search_forced_fila+1, FSR0H
0x22F0	0xF535CFEE  	MOVFF       POSTINC0, FARG_mysql_read_fila
0x22F4	0xF536CFEE  	MOVFF       POSTINC0, FARG_mysql_read_fila+1
0x22F8	0x0E2D      	MOVLW       mysql_search_forced_busqueda_L0
0x22FA	0x0105      	MOVLB       5
0x22FC	0x6F37      	MOVWF       FARG_mysql_read_result, 1
0x22FE	0x0E05      	MOVLW       hi_addr(mysql_search_forced_busqueda_L0)
0x2300	0x6F38      	MOVWF       FARG_mysql_read_result+1, 1
0x2302	0xF00AECAA  	CALL        _mysql_read, 0
0x2306	0x5200      	MOVF        R0, 1 
0x2308	0xE10F      	BNZ         L_mysql_search_forced519
;table_eeprom.h,410 :: 		if(buscar == busqueda)
0x230A	0x0105      	MOVLB       5
0x230C	0x512A      	MOVF        FARG_mysql_search_forced_buscar+3, 0, 1
0x230E	0x1930      	XORWF       mysql_search_forced_busqueda_L0+3, 0, 1
0x2310	0xE108      	BNZ         L__mysql_search_forced1301
0x2312	0x5129      	MOVF        FARG_mysql_search_forced_buscar+2, 0, 1
0x2314	0x192F      	XORWF       mysql_search_forced_busqueda_L0+2, 0, 1
0x2316	0xE105      	BNZ         L__mysql_search_forced1301
0x2318	0x5128      	MOVF        FARG_mysql_search_forced_buscar+1, 0, 1
0x231A	0x192E      	XORWF       mysql_search_forced_busqueda_L0+1, 0, 1
0x231C	0xE102      	BNZ         L__mysql_search_forced1301
0x231E	0x5127      	MOVF        FARG_mysql_search_forced_buscar, 0, 1
0x2320	0x192D      	XORWF       mysql_search_forced_busqueda_L0, 0, 1
L__mysql_search_forced1301:
0x2322	0xE102      	BNZ         L_mysql_search_forced520
;table_eeprom.h,411 :: 		return TABLE_RW_SUCCESS;
0x2324	0x6A00      	CLRF        R0 
0x2326	0xD018      	BRA         L_end_mysql_search_forced
L_mysql_search_forced520:
;table_eeprom.h,412 :: 		}
L_mysql_search_forced519:
;table_eeprom.h,407 :: 		for(*fila = 1; *fila <= myTable.row; (*fila)++){
0x2328	0xFFE9C52B  	MOVFF       FARG_mysql_search_forced_fila, FSR0L
0x232C	0xFFEAC52C  	MOVFF       FARG_mysql_search_forced_fila+1, FSR0H
0x2330	0xF000CFEE  	MOVFF       POSTINC0, R0
0x2334	0xF001CFEE  	MOVFF       POSTINC0, R1
0x2338	0x4A00      	INFSNZ      R0, 1 
0x233A	0x2A01      	INCF        R1, 1 
0x233C	0xFFE1C52B  	MOVFF       FARG_mysql_search_forced_fila, FSR1L
0x2340	0xFFE2C52C  	MOVFF       FARG_mysql_search_forced_fila+1, FSR1H
0x2344	0xFFE6C000  	MOVFF       R0, POSTINC1
0x2348	0xFFE6C001  	MOVFF       R1, POSTINC1
;table_eeprom.h,413 :: 		}
0x234C	0xD7B6      	BRA         L_mysql_search_forced516
L_mysql_search_forced517:
;table_eeprom.h,414 :: 		return TABLE_RW_NO_EXIST_ROW;
0x234E	0x0E03      	MOVLW       3
0x2350	0x6E00      	MOVWF       R0 
0x2352	0xD002      	BRA         L_end_mysql_search_forced
;table_eeprom.h,415 :: 		}
L_mysql_search_forced515:
;table_eeprom.h,417 :: 		return TABLE_RW_NO_EXIST_TABLE;
0x2354	0x0E01      	MOVLW       1
0x2356	0x6E00      	MOVWF       R0 
;table_eeprom.h,418 :: 		}
L_end_mysql_search_forced:
0x2358	0x0012      	RETURN      0
; end of _mysql_search_forced
_DS1307_read:
;ds1307.h,117 :: 		char* DS1307_read(DS1307 *myDS, bool formatComplet){
;ds1307.h,118 :: 		Soft_I2C_Start();               // Issue start signal
0x235A	0xF009EC32  	CALL        _Soft_I2C_Start, 0
;ds1307.h,119 :: 		Soft_I2C_Write(DS1307_ADDRESS); // Address DS1307, see DS1307 datasheet
0x235E	0x0ED0      	MOVLW       208
0x2360	0x0105      	MOVLB       5
0x2362	0x6F31      	MOVWF       FARG_Soft_I2C_Write_data_, 1
0x2364	0xF007ECE4  	CALL        _Soft_I2C_Write, 0
;ds1307.h,120 :: 		Soft_I2C_Write(0x00);           // Start from address 0
0x2368	0x6B31      	CLRF        FARG_Soft_I2C_Write_data_, 1
0x236A	0xF007ECE4  	CALL        _Soft_I2C_Write, 0
;ds1307.h,121 :: 		Soft_I2C_Start();               // Issue repeated start signal
0x236E	0xF009EC32  	CALL        _Soft_I2C_Start, 0
;ds1307.h,122 :: 		Soft_I2C_Write(DS1307_READ);    // Address DS1307 for reading R/W=1
0x2372	0x0ED1      	MOVLW       209
0x2374	0x6F31      	MOVWF       FARG_Soft_I2C_Write_data_, 1
0x2376	0xF007ECE4  	CALL        _Soft_I2C_Write, 0
;ds1307.h,124 :: 		myDS->seconds = Soft_I2C_Read(DS1307_ACK);      // Read seconds
0x237A	0xF526C523  	MOVFF       FARG_DS1307_read_myDS, FLOC__DS1307_read
0x237E	0xF527C524  	MOVFF       FARG_DS1307_read_myDS+1, FLOC__DS1307_read+1
0x2382	0x0E01      	MOVLW       1
0x2384	0x6F31      	MOVWF       FARG_Soft_I2C_Read_ack, 1
0x2386	0x0E00      	MOVLW       0
0x2388	0x6F32      	MOVWF       FARG_Soft_I2C_Read_ack+1, 1
0x238A	0xF00AEC52  	CALL        _Soft_I2C_Read, 0
0x238E	0xFFE1C526  	MOVFF       FLOC__DS1307_read, FSR1L
0x2392	0xFFE2C527  	MOVFF       FLOC__DS1307_read+1, FSR1H
0x2396	0xFFE6C000  	MOVFF       R0, POSTINC1
;ds1307.h,125 :: 		myDS->minutes = Soft_I2C_Read(DS1307_ACK);      // Read minutes
0x239A	0x0E01      	MOVLW       1
0x239C	0x0105      	MOVLB       5
0x239E	0x2523      	ADDWF       FARG_DS1307_read_myDS, 0, 1
0x23A0	0x6F26      	MOVWF       FLOC__DS1307_read, 1
0x23A2	0x0E00      	MOVLW       0
0x23A4	0x2124      	ADDWFC      FARG_DS1307_read_myDS+1, 0, 1
0x23A6	0x6F27      	MOVWF       FLOC__DS1307_read+1, 1
0x23A8	0x0E01      	MOVLW       1
0x23AA	0x6F31      	MOVWF       FARG_Soft_I2C_Read_ack, 1
0x23AC	0x0E00      	MOVLW       0
0x23AE	0x6F32      	MOVWF       FARG_Soft_I2C_Read_ack+1, 1
0x23B0	0xF00AEC52  	CALL        _Soft_I2C_Read, 0
0x23B4	0xFFE1C526  	MOVFF       FLOC__DS1307_read, FSR1L
0x23B8	0xFFE2C527  	MOVFF       FLOC__DS1307_read+1, FSR1H
0x23BC	0xFFE6C000  	MOVFF       R0, POSTINC1
;ds1307.h,126 :: 		myDS->hours = Soft_I2C_Read(DS1307_ACK);        // Read hours
0x23C0	0x0E02      	MOVLW       2
0x23C2	0x0105      	MOVLB       5
0x23C4	0x2523      	ADDWF       FARG_DS1307_read_myDS, 0, 1
0x23C6	0x6F26      	MOVWF       FLOC__DS1307_read, 1
0x23C8	0x0E00      	MOVLW       0
0x23CA	0x2124      	ADDWFC      FARG_DS1307_read_myDS+1, 0, 1
0x23CC	0x6F27      	MOVWF       FLOC__DS1307_read+1, 1
0x23CE	0x0E01      	MOVLW       1
0x23D0	0x6F31      	MOVWF       FARG_Soft_I2C_Read_ack, 1
0x23D2	0x0E00      	MOVLW       0
0x23D4	0x6F32      	MOVWF       FARG_Soft_I2C_Read_ack+1, 1
0x23D6	0xF00AEC52  	CALL        _Soft_I2C_Read, 0
0x23DA	0xFFE1C526  	MOVFF       FLOC__DS1307_read, FSR1L
0x23DE	0xFFE2C527  	MOVFF       FLOC__DS1307_read+1, FSR1H
0x23E2	0xFFE6C000  	MOVFF       R0, POSTINC1
;ds1307.h,127 :: 		myDS->dayOfWeek = Soft_I2C_Read(DS1307_ACK);    // Read day of week
0x23E6	0x0E03      	MOVLW       3
0x23E8	0x0105      	MOVLB       5
0x23EA	0x2523      	ADDWF       FARG_DS1307_read_myDS, 0, 1
0x23EC	0x6F26      	MOVWF       FLOC__DS1307_read, 1
0x23EE	0x0E00      	MOVLW       0
0x23F0	0x2124      	ADDWFC      FARG_DS1307_read_myDS+1, 0, 1
0x23F2	0x6F27      	MOVWF       FLOC__DS1307_read+1, 1
0x23F4	0x0E01      	MOVLW       1
0x23F6	0x6F31      	MOVWF       FARG_Soft_I2C_Read_ack, 1
0x23F8	0x0E00      	MOVLW       0
0x23FA	0x6F32      	MOVWF       FARG_Soft_I2C_Read_ack+1, 1
0x23FC	0xF00AEC52  	CALL        _Soft_I2C_Read, 0
0x2400	0xFFE1C526  	MOVFF       FLOC__DS1307_read, FSR1L
0x2404	0xFFE2C527  	MOVFF       FLOC__DS1307_read+1, FSR1H
0x2408	0xFFE6C000  	MOVFF       R0, POSTINC1
;ds1307.h,128 :: 		myDS->day = Soft_I2C_Read(DS1307_ACK);          // Read day of month
0x240C	0x0E04      	MOVLW       4
0x240E	0x0105      	MOVLB       5
0x2410	0x2523      	ADDWF       FARG_DS1307_read_myDS, 0, 1
0x2412	0x6F26      	MOVWF       FLOC__DS1307_read, 1
0x2414	0x0E00      	MOVLW       0
0x2416	0x2124      	ADDWFC      FARG_DS1307_read_myDS+1, 0, 1
0x2418	0x6F27      	MOVWF       FLOC__DS1307_read+1, 1
0x241A	0x0E01      	MOVLW       1
0x241C	0x6F31      	MOVWF       FARG_Soft_I2C_Read_ack, 1
0x241E	0x0E00      	MOVLW       0
0x2420	0x6F32      	MOVWF       FARG_Soft_I2C_Read_ack+1, 1
0x2422	0xF00AEC52  	CALL        _Soft_I2C_Read, 0
0x2426	0xFFE1C526  	MOVFF       FLOC__DS1307_read, FSR1L
0x242A	0xFFE2C527  	MOVFF       FLOC__DS1307_read+1, FSR1H
0x242E	0xFFE6C000  	MOVFF       R0, POSTINC1
;ds1307.h,129 :: 		myDS->month = Soft_I2C_Read(DS1307_ACK);        // Read mes del año
0x2432	0x0E05      	MOVLW       5
0x2434	0x0105      	MOVLB       5
0x2436	0x2523      	ADDWF       FARG_DS1307_read_myDS, 0, 1
0x2438	0x6F26      	MOVWF       FLOC__DS1307_read, 1
0x243A	0x0E00      	MOVLW       0
0x243C	0x2124      	ADDWFC      FARG_DS1307_read_myDS+1, 0, 1
0x243E	0x6F27      	MOVWF       FLOC__DS1307_read+1, 1
0x2440	0x0E01      	MOVLW       1
0x2442	0x6F31      	MOVWF       FARG_Soft_I2C_Read_ack, 1
0x2444	0x0E00      	MOVLW       0
0x2446	0x6F32      	MOVWF       FARG_Soft_I2C_Read_ack+1, 1
0x2448	0xF00AEC52  	CALL        _Soft_I2C_Read, 0
0x244C	0xFFE1C526  	MOVFF       FLOC__DS1307_read, FSR1L
0x2450	0xFFE2C527  	MOVFF       FLOC__DS1307_read+1, FSR1H
0x2454	0xFFE6C000  	MOVFF       R0, POSTINC1
;ds1307.h,130 :: 		myDS->year = Soft_I2C_Read(DS1307_NO_ACK);      // Read years
0x2458	0x0E06      	MOVLW       6
0x245A	0x0105      	MOVLB       5
0x245C	0x2523      	ADDWF       FARG_DS1307_read_myDS, 0, 1
0x245E	0x6F26      	MOVWF       FLOC__DS1307_read, 1
0x2460	0x0E00      	MOVLW       0
0x2462	0x2124      	ADDWFC      FARG_DS1307_read_myDS+1, 0, 1
0x2464	0x6F27      	MOVWF       FLOC__DS1307_read+1, 1
0x2466	0x6B31      	CLRF        FARG_Soft_I2C_Read_ack, 1
0x2468	0x6B32      	CLRF        FARG_Soft_I2C_Read_ack+1, 1
0x246A	0xF00AEC52  	CALL        _Soft_I2C_Read, 0
0x246E	0xFFE1C526  	MOVFF       FLOC__DS1307_read, FSR1L
0x2472	0xFFE2C527  	MOVFF       FLOC__DS1307_read+1, FSR1H
0x2476	0xFFE6C000  	MOVFF       R0, POSTINC1
;ds1307.h,131 :: 		Soft_I2C_Stop();                                // Issue stop signal
0x247A	0xF006EC10  	CALL        _Soft_I2C_Stop, 0
;ds1307.h,134 :: 		myDS->seconds = bcdToDec(0x7F&myDS->seconds);   //Por el canal CH DS1307
0x247E	0xF526C523  	MOVFF       FARG_DS1307_read_myDS, FLOC__DS1307_read
0x2482	0xF527C524  	MOVFF       FARG_DS1307_read_myDS+1, FLOC__DS1307_read+1
0x2486	0xFFE9C523  	MOVFF       FARG_DS1307_read_myDS, FSR0L
0x248A	0xFFEAC524  	MOVFF       FARG_DS1307_read_myDS+1, FSR0H
0x248E	0xF000CFEE  	MOVFF       POSTINC0, R0
0x2492	0x0E7F      	MOVLW       127
0x2494	0x1400      	ANDWF       R0, 0 
0x2496	0x0105      	MOVLB       5
0x2498	0x6F31      	MOVWF       FARG_bcdToDec_dato, 1
0x249A	0xF00BEC4C  	CALL        _bcdToDec, 0
0x249E	0xFFE1C526  	MOVFF       FLOC__DS1307_read, FSR1L
0x24A2	0xFFE2C527  	MOVFF       FLOC__DS1307_read+1, FSR1H
0x24A6	0xFFE6C000  	MOVFF       R0, POSTINC1
;ds1307.h,135 :: 		myDS->minutes = bcdToDec(myDS->minutes);
0x24AA	0x0E01      	MOVLW       1
0x24AC	0x2523      	ADDWF       FARG_DS1307_read_myDS, 0, 1
0x24AE	0x6F26      	MOVWF       FLOC__DS1307_read, 1
0x24B0	0x0E00      	MOVLW       0
0x24B2	0x2124      	ADDWFC      FARG_DS1307_read_myDS+1, 0, 1
0x24B4	0x6F27      	MOVWF       FLOC__DS1307_read+1, 1
0x24B6	0xFFE9C526  	MOVFF       FLOC__DS1307_read, FSR0L
0x24BA	0xFFEAC527  	MOVFF       FLOC__DS1307_read+1, FSR0H
0x24BE	0xF531CFEE  	MOVFF       POSTINC0, FARG_bcdToDec_dato
0x24C2	0xF00BEC4C  	CALL        _bcdToDec, 0
0x24C6	0xFFE1C526  	MOVFF       FLOC__DS1307_read, FSR1L
0x24CA	0xFFE2C527  	MOVFF       FLOC__DS1307_read+1, FSR1H
0x24CE	0xFFE6C000  	MOVFF       R0, POSTINC1
;ds1307.h,136 :: 		myDS->hours = bcdToDec(myDS->hours);
0x24D2	0x0E02      	MOVLW       2
0x24D4	0x2523      	ADDWF       FARG_DS1307_read_myDS, 0, 1
0x24D6	0x6F26      	MOVWF       FLOC__DS1307_read, 1
0x24D8	0x0E00      	MOVLW       0
0x24DA	0x2124      	ADDWFC      FARG_DS1307_read_myDS+1, 0, 1
0x24DC	0x6F27      	MOVWF       FLOC__DS1307_read+1, 1
0x24DE	0xFFE9C526  	MOVFF       FLOC__DS1307_read, FSR0L
0x24E2	0xFFEAC527  	MOVFF       FLOC__DS1307_read+1, FSR0H
0x24E6	0xF531CFEE  	MOVFF       POSTINC0, FARG_bcdToDec_dato
0x24EA	0xF00BEC4C  	CALL        _bcdToDec, 0
0x24EE	0xFFE1C526  	MOVFF       FLOC__DS1307_read, FSR1L
0x24F2	0xFFE2C527  	MOVFF       FLOC__DS1307_read+1, FSR1H
0x24F6	0xFFE6C000  	MOVFF       R0, POSTINC1
;ds1307.h,137 :: 		myDS->dayOfWeek = bcdToDec(myDS->dayOfWeek);
0x24FA	0x0E03      	MOVLW       3
0x24FC	0x2523      	ADDWF       FARG_DS1307_read_myDS, 0, 1
0x24FE	0x6F26      	MOVWF       FLOC__DS1307_read, 1
0x2500	0x0E00      	MOVLW       0
0x2502	0x2124      	ADDWFC      FARG_DS1307_read_myDS+1, 0, 1
0x2504	0x6F27      	MOVWF       FLOC__DS1307_read+1, 1
0x2506	0xFFE9C526  	MOVFF       FLOC__DS1307_read, FSR0L
0x250A	0xFFEAC527  	MOVFF       FLOC__DS1307_read+1, FSR0H
0x250E	0xF531CFEE  	MOVFF       POSTINC0, FARG_bcdToDec_dato
0x2512	0xF00BEC4C  	CALL        _bcdToDec, 0
0x2516	0xFFE1C526  	MOVFF       FLOC__DS1307_read, FSR1L
0x251A	0xFFE2C527  	MOVFF       FLOC__DS1307_read+1, FSR1H
0x251E	0xFFE6C000  	MOVFF       R0, POSTINC1
;ds1307.h,138 :: 		myDS->day = bcdToDec(myDS->daY);
0x2522	0x0E04      	MOVLW       4
0x2524	0x2523      	ADDWF       FARG_DS1307_read_myDS, 0, 1
0x2526	0x6F26      	MOVWF       FLOC__DS1307_read, 1
0x2528	0x0E00      	MOVLW       0
0x252A	0x2124      	ADDWFC      FARG_DS1307_read_myDS+1, 0, 1
0x252C	0x6F27      	MOVWF       FLOC__DS1307_read+1, 1
0x252E	0xFFE9C526  	MOVFF       FLOC__DS1307_read, FSR0L
0x2532	0xFFEAC527  	MOVFF       FLOC__DS1307_read+1, FSR0H
0x2536	0xF531CFEE  	MOVFF       POSTINC0, FARG_bcdToDec_dato
0x253A	0xF00BEC4C  	CALL        _bcdToDec, 0
0x253E	0xFFE1C526  	MOVFF       FLOC__DS1307_read, FSR1L
0x2542	0xFFE2C527  	MOVFF       FLOC__DS1307_read+1, FSR1H
0x2546	0xFFE6C000  	MOVFF       R0, POSTINC1
;ds1307.h,139 :: 		myDS->month = bcdToDec(myDS->month);
0x254A	0x0E05      	MOVLW       5
0x254C	0x2523      	ADDWF       FARG_DS1307_read_myDS, 0, 1
0x254E	0x6F26      	MOVWF       FLOC__DS1307_read, 1
0x2550	0x0E00      	MOVLW       0
0x2552	0x2124      	ADDWFC      FARG_DS1307_read_myDS+1, 0, 1
0x2554	0x6F27      	MOVWF       FLOC__DS1307_read+1, 1
0x2556	0xFFE9C526  	MOVFF       FLOC__DS1307_read, FSR0L
0x255A	0xFFEAC527  	MOVFF       FLOC__DS1307_read+1, FSR0H
0x255E	0xF531CFEE  	MOVFF       POSTINC0, FARG_bcdToDec_dato
0x2562	0xF00BEC4C  	CALL        _bcdToDec, 0
0x2566	0xFFE1C526  	MOVFF       FLOC__DS1307_read, FSR1L
0x256A	0xFFE2C527  	MOVFF       FLOC__DS1307_read+1, FSR1H
0x256E	0xFFE6C000  	MOVFF       R0, POSTINC1
;ds1307.h,140 :: 		myDS->year = bcdToDec(myDS->year);
0x2572	0x0E06      	MOVLW       6
0x2574	0x2523      	ADDWF       FARG_DS1307_read_myDS, 0, 1
0x2576	0x6F26      	MOVWF       FLOC__DS1307_read, 1
0x2578	0x0E00      	MOVLW       0
0x257A	0x2124      	ADDWFC      FARG_DS1307_read_myDS+1, 0, 1
0x257C	0x6F27      	MOVWF       FLOC__DS1307_read+1, 1
0x257E	0xFFE9C526  	MOVFF       FLOC__DS1307_read, FSR0L
0x2582	0xFFEAC527  	MOVFF       FLOC__DS1307_read+1, FSR0H
0x2586	0xF531CFEE  	MOVFF       POSTINC0, FARG_bcdToDec_dato
0x258A	0xF00BEC4C  	CALL        _bcdToDec, 0
0x258E	0xFFE1C526  	MOVFF       FLOC__DS1307_read, FSR1L
0x2592	0xFFE2C527  	MOVFF       FLOC__DS1307_read+1, FSR1H
0x2596	0xFFE6C000  	MOVFF       R0, POSTINC1
;ds1307.h,143 :: 		DS1307_date(myDS, formatComplet);
0x259A	0xF531C523  	MOVFF       FARG_DS1307_read_myDS, FARG_DS1307_date_myDS
0x259E	0xF532C524  	MOVFF       FARG_DS1307_read_myDS+1, FARG_DS1307_date_myDS+1
0x25A2	0xF533C525  	MOVFF       FARG_DS1307_read_formatComplet, FARG_DS1307_date_formatComplet
0x25A6	0xF006EC7C  	CALL        _DS1307_date, 0
;ds1307.h,145 :: 		return myDS->time;
0x25AA	0x0E07      	MOVLW       7
0x25AC	0x2523      	ADDWF       FARG_DS1307_read_myDS, 0, 1
0x25AE	0x6E00      	MOVWF       R0 
0x25B0	0x0E00      	MOVLW       0
0x25B2	0x2124      	ADDWFC      FARG_DS1307_read_myDS+1, 0, 1
0x25B4	0x6E01      	MOVWF       R1 
;ds1307.h,146 :: 		}
L_end_DS1307_read:
0x25B6	0x0012      	RETURN      0
; end of _DS1307_read
_mysql_write:
;table_eeprom.h,306 :: 		char mysql_write(char *name, char *column, int fila, long value, bool endWrite){
;table_eeprom.h,307 :: 		char res = _mysql_calculate_address(name, column);
0x25B8	0xF53BC523  	MOVFF       FARG_mysql_write_name, FARG__mysql_calculate_address_name
0x25BC	0xF53CC524  	MOVFF       FARG_mysql_write_name+1, FARG__mysql_calculate_address_name+1
0x25C0	0xF53DC525  	MOVFF       FARG_mysql_write_column, FARG__mysql_calculate_address_column
0x25C4	0xF53EC526  	MOVFF       FARG_mysql_write_column+1, FARG__mysql_calculate_address_column+1
0x25C8	0xF004EC1D  	CALL        __mysql_calculate_address, 0
0x25CC	0xF52EC000  	MOVFF       R0, mysql_write_res_L0
;table_eeprom.h,310 :: 		if(res)
0x25D0	0x5200      	MOVF        R0, 1 
0x25D2	0xE003      	BZ          L_mysql_write490
;table_eeprom.h,311 :: 		return res;
0x25D4	0xF000C52E  	MOVFF       mysql_write_res_L0, R0
0x25D8	0xD08A      	BRA         L_end_mysql_write
L_mysql_write490:
;table_eeprom.h,314 :: 		myTable.cont = myTable.tamCol;
0x25DA	0xF348C31F  	MOVFF       Expendedora_myTable+6, Expendedora_myTable+47
;table_eeprom.h,315 :: 		if(myTable.cont > 4){
0x25DE	0x0103      	MOVLB       3
0x25E0	0x511F      	MOVF        Expendedora_myTable+6, 0, 1
0x25E2	0x0804      	SUBLW       4
0x25E4	0xE203      	BC          L_mysql_write491
;table_eeprom.h,316 :: 		return TABLE_RW_OUT_RANGE_BYTES;
0x25E6	0x0E06      	MOVLW       6
0x25E8	0x6E00      	MOVWF       R0 
0x25EA	0xD081      	BRA         L_end_mysql_write
;table_eeprom.h,317 :: 		}
L_mysql_write491:
;table_eeprom.h,319 :: 		if(endWrite){
0x25EC	0x0105      	MOVLB       5
0x25EE	0x532D      	MOVF        FARG_mysql_write_endWrite, 1, 1
0x25F0	0xE047      	BZ          L_mysql_write492
;table_eeprom.h,320 :: 		if(myTable.rowAct < myTable.row){
0x25F2	0x0103      	MOVLB       3
0x25F4	0x511C      	MOVF        Expendedora_myTable+3, 0, 1
0x25F6	0x5D1E      	SUBWF       Expendedora_myTable+5, 0, 1
0x25F8	0xE102      	BNZ         L__mysql_write1288
0x25FA	0x511B      	MOVF        Expendedora_myTable+2, 0, 1
0x25FC	0x5D1D      	SUBWF       Expendedora_myTable+4, 0, 1
L__mysql_write1288:
0x25FE	0xE23C      	BC          L_mysql_write493
;table_eeprom.h,321 :: 		eeprom_i2c_write(myTable.addressAct+myTable.rowAct*myTable.tamCol, (char*)&value, myTable.cont);
0x2600	0xF000C31D  	MOVFF       Expendedora_myTable+4, R0
0x2604	0xF001C31E  	MOVFF       Expendedora_myTable+5, R1
0x2608	0xF004C31F  	MOVFF       Expendedora_myTable+6, R4
0x260C	0x0E00      	MOVLW       0
0x260E	0x6E05      	MOVWF       R5 
0x2610	0xF002EC54  	CALL        _Mul_16X16_U, 0
0x2614	0x5000      	MOVF        R0, 0 
0x2616	0x2546      	ADDWF       Expendedora_myTable+45, 0, 1
0x2618	0x0105      	MOVLB       5
0x261A	0x6F3B      	MOVWF       FARG_eeprom_i2c_write_address, 1
0x261C	0x5001      	MOVF        R1, 0 
0x261E	0x0103      	MOVLB       3
0x2620	0x2147      	ADDWFC      Expendedora_myTable+46, 0, 1
0x2622	0x0105      	MOVLB       5
0x2624	0x6F3C      	MOVWF       FARG_eeprom_i2c_write_address+1, 1
0x2626	0x0E29      	MOVLW       FARG_mysql_write_value
0x2628	0x6F3D      	MOVWF       FARG_eeprom_i2c_write_datos, 1
0x262A	0x0E05      	MOVLW       hi_addr(FARG_mysql_write_value)
0x262C	0x6F3E      	MOVWF       FARG_eeprom_i2c_write_datos+1, 1
0x262E	0xF53FC348  	MOVFF       Expendedora_myTable+47, FARG_eeprom_i2c_write_size
0x2632	0xF005EC82  	CALL        _eeprom_i2c_write, 0
;table_eeprom.h,322 :: 		myTable.rowAct++;
0x2636	0x0E01      	MOVLW       1
0x2638	0x0103      	MOVLB       3
0x263A	0x251D      	ADDWF       Expendedora_myTable+4, 0, 1
0x263C	0x6E00      	MOVWF       R0 
0x263E	0x0E00      	MOVLW       0
0x2640	0x211E      	ADDWFC      Expendedora_myTable+5, 0, 1
0x2642	0x6E01      	MOVWF       R1 
0x2644	0xF31DC000  	MOVFF       R0, Expendedora_myTable+4
0x2648	0xF31EC001  	MOVFF       R1, Expendedora_myTable+5
;table_eeprom.h,323 :: 		eeprom_i2c_write(myTable.address+TABLE_MAX_SIZE_NAME+3, (char*)&myTable.rowAct, 2);
0x264C	0x0E0F      	MOVLW       15
0x264E	0x2544      	ADDWF       Expendedora_myTable+43, 0, 1
0x2650	0x0105      	MOVLB       5
0x2652	0x6F3B      	MOVWF       FARG_eeprom_i2c_write_address, 1
0x2654	0x0E00      	MOVLW       0
0x2656	0x0103      	MOVLB       3
0x2658	0x2145      	ADDWFC      Expendedora_myTable+44, 0, 1
0x265A	0x0105      	MOVLB       5
0x265C	0x6F3C      	MOVWF       FARG_eeprom_i2c_write_address+1, 1
0x265E	0x0E03      	MOVLW       3
0x2660	0x273B      	ADDWF       FARG_eeprom_i2c_write_address, 1, 1
0x2662	0x0E00      	MOVLW       0
0x2664	0x233C      	ADDWFC      FARG_eeprom_i2c_write_address+1, 1, 1
0x2666	0x0E1D      	MOVLW       Expendedora_myTable+4
0x2668	0x6F3D      	MOVWF       FARG_eeprom_i2c_write_datos, 1
0x266A	0x0E03      	MOVLW       hi_addr(Expendedora_myTable+4)
0x266C	0x6F3E      	MOVWF       FARG_eeprom_i2c_write_datos+1, 1
0x266E	0x0E02      	MOVLW       2
0x2670	0x6F3F      	MOVWF       FARG_eeprom_i2c_write_size, 1
0x2672	0xF005EC82  	CALL        _eeprom_i2c_write, 0
;table_eeprom.h,324 :: 		}else
0x2676	0xD003      	BRA         L_mysql_write494
L_mysql_write493:
;table_eeprom.h,325 :: 		return TABLE_RW_TABLE_FULL;   //Memoria llena de la tabla
0x2678	0x0E05      	MOVLW       5
0x267A	0x6E00      	MOVWF       R0 
0x267C	0xD038      	BRA         L_end_mysql_write
L_mysql_write494:
;table_eeprom.h,326 :: 		}else if(fila >= 1 && fila <= myTable.rowAct)
0x267E	0xD036      	BRA         L_mysql_write495
L_mysql_write492:
0x2680	0x0E80      	MOVLW       128
0x2682	0x0105      	MOVLB       5
0x2684	0x1928      	XORWF       FARG_mysql_write_fila+1, 0, 1
0x2686	0x6E00      	MOVWF       R0 
0x2688	0x0E80      	MOVLW       128
0x268A	0x5C00      	SUBWF       R0, 0 
0x268C	0xE102      	BNZ         L__mysql_write1289
0x268E	0x0E01      	MOVLW       1
0x2690	0x5D27      	SUBWF       FARG_mysql_write_fila, 0, 1
L__mysql_write1289:
0x2692	0xE329      	BNC         L_mysql_write498
0x2694	0x5128      	MOVF        FARG_mysql_write_fila+1, 0, 1
0x2696	0x0103      	MOVLB       3
0x2698	0x5D1E      	SUBWF       Expendedora_myTable+5, 0, 1
0x269A	0xE104      	BNZ         L__mysql_write1290
0x269C	0x0105      	MOVLB       5
0x269E	0x5127      	MOVF        FARG_mysql_write_fila, 0, 1
0x26A0	0x0103      	MOVLB       3
0x26A2	0x5D1D      	SUBWF       Expendedora_myTable+4, 0, 1
L__mysql_write1290:
0x26A4	0xE320      	BNC         L_mysql_write498
L__mysql_write988:
;table_eeprom.h,327 :: 		eeprom_i2c_write(myTable.addressAct+(fila-1)*myTable.tamCol, (char*)&value, myTable.cont);
0x26A6	0x0E01      	MOVLW       1
0x26A8	0x0105      	MOVLB       5
0x26AA	0x5D27      	SUBWF       FARG_mysql_write_fila, 0, 1
0x26AC	0x6E00      	MOVWF       R0 
0x26AE	0x0E00      	MOVLW       0
0x26B0	0x5928      	SUBWFB      FARG_mysql_write_fila+1, 0, 1
0x26B2	0x6E01      	MOVWF       R1 
0x26B4	0xF004C31F  	MOVFF       Expendedora_myTable+6, R4
0x26B8	0x0E00      	MOVLW       0
0x26BA	0x6E05      	MOVWF       R5 
0x26BC	0xF002EC54  	CALL        _Mul_16X16_U, 0
0x26C0	0x5000      	MOVF        R0, 0 
0x26C2	0x0103      	MOVLB       3
0x26C4	0x2546      	ADDWF       Expendedora_myTable+45, 0, 1
0x26C6	0x0105      	MOVLB       5
0x26C8	0x6F3B      	MOVWF       FARG_eeprom_i2c_write_address, 1
0x26CA	0x5001      	MOVF        R1, 0 
0x26CC	0x0103      	MOVLB       3
0x26CE	0x2147      	ADDWFC      Expendedora_myTable+46, 0, 1
0x26D0	0x0105      	MOVLB       5
0x26D2	0x6F3C      	MOVWF       FARG_eeprom_i2c_write_address+1, 1
0x26D4	0x0E29      	MOVLW       FARG_mysql_write_value
0x26D6	0x6F3D      	MOVWF       FARG_eeprom_i2c_write_datos, 1
0x26D8	0x0E05      	MOVLW       hi_addr(FARG_mysql_write_value)
0x26DA	0x6F3E      	MOVWF       FARG_eeprom_i2c_write_datos+1, 1
0x26DC	0xF53FC348  	MOVFF       Expendedora_myTable+47, FARG_eeprom_i2c_write_size
0x26E0	0xF005EC82  	CALL        _eeprom_i2c_write, 0
0x26E4	0xD003      	BRA         L_mysql_write499
L_mysql_write498:
;table_eeprom.h,329 :: 		return TABLE_RW_NO_EXIST_ROW;   //Fila inexistente
0x26E6	0x0E03      	MOVLW       3
0x26E8	0x6E00      	MOVWF       R0 
0x26EA	0xD001      	BRA         L_end_mysql_write
L_mysql_write499:
L_mysql_write495:
;table_eeprom.h,331 :: 		return TABLE_RW_SUCCESS;     //Exito en grabacion
0x26EC	0x6A00      	CLRF        R0 
;table_eeprom.h,332 :: 		}
L_end_mysql_write:
0x26EE	0x0012      	RETURN      0
; end of _mysql_write
_string_cmpnc:
;string.h,145 :: 		bool string_cmpnc(const char *text1, char *text2, char bytes){
;string.h,148 :: 		for(cont = 0; cont < bytes; cont++){
0x26F0	0x6A02      	CLRF        R2 
L_string_cmpnc52:
0x26F2	0x0105      	MOVLB       5
0x26F4	0x5128      	MOVF        FARG_string_cmpnc_bytes, 0, 1
0x26F6	0x5C02      	SUBWF       R2, 0 
0x26F8	0xE219      	BC          L_string_cmpnc53
;string.h,149 :: 		if(text1[cont] != text2[cont])
0x26FA	0x5002      	MOVF        R2, 0 
0x26FC	0x2523      	ADDWF       FARG_string_cmpnc_text1, 0, 1
0x26FE	0x6EF6      	MOVWF       4086 
0x2700	0x0E00      	MOVLW       0
0x2702	0x2124      	ADDWFC      FARG_string_cmpnc_text1+1, 0, 1
0x2704	0x6EF7      	MOVWF       TBLPTRH 
0x2706	0x0E00      	MOVLW       0
0x2708	0x2125      	ADDWFC      FARG_string_cmpnc_text1+2, 0, 1
0x270A	0x6EF8      	MOVWF       TBLPTRU 
0x270C	0x0009      	TBLRD*+
0x270E	0xF001CFF5  	MOVFF       TABLAT, R1
0x2712	0x5002      	MOVF        R2, 0 
0x2714	0x2526      	ADDWF       FARG_string_cmpnc_text2, 0, 1
0x2716	0x6ED9      	MOVWF       FSR2L 
0x2718	0x0E00      	MOVLW       0
0x271A	0x2127      	ADDWFC      FARG_string_cmpnc_text2+1, 0, 1
0x271C	0x6EDA      	MOVWF       FSR2H 
0x271E	0x5001      	MOVF        R1, 0 
0x2720	0x18DE      	XORWF       POSTINC2, 0 
0x2722	0xE002      	BZ          L_string_cmpnc55
;string.h,150 :: 		return false;
0x2724	0x6A00      	CLRF        R0 
0x2726	0xD004      	BRA         L_end_string_cmpnc
L_string_cmpnc55:
;string.h,148 :: 		for(cont = 0; cont < bytes; cont++){
0x2728	0x2A02      	INCF        R2, 1 
;string.h,151 :: 		}
0x272A	0xD7E3      	BRA         L_string_cmpnc52
L_string_cmpnc53:
;string.h,153 :: 		return true;
0x272C	0x0E01      	MOVLW       1
0x272E	0x6E00      	MOVWF       R0 
;string.h,154 :: 		}
L_end_string_cmpnc:
0x2730	0x0012      	RETURN      0
; end of _string_cmpnc
_stringToNum:
;string.h,184 :: 		long stringToNum(char *cadena){
;string.h,185 :: 		short cont = 0;
0x2732	0x0105      	MOVLB       5
0x2734	0x6B25      	CLRF        stringToNum_cont_L0, 1
0x2736	0x6B26      	CLRF        stringToNum_numero_L0, 1
0x2738	0x6B27      	CLRF        stringToNum_numero_L0+1, 1
0x273A	0x6B28      	CLRF        stringToNum_numero_L0+2, 1
0x273C	0x6B29      	CLRF        stringToNum_numero_L0+3, 1
;string.h,189 :: 		while(cadena[cont]){
L_stringToNum68:
0x273E	0x5125      	MOVF        stringToNum_cont_L0, 0, 1
0x2740	0x2523      	ADDWF       FARG_stringToNum_cadena, 0, 1
0x2742	0x6EE9      	MOVWF       FSR0L 
0x2744	0x0E00      	MOVLW       0
0x2746	0xBF25      	BTFSC       stringToNum_cont_L0, 7, 1
0x2748	0x0EFF      	MOVLW       255
0x274A	0x2124      	ADDWFC      FARG_stringToNum_cadena+1, 0, 1
0x274C	0x6EEA      	MOVWF       FSR0H 
0x274E	0x52EE      	MOVF        POSTINC0, 1 
0x2750	0xE038      	BZ          L_stringToNum69
;string.h,190 :: 		numero *= 10;
0x2752	0xF000C526  	MOVFF       stringToNum_numero_L0, R0
0x2756	0xF001C527  	MOVFF       stringToNum_numero_L0+1, R1
0x275A	0xF002C528  	MOVFF       stringToNum_numero_L0+2, R2
0x275E	0xF003C529  	MOVFF       stringToNum_numero_L0+3, R3
0x2762	0x0E0A      	MOVLW       10
0x2764	0x6E04      	MOVWF       R4 
0x2766	0x0E00      	MOVLW       0
0x2768	0x6E05      	MOVWF       R5 
0x276A	0x6E06      	MOVWF       R6 
0x276C	0x6E07      	MOVWF       R7 
0x276E	0xF003ECC8  	CALL        _Mul_32x32_U, 0
0x2772	0xF526C000  	MOVFF       R0, stringToNum_numero_L0
0x2776	0xF527C001  	MOVFF       R1, stringToNum_numero_L0+1
0x277A	0xF528C002  	MOVFF       R2, stringToNum_numero_L0+2
0x277E	0xF529C003  	MOVFF       R3, stringToNum_numero_L0+3
;string.h,191 :: 		numero += cadena[cont++]-'0';
0x2782	0x5125      	MOVF        stringToNum_cont_L0, 0, 1
0x2784	0x2523      	ADDWF       FARG_stringToNum_cadena, 0, 1
0x2786	0x6EE9      	MOVWF       FSR0L 
0x2788	0x0E00      	MOVLW       0
0x278A	0xBF25      	BTFSC       stringToNum_cont_L0, 7, 1
0x278C	0x0EFF      	MOVLW       255
0x278E	0x2124      	ADDWFC      FARG_stringToNum_cadena+1, 0, 1
0x2790	0x6EEA      	MOVWF       FSR0H 
0x2792	0x0E30      	MOVLW       48
0x2794	0x5CEE      	SUBWF       POSTINC0, 0 
0x2796	0x6E04      	MOVWF       R4 
0x2798	0x6A05      	CLRF        R5 
0x279A	0x0E00      	MOVLW       0
0x279C	0x5A05      	SUBWFB      R5, 1 
0x279E	0x5004      	MOVF        R4, 0 
0x27A0	0x2400      	ADDWF       R0, 0 
0x27A2	0x6F26      	MOVWF       stringToNum_numero_L0, 1
0x27A4	0x5005      	MOVF        R5, 0 
0x27A6	0x2001      	ADDWFC      R1, 0 
0x27A8	0x6F27      	MOVWF       stringToNum_numero_L0+1, 1
0x27AA	0x0E00      	MOVLW       0
0x27AC	0xBE05      	BTFSC       R5, 7 
0x27AE	0x0EFF      	MOVLW       255
0x27B0	0x2002      	ADDWFC      R2, 0 
0x27B2	0x6F28      	MOVWF       stringToNum_numero_L0+2, 1
0x27B4	0x0E00      	MOVLW       0
0x27B6	0xBE05      	BTFSC       R5, 7 
0x27B8	0x0EFF      	MOVLW       255
0x27BA	0x2003      	ADDWFC      R3, 0 
0x27BC	0x6F29      	MOVWF       stringToNum_numero_L0+3, 1
0x27BE	0x2B25      	INCF        stringToNum_cont_L0, 1, 1
;string.h,192 :: 		}
0x27C0	0xD7BE      	BRA         L_stringToNum68
L_stringToNum69:
;string.h,194 :: 		return numero;
0x27C2	0xF000C526  	MOVFF       stringToNum_numero_L0, R0
0x27C6	0xF001C527  	MOVFF       stringToNum_numero_L0+1, R1
0x27CA	0xF002C528  	MOVFF       stringToNum_numero_L0+2, R2
0x27CE	0xF003C529  	MOVFF       stringToNum_numero_L0+3, R3
;string.h,195 :: 		}
L_end_stringToNum:
0x27D2	0x0012      	RETURN      0
; end of _stringToNum
_string_push:
;string.h,6 :: 		char string_push(char *texto, char caracter){
;string.h,7 :: 		char cont = 0;
0x27D4	0x0105      	MOVLB       5
0x27D6	0x6B26      	CLRF        string_push_cont_L0, 1
;string.h,9 :: 		while(texto[cont])
L_string_push8:
0x27D8	0x5126      	MOVF        string_push_cont_L0, 0, 1
0x27DA	0x2523      	ADDWF       FARG_string_push_texto, 0, 1
0x27DC	0x6EE9      	MOVWF       FSR0L 
0x27DE	0x0E00      	MOVLW       0
0x27E0	0x2124      	ADDWFC      FARG_string_push_texto+1, 0, 1
0x27E2	0x6EEA      	MOVWF       FSR0H 
0x27E4	0x52EE      	MOVF        POSTINC0, 1 
0x27E6	0xE002      	BZ          L_string_push9
;string.h,10 :: 		cont++;
0x27E8	0x2B26      	INCF        string_push_cont_L0, 1, 1
0x27EA	0xD7F6      	BRA         L_string_push8
L_string_push9:
;string.h,12 :: 		texto[cont++] = caracter;
0x27EC	0x5126      	MOVF        string_push_cont_L0, 0, 1
0x27EE	0x2523      	ADDWF       FARG_string_push_texto, 0, 1
0x27F0	0x6EE1      	MOVWF       FSR1L 
0x27F2	0x0E00      	MOVLW       0
0x27F4	0x2124      	ADDWFC      FARG_string_push_texto+1, 0, 1
0x27F6	0x6EE2      	MOVWF       FSR1H 
0x27F8	0xFFE6C525  	MOVFF       FARG_string_push_caracter, POSTINC1
0x27FC	0x2B26      	INCF        string_push_cont_L0, 1, 1
;string.h,13 :: 		texto[cont] = 0;  //Agregar final de cadena
0x27FE	0x5126      	MOVF        string_push_cont_L0, 0, 1
0x2800	0x2523      	ADDWF       FARG_string_push_texto, 0, 1
0x2802	0x6EE1      	MOVWF       FSR1L 
0x2804	0x0E00      	MOVLW       0
0x2806	0x2124      	ADDWFC      FARG_string_push_texto+1, 0, 1
0x2808	0x6EE2      	MOVWF       FSR1H 
0x280A	0x6AE6      	CLRF        POSTINC1 
;string.h,15 :: 		return cont;
0x280C	0xF000C526  	MOVFF       string_push_cont_L0, R0
;string.h,16 :: 		}
L_end_string_push:
0x2810	0x0012      	RETURN      0
; end of _string_push
_string_cpyc:
;string.h,86 :: 		char string_cpyc(char *destino, const char *origen){
;string.h,87 :: 		char cont = 0;
0x2812	0x0105      	MOVLB       5
0x2814	0x6B28      	CLRF        string_cpyc_cont_L0, 1
;string.h,89 :: 		while(origen[cont])
L_string_cpyc28:
0x2816	0x5128      	MOVF        string_cpyc_cont_L0, 0, 1
0x2818	0x2525      	ADDWF       FARG_string_cpyc_origen, 0, 1
0x281A	0x6EF6      	MOVWF       4086 
0x281C	0x0E00      	MOVLW       0
0x281E	0x2126      	ADDWFC      FARG_string_cpyc_origen+1, 0, 1
0x2820	0x6EF7      	MOVWF       TBLPTRH 
0x2822	0x0E00      	MOVLW       0
0x2824	0x2127      	ADDWFC      FARG_string_cpyc_origen+2, 0, 1
0x2826	0x6EF8      	MOVWF       TBLPTRU 
0x2828	0x0009      	TBLRD*+
0x282A	0xF000CFF5  	MOVFF       TABLAT, R0
0x282E	0x5200      	MOVF        R0, 1 
0x2830	0xE016      	BZ          L_string_cpyc29
;string.h,90 :: 		destino[cont] = origen[cont++];
0x2832	0x5128      	MOVF        string_cpyc_cont_L0, 0, 1
0x2834	0x2523      	ADDWF       FARG_string_cpyc_destino, 0, 1
0x2836	0x6EE1      	MOVWF       FSR1L 
0x2838	0x0E00      	MOVLW       0
0x283A	0x2124      	ADDWFC      FARG_string_cpyc_destino+1, 0, 1
0x283C	0x6EE2      	MOVWF       FSR1H 
0x283E	0x5128      	MOVF        string_cpyc_cont_L0, 0, 1
0x2840	0x2525      	ADDWF       FARG_string_cpyc_origen, 0, 1
0x2842	0x6EF6      	MOVWF       4086 
0x2844	0x0E00      	MOVLW       0
0x2846	0x2126      	ADDWFC      FARG_string_cpyc_origen+1, 0, 1
0x2848	0x6EF7      	MOVWF       TBLPTRH 
0x284A	0x0E00      	MOVLW       0
0x284C	0x2127      	ADDWFC      FARG_string_cpyc_origen+2, 0, 1
0x284E	0x6EF8      	MOVWF       TBLPTRU 
0x2850	0x0009      	TBLRD*+
0x2852	0xF000CFF5  	MOVFF       TABLAT, R0
0x2856	0xFFE6C000  	MOVFF       R0, POSTINC1
0x285A	0x2B28      	INCF        string_cpyc_cont_L0, 1, 1
0x285C	0xD7DC      	BRA         L_string_cpyc28
L_string_cpyc29:
;string.h,91 :: 		destino[cont] = 0;              //Final de cadena
0x285E	0x5128      	MOVF        string_cpyc_cont_L0, 0, 1
0x2860	0x2523      	ADDWF       FARG_string_cpyc_destino, 0, 1
0x2862	0x6EE1      	MOVWF       FSR1L 
0x2864	0x0E00      	MOVLW       0
0x2866	0x2124      	ADDWFC      FARG_string_cpyc_destino+1, 0, 1
0x2868	0x6EE2      	MOVWF       FSR1H 
0x286A	0x6AE6      	CLRF        POSTINC1 
;string.h,93 :: 		return cont;
0x286C	0xF000C528  	MOVFF       string_cpyc_cont_L0, R0
;string.h,94 :: 		}
L_end_string_cpyc:
0x2870	0x0012      	RETURN      0
; end of _string_cpyc
_string_cpyn:
;string.h,76 :: 		char string_cpyn(char *destino, char *origen, char size){
;string.h,79 :: 		for(cont = 0; cont < size && origen[cont]; cont++)
0x2872	0x6A01      	CLRF        R1 
L_string_cpyn23:
0x2874	0x0105      	MOVLB       5
0x2876	0x5127      	MOVF        FARG_string_cpyn_size, 0, 1
0x2878	0x5C01      	SUBWF       R1, 0 
0x287A	0xE218      	BC          L_string_cpyn24
0x287C	0x5001      	MOVF        R1, 0 
0x287E	0x2525      	ADDWF       FARG_string_cpyn_origen, 0, 1
0x2880	0x6EE9      	MOVWF       FSR0L 
0x2882	0x0E00      	MOVLW       0
0x2884	0x2126      	ADDWFC      FARG_string_cpyn_origen+1, 0, 1
0x2886	0x6EEA      	MOVWF       FSR0H 
0x2888	0x52EE      	MOVF        POSTINC0, 1 
0x288A	0xE010      	BZ          L_string_cpyn24
L__string_cpyn940:
;string.h,80 :: 		destino[cont] = origen[cont];
0x288C	0x5001      	MOVF        R1, 0 
0x288E	0x2523      	ADDWF       FARG_string_cpyn_destino, 0, 1
0x2890	0x6EE1      	MOVWF       FSR1L 
0x2892	0x0E00      	MOVLW       0
0x2894	0x2124      	ADDWFC      FARG_string_cpyn_destino+1, 0, 1
0x2896	0x6EE2      	MOVWF       FSR1H 
0x2898	0x5001      	MOVF        R1, 0 
0x289A	0x2525      	ADDWF       FARG_string_cpyn_origen, 0, 1
0x289C	0x6EE9      	MOVWF       FSR0L 
0x289E	0x0E00      	MOVLW       0
0x28A0	0x2126      	ADDWFC      FARG_string_cpyn_origen+1, 0, 1
0x28A2	0x6EEA      	MOVWF       FSR0H 
0x28A4	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
;string.h,79 :: 		for(cont = 0; cont < size && origen[cont]; cont++)
0x28A8	0x2A01      	INCF        R1, 1 
;string.h,80 :: 		destino[cont] = origen[cont];
0x28AA	0xD7E4      	BRA         L_string_cpyn23
L_string_cpyn24:
;string.h,81 :: 		destino[cont] = 0;              //Final de cadena
0x28AC	0x5001      	MOVF        R1, 0 
0x28AE	0x2523      	ADDWF       FARG_string_cpyn_destino, 0, 1
0x28B0	0x6EE1      	MOVWF       FSR1L 
0x28B2	0x0E00      	MOVLW       0
0x28B4	0x2124      	ADDWFC      FARG_string_cpyn_destino+1, 0, 1
0x28B6	0x6EE2      	MOVWF       FSR1H 
0x28B8	0x6AE6      	CLRF        POSTINC1 
;string.h,83 :: 		return cont;
0x28BA	0xF000C001  	MOVFF       R1, R0
;string.h,84 :: 		}
L_end_string_cpyn:
0x28BE	0x0012      	RETURN      0
; end of _string_cpyn
_mysql_read_string:
;table_eeprom.h,218 :: 		char mysql_read_string(char *name, char *column, int fila, char *result){
;table_eeprom.h,219 :: 		char res = _mysql_calculate_address(name, column);
0x28C0	0xF53BC523  	MOVFF       FARG_mysql_read_string_name, FARG__mysql_calculate_address_name
0x28C4	0xF53CC524  	MOVFF       FARG_mysql_read_string_name+1, FARG__mysql_calculate_address_name+1
0x28C8	0xF53DC525  	MOVFF       FARG_mysql_read_string_column, FARG__mysql_calculate_address_column
0x28CC	0xF53EC526  	MOVFF       FARG_mysql_read_string_column+1, FARG__mysql_calculate_address_column+1
0x28D0	0xF004EC1D  	CALL        __mysql_calculate_address, 0
0x28D4	0xF52BC000  	MOVFF       R0, mysql_read_string_res_L0
;table_eeprom.h,222 :: 		if(res)
0x28D8	0x5200      	MOVF        R0, 1 
0x28DA	0xE003      	BZ          L_mysql_read_string463
;table_eeprom.h,223 :: 		return res;
0x28DC	0xF000C52B  	MOVFF       mysql_read_string_res_L0, R0
0x28E0	0xD037      	BRA         L_end_mysql_read_string
L_mysql_read_string463:
;table_eeprom.h,226 :: 		if(fila >= 1 && fila <= myTable.rowAct)
0x28E2	0x0E80      	MOVLW       128
0x28E4	0x0105      	MOVLB       5
0x28E6	0x1928      	XORWF       FARG_mysql_read_string_fila+1, 0, 1
0x28E8	0x6E00      	MOVWF       R0 
0x28EA	0x0E80      	MOVLW       128
0x28EC	0x5C00      	SUBWF       R0, 0 
0x28EE	0xE102      	BNZ         L__mysql_read_string1275
0x28F0	0x0E01      	MOVLW       1
0x28F2	0x5D27      	SUBWF       FARG_mysql_read_string_fila, 0, 1
L__mysql_read_string1275:
0x28F4	0xE329      	BNC         L_mysql_read_string466
0x28F6	0x5128      	MOVF        FARG_mysql_read_string_fila+1, 0, 1
0x28F8	0x0103      	MOVLB       3
0x28FA	0x5D1E      	SUBWF       Expendedora_myTable+5, 0, 1
0x28FC	0xE104      	BNZ         L__mysql_read_string1276
0x28FE	0x0105      	MOVLB       5
0x2900	0x5127      	MOVF        FARG_mysql_read_string_fila, 0, 1
0x2902	0x0103      	MOVLB       3
0x2904	0x5D1D      	SUBWF       Expendedora_myTable+4, 0, 1
L__mysql_read_string1276:
0x2906	0xE320      	BNC         L_mysql_read_string466
L__mysql_read_string984:
;table_eeprom.h,227 :: 		eeprom_i2c_read(myTable.addressAct+(fila-1)*myTable.tamCol, result, myTable.tamCol);
0x2908	0x0E01      	MOVLW       1
0x290A	0x0105      	MOVLB       5
0x290C	0x5D27      	SUBWF       FARG_mysql_read_string_fila, 0, 1
0x290E	0x6E00      	MOVWF       R0 
0x2910	0x0E00      	MOVLW       0
0x2912	0x5928      	SUBWFB      FARG_mysql_read_string_fila+1, 0, 1
0x2914	0x6E01      	MOVWF       R1 
0x2916	0xF004C31F  	MOVFF       Expendedora_myTable+6, R4
0x291A	0x0E00      	MOVLW       0
0x291C	0x6E05      	MOVWF       R5 
0x291E	0xF002EC54  	CALL        _Mul_16X16_U, 0
0x2922	0x5000      	MOVF        R0, 0 
0x2924	0x0103      	MOVLB       3
0x2926	0x2546      	ADDWF       Expendedora_myTable+45, 0, 1
0x2928	0x0105      	MOVLB       5
0x292A	0x6F49      	MOVWF       FARG_eeprom_i2c_read_address, 1
0x292C	0x5001      	MOVF        R1, 0 
0x292E	0x0103      	MOVLB       3
0x2930	0x2147      	ADDWFC      Expendedora_myTable+46, 0, 1
0x2932	0x0105      	MOVLB       5
0x2934	0x6F4A      	MOVWF       FARG_eeprom_i2c_read_address+1, 1
0x2936	0xF54BC529  	MOVFF       FARG_mysql_read_string_result, FARG_eeprom_i2c_read_datos
0x293A	0xF54CC52A  	MOVFF       FARG_mysql_read_string_result+1, FARG_eeprom_i2c_read_datos+1
0x293E	0xF54DC31F  	MOVFF       Expendedora_myTable+6, FARG_eeprom_i2c_read_size
0x2942	0xF001ECF0  	CALL        _eeprom_i2c_read, 0
0x2946	0xD003      	BRA         L_mysql_read_string467
L_mysql_read_string466:
;table_eeprom.h,229 :: 		return TABLE_RW_NO_EXIST_ROW;   //Fila inexistente
0x2948	0x0E03      	MOVLW       3
0x294A	0x6E00      	MOVWF       R0 
0x294C	0xD001      	BRA         L_end_mysql_read_string
;table_eeprom.h,230 :: 		}
L_mysql_read_string467:
;table_eeprom.h,232 :: 		return TABLE_RW_SUCCESS;     //Exito en la busqueda
0x294E	0x6A00      	CLRF        R0 
;table_eeprom.h,233 :: 		}
L_end_mysql_read_string:
0x2950	0x0012      	RETURN      0
; end of _mysql_read_string
_buffer_save_send:
;Expendedora.c,2040 :: 		void buffer_save_send(bool guardar, char *buffer){
;Expendedora.c,2043 :: 		if(!guardar){
0x2952	0x0105      	MOVLB       5
0x2954	0x5323      	MOVF        FARG_buffer_save_send_guardar, 1, 1
0x2956	0xE114      	BNZ         L_buffer_save_send926
;Expendedora.c,2044 :: 		if(!can_write_text(can.ip+canIdTPV, buffer, 0))
0x2958	0xF531C349  	MOVFF       _can, FARG_can_write_text_ipAddress
0x295C	0xF532C34A  	MOVFF       _can+1, FARG_can_write_text_ipAddress+1
0x2960	0xF533C34B  	MOVFF       _can+2, FARG_can_write_text_ipAddress+2
0x2964	0xF534C34C  	MOVFF       _can+3, FARG_can_write_text_ipAddress+3
0x2968	0xF535C524  	MOVFF       FARG_buffer_save_send_buffer, FARG_can_write_text_texto
0x296C	0xF536C525  	MOVFF       FARG_buffer_save_send_buffer+1, FARG_can_write_text_texto+1
0x2970	0x6B37      	CLRF        FARG_can_write_text_priority, 1
0x2972	0xF008EC6A  	CALL        _can_write_text, 0
0x2976	0x5200      	MOVF        R0, 1 
0x2978	0xE103      	BNZ         L_buffer_save_send927
;Expendedora.c,2045 :: 		guardar = true;
0x297A	0x0E01      	MOVLW       1
0x297C	0x0105      	MOVLB       5
0x297E	0x6F23      	MOVWF       FARG_buffer_save_send_guardar, 1
L_buffer_save_send927:
;Expendedora.c,2046 :: 		}
L_buffer_save_send926:
0x2980	0x0105      	MOVLB       5
;Expendedora.c,2048 :: 		if(guardar){
0x2982	0x5323      	MOVF        FARG_buffer_save_send_guardar, 1, 1
0x2984	0xE048      	BZ          L_buffer_save_send928
;Expendedora.c,2049 :: 		if(!mysql_write_roundTrip(tableEventosCAN, eventosRegistro, buffer, strlen(buffer)+1)){
0x2986	0xF531C524  	MOVFF       FARG_buffer_save_send_buffer, FARG_strlen_s
0x298A	0xF532C525  	MOVFF       FARG_buffer_save_send_buffer+1, FARG_strlen_s+1
0x298E	0xF00BEC16  	CALL        _strlen, 0
0x2992	0x5000      	MOVF        R0, 0 
0x2994	0x0F01      	ADDLW       1
0x2996	0x6F37      	MOVWF       FARG_mysql_write_roundTrip_bytes, 1
0x2998	0x0EB4      	MOVLW       _tableEventosCAN
0x299A	0x6F31      	MOVWF       FARG_mysql_write_roundTrip_name, 1
0x299C	0x0E02      	MOVLW       hi_addr(_tableEventosCAN)
0x299E	0x6F32      	MOVWF       FARG_mysql_write_roundTrip_name+1, 1
0x29A0	0x0EA3      	MOVLW       _eventosRegistro
0x29A2	0x6F33      	MOVWF       FARG_mysql_write_roundTrip_column, 1
0x29A4	0x0E02      	MOVLW       hi_addr(_eventosRegistro)
0x29A6	0x6F34      	MOVWF       FARG_mysql_write_roundTrip_column+1, 1
0x29A8	0xF535C524  	MOVFF       FARG_buffer_save_send_buffer, FARG_mysql_write_roundTrip_texto
0x29AC	0xF536C525  	MOVFF       FARG_buffer_save_send_buffer+1, FARG_mysql_write_roundTrip_texto+1
0x29B0	0xF009EC45  	CALL        _mysql_write_roundTrip, 0
0x29B4	0x5200      	MOVF        R0, 1 
0x29B6	0xE12F      	BNZ         L_buffer_save_send929
;Expendedora.c,2050 :: 		mysql_read_forced(tableEventosCAN, eventosEstatus, myTable.rowAct, &result);
0x29B8	0x0EB4      	MOVLW       _tableEventosCAN
0x29BA	0x0105      	MOVLB       5
0x29BC	0x6F31      	MOVWF       FARG_mysql_read_forced_name, 1
0x29BE	0x0E02      	MOVLW       hi_addr(_tableEventosCAN)
0x29C0	0x6F32      	MOVWF       FARG_mysql_read_forced_name+1, 1
0x29C2	0x0EAC      	MOVLW       _eventosEstatus
0x29C4	0x6F33      	MOVWF       FARG_mysql_read_forced_column, 1
0x29C6	0x0E02      	MOVLW       hi_addr(_eventosEstatus)
0x29C8	0x6F34      	MOVWF       FARG_mysql_read_forced_column+1, 1
0x29CA	0xF535C31D  	MOVFF       Expendedora_myTable+4, FARG_mysql_read_forced_fila
0x29CE	0xF536C31E  	MOVFF       Expendedora_myTable+5, FARG_mysql_read_forced_fila+1
0x29D2	0x0E26      	MOVLW       buffer_save_send_result_L0
0x29D4	0x6F37      	MOVWF       FARG_mysql_read_forced_result, 1
0x29D6	0x0E05      	MOVLW       hi_addr(buffer_save_send_result_L0)
0x29D8	0x6F38      	MOVWF       FARG_mysql_read_forced_result+1, 1
0x29DA	0xF00AEC09  	CALL        _mysql_read_forced, 0
;Expendedora.c,2052 :: 		if(result != '1')
0x29DE	0x0105      	MOVLB       5
0x29E0	0x5126      	MOVF        buffer_save_send_result_L0, 0, 1
0x29E2	0x0A31      	XORLW       49
0x29E4	0xE003      	BZ          L_buffer_save_send930
;Expendedora.c,2053 :: 		pilaBufferCAN++;
0x29E6	0x0103      	MOVLB       3
0x29E8	0x4BF8      	INFSNZ      _pilaBufferCAN, 1, 1
0x29EA	0x2BF9      	INCF        _pilaBufferCAN+1, 1, 1
L_buffer_save_send930:
;Expendedora.c,2054 :: 		mysql_write_forced(tableEventosCAN, eventosEstatus, myTable.rowAct, "1", 1);
0x29EC	0x0EB4      	MOVLW       _tableEventosCAN
0x29EE	0x0105      	MOVLB       5
0x29F0	0x6F31      	MOVWF       FARG_mysql_write_forced_name, 1
0x29F2	0x0E02      	MOVLW       hi_addr(_tableEventosCAN)
0x29F4	0x6F32      	MOVWF       FARG_mysql_write_forced_name+1, 1
0x29F6	0x0EAC      	MOVLW       _eventosEstatus
0x29F8	0x6F33      	MOVWF       FARG_mysql_write_forced_column, 1
0x29FA	0x0E02      	MOVLW       hi_addr(_eventosEstatus)
0x29FC	0x6F34      	MOVWF       FARG_mysql_write_forced_column+1, 1
0x29FE	0xF535C31D  	MOVFF       Expendedora_myTable+4, FARG_mysql_write_forced_fila
0x2A02	0xF536C31E  	MOVFF       Expendedora_myTable+5, FARG_mysql_write_forced_fila+1
0x2A06	0x0EC0      	MOVLW       ?lstr35_Expendedora
0x2A08	0x6F37      	MOVWF       FARG_mysql_write_forced_texto, 1
0x2A0A	0x0E02      	MOVLW       hi_addr(?lstr35_Expendedora)
0x2A0C	0x6F38      	MOVWF       FARG_mysql_write_forced_texto+1, 1
0x2A0E	0x0E01      	MOVLW       1
0x2A10	0x6F39      	MOVWF       FARG_mysql_write_forced_bytes, 1
0x2A12	0xF008ECA9  	CALL        _mysql_write_forced, 0
;Expendedora.c,2064 :: 		}
L_buffer_save_send929:
;Expendedora.c,2065 :: 		}
L_buffer_save_send928:
;Expendedora.c,2066 :: 		}
L_end_buffer_save_send:
0x2A16	0x0012      	RETURN      0
; end of _buffer_save_send
_string_addc:
;string.h,50 :: 		char string_addc(char *destino, const char *addEnd){
;string.h,51 :: 		char total = 0, cont = 0;
0x2A18	0x0105      	MOVLB       5
0x2A1A	0x6B28      	CLRF        string_addc_total_L0, 1
0x2A1C	0x6B29      	CLRF        string_addc_cont_L0, 1
;string.h,54 :: 		while(destino[total])
L_string_addc17:
0x2A1E	0x5128      	MOVF        string_addc_total_L0, 0, 1
0x2A20	0x2523      	ADDWF       FARG_string_addc_destino, 0, 1
0x2A22	0x6EE9      	MOVWF       FSR0L 
0x2A24	0x0E00      	MOVLW       0
0x2A26	0x2124      	ADDWFC      FARG_string_addc_destino+1, 0, 1
0x2A28	0x6EEA      	MOVWF       FSR0H 
0x2A2A	0x52EE      	MOVF        POSTINC0, 1 
0x2A2C	0xE002      	BZ          L_string_addc18
;string.h,55 :: 		total++;
0x2A2E	0x2B28      	INCF        string_addc_total_L0, 1, 1
0x2A30	0xD7F6      	BRA         L_string_addc17
L_string_addc18:
;string.h,57 :: 		while(addEnd[cont])
L_string_addc19:
0x2A32	0x5129      	MOVF        string_addc_cont_L0, 0, 1
0x2A34	0x2525      	ADDWF       FARG_string_addc_addEnd, 0, 1
0x2A36	0x6EF6      	MOVWF       4086 
0x2A38	0x0E00      	MOVLW       0
0x2A3A	0x2126      	ADDWFC      FARG_string_addc_addEnd+1, 0, 1
0x2A3C	0x6EF7      	MOVWF       TBLPTRH 
0x2A3E	0x0E00      	MOVLW       0
0x2A40	0x2127      	ADDWFC      FARG_string_addc_addEnd+2, 0, 1
0x2A42	0x6EF8      	MOVWF       TBLPTRU 
0x2A44	0x0009      	TBLRD*+
0x2A46	0xF000CFF5  	MOVFF       TABLAT, R0
0x2A4A	0x5200      	MOVF        R0, 1 
0x2A4C	0xE017      	BZ          L_string_addc20
;string.h,58 :: 		destino[total++] = addEnd[cont++];
0x2A4E	0x5128      	MOVF        string_addc_total_L0, 0, 1
0x2A50	0x2523      	ADDWF       FARG_string_addc_destino, 0, 1
0x2A52	0x6EE1      	MOVWF       FSR1L 
0x2A54	0x0E00      	MOVLW       0
0x2A56	0x2124      	ADDWFC      FARG_string_addc_destino+1, 0, 1
0x2A58	0x6EE2      	MOVWF       FSR1H 
0x2A5A	0x5129      	MOVF        string_addc_cont_L0, 0, 1
0x2A5C	0x2525      	ADDWF       FARG_string_addc_addEnd, 0, 1
0x2A5E	0x6EF6      	MOVWF       4086 
0x2A60	0x0E00      	MOVLW       0
0x2A62	0x2126      	ADDWFC      FARG_string_addc_addEnd+1, 0, 1
0x2A64	0x6EF7      	MOVWF       TBLPTRH 
0x2A66	0x0E00      	MOVLW       0
0x2A68	0x2127      	ADDWFC      FARG_string_addc_addEnd+2, 0, 1
0x2A6A	0x6EF8      	MOVWF       TBLPTRU 
0x2A6C	0x0009      	TBLRD*+
0x2A6E	0xF000CFF5  	MOVFF       TABLAT, R0
0x2A72	0xFFE6C000  	MOVFF       R0, POSTINC1
0x2A76	0x2B28      	INCF        string_addc_total_L0, 1, 1
0x2A78	0x2B29      	INCF        string_addc_cont_L0, 1, 1
0x2A7A	0xD7DB      	BRA         L_string_addc19
L_string_addc20:
;string.h,59 :: 		destino[total] = 0;
0x2A7C	0x5128      	MOVF        string_addc_total_L0, 0, 1
0x2A7E	0x2523      	ADDWF       FARG_string_addc_destino, 0, 1
0x2A80	0x6EE1      	MOVWF       FSR1L 
0x2A82	0x0E00      	MOVLW       0
0x2A84	0x2124      	ADDWFC      FARG_string_addc_destino+1, 0, 1
0x2A86	0x6EE2      	MOVWF       FSR1H 
0x2A88	0x6AE6      	CLRF        POSTINC1 
;string.h,62 :: 		return total;
0x2A8A	0xF000C528  	MOVFF       string_addc_total_L0, R0
;string.h,63 :: 		}
L_end_string_addc:
0x2A8E	0x0012      	RETURN      0
; end of _string_addc
_string_add:
;string.h,35 :: 		char string_add(char *destino, char *addEnd){
;string.h,36 :: 		char total = 0, cont = 0;
0x2A90	0x0105      	MOVLB       5
0x2A92	0x6B27      	CLRF        string_add_total_L0, 1
0x2A94	0x6B28      	CLRF        string_add_cont_L0, 1
;string.h,39 :: 		while(destino[total])
L_string_add13:
0x2A96	0x5127      	MOVF        string_add_total_L0, 0, 1
0x2A98	0x2523      	ADDWF       FARG_string_add_destino, 0, 1
0x2A9A	0x6EE9      	MOVWF       FSR0L 
0x2A9C	0x0E00      	MOVLW       0
0x2A9E	0x2124      	ADDWFC      FARG_string_add_destino+1, 0, 1
0x2AA0	0x6EEA      	MOVWF       FSR0H 
0x2AA2	0x52EE      	MOVF        POSTINC0, 1 
0x2AA4	0xE002      	BZ          L_string_add14
;string.h,40 :: 		total++;
0x2AA6	0x2B27      	INCF        string_add_total_L0, 1, 1
0x2AA8	0xD7F6      	BRA         L_string_add13
L_string_add14:
;string.h,42 :: 		while(addEnd[cont])
L_string_add15:
0x2AAA	0x5128      	MOVF        string_add_cont_L0, 0, 1
0x2AAC	0x2525      	ADDWF       FARG_string_add_addEnd, 0, 1
0x2AAE	0x6EE9      	MOVWF       FSR0L 
0x2AB0	0x0E00      	MOVLW       0
0x2AB2	0x2126      	ADDWFC      FARG_string_add_addEnd+1, 0, 1
0x2AB4	0x6EEA      	MOVWF       FSR0H 
0x2AB6	0x52EE      	MOVF        POSTINC0, 1 
0x2AB8	0xE011      	BZ          L_string_add16
;string.h,43 :: 		destino[total++] = addEnd[cont++];
0x2ABA	0x5127      	MOVF        string_add_total_L0, 0, 1
0x2ABC	0x2523      	ADDWF       FARG_string_add_destino, 0, 1
0x2ABE	0x6EE1      	MOVWF       FSR1L 
0x2AC0	0x0E00      	MOVLW       0
0x2AC2	0x2124      	ADDWFC      FARG_string_add_destino+1, 0, 1
0x2AC4	0x6EE2      	MOVWF       FSR1H 
0x2AC6	0x5128      	MOVF        string_add_cont_L0, 0, 1
0x2AC8	0x2525      	ADDWF       FARG_string_add_addEnd, 0, 1
0x2ACA	0x6EE9      	MOVWF       FSR0L 
0x2ACC	0x0E00      	MOVLW       0
0x2ACE	0x2126      	ADDWFC      FARG_string_add_addEnd+1, 0, 1
0x2AD0	0x6EEA      	MOVWF       FSR0H 
0x2AD2	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x2AD6	0x2B27      	INCF        string_add_total_L0, 1, 1
0x2AD8	0x2B28      	INCF        string_add_cont_L0, 1, 1
0x2ADA	0xD7E7      	BRA         L_string_add15
L_string_add16:
;string.h,44 :: 		destino[total] = 0;
0x2ADC	0x5127      	MOVF        string_add_total_L0, 0, 1
0x2ADE	0x2523      	ADDWF       FARG_string_add_destino, 0, 1
0x2AE0	0x6EE1      	MOVWF       FSR1L 
0x2AE2	0x0E00      	MOVLW       0
0x2AE4	0x2124      	ADDWFC      FARG_string_add_destino+1, 0, 1
0x2AE6	0x6EE2      	MOVWF       FSR1H 
0x2AE8	0x6AE6      	CLRF        POSTINC1 
;string.h,47 :: 		return total;
0x2AEA	0xF000C527  	MOVFF       string_add_total_L0, R0
;string.h,48 :: 		}
L_end_string_add:
0x2AEE	0x0012      	RETURN      0
; end of _string_add
_lcd_clean_row:
;Expendedora.c,1242 :: 		void lcd_clean_row(char fila){
;Expendedora.c,1243 :: 		char i = 20;
0x2AF0	0x0E14      	MOVLW       20
0x2AF2	0x0105      	MOVLB       5
0x2AF4	0x6F24      	MOVWF       lcd_clean_row_i_L0, 1
;Expendedora.c,1245 :: 		while(i)
L_lcd_clean_row789:
0x2AF6	0x5324      	MOVF        lcd_clean_row_i_L0, 1, 1
0x2AF8	0xE00A      	BZ          L_lcd_clean_row790
;Expendedora.c,1246 :: 		lcd_chr(fila, i--, ' ');
0x2AFA	0xF531C523  	MOVFF       FARG_lcd_clean_row_fila, FARG_lcd_chr_fila
0x2AFE	0xF532C524  	MOVFF       lcd_clean_row_i_L0, FARG_lcd_chr_col
0x2B02	0x0E20      	MOVLW       32
0x2B04	0x6F33      	MOVWF       FARG_lcd_chr_c, 1
0x2B06	0xF00BEC09  	CALL        _lcd_chr, 0
0x2B0A	0x0724      	DECF        lcd_clean_row_i_L0, 1, 1
0x2B0C	0xD7F4      	BRA         L_lcd_clean_row789
L_lcd_clean_row790:
;Expendedora.c,1247 :: 		}
L_end_lcd_clean_row:
0x2B0E	0x0012      	RETURN      0
; end of _lcd_clean_row
_can_get_id:
;lib_can.h,739 :: 		long can_get_id(char *address){
;lib_can.h,740 :: 		long value = 0;
0x2B10	0x0105      	MOVLB       5
0x2B12	0x6B25      	CLRF        can_get_id_value_L0, 1
0x2B14	0x6B26      	CLRF        can_get_id_value_L0+1, 1
0x2B16	0x6B27      	CLRF        can_get_id_value_L0+2, 1
0x2B18	0x6B28      	CLRF        can_get_id_value_L0+3, 1
;lib_can.h,743 :: 		getByte(value,0) = address[0];        //EIDL
0x2B1A	0xFFE9C523  	MOVFF       FARG_can_get_id_address, FSR0L
0x2B1E	0xFFEAC524  	MOVFF       FARG_can_get_id_address+1, FSR0H
0x2B22	0xF525CFEE  	MOVFF       POSTINC0, can_get_id_value_L0
;lib_can.h,744 :: 		getByte(value,1) = address[-1];        //EIDh
0x2B26	0x0EFF      	MOVLW       255
0x2B28	0x2523      	ADDWF       FARG_can_get_id_address, 0, 1
0x2B2A	0x6EE9      	MOVWF       FSR0L 
0x2B2C	0x0EFF      	MOVLW       255
0x2B2E	0x2124      	ADDWFC      FARG_can_get_id_address+1, 0, 1
0x2B30	0x6EEA      	MOVWF       FSR0H 
0x2B32	0xF526CFEE  	MOVFF       POSTINC0, can_get_id_value_L0+1
;lib_can.h,745 :: 		getByte(value,2) = address[-2] & 0x03; //SIDL, BITS 16,17
0x2B36	0x0EFE      	MOVLW       254
0x2B38	0x2523      	ADDWF       FARG_can_get_id_address, 0, 1
0x2B3A	0x6E01      	MOVWF       R1 
0x2B3C	0x0EFF      	MOVLW       255
0x2B3E	0x2124      	ADDWFC      FARG_can_get_id_address+1, 0, 1
0x2B40	0x6E02      	MOVWF       R2 
0x2B42	0xFFE9C001  	MOVFF       R1, FSR0L
0x2B46	0xFFEAC002  	MOVFF       R2, FSR0H
0x2B4A	0x0E03      	MOVLW       3
0x2B4C	0x14EE      	ANDWF       POSTINC0, 0 
0x2B4E	0x6F27      	MOVWF       can_get_id_value_L0+2, 1
;lib_can.h,746 :: 		getByte(value,2).B2 = address[-2].B5;  //SIDL, BITS 18
0x2B50	0xFFE9C001  	MOVFF       R1, FSR0L
0x2B54	0xFFEAC002  	MOVFF       R2, FSR0H
0x2B58	0xF000CFEE  	MOVFF       POSTINC0, R0
0x2B5C	0xBA00      	BTFSC       R0, 5 
0x2B5E	0xD002      	BRA         L__can_get_id1205
0x2B60	0x9527      	BCF         can_get_id_value_L0+2, 2, 1
0x2B62	0xD001      	BRA         L__can_get_id1206
L__can_get_id1205:
0x2B64	0x8527      	BSF         can_get_id_value_L0+2, 2, 1
L__can_get_id1206:
;lib_can.h,747 :: 		getByte(value,2).B3 = address[-2].B6;  //SIDL, BITS 19
0x2B66	0xFFE9C001  	MOVFF       R1, FSR0L
0x2B6A	0xFFEAC002  	MOVFF       R2, FSR0H
0x2B6E	0xF000CFEE  	MOVFF       POSTINC0, R0
0x2B72	0xBC00      	BTFSC       R0, 6 
0x2B74	0xD002      	BRA         L__can_get_id1207
0x2B76	0x9727      	BCF         can_get_id_value_L0+2, 3, 1
0x2B78	0xD001      	BRA         L__can_get_id1208
L__can_get_id1207:
0x2B7A	0x8727      	BSF         can_get_id_value_L0+2, 3, 1
L__can_get_id1208:
;lib_can.h,748 :: 		getByte(value,2).B4 = address[-2].B7;  //SIDL, BITS 20
0x2B7C	0xFFE9C001  	MOVFF       R1, FSR0L
0x2B80	0xFFEAC002  	MOVFF       R2, FSR0H
0x2B84	0xF000CFEE  	MOVFF       POSTINC0, R0
0x2B88	0xBE00      	BTFSC       R0, 7 
0x2B8A	0xD002      	BRA         L__can_get_id1209
0x2B8C	0x9927      	BCF         can_get_id_value_L0+2, 4, 1
0x2B8E	0xD001      	BRA         L__can_get_id1210
L__can_get_id1209:
0x2B90	0x8927      	BSF         can_get_id_value_L0+2, 4, 1
L__can_get_id1210:
;lib_can.h,749 :: 		getByte(value,2).B5 = address[-3].B0;
0x2B92	0x0EFD      	MOVLW       253
0x2B94	0x2523      	ADDWF       FARG_can_get_id_address, 0, 1
0x2B96	0x6E01      	MOVWF       R1 
0x2B98	0x0EFF      	MOVLW       255
0x2B9A	0x2124      	ADDWFC      FARG_can_get_id_address+1, 0, 1
0x2B9C	0x6E02      	MOVWF       R2 
0x2B9E	0xFFE9C001  	MOVFF       R1, FSR0L
0x2BA2	0xFFEAC002  	MOVFF       R2, FSR0H
0x2BA6	0xF000CFEE  	MOVFF       POSTINC0, R0
0x2BAA	0xB000      	BTFSC       R0, 0 
0x2BAC	0xD002      	BRA         L__can_get_id1211
0x2BAE	0x9B27      	BCF         can_get_id_value_L0+2, 5, 1
0x2BB0	0xD001      	BRA         L__can_get_id1212
L__can_get_id1211:
0x2BB2	0x8B27      	BSF         can_get_id_value_L0+2, 5, 1
L__can_get_id1212:
;lib_can.h,750 :: 		getByte(value,2).B6 = address[-3].B1;
0x2BB4	0xFFE9C001  	MOVFF       R1, FSR0L
0x2BB8	0xFFEAC002  	MOVFF       R2, FSR0H
0x2BBC	0xF000CFEE  	MOVFF       POSTINC0, R0
0x2BC0	0xB200      	BTFSC       R0, 1 
0x2BC2	0xD002      	BRA         L__can_get_id1213
0x2BC4	0x9D27      	BCF         can_get_id_value_L0+2, 6, 1
0x2BC6	0xD001      	BRA         L__can_get_id1214
L__can_get_id1213:
0x2BC8	0x8D27      	BSF         can_get_id_value_L0+2, 6, 1
L__can_get_id1214:
;lib_can.h,751 :: 		getByte(value,2).B7 = address[-3].B2;
0x2BCA	0xFFE9C001  	MOVFF       R1, FSR0L
0x2BCE	0xFFEAC002  	MOVFF       R2, FSR0H
0x2BD2	0xF000CFEE  	MOVFF       POSTINC0, R0
0x2BD6	0xB400      	BTFSC       R0, 2 
0x2BD8	0xD002      	BRA         L__can_get_id1215
0x2BDA	0x9F27      	BCF         can_get_id_value_L0+2, 7, 1
0x2BDC	0xD001      	BRA         L__can_get_id1216
L__can_get_id1215:
0x2BDE	0x8F27      	BSF         can_get_id_value_L0+2, 7, 1
L__can_get_id1216:
;lib_can.h,752 :: 		getByte(value,3) = address[-3]>>3;     //SIDH
0x2BE0	0xFFE9C001  	MOVFF       R1, FSR0L
0x2BE4	0xFFEAC002  	MOVFF       R2, FSR0H
0x2BE8	0xF001CFEE  	MOVFF       POSTINC0, R1
0x2BEC	0xF528C001  	MOVFF       R1, can_get_id_value_L0+3
0x2BF0	0x3328      	RRCF        can_get_id_value_L0+3, 1, 1
0x2BF2	0x9F28      	BCF         can_get_id_value_L0+3, 7, 1
0x2BF4	0x3328      	RRCF        can_get_id_value_L0+3, 1, 1
0x2BF6	0x9F28      	BCF         can_get_id_value_L0+3, 7, 1
0x2BF8	0x3328      	RRCF        can_get_id_value_L0+3, 1, 1
0x2BFA	0x9F28      	BCF         can_get_id_value_L0+3, 7, 1
;lib_can.h,761 :: 		}
L_can_get_id325:
;lib_can.h,763 :: 		return value;
0x2BFC	0xF000C525  	MOVFF       can_get_id_value_L0, R0
0x2C00	0xF001C526  	MOVFF       can_get_id_value_L0+1, R1
0x2C04	0xF002C527  	MOVFF       can_get_id_value_L0+2, R2
0x2C08	0xF003C528  	MOVFF       can_get_id_value_L0+3, R3
;lib_can.h,764 :: 		}
L_end_can_get_id:
0x2C0C	0x0012      	RETURN      0
; end of _can_get_id
_can_set_id:
;lib_can.h,717 :: 		void can_set_id(char *address, long value){
;lib_can.h,720 :: 		address[0] = getByte(value, 0);        //EIDL
0x2C0E	0xFFE1C523  	MOVFF       FARG_can_set_id_address, FSR1L
0x2C12	0xFFE2C524  	MOVFF       FARG_can_set_id_address+1, FSR1H
0x2C16	0xFFE6C525  	MOVFF       FARG_can_set_id_value, POSTINC1
;lib_can.h,721 :: 		address[-1] = getByte(value, 1);        //EIDh
0x2C1A	0x0EFF      	MOVLW       255
0x2C1C	0x0105      	MOVLB       5
0x2C1E	0x2523      	ADDWF       FARG_can_set_id_address, 0, 1
0x2C20	0x6EE1      	MOVWF       FSR1L 
0x2C22	0x0EFF      	MOVLW       255
0x2C24	0x2124      	ADDWFC      FARG_can_set_id_address+1, 0, 1
0x2C26	0x6EE2      	MOVWF       FSR1H 
0x2C28	0xFFE6C526  	MOVFF       FARG_can_set_id_value+1, POSTINC1
;lib_can.h,722 :: 		address[-2] = getByte(value, 2) & 0x03; //SIDL, BITS 16,17
0x2C2C	0x0EFE      	MOVLW       254
0x2C2E	0x2523      	ADDWF       FARG_can_set_id_address, 0, 1
0x2C30	0x6EE1      	MOVWF       FSR1L 
0x2C32	0x0EFF      	MOVLW       255
0x2C34	0x2124      	ADDWFC      FARG_can_set_id_address+1, 0, 1
0x2C36	0x6EE2      	MOVWF       FSR1H 
0x2C38	0x0E03      	MOVLW       3
0x2C3A	0x1527      	ANDWF       FARG_can_set_id_value+2, 0, 1
0x2C3C	0x6E00      	MOVWF       R0 
0x2C3E	0xFFE6C000  	MOVFF       R0, POSTINC1
;lib_can.h,723 :: 		address[-2].B3 = 1;   //ACEPT MESSAGE SEGUN EL FORMATO STAND Ó EXT
0x2C42	0x0EFE      	MOVLW       254
0x2C44	0x2523      	ADDWF       FARG_can_set_id_address, 0, 1
0x2C46	0x6EE1      	MOVWF       FSR1L 
0x2C48	0x0EFF      	MOVLW       255
0x2C4A	0x2124      	ADDWFC      FARG_can_set_id_address+1, 0, 1
0x2C4C	0x6EE2      	MOVWF       FSR1H 
0x2C4E	0x86E6      	BSF         POSTINC1, 3 
;lib_can.h,724 :: 		value <<= 3;         //RECORRE TRES POSIONES A LA IZQUIERDA
0x2C50	0x0E03      	MOVLW       3
0x2C52	0x6E00      	MOVWF       R0 
0x2C54	0x5000      	MOVF        R0, 0 
L__can_set_id1202:
0x2C56	0xE007      	BZ          L__can_set_id1203
0x2C58	0x3725      	RLCF        FARG_can_set_id_value, 1, 1
0x2C5A	0x9125      	BCF         FARG_can_set_id_value, 0, 1
0x2C5C	0x3726      	RLCF        FARG_can_set_id_value+1, 1, 1
0x2C5E	0x3727      	RLCF        FARG_can_set_id_value+2, 1, 1
0x2C60	0x3728      	RLCF        FARG_can_set_id_value+3, 1, 1
0x2C62	0x0FFF      	ADDLW       255
0x2C64	0xD7F8      	BRA         L__can_set_id1202
L__can_set_id1203:
;lib_can.h,725 :: 		address[-2] |= getByte(value, 2) & 0xE0;//SIDL, BITS 18,19,20
0x2C66	0x0EFE      	MOVLW       254
0x2C68	0x2523      	ADDWF       FARG_can_set_id_address, 0, 1
0x2C6A	0x6E01      	MOVWF       R1 
0x2C6C	0x0EFF      	MOVLW       255
0x2C6E	0x2124      	ADDWFC      FARG_can_set_id_address+1, 0, 1
0x2C70	0x6E02      	MOVWF       R2 
0x2C72	0x0EE0      	MOVLW       224
0x2C74	0x1527      	ANDWF       FARG_can_set_id_value+2, 0, 1
0x2C76	0x6E00      	MOVWF       R0 
0x2C78	0xFFE9C001  	MOVFF       R1, FSR0L
0x2C7C	0xFFEAC002  	MOVFF       R2, FSR0H
0x2C80	0x50EE      	MOVF        POSTINC0, 0 
0x2C82	0x1200      	IORWF       R0, 1 
0x2C84	0xFFE1C001  	MOVFF       R1, FSR1L
0x2C88	0xFFE2C002  	MOVFF       R2, FSR1H
0x2C8C	0xFFE6C000  	MOVFF       R0, POSTINC1
;lib_can.h,726 :: 		address[-3] = getByte(value, 3);        //SIDH 21-27
0x2C90	0x0EFD      	MOVLW       253
0x2C92	0x2523      	ADDWF       FARG_can_set_id_address, 0, 1
0x2C94	0x6EE1      	MOVWF       FSR1L 
0x2C96	0x0EFF      	MOVLW       255
0x2C98	0x2124      	ADDWFC      FARG_can_set_id_address+1, 0, 1
0x2C9A	0x6EE2      	MOVWF       FSR1H 
0x2C9C	0xFFE6C528  	MOVFF       FARG_can_set_id_value+3, POSTINC1
;lib_can.h,736 :: 		}
L_can_set_id323:
;lib_can.h,737 :: 		}
L_end_can_set_id:
0x2CA0	0x0012      	RETURN      0
; end of _can_set_id
_numToHex:
;string.h,208 :: 		char* numToHex(long valor, char *cadena, char bytes){
;string.h,209 :: 		char cont = 0;
0x2CA2	0x0105      	MOVLB       5
0x2CA4	0x6B2A      	CLRF        numToHex_cont_L0, 1
;string.h,212 :: 		while(bytes--){
L_numToHex72:
0x2CA6	0xF000C529  	MOVFF       FARG_numToHex_bytes, R0
0x2CAA	0x0729      	DECF        FARG_numToHex_bytes, 1, 1
0x2CAC	0x5200      	MOVF        R0, 1 
0x2CAE	0xB4D8      	BTFSC       STATUS, 2 
0x2CB0	0xD090      	BRA         L_numToHex73
;string.h,214 :: 		cadena[cont] = swap(getByte(valor, bytes))&0x0F;
0x2CB2	0x512A      	MOVF        numToHex_cont_L0, 0, 1
0x2CB4	0x2527      	ADDWF       FARG_numToHex_cadena, 0, 1
0x2CB6	0x6F2B      	MOVWF       FLOC__numToHex, 1
0x2CB8	0x0E00      	MOVLW       0
0x2CBA	0x2128      	ADDWFC      FARG_numToHex_cadena+1, 0, 1
0x2CBC	0x6F2C      	MOVWF       FLOC__numToHex+1, 1
0x2CBE	0x0E23      	MOVLW       FARG_numToHex_valor
0x2CC0	0x6EE9      	MOVWF       FSR0L 
0x2CC2	0x0E05      	MOVLW       hi_addr(FARG_numToHex_valor)
0x2CC4	0x6EEA      	MOVWF       FSR0H 
0x2CC6	0x5129      	MOVF        FARG_numToHex_bytes, 0, 1
0x2CC8	0x26E9      	ADDWF       FSR0L, 1 
0x2CCA	0xB0D8      	BTFSC       STATUS, 0 
0x2CCC	0x2AEA      	INCF        FSR0H, 1 
0x2CCE	0xF549CFEE  	MOVFF       POSTINC0, FARG_Swap_input
0x2CD2	0xF002EC50  	CALL        _Swap, 0
0x2CD6	0x0E0F      	MOVLW       15
0x2CD8	0x1600      	ANDWF       R0, 1 
0x2CDA	0xFFE1C52B  	MOVFF       FLOC__numToHex, FSR1L
0x2CDE	0xFFE2C52C  	MOVFF       FLOC__numToHex+1, FSR1H
0x2CE2	0xFFE6C000  	MOVFF       R0, POSTINC1
;string.h,215 :: 		if(cadena[cont] < 0x0A)
0x2CE6	0x512A      	MOVF        numToHex_cont_L0, 0, 1
0x2CE8	0x2527      	ADDWF       FARG_numToHex_cadena, 0, 1
0x2CEA	0x6EE9      	MOVWF       FSR0L 
0x2CEC	0x0E00      	MOVLW       0
0x2CEE	0x2128      	ADDWFC      FARG_numToHex_cadena+1, 0, 1
0x2CF0	0x6EEA      	MOVWF       FSR0H 
0x2CF2	0x0E0A      	MOVLW       10
0x2CF4	0x5CEE      	SUBWF       POSTINC0, 0 
0x2CF6	0xE214      	BC          L_numToHex74
;string.h,216 :: 		cadena[cont] = cadena[cont] + '0';
0x2CF8	0x512A      	MOVF        numToHex_cont_L0, 0, 1
0x2CFA	0x2527      	ADDWF       FARG_numToHex_cadena, 0, 1
0x2CFC	0x6E01      	MOVWF       R1 
0x2CFE	0x0E00      	MOVLW       0
0x2D00	0x2128      	ADDWFC      FARG_numToHex_cadena+1, 0, 1
0x2D02	0x6E02      	MOVWF       R2 
0x2D04	0xFFE9C001  	MOVFF       R1, FSR0L
0x2D08	0xFFEAC002  	MOVFF       R2, FSR0H
0x2D0C	0x0E30      	MOVLW       48
0x2D0E	0x24EE      	ADDWF       POSTINC0, 0 
0x2D10	0x6E00      	MOVWF       R0 
0x2D12	0xFFE1C001  	MOVFF       R1, FSR1L
0x2D16	0xFFE2C002  	MOVFF       R2, FSR1H
0x2D1A	0xFFE6C000  	MOVFF       R0, POSTINC1
0x2D1E	0xD013      	BRA         L_numToHex75
L_numToHex74:
;string.h,218 :: 		cadena[cont] = cadena[cont] + '7';  //Compenso la letra A
0x2D20	0x512A      	MOVF        numToHex_cont_L0, 0, 1
0x2D22	0x2527      	ADDWF       FARG_numToHex_cadena, 0, 1
0x2D24	0x6E01      	MOVWF       R1 
0x2D26	0x0E00      	MOVLW       0
0x2D28	0x2128      	ADDWFC      FARG_numToHex_cadena+1, 0, 1
0x2D2A	0x6E02      	MOVWF       R2 
0x2D2C	0xFFE9C001  	MOVFF       R1, FSR0L
0x2D30	0xFFEAC002  	MOVFF       R2, FSR0H
0x2D34	0x0E37      	MOVLW       55
0x2D36	0x24EE      	ADDWF       POSTINC0, 0 
0x2D38	0x6E00      	MOVWF       R0 
0x2D3A	0xFFE1C001  	MOVFF       R1, FSR1L
0x2D3E	0xFFE2C002  	MOVFF       R2, FSR1H
0x2D42	0xFFE6C000  	MOVFF       R0, POSTINC1
L_numToHex75:
;string.h,219 :: 		cont++;
0x2D46	0x2B2A      	INCF        numToHex_cont_L0, 1, 1
;string.h,221 :: 		cadena[cont] = getByte(valor, bytes)&0x0F;
0x2D48	0x512A      	MOVF        numToHex_cont_L0, 0, 1
0x2D4A	0x2527      	ADDWF       FARG_numToHex_cadena, 0, 1
0x2D4C	0x6EE1      	MOVWF       FSR1L 
0x2D4E	0x0E00      	MOVLW       0
0x2D50	0x2128      	ADDWFC      FARG_numToHex_cadena+1, 0, 1
0x2D52	0x6EE2      	MOVWF       FSR1H 
0x2D54	0x0E23      	MOVLW       FARG_numToHex_valor
0x2D56	0x6EE9      	MOVWF       FSR0L 
0x2D58	0x0E05      	MOVLW       hi_addr(FARG_numToHex_valor)
0x2D5A	0x6EEA      	MOVWF       FSR0H 
0x2D5C	0x5129      	MOVF        FARG_numToHex_bytes, 0, 1
0x2D5E	0x26E9      	ADDWF       FSR0L, 1 
0x2D60	0xB0D8      	BTFSC       STATUS, 0 
0x2D62	0x2AEA      	INCF        FSR0H, 1 
0x2D64	0x0E0F      	MOVLW       15
0x2D66	0x14EE      	ANDWF       POSTINC0, 0 
0x2D68	0x6E00      	MOVWF       R0 
0x2D6A	0xFFE6C000  	MOVFF       R0, POSTINC1
;string.h,222 :: 		if(cadena[cont] < 0x0A)
0x2D6E	0x512A      	MOVF        numToHex_cont_L0, 0, 1
0x2D70	0x2527      	ADDWF       FARG_numToHex_cadena, 0, 1
0x2D72	0x6EE9      	MOVWF       FSR0L 
0x2D74	0x0E00      	MOVLW       0
0x2D76	0x2128      	ADDWFC      FARG_numToHex_cadena+1, 0, 1
0x2D78	0x6EEA      	MOVWF       FSR0H 
0x2D7A	0x0E0A      	MOVLW       10
0x2D7C	0x5CEE      	SUBWF       POSTINC0, 0 
0x2D7E	0xE214      	BC          L_numToHex76
;string.h,223 :: 		cadena[cont] = cadena[cont] + '0';
0x2D80	0x512A      	MOVF        numToHex_cont_L0, 0, 1
0x2D82	0x2527      	ADDWF       FARG_numToHex_cadena, 0, 1
0x2D84	0x6E01      	MOVWF       R1 
0x2D86	0x0E00      	MOVLW       0
0x2D88	0x2128      	ADDWFC      FARG_numToHex_cadena+1, 0, 1
0x2D8A	0x6E02      	MOVWF       R2 
0x2D8C	0xFFE9C001  	MOVFF       R1, FSR0L
0x2D90	0xFFEAC002  	MOVFF       R2, FSR0H
0x2D94	0x0E30      	MOVLW       48
0x2D96	0x24EE      	ADDWF       POSTINC0, 0 
0x2D98	0x6E00      	MOVWF       R0 
0x2D9A	0xFFE1C001  	MOVFF       R1, FSR1L
0x2D9E	0xFFE2C002  	MOVFF       R2, FSR1H
0x2DA2	0xFFE6C000  	MOVFF       R0, POSTINC1
0x2DA6	0xD013      	BRA         L_numToHex77
L_numToHex76:
;string.h,225 :: 		cadena[cont] = cadena[cont] + '7';  //Compenso la letra A
0x2DA8	0x512A      	MOVF        numToHex_cont_L0, 0, 1
0x2DAA	0x2527      	ADDWF       FARG_numToHex_cadena, 0, 1
0x2DAC	0x6E01      	MOVWF       R1 
0x2DAE	0x0E00      	MOVLW       0
0x2DB0	0x2128      	ADDWFC      FARG_numToHex_cadena+1, 0, 1
0x2DB2	0x6E02      	MOVWF       R2 
0x2DB4	0xFFE9C001  	MOVFF       R1, FSR0L
0x2DB8	0xFFEAC002  	MOVFF       R2, FSR0H
0x2DBC	0x0E37      	MOVLW       55
0x2DBE	0x24EE      	ADDWF       POSTINC0, 0 
0x2DC0	0x6E00      	MOVWF       R0 
0x2DC2	0xFFE1C001  	MOVFF       R1, FSR1L
0x2DC6	0xFFE2C002  	MOVFF       R2, FSR1H
0x2DCA	0xFFE6C000  	MOVFF       R0, POSTINC1
L_numToHex77:
;string.h,226 :: 		cont++;
0x2DCE	0x2B2A      	INCF        numToHex_cont_L0, 1, 1
;string.h,227 :: 		}
0x2DD0	0xD76A      	BRA         L_numToHex72
L_numToHex73:
;string.h,228 :: 		cadena[cont] = 0;
0x2DD2	0x512A      	MOVF        numToHex_cont_L0, 0, 1
0x2DD4	0x2527      	ADDWF       FARG_numToHex_cadena, 0, 1
0x2DD6	0x6EE1      	MOVWF       FSR1L 
0x2DD8	0x0E00      	MOVLW       0
0x2DDA	0x2128      	ADDWFC      FARG_numToHex_cadena+1, 0, 1
0x2DDC	0x6EE2      	MOVWF       FSR1H 
0x2DDE	0x6AE6      	CLRF        POSTINC1 
;string.h,230 :: 		return cadena;
0x2DE0	0xF000C527  	MOVFF       FARG_numToHex_cadena, R0
0x2DE4	0xF001C528  	MOVFF       FARG_numToHex_cadena+1, R1
;string.h,231 :: 		}
L_end_numToHex:
0x2DE8	0x0012      	RETURN      0
; end of _numToHex
_I2C_soft_init:
;i2c_soft.h,16 :: 		void I2C_soft_init(){
;i2c_soft.h,18 :: 		I2C_SCLD = 1;
0x2DEA	0x8893      	BSF         I2C_SCLD, BitPos(I2C_SCLD+0) 
;i2c_soft.h,19 :: 		I2C_SDAD = 1;
0x2DEC	0x8A93      	BSF         I2C_SDAD, BitPos(I2C_SDAD+0) 
;i2c_soft.h,20 :: 		}
L_end_I2C_soft_init:
0x2DEE	0x0012      	RETURN      0
; end of _I2C_soft_init
_NRM4032:
;__Lib_MathDouble.c,174 :: 		
;__Lib_MathDouble.c,183 :: 		
0x2DF0	0xB00C      	BTFSC       R12, 0, 0
;__Lib_MathDouble.c,184 :: 		
0x2DF2	0xF017EF3A  	GOTO        NRMRND4032
;__Lib_MathDouble.c,185 :: 		
0x2DF6	0xA20C      	BTFSS       R12, 1, 0
;__Lib_MathDouble.c,186 :: 		
0x2DF8	0xF017EFE2  	GOTO        NRM40JPSETFOV32
;__Lib_MathDouble.c,188 :: 		
0x2DFC	0x6A0E      	CLRF        R14, 0
;__Lib_MathDouble.c,189 :: 		
0x2DFE	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,190 :: 		
0x2E00	0x6402      	CPFSGT      R2, 0
;__Lib_MathDouble.c,191 :: 		
0x2E02	0xF017EF51  	GOTO        NRM4032A
;__Lib_MathDouble.c,194 :: 		
0x2E06	0x0EF0      	MOVLW       240
;__Lib_MathDouble.c,195 :: 		
0x2E08	0x1402      	ANDWF       R2, 0, 0
;__Lib_MathDouble.c,196 :: 		
0x2E0A	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,197 :: 		
0x2E0C	0xF017EF1C  	GOTO        NORM4032
;__Lib_MathDouble.c,199 :: 		
0x2E10	0x3A02      	SWAPF       R2, 1, 0
;__Lib_MathDouble.c,200 :: 		
0x2E12	0x3801      	SWAPF       R1, 0, 0
;__Lib_MathDouble.c,201 :: 		
0x2E14	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,202 :: 		
0x2E16	0x2602      	ADDWF       R2, 1, 0
;__Lib_MathDouble.c,204 :: 		
0x2E18	0x3801      	SWAPF       R1, 0, 0
;__Lib_MathDouble.c,205 :: 		
0x2E1A	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,206 :: 		
0x2E1C	0x6E01      	MOVWF       R1, 0
;__Lib_MathDouble.c,207 :: 		
0x2E1E	0x3800      	SWAPF       R0, 0, 0
;__Lib_MathDouble.c,208 :: 		
0x2E20	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,209 :: 		
0x2E22	0x2601      	ADDWF       R1, 1, 0
;__Lib_MathDouble.c,211 :: 		
0x2E24	0x3800      	SWAPF       R0, 0, 0
;__Lib_MathDouble.c,212 :: 		
0x2E26	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,213 :: 		
0x2E28	0x6E00      	MOVWF       R0, 0
;__Lib_MathDouble.c,214 :: 		
0x2E2A	0x3808      	SWAPF       R8, 0, 0
;__Lib_MathDouble.c,215 :: 		
0x2E2C	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,216 :: 		
0x2E2E	0x2600      	ADDWF       R0, 1, 0
;__Lib_MathDouble.c,218 :: 		
0x2E30	0x3808      	SWAPF       R8, 0, 0
;__Lib_MathDouble.c,219 :: 		
0x2E32	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,220 :: 		
0x2E34	0x6E08      	MOVWF       R8, 0
;__Lib_MathDouble.c,222 :: 		
0x2E36	0x840E      	BSF         R14, 2, 0
;__Lib_MathDouble.c,224 :: 		
NORM4032:
;__Lib_MathDouble.c,225 :: 		
0x2E38	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,227 :: 		
0x2E3A	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,228 :: 		
0x2E3C	0xF017EF35  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,229 :: 		
0x2E40	0x3608      	RLCF        R8, 1, 0
;__Lib_MathDouble.c,230 :: 		
0x2E42	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,231 :: 		
0x2E44	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,232 :: 		
0x2E46	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,233 :: 		
0x2E48	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,234 :: 		
0x2E4A	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,235 :: 		
0x2E4C	0xF017EF35  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,236 :: 		
0x2E50	0x3608      	RLCF        R8, 1, 0
;__Lib_MathDouble.c,237 :: 		
0x2E52	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,238 :: 		
0x2E54	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,239 :: 		
0x2E56	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,240 :: 		
0x2E58	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,241 :: 		
0x2E5A	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,242 :: 		
0x2E5C	0xF017EF35  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,243 :: 		
0x2E60	0x3608      	RLCF        R8, 1, 0
;__Lib_MathDouble.c,244 :: 		
0x2E62	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,245 :: 		
0x2E64	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,246 :: 		
0x2E66	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,247 :: 		
0x2E68	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,249 :: 		
TNORMUN4032:
;__Lib_MathDouble.c,250 :: 		
0x2E6A	0x500E      	MOVF        R14, 0, 0
;__Lib_MathDouble.c,251 :: 		
0x2E6C	0x6403      	CPFSGT      R3, 0
;__Lib_MathDouble.c,252 :: 		
0x2E6E	0xF017EFD6  	GOTO        NRM40JPSETFUN32
;__Lib_MathDouble.c,253 :: 		
0x2E72	0x5E03      	SUBWF       R3, 1, 0
;__Lib_MathDouble.c,255 :: 		
NRMRND4032:
;__Lib_MathDouble.c,256 :: 		
0x2E74	0xBC0B      	BTFSC       R11, 6, 0
;__Lib_MathDouble.c,257 :: 		
0x2E76	0xAE08      	BTFSS       R8, 7, 0
;__Lib_MathDouble.c,258 :: 		
0x2E78	0xF017EFDC  	GOTO        NRM40JPFIXSIGN32
;__Lib_MathDouble.c,259 :: 		
0x2E7C	0x80D8      	BSF         STATUS, 0, 0
;__Lib_MathDouble.c,260 :: 		
0x2E7E	0x0E80      	MOVLW       128
;__Lib_MathDouble.c,261 :: 		
0x2E80	0x6408      	CPFSGT      R8, 0
;__Lib_MathDouble.c,262 :: 		
0x2E82	0x3000      	RRCF        R0, 0, 0
;__Lib_MathDouble.c,263 :: 		
0x2E84	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,264 :: 		
0x2E86	0x2200      	ADDWFC      R0, 1, 0
;__Lib_MathDouble.c,265 :: 		
0x2E88	0x2201      	ADDWFC      R1, 1, 0
;__Lib_MathDouble.c,266 :: 		
0x2E8A	0x2202      	ADDWFC      R2, 1, 0
;__Lib_MathDouble.c,268 :: 		
0x2E8C	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,269 :: 		
0x2E8E	0xF017EFDC  	GOTO        NRM40JPFIXSIGN32
;__Lib_MathDouble.c,270 :: 		
0x2E92	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,271 :: 		
0x2E94	0x3201      	RRCF        R1, 1, 0
;__Lib_MathDouble.c,272 :: 		
0x2E96	0x3200      	RRCF        R0, 1, 0
;__Lib_MathDouble.c,273 :: 		
0x2E98	0x4A03      	INFSNZ      R3, 1, 0
;__Lib_MathDouble.c,274 :: 		
0x2E9A	0xF017EFE2  	GOTO        NRM40JPSETFOV32
;__Lib_MathDouble.c,275 :: 		
0x2E9E	0xF017EFDC  	GOTO        NRM40JPFIXSIGN32
;__Lib_MathDouble.c,277 :: 		
NRM4032A:
;__Lib_MathDouble.c,278 :: 		
0x2EA2	0xF002C001  	MOVFF       R1, R2
;__Lib_MathDouble.c,279 :: 		
0x2EA6	0xF001C000  	MOVFF       R0, R1
;__Lib_MathDouble.c,280 :: 		
0x2EAA	0xF000C008  	MOVFF       R8, R0
;__Lib_MathDouble.c,281 :: 		
0x2EAE	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,282 :: 		
0x2EB0	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,283 :: 		
0x2EB2	0x860E      	BSF         R14, 3, 0
;__Lib_MathDouble.c,284 :: 		
0x2EB4	0x6402      	CPFSGT      R2, 0
;__Lib_MathDouble.c,285 :: 		
0x2EB6	0xF017EF88  	GOTO        NRM4032B
;__Lib_MathDouble.c,288 :: 		
0x2EBA	0x0EF0      	MOVLW       240
;__Lib_MathDouble.c,289 :: 		
0x2EBC	0x1402      	ANDWF       R2, 0, 0
;__Lib_MathDouble.c,290 :: 		
0x2EBE	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,291 :: 		
0x2EC0	0xF017EF70  	GOTO        NORM4032A
;__Lib_MathDouble.c,292 :: 		
0x2EC4	0x3A02      	SWAPF       R2, 1, 0
;__Lib_MathDouble.c,293 :: 		
0x2EC6	0x3801      	SWAPF       R1, 0, 0
;__Lib_MathDouble.c,294 :: 		
0x2EC8	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,295 :: 		
0x2ECA	0x2602      	ADDWF       R2, 1, 0
;__Lib_MathDouble.c,297 :: 		
0x2ECC	0x3801      	SWAPF       R1, 0, 0
;__Lib_MathDouble.c,298 :: 		
0x2ECE	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,299 :: 		
0x2ED0	0x6E01      	MOVWF       R1, 0
;__Lib_MathDouble.c,300 :: 		
0x2ED2	0x3800      	SWAPF       R0, 0, 0
;__Lib_MathDouble.c,301 :: 		
0x2ED4	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,302 :: 		
0x2ED6	0x2601      	ADDWF       R1, 1, 0
;__Lib_MathDouble.c,304 :: 		
0x2ED8	0x3800      	SWAPF       R0, 0, 0
;__Lib_MathDouble.c,305 :: 		
0x2EDA	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,306 :: 		
0x2EDC	0x6E00      	MOVWF       R0, 0
;__Lib_MathDouble.c,308 :: 		
0x2EDE	0x840E      	BSF         R14, 2, 0
;__Lib_MathDouble.c,310 :: 		
NORM4032A:
;__Lib_MathDouble.c,311 :: 		
0x2EE0	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,313 :: 		
0x2EE2	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,314 :: 		
0x2EE4	0xF017EF35  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,315 :: 		
0x2EE8	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,316 :: 		
0x2EEA	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,317 :: 		
0x2EEC	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,318 :: 		
0x2EEE	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,319 :: 		
0x2EF0	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,320 :: 		
0x2EF2	0xF017EF35  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,321 :: 		
0x2EF6	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,322 :: 		
0x2EF8	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,323 :: 		
0x2EFA	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,324 :: 		
0x2EFC	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,325 :: 		
0x2EFE	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,326 :: 		
0x2F00	0xF017EF35  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,327 :: 		
0x2F04	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,328 :: 		
0x2F06	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,329 :: 		
0x2F08	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,330 :: 		
0x2F0A	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,331 :: 		
0x2F0C	0xF017EF35  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,333 :: 		
NRM4032B:
;__Lib_MathDouble.c,334 :: 		
0x2F10	0xF002C001  	MOVFF       R1, R2
;__Lib_MathDouble.c,335 :: 		
0x2F14	0xF001C000  	MOVFF       R0, R1
;__Lib_MathDouble.c,336 :: 		
0x2F18	0x6A00      	CLRF        R0, 0
;__Lib_MathDouble.c,337 :: 		
0x2F1A	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,338 :: 		
0x2F1C	0x960E      	BCF         R14, 3, 0
;__Lib_MathDouble.c,339 :: 		
0x2F1E	0x880E      	BSF         R14, 4, 0
;__Lib_MathDouble.c,340 :: 		
0x2F20	0x6402      	CPFSGT      R2, 0
;__Lib_MathDouble.c,341 :: 		
0x2F22	0xF017EFB5  	GOTO        NRM4032C
;__Lib_MathDouble.c,344 :: 		
0x2F26	0x0EF0      	MOVLW       240
;__Lib_MathDouble.c,345 :: 		
0x2F28	0x1402      	ANDWF       R2, 0, 0
;__Lib_MathDouble.c,346 :: 		
0x2F2A	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,347 :: 		
0x2F2C	0xF017EFA0  	GOTO        NORM4032B
;__Lib_MathDouble.c,349 :: 		
0x2F30	0x3A02      	SWAPF       R2, 1, 0
;__Lib_MathDouble.c,350 :: 		
0x2F32	0x3801      	SWAPF       R1, 0, 0
;__Lib_MathDouble.c,351 :: 		
0x2F34	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,352 :: 		
0x2F36	0x2602      	ADDWF       R2, 1, 0
;__Lib_MathDouble.c,354 :: 		
0x2F38	0x3801      	SWAPF       R1, 0, 0
;__Lib_MathDouble.c,355 :: 		
0x2F3A	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,356 :: 		
0x2F3C	0x6E01      	MOVWF       R1, 0
;__Lib_MathDouble.c,358 :: 		
0x2F3E	0x840E      	BSF         R14, 2, 0
;__Lib_MathDouble.c,360 :: 		
NORM4032B:
;__Lib_MathDouble.c,361 :: 		
0x2F40	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,362 :: 		
0x2F42	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,363 :: 		
0x2F44	0xF017EF35  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,364 :: 		
0x2F48	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,365 :: 		
0x2F4A	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,366 :: 		
0x2F4C	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,367 :: 		
0x2F4E	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,368 :: 		
0x2F50	0xF017EF35  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,369 :: 		
0x2F54	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,370 :: 		
0x2F56	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,371 :: 		
0x2F58	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,372 :: 		
0x2F5A	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,373 :: 		
0x2F5C	0xF017EF35  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,374 :: 		
0x2F60	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,375 :: 		
0x2F62	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,376 :: 		
0x2F64	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,377 :: 		
0x2F66	0xF017EF35  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,379 :: 		
NRM4032C:
;__Lib_MathDouble.c,380 :: 		
0x2F6A	0xF002C001  	MOVFF       R1, R2
;__Lib_MathDouble.c,381 :: 		
0x2F6E	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,382 :: 		
0x2F70	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,383 :: 		
0x2F72	0x860E      	BSF         R14, 3, 0
;__Lib_MathDouble.c,384 :: 		
0x2F74	0x6402      	CPFSGT      R2, 0
;__Lib_MathDouble.c,385 :: 		
0x2F76	0xF017EFE8  	GOTO        NRM40JPRES032
;__Lib_MathDouble.c,388 :: 		
0x2F7A	0x0EF0      	MOVLW       240
;__Lib_MathDouble.c,389 :: 		
0x2F7C	0x1402      	ANDWF       R2, 0, 0
;__Lib_MathDouble.c,390 :: 		
0x2F7E	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,391 :: 		
0x2F80	0xF017EFC4  	GOTO        NORM4032C
;__Lib_MathDouble.c,392 :: 		
0x2F84	0x3A02      	SWAPF       R2, 1, 0
;__Lib_MathDouble.c,394 :: 		
0x2F86	0x840E      	BSF         R14, 2, 0
;__Lib_MathDouble.c,396 :: 		
NORM4032C:
;__Lib_MathDouble.c,397 :: 		
0x2F88	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,399 :: 		
0x2F8A	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,400 :: 		
0x2F8C	0xF017EF35  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,401 :: 		
0x2F90	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,402 :: 		
0x2F92	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,403 :: 		
0x2F94	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,404 :: 		
0x2F96	0xF017EF35  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,405 :: 		
0x2F9A	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,406 :: 		
0x2F9C	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,407 :: 		
0x2F9E	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,408 :: 		
0x2FA0	0xF017EF35  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,409 :: 		
0x2FA4	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,410 :: 		
0x2FA6	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,411 :: 		
0x2FA8	0xF017EF35  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,413 :: 		
NRM40JPSETFUN32:
;__Lib_MathDouble.c,414 :: 		
0x2FAC	0x0E01      	MOVLW       1
;__Lib_MathDouble.c,415 :: 		
0x2FAE	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,417 :: 		
0x2FB0	0xF00BEC3F  	CALL        _SETFUN32, 0
;__Lib_MathDouble.c,419 :: 		
0x2FB4	0xF017EFEC  	GOTO        NRM40EEE
;__Lib_MathDouble.c,420 :: 		
NRM40JPFIXSIGN32:
;__Lib_MathDouble.c,421 :: 		
0x2FB8	0x0E02      	MOVLW       2
;__Lib_MathDouble.c,422 :: 		
0x2FBA	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,424 :: 		
0x2FBC	0xF00BEC5F  	CALL        _FIXSIGN32, 0
;__Lib_MathDouble.c,426 :: 		
0x2FC0	0xF017EFEC  	GOTO        NRM40EEE
;__Lib_MathDouble.c,427 :: 		
NRM40JPSETFOV32:
;__Lib_MathDouble.c,428 :: 		
0x2FC4	0x0E04      	MOVLW       4
;__Lib_MathDouble.c,429 :: 		
0x2FC6	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,431 :: 		
0x2FC8	0xF00BEC33  	CALL        _SETFOV32, 0
;__Lib_MathDouble.c,433 :: 		
0x2FCC	0xF017EFEC  	GOTO        NRM40EEE
;__Lib_MathDouble.c,434 :: 		
NRM40JPRES032:
;__Lib_MathDouble.c,435 :: 		
0x2FD0	0x0E08      	MOVLW       8
;__Lib_MathDouble.c,436 :: 		
0x2FD2	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,438 :: 		
0x2FD4	0xF00BEC02  	CALL        _RES032, 0
;__Lib_MathDouble.c,440 :: 		
NRM40EEE:
;__Lib_MathDouble.c,448 :: 		
L_end_NRM4032:
0x2FD8	0x0012      	RETURN      0
; end of _NRM4032
_can_user_guardHeartBeat:
;Expendedora.c,2024 :: 		void can_user_guardHeartBeat(char idNodo){
;Expendedora.c,2026 :: 		}
L_end_can_user_guardHeartBeat:
0x2FDA	0x0012      	RETURN      0
; end of _can_user_guardHeartBeat
_external_int1_enable:
;lib_external_int1.h,15 :: 		void external_int1_enable(bool enable){
;lib_external_int1.h,16 :: 		INTCON3.INT1IE = enable.B0;        //DISPONIBILIDAD
0x2FDC	0x0105      	MOVLB       5
0x2FDE	0xB101      	BTFSC       FARG_external_int1_enable_enable, 0, 1
0x2FE0	0xD002      	BRA         L__external_int1_enable1328
0x2FE2	0x96F0      	BCF         INTCON3, 3 
0x2FE4	0xD001      	BRA         L__external_int1_enable1329
L__external_int1_enable1328:
0x2FE6	0x86F0      	BSF         INTCON3, 3 
L__external_int1_enable1329:
;lib_external_int1.h,17 :: 		}
L_end_external_int1_enable:
0x2FE8	0x0012      	RETURN      0
; end of _external_int1_enable
_can_write:
;lib_can.h,589 :: 		bool can_write(long id, char *datos, char size, char priority, bool rtr){
;lib_can.h,595 :: 		if(!TXB0CON.TXREQ){
0x2FEA	0x010F      	MOVLB       15
0x2FEC	0xB740      	BTFSC       TXB0CON, 3, 1
0x2FEE	0xD01F      	BRA         L_can_write272
;lib_can.h,596 :: 		transmisor = &TXB0CON;
0x2FF0	0x0E40      	MOVLW       TXB0CON
0x2FF2	0x0105      	MOVLB       5
0x2FF4	0x6F0D      	MOVWF       can_write_transmisor_L0, 1
0x2FF6	0x0E0F      	MOVLW       hi_addr(TXB0CON)
0x2FF8	0x6F0E      	MOVWF       can_write_transmisor_L0+1, 1
;lib_can.h,597 :: 		mascara = &TXB0EIDL;
0x2FFA	0x0E44      	MOVLW       TXB0EIDL
0x2FFC	0x6F0F      	MOVWF       can_write_mascara_L0, 1
0x2FFE	0x0E0F      	MOVLW       hi_addr(TXB0EIDL)
0x3000	0x6F10      	MOVWF       can_write_mascara_L0+1, 1
;lib_can.h,598 :: 		regLen = &TXB0DLC;
0x3002	0x0E45      	MOVLW       TXB0DLC
0x3004	0x6F11      	MOVWF       can_write_regLen_L0, 1
0x3006	0x0E0F      	MOVLW       hi_addr(TXB0DLC)
0x3008	0x6F12      	MOVWF       can_write_regLen_L0+1, 1
;lib_can.h,599 :: 		buffer = &TXB0D0;
0x300A	0x0E46      	MOVLW       TXB0D0
0x300C	0x6F13      	MOVWF       can_write_buffer_L0, 1
0x300E	0x0E0F      	MOVLW       hi_addr(TXB0D0)
0x3010	0x6F14      	MOVWF       can_write_buffer_L0+1, 1
;lib_can.h,600 :: 		ref = can.mode == CAN_MODE_LEGACY? 0x08:0x03;
0x3012	0x0103      	MOVLB       3
0x3014	0x5157      	MOVF        _can+14, 0, 1
0x3016	0x0A00      	XORLW       0
0x3018	0xE104      	BNZ         L_can_write273
0x301A	0x0E08      	MOVLW       8
0x301C	0x0105      	MOVLB       5
0x301E	0x6F0A      	MOVWF       ?FLOC___can_writeT1004, 1
0x3020	0xD003      	BRA         L_can_write274
L_can_write273:
0x3022	0x0105      	MOVLB       5
0x3024	0x0E03      	MOVLW       3
0x3026	0x6F0A      	MOVWF       ?FLOC___can_writeT1004, 1
L_can_write274:
0x3028	0xF515C50A  	MOVFF       ?FLOC___can_writeT1004, can_write_ref_L0
;lib_can.h,601 :: 		}else if(!TXB1CON.TXREQ){
0x302C	0xD04A      	BRA         L_can_write275
L_can_write272:
0x302E	0x010F      	MOVLB       15
0x3030	0xB730      	BTFSC       TXB1CON, 3, 1
0x3032	0xD01F      	BRA         L_can_write276
;lib_can.h,602 :: 		transmisor = &TXB1CON;
0x3034	0x0E30      	MOVLW       TXB1CON
0x3036	0x0105      	MOVLB       5
0x3038	0x6F0D      	MOVWF       can_write_transmisor_L0, 1
0x303A	0x0E0F      	MOVLW       hi_addr(TXB1CON)
0x303C	0x6F0E      	MOVWF       can_write_transmisor_L0+1, 1
;lib_can.h,603 :: 		mascara = &TXB1EIDL;
0x303E	0x0E34      	MOVLW       TXB1EIDL
0x3040	0x6F0F      	MOVWF       can_write_mascara_L0, 1
0x3042	0x0E0F      	MOVLW       hi_addr(TXB1EIDL)
0x3044	0x6F10      	MOVWF       can_write_mascara_L0+1, 1
;lib_can.h,604 :: 		regLen = &TXB1DLC;
0x3046	0x0E35      	MOVLW       TXB1DLC
0x3048	0x6F11      	MOVWF       can_write_regLen_L0, 1
0x304A	0x0E0F      	MOVLW       hi_addr(TXB1DLC)
0x304C	0x6F12      	MOVWF       can_write_regLen_L0+1, 1
;lib_can.h,605 :: 		buffer = &TXB1D0;
0x304E	0x0E36      	MOVLW       TXB1D0
0x3050	0x6F13      	MOVWF       can_write_buffer_L0, 1
0x3052	0x0E0F      	MOVLW       hi_addr(TXB1D0)
0x3054	0x6F14      	MOVWF       can_write_buffer_L0+1, 1
;lib_can.h,606 :: 		ref = can.mode == CAN_MODE_LEGACY? 0x06:0x04;
0x3056	0x0103      	MOVLB       3
0x3058	0x5157      	MOVF        _can+14, 0, 1
0x305A	0x0A00      	XORLW       0
0x305C	0xE104      	BNZ         L_can_write277
0x305E	0x0E06      	MOVLW       6
0x3060	0x0105      	MOVLB       5
0x3062	0x6F0B      	MOVWF       ?FLOC___can_writeT1012, 1
0x3064	0xD003      	BRA         L_can_write278
L_can_write277:
0x3066	0x0105      	MOVLB       5
0x3068	0x0E04      	MOVLW       4
0x306A	0x6F0B      	MOVWF       ?FLOC___can_writeT1012, 1
L_can_write278:
0x306C	0xF515C50B  	MOVFF       ?FLOC___can_writeT1012, can_write_ref_L0
;lib_can.h,607 :: 		}else if(!TXB2CON.TXREQ){
0x3070	0xD028      	BRA         L_can_write279
L_can_write276:
0x3072	0x010F      	MOVLB       15
0x3074	0xB720      	BTFSC       TXB2CON, 3, 1
0x3076	0xD01F      	BRA         L_can_write280
;lib_can.h,608 :: 		transmisor = &TXB2CON;
0x3078	0x0E20      	MOVLW       TXB2CON
0x307A	0x0105      	MOVLB       5
0x307C	0x6F0D      	MOVWF       can_write_transmisor_L0, 1
0x307E	0x0E0F      	MOVLW       hi_addr(TXB2CON)
0x3080	0x6F0E      	MOVWF       can_write_transmisor_L0+1, 1
;lib_can.h,609 :: 		mascara = &TXB2EIDL;
0x3082	0x0E24      	MOVLW       TXB2EIDL
0x3084	0x6F0F      	MOVWF       can_write_mascara_L0, 1
0x3086	0x0E0F      	MOVLW       hi_addr(TXB2EIDL)
0x3088	0x6F10      	MOVWF       can_write_mascara_L0+1, 1
;lib_can.h,610 :: 		regLen = &TXB2DLC;
0x308A	0x0E25      	MOVLW       TXB2DLC
0x308C	0x6F11      	MOVWF       can_write_regLen_L0, 1
0x308E	0x0E0F      	MOVLW       hi_addr(TXB2DLC)
0x3090	0x6F12      	MOVWF       can_write_regLen_L0+1, 1
;lib_can.h,611 :: 		buffer = &TXB2D0;
0x3092	0x0E26      	MOVLW       TXB2D0
0x3094	0x6F13      	MOVWF       can_write_buffer_L0, 1
0x3096	0x0E0F      	MOVLW       hi_addr(TXB2D0)
0x3098	0x6F14      	MOVWF       can_write_buffer_L0+1, 1
;lib_can.h,612 :: 		ref = can.mode == CAN_MODE_LEGACY? 0x04:0x05;
0x309A	0x0103      	MOVLB       3
0x309C	0x5157      	MOVF        _can+14, 0, 1
0x309E	0x0A00      	XORLW       0
0x30A0	0xE104      	BNZ         L_can_write281
0x30A2	0x0E04      	MOVLW       4
0x30A4	0x0105      	MOVLB       5
0x30A6	0x6F0C      	MOVWF       ?FLOC___can_writeT1020, 1
0x30A8	0xD003      	BRA         L_can_write282
L_can_write281:
0x30AA	0x0105      	MOVLB       5
0x30AC	0x0E05      	MOVLW       5
0x30AE	0x6F0C      	MOVWF       ?FLOC___can_writeT1020, 1
L_can_write282:
0x30B0	0xF515C50C  	MOVFF       ?FLOC___can_writeT1020, can_write_ref_L0
;lib_can.h,613 :: 		}else if(can.mode == CAN_MODE_LEGACY){
0x30B4	0xD006      	BRA         L_can_write283
L_can_write280:
0x30B6	0x0103      	MOVLB       3
0x30B8	0x5157      	MOVF        _can+14, 0, 1
0x30BA	0x0A00      	XORLW       0
0x30BC	0xE102      	BNZ         L_can_write284
;lib_can.h,614 :: 		return false;  //No encontro a nadie para enviar en modo legacy
0x30BE	0x6A00      	CLRF        R0 
0x30C0	0xD104      	BRA         L_end_can_write
;lib_can.h,615 :: 		}
L_can_write284:
L_can_write283:
L_can_write279:
L_can_write275:
0x30C2	0x0103      	MOVLB       3
;lib_can.h,617 :: 		if(can.mode == CAN_MODE_LEGACY){
0x30C4	0x5157      	MOVF        _can+14, 0, 1
0x30C6	0x0A00      	XORLW       0
0x30C8	0xE106      	BNZ         L_can_write285
;lib_can.h,619 :: 		CANCON &= 0xF1;
0x30CA	0x0EF1      	MOVLW       241
0x30CC	0x166F      	ANDWF       CANCON, 1 
;lib_can.h,620 :: 		CANCON |= ref;   //BITS WIN
0x30CE	0x0105      	MOVLB       5
0x30D0	0x5115      	MOVF        can_write_ref_L0, 0, 1
0x30D2	0x126F      	IORWF       CANCON, 1 
;lib_can.h,621 :: 		}else{  //MODO 1 Y 2
0x30D4	0xD0A3      	BRA         L_can_write286
L_can_write285:
;lib_can.h,623 :: 		if(BSEL0.B0TXEN && !B0CON.TXREQ){
0x30D6	0x010D      	MOVLB       13
0x30D8	0xA5F8      	BTFSS       BSEL0, 2, 1
0x30DA	0xD017      	BRA         L_can_write289
0x30DC	0x010E      	MOVLB       14
0x30DE	0xB720      	BTFSC       B0CON, 3, 1
0x30E0	0xD014      	BRA         L_can_write289
L__can_write970:
;lib_can.h,624 :: 		transmisor = &B0CON;
0x30E2	0x0E20      	MOVLW       B0CON
0x30E4	0x0105      	MOVLB       5
0x30E6	0x6F0D      	MOVWF       can_write_transmisor_L0, 1
0x30E8	0x0E0E      	MOVLW       hi_addr(B0CON)
0x30EA	0x6F0E      	MOVWF       can_write_transmisor_L0+1, 1
;lib_can.h,625 :: 		mascara = &B0EIDL;
0x30EC	0x0E24      	MOVLW       B0EIDL
0x30EE	0x6F0F      	MOVWF       can_write_mascara_L0, 1
0x30F0	0x0E0E      	MOVLW       hi_addr(B0EIDL)
0x30F2	0x6F10      	MOVWF       can_write_mascara_L0+1, 1
;lib_can.h,626 :: 		regLen = &B0DLC;
0x30F4	0x0E25      	MOVLW       B0DLC
0x30F6	0x6F11      	MOVWF       can_write_regLen_L0, 1
0x30F8	0x0E0E      	MOVLW       hi_addr(B0DLC)
0x30FA	0x6F12      	MOVWF       can_write_regLen_L0+1, 1
;lib_can.h,627 :: 		buffer = &B0D0;
0x30FC	0x0E26      	MOVLW       B0D0
0x30FE	0x6F13      	MOVWF       can_write_buffer_L0, 1
0x3100	0x0E0E      	MOVLW       hi_addr(B0D0)
0x3102	0x6F14      	MOVWF       can_write_buffer_L0+1, 1
;lib_can.h,628 :: 		ref = 0x12;
0x3104	0x0E12      	MOVLW       18
0x3106	0x6F15      	MOVWF       can_write_ref_L0, 1
;lib_can.h,629 :: 		}else if(BSEL0.B1TXEN && !B1CON.TXREQ){
0x3108	0xD084      	BRA         L_can_write290
L_can_write289:
0x310A	0x010D      	MOVLB       13
0x310C	0xA7F8      	BTFSS       BSEL0, 3, 1
0x310E	0xD017      	BRA         L_can_write293
0x3110	0x010E      	MOVLB       14
0x3112	0xB730      	BTFSC       B1CON, 3, 1
0x3114	0xD014      	BRA         L_can_write293
L__can_write969:
;lib_can.h,630 :: 		transmisor = &B1CON;
0x3116	0x0E30      	MOVLW       B1CON
0x3118	0x0105      	MOVLB       5
0x311A	0x6F0D      	MOVWF       can_write_transmisor_L0, 1
0x311C	0x0E0E      	MOVLW       hi_addr(B1CON)
0x311E	0x6F0E      	MOVWF       can_write_transmisor_L0+1, 1
;lib_can.h,631 :: 		mascara = &B1EIDL;
0x3120	0x0E34      	MOVLW       B1EIDL
0x3122	0x6F0F      	MOVWF       can_write_mascara_L0, 1
0x3124	0x0E0E      	MOVLW       hi_addr(B1EIDL)
0x3126	0x6F10      	MOVWF       can_write_mascara_L0+1, 1
;lib_can.h,632 :: 		regLen = &B1DLC;
0x3128	0x0E35      	MOVLW       B1DLC
0x312A	0x6F11      	MOVWF       can_write_regLen_L0, 1
0x312C	0x0E0E      	MOVLW       hi_addr(B1DLC)
0x312E	0x6F12      	MOVWF       can_write_regLen_L0+1, 1
;lib_can.h,633 :: 		buffer = &B1D0;
0x3130	0x0E36      	MOVLW       B1D0
0x3132	0x6F13      	MOVWF       can_write_buffer_L0, 1
0x3134	0x0E0E      	MOVLW       hi_addr(B1D0)
0x3136	0x6F14      	MOVWF       can_write_buffer_L0+1, 1
;lib_can.h,634 :: 		ref = 0x13;
0x3138	0x0E13      	MOVLW       19
0x313A	0x6F15      	MOVWF       can_write_ref_L0, 1
;lib_can.h,635 :: 		}else if(BSEL0.B2TXEN && !B2CON.TXREQ){
0x313C	0xD06A      	BRA         L_can_write294
L_can_write293:
0x313E	0x010D      	MOVLB       13
0x3140	0xA9F8      	BTFSS       BSEL0, 4, 1
0x3142	0xD017      	BRA         L_can_write297
0x3144	0x010E      	MOVLB       14
0x3146	0xB740      	BTFSC       B2CON, 3, 1
0x3148	0xD014      	BRA         L_can_write297
L__can_write968:
;lib_can.h,636 :: 		transmisor = &B2CON;
0x314A	0x0E40      	MOVLW       B2CON
0x314C	0x0105      	MOVLB       5
0x314E	0x6F0D      	MOVWF       can_write_transmisor_L0, 1
0x3150	0x0E0E      	MOVLW       hi_addr(B2CON)
0x3152	0x6F0E      	MOVWF       can_write_transmisor_L0+1, 1
;lib_can.h,637 :: 		mascara = &B2EIDL;
0x3154	0x0E44      	MOVLW       B2EIDL
0x3156	0x6F0F      	MOVWF       can_write_mascara_L0, 1
0x3158	0x0E0E      	MOVLW       hi_addr(B2EIDL)
0x315A	0x6F10      	MOVWF       can_write_mascara_L0+1, 1
;lib_can.h,638 :: 		regLen = &B2DLC;
0x315C	0x0E45      	MOVLW       B2DLC
0x315E	0x6F11      	MOVWF       can_write_regLen_L0, 1
0x3160	0x0E0E      	MOVLW       hi_addr(B2DLC)
0x3162	0x6F12      	MOVWF       can_write_regLen_L0+1, 1
;lib_can.h,639 :: 		buffer = &B2D0;
0x3164	0x0E46      	MOVLW       B2D0
0x3166	0x6F13      	MOVWF       can_write_buffer_L0, 1
0x3168	0x0E0E      	MOVLW       hi_addr(B2D0)
0x316A	0x6F14      	MOVWF       can_write_buffer_L0+1, 1
;lib_can.h,640 :: 		ref = 0x14;
0x316C	0x0E14      	MOVLW       20
0x316E	0x6F15      	MOVWF       can_write_ref_L0, 1
;lib_can.h,641 :: 		}else if(BSEL0.B3TXEN && !B3CON.TXREQ){
0x3170	0xD050      	BRA         L_can_write298
L_can_write297:
0x3172	0x010D      	MOVLB       13
0x3174	0xABF8      	BTFSS       BSEL0, 5, 1
0x3176	0xD017      	BRA         L_can_write301
0x3178	0x010E      	MOVLB       14
0x317A	0xB750      	BTFSC       B3CON, 3, 1
0x317C	0xD014      	BRA         L_can_write301
L__can_write967:
;lib_can.h,642 :: 		transmisor = &B3CON;
0x317E	0x0E50      	MOVLW       B3CON
0x3180	0x0105      	MOVLB       5
0x3182	0x6F0D      	MOVWF       can_write_transmisor_L0, 1
0x3184	0x0E0E      	MOVLW       hi_addr(B3CON)
0x3186	0x6F0E      	MOVWF       can_write_transmisor_L0+1, 1
;lib_can.h,643 :: 		mascara = &B3EIDL;
0x3188	0x0E54      	MOVLW       B3EIDL
0x318A	0x6F0F      	MOVWF       can_write_mascara_L0, 1
0x318C	0x0E0E      	MOVLW       hi_addr(B3EIDL)
0x318E	0x6F10      	MOVWF       can_write_mascara_L0+1, 1
;lib_can.h,644 :: 		regLen = &B3DLC;
0x3190	0x0E55      	MOVLW       B3DLC
0x3192	0x6F11      	MOVWF       can_write_regLen_L0, 1
0x3194	0x0E0E      	MOVLW       hi_addr(B3DLC)
0x3196	0x6F12      	MOVWF       can_write_regLen_L0+1, 1
;lib_can.h,645 :: 		buffer = &B3D0;
0x3198	0x0E56      	MOVLW       B3D0
0x319A	0x6F13      	MOVWF       can_write_buffer_L0, 1
0x319C	0x0E0E      	MOVLW       hi_addr(B3D0)
0x319E	0x6F14      	MOVWF       can_write_buffer_L0+1, 1
;lib_can.h,646 :: 		ref = 0x15;
0x31A0	0x0E15      	MOVLW       21
0x31A2	0x6F15      	MOVWF       can_write_ref_L0, 1
;lib_can.h,647 :: 		}else if(BSEL0.B4TXEN && !B4CON.TXREQ){
0x31A4	0xD036      	BRA         L_can_write302
L_can_write301:
0x31A6	0x010D      	MOVLB       13
0x31A8	0xADF8      	BTFSS       BSEL0, 6, 1
0x31AA	0xD017      	BRA         L_can_write305
0x31AC	0x010E      	MOVLB       14
0x31AE	0xB760      	BTFSC       B4CON, 3, 1
0x31B0	0xD014      	BRA         L_can_write305
L__can_write966:
;lib_can.h,648 :: 		transmisor = &B4CON;
0x31B2	0x0E60      	MOVLW       B4CON
0x31B4	0x0105      	MOVLB       5
0x31B6	0x6F0D      	MOVWF       can_write_transmisor_L0, 1
0x31B8	0x0E0E      	MOVLW       hi_addr(B4CON)
0x31BA	0x6F0E      	MOVWF       can_write_transmisor_L0+1, 1
;lib_can.h,649 :: 		mascara = &B4EIDL;
0x31BC	0x0E64      	MOVLW       B4EIDL
0x31BE	0x6F0F      	MOVWF       can_write_mascara_L0, 1
0x31C0	0x0E0E      	MOVLW       hi_addr(B4EIDL)
0x31C2	0x6F10      	MOVWF       can_write_mascara_L0+1, 1
;lib_can.h,650 :: 		regLen = &B4DLC;
0x31C4	0x0E65      	MOVLW       B4DLC
0x31C6	0x6F11      	MOVWF       can_write_regLen_L0, 1
0x31C8	0x0E0E      	MOVLW       hi_addr(B4DLC)
0x31CA	0x6F12      	MOVWF       can_write_regLen_L0+1, 1
;lib_can.h,651 :: 		buffer = &B4D0;
0x31CC	0x0E66      	MOVLW       B4D0
0x31CE	0x6F13      	MOVWF       can_write_buffer_L0, 1
0x31D0	0x0E0E      	MOVLW       hi_addr(B4D0)
0x31D2	0x6F14      	MOVWF       can_write_buffer_L0+1, 1
;lib_can.h,652 :: 		ref = 0x16;
0x31D4	0x0E16      	MOVLW       22
0x31D6	0x6F15      	MOVWF       can_write_ref_L0, 1
;lib_can.h,653 :: 		}else if(BSEL0.B5TXEN && !B5CON.TXREQ){
0x31D8	0xD01C      	BRA         L_can_write306
L_can_write305:
0x31DA	0x010D      	MOVLB       13
0x31DC	0xAFF8      	BTFSS       BSEL0, 7, 1
0x31DE	0xD017      	BRA         L_can_write309
0x31E0	0x010E      	MOVLB       14
0x31E2	0xB770      	BTFSC       B5CON, 3, 1
0x31E4	0xD014      	BRA         L_can_write309
L__can_write965:
;lib_can.h,654 :: 		transmisor = &B5CON;
0x31E6	0x0E70      	MOVLW       B5CON
0x31E8	0x0105      	MOVLB       5
0x31EA	0x6F0D      	MOVWF       can_write_transmisor_L0, 1
0x31EC	0x0E0E      	MOVLW       hi_addr(B5CON)
0x31EE	0x6F0E      	MOVWF       can_write_transmisor_L0+1, 1
;lib_can.h,655 :: 		mascara = &B5EIDL;
0x31F0	0x0E74      	MOVLW       B5EIDL
0x31F2	0x6F0F      	MOVWF       can_write_mascara_L0, 1
0x31F4	0x0E0E      	MOVLW       hi_addr(B5EIDL)
0x31F6	0x6F10      	MOVWF       can_write_mascara_L0+1, 1
;lib_can.h,656 :: 		regLen = &B5DLC;
0x31F8	0x0E75      	MOVLW       B5DLC
0x31FA	0x6F11      	MOVWF       can_write_regLen_L0, 1
0x31FC	0x0E0E      	MOVLW       hi_addr(B5DLC)
0x31FE	0x6F12      	MOVWF       can_write_regLen_L0+1, 1
;lib_can.h,657 :: 		buffer = &B5D0;
0x3200	0x0E76      	MOVLW       B5D0
0x3202	0x6F13      	MOVWF       can_write_buffer_L0, 1
0x3204	0x0E0E      	MOVLW       hi_addr(B5D0)
0x3206	0x6F14      	MOVWF       can_write_buffer_L0+1, 1
;lib_can.h,658 :: 		ref = 0x17;
0x3208	0x0E17      	MOVLW       23
0x320A	0x6F15      	MOVWF       can_write_ref_L0, 1
;lib_can.h,659 :: 		}else{
0x320C	0xD002      	BRA         L_can_write310
L_can_write309:
;lib_can.h,660 :: 		return false;
0x320E	0x6A00      	CLRF        R0 
0x3210	0xD05C      	BRA         L_end_can_write
;lib_can.h,661 :: 		}
L_can_write310:
L_can_write306:
L_can_write302:
L_can_write298:
L_can_write294:
L_can_write290:
0x3212	0x0105      	MOVLB       5
;lib_can.h,663 :: 		ECANCON &= 0xE0;
0x3214	0x0EE0      	MOVLW       224
0x3216	0x1677      	ANDWF       ECANCON, 1 
;lib_can.h,664 :: 		ECANCON |= ref;     //BITS EWIN
0x3218	0x5115      	MOVF        can_write_ref_L0, 0, 1
0x321A	0x1277      	IORWF       ECANCON, 1 
;lib_can.h,665 :: 		}
L_can_write286:
;lib_can.h,668 :: 		(*transmisor).B0 = priority.B0;  //BIT TXPRI0
0x321C	0xFFE1C50D  	MOVFF       can_write_transmisor_L0, FSR1L
0x3220	0xFFE2C50E  	MOVFF       can_write_transmisor_L0+1, FSR1H
0x3224	0xB108      	BTFSC       FARG_can_write_priority, 0, 1
0x3226	0xD002      	BRA         L__can_write1171
0x3228	0x90E6      	BCF         POSTINC1, 0 
0x322A	0xD001      	BRA         L__can_write1172
L__can_write1171:
0x322C	0x80E6      	BSF         POSTINC1, 0 
L__can_write1172:
;lib_can.h,669 :: 		(*transmisor).B1 = priority.B1;  //BIT TXPRI1
0x322E	0xFFE1C50D  	MOVFF       can_write_transmisor_L0, FSR1L
0x3232	0xFFE2C50E  	MOVFF       can_write_transmisor_L0+1, FSR1H
0x3236	0xB308      	BTFSC       FARG_can_write_priority, 1, 1
0x3238	0xD002      	BRA         L__can_write1173
0x323A	0x92E6      	BCF         POSTINC1, 1 
0x323C	0xD001      	BRA         L__can_write1174
L__can_write1173:
0x323E	0x82E6      	BSF         POSTINC1, 1 
L__can_write1174:
;lib_can.h,671 :: 		can_set_id(mascara, id);
0x3240	0xF523C50F  	MOVFF       can_write_mascara_L0, FARG_can_set_id_address
0x3244	0xF524C510  	MOVFF       can_write_mascara_L0+1, FARG_can_set_id_address+1
0x3248	0xF525C501  	MOVFF       FARG_can_write_id, FARG_can_set_id_value
0x324C	0xF526C502  	MOVFF       FARG_can_write_id+1, FARG_can_set_id_value+1
0x3250	0xF527C503  	MOVFF       FARG_can_write_id+2, FARG_can_set_id_value+2
0x3254	0xF528C504  	MOVFF       FARG_can_write_id+3, FARG_can_set_id_value+3
0x3258	0xDCDA      	RCALL       _can_set_id
;lib_can.h,673 :: 		*regLen = size;
0x325A	0xFFE1C511  	MOVFF       can_write_regLen_L0, FSR1L
0x325E	0xFFE2C512  	MOVFF       can_write_regLen_L0+1, FSR1H
0x3262	0xFFE6C507  	MOVFF       FARG_can_write_size, POSTINC1
;lib_can.h,674 :: 		(*regLen).B6 = rtr; //TXRTR Solicitud remota del receptor
0x3266	0xFFE1C511  	MOVFF       can_write_regLen_L0, FSR1L
0x326A	0xFFE2C512  	MOVFF       can_write_regLen_L0+1, FSR1H
0x326E	0xB109      	BTFSC       FARG_can_write_rtr, 0, 1
0x3270	0xD002      	BRA         L__can_write1175
0x3272	0x9CE6      	BCF         POSTINC1, 6 
0x3274	0xD001      	BRA         L__can_write1176
L__can_write1175:
0x3276	0x8CE6      	BSF         POSTINC1, 6 
L__can_write1176:
;lib_can.h,676 :: 		for(ref = 0; ref < size && ref < 8; ref++)
0x3278	0x6B15      	CLRF        can_write_ref_L0, 1
L_can_write311:
0x327A	0x5107      	MOVF        FARG_can_write_size, 0, 1
0x327C	0x5D15      	SUBWF       can_write_ref_L0, 0, 1
0x327E	0xE213      	BC          L_can_write312
0x3280	0x0E08      	MOVLW       8
0x3282	0x5D15      	SUBWF       can_write_ref_L0, 0, 1
0x3284	0xE210      	BC          L_can_write312
L__can_write964:
;lib_can.h,677 :: 		buffer[ref] = datos[ref];
0x3286	0x5115      	MOVF        can_write_ref_L0, 0, 1
0x3288	0x2513      	ADDWF       can_write_buffer_L0, 0, 1
0x328A	0x6EE1      	MOVWF       FSR1L 
0x328C	0x0E00      	MOVLW       0
0x328E	0x2114      	ADDWFC      can_write_buffer_L0+1, 0, 1
0x3290	0x6EE2      	MOVWF       FSR1H 
0x3292	0x5115      	MOVF        can_write_ref_L0, 0, 1
0x3294	0x2505      	ADDWF       FARG_can_write_datos, 0, 1
0x3296	0x6EE9      	MOVWF       FSR0L 
0x3298	0x0E00      	MOVLW       0
0x329A	0x2106      	ADDWFC      FARG_can_write_datos+1, 0, 1
0x329C	0x6EEA      	MOVWF       FSR0H 
0x329E	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
;lib_can.h,676 :: 		for(ref = 0; ref < size && ref < 8; ref++)
0x32A2	0x2B15      	INCF        can_write_ref_L0, 1, 1
;lib_can.h,677 :: 		buffer[ref] = datos[ref];
0x32A4	0xD7EA      	BRA         L_can_write311
L_can_write312:
;lib_can.h,679 :: 		(*transmisor).B3 = 1;  //ACTIVAR PIN TXREQ, LIMPIA BANDERAS TXABT, TXLARB y TXERR
0x32A6	0xFFE1C50D  	MOVFF       can_write_transmisor_L0, FSR1L
0x32AA	0xFFE2C50E  	MOVFF       can_write_transmisor_L0+1, FSR1H
0x32AE	0x86E6      	BSF         POSTINC1, 3 
;lib_can.h,682 :: 		if(can.mode == CAN_MODE_LEGACY){
0x32B0	0x0103      	MOVLB       3
0x32B2	0x5157      	MOVF        _can+14, 0, 1
0x32B4	0x0A00      	XORLW       0
0x32B6	0xE103      	BNZ         L_can_write316
;lib_can.h,683 :: 		CANCON &= 0xF1;
0x32B8	0x0EF1      	MOVLW       241
0x32BA	0x166F      	ANDWF       CANCON, 1 
;lib_can.h,684 :: 		CANCON |= 0x00;   //BITS WIN, LISTEN BUFFER0
;lib_can.h,685 :: 		}else{
0x32BC	0xD004      	BRA         L_can_write317
L_can_write316:
;lib_can.h,686 :: 		ECANCON &= 0xE0;
0x32BE	0x0EE0      	MOVLW       224
0x32C0	0x1677      	ANDWF       ECANCON, 1 
;lib_can.h,687 :: 		ECANCON |= 0x16;  //BITS EWIN, RX0 INTERRUPT
0x32C2	0x0E16      	MOVLW       22
0x32C4	0x1277      	IORWF       ECANCON, 1 
;lib_can.h,688 :: 		}
L_can_write317:
;lib_can.h,690 :: 		return true;
0x32C6	0x0E01      	MOVLW       1
0x32C8	0x6E00      	MOVWF       R0 
;lib_can.h,691 :: 		}
L_end_can_write:
0x32CA	0x0012      	RETURN      0
; end of _can_write
_double2longword:
;__Lib_MathDouble.c,1559 :: 		
;__Lib_MathDouble.c,1569 :: 		
0x32CC	0x6A0B      	CLRF        R11, 0
;__Lib_MathDouble.c,1570 :: 		
0x32CE	0x6A0C      	CLRF        R12, 0
;__Lib_MathDouble.c,1571 :: 		
0x32D0	0x6A0A      	CLRF        R10, 0
;__Lib_MathDouble.c,1573 :: 		
0x32D2	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,1574 :: 		
0x32D4	0x5003      	MOVF        R3, 0, 0
;__Lib_MathDouble.c,1575 :: 		
0x32D6	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1576 :: 		
0x32D8	0xF019EFEE  	GOTO        INT3232UEOK
;__Lib_MathDouble.c,1578 :: 		
0x32DC	0x8E02      	BSF         R2, 7, 0
;__Lib_MathDouble.c,1580 :: 		
0x32DE	0x0E9E      	MOVLW       158
;__Lib_MathDouble.c,1581 :: 		
0x32E0	0x5E03      	SUBWF       R3, 1, 0
;__Lib_MathDouble.c,1582 :: 		
0x32E2	0xBE03      	BTFSC       R3, 7, 0
;__Lib_MathDouble.c,1583 :: 		
0x32E4	0xF019EF79  	GOTO        SETEXP32U
;__Lib_MathDouble.c,1584 :: 		
0x32E8	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1585 :: 		
0x32EA	0xF019EF79  	GOTO        SETEXP32U
;__Lib_MathDouble.c,1586 :: 		
0x32EE	0xF019EFDE  	GOTO        SETIOV32U
;__Lib_MathDouble.c,1587 :: 		
SETEXP32U:
;__Lib_MathDouble.c,1588 :: 		
0x32F2	0x6C03      	NEGF        R3, 0
;__Lib_MathDouble.c,1590 :: 		
0x32F4	0x0E08      	MOVLW       8
;__Lib_MathDouble.c,1591 :: 		
0x32F6	0x5C03      	SUBWF       R3, 0, 0
;__Lib_MathDouble.c,1592 :: 		
0x32F8	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1593 :: 		
0x32FA	0xF019EFAB  	GOTO        TSHIFT3232U
;__Lib_MathDouble.c,1594 :: 		
0x32FE	0x6E03      	MOVWF       R3, 0
;__Lib_MathDouble.c,1595 :: 		
0x3300	0x3608      	RLCF        R8, 1, 0
;__Lib_MathDouble.c,1596 :: 		
0x3302	0xF008C000  	MOVFF       R0, R8
;__Lib_MathDouble.c,1597 :: 		
0x3306	0xF000C001  	MOVFF       R1, R0
;__Lib_MathDouble.c,1598 :: 		
0x330A	0xF001C002  	MOVFF       R2, R1
;__Lib_MathDouble.c,1599 :: 		
0x330E	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,1601 :: 		
0x3310	0x0E08      	MOVLW       8
;__Lib_MathDouble.c,1602 :: 		
0x3312	0x5C03      	SUBWF       R3, 0, 0
;__Lib_MathDouble.c,1603 :: 		
0x3314	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1604 :: 		
0x3316	0xF019EFAB  	GOTO        TSHIFT3232U
;__Lib_MathDouble.c,1605 :: 		
0x331A	0x6E03      	MOVWF       R3, 0
;__Lib_MathDouble.c,1606 :: 		
0x331C	0x3608      	RLCF        R8, 1, 0
;__Lib_MathDouble.c,1607 :: 		
0x331E	0xF008C000  	MOVFF       R0, R8
;__Lib_MathDouble.c,1608 :: 		
0x3322	0xF000C001  	MOVFF       R1, R0
;__Lib_MathDouble.c,1609 :: 		
0x3326	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,1611 :: 		
0x3328	0x0E08      	MOVLW       8
;__Lib_MathDouble.c,1612 :: 		
0x332A	0x5C03      	SUBWF       R3, 0, 0
;__Lib_MathDouble.c,1613 :: 		
0x332C	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1614 :: 		
0x332E	0xF019EFAB  	GOTO        TSHIFT3232U
;__Lib_MathDouble.c,1615 :: 		
0x3332	0x6E03      	MOVWF       R3, 0
;__Lib_MathDouble.c,1616 :: 		
0x3334	0x3608      	RLCF        R8, 1, 0
;__Lib_MathDouble.c,1617 :: 		
0x3336	0xF008C000  	MOVFF       R0, R8
;__Lib_MathDouble.c,1618 :: 		
0x333A	0x6A00      	CLRF        R0, 0
;__Lib_MathDouble.c,1620 :: 		
0x333C	0x0E08      	MOVLW       8
;__Lib_MathDouble.c,1621 :: 		
0x333E	0x5C03      	SUBWF       R3, 0, 0
;__Lib_MathDouble.c,1622 :: 		
0x3340	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1623 :: 		
0x3342	0xF019EFAB  	GOTO        TSHIFT3232U
;__Lib_MathDouble.c,1624 :: 		
0x3346	0x6E03      	MOVWF       R3, 0
;__Lib_MathDouble.c,1625 :: 		
0x3348	0x3608      	RLCF        R8, 1, 0
;__Lib_MathDouble.c,1626 :: 		
0x334A	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,1628 :: 		
0x334C	0x5003      	MOVF        R3, 0, 0
;__Lib_MathDouble.c,1629 :: 		
0x334E	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,1630 :: 		
0x3350	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,1631 :: 		
0x3352	0xF019EFB7  	GOTO        SHIFT3232UOK
;__Lib_MathDouble.c,1632 :: 		
TSHIFT3232U:
;__Lib_MathDouble.c,1633 :: 		
0x3356	0x5003      	MOVF        R3, 0, 0
;__Lib_MathDouble.c,1634 :: 		
0x3358	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1635 :: 		
0x335A	0xF019EFB7  	GOTO        SHIFT3232UOK
;__Lib_MathDouble.c,1636 :: 		
SHIFT3232U:
;__Lib_MathDouble.c,1637 :: 		
0x335E	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,1638 :: 		
0x3360	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,1639 :: 		
0x3362	0x3201      	RRCF        R1, 1, 0
;__Lib_MathDouble.c,1640 :: 		
0x3364	0x3200      	RRCF        R0, 1, 0
;__Lib_MathDouble.c,1641 :: 		
0x3366	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,1642 :: 		
0x3368	0x2E03      	DECFSZ      R3, 1, 0
;__Lib_MathDouble.c,1643 :: 		
0x336A	0xF019EFAF  	GOTO        SHIFT3232U
;__Lib_MathDouble.c,1644 :: 		
SHIFT3232UOK:
;__Lib_MathDouble.c,1645 :: 		
0x336E	0xBC0B      	BTFSC       R11, 6, 0
;__Lib_MathDouble.c,1646 :: 		
0x3370	0xA008      	BTFSS       R8, 0, 0
;__Lib_MathDouble.c,1647 :: 		
0x3372	0xF019EFC8  	GOTO        INT3232UOK
;__Lib_MathDouble.c,1648 :: 		
0x3376	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1649 :: 		
0x3378	0xF019EFC8  	GOTO        INT3232UOK
;__Lib_MathDouble.c,1650 :: 		
0x337C	0x2A08      	INCF        R8, 1, 0
;__Lib_MathDouble.c,1651 :: 		
0x337E	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1652 :: 		
0x3380	0x2A00      	INCF        R0, 1, 0
;__Lib_MathDouble.c,1653 :: 		
0x3382	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1654 :: 		
0x3384	0x2A01      	INCF        R1, 1, 0
;__Lib_MathDouble.c,1655 :: 		
0x3386	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1656 :: 		
0x3388	0x2A02      	INCF        R2, 1, 0
;__Lib_MathDouble.c,1657 :: 		
0x338A	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,1658 :: 		
0x338C	0xF019EFF2  	GOTO        JPLSETIOV3224
;__Lib_MathDouble.c,1659 :: 		
INT3232UOK:
;__Lib_MathDouble.c,1660 :: 		
0x3390	0xAE0A      	BTFSS       R10, 7, 0
;__Lib_MathDouble.c,1661 :: 		
0x3392	0xF019EFEE  	GOTO        INT3232UEOK
;__Lib_MathDouble.c,1663 :: 		
0x3396	0x1E02      	COMF        R2, 1, 0
;__Lib_MathDouble.c,1664 :: 		
0x3398	0x1E01      	COMF        R1, 1, 0
;__Lib_MathDouble.c,1665 :: 		
0x339A	0x1E00      	COMF        R0, 1, 0
;__Lib_MathDouble.c,1666 :: 		
0x339C	0x1E08      	COMF        R8, 1, 0
;__Lib_MathDouble.c,1667 :: 		
0x339E	0x2A08      	INCF        R8, 1, 0
;__Lib_MathDouble.c,1668 :: 		
0x33A0	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1669 :: 		
0x33A2	0x2A00      	INCF        R0, 1, 0
;__Lib_MathDouble.c,1670 :: 		
0x33A4	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1671 :: 		
0x33A6	0x2A01      	INCF        R1, 1, 0
;__Lib_MathDouble.c,1672 :: 		
0x33A8	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1673 :: 		
0x33AA	0x2A02      	INCF        R2, 1, 0
;__Lib_MathDouble.c,1674 :: 		
0x33AC	0xF019EFEE  	GOTO        INT3232UEOK
;__Lib_MathDouble.c,1676 :: 		
0x33B0	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,1677 :: 		
0x33B2	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,1678 :: 		
0x33B4	0x6A00      	CLRF        R0, 0
;__Lib_MathDouble.c,1679 :: 		
0x33B6	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,1680 :: 		
0x33B8	0xF019EFEE  	GOTO        INT3232UEOK
;__Lib_MathDouble.c,1681 :: 		
SETIOV32U:
;__Lib_MathDouble.c,1682 :: 		
0x33BC	0x800B      	BSF         R11, 0, 0
;__Lib_MathDouble.c,1683 :: 		
0x33BE	0xAE0B      	BTFSS       R11, 7, 0
;__Lib_MathDouble.c,1684 :: 		
0x33C0	0xF019EFF8  	GOTO        INT3232UEER
;__Lib_MathDouble.c,1686 :: 		
0x33C4	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,1687 :: 		
0x33C6	0xAE0A      	BTFSS       R10, 7, 0
;__Lib_MathDouble.c,1688 :: 		
0x33C8	0xF019EFF8  	GOTO        INT3232UEER
;__Lib_MathDouble.c,1689 :: 		
0x33CC	0x6E02      	MOVWF       R2, 0
;__Lib_MathDouble.c,1690 :: 		
0x33CE	0x6E01      	MOVWF       R1, 0
;__Lib_MathDouble.c,1691 :: 		
0x33D0	0x6E00      	MOVWF       R0, 0
;__Lib_MathDouble.c,1692 :: 		
0x33D2	0x6E08      	MOVWF       R8, 0
;__Lib_MathDouble.c,1693 :: 		
0x33D4	0x360A      	RLCF        R10, 1, 0
;__Lib_MathDouble.c,1694 :: 		
0x33D6	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,1695 :: 		
0x33D8	0xF019EFF8  	GOTO        INT3232UEER
;__Lib_MathDouble.c,1697 :: 		
INT3232UEOK:
;__Lib_MathDouble.c,1698 :: 		
0x33DC	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,1699 :: 		
0x33DE	0x6A0C      	CLRF        R12, 0
;__Lib_MathDouble.c,1700 :: 		
0x33E0	0xF019EFF9  	GOTO        INT3232UEEE
;__Lib_MathDouble.c,1701 :: 		
JPLSETIOV3224:
;__Lib_MathDouble.c,1702 :: 		
0x33E4	0x0E01      	MOVLW       1
;__Lib_MathDouble.c,1703 :: 		
0x33E6	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,1705 :: 		
0x33E8	0xF00EEC53  	CALL        _SETIOV3224, 0
;__Lib_MathDouble.c,1707 :: 		
0x33EC	0xF019EFF9  	GOTO        INT3232UEEE
;__Lib_MathDouble.c,1708 :: 		
INT3232UEER:
;__Lib_MathDouble.c,1709 :: 		
0x33F0	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,1710 :: 		
INT3232UEEE:
;__Lib_MathDouble.c,1711 :: 		
0x33F2	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,1712 :: 		
0x33F4	0x6E03      	MOVWF       R3, 0
;__Lib_MathDouble.c,1713 :: 		
0x33F6	0x5001      	MOVF        R1, 0, 0
;__Lib_MathDouble.c,1714 :: 		
0x33F8	0x6E02      	MOVWF       R2, 0
;__Lib_MathDouble.c,1715 :: 		
0x33FA	0x5000      	MOVF        R0, 0, 0
;__Lib_MathDouble.c,1716 :: 		
0x33FC	0x6E01      	MOVWF       R1, 0
;__Lib_MathDouble.c,1717 :: 		
0x33FE	0x5008      	MOVF        R8, 0, 0
;__Lib_MathDouble.c,1718 :: 		
0x3400	0x6E00      	MOVWF       R0, 0
;__Lib_MathDouble.c,1723 :: 		
L_end_double2longword:
0x3402	0x0012      	RETURN      0
; end of _double2longword
_can_read:
;lib_can.h,451 :: 		char can_read(long *id, char *datos, char *size){
;lib_can.h,456 :: 		if(RXB0CON.RXFUL){  //Mensaje en buffer
0x3404	0xAE60      	BTFSS       RXB0CON, 7 
0x3406	0xD031      	BRA         L_can_read216
;lib_can.h,457 :: 		bufferBX = &RXB0CON;
0x3408	0x0E60      	MOVLW       RXB0CON
0x340A	0x0105      	MOVLB       5
0x340C	0x6F11      	MOVWF       can_read_bufferBX_L0, 1
0x340E	0x0E0F      	MOVLW       hi_addr(RXB0CON)
0x3410	0x6F12      	MOVWF       can_read_bufferBX_L0+1, 1
;lib_can.h,458 :: 		regLen = &RXB0DLC;
0x3412	0x0E65      	MOVLW       RXB0DLC
0x3414	0x6F0D      	MOVWF       can_read_regLen_L0, 1
0x3416	0x0E0F      	MOVLW       hi_addr(RXB0DLC)
0x3418	0x6F0E      	MOVWF       can_read_regLen_L0+1, 1
;lib_can.h,459 :: 		receptor = &RXB0EIDL;
0x341A	0x0E64      	MOVLW       RXB0EIDL
0x341C	0x6F0B      	MOVWF       can_read_receptor_L0, 1
0x341E	0x0E0F      	MOVLW       hi_addr(RXB0EIDL)
0x3420	0x6F0C      	MOVWF       can_read_receptor_L0+1, 1
;lib_can.h,460 :: 		buffer = &RXB0D0;
0x3422	0x0E66      	MOVLW       RXB0D0
0x3424	0x6F0F      	MOVWF       can_read_buffer_L0, 1
0x3426	0x0E0F      	MOVLW       hi_addr(RXB0D0)
0x3428	0x6F10      	MOVWF       can_read_buffer_L0+1, 1
;lib_can.h,461 :: 		ref = can.mode == CAN_MODE_LEGACY? 0x00:0x10;
0x342A	0x0103      	MOVLB       3
0x342C	0x5157      	MOVF        _can+14, 0, 1
0x342E	0x0A00      	XORLW       0
0x3430	0xE103      	BNZ         L_can_read217
0x3432	0x0105      	MOVLB       5
0x3434	0x6B07      	CLRF        ?FLOC___can_readT862, 1
0x3436	0xD003      	BRA         L_can_read218
L_can_read217:
0x3438	0x0105      	MOVLB       5
0x343A	0x0E10      	MOVLW       16
0x343C	0x6F07      	MOVWF       ?FLOC___can_readT862, 1
L_can_read218:
0x343E	0xF513C507  	MOVFF       ?FLOC___can_readT862, can_read_ref_L0
;lib_can.h,462 :: 		can.overflow = COMSTAT.RXB0OVFL;
0x3442	0x0E00      	MOVLW       0
0x3444	0xBE74      	BTFSC       COMSTAT, 7 
0x3446	0x0E01      	MOVLW       1
0x3448	0x0103      	MOVLB       3
0x344A	0x6F58      	MOVWF       _can+15, 1
;lib_can.h,463 :: 		COMSTAT.RXB0OVFL = 0;  //Limpiar sobreflujo
0x344C	0x9E74      	BCF         COMSTAT, 7 
;lib_can.h,465 :: 		if(can.mode == CAN_MODE_LEGACY)
0x344E	0x5157      	MOVF        _can+14, 0, 1
0x3450	0x0A00      	XORLW       0
0x3452	0xE105      	BNZ         L_can_read219
;lib_can.h,466 :: 		can.numFilter = RXB0CON.FILHIT0;
0x3454	0x0E00      	MOVLW       0
0x3456	0xB060      	BTFSC       RXB0CON, 0 
0x3458	0x0E01      	MOVLW       1
0x345A	0x6F59      	MOVWF       _can+16, 1
0x345C	0xD005      	BRA         L_can_read220
L_can_read219:
;lib_can.h,468 :: 		can.numFilter = RXB0CON & 0x1F;
0x345E	0x0E1F      	MOVLW       31
0x3460	0x1460      	ANDWF       RXB0CON, 0 
0x3462	0x6E00      	MOVWF       R0 
0x3464	0xF359C000  	MOVFF       R0, _can+16
L_can_read220:
;lib_can.h,469 :: 		}else if(RXB1CON.RXFUL){  //Mensaje en buffer
0x3468	0xD051      	BRA         L_can_read221
L_can_read216:
0x346A	0x010F      	MOVLB       15
0x346C	0xAF50      	BTFSS       RXB1CON, 7, 1
0x346E	0xD048      	BRA         L_can_read222
;lib_can.h,470 :: 		bufferBX = &RXB1CON;
0x3470	0x0E50      	MOVLW       RXB1CON
0x3472	0x0105      	MOVLB       5
0x3474	0x6F11      	MOVWF       can_read_bufferBX_L0, 1
0x3476	0x0E0F      	MOVLW       hi_addr(RXB1CON)
0x3478	0x6F12      	MOVWF       can_read_bufferBX_L0+1, 1
;lib_can.h,471 :: 		regLen = &RXB0DLC;
0x347A	0x0E65      	MOVLW       RXB0DLC
0x347C	0x6F0D      	MOVWF       can_read_regLen_L0, 1
0x347E	0x0E0F      	MOVLW       hi_addr(RXB0DLC)
0x3480	0x6F0E      	MOVWF       can_read_regLen_L0+1, 1
;lib_can.h,472 :: 		receptor = &RXB1EIDL;
0x3482	0x0E54      	MOVLW       RXB1EIDL
0x3484	0x6F0B      	MOVWF       can_read_receptor_L0, 1
0x3486	0x0E0F      	MOVLW       hi_addr(RXB1EIDL)
0x3488	0x6F0C      	MOVWF       can_read_receptor_L0+1, 1
;lib_can.h,473 :: 		buffer = &RXB1D0;
0x348A	0x0E56      	MOVLW       RXB1D0
0x348C	0x6F0F      	MOVWF       can_read_buffer_L0, 1
0x348E	0x0E0F      	MOVLW       hi_addr(RXB1D0)
0x3490	0x6F10      	MOVWF       can_read_buffer_L0+1, 1
;lib_can.h,474 :: 		ref = can.mode == CAN_MODE_LEGACY? 0x0A:0x10;          //CHECAR POR EL MODO
0x3492	0x0103      	MOVLB       3
0x3494	0x5157      	MOVF        _can+14, 0, 1
0x3496	0x0A00      	XORLW       0
0x3498	0xE104      	BNZ         L_can_read223
0x349A	0x0E0A      	MOVLW       10
0x349C	0x0105      	MOVLB       5
0x349E	0x6F08      	MOVWF       ?FLOC___can_readT875, 1
0x34A0	0xD003      	BRA         L_can_read224
L_can_read223:
0x34A2	0x0105      	MOVLB       5
0x34A4	0x0E10      	MOVLW       16
0x34A6	0x6F08      	MOVWF       ?FLOC___can_readT875, 1
L_can_read224:
0x34A8	0xF513C508  	MOVFF       ?FLOC___can_readT875, can_read_ref_L0
;lib_can.h,475 :: 		ref |= can.mode == CAN_MODE_ENHANCED_LEGACY? 0x01:0x00;
0x34AC	0x0103      	MOVLB       3
0x34AE	0x5157      	MOVF        _can+14, 0, 1
0x34B0	0x0A01      	XORLW       1
0x34B2	0xE104      	BNZ         L_can_read225
0x34B4	0x0E01      	MOVLW       1
0x34B6	0x0105      	MOVLB       5
0x34B8	0x6F09      	MOVWF       ?FLOC___can_readT877, 1
0x34BA	0xD002      	BRA         L_can_read226
L_can_read225:
0x34BC	0x0105      	MOVLB       5
0x34BE	0x6B09      	CLRF        ?FLOC___can_readT877, 1
L_can_read226:
0x34C0	0x5109      	MOVF        ?FLOC___can_readT877, 0, 1
0x34C2	0x1313      	IORWF       can_read_ref_L0, 1, 1
;lib_can.h,476 :: 		can.overflow = COMSTAT.RXB1OVFL;
0x34C4	0x0E00      	MOVLW       0
0x34C6	0xBC74      	BTFSC       COMSTAT, 6 
0x34C8	0x0E01      	MOVLW       1
0x34CA	0x0103      	MOVLB       3
0x34CC	0x6F58      	MOVWF       _can+15, 1
;lib_can.h,477 :: 		COMSTAT.RXB1OVFL = 0;  //Limpiar sobreflujo
0x34CE	0x9C74      	BCF         COMSTAT, 6 
;lib_can.h,478 :: 		if(can.mode == CAN_MODE_LEGACY)
0x34D0	0x5157      	MOVF        _can+14, 0, 1
0x34D2	0x0A00      	XORLW       0
0x34D4	0xE10E      	BNZ         L_can_read227
;lib_can.h,479 :: 		can.numFilter = RXB0CON.RXB0DBEN? RXB1CON&0x07: -1;
0x34D6	0xA460      	BTFSS       RXB0CON, 2 
0x34D8	0xD006      	BRA         L_can_read228
0x34DA	0x0E07      	MOVLW       7
0x34DC	0x010F      	MOVLB       15
0x34DE	0x1550      	ANDWF       RXB1CON, 0, 1
0x34E0	0x0105      	MOVLB       5
0x34E2	0x6F0A      	MOVWF       ?FLOC___can_readT885, 1
0x34E4	0xD003      	BRA         L_can_read229
L_can_read228:
0x34E6	0x0105      	MOVLB       5
0x34E8	0x0EFF      	MOVLW       255
0x34EA	0x6F0A      	MOVWF       ?FLOC___can_readT885, 1
L_can_read229:
0x34EC	0xF359C50A  	MOVFF       ?FLOC___can_readT885, _can+16
0x34F0	0xD006      	BRA         L_can_read230
L_can_read227:
;lib_can.h,481 :: 		can.numFilter = RXB1CON & 0x1F;
0x34F2	0x0E1F      	MOVLW       31
0x34F4	0x010F      	MOVLB       15
0x34F6	0x1550      	ANDWF       RXB1CON, 0, 1
0x34F8	0x6E00      	MOVWF       R0 
0x34FA	0xF359C000  	MOVFF       R0, _can+16
L_can_read230:
;lib_can.h,482 :: 		}else if(can.mode == CAN_MODE_LEGACY){
0x34FE	0xD006      	BRA         L_can_read231
L_can_read222:
0x3500	0x0103      	MOVLB       3
0x3502	0x5157      	MOVF        _can+14, 0, 1
0x3504	0x0A00      	XORLW       0
0x3506	0xE102      	BNZ         L_can_read232
;lib_can.h,483 :: 		return CAN_RW_EMPTY;  //No se recibio nada
0x3508	0x6A00      	CLRF        R0 
0x350A	0xD166      	BRA         L_end_can_read
;lib_can.h,484 :: 		}
L_can_read232:
L_can_read231:
L_can_read221:
0x350C	0x0103      	MOVLB       3
;lib_can.h,487 :: 		if(can.mode == CAN_MODE_LEGACY){
0x350E	0x5157      	MOVF        _can+14, 0, 1
0x3510	0x0A00      	XORLW       0
0x3512	0xE106      	BNZ         L_can_read233
;lib_can.h,488 :: 		CANCON &= 0xF1;
0x3514	0x0EF1      	MOVLW       241
0x3516	0x166F      	ANDWF       CANCON, 1 
;lib_can.h,489 :: 		CANCON |= ref;   //BITS WIN
0x3518	0x0105      	MOVLB       5
0x351A	0x5113      	MOVF        can_read_ref_L0, 0, 1
0x351C	0x126F      	IORWF       CANCON, 1 
;lib_can.h,490 :: 		}else{   //MODO 1 Y 2
0x351E	0xD0F1      	BRA         L_can_read234
L_can_read233:
;lib_can.h,492 :: 		if(!BSEL0.B0TXEN && B0CON.RXFUL){
0x3520	0x010D      	MOVLB       13
0x3522	0xB5F8      	BTFSC       BSEL0, 2, 1
0x3524	0xD024      	BRA         L_can_read237
0x3526	0x010E      	MOVLB       14
0x3528	0xAF20      	BTFSS       B0CON, 7, 1
0x352A	0xD021      	BRA         L_can_read237
L__can_read963:
;lib_can.h,493 :: 		bufferBX = &B0CON;
0x352C	0x0E20      	MOVLW       B0CON
0x352E	0x0105      	MOVLB       5
0x3530	0x6F11      	MOVWF       can_read_bufferBX_L0, 1
0x3532	0x0E0E      	MOVLW       hi_addr(B0CON)
0x3534	0x6F12      	MOVWF       can_read_bufferBX_L0+1, 1
;lib_can.h,494 :: 		regLen = &B0DLC;
0x3536	0x0E25      	MOVLW       B0DLC
0x3538	0x6F0D      	MOVWF       can_read_regLen_L0, 1
0x353A	0x0E0E      	MOVLW       hi_addr(B0DLC)
0x353C	0x6F0E      	MOVWF       can_read_regLen_L0+1, 1
;lib_can.h,495 :: 		receptor = &B0EIDL;
0x353E	0x0E24      	MOVLW       B0EIDL
0x3540	0x6F0B      	MOVWF       can_read_receptor_L0, 1
0x3542	0x0E0E      	MOVLW       hi_addr(B0EIDL)
0x3544	0x6F0C      	MOVWF       can_read_receptor_L0+1, 1
;lib_can.h,496 :: 		buffer = &B0D0;
0x3546	0x0E26      	MOVLW       B0D0
0x3548	0x6F0F      	MOVWF       can_read_buffer_L0, 1
0x354A	0x0E0E      	MOVLW       hi_addr(B0D0)
0x354C	0x6F10      	MOVWF       can_read_buffer_L0+1, 1
;lib_can.h,497 :: 		can.overflow = COMSTAT.RXB0OVFL;
0x354E	0x0E00      	MOVLW       0
0x3550	0xBE74      	BTFSC       COMSTAT, 7 
0x3552	0x0E01      	MOVLW       1
0x3554	0x0103      	MOVLB       3
0x3556	0x6F58      	MOVWF       _can+15, 1
;lib_can.h,498 :: 		COMSTAT.RXB0OVFL = 0;  //Limpiar sobreflujo
0x3558	0x9E74      	BCF         COMSTAT, 7 
;lib_can.h,499 :: 		can.numFilter = B0CON & 0x1F;
0x355A	0x0E1F      	MOVLW       31
0x355C	0x010E      	MOVLB       14
0x355E	0x1520      	ANDWF       B0CON, 0, 1
0x3560	0x6E00      	MOVWF       R0 
0x3562	0xF359C000  	MOVFF       R0, _can+16
;lib_can.h,500 :: 		ref = 0x12;
0x3566	0x0E12      	MOVLW       18
0x3568	0x0105      	MOVLB       5
0x356A	0x6F13      	MOVWF       can_read_ref_L0, 1
;lib_can.h,501 :: 		}else if(!BSEL0.B1TXEN && B1CON.RXFUL){
0x356C	0xD0C5      	BRA         L_can_read238
L_can_read237:
0x356E	0x010D      	MOVLB       13
0x3570	0xB7F8      	BTFSC       BSEL0, 3, 1
0x3572	0xD024      	BRA         L_can_read241
0x3574	0x010E      	MOVLB       14
0x3576	0xAF30      	BTFSS       B1CON, 7, 1
0x3578	0xD021      	BRA         L_can_read241
L__can_read962:
;lib_can.h,502 :: 		bufferBX = &B1CON;
0x357A	0x0E30      	MOVLW       B1CON
0x357C	0x0105      	MOVLB       5
0x357E	0x6F11      	MOVWF       can_read_bufferBX_L0, 1
0x3580	0x0E0E      	MOVLW       hi_addr(B1CON)
0x3582	0x6F12      	MOVWF       can_read_bufferBX_L0+1, 1
;lib_can.h,503 :: 		regLen = &B1DLC;
0x3584	0x0E35      	MOVLW       B1DLC
0x3586	0x6F0D      	MOVWF       can_read_regLen_L0, 1
0x3588	0x0E0E      	MOVLW       hi_addr(B1DLC)
0x358A	0x6F0E      	MOVWF       can_read_regLen_L0+1, 1
;lib_can.h,504 :: 		receptor = &B1EIDL;
0x358C	0x0E34      	MOVLW       B1EIDL
0x358E	0x6F0B      	MOVWF       can_read_receptor_L0, 1
0x3590	0x0E0E      	MOVLW       hi_addr(B1EIDL)
0x3592	0x6F0C      	MOVWF       can_read_receptor_L0+1, 1
;lib_can.h,505 :: 		buffer = &B1D0;
0x3594	0x0E36      	MOVLW       B1D0
0x3596	0x6F0F      	MOVWF       can_read_buffer_L0, 1
0x3598	0x0E0E      	MOVLW       hi_addr(B1D0)
0x359A	0x6F10      	MOVWF       can_read_buffer_L0+1, 1
;lib_can.h,506 :: 		can.overflow = COMSTAT.RXB0OVFL;
0x359C	0x0E00      	MOVLW       0
0x359E	0xBE74      	BTFSC       COMSTAT, 7 
0x35A0	0x0E01      	MOVLW       1
0x35A2	0x0103      	MOVLB       3
0x35A4	0x6F58      	MOVWF       _can+15, 1
;lib_can.h,507 :: 		COMSTAT.RXB0OVFL = 0;  //Limpiar sobreflujo
0x35A6	0x9E74      	BCF         COMSTAT, 7 
;lib_can.h,508 :: 		can.numFilter = B1CON & 0x1F;
0x35A8	0x0E1F      	MOVLW       31
0x35AA	0x010E      	MOVLB       14
0x35AC	0x1530      	ANDWF       B1CON, 0, 1
0x35AE	0x6E00      	MOVWF       R0 
0x35B0	0xF359C000  	MOVFF       R0, _can+16
;lib_can.h,509 :: 		ref = 0x13;
0x35B4	0x0E13      	MOVLW       19
0x35B6	0x0105      	MOVLB       5
0x35B8	0x6F13      	MOVWF       can_read_ref_L0, 1
;lib_can.h,510 :: 		}else if(!BSEL0.B2TXEN && B2CON.RXFUL){
0x35BA	0xD09E      	BRA         L_can_read242
L_can_read241:
0x35BC	0x010D      	MOVLB       13
0x35BE	0xB9F8      	BTFSC       BSEL0, 4, 1
0x35C0	0xD024      	BRA         L_can_read245
0x35C2	0x010E      	MOVLB       14
0x35C4	0xAF40      	BTFSS       B2CON, 7, 1
0x35C6	0xD021      	BRA         L_can_read245
L__can_read961:
;lib_can.h,511 :: 		bufferBX = &B2CON;
0x35C8	0x0E40      	MOVLW       B2CON
0x35CA	0x0105      	MOVLB       5
0x35CC	0x6F11      	MOVWF       can_read_bufferBX_L0, 1
0x35CE	0x0E0E      	MOVLW       hi_addr(B2CON)
0x35D0	0x6F12      	MOVWF       can_read_bufferBX_L0+1, 1
;lib_can.h,512 :: 		regLen = &B2DLC;
0x35D2	0x0E45      	MOVLW       B2DLC
0x35D4	0x6F0D      	MOVWF       can_read_regLen_L0, 1
0x35D6	0x0E0E      	MOVLW       hi_addr(B2DLC)
0x35D8	0x6F0E      	MOVWF       can_read_regLen_L0+1, 1
;lib_can.h,513 :: 		receptor = &B2EIDL;
0x35DA	0x0E44      	MOVLW       B2EIDL
0x35DC	0x6F0B      	MOVWF       can_read_receptor_L0, 1
0x35DE	0x0E0E      	MOVLW       hi_addr(B2EIDL)
0x35E0	0x6F0C      	MOVWF       can_read_receptor_L0+1, 1
;lib_can.h,514 :: 		buffer = &B2D0;
0x35E2	0x0E46      	MOVLW       B2D0
0x35E4	0x6F0F      	MOVWF       can_read_buffer_L0, 1
0x35E6	0x0E0E      	MOVLW       hi_addr(B2D0)
0x35E8	0x6F10      	MOVWF       can_read_buffer_L0+1, 1
;lib_can.h,515 :: 		can.overflow = COMSTAT.RXB0OVFL;
0x35EA	0x0E00      	MOVLW       0
0x35EC	0xBE74      	BTFSC       COMSTAT, 7 
0x35EE	0x0E01      	MOVLW       1
0x35F0	0x0103      	MOVLB       3
0x35F2	0x6F58      	MOVWF       _can+15, 1
;lib_can.h,516 :: 		COMSTAT.RXB0OVFL = 0;  //Limpiar sobreflujo
0x35F4	0x9E74      	BCF         COMSTAT, 7 
;lib_can.h,517 :: 		can.numFilter = B2CON & 0x1F;
0x35F6	0x0E1F      	MOVLW       31
0x35F8	0x010E      	MOVLB       14
0x35FA	0x1540      	ANDWF       B2CON, 0, 1
0x35FC	0x6E00      	MOVWF       R0 
0x35FE	0xF359C000  	MOVFF       R0, _can+16
;lib_can.h,518 :: 		ref = 0x14;
0x3602	0x0E14      	MOVLW       20
0x3604	0x0105      	MOVLB       5
0x3606	0x6F13      	MOVWF       can_read_ref_L0, 1
;lib_can.h,519 :: 		}else if(!BSEL0.B3TXEN && B3CON.RXFUL){
0x3608	0xD077      	BRA         L_can_read246
L_can_read245:
0x360A	0x010D      	MOVLB       13
0x360C	0xBBF8      	BTFSC       BSEL0, 5, 1
0x360E	0xD024      	BRA         L_can_read249
0x3610	0x010E      	MOVLB       14
0x3612	0xAF50      	BTFSS       B3CON, 7, 1
0x3614	0xD021      	BRA         L_can_read249
L__can_read960:
;lib_can.h,520 :: 		bufferBX = &B3CON;
0x3616	0x0E50      	MOVLW       B3CON
0x3618	0x0105      	MOVLB       5
0x361A	0x6F11      	MOVWF       can_read_bufferBX_L0, 1
0x361C	0x0E0E      	MOVLW       hi_addr(B3CON)
0x361E	0x6F12      	MOVWF       can_read_bufferBX_L0+1, 1
;lib_can.h,521 :: 		regLen = &B3DLC;
0x3620	0x0E55      	MOVLW       B3DLC
0x3622	0x6F0D      	MOVWF       can_read_regLen_L0, 1
0x3624	0x0E0E      	MOVLW       hi_addr(B3DLC)
0x3626	0x6F0E      	MOVWF       can_read_regLen_L0+1, 1
;lib_can.h,522 :: 		receptor = &B3EIDL;
0x3628	0x0E54      	MOVLW       B3EIDL
0x362A	0x6F0B      	MOVWF       can_read_receptor_L0, 1
0x362C	0x0E0E      	MOVLW       hi_addr(B3EIDL)
0x362E	0x6F0C      	MOVWF       can_read_receptor_L0+1, 1
;lib_can.h,523 :: 		buffer = &B3D0;
0x3630	0x0E56      	MOVLW       B3D0
0x3632	0x6F0F      	MOVWF       can_read_buffer_L0, 1
0x3634	0x0E0E      	MOVLW       hi_addr(B3D0)
0x3636	0x6F10      	MOVWF       can_read_buffer_L0+1, 1
;lib_can.h,524 :: 		can.overflow = COMSTAT.RXB0OVFL;
0x3638	0x0E00      	MOVLW       0
0x363A	0xBE74      	BTFSC       COMSTAT, 7 
0x363C	0x0E01      	MOVLW       1
0x363E	0x0103      	MOVLB       3
0x3640	0x6F58      	MOVWF       _can+15, 1
;lib_can.h,525 :: 		COMSTAT.RXB0OVFL = 0;  //Limpiar sobreflujo
0x3642	0x9E74      	BCF         COMSTAT, 7 
;lib_can.h,526 :: 		can.numFilter = B3CON & 0x1F;
0x3644	0x0E1F      	MOVLW       31
0x3646	0x010E      	MOVLB       14
0x3648	0x1550      	ANDWF       B3CON, 0, 1
0x364A	0x6E00      	MOVWF       R0 
0x364C	0xF359C000  	MOVFF       R0, _can+16
;lib_can.h,527 :: 		ref = 0x15;
0x3650	0x0E15      	MOVLW       21
0x3652	0x0105      	MOVLB       5
0x3654	0x6F13      	MOVWF       can_read_ref_L0, 1
;lib_can.h,528 :: 		}else if(!BSEL0.B4TXEN && B4CON.RXFUL){
0x3656	0xD050      	BRA         L_can_read250
L_can_read249:
0x3658	0x010D      	MOVLB       13
0x365A	0xBDF8      	BTFSC       BSEL0, 6, 1
0x365C	0xD024      	BRA         L_can_read253
0x365E	0x010E      	MOVLB       14
0x3660	0xAF60      	BTFSS       B4CON, 7, 1
0x3662	0xD021      	BRA         L_can_read253
L__can_read959:
;lib_can.h,529 :: 		bufferBX = &B4CON;
0x3664	0x0E60      	MOVLW       B4CON
0x3666	0x0105      	MOVLB       5
0x3668	0x6F11      	MOVWF       can_read_bufferBX_L0, 1
0x366A	0x0E0E      	MOVLW       hi_addr(B4CON)
0x366C	0x6F12      	MOVWF       can_read_bufferBX_L0+1, 1
;lib_can.h,530 :: 		regLen = &B4DLC;
0x366E	0x0E65      	MOVLW       B4DLC
0x3670	0x6F0D      	MOVWF       can_read_regLen_L0, 1
0x3672	0x0E0E      	MOVLW       hi_addr(B4DLC)
0x3674	0x6F0E      	MOVWF       can_read_regLen_L0+1, 1
;lib_can.h,531 :: 		receptor = &B4EIDL;
0x3676	0x0E64      	MOVLW       B4EIDL
0x3678	0x6F0B      	MOVWF       can_read_receptor_L0, 1
0x367A	0x0E0E      	MOVLW       hi_addr(B4EIDL)
0x367C	0x6F0C      	MOVWF       can_read_receptor_L0+1, 1
;lib_can.h,532 :: 		buffer = &B4D0;
0x367E	0x0E66      	MOVLW       B4D0
0x3680	0x6F0F      	MOVWF       can_read_buffer_L0, 1
0x3682	0x0E0E      	MOVLW       hi_addr(B4D0)
0x3684	0x6F10      	MOVWF       can_read_buffer_L0+1, 1
;lib_can.h,533 :: 		can.overflow = COMSTAT.RXB0OVFL;
0x3686	0x0E00      	MOVLW       0
0x3688	0xBE74      	BTFSC       COMSTAT, 7 
0x368A	0x0E01      	MOVLW       1
0x368C	0x0103      	MOVLB       3
0x368E	0x6F58      	MOVWF       _can+15, 1
;lib_can.h,534 :: 		COMSTAT.RXB0OVFL = 0;  //Limpiar sobreflujo
0x3690	0x9E74      	BCF         COMSTAT, 7 
;lib_can.h,535 :: 		can.numFilter = B4CON & 0x1F;
0x3692	0x0E1F      	MOVLW       31
0x3694	0x010E      	MOVLB       14
0x3696	0x1560      	ANDWF       B4CON, 0, 1
0x3698	0x6E00      	MOVWF       R0 
0x369A	0xF359C000  	MOVFF       R0, _can+16
;lib_can.h,536 :: 		ref = 0x16;
0x369E	0x0E16      	MOVLW       22
0x36A0	0x0105      	MOVLB       5
0x36A2	0x6F13      	MOVWF       can_read_ref_L0, 1
;lib_can.h,537 :: 		}else if(!BSEL0.B5TXEN && B5CON.RXFUL){
0x36A4	0xD029      	BRA         L_can_read254
L_can_read253:
0x36A6	0x010D      	MOVLB       13
0x36A8	0xBFF8      	BTFSC       BSEL0, 7, 1
0x36AA	0xD024      	BRA         L_can_read257
0x36AC	0x010E      	MOVLB       14
0x36AE	0xAF70      	BTFSS       B5CON, 7, 1
0x36B0	0xD021      	BRA         L_can_read257
L__can_read958:
;lib_can.h,538 :: 		bufferBX = &B5CON;
0x36B2	0x0E70      	MOVLW       B5CON
0x36B4	0x0105      	MOVLB       5
0x36B6	0x6F11      	MOVWF       can_read_bufferBX_L0, 1
0x36B8	0x0E0E      	MOVLW       hi_addr(B5CON)
0x36BA	0x6F12      	MOVWF       can_read_bufferBX_L0+1, 1
;lib_can.h,539 :: 		regLen = &B5DLC;
0x36BC	0x0E75      	MOVLW       B5DLC
0x36BE	0x6F0D      	MOVWF       can_read_regLen_L0, 1
0x36C0	0x0E0E      	MOVLW       hi_addr(B5DLC)
0x36C2	0x6F0E      	MOVWF       can_read_regLen_L0+1, 1
;lib_can.h,540 :: 		receptor = &B5EIDL;
0x36C4	0x0E74      	MOVLW       B5EIDL
0x36C6	0x6F0B      	MOVWF       can_read_receptor_L0, 1
0x36C8	0x0E0E      	MOVLW       hi_addr(B5EIDL)
0x36CA	0x6F0C      	MOVWF       can_read_receptor_L0+1, 1
;lib_can.h,541 :: 		buffer = &B5D0;
0x36CC	0x0E76      	MOVLW       B5D0
0x36CE	0x6F0F      	MOVWF       can_read_buffer_L0, 1
0x36D0	0x0E0E      	MOVLW       hi_addr(B5D0)
0x36D2	0x6F10      	MOVWF       can_read_buffer_L0+1, 1
;lib_can.h,542 :: 		can.overflow = COMSTAT.RXB0OVFL;
0x36D4	0x0E00      	MOVLW       0
0x36D6	0xBE74      	BTFSC       COMSTAT, 7 
0x36D8	0x0E01      	MOVLW       1
0x36DA	0x0103      	MOVLB       3
0x36DC	0x6F58      	MOVWF       _can+15, 1
;lib_can.h,543 :: 		COMSTAT.RXB0OVFL = 0;  //Limpiar sobreflujo
0x36DE	0x9E74      	BCF         COMSTAT, 7 
;lib_can.h,544 :: 		can.numFilter = B5CON & 0x1F;
0x36E0	0x0E1F      	MOVLW       31
0x36E2	0x010E      	MOVLB       14
0x36E4	0x1570      	ANDWF       B5CON, 0, 1
0x36E6	0x6E00      	MOVWF       R0 
0x36E8	0xF359C000  	MOVFF       R0, _can+16
;lib_can.h,545 :: 		ref = 0x17;
0x36EC	0x0E17      	MOVLW       23
0x36EE	0x0105      	MOVLB       5
0x36F0	0x6F13      	MOVWF       can_read_ref_L0, 1
;lib_can.h,546 :: 		}else{
0x36F2	0xD002      	BRA         L_can_read258
L_can_read257:
;lib_can.h,547 :: 		return CAN_RW_EMPTY;
0x36F4	0x6A00      	CLRF        R0 
0x36F6	0xD070      	BRA         L_end_can_read
;lib_can.h,548 :: 		}
L_can_read258:
L_can_read254:
L_can_read250:
L_can_read246:
L_can_read242:
L_can_read238:
0x36F8	0x0105      	MOVLB       5
;lib_can.h,550 :: 		ECANCON &= 0xE0;
0x36FA	0x0EE0      	MOVLW       224
0x36FC	0x1677      	ANDWF       ECANCON, 1 
;lib_can.h,551 :: 		ECANCON |= ref;     //BITS EWIN
0x36FE	0x5113      	MOVF        can_read_ref_L0, 0, 1
0x3700	0x1277      	IORWF       ECANCON, 1 
;lib_can.h,552 :: 		}
L_can_read234:
;lib_can.h,555 :: 		*size = (*regLen)&0x0F;
0x3702	0xFFE9C50D  	MOVFF       can_read_regLen_L0, FSR0L
0x3706	0xFFEAC50E  	MOVFF       can_read_regLen_L0+1, FSR0H
0x370A	0xFFE1C505  	MOVFF       FARG_can_read_size, FSR1L
0x370E	0xFFE2C506  	MOVFF       FARG_can_read_size+1, FSR1H
0x3712	0x0E0F      	MOVLW       15
0x3714	0x14EE      	ANDWF       POSTINC0, 0 
0x3716	0x6EE6      	MOVWF       POSTINC1 
;lib_can.h,556 :: 		can.rxRequest = (*regLen).B6;
0x3718	0xFFE9C50D  	MOVFF       can_read_regLen_L0, FSR0L
0x371C	0xFFEAC50E  	MOVFF       can_read_regLen_L0+1, FSR0H
0x3720	0xF000CFEE  	MOVFF       POSTINC0, R0
0x3724	0x0E00      	MOVLW       0
0x3726	0xBC00      	BTFSC       R0, 6 
0x3728	0x0E01      	MOVLW       1
0x372A	0x0103      	MOVLB       3
0x372C	0x6FB2      	MOVWF       _can+105, 1
;lib_can.h,558 :: 		*id = can_get_id(receptor);
0x372E	0xF523C50B  	MOVFF       can_read_receptor_L0, FARG_can_get_id_address
0x3732	0xF524C50C  	MOVFF       can_read_receptor_L0+1, FARG_can_get_id_address+1
0x3736	0xF015EC88  	CALL        _can_get_id, 0
0x373A	0xFFE1C501  	MOVFF       FARG_can_read_id, FSR1L
0x373E	0xFFE2C502  	MOVFF       FARG_can_read_id+1, FSR1H
0x3742	0xFFE6C000  	MOVFF       R0, POSTINC1
0x3746	0xFFE6C001  	MOVFF       R1, POSTINC1
0x374A	0xFFE6C002  	MOVFF       R2, POSTINC1
0x374E	0xFFE6C003  	MOVFF       R3, POSTINC1
;lib_can.h,560 :: 		for(ref = 0; ref < *size && ref < 8; ref++)
0x3752	0x6B13      	CLRF        can_read_ref_L0, 1
L_can_read259:
0x3754	0xFFD9C505  	MOVFF       FARG_can_read_size, FSR2L
0x3758	0xFFDAC506  	MOVFF       FARG_can_read_size+1, FSR2H
0x375C	0x50DE      	MOVF        POSTINC2, 0 
0x375E	0x5D13      	SUBWF       can_read_ref_L0, 0, 1
0x3760	0xE213      	BC          L_can_read260
0x3762	0x0E08      	MOVLW       8
0x3764	0x5D13      	SUBWF       can_read_ref_L0, 0, 1
0x3766	0xE210      	BC          L_can_read260
L__can_read957:
;lib_can.h,561 :: 		datos[ref] = buffer[ref];
0x3768	0x5113      	MOVF        can_read_ref_L0, 0, 1
0x376A	0x2503      	ADDWF       FARG_can_read_datos, 0, 1
0x376C	0x6EE1      	MOVWF       FSR1L 
0x376E	0x0E00      	MOVLW       0
0x3770	0x2104      	ADDWFC      FARG_can_read_datos+1, 0, 1
0x3772	0x6EE2      	MOVWF       FSR1H 
0x3774	0x5113      	MOVF        can_read_ref_L0, 0, 1
0x3776	0x250F      	ADDWF       can_read_buffer_L0, 0, 1
0x3778	0x6EE9      	MOVWF       FSR0L 
0x377A	0x0E00      	MOVLW       0
0x377C	0x2110      	ADDWFC      can_read_buffer_L0+1, 0, 1
0x377E	0x6EEA      	MOVWF       FSR0H 
0x3780	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
;lib_can.h,560 :: 		for(ref = 0; ref < *size && ref < 8; ref++)
0x3784	0x2B13      	INCF        can_read_ref_L0, 1, 1
;lib_can.h,561 :: 		datos[ref] = buffer[ref];
0x3786	0xD7E6      	BRA         L_can_read259
L_can_read260:
;lib_can.h,564 :: 		(*bufferBX).B7 = 0;    //RESETEAR BANDERA
0x3788	0xFFE1C511  	MOVFF       can_read_bufferBX_L0, FSR1L
0x378C	0xFFE2C512  	MOVFF       can_read_bufferBX_L0+1, FSR1H
0x3790	0x9EE6      	BCF         POSTINC1, 7 
;lib_can.h,567 :: 		if(bufferBX == &RXB0CON)
0x3792	0x5112      	MOVF        can_read_bufferBX_L0+1, 0, 1
0x3794	0x0A0F      	XORLW       hi_addr(RXB0CON)
0x3796	0xE102      	BNZ         L__can_read1168
0x3798	0x0E60      	MOVLW       RXB0CON
0x379A	0x1911      	XORWF       can_read_bufferBX_L0, 0, 1
L__can_read1168:
0x379C	0xE102      	BNZ         L_can_read264
;lib_can.h,568 :: 		PIR3.RXB0IF = 0;     //VERIFICAR EN MODO 2
0x379E	0x90A4      	BCF         PIR3, 0 
0x37A0	0xD009      	BRA         L_can_read265
L_can_read264:
;lib_can.h,569 :: 		else if(bufferBX == &RXB1CON)
0x37A2	0x5112      	MOVF        can_read_bufferBX_L0+1, 0, 1
0x37A4	0x0A0F      	XORLW       hi_addr(RXB1CON)
0x37A6	0xE102      	BNZ         L__can_read1169
0x37A8	0x0E50      	MOVLW       RXB1CON
0x37AA	0x1911      	XORWF       can_read_bufferBX_L0, 0, 1
L__can_read1169:
0x37AC	0xE102      	BNZ         L_can_read266
;lib_can.h,570 :: 		PIR3.RXB1IF = 0;     //EN MODO 0, LIMPIA BUFFER BX1
0x37AE	0x92A4      	BCF         PIR3, 1 
0x37B0	0xD001      	BRA         L_can_read267
L_can_read266:
;lib_can.h,572 :: 		PIR3.RXB1IF = 0;     //MODO 1 y 2, ESTE BIT SIRVE PARA N BUFFERS
0x37B2	0x92A4      	BCF         PIR3, 1 
L_can_read267:
L_can_read265:
;lib_can.h,575 :: 		if(can.mode == CAN_MODE_LEGACY){
0x37B4	0x0103      	MOVLB       3
0x37B6	0x5157      	MOVF        _can+14, 0, 1
0x37B8	0x0A00      	XORLW       0
0x37BA	0xE103      	BNZ         L_can_read268
;lib_can.h,576 :: 		CANCON &= 0xF1;
0x37BC	0x0EF1      	MOVLW       241
0x37BE	0x166F      	ANDWF       CANCON, 1 
;lib_can.h,577 :: 		CANCON |= 0x00;   //BITS WIN, LISTEN BUFFER0
;lib_can.h,578 :: 		}else{
0x37C0	0xD004      	BRA         L_can_read269
L_can_read268:
;lib_can.h,579 :: 		ECANCON &= 0xE0;
0x37C2	0x0EE0      	MOVLW       224
0x37C4	0x1677      	ANDWF       ECANCON, 1 
;lib_can.h,580 :: 		ECANCON |= 0x16;  //BITS EWIN, RX0 INTERRUPT
0x37C6	0x0E16      	MOVLW       22
0x37C8	0x1277      	IORWF       ECANCON, 1 
;lib_can.h,581 :: 		}
L_can_read269:
;lib_can.h,583 :: 		if(!can.rxRequest)
0x37CA	0x53B2      	MOVF        _can+105, 1, 1
0x37CC	0xE103      	BNZ         L_can_read270
;lib_can.h,584 :: 		return CAN_RW_DATA;      //Datos en buffer
0x37CE	0x0E01      	MOVLW       1
0x37D0	0x6E00      	MOVWF       R0 
0x37D2	0xD002      	BRA         L_end_can_read
L_can_read270:
;lib_can.h,586 :: 		return CAN_RW_REQUEST;    //Peticion solicitada
0x37D4	0x0E02      	MOVLW       2
0x37D6	0x6E00      	MOVWF       R0 
;lib_can.h,587 :: 		}
L_end_can_read:
0x37D8	0x0012      	RETURN      0
; end of _can_read
_Soft_I2C_Init:
;__Lib_SoftI2C.c,68 :: 		
;__Lib_SoftI2C.c,74 :: 		
0x37DA	0x8296      	BSF         Soft_I2C_Scl_Direction, BitPos(Soft_I2C_Scl_Direction+0) 
;__Lib_SoftI2C.c,75 :: 		
0x37DC	0x8C95      	BSF         Soft_I2C_Sda_Direction, BitPos(Soft_I2C_Sda_Direction+0) 
;__Lib_SoftI2C.c,77 :: 		
0x37DE	0x0102      	MOVLB       2
0x37E0	0x91E4      	BCF         __Lib_SoftI2C___StopWaiting, BitPos(__Lib_SoftI2C___StopWaiting+0), 1
;__Lib_SoftI2C.c,78 :: 		
L_Soft_I2C_Init0:
0x37E2	0xB284      	BTFSC       Soft_I2C_Scl, BitPos(Soft_I2C_Scl+0) 
0x37E4	0xD004      	BRA         L_Soft_I2C_Init1
;__Lib_SoftI2C.c,79 :: 		
0x37E6	0xA1E4      	BTFSS       __Lib_SoftI2C___StopWaiting, BitPos(__Lib_SoftI2C___StopWaiting+0), 1
0x37E8	0xD001      	BRA         L_Soft_I2C_Init2
;__Lib_SoftI2C.c,80 :: 		
0x37EA	0xD001      	BRA         L_Soft_I2C_Init1
L_Soft_I2C_Init2:
0x37EC	0xD7FA      	BRA         L_Soft_I2C_Init0
L_Soft_I2C_Init1:
;__Lib_SoftI2C.c,82 :: 		
L_end_Soft_I2C_Init:
0x37EE	0x0012      	RETURN      0
; end of _Soft_I2C_Init
_timer2_open:
;lib_timer2.h,9 :: 		void timer2_open(long time_us, bool powerOn, bool enable, bool priorityHigh){
;lib_timer2.h,10 :: 		char pres = 1, post, auxPre = 0xFF;
0x37F0	0x0E01      	MOVLW       1
0x37F2	0x0105      	MOVLB       5
0x37F4	0x6F09      	MOVWF       timer2_open_pres_L0, 1
0x37F6	0x0EFF      	MOVLW       255
0x37F8	0x6F0A      	MOVWF       timer2_open_auxPre_L0, 1
;lib_timer2.h,14 :: 		time_us *= Clock_Mhz();
0x37FA	0xF000C501  	MOVFF       FARG_timer2_open_time_us, R0
0x37FE	0xF001C502  	MOVFF       FARG_timer2_open_time_us+1, R1
0x3802	0xF002C503  	MOVFF       FARG_timer2_open_time_us+2, R2
0x3806	0xF003C504  	MOVFF       FARG_timer2_open_time_us+3, R3
0x380A	0x0E28      	MOVLW       40
0x380C	0x6E04      	MOVWF       R4 
0x380E	0x0E00      	MOVLW       0
0x3810	0x6E05      	MOVWF       R5 
0x3812	0x6E06      	MOVWF       R6 
0x3814	0x6E07      	MOVWF       R7 
0x3816	0xF003ECC8  	CALL        _Mul_32x32_U, 0
0x381A	0xF501C000  	MOVFF       R0, FARG_timer2_open_time_us
0x381E	0xF502C001  	MOVFF       R1, FARG_timer2_open_time_us+1
0x3822	0xF503C002  	MOVFF       R2, FARG_timer2_open_time_us+2
0x3826	0xF504C003  	MOVFF       R3, FARG_timer2_open_time_us+3
;lib_timer2.h,17 :: 		for(pres = 1; pres <= 16; pres *= 4){
0x382A	0x0E01      	MOVLW       1
0x382C	0x6F09      	MOVWF       timer2_open_pres_L0, 1
L_timer2_open105:
0x382E	0x5109      	MOVF        timer2_open_pres_L0, 0, 1
0x3830	0x0810      	SUBLW       16
0x3832	0xA0D8      	BTFSS       STATUS, 0 
0x3834	0xD081      	BRA         L_timer2_open106
;lib_timer2.h,18 :: 		auxPre++;
0x3836	0x2B0A      	INCF        timer2_open_auxPre_L0, 1, 1
;lib_timer2.h,19 :: 		for(post = 1; post <= 16; post++){
0x3838	0x0E01      	MOVLW       1
0x383A	0x6F08      	MOVWF       timer2_open_post_L0, 1
L_timer2_open108:
0x383C	0x5108      	MOVF        timer2_open_post_L0, 0, 1
0x383E	0x0810      	SUBLW       16
0x3840	0xA0D8      	BTFSS       STATUS, 0 
0x3842	0xD075      	BRA         L_timer2_open109
;lib_timer2.h,20 :: 		if(time_us/(pres*post*4U) <= 255){
0x3844	0x5109      	MOVF        timer2_open_pres_L0, 0, 1
0x3846	0x0308      	MULWF       timer2_open_post_L0, 1
0x3848	0xF001CFF3  	MOVFF       PRODL, R1
0x384C	0xF002CFF4  	MOVFF       PRODH, R2
0x3850	0xF004C001  	MOVFF       R1, R4
0x3854	0xF005C002  	MOVFF       R2, R5
0x3858	0x3604      	RLCF        R4, 1 
0x385A	0x9004      	BCF         R4, 0 
0x385C	0x3605      	RLCF        R5, 1 
0x385E	0x3604      	RLCF        R4, 1 
0x3860	0x9004      	BCF         R4, 0 
0x3862	0x3605      	RLCF        R5, 1 
0x3864	0x0E00      	MOVLW       0
0x3866	0xBE05      	BTFSC       R5, 7 
0x3868	0x0EFF      	MOVLW       255
0x386A	0x6E06      	MOVWF       R6 
0x386C	0x6E07      	MOVWF       R7 
0x386E	0xF000C501  	MOVFF       FARG_timer2_open_time_us, R0
0x3872	0xF001C502  	MOVFF       FARG_timer2_open_time_us+1, R1
0x3876	0xF002C503  	MOVFF       FARG_timer2_open_time_us+2, R2
0x387A	0xF003C504  	MOVFF       FARG_timer2_open_time_us+3, R3
0x387E	0xF002EC95  	CALL        _Div_32x32_S, 0
0x3882	0x0E80      	MOVLW       128
0x3884	0x6E04      	MOVWF       R4 
0x3886	0x0E80      	MOVLW       128
0x3888	0x1803      	XORWF       R3, 0 
0x388A	0x5C04      	SUBWF       R4, 0 
0x388C	0xE108      	BNZ         L__timer2_open1071
0x388E	0x5002      	MOVF        R2, 0 
0x3890	0x0800      	SUBLW       0
0x3892	0xE105      	BNZ         L__timer2_open1071
0x3894	0x5001      	MOVF        R1, 0 
0x3896	0x0800      	SUBLW       0
0x3898	0xE102      	BNZ         L__timer2_open1071
0x389A	0x5000      	MOVF        R0, 0 
0x389C	0x08FF      	SUBLW       255
L__timer2_open1071:
0x389E	0xE344      	BNC         L_timer2_open111
;lib_timer2.h,21 :: 		time_us /= 4;
0x38A0	0xF000C501  	MOVFF       FARG_timer2_open_time_us, R0
0x38A4	0xF001C502  	MOVFF       FARG_timer2_open_time_us+1, R1
0x38A8	0xF002C503  	MOVFF       FARG_timer2_open_time_us+2, R2
0x38AC	0xF003C504  	MOVFF       FARG_timer2_open_time_us+3, R3
0x38B0	0x3203      	RRCF        R3, 1 
0x38B2	0x3202      	RRCF        R2, 1 
0x38B4	0x3201      	RRCF        R1, 1 
0x38B6	0x3200      	RRCF        R0, 1 
0x38B8	0x9E03      	BCF         R3, 7 
0x38BA	0xBC03      	BTFSC       R3, 6 
0x38BC	0x8E03      	BSF         R3, 7 
0x38BE	0x3203      	RRCF        R3, 1 
0x38C0	0x3202      	RRCF        R2, 1 
0x38C2	0x3201      	RRCF        R1, 1 
0x38C4	0x3200      	RRCF        R0, 1 
0x38C6	0x9E03      	BCF         R3, 7 
0x38C8	0xBC03      	BTFSC       R3, 6 
0x38CA	0x8E03      	BSF         R3, 7 
0x38CC	0xF501C000  	MOVFF       R0, FARG_timer2_open_time_us
0x38D0	0xF502C001  	MOVFF       R1, FARG_timer2_open_time_us+1
0x38D4	0xF503C002  	MOVFF       R2, FARG_timer2_open_time_us+2
0x38D8	0xF504C003  	MOVFF       R3, FARG_timer2_open_time_us+3
;lib_timer2.h,22 :: 		time_us /= pres;
0x38DC	0xF004C509  	MOVFF       timer2_open_pres_L0, R4
0x38E0	0x0E00      	MOVLW       0
0x38E2	0x6E05      	MOVWF       R5 
0x38E4	0x6E06      	MOVWF       R6 
0x38E6	0x6E07      	MOVWF       R7 
0x38E8	0xF002EC95  	CALL        _Div_32x32_S, 0
0x38EC	0xF501C000  	MOVFF       R0, FARG_timer2_open_time_us
0x38F0	0xF502C001  	MOVFF       R1, FARG_timer2_open_time_us+1
0x38F4	0xF503C002  	MOVFF       R2, FARG_timer2_open_time_us+2
0x38F8	0xF504C003  	MOVFF       R3, FARG_timer2_open_time_us+3
;lib_timer2.h,23 :: 		time_us /= post;
0x38FC	0xF004C508  	MOVFF       timer2_open_post_L0, R4
0x3900	0x0E00      	MOVLW       0
0x3902	0x6E05      	MOVWF       R5 
0x3904	0x6E06      	MOVWF       R6 
0x3906	0x6E07      	MOVWF       R7 
0x3908	0xF002EC95  	CALL        _Div_32x32_S, 0
0x390C	0xF501C000  	MOVFF       R0, FARG_timer2_open_time_us
0x3910	0xF502C001  	MOVFF       R1, FARG_timer2_open_time_us+1
0x3914	0xF503C002  	MOVFF       R2, FARG_timer2_open_time_us+2
0x3918	0xF504C003  	MOVFF       R3, FARG_timer2_open_time_us+3
;lib_timer2.h,24 :: 		PR2 = time_us;
0x391C	0xFFCBC000  	MOVFF       R0, PR2
;lib_timer2.h,25 :: 		pres = 16; //Para fozar salir del otro for
0x3920	0x0E10      	MOVLW       16
0x3922	0x0105      	MOVLB       5
0x3924	0x6F09      	MOVWF       timer2_open_pres_L0, 1
;lib_timer2.h,26 :: 		break;
0x3926	0xD003      	BRA         L_timer2_open109
;lib_timer2.h,27 :: 		}
L_timer2_open111:
0x3928	0x0105      	MOVLB       5
;lib_timer2.h,19 :: 		for(post = 1; post <= 16; post++){
0x392A	0x2B08      	INCF        timer2_open_post_L0, 1, 1
;lib_timer2.h,28 :: 		}
0x392C	0xD787      	BRA         L_timer2_open108
L_timer2_open109:
;lib_timer2.h,17 :: 		for(pres = 1; pres <= 16; pres *= 4){
0x392E	0x3709      	RLCF        timer2_open_pres_L0, 1, 1
0x3930	0x9109      	BCF         timer2_open_pres_L0, 0, 1
0x3932	0x3709      	RLCF        timer2_open_pres_L0, 1, 1
0x3934	0x9109      	BCF         timer2_open_pres_L0, 0, 1
;lib_timer2.h,29 :: 		}
0x3936	0xD77B      	BRA         L_timer2_open105
L_timer2_open106:
;lib_timer2.h,32 :: 		T2CON.T2CKPS0 = auxPre.B0;  //Prescaler
0x3938	0xB10A      	BTFSC       timer2_open_auxPre_L0, 0, 1
0x393A	0xD002      	BRA         L__timer2_open1072
0x393C	0x90CA      	BCF         T2CON, 0 
0x393E	0xD001      	BRA         L__timer2_open1073
L__timer2_open1072:
0x3940	0x80CA      	BSF         T2CON, 0 
L__timer2_open1073:
;lib_timer2.h,33 :: 		T2CON.T2CKPS1 = auxPre.B1;  //Prescaler
0x3942	0xB30A      	BTFSC       timer2_open_auxPre_L0, 1, 1
0x3944	0xD002      	BRA         L__timer2_open1074
0x3946	0x92CA      	BCF         T2CON, 1 
0x3948	0xD001      	BRA         L__timer2_open1075
L__timer2_open1074:
0x394A	0x82CA      	BSF         T2CON, 1 
L__timer2_open1075:
;lib_timer2.h,34 :: 		post--;
0x394C	0x0708      	DECF        timer2_open_post_L0, 1, 1
;lib_timer2.h,35 :: 		T2CON.T2OUTPS0 = post.B0;   //Postcaler
0x394E	0xB108      	BTFSC       timer2_open_post_L0, 0, 1
0x3950	0xD002      	BRA         L__timer2_open1076
0x3952	0x96CA      	BCF         T2CON, 3 
0x3954	0xD001      	BRA         L__timer2_open1077
L__timer2_open1076:
0x3956	0x86CA      	BSF         T2CON, 3 
L__timer2_open1077:
;lib_timer2.h,36 :: 		T2CON.T2OUTPS1 = post.B1;   //Postcaler
0x3958	0xB308      	BTFSC       timer2_open_post_L0, 1, 1
0x395A	0xD002      	BRA         L__timer2_open1078
0x395C	0x98CA      	BCF         T2CON, 4 
0x395E	0xD001      	BRA         L__timer2_open1079
L__timer2_open1078:
0x3960	0x88CA      	BSF         T2CON, 4 
L__timer2_open1079:
;lib_timer2.h,37 :: 		T2CON.T2OUTPS2 = post.B2;   //Postcaler
0x3962	0xB508      	BTFSC       timer2_open_post_L0, 2, 1
0x3964	0xD002      	BRA         L__timer2_open1080
0x3966	0x9ACA      	BCF         T2CON, 5 
0x3968	0xD001      	BRA         L__timer2_open1081
L__timer2_open1080:
0x396A	0x8ACA      	BSF         T2CON, 5 
L__timer2_open1081:
;lib_timer2.h,38 :: 		T2CON.T2OUTPS3 = post.B3;   //Postcaler
0x396C	0xB708      	BTFSC       timer2_open_post_L0, 3, 1
0x396E	0xD002      	BRA         L__timer2_open1082
0x3970	0x9CCA      	BCF         T2CON, 6 
0x3972	0xD001      	BRA         L__timer2_open1083
L__timer2_open1082:
0x3974	0x8CCA      	BSF         T2CON, 6 
L__timer2_open1083:
;lib_timer2.h,41 :: 		TMR2 = 0;
0x3976	0x6ACC      	CLRF        TMR2 
;lib_timer2.h,44 :: 		PIR1.TMR2IF = 0;            //LIMPIAR BANDERA
0x3978	0x929E      	BCF         PIR1, 1 
;lib_timer2.h,45 :: 		PIE1.TMR2IE = enable;       //ACTIVAR O DESACTIVAR TIMER
0x397A	0xB106      	BTFSC       FARG_timer2_open_enable, 0, 1
0x397C	0xD002      	BRA         L__timer2_open1084
0x397E	0x929D      	BCF         PIE1, 1 
0x3980	0xD001      	BRA         L__timer2_open1085
L__timer2_open1084:
0x3982	0x829D      	BSF         PIE1, 1 
L__timer2_open1085:
;lib_timer2.h,46 :: 		IPR1.TMR2IP = priorityHigh; //TIPO DE PRIORIDAD
0x3984	0xB107      	BTFSC       FARG_timer2_open_priorityHigh, 0, 1
0x3986	0xD002      	BRA         L__timer2_open1086
0x3988	0x929F      	BCF         IPR1, 1 
0x398A	0xD001      	BRA         L__timer2_open1087
L__timer2_open1086:
0x398C	0x829F      	BSF         IPR1, 1 
L__timer2_open1087:
;lib_timer2.h,47 :: 		T2CON.TMR2ON = powerOn;     //ENCENDER TIMER
0x398E	0xB105      	BTFSC       FARG_timer2_open_powerOn, 0, 1
0x3990	0xD002      	BRA         L__timer2_open1088
0x3992	0x94CA      	BCF         T2CON, 2 
0x3994	0xD001      	BRA         L__timer2_open1089
L__timer2_open1088:
0x3996	0x84CA      	BSF         T2CON, 2 
L__timer2_open1089:
;lib_timer2.h,48 :: 		}
L_end_timer2_open:
0x3998	0x0012      	RETURN      0
; end of _timer2_open
_external_int1_open:
;lib_external_int1.h,8 :: 		void external_int1_open(bool enable, bool edgeOnRising, bool priorityHigh){
;lib_external_int1.h,9 :: 		INTCON3.INT1IF = 0;                //LIMPIAR BANDERA
0x399A	0x90F0      	BCF         INTCON3, 0 
;lib_external_int1.h,10 :: 		INTCON2.INTEDG1 = edgeOnRising.B0; //FLANCO DE SUBIDA
0x399C	0x0105      	MOVLB       5
0x399E	0xB102      	BTFSC       FARG_external_int1_open_edgeOnRising, 0, 1
0x39A0	0xD002      	BRA         L__external_int1_open1321
0x39A2	0x9AF1      	BCF         INTCON2, 5 
0x39A4	0xD001      	BRA         L__external_int1_open1322
L__external_int1_open1321:
0x39A6	0x8AF1      	BSF         INTCON2, 5 
L__external_int1_open1322:
;lib_external_int1.h,11 :: 		INTCON3.INT1IP = priorityHigh.B0;  //PRIORIDAD DE LA INTERRUPCION
0x39A8	0xB103      	BTFSC       FARG_external_int1_open_priorityHigh, 0, 1
0x39AA	0xD002      	BRA         L__external_int1_open1323
0x39AC	0x9CF0      	BCF         INTCON3, 6 
0x39AE	0xD001      	BRA         L__external_int1_open1324
L__external_int1_open1323:
0x39B0	0x8CF0      	BSF         INTCON3, 6 
L__external_int1_open1324:
;lib_external_int1.h,12 :: 		INTCON3.INT1IE = enable.B0;        //DISPONIBILIDAD
0x39B2	0xB101      	BTFSC       FARG_external_int1_open_enable, 0, 1
0x39B4	0xD002      	BRA         L__external_int1_open1325
0x39B6	0x96F0      	BCF         INTCON3, 3 
0x39B8	0xD001      	BRA         L__external_int1_open1326
L__external_int1_open1325:
0x39BA	0x86F0      	BSF         INTCON3, 3 
L__external_int1_open1326:
;lib_external_int1.h,13 :: 		}
L_end_external_int1_open:
0x39BC	0x0012      	RETURN      0
; end of _external_int1_open
_external_int0_open:
;lib_external_int0.h,8 :: 		void external_int0_open(bool enable, bool edgeOnRising){
;lib_external_int0.h,9 :: 		INTCON.INT0IF = 0;                  //LIMPIAR BANDERA
0x39BE	0x92F2      	BCF         INTCON, 1 
;lib_external_int0.h,10 :: 		INTCON2.INTEDG0 = edgeOnRising.B0;  //FLANCO DE SUBIDA
0x39C0	0x0105      	MOVLB       5
0x39C2	0xB102      	BTFSC       FARG_external_int0_open_edgeOnRising, 0, 1
0x39C4	0xD002      	BRA         L__external_int0_open1310
0x39C6	0x9CF1      	BCF         INTCON2, 6 
0x39C8	0xD001      	BRA         L__external_int0_open1311
L__external_int0_open1310:
0x39CA	0x8CF1      	BSF         INTCON2, 6 
L__external_int0_open1311:
;lib_external_int0.h,11 :: 		INTCON.INT0IE = enable.B0;          //DISPONIBILIDAD
0x39CC	0xB101      	BTFSC       FARG_external_int0_open_enable, 0, 1
0x39CE	0xD002      	BRA         L__external_int0_open1312
0x39D0	0x98F2      	BCF         INTCON, 4 
0x39D2	0xD001      	BRA         L__external_int0_open1313
L__external_int0_open1312:
0x39D4	0x88F2      	BSF         INTCON, 4 
L__external_int0_open1313:
;lib_external_int0.h,12 :: 		}
L_end_external_int0_open:
0x39D6	0x0012      	RETURN      0
; end of _external_int0_open
_can_set_mode:
;lib_can.h,703 :: 		void can_set_mode(const char CAN_MODE){
;lib_can.h,704 :: 		char modeAct = 0;
0x39D8	0x0105      	MOVLB       5
0x39DA	0x6B02      	CLRF        can_set_mode_modeAct_L0, 1
;lib_can.h,706 :: 		modeAct.B0 = CANSTAT.OPMODE0;
0x39DC	0xBA6E      	BTFSC       CANSTAT, 5 
0x39DE	0xD002      	BRA         L__can_set_mode1191
0x39E0	0x9102      	BCF         can_set_mode_modeAct_L0, 0, 1
0x39E2	0xD001      	BRA         L__can_set_mode1192
L__can_set_mode1191:
0x39E4	0x8102      	BSF         can_set_mode_modeAct_L0, 0, 1
L__can_set_mode1192:
;lib_can.h,707 :: 		modeAct.B1 = CANSTAT.OPMODE1;
0x39E6	0xBC6E      	BTFSC       CANSTAT, 6 
0x39E8	0xD002      	BRA         L__can_set_mode1193
0x39EA	0x9302      	BCF         can_set_mode_modeAct_L0, 1, 1
0x39EC	0xD001      	BRA         L__can_set_mode1194
L__can_set_mode1193:
0x39EE	0x8302      	BSF         can_set_mode_modeAct_L0, 1, 1
L__can_set_mode1194:
;lib_can.h,708 :: 		modeAct.B2 = CANSTAT.OPMODE2;
0x39F0	0xBE6E      	BTFSC       CANSTAT, 7 
0x39F2	0xD002      	BRA         L__can_set_mode1195
0x39F4	0x9502      	BCF         can_set_mode_modeAct_L0, 2, 1
0x39F6	0xD001      	BRA         L__can_set_mode1196
L__can_set_mode1195:
0x39F8	0x8502      	BSF         can_set_mode_modeAct_L0, 2, 1
L__can_set_mode1196:
;lib_can.h,710 :: 		can_set_operation(CAN_OPERATION_CONFIG);  //Se debe poner se en modo config
0x39FA	0x0E04      	MOVLW       4
0x39FC	0x6F23      	MOVWF       FARG_can_set_operation_CAN_OPERATION, 1
0x39FE	0xF00EEC2B  	CALL        _can_set_operation, 0
;lib_can.h,711 :: 		ECANCON.MDSEL0 = CAN_MODE.B0;
0x3A02	0xB101      	BTFSC       FARG_can_set_mode_CAN_MODE, 0, 1
0x3A04	0xD002      	BRA         L__can_set_mode1197
0x3A06	0x9C77      	BCF         ECANCON, 6 
0x3A08	0xD001      	BRA         L__can_set_mode1198
L__can_set_mode1197:
0x3A0A	0x8C77      	BSF         ECANCON, 6 
L__can_set_mode1198:
;lib_can.h,712 :: 		ECANCON.MDSEL1 = CAN_MODE.B1;
0x3A0C	0xB301      	BTFSC       FARG_can_set_mode_CAN_MODE, 1, 1
0x3A0E	0xD002      	BRA         L__can_set_mode1199
0x3A10	0x9E77      	BCF         ECANCON, 7 
0x3A12	0xD001      	BRA         L__can_set_mode1200
L__can_set_mode1199:
0x3A14	0x8E77      	BSF         ECANCON, 7 
L__can_set_mode1200:
;lib_can.h,713 :: 		can_set_operation(modeAct);
0x3A16	0xF523C502  	MOVFF       can_set_mode_modeAct_L0, FARG_can_set_operation_CAN_OPERATION
0x3A1A	0xF00EEC2B  	CALL        _can_set_operation, 0
;lib_can.h,714 :: 		can.mode = CAN_MODE;
0x3A1E	0xF357C501  	MOVFF       FARG_can_set_mode_CAN_MODE, _can+14
;lib_can.h,715 :: 		}
L_end_can_set_mode:
0x3A22	0x0012      	RETURN      0
; end of _can_set_mode
_external_int0_enable:
;lib_external_int0.h,14 :: 		void external_int0_enable(bool enable){
;lib_external_int0.h,15 :: 		INTCON.INT0IE = enable.B0;          //DISPONIBILIDAD
0x3A24	0x0105      	MOVLB       5
0x3A26	0xB101      	BTFSC       FARG_external_int0_enable_enable, 0, 1
0x3A28	0xD002      	BRA         L__external_int0_enable1315
0x3A2A	0x98F2      	BCF         INTCON, 4 
0x3A2C	0xD001      	BRA         L__external_int0_enable1316
L__external_int0_enable1315:
0x3A2E	0x88F2      	BSF         INTCON, 4 
L__external_int0_enable1316:
;lib_external_int0.h,16 :: 		}
L_end_external_int0_enable:
0x3A30	0x0012      	RETURN      0
; end of _external_int0_enable
_eeprom_i2c_open:
;eeprom_i2c_soft.h,20 :: 		void eeprom_i2c_open(){
;eeprom_i2c_soft.h,21 :: 		I2C_soft_init();         //Initialize Soft I2C communication}
0x3A32	0xF016ECF5  	CALL        _I2C_soft_init, 0
;eeprom_i2c_soft.h,22 :: 		}
L_end_eeprom_i2c_open:
0x3A36	0x0012      	RETURN      0
; end of _eeprom_i2c_open
_can_set_baud:
;lib_can.h,395 :: 		void can_set_baud(unsigned int speed_us){
;lib_can.h,408 :: 		speed_us *= Clock_Mhz();
0x3A38	0xF000C501  	MOVFF       FARG_can_set_baud_speed_us, R0
0x3A3C	0xF001C502  	MOVFF       FARG_can_set_baud_speed_us+1, R1
0x3A40	0x0E28      	MOVLW       40
0x3A42	0x6E04      	MOVWF       R4 
0x3A44	0x0E00      	MOVLW       0
0x3A46	0x6E05      	MOVWF       R5 
0x3A48	0xF002EC54  	CALL        _Mul_16X16_U, 0
0x3A4C	0xF501C000  	MOVFF       R0, FARG_can_set_baud_speed_us
0x3A50	0xF502C001  	MOVFF       R1, FARG_can_set_baud_speed_us+1
;lib_can.h,409 :: 		speed_us /= 2;
0x3A54	0xF501C000  	MOVFF       R0, FARG_can_set_baud_speed_us
0x3A58	0xF502C001  	MOVFF       R1, FARG_can_set_baud_speed_us+1
0x3A5C	0x0105      	MOVLB       5
0x3A5E	0x3302      	RRCF        FARG_can_set_baud_speed_us+1, 1, 1
0x3A60	0x3301      	RRCF        FARG_can_set_baud_speed_us, 1, 1
0x3A62	0x9F02      	BCF         FARG_can_set_baud_speed_us+1, 7, 1
;lib_can.h,410 :: 		for(Tqp = 25; Tqp >= 8; Tqp--){
0x3A64	0x0E19      	MOVLW       25
0x3A66	0x6F03      	MOVWF       can_set_baud_Tqp_L0, 1
L_can_set_baud205:
0x3A68	0x0E08      	MOVLW       8
0x3A6A	0x5D03      	SUBWF       can_set_baud_Tqp_L0, 0, 1
0x3A6C	0xE32F      	BNC         L_can_set_baud206
;lib_can.h,411 :: 		if(speed_us % Tqp == 0){
0x3A6E	0xF004C503  	MOVFF       can_set_baud_Tqp_L0, R4
0x3A72	0x0E00      	MOVLW       0
0x3A74	0x6E05      	MOVWF       R5 
0x3A76	0xF000C501  	MOVFF       FARG_can_set_baud_speed_us, R0
0x3A7A	0xF001C502  	MOVFF       FARG_can_set_baud_speed_us+1, R1
0x3A7E	0xF00EEC61  	CALL        _Div_16X16_U, 0
0x3A82	0xF000C008  	MOVFF       R8, R0
0x3A86	0xF001C009  	MOVFF       R9, R1
0x3A8A	0x0E00      	MOVLW       0
0x3A8C	0x1801      	XORWF       R1, 0 
0x3A8E	0xE102      	BNZ         L__can_set_baud1148
0x3A90	0x0E00      	MOVLW       0
0x3A92	0x1800      	XORWF       R0, 0 
L__can_set_baud1148:
0x3A94	0xE119      	BNZ         L_can_set_baud208
;lib_can.h,412 :: 		pre = speed_us/Tqp;
0x3A96	0xF004C503  	MOVFF       can_set_baud_Tqp_L0, R4
0x3A9A	0x0E00      	MOVLW       0
0x3A9C	0x6E05      	MOVWF       R5 
0x3A9E	0xF000C501  	MOVFF       FARG_can_set_baud_speed_us, R0
0x3AA2	0xF001C502  	MOVFF       FARG_can_set_baud_speed_us+1, R1
0x3AA6	0xF00EEC61  	CALL        _Div_16X16_U, 0
0x3AAA	0xF504C000  	MOVFF       R0, can_set_baud_pre_L0
;lib_can.h,413 :: 		if(pre >= 1 && pre <= 64){
0x3AAE	0x0E01      	MOVLW       1
0x3AB0	0x5C00      	SUBWF       R0, 0 
0x3AB2	0xE30A      	BNC         L_can_set_baud211
0x3AB4	0x5104      	MOVF        can_set_baud_pre_L0, 0, 1
0x3AB6	0x0840      	SUBLW       64
0x3AB8	0xE307      	BNC         L_can_set_baud211
L__can_set_baud956:
;lib_can.h,415 :: 		BRGCON1 = --pre;            //Bit menos significativo
0x3ABA	0x0704      	DECF        can_set_baud_pre_L0, 1, 1
0x3ABC	0xFF70C504  	MOVFF       can_set_baud_pre_L0, BRGCON1
;lib_can.h,416 :: 		BRGCON1.SJW0 = CAN_SYNC_JUMP_WIDTH.B0;
0x3AC0	0x9C70      	BCF         BRGCON1, 6 
;lib_can.h,417 :: 		BRGCON1.SJW1 = CAN_SYNC_JUMP_WIDTH.B1;
0x3AC2	0x9E70      	BCF         BRGCON1, 7 
;lib_can.h,418 :: 		Tqp--;                       //Restar 1Tq por SYNC
0x3AC4	0x0703      	DECF        can_set_baud_Tqp_L0, 1, 1
;lib_can.h,419 :: 		break;
0x3AC6	0xD002      	BRA         L_can_set_baud206
;lib_can.h,420 :: 		}
L_can_set_baud211:
;lib_can.h,421 :: 		}
L_can_set_baud208:
;lib_can.h,410 :: 		for(Tqp = 25; Tqp >= 8; Tqp--){
0x3AC8	0x0703      	DECF        can_set_baud_Tqp_L0, 1, 1
;lib_can.h,422 :: 		}
0x3ACA	0xD7CE      	BRA         L_can_set_baud205
L_can_set_baud206:
;lib_can.h,424 :: 		for(pre = 16; pre >= 2; pre -= 2){
0x3ACC	0x0E10      	MOVLW       16
0x3ACE	0x6F04      	MOVWF       can_set_baud_pre_L0, 1
L_can_set_baud212:
0x3AD0	0x0E02      	MOVLW       2
0x3AD2	0x5D04      	SUBWF       can_set_baud_pre_L0, 0, 1
0x3AD4	0xE34C      	BNC         L_can_set_baud213
;lib_can.h,425 :: 		if(Tqp > pre){
0x3AD6	0x5103      	MOVF        can_set_baud_Tqp_L0, 0, 1
0x3AD8	0x5D04      	SUBWF       can_set_baud_pre_L0, 0, 1
0x3ADA	0xE246      	BC          L_can_set_baud215
;lib_can.h,426 :: 		pre >>= 1; //DIVIDE SOBRE DOS
0x3ADC	0xF000C504  	MOVFF       can_set_baud_pre_L0, R0
0x3AE0	0x3200      	RRCF        R0, 1 
0x3AE2	0x9E00      	BCF         R0, 7 
0x3AE4	0xF504C000  	MOVFF       R0, can_set_baud_pre_L0
;lib_can.h,427 :: 		pre--;     //AJUSTAR VALORES DE 0-7
0x3AE8	0x0600      	DECF        R0, 1 
0x3AEA	0xF504C000  	MOVFF       R0, can_set_baud_pre_L0
;lib_can.h,429 :: 		BRGCON2.SEG2PHTS = 1;      //PHASE 2 PROGRAMABLE
0x3AEE	0x8E71      	BSF         BRGCON2, 7 
;lib_can.h,430 :: 		BRGCON2.SAM = CAN_SAMPLE_THRICE_TIMES.B0;
0x3AF0	0x8C71      	BSF         BRGCON2, 6 
;lib_can.h,431 :: 		BRGCON2.SEG1PH0 = pre.B0;
0x3AF2	0xB104      	BTFSC       can_set_baud_pre_L0, 0, 1
0x3AF4	0xD002      	BRA         L__can_set_baud1149
0x3AF6	0x9671      	BCF         BRGCON2, 3 
0x3AF8	0xD001      	BRA         L__can_set_baud1150
L__can_set_baud1149:
0x3AFA	0x8671      	BSF         BRGCON2, 3 
L__can_set_baud1150:
;lib_can.h,432 :: 		BRGCON2.SEG1PH1 = pre.B1;
0x3AFC	0xB304      	BTFSC       can_set_baud_pre_L0, 1, 1
0x3AFE	0xD002      	BRA         L__can_set_baud1151
0x3B00	0x9871      	BCF         BRGCON2, 4 
0x3B02	0xD001      	BRA         L__can_set_baud1152
L__can_set_baud1151:
0x3B04	0x8871      	BSF         BRGCON2, 4 
L__can_set_baud1152:
;lib_can.h,433 :: 		BRGCON2.SEG1PH2 = pre.B2;
0x3B06	0xB504      	BTFSC       can_set_baud_pre_L0, 2, 1
0x3B08	0xD002      	BRA         L__can_set_baud1153
0x3B0A	0x9A71      	BCF         BRGCON2, 5 
0x3B0C	0xD001      	BRA         L__can_set_baud1154
L__can_set_baud1153:
0x3B0E	0x8A71      	BSF         BRGCON2, 5 
L__can_set_baud1154:
;lib_can.h,435 :: 		BRGCON3.WAKDIS = !CAN_WAKE_UP_IN_ACTIVITY;
0x3B10	0x9E72      	BCF         BRGCON3, 7 
;lib_can.h,436 :: 		BRGCON3.WAKFIL = CAN_LINE_FILTER_ON;
0x3B12	0x9C72      	BCF         BRGCON3, 6 
;lib_can.h,437 :: 		BRGCON3.SEG2PH0 = pre.B0;
0x3B14	0xB104      	BTFSC       can_set_baud_pre_L0, 0, 1
0x3B16	0xD002      	BRA         L__can_set_baud1155
0x3B18	0x9072      	BCF         BRGCON3, 0 
0x3B1A	0xD001      	BRA         L__can_set_baud1156
L__can_set_baud1155:
0x3B1C	0x8072      	BSF         BRGCON3, 0 
L__can_set_baud1156:
;lib_can.h,438 :: 		BRGCON3.SEG2PH1 = pre.B1;
0x3B1E	0xB304      	BTFSC       can_set_baud_pre_L0, 1, 1
0x3B20	0xD002      	BRA         L__can_set_baud1157
0x3B22	0x9272      	BCF         BRGCON3, 1 
0x3B24	0xD001      	BRA         L__can_set_baud1158
L__can_set_baud1157:
0x3B26	0x8272      	BSF         BRGCON3, 1 
L__can_set_baud1158:
;lib_can.h,439 :: 		BRGCON3.SEG2PH2 = pre.B2;
0x3B28	0xB504      	BTFSC       can_set_baud_pre_L0, 2, 1
0x3B2A	0xD002      	BRA         L__can_set_baud1159
0x3B2C	0x9472      	BCF         BRGCON3, 2 
0x3B2E	0xD001      	BRA         L__can_set_baud1160
L__can_set_baud1159:
0x3B30	0x8472      	BSF         BRGCON3, 2 
L__can_set_baud1160:
;lib_can.h,441 :: 		pre = Tqp - 2*(pre+1);  //Obtener el resto de Tq
0x3B32	0x5000      	MOVF        R0, 0 
0x3B34	0x0F01      	ADDLW       1
0x3B36	0x6E02      	MOVWF       R2 
0x3B38	0xF000C002  	MOVFF       R2, R0
0x3B3C	0x3600      	RLCF        R0, 1 
0x3B3E	0x9000      	BCF         R0, 0 
0x3B40	0x5000      	MOVF        R0, 0 
0x3B42	0x5D03      	SUBWF       can_set_baud_Tqp_L0, 0, 1
0x3B44	0x6F04      	MOVWF       can_set_baud_pre_L0, 1
;lib_can.h,442 :: 		pre--;                  //Ajustar de 0-7
0x3B46	0x0704      	DECF        can_set_baud_pre_L0, 1, 1
;lib_can.h,443 :: 		BRGCON2.PRSEG0 = pre.B0;
0x3B48	0xB104      	BTFSC       can_set_baud_pre_L0, 0, 1
0x3B4A	0xD002      	BRA         L__can_set_baud1161
0x3B4C	0x9071      	BCF         BRGCON2, 0 
0x3B4E	0xD001      	BRA         L__can_set_baud1162
L__can_set_baud1161:
0x3B50	0x8071      	BSF         BRGCON2, 0 
L__can_set_baud1162:
;lib_can.h,444 :: 		BRGCON2.PRSEG1 = pre.B1;
0x3B52	0xB304      	BTFSC       can_set_baud_pre_L0, 1, 1
0x3B54	0xD002      	BRA         L__can_set_baud1163
0x3B56	0x9271      	BCF         BRGCON2, 1 
0x3B58	0xD001      	BRA         L__can_set_baud1164
L__can_set_baud1163:
0x3B5A	0x8271      	BSF         BRGCON2, 1 
L__can_set_baud1164:
;lib_can.h,445 :: 		BRGCON2.PRSEG2 = pre.B2;
0x3B5C	0xB504      	BTFSC       can_set_baud_pre_L0, 2, 1
0x3B5E	0xD002      	BRA         L__can_set_baud1165
0x3B60	0x9471      	BCF         BRGCON2, 2 
0x3B62	0xD001      	BRA         L__can_set_baud1166
L__can_set_baud1165:
0x3B64	0x8471      	BSF         BRGCON2, 2 
L__can_set_baud1166:
;lib_can.h,446 :: 		break;
0x3B66	0xD003      	BRA         L_can_set_baud213
;lib_can.h,447 :: 		}
L_can_set_baud215:
;lib_can.h,424 :: 		for(pre = 16; pre >= 2; pre -= 2){
0x3B68	0x0E02      	MOVLW       2
0x3B6A	0x5F04      	SUBWF       can_set_baud_pre_L0, 1, 1
;lib_can.h,448 :: 		}
0x3B6C	0xD7B1      	BRA         L_can_set_baud212
L_can_set_baud213:
;lib_can.h,449 :: 		}
L_end_can_set_baud:
0x3B6E	0x0012      	RETURN      0
; end of _can_set_baud
_impresoraTerm_writeDinamicText:
;impresora_termica.h,159 :: 		void impresoraTerm_writeDinamicText(char *texto, const int *address){
;impresora_termica.h,160 :: 		char ADRR_ERROR[] = "#ERR_ADDR#";  //Optimizar esta variable
0x3B70	0x0E23      	MOVLW       35
0x3B72	0x0105      	MOVLB       5
0x3B74	0x6F0C      	MOVWF       impresoraTerm_writeDinamicText_ADRR_ERROR_L0, 1
0x3B76	0x0E45      	MOVLW       69
0x3B78	0x6F0D      	MOVWF       impresoraTerm_writeDinamicText_ADRR_ERROR_L0+1, 1
0x3B7A	0x0E52      	MOVLW       82
0x3B7C	0x6F0E      	MOVWF       impresoraTerm_writeDinamicText_ADRR_ERROR_L0+2, 1
0x3B7E	0x0E52      	MOVLW       82
0x3B80	0x6F0F      	MOVWF       impresoraTerm_writeDinamicText_ADRR_ERROR_L0+3, 1
0x3B82	0x0E5F      	MOVLW       95
0x3B84	0x6F10      	MOVWF       impresoraTerm_writeDinamicText_ADRR_ERROR_L0+4, 1
0x3B86	0x0E41      	MOVLW       65
0x3B88	0x6F11      	MOVWF       impresoraTerm_writeDinamicText_ADRR_ERROR_L0+5, 1
0x3B8A	0x0E44      	MOVLW       68
0x3B8C	0x6F12      	MOVWF       impresoraTerm_writeDinamicText_ADRR_ERROR_L0+6, 1
0x3B8E	0x0E44      	MOVLW       68
0x3B90	0x6F13      	MOVWF       impresoraTerm_writeDinamicText_ADRR_ERROR_L0+7, 1
0x3B92	0x0E52      	MOVLW       82
0x3B94	0x6F14      	MOVWF       impresoraTerm_writeDinamicText_ADRR_ERROR_L0+8, 1
0x3B96	0x0E23      	MOVLW       35
0x3B98	0x6F15      	MOVWF       impresoraTerm_writeDinamicText_ADRR_ERROR_L0+9, 1
0x3B9A	0x6B16      	CLRF        impresoraTerm_writeDinamicText_ADRR_ERROR_L0+10, 1
0x3B9C	0x6B17      	CLRF        impresoraTerm_writeDinamicText_cont_L0, 1
;impresora_termica.h,166 :: 		while(texto[cont]){
L_impresoraTerm_writeDinamicText366:
0x3B9E	0x5117      	MOVF        impresoraTerm_writeDinamicText_cont_L0, 0, 1
0x3BA0	0x2501      	ADDWF       FARG_impresoraTerm_writeDinamicText_texto, 0, 1
0x3BA2	0x6EE9      	MOVWF       FSR0L 
0x3BA4	0x0E00      	MOVLW       0
0x3BA6	0x2102      	ADDWFC      FARG_impresoraTerm_writeDinamicText_texto+1, 0, 1
0x3BA8	0x6EEA      	MOVWF       FSR0H 
0x3BAA	0x52EE      	MOVF        POSTINC0, 1 
0x3BAC	0xB4D8      	BTFSC       STATUS, 2 
0x3BAE	0xD196      	BRA         L_impresoraTerm_writeDinamicText367
;impresora_termica.h,167 :: 		if(texto[cont] == CMD_IMPRESORA){  //ENVIA N CARACTERES DE COMANDOS HACIA LA IMPRESORA
0x3BB0	0x5117      	MOVF        impresoraTerm_writeDinamicText_cont_L0, 0, 1
0x3BB2	0x2501      	ADDWF       FARG_impresoraTerm_writeDinamicText_texto, 0, 1
0x3BB4	0x6EE9      	MOVWF       FSR0L 
0x3BB6	0x0E00      	MOVLW       0
0x3BB8	0x2102      	ADDWFC      FARG_impresoraTerm_writeDinamicText_texto+1, 0, 1
0x3BBA	0x6EEA      	MOVWF       FSR0H 
0x3BBC	0x50EE      	MOVF        POSTINC0, 0 
0x3BBE	0x0A02      	XORLW       2
0x3BC0	0xA4D8      	BTFSS       STATUS, 2 
0x3BC2	0xD078      	BRA         L_impresoraTerm_writeDinamicText368
;impresora_termica.h,169 :: 		cont++;
0x3BC4	0x2B17      	INCF        impresoraTerm_writeDinamicText_cont_L0, 1, 1
;impresora_termica.h,170 :: 		for(cont2 = 0; cont2 < 2 && texto[cont]; cont2++)
0x3BC6	0x6B06      	CLRF        impresoraTerm_writeDinamicText_cont2_L0, 1
L_impresoraTerm_writeDinamicText369:
0x3BC8	0x0E02      	MOVLW       2
0x3BCA	0x5D06      	SUBWF       impresoraTerm_writeDinamicText_cont2_L0, 0, 1
0x3BCC	0xE21B      	BC          L_impresoraTerm_writeDinamicText370
0x3BCE	0x5117      	MOVF        impresoraTerm_writeDinamicText_cont_L0, 0, 1
0x3BD0	0x2501      	ADDWF       FARG_impresoraTerm_writeDinamicText_texto, 0, 1
0x3BD2	0x6EE9      	MOVWF       FSR0L 
0x3BD4	0x0E00      	MOVLW       0
0x3BD6	0x2102      	ADDWFC      FARG_impresoraTerm_writeDinamicText_texto+1, 0, 1
0x3BD8	0x6EEA      	MOVWF       FSR0H 
0x3BDA	0x52EE      	MOVF        POSTINC0, 1 
0x3BDC	0xE013      	BZ          L_impresoraTerm_writeDinamicText370
L__impresoraTerm_writeDinamicText982:
;impresora_termica.h,171 :: 		buffer[cont2] = texto[cont++];
0x3BDE	0x0E57      	MOVLW       Expendedora_buffer
0x3BE0	0x6EE1      	MOVWF       FSR1L 
0x3BE2	0x0E04      	MOVLW       hi_addr(Expendedora_buffer)
0x3BE4	0x6EE2      	MOVWF       FSR1H 
0x3BE6	0x5106      	MOVF        impresoraTerm_writeDinamicText_cont2_L0, 0, 1
0x3BE8	0x26E1      	ADDWF       FSR1L, 1 
0x3BEA	0xB0D8      	BTFSC       STATUS, 0 
0x3BEC	0x2AE2      	INCF        FSR1H, 1 
0x3BEE	0x5117      	MOVF        impresoraTerm_writeDinamicText_cont_L0, 0, 1
0x3BF0	0x2501      	ADDWF       FARG_impresoraTerm_writeDinamicText_texto, 0, 1
0x3BF2	0x6EE9      	MOVWF       FSR0L 
0x3BF4	0x0E00      	MOVLW       0
0x3BF6	0x2102      	ADDWFC      FARG_impresoraTerm_writeDinamicText_texto+1, 0, 1
0x3BF8	0x6EEA      	MOVWF       FSR0H 
0x3BFA	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x3BFE	0x2B17      	INCF        impresoraTerm_writeDinamicText_cont_L0, 1, 1
;impresora_termica.h,170 :: 		for(cont2 = 0; cont2 < 2 && texto[cont]; cont2++)
0x3C00	0x2B06      	INCF        impresoraTerm_writeDinamicText_cont2_L0, 1, 1
;impresora_termica.h,171 :: 		buffer[cont2] = texto[cont++];
0x3C02	0xD7E2      	BRA         L_impresoraTerm_writeDinamicText369
L_impresoraTerm_writeDinamicText370:
;impresora_termica.h,172 :: 		buffer[cont2] = 0; //Fin de cadena
0x3C04	0x0E57      	MOVLW       Expendedora_buffer
0x3C06	0x6EE1      	MOVWF       FSR1L 
0x3C08	0x0E04      	MOVLW       hi_addr(Expendedora_buffer)
0x3C0A	0x6EE2      	MOVWF       FSR1H 
0x3C0C	0x5106      	MOVF        impresoraTerm_writeDinamicText_cont2_L0, 0, 1
0x3C0E	0x26E1      	ADDWF       FSR1L, 1 
0x3C10	0xB0D8      	BTFSC       STATUS, 0 
0x3C12	0x2AE2      	INCF        FSR1H, 1 
0x3C14	0x6AE6      	CLRF        POSTINC1 
;impresora_termica.h,175 :: 		comandos = atoi(buffer);
0x3C16	0x0E57      	MOVLW       Expendedora_buffer
0x3C18	0x6F23      	MOVWF       FARG_atoi_s, 1
0x3C1A	0x0E04      	MOVLW       hi_addr(Expendedora_buffer)
0x3C1C	0x6F24      	MOVWF       FARG_atoi_s+1, 1
0x3C1E	0xF00BEC63  	CALL        _atoi, 0
0x3C22	0xF507C000  	MOVFF       R0, impresoraTerm_writeDinamicText_comandos_L0
;impresora_termica.h,176 :: 		while(comandos--){
L_impresoraTerm_writeDinamicText374:
0x3C26	0x0105      	MOVLB       5
0x3C28	0xF000C507  	MOVFF       impresoraTerm_writeDinamicText_comandos_L0, R0
0x3C2C	0x0707      	DECF        impresoraTerm_writeDinamicText_comandos_L0, 1, 1
0x3C2E	0x5200      	MOVF        R0, 1 
0x3C30	0xE035      	BZ          L_impresoraTerm_writeDinamicText375
;impresora_termica.h,178 :: 		for(cont2 = 0; cont2 < 2 && texto[cont]; cont2++)
0x3C32	0x6B06      	CLRF        impresoraTerm_writeDinamicText_cont2_L0, 1
L_impresoraTerm_writeDinamicText376:
0x3C34	0x0E02      	MOVLW       2
0x3C36	0x5D06      	SUBWF       impresoraTerm_writeDinamicText_cont2_L0, 0, 1
0x3C38	0xE21B      	BC          L_impresoraTerm_writeDinamicText377
0x3C3A	0x5117      	MOVF        impresoraTerm_writeDinamicText_cont_L0, 0, 1
0x3C3C	0x2501      	ADDWF       FARG_impresoraTerm_writeDinamicText_texto, 0, 1
0x3C3E	0x6EE9      	MOVWF       FSR0L 
0x3C40	0x0E00      	MOVLW       0
0x3C42	0x2102      	ADDWFC      FARG_impresoraTerm_writeDinamicText_texto+1, 0, 1
0x3C44	0x6EEA      	MOVWF       FSR0H 
0x3C46	0x52EE      	MOVF        POSTINC0, 1 
0x3C48	0xE013      	BZ          L_impresoraTerm_writeDinamicText377
L__impresoraTerm_writeDinamicText981:
;impresora_termica.h,179 :: 		buffer[cont2] = texto[cont++];
0x3C4A	0x0E57      	MOVLW       Expendedora_buffer
0x3C4C	0x6EE1      	MOVWF       FSR1L 
0x3C4E	0x0E04      	MOVLW       hi_addr(Expendedora_buffer)
0x3C50	0x6EE2      	MOVWF       FSR1H 
0x3C52	0x5106      	MOVF        impresoraTerm_writeDinamicText_cont2_L0, 0, 1
0x3C54	0x26E1      	ADDWF       FSR1L, 1 
0x3C56	0xB0D8      	BTFSC       STATUS, 0 
0x3C58	0x2AE2      	INCF        FSR1H, 1 
0x3C5A	0x5117      	MOVF        impresoraTerm_writeDinamicText_cont_L0, 0, 1
0x3C5C	0x2501      	ADDWF       FARG_impresoraTerm_writeDinamicText_texto, 0, 1
0x3C5E	0x6EE9      	MOVWF       FSR0L 
0x3C60	0x0E00      	MOVLW       0
0x3C62	0x2102      	ADDWFC      FARG_impresoraTerm_writeDinamicText_texto+1, 0, 1
0x3C64	0x6EEA      	MOVWF       FSR0H 
0x3C66	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x3C6A	0x2B17      	INCF        impresoraTerm_writeDinamicText_cont_L0, 1, 1
;impresora_termica.h,178 :: 		for(cont2 = 0; cont2 < 2 && texto[cont]; cont2++)
0x3C6C	0x2B06      	INCF        impresoraTerm_writeDinamicText_cont2_L0, 1, 1
;impresora_termica.h,179 :: 		buffer[cont2] = texto[cont++];
0x3C6E	0xD7E2      	BRA         L_impresoraTerm_writeDinamicText376
L_impresoraTerm_writeDinamicText377:
;impresora_termica.h,180 :: 		buffer[cont2] = 0; //Fin de cadena
0x3C70	0x0E57      	MOVLW       Expendedora_buffer
0x3C72	0x6EE1      	MOVWF       FSR1L 
0x3C74	0x0E04      	MOVLW       hi_addr(Expendedora_buffer)
0x3C76	0x6EE2      	MOVWF       FSR1H 
0x3C78	0x5106      	MOVF        impresoraTerm_writeDinamicText_cont2_L0, 0, 1
0x3C7A	0x26E1      	ADDWF       FSR1L, 1 
0x3C7C	0xB0D8      	BTFSC       STATUS, 0 
0x3C7E	0x2AE2      	INCF        FSR1H, 1 
0x3C80	0x6AE6      	CLRF        POSTINC1 
;impresora_termica.h,181 :: 		cont2 = xtoi(buffer);
0x3C82	0x0E57      	MOVLW       Expendedora_buffer
0x3C84	0x6F23      	MOVWF       FARG_xtoi_s, 1
0x3C86	0x0E04      	MOVLW       hi_addr(Expendedora_buffer)
0x3C88	0x6F24      	MOVWF       FARG_xtoi_s+1, 1
0x3C8A	0xF00CECE7  	CALL        _xtoi, 0
0x3C8E	0xF506C000  	MOVFF       R0, impresoraTerm_writeDinamicText_cont2_L0
;impresora_termica.h,182 :: 		usart_write(cont2);
0x3C92	0xF523C000  	MOVFF       R0, FARG_usart_write_caracter
0x3C96	0xF00FECF6  	CALL        _usart_write, 0
;impresora_termica.h,183 :: 		}
0x3C9A	0xD7C5      	BRA         L_impresoraTerm_writeDinamicText374
L_impresoraTerm_writeDinamicText375:
;impresora_termica.h,185 :: 		if(texto[cont] == '\n')
0x3C9C	0x0105      	MOVLB       5
0x3C9E	0x5117      	MOVF        impresoraTerm_writeDinamicText_cont_L0, 0, 1
0x3CA0	0x2501      	ADDWF       FARG_impresoraTerm_writeDinamicText_texto, 0, 1
0x3CA2	0x6EE9      	MOVWF       FSR0L 
0x3CA4	0x0E00      	MOVLW       0
0x3CA6	0x2102      	ADDWFC      FARG_impresoraTerm_writeDinamicText_texto+1, 0, 1
0x3CA8	0x6EEA      	MOVWF       FSR0H 
0x3CAA	0x50EE      	MOVF        POSTINC0, 0 
0x3CAC	0x0A0A      	XORLW       10
0x3CAE	0xB4D8      	BTFSC       STATUS, 2 
;impresora_termica.h,186 :: 		cont++; //Por el final de cadena
0x3CB0	0x2B17      	INCF        impresoraTerm_writeDinamicText_cont_L0, 1, 1
L_impresoraTerm_writeDinamicText381:
;impresora_termica.h,187 :: 		}else if(texto[cont] == CMD_CODIGO_BARRAS || texto[cont] == CMD_TEXT_DINAMIC){  //Comando para escribir variables dinamicas
0x3CB2	0xD113      	BRA         L_impresoraTerm_writeDinamicText382
L_impresoraTerm_writeDinamicText368:
0x3CB4	0x5117      	MOVF        impresoraTerm_writeDinamicText_cont_L0, 0, 1
0x3CB6	0x2501      	ADDWF       FARG_impresoraTerm_writeDinamicText_texto, 0, 1
0x3CB8	0x6EE9      	MOVWF       FSR0L 
0x3CBA	0x0E00      	MOVLW       0
0x3CBC	0x2102      	ADDWFC      FARG_impresoraTerm_writeDinamicText_texto+1, 0, 1
0x3CBE	0x6EEA      	MOVWF       FSR0H 
0x3CC0	0x50EE      	MOVF        POSTINC0, 0 
0x3CC2	0x0A03      	XORLW       3
0x3CC4	0xE00A      	BZ          L__impresoraTerm_writeDinamicText980
0x3CC6	0x5117      	MOVF        impresoraTerm_writeDinamicText_cont_L0, 0, 1
0x3CC8	0x2501      	ADDWF       FARG_impresoraTerm_writeDinamicText_texto, 0, 1
0x3CCA	0x6EE9      	MOVWF       FSR0L 
0x3CCC	0x0E00      	MOVLW       0
0x3CCE	0x2102      	ADDWFC      FARG_impresoraTerm_writeDinamicText_texto+1, 0, 1
0x3CD0	0x6EEA      	MOVWF       FSR0H 
0x3CD2	0x50EE      	MOVF        POSTINC0, 0 
0x3CD4	0x0A05      	XORLW       5
0x3CD6	0xE001      	BZ          L__impresoraTerm_writeDinamicText980
0x3CD8	0xD0AB      	BRA         L_impresoraTerm_writeDinamicText385
L__impresoraTerm_writeDinamicText980:
;impresora_termica.h,189 :: 		comandos = texto[cont];
0x3CDA	0x5117      	MOVF        impresoraTerm_writeDinamicText_cont_L0, 0, 1
0x3CDC	0x2501      	ADDWF       FARG_impresoraTerm_writeDinamicText_texto, 0, 1
0x3CDE	0x6EE9      	MOVWF       FSR0L 
0x3CE0	0x0E00      	MOVLW       0
0x3CE2	0x2102      	ADDWFC      FARG_impresoraTerm_writeDinamicText_texto+1, 0, 1
0x3CE4	0x6EEA      	MOVWF       FSR0H 
0x3CE6	0xF507CFEE  	MOVFF       POSTINC0, impresoraTerm_writeDinamicText_comandos_L0
;impresora_termica.h,192 :: 		ticketPointer = ADRR_ERROR;
0x3CEA	0x0E0C      	MOVLW       impresoraTerm_writeDinamicText_ADRR_ERROR_L0
0x3CEC	0x6F08      	MOVWF       impresoraTerm_writeDinamicText_ticketPointer_L0, 1
0x3CEE	0x0E05      	MOVLW       hi_addr(impresoraTerm_writeDinamicText_ADRR_ERROR_L0)
0x3CF0	0x6F09      	MOVWF       impresoraTerm_writeDinamicText_ticketPointer_L0+1, 1
;impresora_termica.h,194 :: 		cont++;
0x3CF2	0x2B17      	INCF        impresoraTerm_writeDinamicText_cont_L0, 1, 1
;impresora_termica.h,195 :: 		for(cont2 = 0; cont2 < 4 && texto[cont]; cont2++)
0x3CF4	0x6B06      	CLRF        impresoraTerm_writeDinamicText_cont2_L0, 1
L_impresoraTerm_writeDinamicText386:
0x3CF6	0x0E04      	MOVLW       4
0x3CF8	0x5D06      	SUBWF       impresoraTerm_writeDinamicText_cont2_L0, 0, 1
0x3CFA	0xE21B      	BC          L_impresoraTerm_writeDinamicText387
0x3CFC	0x5117      	MOVF        impresoraTerm_writeDinamicText_cont_L0, 0, 1
0x3CFE	0x2501      	ADDWF       FARG_impresoraTerm_writeDinamicText_texto, 0, 1
0x3D00	0x6EE9      	MOVWF       FSR0L 
0x3D02	0x0E00      	MOVLW       0
0x3D04	0x2102      	ADDWFC      FARG_impresoraTerm_writeDinamicText_texto+1, 0, 1
0x3D06	0x6EEA      	MOVWF       FSR0H 
0x3D08	0x52EE      	MOVF        POSTINC0, 1 
0x3D0A	0xE013      	BZ          L_impresoraTerm_writeDinamicText387
L__impresoraTerm_writeDinamicText979:
;impresora_termica.h,196 :: 		buffer[cont2] = texto[cont++];
0x3D0C	0x0E57      	MOVLW       Expendedora_buffer
0x3D0E	0x6EE1      	MOVWF       FSR1L 
0x3D10	0x0E04      	MOVLW       hi_addr(Expendedora_buffer)
0x3D12	0x6EE2      	MOVWF       FSR1H 
0x3D14	0x5106      	MOVF        impresoraTerm_writeDinamicText_cont2_L0, 0, 1
0x3D16	0x26E1      	ADDWF       FSR1L, 1 
0x3D18	0xB0D8      	BTFSC       STATUS, 0 
0x3D1A	0x2AE2      	INCF        FSR1H, 1 
0x3D1C	0x5117      	MOVF        impresoraTerm_writeDinamicText_cont_L0, 0, 1
0x3D1E	0x2501      	ADDWF       FARG_impresoraTerm_writeDinamicText_texto, 0, 1
0x3D20	0x6EE9      	MOVWF       FSR0L 
0x3D22	0x0E00      	MOVLW       0
0x3D24	0x2102      	ADDWFC      FARG_impresoraTerm_writeDinamicText_texto+1, 0, 1
0x3D26	0x6EEA      	MOVWF       FSR0H 
0x3D28	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x3D2C	0x2B17      	INCF        impresoraTerm_writeDinamicText_cont_L0, 1, 1
;impresora_termica.h,195 :: 		for(cont2 = 0; cont2 < 4 && texto[cont]; cont2++)
0x3D2E	0x2B06      	INCF        impresoraTerm_writeDinamicText_cont2_L0, 1, 1
;impresora_termica.h,196 :: 		buffer[cont2] = texto[cont++];
0x3D30	0xD7E2      	BRA         L_impresoraTerm_writeDinamicText386
L_impresoraTerm_writeDinamicText387:
;impresora_termica.h,197 :: 		buffer[cont2] = 0; //Fin de cadena
0x3D32	0x0E57      	MOVLW       Expendedora_buffer
0x3D34	0x6EE1      	MOVWF       FSR1L 
0x3D36	0x0E04      	MOVLW       hi_addr(Expendedora_buffer)
0x3D38	0x6EE2      	MOVWF       FSR1H 
0x3D3A	0x5106      	MOVF        impresoraTerm_writeDinamicText_cont2_L0, 0, 1
0x3D3C	0x26E1      	ADDWF       FSR1L, 1 
0x3D3E	0xB0D8      	BTFSC       STATUS, 0 
0x3D40	0x2AE2      	INCF        FSR1H, 1 
0x3D42	0x6AE6      	CLRF        POSTINC1 
;impresora_termica.h,199 :: 		dir = xtoi(buffer);
0x3D44	0x0E57      	MOVLW       Expendedora_buffer
0x3D46	0x6F23      	MOVWF       FARG_xtoi_s, 1
0x3D48	0x0E04      	MOVLW       hi_addr(Expendedora_buffer)
0x3D4A	0x6F24      	MOVWF       FARG_xtoi_s+1, 1
0x3D4C	0xF00CECE7  	CALL        _xtoi, 0
0x3D50	0xF50AC000  	MOVFF       R0, impresoraTerm_writeDinamicText_dir_L0
0x3D54	0xF50BC001  	MOVFF       R1, impresoraTerm_writeDinamicText_dir_L0+1
;impresora_termica.h,202 :: 		cont2 = 0;
0x3D58	0x6B06      	CLRF        impresoraTerm_writeDinamicText_cont2_L0, 1
;impresora_termica.h,203 :: 		while(address[cont2]){
L_impresoraTerm_writeDinamicText391:
0x3D5A	0xF000C506  	MOVFF       impresoraTerm_writeDinamicText_cont2_L0, R0
0x3D5E	0x0E00      	MOVLW       0
0x3D60	0x6E01      	MOVWF       R1 
0x3D62	0x6E02      	MOVWF       R2 
0x3D64	0x6E03      	MOVWF       R3 
0x3D66	0x3600      	RLCF        R0, 1 
0x3D68	0x9000      	BCF         R0, 0 
0x3D6A	0x3601      	RLCF        R1, 1 
0x3D6C	0x3602      	RLCF        R2, 1 
0x3D6E	0x3603      	RLCF        R3, 1 
0x3D70	0x5103      	MOVF        FARG_impresoraTerm_writeDinamicText_address, 0, 1
0x3D72	0x2400      	ADDWF       R0, 0 
0x3D74	0x6EF6      	MOVWF       4086 
0x3D76	0x5104      	MOVF        FARG_impresoraTerm_writeDinamicText_address+1, 0, 1
0x3D78	0x2001      	ADDWFC      R1, 0 
0x3D7A	0x6EF7      	MOVWF       TBLPTRH 
0x3D7C	0x5105      	MOVF        FARG_impresoraTerm_writeDinamicText_address+2, 0, 1
0x3D7E	0x2002      	ADDWFC      R2, 0 
0x3D80	0x6EF8      	MOVWF       TBLPTRU 
0x3D82	0x0009      	TBLRD*+
0x3D84	0xF000CFF5  	MOVFF       TABLAT, R0
0x3D88	0x0009      	TBLRD*+
0x3D8A	0xF001CFF5  	MOVFF       TABLAT, R1
0x3D8E	0x5000      	MOVF        R0, 0 
0x3D90	0x1001      	IORWF       R1, 0 
0x3D92	0xE029      	BZ          L_impresoraTerm_writeDinamicText392
;impresora_termica.h,204 :: 		if(dir == address[cont2++]){
0x3D94	0xF005C506  	MOVFF       impresoraTerm_writeDinamicText_cont2_L0, R5
0x3D98	0x2B06      	INCF        impresoraTerm_writeDinamicText_cont2_L0, 1, 1
0x3D9A	0xF000C005  	MOVFF       R5, R0
0x3D9E	0x0E00      	MOVLW       0
0x3DA0	0x6E01      	MOVWF       R1 
0x3DA2	0x6E02      	MOVWF       R2 
0x3DA4	0x6E03      	MOVWF       R3 
0x3DA6	0x3600      	RLCF        R0, 1 
0x3DA8	0x9000      	BCF         R0, 0 
0x3DAA	0x3601      	RLCF        R1, 1 
0x3DAC	0x3602      	RLCF        R2, 1 
0x3DAE	0x3603      	RLCF        R3, 1 
0x3DB0	0x5103      	MOVF        FARG_impresoraTerm_writeDinamicText_address, 0, 1
0x3DB2	0x2400      	ADDWF       R0, 0 
0x3DB4	0x6EF6      	MOVWF       4086 
0x3DB6	0x5104      	MOVF        FARG_impresoraTerm_writeDinamicText_address+1, 0, 1
0x3DB8	0x2001      	ADDWFC      R1, 0 
0x3DBA	0x6EF7      	MOVWF       TBLPTRH 
0x3DBC	0x5105      	MOVF        FARG_impresoraTerm_writeDinamicText_address+2, 0, 1
0x3DBE	0x2002      	ADDWFC      R2, 0 
0x3DC0	0x6EF8      	MOVWF       TBLPTRU 
0x3DC2	0x0009      	TBLRD*+
0x3DC4	0xF001CFF5  	MOVFF       TABLAT, R1
0x3DC8	0x0009      	TBLRD*+
0x3DCA	0xF002CFF5  	MOVFF       TABLAT, R2
0x3DCE	0x510B      	MOVF        impresoraTerm_writeDinamicText_dir_L0+1, 0, 1
0x3DD0	0x1802      	XORWF       R2, 0 
0x3DD2	0xE102      	BNZ         L__impresoraTerm_writeDinamicText1249
0x3DD4	0x5001      	MOVF        R1, 0 
0x3DD6	0x190A      	XORWF       impresoraTerm_writeDinamicText_dir_L0, 0, 1
L__impresoraTerm_writeDinamicText1249:
0x3DD8	0xE105      	BNZ         L_impresoraTerm_writeDinamicText393
;impresora_termica.h,206 :: 		getByte(ticketPointer, 0) = getByte(dir, 0);
0x3DDA	0xF508C50A  	MOVFF       impresoraTerm_writeDinamicText_dir_L0, impresoraTerm_writeDinamicText_ticketPointer_L0
;impresora_termica.h,207 :: 		getByte(ticketPointer, 1) = getByte(dir, 1);
0x3DDE	0xF509C50B  	MOVFF       impresoraTerm_writeDinamicText_dir_L0+1, impresoraTerm_writeDinamicText_ticketPointer_L0+1
;impresora_termica.h,208 :: 		break;
0x3DE2	0xD001      	BRA         L_impresoraTerm_writeDinamicText392
;impresora_termica.h,209 :: 		}
L_impresoraTerm_writeDinamicText393:
;impresora_termica.h,210 :: 		}
0x3DE4	0xD7BA      	BRA         L_impresoraTerm_writeDinamicText391
L_impresoraTerm_writeDinamicText392:
;impresora_termica.h,213 :: 		if(comandos == CMD_CODIGO_BARRAS)
0x3DE6	0x5107      	MOVF        impresoraTerm_writeDinamicText_comandos_L0, 0, 1
0x3DE8	0x0A03      	XORLW       3
0x3DEA	0xE10A      	BNZ         L_impresoraTerm_writeDinamicText394
;impresora_termica.h,214 :: 		usart_write(strlen(ticketPointer));
0x3DEC	0xF531C508  	MOVFF       impresoraTerm_writeDinamicText_ticketPointer_L0, FARG_strlen_s
0x3DF0	0xF532C509  	MOVFF       impresoraTerm_writeDinamicText_ticketPointer_L0+1, FARG_strlen_s+1
0x3DF4	0xF00BEC16  	CALL        _strlen, 0
0x3DF8	0xF523C000  	MOVFF       R0, FARG_usart_write_caracter
0x3DFC	0xF00FECF6  	CALL        _usart_write, 0
L_impresoraTerm_writeDinamicText394:
;impresora_termica.h,217 :: 		cont2 = 0;
0x3E00	0x0105      	MOVLB       5
0x3E02	0x6B06      	CLRF        impresoraTerm_writeDinamicText_cont2_L0, 1
;impresora_termica.h,218 :: 		while(ticketPointer[cont2])
L_impresoraTerm_writeDinamicText395:
0x3E04	0x5106      	MOVF        impresoraTerm_writeDinamicText_cont2_L0, 0, 1
0x3E06	0x2508      	ADDWF       impresoraTerm_writeDinamicText_ticketPointer_L0, 0, 1
0x3E08	0x6EE9      	MOVWF       FSR0L 
0x3E0A	0x0E00      	MOVLW       0
0x3E0C	0x2109      	ADDWFC      impresoraTerm_writeDinamicText_ticketPointer_L0+1, 0, 1
0x3E0E	0x6EEA      	MOVWF       FSR0H 
0x3E10	0x52EE      	MOVF        POSTINC0, 1 
0x3E12	0xE00D      	BZ          L_impresoraTerm_writeDinamicText396
;impresora_termica.h,219 :: 		usart_write(ticketPointer[cont2++]);
0x3E14	0x5106      	MOVF        impresoraTerm_writeDinamicText_cont2_L0, 0, 1
0x3E16	0x2508      	ADDWF       impresoraTerm_writeDinamicText_ticketPointer_L0, 0, 1
0x3E18	0x6EE9      	MOVWF       FSR0L 
0x3E1A	0x0E00      	MOVLW       0
0x3E1C	0x2109      	ADDWFC      impresoraTerm_writeDinamicText_ticketPointer_L0+1, 0, 1
0x3E1E	0x6EEA      	MOVWF       FSR0H 
0x3E20	0xF523CFEE  	MOVFF       POSTINC0, FARG_usart_write_caracter
0x3E24	0xF00FECF6  	CALL        _usart_write, 0
0x3E28	0x0105      	MOVLB       5
0x3E2A	0x2B06      	INCF        impresoraTerm_writeDinamicText_cont2_L0, 1, 1
0x3E2C	0xD7EB      	BRA         L_impresoraTerm_writeDinamicText395
L_impresoraTerm_writeDinamicText396:
;impresora_termica.h,220 :: 		}else if(texto[cont] == CMD_WRITE_BYTE){  //Modo beta
0x3E2E	0xD055      	BRA         L_impresoraTerm_writeDinamicText397
L_impresoraTerm_writeDinamicText385:
0x3E30	0x5117      	MOVF        impresoraTerm_writeDinamicText_cont_L0, 0, 1
0x3E32	0x2501      	ADDWF       FARG_impresoraTerm_writeDinamicText_texto, 0, 1
0x3E34	0x6EE9      	MOVWF       FSR0L 
0x3E36	0x0E00      	MOVLW       0
0x3E38	0x2102      	ADDWFC      FARG_impresoraTerm_writeDinamicText_texto+1, 0, 1
0x3E3A	0x6EEA      	MOVWF       FSR0H 
0x3E3C	0x50EE      	MOVF        POSTINC0, 0 
0x3E3E	0x0A04      	XORLW       4
0x3E40	0xE140      	BNZ         L_impresoraTerm_writeDinamicText398
;impresora_termica.h,222 :: 		cont++;
0x3E42	0x2B17      	INCF        impresoraTerm_writeDinamicText_cont_L0, 1, 1
;impresora_termica.h,223 :: 		for(cont2 = 0; cont2 < 2 && texto[cont]; cont2++)
0x3E44	0x6B06      	CLRF        impresoraTerm_writeDinamicText_cont2_L0, 1
L_impresoraTerm_writeDinamicText399:
0x3E46	0x0E02      	MOVLW       2
0x3E48	0x5D06      	SUBWF       impresoraTerm_writeDinamicText_cont2_L0, 0, 1
0x3E4A	0xE21B      	BC          L_impresoraTerm_writeDinamicText400
0x3E4C	0x5117      	MOVF        impresoraTerm_writeDinamicText_cont_L0, 0, 1
0x3E4E	0x2501      	ADDWF       FARG_impresoraTerm_writeDinamicText_texto, 0, 1
0x3E50	0x6EE9      	MOVWF       FSR0L 
0x3E52	0x0E00      	MOVLW       0
0x3E54	0x2102      	ADDWFC      FARG_impresoraTerm_writeDinamicText_texto+1, 0, 1
0x3E56	0x6EEA      	MOVWF       FSR0H 
0x3E58	0x52EE      	MOVF        POSTINC0, 1 
0x3E5A	0xE013      	BZ          L_impresoraTerm_writeDinamicText400
L__impresoraTerm_writeDinamicText978:
;impresora_termica.h,224 :: 		buffer[cont2] = texto[cont++];
0x3E5C	0x0E57      	MOVLW       Expendedora_buffer
0x3E5E	0x6EE1      	MOVWF       FSR1L 
0x3E60	0x0E04      	MOVLW       hi_addr(Expendedora_buffer)
0x3E62	0x6EE2      	MOVWF       FSR1H 
0x3E64	0x5106      	MOVF        impresoraTerm_writeDinamicText_cont2_L0, 0, 1
0x3E66	0x26E1      	ADDWF       FSR1L, 1 
0x3E68	0xB0D8      	BTFSC       STATUS, 0 
0x3E6A	0x2AE2      	INCF        FSR1H, 1 
0x3E6C	0x5117      	MOVF        impresoraTerm_writeDinamicText_cont_L0, 0, 1
0x3E6E	0x2501      	ADDWF       FARG_impresoraTerm_writeDinamicText_texto, 0, 1
0x3E70	0x6EE9      	MOVWF       FSR0L 
0x3E72	0x0E00      	MOVLW       0
0x3E74	0x2102      	ADDWFC      FARG_impresoraTerm_writeDinamicText_texto+1, 0, 1
0x3E76	0x6EEA      	MOVWF       FSR0H 
0x3E78	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x3E7C	0x2B17      	INCF        impresoraTerm_writeDinamicText_cont_L0, 1, 1
;impresora_termica.h,223 :: 		for(cont2 = 0; cont2 < 2 && texto[cont]; cont2++)
0x3E7E	0x2B06      	INCF        impresoraTerm_writeDinamicText_cont2_L0, 1, 1
;impresora_termica.h,224 :: 		buffer[cont2] = texto[cont++];
0x3E80	0xD7E2      	BRA         L_impresoraTerm_writeDinamicText399
L_impresoraTerm_writeDinamicText400:
;impresora_termica.h,225 :: 		buffer[cont2] = 0; //Fin de cadena
0x3E82	0x0E57      	MOVLW       Expendedora_buffer
0x3E84	0x6EE1      	MOVWF       FSR1L 
0x3E86	0x0E04      	MOVLW       hi_addr(Expendedora_buffer)
0x3E88	0x6EE2      	MOVWF       FSR1H 
0x3E8A	0x5106      	MOVF        impresoraTerm_writeDinamicText_cont2_L0, 0, 1
0x3E8C	0x26E1      	ADDWF       FSR1L, 1 
0x3E8E	0xB0D8      	BTFSC       STATUS, 0 
0x3E90	0x2AE2      	INCF        FSR1H, 1 
0x3E92	0x6AE6      	CLRF        POSTINC1 
;impresora_termica.h,228 :: 		cont2 = xtoi(buffer);
0x3E94	0x0E57      	MOVLW       Expendedora_buffer
0x3E96	0x6F23      	MOVWF       FARG_xtoi_s, 1
0x3E98	0x0E04      	MOVLW       hi_addr(Expendedora_buffer)
0x3E9A	0x6F24      	MOVWF       FARG_xtoi_s+1, 1
0x3E9C	0xF00CECE7  	CALL        _xtoi, 0
0x3EA0	0xF506C000  	MOVFF       R0, impresoraTerm_writeDinamicText_cont2_L0
;impresora_termica.h,229 :: 		usart_write(cont2);
0x3EA4	0xF523C000  	MOVFF       R0, FARG_usart_write_caracter
0x3EA8	0xF00FECF6  	CALL        _usart_write, 0
;impresora_termica.h,232 :: 		if(texto[cont])
0x3EAC	0x0105      	MOVLB       5
0x3EAE	0x5117      	MOVF        impresoraTerm_writeDinamicText_cont_L0, 0, 1
0x3EB0	0x2501      	ADDWF       FARG_impresoraTerm_writeDinamicText_texto, 0, 1
0x3EB2	0x6EE9      	MOVWF       FSR0L 
0x3EB4	0x0E00      	MOVLW       0
0x3EB6	0x2102      	ADDWFC      FARG_impresoraTerm_writeDinamicText_texto+1, 0, 1
0x3EB8	0x6EEA      	MOVWF       FSR0H 
0x3EBA	0x52EE      	MOVF        POSTINC0, 1 
0x3EBC	0xA4D8      	BTFSS       STATUS, 2 
;impresora_termica.h,233 :: 		cont++; //Por el final de cadena
0x3EBE	0x2B17      	INCF        impresoraTerm_writeDinamicText_cont_L0, 1, 1
L_impresoraTerm_writeDinamicText404:
;impresora_termica.h,234 :: 		}else{  //Caracter normal
0x3EC0	0xD00C      	BRA         L_impresoraTerm_writeDinamicText405
L_impresoraTerm_writeDinamicText398:
;impresora_termica.h,236 :: 		usart_write(texto[cont++]);
0x3EC2	0x5117      	MOVF        impresoraTerm_writeDinamicText_cont_L0, 0, 1
0x3EC4	0x2501      	ADDWF       FARG_impresoraTerm_writeDinamicText_texto, 0, 1
0x3EC6	0x6EE9      	MOVWF       FSR0L 
0x3EC8	0x0E00      	MOVLW       0
0x3ECA	0x2102      	ADDWFC      FARG_impresoraTerm_writeDinamicText_texto+1, 0, 1
0x3ECC	0x6EEA      	MOVWF       FSR0H 
0x3ECE	0xF523CFEE  	MOVFF       POSTINC0, FARG_usart_write_caracter
0x3ED2	0xF00FECF6  	CALL        _usart_write, 0
0x3ED6	0x0105      	MOVLB       5
0x3ED8	0x2B17      	INCF        impresoraTerm_writeDinamicText_cont_L0, 1, 1
;impresora_termica.h,237 :: 		}
L_impresoraTerm_writeDinamicText405:
L_impresoraTerm_writeDinamicText397:
L_impresoraTerm_writeDinamicText382:
;impresora_termica.h,238 :: 		}
0x3EDA	0xD661      	BRA         L_impresoraTerm_writeDinamicText366
L_impresoraTerm_writeDinamicText367:
;impresora_termica.h,239 :: 		}
L_end_impresoraTerm_writeDinamicText:
0x3EDC	0x0012      	RETURN      0
; end of _impresoraTerm_writeDinamicText
_can_user_write_message:
;Expendedora.c,1996 :: 		void can_user_write_message(){
;Expendedora.c,1997 :: 		if(can.tx_status == CAN_RW_ENVIADO){
0x3EDE	0x0103      	MOVLB       3
0x3EE0	0x516B      	MOVF        _can+34, 0, 1
0x3EE2	0x0A00      	XORLW       0
0x3EE4	0xE11F      	BNZ         L_can_user_write_message919
;Expendedora.c,1998 :: 		if(modeBufferEventos){
0x3EE6	0x0102      	MOVLB       2
0x3EE8	0x53D0      	MOVF        _modeBufferEventos, 1, 1
0x3EEA	0xE01B      	BZ          L_can_user_write_message920
;Expendedora.c,1999 :: 		modeBufferEventos = false;
0x3EEC	0x6BD0      	CLRF        _modeBufferEventos, 1
;Expendedora.c,2000 :: 		pilaBufferCAN--;
0x3EEE	0x0E01      	MOVLW       1
0x3EF0	0x0103      	MOVLB       3
0x3EF2	0x5FF8      	SUBWF       _pilaBufferCAN, 1, 1
0x3EF4	0x0E00      	MOVLW       0
0x3EF6	0x5BF9      	SUBWFB      _pilaBufferCAN+1, 1, 1
;Expendedora.c,2001 :: 		mysql_write_forced(tableEventosCAN, eventosEstatus, pilaBufferPointer, "0", 1);
0x3EF8	0x0EB4      	MOVLW       _tableEventosCAN
0x3EFA	0x0105      	MOVLB       5
0x3EFC	0x6F31      	MOVWF       FARG_mysql_write_forced_name, 1
0x3EFE	0x0E02      	MOVLW       hi_addr(_tableEventosCAN)
0x3F00	0x6F32      	MOVWF       FARG_mysql_write_forced_name+1, 1
0x3F02	0x0EAC      	MOVLW       _eventosEstatus
0x3F04	0x6F33      	MOVWF       FARG_mysql_write_forced_column, 1
0x3F06	0x0E02      	MOVLW       hi_addr(_eventosEstatus)
0x3F08	0x6F34      	MOVWF       FARG_mysql_write_forced_column+1, 1
0x3F0A	0xF535C455  	MOVFF       _pilaBufferPointer, FARG_mysql_write_forced_fila
0x3F0E	0xF536C456  	MOVFF       _pilaBufferPointer+1, FARG_mysql_write_forced_fila+1
0x3F12	0x0E64      	MOVLW       ?lstr34_Expendedora
0x3F14	0x6F37      	MOVWF       FARG_mysql_write_forced_texto, 1
0x3F16	0x0E01      	MOVLW       hi_addr(?lstr34_Expendedora)
0x3F18	0x6F38      	MOVWF       FARG_mysql_write_forced_texto+1, 1
0x3F1A	0x0E01      	MOVLW       1
0x3F1C	0x6F39      	MOVWF       FARG_mysql_write_forced_bytes, 1
0x3F1E	0xF008ECA9  	CALL        _mysql_write_forced, 0
;Expendedora.c,2006 :: 		}
L_can_user_write_message920:
;Expendedora.c,2007 :: 		}else if(can.tx_status == CAN_RW_CORRUPT){
0x3F22	0xD013      	BRA         L_can_user_write_message921
L_can_user_write_message919:
0x3F24	0x0103      	MOVLB       3
0x3F26	0x516B      	MOVF        _can+34, 0, 1
0x3F28	0x0A03      	XORLW       3
0x3F2A	0xE10F      	BNZ         L_can_user_write_message922
;Expendedora.c,2009 :: 		if(!modeBufferEventos){
0x3F2C	0x0102      	MOVLB       2
0x3F2E	0x53D0      	MOVF        _modeBufferEventos, 1, 1
0x3F30	0xE10A      	BNZ         L_can_user_write_message923
;Expendedora.c,2010 :: 		buffer_save_send(true, can.txBuffer);
0x3F32	0x0E01      	MOVLW       1
0x3F34	0x0105      	MOVLB       5
0x3F36	0x6F23      	MOVWF       FARG_buffer_save_send_guardar, 1
0x3F38	0x0E72      	MOVLW       _can+41
0x3F3A	0x6F24      	MOVWF       FARG_buffer_save_send_buffer, 1
0x3F3C	0x0E03      	MOVLW       hi_addr(_can+41)
0x3F3E	0x6F25      	MOVWF       FARG_buffer_save_send_buffer+1, 1
0x3F40	0xF014ECA9  	CALL        _buffer_save_send, 0
;Expendedora.c,2014 :: 		}else{
0x3F44	0xD002      	BRA         L_can_user_write_message924
L_can_user_write_message923:
;Expendedora.c,2016 :: 		modeBufferEventos = false;
0x3F46	0x0102      	MOVLB       2
0x3F48	0x6BD0      	CLRF        _modeBufferEventos, 1
;Expendedora.c,2020 :: 		}
L_can_user_write_message924:
;Expendedora.c,2021 :: 		}
L_can_user_write_message922:
L_can_user_write_message921:
;Expendedora.c,2022 :: 		}
L_end_can_user_write_message:
0x3F4A	0x0012      	RETURN      0
; end of _can_user_write_message
_LongWordToStr:
;__Lib_Conversions.c,209 :: 		
;__Lib_Conversions.c,212 :: 		
0x3F4C	0x0105      	MOVLB       5
0x3F4E	0x6B07      	CLRF        LongWordToStr_len_L0, 1
0x3F50	0x6B08      	CLRF        LongWordToStr_len_L0+1, 1
L_LongWordToStr38:
0x3F52	0x0E00      	MOVLW       0
0x3F54	0x5D08      	SUBWF       LongWordToStr_len_L0+1, 0, 1
0x3F56	0xE102      	BNZ         L__LongWordToStr122
0x3F58	0x0E0A      	MOVLW       10
0x3F5A	0x5D07      	SUBWF       LongWordToStr_len_L0, 0, 1
L__LongWordToStr122:
0x3F5C	0xE20B      	BC          L_LongWordToStr39
;__Lib_Conversions.c,213 :: 		
0x3F5E	0x5107      	MOVF        LongWordToStr_len_L0, 0, 1
0x3F60	0x2505      	ADDWF       FARG_LongWordToStr_output, 0, 1
0x3F62	0x6EE1      	MOVWF       FSR1L 
0x3F64	0x5108      	MOVF        LongWordToStr_len_L0+1, 0, 1
0x3F66	0x2106      	ADDWFC      FARG_LongWordToStr_output+1, 0, 1
0x3F68	0x6EE2      	MOVWF       FSR1H 
0x3F6A	0x0E20      	MOVLW       32
0x3F6C	0x6EE6      	MOVWF       POSTINC1 
;__Lib_Conversions.c,212 :: 		
0x3F6E	0x4B07      	INFSNZ      LongWordToStr_len_L0, 1, 1
0x3F70	0x2B08      	INCF        LongWordToStr_len_L0+1, 1, 1
;__Lib_Conversions.c,213 :: 		
0x3F72	0xD7EF      	BRA         L_LongWordToStr38
L_LongWordToStr39:
;__Lib_Conversions.c,214 :: 		
0x3F74	0x5107      	MOVF        LongWordToStr_len_L0, 0, 1
0x3F76	0x2505      	ADDWF       FARG_LongWordToStr_output, 0, 1
0x3F78	0x6EE1      	MOVWF       FSR1L 
0x3F7A	0x5108      	MOVF        LongWordToStr_len_L0+1, 0, 1
0x3F7C	0x2106      	ADDWFC      FARG_LongWordToStr_output+1, 0, 1
0x3F7E	0x6EE2      	MOVWF       FSR1H 
0x3F80	0x6AE6      	CLRF        POSTINC1 
0x3F82	0x0E01      	MOVLW       1
0x3F84	0x5F07      	SUBWF       LongWordToStr_len_L0, 1, 1
0x3F86	0x0E00      	MOVLW       0
0x3F88	0x5B08      	SUBWFB      LongWordToStr_len_L0+1, 1, 1
;__Lib_Conversions.c,216 :: 		
L_LongWordToStr41:
;__Lib_Conversions.c,217 :: 		
0x3F8A	0x5107      	MOVF        LongWordToStr_len_L0, 0, 1
0x3F8C	0x2505      	ADDWF       FARG_LongWordToStr_output, 0, 1
0x3F8E	0x6F09      	MOVWF       FLOC__LongWordToStr, 1
0x3F90	0x5108      	MOVF        LongWordToStr_len_L0+1, 0, 1
0x3F92	0x2106      	ADDWFC      FARG_LongWordToStr_output+1, 0, 1
0x3F94	0x6F0A      	MOVWF       FLOC__LongWordToStr+1, 1
0x3F96	0x0E0A      	MOVLW       10
0x3F98	0x6E04      	MOVWF       R4 
0x3F9A	0x0E00      	MOVLW       0
0x3F9C	0x6E05      	MOVWF       R5 
0x3F9E	0x6E06      	MOVWF       R6 
0x3FA0	0x6E07      	MOVWF       R7 
0x3FA2	0xF000C501  	MOVFF       FARG_LongWordToStr_input, R0
0x3FA6	0xF001C502  	MOVFF       FARG_LongWordToStr_input+1, R1
0x3FAA	0xF002C503  	MOVFF       FARG_LongWordToStr_input+2, R2
0x3FAE	0xF003C504  	MOVFF       FARG_LongWordToStr_input+3, R3
0x3FB2	0xF00EEC7C  	CALL        _Div_32x32_U, 0
0x3FB6	0xF000C008  	MOVFF       R8, R0
0x3FBA	0xF001C009  	MOVFF       R9, R1
0x3FBE	0xF002C00A  	MOVFF       R10, R2
0x3FC2	0xF003C00B  	MOVFF       R11, R3
0x3FC6	0x0E30      	MOVLW       48
0x3FC8	0x2600      	ADDWF       R0, 1 
0x3FCA	0xFFE1C509  	MOVFF       FLOC__LongWordToStr, FSR1L
0x3FCE	0xFFE2C50A  	MOVFF       FLOC__LongWordToStr+1, FSR1H
0x3FD2	0xFFE6C000  	MOVFF       R0, POSTINC1
;__Lib_Conversions.c,218 :: 		
0x3FD6	0x0E0A      	MOVLW       10
0x3FD8	0x6E04      	MOVWF       R4 
0x3FDA	0x0E00      	MOVLW       0
0x3FDC	0x6E05      	MOVWF       R5 
0x3FDE	0x6E06      	MOVWF       R6 
0x3FE0	0x6E07      	MOVWF       R7 
0x3FE2	0xF000C501  	MOVFF       FARG_LongWordToStr_input, R0
0x3FE6	0xF001C502  	MOVFF       FARG_LongWordToStr_input+1, R1
0x3FEA	0xF002C503  	MOVFF       FARG_LongWordToStr_input+2, R2
0x3FEE	0xF003C504  	MOVFF       FARG_LongWordToStr_input+3, R3
0x3FF2	0xF00EEC7C  	CALL        _Div_32x32_U, 0
0x3FF6	0xF501C000  	MOVFF       R0, FARG_LongWordToStr_input
0x3FFA	0xF502C001  	MOVFF       R1, FARG_LongWordToStr_input+1
0x3FFE	0xF503C002  	MOVFF       R2, FARG_LongWordToStr_input+2
0x4002	0xF504C003  	MOVFF       R3, FARG_LongWordToStr_input+3
;__Lib_Conversions.c,219 :: 		
0x4006	0x0E00      	MOVLW       0
0x4008	0x6E04      	MOVWF       R4 
0x400A	0x1803      	XORWF       R3, 0 
0x400C	0xE108      	BNZ         L__LongWordToStr123
0x400E	0x5004      	MOVF        R4, 0 
0x4010	0x1802      	XORWF       R2, 0 
0x4012	0xE105      	BNZ         L__LongWordToStr123
0x4014	0x5004      	MOVF        R4, 0 
0x4016	0x1801      	XORWF       R1, 0 
0x4018	0xE102      	BNZ         L__LongWordToStr123
0x401A	0x5000      	MOVF        R0, 0 
0x401C	0x0A00      	XORLW       0
L__LongWordToStr123:
0x401E	0xE101      	BNZ         L_LongWordToStr43
;__Lib_Conversions.c,220 :: 		
0x4020	0xD005      	BRA         L_LongWordToStr42
L_LongWordToStr43:
;__Lib_Conversions.c,221 :: 		
0x4022	0x0E01      	MOVLW       1
0x4024	0x5F07      	SUBWF       LongWordToStr_len_L0, 1, 1
0x4026	0x0E00      	MOVLW       0
0x4028	0x5B08      	SUBWFB      LongWordToStr_len_L0+1, 1, 1
;__Lib_Conversions.c,222 :: 		
0x402A	0xD7AF      	BRA         L_LongWordToStr41
L_LongWordToStr42:
;__Lib_Conversions.c,223 :: 		
L_end_LongWordToStr:
0x402C	0x0012      	RETURN      0
; end of _LongWordToStr
_wiegand26_checkTouch:
;wiegand26.h,143 :: 		bool wiegand26_checkTouch(char bytes){
;wiegand26.h,148 :: 		for(i = 0; i < bytes; i++){
0x402E	0x0105      	MOVLB       5
0x4030	0x6B02      	CLRF        wiegand26_checkTouch_i_L0, 1
L_wiegand26_checkTouch565:
0x4032	0x5101      	MOVF        FARG_wiegand26_checkTouch_bytes, 0, 1
0x4034	0x5D02      	SUBWF       wiegand26_checkTouch_i_L0, 0, 1
0x4036	0xE222      	BC          L_wiegand26_checkTouch566
;wiegand26.h,149 :: 		nibleL = ~getByte(WIEGAN26_BUFFER,i);
0x4038	0x0ED7      	MOVLW       Expendedora_WIEGAN26_BUFFER
0x403A	0x6EE9      	MOVWF       FSR0L 
0x403C	0x0E02      	MOVLW       hi_addr(Expendedora_WIEGAN26_BUFFER)
0x403E	0x6EEA      	MOVWF       FSR0H 
0x4040	0x5102      	MOVF        wiegand26_checkTouch_i_L0, 0, 1
0x4042	0x26E9      	ADDWF       FSR0L, 1 
0x4044	0xB0D8      	BTFSC       STATUS, 0 
0x4046	0x2AEA      	INCF        FSR0H, 1 
0x4048	0x1CEE      	COMF        POSTINC0, 0 
0x404A	0x6F04      	MOVWF       wiegand26_checkTouch_nibleL_L0, 1
;wiegand26.h,150 :: 		nibleL &= 0x0F;
0x404C	0x0E0F      	MOVLW       15
0x404E	0x1704      	ANDWF       wiegand26_checkTouch_nibleL_L0, 1, 1
;wiegand26.h,151 :: 		nibleH = swap(getByte(WIEGAN26_BUFFER,i));
0x4050	0x0ED7      	MOVLW       Expendedora_WIEGAN26_BUFFER
0x4052	0x6EE9      	MOVWF       FSR0L 
0x4054	0x0E02      	MOVLW       hi_addr(Expendedora_WIEGAN26_BUFFER)
0x4056	0x6EEA      	MOVWF       FSR0H 
0x4058	0x5102      	MOVF        wiegand26_checkTouch_i_L0, 0, 1
0x405A	0x26E9      	ADDWF       FSR0L, 1 
0x405C	0xB0D8      	BTFSC       STATUS, 0 
0x405E	0x2AEA      	INCF        FSR0H, 1 
0x4060	0xF549CFEE  	MOVFF       POSTINC0, FARG_Swap_input
0x4064	0xF002EC50  	CALL        _Swap, 0
0x4068	0xF503C000  	MOVFF       R0, wiegand26_checkTouch_nibleH_L0
;wiegand26.h,152 :: 		nibleH &= 0x0F;
0x406C	0x0E0F      	MOVLW       15
0x406E	0x1703      	ANDWF       wiegand26_checkTouch_nibleH_L0, 1, 1
;wiegand26.h,154 :: 		if(nibleH != nibleL)
0x4070	0x5103      	MOVF        wiegand26_checkTouch_nibleH_L0, 0, 1
0x4072	0x1904      	XORWF       wiegand26_checkTouch_nibleL_L0, 0, 1
0x4074	0xE001      	BZ          L_wiegand26_checkTouch568
;wiegand26.h,155 :: 		break;
0x4076	0xD002      	BRA         L_wiegand26_checkTouch566
L_wiegand26_checkTouch568:
;wiegand26.h,148 :: 		for(i = 0; i < bytes; i++){
0x4078	0x2B02      	INCF        wiegand26_checkTouch_i_L0, 1, 1
;wiegand26.h,156 :: 		}
0x407A	0xD7DB      	BRA         L_wiegand26_checkTouch565
L_wiegand26_checkTouch566:
;wiegand26.h,159 :: 		if(i == bytes)
0x407C	0x5102      	MOVF        wiegand26_checkTouch_i_L0, 0, 1
0x407E	0x1901      	XORWF       FARG_wiegand26_checkTouch_bytes, 0, 1
0x4080	0xE103      	BNZ         L_wiegand26_checkTouch569
;wiegand26.h,160 :: 		return true;
0x4082	0x0E01      	MOVLW       1
0x4084	0x6E00      	MOVWF       R0 
0x4086	0xD001      	BRA         L_end_wiegand26_checkTouch
L_wiegand26_checkTouch569:
;wiegand26.h,162 :: 		return false;
0x4088	0x6A00      	CLRF        R0 
;wiegand26.h,163 :: 		}
L_end_wiegand26_checkTouch:
0x408A	0x0012      	RETURN      0
; end of _wiegand26_checkTouch
_longword2double:
;__Lib_MathDouble.c,2427 :: 		
;__Lib_MathDouble.c,2434 :: 		
0x408C	0x5000      	MOVF        R0, 0, 0
;__Lib_MathDouble.c,2435 :: 		
0x408E	0x6E08      	MOVWF       R8, 0
;__Lib_MathDouble.c,2436 :: 		
0x4090	0x5001      	MOVF        R1, 0, 0
;__Lib_MathDouble.c,2437 :: 		
0x4092	0x6E00      	MOVWF       R0, 0
;__Lib_MathDouble.c,2438 :: 		
0x4094	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,2439 :: 		
0x4096	0x6E01      	MOVWF       R1, 0
;__Lib_MathDouble.c,2440 :: 		
0x4098	0x5003      	MOVF        R3, 0, 0
;__Lib_MathDouble.c,2441 :: 		
0x409A	0x6E02      	MOVWF       R2, 0
;__Lib_MathDouble.c,2442 :: 		
0x409C	0x6A03      	CLRF        R3, 0
;__Lib_MathDouble.c,2445 :: 		
0x409E	0x6A0B      	CLRF        R11, 0
;__Lib_MathDouble.c,2446 :: 		
0x40A0	0x6A0C      	CLRF        R12, 0
;__Lib_MathDouble.c,2448 :: 		
0x40A2	0x0E9E      	MOVLW       158
;__Lib_MathDouble.c,2449 :: 		
0x40A4	0x6E03      	MOVWF       R3, 0
;__Lib_MathDouble.c,2450 :: 		
0x40A6	0x6A0A      	CLRF        R10, 0
;__Lib_MathDouble.c,2451 :: 		
0x40A8	0x0E02      	MOVLW       2
;__Lib_MathDouble.c,2452 :: 		
0x40AA	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,2454 :: 		
0x40AC	0xF016ECF8  	CALL        _NRM4032, 0
;__Lib_MathDouble.c,2455 :: 		
L_end_longword2double:
0x40B0	0x0012      	RETURN      0
; end of _longword2double
_can_user_read_message:
;Expendedora.c,1249 :: 		void can_user_read_message(){
;Expendedora.c,1264 :: 		limpiarLCD = true;
0x40B2	0x0E01      	MOVLW       1
0x40B4	0x0102      	MOVLB       2
0x40B6	0x6F78      	MOVWF       _limpiarLCD, 1
;Expendedora.c,1265 :: 		tempLCD = 0;
0x40B8	0x6B77      	CLRF        _tempLCD, 1
;Expendedora.c,1266 :: 		lcd_clean_row(3);
0x40BA	0x0E03      	MOVLW       3
0x40BC	0x0105      	MOVLB       5
0x40BE	0x6F23      	MOVWF       FARG_lcd_clean_row_fila, 1
0x40C0	0xF015EC78  	CALL        _lcd_clean_row, 0
;Expendedora.c,1267 :: 		lcd_out(3,17,"MSG");
0x40C4	0x0E03      	MOVLW       3
0x40C6	0x6F23      	MOVWF       FARG_lcd_out_fila, 1
0x40C8	0x0E11      	MOVLW       17
0x40CA	0x6F24      	MOVWF       FARG_lcd_out_col, 1
0x40CC	0x0E29      	MOVLW       ?lstr27_Expendedora
0x40CE	0x6F25      	MOVWF       FARG_lcd_out_texto, 1
0x40D0	0x0E02      	MOVLW       hi_addr(?lstr27_Expendedora)
0x40D2	0x6F26      	MOVWF       FARG_lcd_out_texto+1, 1
0x40D4	0xF010EC01  	CALL        _lcd_out, 0
;Expendedora.c,1270 :: 		sizeTotal = 0;
0x40D8	0x6B06      	CLRF        can_user_read_message_sizeTotal_L0, 1
;Expendedora.c,1271 :: 		sizeKey = sizeof(CAN_PENSIONADO)-1;  //PENSIONADO: PEN+ID(HEX)+CMD+FILA+MENSAJE
0x40DA	0x0E03      	MOVLW       3
0x40DC	0x6F05      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Expendedora.c,1272 :: 		if(string_cmpnc(CAN_PENSIONADO, &can.rxBuffer[sizeTotal], sizeKey)){
0x40DE	0x0EF0      	MOVLW       _CAN_PENSIONADO
0x40E0	0x6F23      	MOVWF       FARG_string_cmpnc_text1, 1
0x40E2	0x0EA3      	MOVLW       hi_addr(_CAN_PENSIONADO)
0x40E4	0x6F24      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x40E6	0x0E00      	MOVLW       higher_addr(_CAN_PENSIONADO)
0x40E8	0x6F25      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x40EA	0x0EB4      	MOVLW       _can+107
0x40EC	0x6F26      	MOVWF       FARG_string_cmpnc_text2, 1
0x40EE	0x0E03      	MOVLW       hi_addr(_can+107)
0x40F0	0x6F27      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x40F2	0x5106      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x40F4	0x2726      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x40F6	0xB0D8      	BTFSC       STATUS, 0 
0x40F8	0x2B27      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x40FA	0x0E03      	MOVLW       3
0x40FC	0x6F28      	MOVWF       FARG_string_cmpnc_bytes, 1
0x40FE	0xF013EC78  	CALL        _string_cmpnc, 0
0x4102	0x5200      	MOVF        R0, 1 
0x4104	0xB4D8      	BTFSC       STATUS, 2 
0x4106	0xD36D      	BRA         L_can_user_read_message791
;Expendedora.c,1274 :: 		sizeTotal += sizeKey;
0x4108	0x5105      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x410A	0x2506      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x410C	0x6E00      	MOVWF       R0 
0x410E	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1275 :: 		sizeKey = 6;  //3 Bytes en hexadecimal
0x4112	0x0E06      	MOVLW       6
0x4114	0x6F05      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Expendedora.c,1276 :: 		string_cpyn(msjConst, &can.rxBuffer[sizeTotal], sizeKey);
0x4116	0x0E05      	MOVLW       _msjConst
0x4118	0x6F23      	MOVWF       FARG_string_cpyn_destino, 1
0x411A	0x0E03      	MOVLW       hi_addr(_msjConst)
0x411C	0x6F24      	MOVWF       FARG_string_cpyn_destino+1, 1
0x411E	0x0EB4      	MOVLW       _can+107
0x4120	0x6F25      	MOVWF       FARG_string_cpyn_origen, 1
0x4122	0x0E03      	MOVLW       hi_addr(_can+107)
0x4124	0x6F26      	MOVWF       FARG_string_cpyn_origen+1, 1
0x4126	0x5000      	MOVF        R0, 0 
0x4128	0x2725      	ADDWF       FARG_string_cpyn_origen, 1, 1
0x412A	0xB0D8      	BTFSC       STATUS, 0 
0x412C	0x2B26      	INCF        FARG_string_cpyn_origen+1, 1, 1
0x412E	0x0E06      	MOVLW       6
0x4130	0x6F27      	MOVWF       FARG_string_cpyn_size, 1
0x4132	0xF014EC39  	CALL        _string_cpyn, 0
;Expendedora.c,1277 :: 		idConsulta = hexToNum(msjConst);
0x4136	0x0E05      	MOVLW       _msjConst
0x4138	0x6F23      	MOVWF       FARG_hexToNum_hex, 1
0x413A	0x0E03      	MOVLW       hi_addr(_msjConst)
0x413C	0x6F24      	MOVWF       FARG_hexToNum_hex+1, 1
0x413E	0xF010EC5E  	CALL        _hexToNum, 0
0x4142	0xF50BC000  	MOVFF       R0, can_user_read_message_idConsulta_L0
0x4146	0xF50CC001  	MOVFF       R1, can_user_read_message_idConsulta_L0+1
0x414A	0xF50DC002  	MOVFF       R2, can_user_read_message_idConsulta_L0+2
0x414E	0xF50EC003  	MOVFF       R3, can_user_read_message_idConsulta_L0+3
;Expendedora.c,1279 :: 		sizeTotal += sizeKey;
0x4152	0x5105      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x4154	0x2506      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x4156	0x6E00      	MOVWF       R0 
0x4158	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1280 :: 		sizeKey = sizeof(CAN_REGISTRAR)-1;  //COMANDO 3BYTES
0x415C	0x0E03      	MOVLW       3
0x415E	0x6F05      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Expendedora.c,1282 :: 		string_cpyn(msjConst, &can.rxBuffer[sizeTotal+sizeKey], 4); //4 numeros fila
0x4160	0x0E05      	MOVLW       _msjConst
0x4162	0x6F23      	MOVWF       FARG_string_cpyn_destino, 1
0x4164	0x0E03      	MOVLW       hi_addr(_msjConst)
0x4166	0x6F24      	MOVWF       FARG_string_cpyn_destino+1, 1
0x4168	0x0E03      	MOVLW       3
0x416A	0x2600      	ADDWF       R0, 1 
0x416C	0x6A01      	CLRF        R1 
0x416E	0x0E00      	MOVLW       0
0x4170	0x2201      	ADDWFC      R1, 1 
0x4172	0x0EB4      	MOVLW       _can+107
0x4174	0x2400      	ADDWF       R0, 0 
0x4176	0x6F25      	MOVWF       FARG_string_cpyn_origen, 1
0x4178	0x0E03      	MOVLW       hi_addr(_can+107)
0x417A	0x2001      	ADDWFC      R1, 0 
0x417C	0x6F26      	MOVWF       FARG_string_cpyn_origen+1, 1
0x417E	0x0E04      	MOVLW       4
0x4180	0x6F27      	MOVWF       FARG_string_cpyn_size, 1
0x4182	0xF014EC39  	CALL        _string_cpyn, 0
;Expendedora.c,1283 :: 		fila = stringToNum(msjConst);
0x4186	0x0E05      	MOVLW       _msjConst
0x4188	0x6F23      	MOVWF       FARG_stringToNum_cadena, 1
0x418A	0x0E03      	MOVLW       hi_addr(_msjConst)
0x418C	0x6F24      	MOVWF       FARG_stringToNum_cadena+1, 1
0x418E	0xF013EC99  	CALL        _stringToNum, 0
0x4192	0xF507C000  	MOVFF       R0, can_user_read_message_fila_L0
0x4196	0xF508C001  	MOVFF       R1, can_user_read_message_fila_L0+1
;Expendedora.c,1285 :: 		if(string_cmpnc(CAN_REGISTRAR, &can.rxBuffer[sizeTotal], sizeKey)){
0x419A	0x0E10      	MOVLW       _CAN_REGISTRAR
0x419C	0x6F23      	MOVWF       FARG_string_cmpnc_text1, 1
0x419E	0x0EA4      	MOVLW       hi_addr(_CAN_REGISTRAR)
0x41A0	0x6F24      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x41A2	0x0E00      	MOVLW       higher_addr(_CAN_REGISTRAR)
0x41A4	0x6F25      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x41A6	0x0EB4      	MOVLW       _can+107
0x41A8	0x6F26      	MOVWF       FARG_string_cmpnc_text2, 1
0x41AA	0x0E03      	MOVLW       hi_addr(_can+107)
0x41AC	0x6F27      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x41AE	0x5106      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x41B0	0x2726      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x41B2	0xB0D8      	BTFSC       STATUS, 0 
0x41B4	0x2B27      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x41B6	0xF528C505  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x41BA	0xF013EC78  	CALL        _string_cmpnc, 0
0x41BE	0x5200      	MOVF        R0, 1 
0x41C0	0xB4D8      	BTFSC       STATUS, 2 
0x41C2	0xD0B0      	BRA         L_can_user_read_message792
;Expendedora.c,1287 :: 		sizeTotal += sizeKey;
0x41C4	0x5105      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x41C6	0x2506      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x41C8	0x6E00      	MOVWF       R0 
0x41CA	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1288 :: 		sizeKey = 4;  //4 POR LA FILA
0x41CE	0x0E04      	MOVLW       4
0x41D0	0x6F05      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Expendedora.c,1290 :: 		idNew = idConsulta;
0x41D2	0xF50FC50B  	MOVFF       can_user_read_message_idConsulta_L0, can_user_read_message_idNew_L0
0x41D6	0xF510C50C  	MOVFF       can_user_read_message_idConsulta_L0+1, can_user_read_message_idNew_L0+1
0x41DA	0xF511C50D  	MOVFF       can_user_read_message_idConsulta_L0+2, can_user_read_message_idNew_L0+2
0x41DE	0xF512C50E  	MOVFF       can_user_read_message_idConsulta_L0+3, can_user_read_message_idNew_L0+3
;Expendedora.c,1292 :: 		sizeTotal += sizeKey;
0x41E2	0x0E04      	MOVLW       4
0x41E4	0x2600      	ADDWF       R0, 1 
0x41E6	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1293 :: 		sizeKey = 1;  //1 Byte
0x41EA	0x0E01      	MOVLW       1
0x41EC	0x6F05      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Expendedora.c,1294 :: 		vigencia = can.rxBuffer[sizeTotal];
0x41EE	0x0EB4      	MOVLW       _can+107
0x41F0	0x6EE9      	MOVWF       FSR0L 
0x41F2	0x0E03      	MOVLW       hi_addr(_can+107)
0x41F4	0x6EEA      	MOVWF       FSR0H 
0x41F6	0x5000      	MOVF        R0, 0 
0x41F8	0x26E9      	ADDWF       FSR0L, 1 
0x41FA	0xB0D8      	BTFSC       STATUS, 0 
0x41FC	0x2AEA      	INCF        FSR0H, 1 
0x41FE	0xF509CFEE  	MOVFF       POSTINC0, can_user_read_message_vigencia_L0
;Expendedora.c,1296 :: 		sizeTotal += sizeKey;
0x4202	0x2A00      	INCF        R0, 1 
0x4204	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1297 :: 		sizeKey = 1;  //1 Byte
0x4208	0x0E01      	MOVLW       1
0x420A	0x6F05      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Expendedora.c,1298 :: 		estatus = can.rxBuffer[sizeTotal];
0x420C	0x0EB4      	MOVLW       _can+107
0x420E	0x6EE9      	MOVWF       FSR0L 
0x4210	0x0E03      	MOVLW       hi_addr(_can+107)
0x4212	0x6EEA      	MOVWF       FSR0H 
0x4214	0x5000      	MOVF        R0, 0 
0x4216	0x26E9      	ADDWF       FSR0L, 1 
0x4218	0xB0D8      	BTFSC       STATUS, 0 
0x421A	0x2AEA      	INCF        FSR0H, 1 
0x421C	0xF50ACFEE  	MOVFF       POSTINC0, can_user_read_message_estatus_L0
;Expendedora.c,1300 :: 		if(mysql_read(tablePensionados, pensionadosID, fila, &id) == TABLE_RW_NO_EXIST_ROW){
0x4220	0x0E3D      	MOVLW       _tablePensionados
0x4222	0x6F31      	MOVWF       FARG_mysql_read_name, 1
0x4224	0x0E01      	MOVLW       hi_addr(_tablePensionados)
0x4226	0x6F32      	MOVWF       FARG_mysql_read_name+1, 1
0x4228	0x0EC6      	MOVLW       _pensionadosID
0x422A	0x6F33      	MOVWF       FARG_mysql_read_column, 1
0x422C	0x0E01      	MOVLW       hi_addr(_pensionadosID)
0x422E	0x6F34      	MOVWF       FARG_mysql_read_column+1, 1
0x4230	0xF535C507  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_read_fila
0x4234	0xF536C508  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_read_fila+1
0x4238	0x0E13      	MOVLW       can_user_read_message_id_L0
0x423A	0x6F37      	MOVWF       FARG_mysql_read_result, 1
0x423C	0x0E05      	MOVLW       hi_addr(can_user_read_message_id_L0)
0x423E	0x6F38      	MOVWF       FARG_mysql_read_result+1, 1
0x4240	0xF00AECAA  	CALL        _mysql_read, 0
0x4244	0x5000      	MOVF        R0, 0 
0x4246	0x0A03      	XORLW       3
0x4248	0xE16C      	BNZ         L_can_user_read_message793
;Expendedora.c,1301 :: 		if(fila == myTable.rowAct+1){
0x424A	0x0E01      	MOVLW       1
0x424C	0x0103      	MOVLB       3
0x424E	0x251D      	ADDWF       Expendedora_myTable+4, 0, 1
0x4250	0x6E01      	MOVWF       R1 
0x4252	0x0E00      	MOVLW       0
0x4254	0x211E      	ADDWFC      Expendedora_myTable+5, 0, 1
0x4256	0x6E02      	MOVWF       R2 
0x4258	0x0105      	MOVLB       5
0x425A	0x5108      	MOVF        can_user_read_message_fila_L0+1, 0, 1
0x425C	0x1802      	XORWF       R2, 0 
0x425E	0xE102      	BNZ         L__can_user_read_message1384
0x4260	0x5001      	MOVF        R1, 0 
0x4262	0x1907      	XORWF       can_user_read_message_fila_L0, 0, 1
L__can_user_read_message1384:
0x4264	0xE15E      	BNZ         L_can_user_read_message794
;Expendedora.c,1302 :: 		if(!mysql_write(tablePensionados, pensionadosID, -1, idNew, true)){
0x4266	0x0E3D      	MOVLW       _tablePensionados
0x4268	0x6F23      	MOVWF       FARG_mysql_write_name, 1
0x426A	0x0E01      	MOVLW       hi_addr(_tablePensionados)
0x426C	0x6F24      	MOVWF       FARG_mysql_write_name+1, 1
0x426E	0x0EC6      	MOVLW       _pensionadosID
0x4270	0x6F25      	MOVWF       FARG_mysql_write_column, 1
0x4272	0x0E01      	MOVLW       hi_addr(_pensionadosID)
0x4274	0x6F26      	MOVWF       FARG_mysql_write_column+1, 1
0x4276	0x0EFF      	MOVLW       255
0x4278	0x6F27      	MOVWF       FARG_mysql_write_fila, 1
0x427A	0x0EFF      	MOVLW       255
0x427C	0x6F28      	MOVWF       FARG_mysql_write_fila+1, 1
0x427E	0xF529C50F  	MOVFF       can_user_read_message_idNew_L0, FARG_mysql_write_value
0x4282	0xF52AC510  	MOVFF       can_user_read_message_idNew_L0+1, FARG_mysql_write_value+1
0x4286	0xF52BC511  	MOVFF       can_user_read_message_idNew_L0+2, FARG_mysql_write_value+2
0x428A	0xF52CC512  	MOVFF       can_user_read_message_idNew_L0+3, FARG_mysql_write_value+3
0x428E	0x0E01      	MOVLW       1
0x4290	0x6F2D      	MOVWF       FARG_mysql_write_endWrite, 1
0x4292	0xF012ECDC  	CALL        _mysql_write, 0
0x4296	0x5200      	MOVF        R0, 1 
0x4298	0xE144      	BNZ         L_can_user_read_message795
;Expendedora.c,1306 :: 		mysql_write(tablePensionados, pensionadosID, fila, idNew, false);
0x429A	0x0E3D      	MOVLW       _tablePensionados
0x429C	0x0105      	MOVLB       5
0x429E	0x6F23      	MOVWF       FARG_mysql_write_name, 1
0x42A0	0x0E01      	MOVLW       hi_addr(_tablePensionados)
0x42A2	0x6F24      	MOVWF       FARG_mysql_write_name+1, 1
0x42A4	0x0EC6      	MOVLW       _pensionadosID
0x42A6	0x6F25      	MOVWF       FARG_mysql_write_column, 1
0x42A8	0x0E01      	MOVLW       hi_addr(_pensionadosID)
0x42AA	0x6F26      	MOVWF       FARG_mysql_write_column+1, 1
0x42AC	0xF527C507  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_fila
0x42B0	0xF528C508  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_fila+1
0x42B4	0xF529C50F  	MOVFF       can_user_read_message_idNew_L0, FARG_mysql_write_value
0x42B8	0xF52AC510  	MOVFF       can_user_read_message_idNew_L0+1, FARG_mysql_write_value+1
0x42BC	0xF52BC511  	MOVFF       can_user_read_message_idNew_L0+2, FARG_mysql_write_value+2
0x42C0	0xF52CC512  	MOVFF       can_user_read_message_idNew_L0+3, FARG_mysql_write_value+3
0x42C4	0x6B2D      	CLRF        FARG_mysql_write_endWrite, 1
0x42C6	0xF012ECDC  	CALL        _mysql_write, 0
;Expendedora.c,1307 :: 		mysql_write(tablePensionados, pensionadosVigencia, fila, vigencia, false);
0x42CA	0x0E3D      	MOVLW       _tablePensionados
0x42CC	0x0105      	MOVLB       5
0x42CE	0x6F23      	MOVWF       FARG_mysql_write_name, 1
0x42D0	0x0E01      	MOVLW       hi_addr(_tablePensionados)
0x42D2	0x6F24      	MOVWF       FARG_mysql_write_name+1, 1
0x42D4	0x0EBD      	MOVLW       _pensionadosVigencia
0x42D6	0x6F25      	MOVWF       FARG_mysql_write_column, 1
0x42D8	0x0E01      	MOVLW       hi_addr(_pensionadosVigencia)
0x42DA	0x6F26      	MOVWF       FARG_mysql_write_column+1, 1
0x42DC	0xF527C507  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_fila
0x42E0	0xF528C508  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_fila+1
0x42E4	0xF529C509  	MOVFF       can_user_read_message_vigencia_L0, FARG_mysql_write_value
0x42E8	0x0E00      	MOVLW       0
0x42EA	0x6F2A      	MOVWF       FARG_mysql_write_value+1, 1
0x42EC	0x6F2B      	MOVWF       FARG_mysql_write_value+2, 1
0x42EE	0x6F2C      	MOVWF       FARG_mysql_write_value+3, 1
0x42F0	0x6B2D      	CLRF        FARG_mysql_write_endWrite, 1
0x42F2	0xF012ECDC  	CALL        _mysql_write, 0
;Expendedora.c,1308 :: 		mysql_write(tablePensionados, pensionadosEstatus, fila, estatus, false);
0x42F6	0x0E3D      	MOVLW       _tablePensionados
0x42F8	0x0105      	MOVLB       5
0x42FA	0x6F23      	MOVWF       FARG_mysql_write_name, 1
0x42FC	0x0E01      	MOVLW       hi_addr(_tablePensionados)
0x42FE	0x6F24      	MOVWF       FARG_mysql_write_name+1, 1
0x4300	0x0EC9      	MOVLW       _pensionadosEstatus
0x4302	0x6F25      	MOVWF       FARG_mysql_write_column, 1
0x4304	0x0E01      	MOVLW       hi_addr(_pensionadosEstatus)
0x4306	0x6F26      	MOVWF       FARG_mysql_write_column+1, 1
0x4308	0xF527C507  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_fila
0x430C	0xF528C508  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_fila+1
0x4310	0xF529C50A  	MOVFF       can_user_read_message_estatus_L0, FARG_mysql_write_value
0x4314	0x0E00      	MOVLW       0
0x4316	0x6F2A      	MOVWF       FARG_mysql_write_value+1, 1
0x4318	0x6F2B      	MOVWF       FARG_mysql_write_value+2, 1
0x431A	0x6F2C      	MOVWF       FARG_mysql_write_value+3, 1
0x431C	0x6B2D      	CLRF        FARG_mysql_write_endWrite, 1
0x431E	0xF012ECDC  	CALL        _mysql_write, 0
;Expendedora.c,1309 :: 		}
L_can_user_read_message795:
;Expendedora.c,1310 :: 		}
L_can_user_read_message794:
;Expendedora.c,1311 :: 		}
L_can_user_read_message793:
;Expendedora.c,1312 :: 		}else if(string_cmpnc(CAN_ACTUALIZAR, &can.rxBuffer[sizeTotal], sizeKey)){
0x4322	0xD25D      	BRA         L_can_user_read_message796
L_can_user_read_message792:
0x4324	0x0E14      	MOVLW       _CAN_ACTUALIZAR
0x4326	0x0105      	MOVLB       5
0x4328	0x6F23      	MOVWF       FARG_string_cmpnc_text1, 1
0x432A	0x0EA4      	MOVLW       hi_addr(_CAN_ACTUALIZAR)
0x432C	0x6F24      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x432E	0x0E00      	MOVLW       higher_addr(_CAN_ACTUALIZAR)
0x4330	0x6F25      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x4332	0x0EB4      	MOVLW       _can+107
0x4334	0x6F26      	MOVWF       FARG_string_cmpnc_text2, 1
0x4336	0x0E03      	MOVLW       hi_addr(_can+107)
0x4338	0x6F27      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x433A	0x5106      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x433C	0x2726      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x433E	0xB0D8      	BTFSC       STATUS, 0 
0x4340	0x2B27      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x4342	0xF528C505  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x4346	0xF013EC78  	CALL        _string_cmpnc, 0
0x434A	0x5200      	MOVF        R0, 1 
0x434C	0xB4D8      	BTFSC       STATUS, 2 
0x434E	0xD0B0      	BRA         L_can_user_read_message797
;Expendedora.c,1314 :: 		sizeTotal += sizeKey;
0x4350	0x5105      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x4352	0x2506      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x4354	0x6E00      	MOVWF       R0 
0x4356	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1315 :: 		sizeKey = 4;  //4 POR LA FILA
0x435A	0x0E04      	MOVLW       4
0x435C	0x6F05      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Expendedora.c,1317 :: 		sizeTotal += sizeKey;
0x435E	0x0E04      	MOVLW       4
0x4360	0x2600      	ADDWF       R0, 1 
0x4362	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1318 :: 		sizeKey = 6;  //3 Bytes en hexadecimal
0x4366	0x0E06      	MOVLW       6
0x4368	0x6F05      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Expendedora.c,1319 :: 		string_cpyn(msjConst, &can.rxBuffer[sizeTotal], sizeKey);
0x436A	0x0E05      	MOVLW       _msjConst
0x436C	0x6F23      	MOVWF       FARG_string_cpyn_destino, 1
0x436E	0x0E03      	MOVLW       hi_addr(_msjConst)
0x4370	0x6F24      	MOVWF       FARG_string_cpyn_destino+1, 1
0x4372	0x0EB4      	MOVLW       _can+107
0x4374	0x6F25      	MOVWF       FARG_string_cpyn_origen, 1
0x4376	0x0E03      	MOVLW       hi_addr(_can+107)
0x4378	0x6F26      	MOVWF       FARG_string_cpyn_origen+1, 1
0x437A	0x5000      	MOVF        R0, 0 
0x437C	0x2725      	ADDWF       FARG_string_cpyn_origen, 1, 1
0x437E	0xB0D8      	BTFSC       STATUS, 0 
0x4380	0x2B26      	INCF        FARG_string_cpyn_origen+1, 1, 1
0x4382	0x0E06      	MOVLW       6
0x4384	0x6F27      	MOVWF       FARG_string_cpyn_size, 1
0x4386	0xF014EC39  	CALL        _string_cpyn, 0
;Expendedora.c,1320 :: 		idNew = hexToNum(msjConst);
0x438A	0x0E05      	MOVLW       _msjConst
0x438C	0x6F23      	MOVWF       FARG_hexToNum_hex, 1
0x438E	0x0E03      	MOVLW       hi_addr(_msjConst)
0x4390	0x6F24      	MOVWF       FARG_hexToNum_hex+1, 1
0x4392	0xF010EC5E  	CALL        _hexToNum, 0
0x4396	0xF50FC000  	MOVFF       R0, can_user_read_message_idNew_L0
0x439A	0xF510C001  	MOVFF       R1, can_user_read_message_idNew_L0+1
0x439E	0xF511C002  	MOVFF       R2, can_user_read_message_idNew_L0+2
0x43A2	0xF512C003  	MOVFF       R3, can_user_read_message_idNew_L0+3
;Expendedora.c,1322 :: 		sizeTotal += sizeKey;
0x43A6	0x5105      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x43A8	0x2506      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x43AA	0x6E00      	MOVWF       R0 
0x43AC	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1323 :: 		sizeKey = 1;  //1 Byte
0x43B0	0x0E01      	MOVLW       1
0x43B2	0x6F05      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Expendedora.c,1324 :: 		vigencia = can.rxBuffer[sizeTotal];
0x43B4	0x0EB4      	MOVLW       _can+107
0x43B6	0x6EE9      	MOVWF       FSR0L 
0x43B8	0x0E03      	MOVLW       hi_addr(_can+107)
0x43BA	0x6EEA      	MOVWF       FSR0H 
0x43BC	0x5000      	MOVF        R0, 0 
0x43BE	0x26E9      	ADDWF       FSR0L, 1 
0x43C0	0xB0D8      	BTFSC       STATUS, 0 
0x43C2	0x2AEA      	INCF        FSR0H, 1 
0x43C4	0xF509CFEE  	MOVFF       POSTINC0, can_user_read_message_vigencia_L0
;Expendedora.c,1326 :: 		sizeTotal += sizeKey;
0x43C8	0x2A00      	INCF        R0, 1 
0x43CA	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1327 :: 		sizeKey = 1;  //1 Byte
0x43CE	0x0E01      	MOVLW       1
0x43D0	0x6F05      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Expendedora.c,1328 :: 		estatus = can.rxBuffer[sizeTotal];
0x43D2	0x0EB4      	MOVLW       _can+107
0x43D4	0x6EE9      	MOVWF       FSR0L 
0x43D6	0x0E03      	MOVLW       hi_addr(_can+107)
0x43D8	0x6EEA      	MOVWF       FSR0H 
0x43DA	0x5000      	MOVF        R0, 0 
0x43DC	0x26E9      	ADDWF       FSR0L, 1 
0x43DE	0xB0D8      	BTFSC       STATUS, 0 
0x43E0	0x2AEA      	INCF        FSR0H, 1 
0x43E2	0xF50ACFEE  	MOVFF       POSTINC0, can_user_read_message_estatus_L0
;Expendedora.c,1331 :: 		if(!mysql_read(tablePensionados,pensionadosID, fila, &id)){
0x43E6	0x0E3D      	MOVLW       _tablePensionados
0x43E8	0x6F31      	MOVWF       FARG_mysql_read_name, 1
0x43EA	0x0E01      	MOVLW       hi_addr(_tablePensionados)
0x43EC	0x6F32      	MOVWF       FARG_mysql_read_name+1, 1
0x43EE	0x0EC6      	MOVLW       _pensionadosID
0x43F0	0x6F33      	MOVWF       FARG_mysql_read_column, 1
0x43F2	0x0E01      	MOVLW       hi_addr(_pensionadosID)
0x43F4	0x6F34      	MOVWF       FARG_mysql_read_column+1, 1
0x43F6	0xF535C507  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_read_fila
0x43FA	0xF536C508  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_read_fila+1
0x43FE	0x0E13      	MOVLW       can_user_read_message_id_L0
0x4400	0x6F37      	MOVWF       FARG_mysql_read_result, 1
0x4402	0x0E05      	MOVLW       hi_addr(can_user_read_message_id_L0)
0x4404	0x6F38      	MOVWF       FARG_mysql_read_result+1, 1
0x4406	0xF00AECAA  	CALL        _mysql_read, 0
0x440A	0x5200      	MOVF        R0, 1 
0x440C	0xE150      	BNZ         L_can_user_read_message798
;Expendedora.c,1332 :: 		if(id == idConsulta){
0x440E	0x0105      	MOVLB       5
0x4410	0x5116      	MOVF        can_user_read_message_id_L0+3, 0, 1
0x4412	0x190E      	XORWF       can_user_read_message_idConsulta_L0+3, 0, 1
0x4414	0xE108      	BNZ         L__can_user_read_message1385
0x4416	0x5115      	MOVF        can_user_read_message_id_L0+2, 0, 1
0x4418	0x190D      	XORWF       can_user_read_message_idConsulta_L0+2, 0, 1
0x441A	0xE105      	BNZ         L__can_user_read_message1385
0x441C	0x5114      	MOVF        can_user_read_message_id_L0+1, 0, 1
0x441E	0x190C      	XORWF       can_user_read_message_idConsulta_L0+1, 0, 1
0x4420	0xE102      	BNZ         L__can_user_read_message1385
0x4422	0x5113      	MOVF        can_user_read_message_id_L0, 0, 1
0x4424	0x190B      	XORWF       can_user_read_message_idConsulta_L0, 0, 1
L__can_user_read_message1385:
0x4426	0xE143      	BNZ         L_can_user_read_message799
;Expendedora.c,1336 :: 		mysql_write(tablePensionados, pensionadosID, fila, idNew, false);
0x4428	0x0E3D      	MOVLW       _tablePensionados
0x442A	0x6F23      	MOVWF       FARG_mysql_write_name, 1
0x442C	0x0E01      	MOVLW       hi_addr(_tablePensionados)
0x442E	0x6F24      	MOVWF       FARG_mysql_write_name+1, 1
0x4430	0x0EC6      	MOVLW       _pensionadosID
0x4432	0x6F25      	MOVWF       FARG_mysql_write_column, 1
0x4434	0x0E01      	MOVLW       hi_addr(_pensionadosID)
0x4436	0x6F26      	MOVWF       FARG_mysql_write_column+1, 1
0x4438	0xF527C507  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_fila
0x443C	0xF528C508  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_fila+1
0x4440	0xF529C50F  	MOVFF       can_user_read_message_idNew_L0, FARG_mysql_write_value
0x4444	0xF52AC510  	MOVFF       can_user_read_message_idNew_L0+1, FARG_mysql_write_value+1
0x4448	0xF52BC511  	MOVFF       can_user_read_message_idNew_L0+2, FARG_mysql_write_value+2
0x444C	0xF52CC512  	MOVFF       can_user_read_message_idNew_L0+3, FARG_mysql_write_value+3
0x4450	0x6B2D      	CLRF        FARG_mysql_write_endWrite, 1
0x4452	0xF012ECDC  	CALL        _mysql_write, 0
;Expendedora.c,1337 :: 		mysql_write(tablePensionados, pensionadosVigencia, fila, vigencia, false);
0x4456	0x0E3D      	MOVLW       _tablePensionados
0x4458	0x0105      	MOVLB       5
0x445A	0x6F23      	MOVWF       FARG_mysql_write_name, 1
0x445C	0x0E01      	MOVLW       hi_addr(_tablePensionados)
0x445E	0x6F24      	MOVWF       FARG_mysql_write_name+1, 1
0x4460	0x0EBD      	MOVLW       _pensionadosVigencia
0x4462	0x6F25      	MOVWF       FARG_mysql_write_column, 1
0x4464	0x0E01      	MOVLW       hi_addr(_pensionadosVigencia)
0x4466	0x6F26      	MOVWF       FARG_mysql_write_column+1, 1
0x4468	0xF527C507  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_fila
0x446C	0xF528C508  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_fila+1
0x4470	0xF529C509  	MOVFF       can_user_read_message_vigencia_L0, FARG_mysql_write_value
0x4474	0x0E00      	MOVLW       0
0x4476	0x6F2A      	MOVWF       FARG_mysql_write_value+1, 1
0x4478	0x6F2B      	MOVWF       FARG_mysql_write_value+2, 1
0x447A	0x6F2C      	MOVWF       FARG_mysql_write_value+3, 1
0x447C	0x6B2D      	CLRF        FARG_mysql_write_endWrite, 1
0x447E	0xF012ECDC  	CALL        _mysql_write, 0
;Expendedora.c,1338 :: 		mysql_write(tablePensionados, pensionadosEstatus, fila, estatus, false);
0x4482	0x0E3D      	MOVLW       _tablePensionados
0x4484	0x0105      	MOVLB       5
0x4486	0x6F23      	MOVWF       FARG_mysql_write_name, 1
0x4488	0x0E01      	MOVLW       hi_addr(_tablePensionados)
0x448A	0x6F24      	MOVWF       FARG_mysql_write_name+1, 1
0x448C	0x0EC9      	MOVLW       _pensionadosEstatus
0x448E	0x6F25      	MOVWF       FARG_mysql_write_column, 1
0x4490	0x0E01      	MOVLW       hi_addr(_pensionadosEstatus)
0x4492	0x6F26      	MOVWF       FARG_mysql_write_column+1, 1
0x4494	0xF527C507  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_fila
0x4498	0xF528C508  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_fila+1
0x449C	0xF529C50A  	MOVFF       can_user_read_message_estatus_L0, FARG_mysql_write_value
0x44A0	0x0E00      	MOVLW       0
0x44A2	0x6F2A      	MOVWF       FARG_mysql_write_value+1, 1
0x44A4	0x6F2B      	MOVWF       FARG_mysql_write_value+2, 1
0x44A6	0x6F2C      	MOVWF       FARG_mysql_write_value+3, 1
0x44A8	0x6B2D      	CLRF        FARG_mysql_write_endWrite, 1
0x44AA	0xF012ECDC  	CALL        _mysql_write, 0
;Expendedora.c,1339 :: 		}
L_can_user_read_message799:
;Expendedora.c,1340 :: 		}
L_can_user_read_message798:
;Expendedora.c,1341 :: 		}else if(string_cmpnc(CAN_VIGENCIA, &can.rxBuffer[sizeTotal], sizeKey)){
0x44AE	0xD197      	BRA         L_can_user_read_message800
L_can_user_read_message797:
0x44B0	0x0E08      	MOVLW       _CAN_VIGENCIA
0x44B2	0x0105      	MOVLB       5
0x44B4	0x6F23      	MOVWF       FARG_string_cmpnc_text1, 1
0x44B6	0x0EA4      	MOVLW       hi_addr(_CAN_VIGENCIA)
0x44B8	0x6F24      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x44BA	0x0E00      	MOVLW       higher_addr(_CAN_VIGENCIA)
0x44BC	0x6F25      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x44BE	0x0EB4      	MOVLW       _can+107
0x44C0	0x6F26      	MOVWF       FARG_string_cmpnc_text2, 1
0x44C2	0x0E03      	MOVLW       hi_addr(_can+107)
0x44C4	0x6F27      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x44C6	0x5106      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x44C8	0x2726      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x44CA	0xB0D8      	BTFSC       STATUS, 0 
0x44CC	0x2B27      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x44CE	0xF528C505  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x44D2	0xF013EC78  	CALL        _string_cmpnc, 0
0x44D6	0x5200      	MOVF        R0, 1 
0x44D8	0xE04E      	BZ          L_can_user_read_message801
;Expendedora.c,1343 :: 		sizeTotal += sizeKey;
0x44DA	0x5105      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x44DC	0x2506      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x44DE	0x6E00      	MOVWF       R0 
0x44E0	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1344 :: 		sizeKey = 4;  //4 POR LA FILA
0x44E4	0x0E04      	MOVLW       4
0x44E6	0x6F05      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Expendedora.c,1346 :: 		sizeTotal += sizeKey;
0x44E8	0x0E04      	MOVLW       4
0x44EA	0x2600      	ADDWF       R0, 1 
0x44EC	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1347 :: 		sizeKey = 1;  //1 Byte
0x44F0	0x0E01      	MOVLW       1
0x44F2	0x6F05      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Expendedora.c,1348 :: 		vigencia = can.rxBuffer[sizeTotal];
0x44F4	0x0EB4      	MOVLW       _can+107
0x44F6	0x6EE9      	MOVWF       FSR0L 
0x44F8	0x0E03      	MOVLW       hi_addr(_can+107)
0x44FA	0x6EEA      	MOVWF       FSR0H 
0x44FC	0x5000      	MOVF        R0, 0 
0x44FE	0x26E9      	ADDWF       FSR0L, 1 
0x4500	0xB0D8      	BTFSC       STATUS, 0 
0x4502	0x2AEA      	INCF        FSR0H, 1 
0x4504	0xF509CFEE  	MOVFF       POSTINC0, can_user_read_message_vigencia_L0
;Expendedora.c,1350 :: 		if(!mysql_read(tablePensionados,pensionadosID, fila, &id)){
0x4508	0x0E3D      	MOVLW       _tablePensionados
0x450A	0x6F31      	MOVWF       FARG_mysql_read_name, 1
0x450C	0x0E01      	MOVLW       hi_addr(_tablePensionados)
0x450E	0x6F32      	MOVWF       FARG_mysql_read_name+1, 1
0x4510	0x0EC6      	MOVLW       _pensionadosID
0x4512	0x6F33      	MOVWF       FARG_mysql_read_column, 1
0x4514	0x0E01      	MOVLW       hi_addr(_pensionadosID)
0x4516	0x6F34      	MOVWF       FARG_mysql_read_column+1, 1
0x4518	0xF535C507  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_read_fila
0x451C	0xF536C508  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_read_fila+1
0x4520	0x0E13      	MOVLW       can_user_read_message_id_L0
0x4522	0x6F37      	MOVWF       FARG_mysql_read_result, 1
0x4524	0x0E05      	MOVLW       hi_addr(can_user_read_message_id_L0)
0x4526	0x6F38      	MOVWF       FARG_mysql_read_result+1, 1
0x4528	0xF00AECAA  	CALL        _mysql_read, 0
0x452C	0x5200      	MOVF        R0, 1 
0x452E	0xE122      	BNZ         L_can_user_read_message802
;Expendedora.c,1351 :: 		if(id == idConsulta){
0x4530	0x0105      	MOVLB       5
0x4532	0x5116      	MOVF        can_user_read_message_id_L0+3, 0, 1
0x4534	0x190E      	XORWF       can_user_read_message_idConsulta_L0+3, 0, 1
0x4536	0xE108      	BNZ         L__can_user_read_message1386
0x4538	0x5115      	MOVF        can_user_read_message_id_L0+2, 0, 1
0x453A	0x190D      	XORWF       can_user_read_message_idConsulta_L0+2, 0, 1
0x453C	0xE105      	BNZ         L__can_user_read_message1386
0x453E	0x5114      	MOVF        can_user_read_message_id_L0+1, 0, 1
0x4540	0x190C      	XORWF       can_user_read_message_idConsulta_L0+1, 0, 1
0x4542	0xE102      	BNZ         L__can_user_read_message1386
0x4544	0x5113      	MOVF        can_user_read_message_id_L0, 0, 1
0x4546	0x190B      	XORWF       can_user_read_message_idConsulta_L0, 0, 1
L__can_user_read_message1386:
0x4548	0xE115      	BNZ         L_can_user_read_message803
;Expendedora.c,1355 :: 		mysql_write(tablePensionados, pensionadosVigencia, fila, vigencia, false);
0x454A	0x0E3D      	MOVLW       _tablePensionados
0x454C	0x6F23      	MOVWF       FARG_mysql_write_name, 1
0x454E	0x0E01      	MOVLW       hi_addr(_tablePensionados)
0x4550	0x6F24      	MOVWF       FARG_mysql_write_name+1, 1
0x4552	0x0EBD      	MOVLW       _pensionadosVigencia
0x4554	0x6F25      	MOVWF       FARG_mysql_write_column, 1
0x4556	0x0E01      	MOVLW       hi_addr(_pensionadosVigencia)
0x4558	0x6F26      	MOVWF       FARG_mysql_write_column+1, 1
0x455A	0xF527C507  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_fila
0x455E	0xF528C508  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_fila+1
0x4562	0xF529C509  	MOVFF       can_user_read_message_vigencia_L0, FARG_mysql_write_value
0x4566	0x0E00      	MOVLW       0
0x4568	0x6F2A      	MOVWF       FARG_mysql_write_value+1, 1
0x456A	0x6F2B      	MOVWF       FARG_mysql_write_value+2, 1
0x456C	0x6F2C      	MOVWF       FARG_mysql_write_value+3, 1
0x456E	0x6B2D      	CLRF        FARG_mysql_write_endWrite, 1
0x4570	0xF012ECDC  	CALL        _mysql_write, 0
;Expendedora.c,1356 :: 		}
L_can_user_read_message803:
;Expendedora.c,1357 :: 		}
L_can_user_read_message802:
;Expendedora.c,1358 :: 		}else if(string_cmpnc(CAN_PASSBACK, &can.rxBuffer[sizeTotal], sizeKey)){
0x4574	0xD134      	BRA         L_can_user_read_message804
L_can_user_read_message801:
0x4576	0x0EDC      	MOVLW       _CAN_PASSBACK
0x4578	0x0105      	MOVLB       5
0x457A	0x6F23      	MOVWF       FARG_string_cmpnc_text1, 1
0x457C	0x0EA3      	MOVLW       hi_addr(_CAN_PASSBACK)
0x457E	0x6F24      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x4580	0x0E00      	MOVLW       higher_addr(_CAN_PASSBACK)
0x4582	0x6F25      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x4584	0x0EB4      	MOVLW       _can+107
0x4586	0x6F26      	MOVWF       FARG_string_cmpnc_text2, 1
0x4588	0x0E03      	MOVLW       hi_addr(_can+107)
0x458A	0x6F27      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x458C	0x5106      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x458E	0x2726      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x4590	0xB0D8      	BTFSC       STATUS, 0 
0x4592	0x2B27      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x4594	0xF528C505  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x4598	0xF013EC78  	CALL        _string_cmpnc, 0
0x459C	0x5200      	MOVF        R0, 1 
0x459E	0xE04E      	BZ          L_can_user_read_message805
;Expendedora.c,1360 :: 		sizeTotal += sizeKey;
0x45A0	0x5105      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x45A2	0x2506      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x45A4	0x6E00      	MOVWF       R0 
0x45A6	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1361 :: 		sizeKey = 4;  //4 POR LA FILA
0x45AA	0x0E04      	MOVLW       4
0x45AC	0x6F05      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Expendedora.c,1363 :: 		sizeTotal += sizeKey;
0x45AE	0x0E04      	MOVLW       4
0x45B0	0x2600      	ADDWF       R0, 1 
0x45B2	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1364 :: 		sizeKey = 1;
0x45B6	0x0E01      	MOVLW       1
0x45B8	0x6F05      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Expendedora.c,1365 :: 		estatus = can.rxBuffer[sizeTotal];
0x45BA	0x0EB4      	MOVLW       _can+107
0x45BC	0x6EE9      	MOVWF       FSR0L 
0x45BE	0x0E03      	MOVLW       hi_addr(_can+107)
0x45C0	0x6EEA      	MOVWF       FSR0H 
0x45C2	0x5000      	MOVF        R0, 0 
0x45C4	0x26E9      	ADDWF       FSR0L, 1 
0x45C6	0xB0D8      	BTFSC       STATUS, 0 
0x45C8	0x2AEA      	INCF        FSR0H, 1 
0x45CA	0xF50ACFEE  	MOVFF       POSTINC0, can_user_read_message_estatus_L0
;Expendedora.c,1367 :: 		if(!mysql_read(tablePensionados, pensionadosID, fila, &id)){
0x45CE	0x0E3D      	MOVLW       _tablePensionados
0x45D0	0x6F31      	MOVWF       FARG_mysql_read_name, 1
0x45D2	0x0E01      	MOVLW       hi_addr(_tablePensionados)
0x45D4	0x6F32      	MOVWF       FARG_mysql_read_name+1, 1
0x45D6	0x0EC6      	MOVLW       _pensionadosID
0x45D8	0x6F33      	MOVWF       FARG_mysql_read_column, 1
0x45DA	0x0E01      	MOVLW       hi_addr(_pensionadosID)
0x45DC	0x6F34      	MOVWF       FARG_mysql_read_column+1, 1
0x45DE	0xF535C507  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_read_fila
0x45E2	0xF536C508  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_read_fila+1
0x45E6	0x0E13      	MOVLW       can_user_read_message_id_L0
0x45E8	0x6F37      	MOVWF       FARG_mysql_read_result, 1
0x45EA	0x0E05      	MOVLW       hi_addr(can_user_read_message_id_L0)
0x45EC	0x6F38      	MOVWF       FARG_mysql_read_result+1, 1
0x45EE	0xF00AECAA  	CALL        _mysql_read, 0
0x45F2	0x5200      	MOVF        R0, 1 
0x45F4	0xE122      	BNZ         L_can_user_read_message806
;Expendedora.c,1368 :: 		if(id == idConsulta){
0x45F6	0x0105      	MOVLB       5
0x45F8	0x5116      	MOVF        can_user_read_message_id_L0+3, 0, 1
0x45FA	0x190E      	XORWF       can_user_read_message_idConsulta_L0+3, 0, 1
0x45FC	0xE108      	BNZ         L__can_user_read_message1387
0x45FE	0x5115      	MOVF        can_user_read_message_id_L0+2, 0, 1
0x4600	0x190D      	XORWF       can_user_read_message_idConsulta_L0+2, 0, 1
0x4602	0xE105      	BNZ         L__can_user_read_message1387
0x4604	0x5114      	MOVF        can_user_read_message_id_L0+1, 0, 1
0x4606	0x190C      	XORWF       can_user_read_message_idConsulta_L0+1, 0, 1
0x4608	0xE102      	BNZ         L__can_user_read_message1387
0x460A	0x5113      	MOVF        can_user_read_message_id_L0, 0, 1
0x460C	0x190B      	XORWF       can_user_read_message_idConsulta_L0, 0, 1
L__can_user_read_message1387:
0x460E	0xE115      	BNZ         L_can_user_read_message807
;Expendedora.c,1372 :: 		mysql_write(tablePensionados, pensionadosEstatus, fila, estatus, false);
0x4610	0x0E3D      	MOVLW       _tablePensionados
0x4612	0x6F23      	MOVWF       FARG_mysql_write_name, 1
0x4614	0x0E01      	MOVLW       hi_addr(_tablePensionados)
0x4616	0x6F24      	MOVWF       FARG_mysql_write_name+1, 1
0x4618	0x0EC9      	MOVLW       _pensionadosEstatus
0x461A	0x6F25      	MOVWF       FARG_mysql_write_column, 1
0x461C	0x0E01      	MOVLW       hi_addr(_pensionadosEstatus)
0x461E	0x6F26      	MOVWF       FARG_mysql_write_column+1, 1
0x4620	0xF527C507  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_fila
0x4624	0xF528C508  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_fila+1
0x4628	0xF529C50A  	MOVFF       can_user_read_message_estatus_L0, FARG_mysql_write_value
0x462C	0x0E00      	MOVLW       0
0x462E	0x6F2A      	MOVWF       FARG_mysql_write_value+1, 1
0x4630	0x6F2B      	MOVWF       FARG_mysql_write_value+2, 1
0x4632	0x6F2C      	MOVWF       FARG_mysql_write_value+3, 1
0x4634	0x6B2D      	CLRF        FARG_mysql_write_endWrite, 1
0x4636	0xF012ECDC  	CALL        _mysql_write, 0
;Expendedora.c,1373 :: 		}
L_can_user_read_message807:
;Expendedora.c,1374 :: 		}
L_can_user_read_message806:
;Expendedora.c,1375 :: 		}else if(string_cmpnc(CAN_CONSULTAR, &can.rxBuffer[sizeTotal], sizeKey)){
0x463A	0xD0D1      	BRA         L_can_user_read_message808
L_can_user_read_message805:
0x463C	0x0EFC      	MOVLW       _CAN_CONSULTAR
0x463E	0x0105      	MOVLB       5
0x4640	0x6F23      	MOVWF       FARG_string_cmpnc_text1, 1
0x4642	0x0EA3      	MOVLW       hi_addr(_CAN_CONSULTAR)
0x4644	0x6F24      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x4646	0x0E00      	MOVLW       higher_addr(_CAN_CONSULTAR)
0x4648	0x6F25      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x464A	0x0EB4      	MOVLW       _can+107
0x464C	0x6F26      	MOVWF       FARG_string_cmpnc_text2, 1
0x464E	0x0E03      	MOVLW       hi_addr(_can+107)
0x4650	0x6F27      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x4652	0x5106      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x4654	0x2726      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x4656	0xB0D8      	BTFSC       STATUS, 0 
0x4658	0x2B27      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x465A	0xF528C505  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x465E	0xF013EC78  	CALL        _string_cmpnc, 0
0x4662	0x5200      	MOVF        R0, 1 
0x4664	0xB4D8      	BTFSC       STATUS, 2 
0x4666	0xD0BB      	BRA         L_can_user_read_message809
;Expendedora.c,1377 :: 		sizeTotal += sizeKey;
0x4668	0x5105      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x466A	0x2706      	ADDWF       can_user_read_message_sizeTotal_L0, 1, 1
;Expendedora.c,1378 :: 		sizeKey = 4;  //4 POR LA FILA
0x466C	0x0E04      	MOVLW       4
0x466E	0x6F05      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Expendedora.c,1380 :: 		string_cpyc(bufferEeprom, CAN_TPV);
0x4670	0x0E15      	MOVLW       _bufferEeprom
0x4672	0x6F23      	MOVWF       FARG_string_cpyc_destino, 1
0x4674	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x4676	0x6F24      	MOVWF       FARG_string_cpyc_destino+1, 1
0x4678	0x0EBC      	MOVLW       _CAN_TPV
0x467A	0x6F25      	MOVWF       FARG_string_cpyc_origen, 1
0x467C	0x0EA3      	MOVLW       hi_addr(_CAN_TPV)
0x467E	0x6F26      	MOVWF       FARG_string_cpyc_origen+1, 1
0x4680	0x0E00      	MOVLW       higher_addr(_CAN_TPV)
0x4682	0x6F27      	MOVWF       FARG_string_cpyc_origen+2, 1
0x4684	0xF014EC09  	CALL        _string_cpyc, 0
;Expendedora.c,1381 :: 		string_cpyn(&bufferEeprom[sizeof(CAN_TPV)-1], can.rxBuffer, sizeTotal);
0x4688	0x0E18      	MOVLW       _bufferEeprom+3
0x468A	0x6F23      	MOVWF       FARG_string_cpyn_destino, 1
0x468C	0x0E04      	MOVLW       hi_addr(_bufferEeprom+3)
0x468E	0x6F24      	MOVWF       FARG_string_cpyn_destino+1, 1
0x4690	0x0EB4      	MOVLW       _can+107
0x4692	0x6F25      	MOVWF       FARG_string_cpyn_origen, 1
0x4694	0x0E03      	MOVLW       hi_addr(_can+107)
0x4696	0x6F26      	MOVWF       FARG_string_cpyn_origen+1, 1
0x4698	0xF527C506  	MOVFF       can_user_read_message_sizeTotal_L0, FARG_string_cpyn_size
0x469C	0xF014EC39  	CALL        _string_cpyn, 0
;Expendedora.c,1382 :: 		if(!mysql_read(tablePensionados, pensionadosID, fila, &id)){
0x46A0	0x0E3D      	MOVLW       _tablePensionados
0x46A2	0x6F31      	MOVWF       FARG_mysql_read_name, 1
0x46A4	0x0E01      	MOVLW       hi_addr(_tablePensionados)
0x46A6	0x6F32      	MOVWF       FARG_mysql_read_name+1, 1
0x46A8	0x0EC6      	MOVLW       _pensionadosID
0x46AA	0x6F33      	MOVWF       FARG_mysql_read_column, 1
0x46AC	0x0E01      	MOVLW       hi_addr(_pensionadosID)
0x46AE	0x6F34      	MOVWF       FARG_mysql_read_column+1, 1
0x46B0	0xF535C507  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_read_fila
0x46B4	0xF536C508  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_read_fila+1
0x46B8	0x0E13      	MOVLW       can_user_read_message_id_L0
0x46BA	0x6F37      	MOVWF       FARG_mysql_read_result, 1
0x46BC	0x0E05      	MOVLW       hi_addr(can_user_read_message_id_L0)
0x46BE	0x6F38      	MOVWF       FARG_mysql_read_result+1, 1
0x46C0	0xF00AECAA  	CALL        _mysql_read, 0
0x46C4	0x5200      	MOVF        R0, 1 
0x46C6	0xA4D8      	BTFSS       STATUS, 2 
0x46C8	0xD075      	BRA         L_can_user_read_message810
;Expendedora.c,1383 :: 		if(idConsulta == id){
0x46CA	0x0105      	MOVLB       5
0x46CC	0x510E      	MOVF        can_user_read_message_idConsulta_L0+3, 0, 1
0x46CE	0x1916      	XORWF       can_user_read_message_id_L0+3, 0, 1
0x46D0	0xE108      	BNZ         L__can_user_read_message1388
0x46D2	0x510D      	MOVF        can_user_read_message_idConsulta_L0+2, 0, 1
0x46D4	0x1915      	XORWF       can_user_read_message_id_L0+2, 0, 1
0x46D6	0xE105      	BNZ         L__can_user_read_message1388
0x46D8	0x510C      	MOVF        can_user_read_message_idConsulta_L0+1, 0, 1
0x46DA	0x1914      	XORWF       can_user_read_message_id_L0+1, 0, 1
0x46DC	0xE102      	BNZ         L__can_user_read_message1388
0x46DE	0x510B      	MOVF        can_user_read_message_idConsulta_L0, 0, 1
0x46E0	0x1913      	XORWF       can_user_read_message_id_L0, 0, 1
L__can_user_read_message1388:
0x46E2	0xE15B      	BNZ         L_can_user_read_message811
;Expendedora.c,1387 :: 		mysql_read_string(tablePensionados, pensionadosVigencia, fila, &vigencia);
0x46E4	0x0E3D      	MOVLW       _tablePensionados
0x46E6	0x6F23      	MOVWF       FARG_mysql_read_string_name, 1
0x46E8	0x0E01      	MOVLW       hi_addr(_tablePensionados)
0x46EA	0x6F24      	MOVWF       FARG_mysql_read_string_name+1, 1
0x46EC	0x0EBD      	MOVLW       _pensionadosVigencia
0x46EE	0x6F25      	MOVWF       FARG_mysql_read_string_column, 1
0x46F0	0x0E01      	MOVLW       hi_addr(_pensionadosVigencia)
0x46F2	0x6F26      	MOVWF       FARG_mysql_read_string_column+1, 1
0x46F4	0xF527C507  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_read_string_fila
0x46F8	0xF528C508  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_read_string_fila+1
0x46FC	0x0E09      	MOVLW       can_user_read_message_vigencia_L0
0x46FE	0x6F29      	MOVWF       FARG_mysql_read_string_result, 1
0x4700	0x0E05      	MOVLW       hi_addr(can_user_read_message_vigencia_L0)
0x4702	0x6F2A      	MOVWF       FARG_mysql_read_string_result+1, 1
0x4704	0xF014EC60  	CALL        _mysql_read_string, 0
;Expendedora.c,1388 :: 		mysql_read_string(tablePensionados, pensionadosEstatus, fila, &estatus);
0x4708	0x0E3D      	MOVLW       _tablePensionados
0x470A	0x0105      	MOVLB       5
0x470C	0x6F23      	MOVWF       FARG_mysql_read_string_name, 1
0x470E	0x0E01      	MOVLW       hi_addr(_tablePensionados)
0x4710	0x6F24      	MOVWF       FARG_mysql_read_string_name+1, 1
0x4712	0x0EC9      	MOVLW       _pensionadosEstatus
0x4714	0x6F25      	MOVWF       FARG_mysql_read_string_column, 1
0x4716	0x0E01      	MOVLW       hi_addr(_pensionadosEstatus)
0x4718	0x6F26      	MOVWF       FARG_mysql_read_string_column+1, 1
0x471A	0xF527C507  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_read_string_fila
0x471E	0xF528C508  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_read_string_fila+1
0x4722	0x0E0A      	MOVLW       can_user_read_message_estatus_L0
0x4724	0x6F29      	MOVWF       FARG_mysql_read_string_result, 1
0x4726	0x0E05      	MOVLW       hi_addr(can_user_read_message_estatus_L0)
0x4728	0x6F2A      	MOVWF       FARG_mysql_read_string_result+1, 1
0x472A	0xF014EC60  	CALL        _mysql_read_string, 0
;Expendedora.c,1390 :: 		string_push(bufferEeprom, vigencia);
0x472E	0x0E15      	MOVLW       _bufferEeprom
0x4730	0x0105      	MOVLB       5
0x4732	0x6F23      	MOVWF       FARG_string_push_texto, 1
0x4734	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x4736	0x6F24      	MOVWF       FARG_string_push_texto+1, 1
0x4738	0xF525C509  	MOVFF       can_user_read_message_vigencia_L0, FARG_string_push_caracter
0x473C	0xF013ECEA  	CALL        _string_push, 0
;Expendedora.c,1391 :: 		string_push(bufferEeprom, estatus);
0x4740	0x0E15      	MOVLW       _bufferEeprom
0x4742	0x6F23      	MOVWF       FARG_string_push_texto, 1
0x4744	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x4746	0x6F24      	MOVWF       FARG_string_push_texto+1, 1
0x4748	0xF525C50A  	MOVFF       can_user_read_message_estatus_L0, FARG_string_push_caracter
0x474C	0xF013ECEA  	CALL        _string_push, 0
;Expendedora.c,1392 :: 		string_addc(bufferEeprom, CAN_MODULE);
0x4750	0x0E15      	MOVLW       _bufferEeprom
0x4752	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x4754	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x4756	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x4758	0x0E1E      	MOVLW       _CAN_MODULE
0x475A	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x475C	0x0EA4      	MOVLW       hi_addr(_CAN_MODULE)
0x475E	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x4760	0x0E00      	MOVLW       higher_addr(_CAN_MODULE)
0x4762	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x4764	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,1393 :: 		numToHex(can.id, msjConst, 1);
0x4768	0xF523C355  	MOVFF       _can+12, FARG_numToHex_valor
0x476C	0x0E00      	MOVLW       0
0x476E	0x6F24      	MOVWF       FARG_numToHex_valor+1, 1
0x4770	0x6F25      	MOVWF       FARG_numToHex_valor+2, 1
0x4772	0x6F26      	MOVWF       FARG_numToHex_valor+3, 1
0x4774	0x0E05      	MOVLW       _msjConst
0x4776	0x6F27      	MOVWF       FARG_numToHex_cadena, 1
0x4778	0x0E03      	MOVLW       hi_addr(_msjConst)
0x477A	0x6F28      	MOVWF       FARG_numToHex_cadena+1, 1
0x477C	0x0E01      	MOVLW       1
0x477E	0x6F29      	MOVWF       FARG_numToHex_bytes, 1
0x4780	0xF016EC51  	CALL        _numToHex, 0
;Expendedora.c,1394 :: 		string_add(bufferEeprom, msjConst);
0x4784	0x0E15      	MOVLW       _bufferEeprom
0x4786	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x4788	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x478A	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x478C	0x0E05      	MOVLW       _msjConst
0x478E	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x4790	0x0E03      	MOVLW       hi_addr(_msjConst)
0x4792	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x4794	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,1395 :: 		}else{
0x4798	0xD00C      	BRA         L_can_user_read_message812
L_can_user_read_message811:
;Expendedora.c,1396 :: 		string_addc(bufferEeprom, CAN_TABLE_NO_FOUND);
0x479A	0x0E15      	MOVLW       _bufferEeprom
0x479C	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x479E	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x47A0	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x47A2	0x0E71      	MOVLW       _CAN_TABLE_NO_FOUND
0x47A4	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x47A6	0x0EA3      	MOVLW       hi_addr(_CAN_TABLE_NO_FOUND)
0x47A8	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x47AA	0x0E00      	MOVLW       higher_addr(_CAN_TABLE_NO_FOUND)
0x47AC	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x47AE	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,1397 :: 		}
L_can_user_read_message812:
;Expendedora.c,1398 :: 		}else{
0x47B2	0xD00D      	BRA         L_can_user_read_message813
L_can_user_read_message810:
0x47B4	0x0105      	MOVLB       5
;Expendedora.c,1399 :: 		string_addc(bufferEeprom, CAN_TABLE_ERROR);
0x47B6	0x0E15      	MOVLW       _bufferEeprom
0x47B8	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x47BA	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x47BC	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x47BE	0x0E7A      	MOVLW       _CAN_TABLE_ERROR
0x47C0	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x47C2	0x0EA3      	MOVLW       hi_addr(_CAN_TABLE_ERROR)
0x47C4	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x47C6	0x0E00      	MOVLW       higher_addr(_CAN_TABLE_ERROR)
0x47C8	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x47CA	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,1400 :: 		}
L_can_user_read_message813:
;Expendedora.c,1402 :: 		buffer_save_send(true, bufferEeprom);
0x47CE	0x0E01      	MOVLW       1
0x47D0	0x6F23      	MOVWF       FARG_buffer_save_send_guardar, 1
0x47D2	0x0E15      	MOVLW       _bufferEeprom
0x47D4	0x6F24      	MOVWF       FARG_buffer_save_send_buffer, 1
0x47D6	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x47D8	0x6F25      	MOVWF       FARG_buffer_save_send_buffer+1, 1
0x47DA	0xF014ECA9  	CALL        _buffer_save_send, 0
;Expendedora.c,1403 :: 		}
L_can_user_read_message809:
L_can_user_read_message808:
L_can_user_read_message804:
L_can_user_read_message800:
L_can_user_read_message796:
;Expendedora.c,1404 :: 		}else if(string_cmpnc(CAN_RTC, &can.rxBuffer[sizeTotal], sizeKey)){
0x47DE	0xF034EFDA  	GOTO        L_can_user_read_message814
L_can_user_read_message791:
0x47E2	0x0EF8      	MOVLW       _CAN_RTC
0x47E4	0x0105      	MOVLB       5
0x47E6	0x6F23      	MOVWF       FARG_string_cmpnc_text1, 1
0x47E8	0x0EA3      	MOVLW       hi_addr(_CAN_RTC)
0x47EA	0x6F24      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x47EC	0x0E00      	MOVLW       higher_addr(_CAN_RTC)
0x47EE	0x6F25      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x47F0	0x0EB4      	MOVLW       _can+107
0x47F2	0x6F26      	MOVWF       FARG_string_cmpnc_text2, 1
0x47F4	0x0E03      	MOVLW       hi_addr(_can+107)
0x47F6	0x6F27      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x47F8	0x5106      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x47FA	0x2726      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x47FC	0xB0D8      	BTFSC       STATUS, 0 
0x47FE	0x2B27      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x4800	0xF528C505  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x4804	0xF013EC78  	CALL        _string_cmpnc, 0
0x4808	0x5200      	MOVF        R0, 1 
0x480A	0xB4D8      	BTFSC       STATUS, 2 
0x480C	0xD0A9      	BRA         L_can_user_read_message815
;Expendedora.c,1405 :: 		sizeTotal += sizeKey;
0x480E	0x5105      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x4810	0x2506      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x4812	0x6E00      	MOVWF       R0 
0x4814	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1406 :: 		sizeKey = sizeof(CAN_TABLE_SET)-1;
0x4818	0x0E03      	MOVLW       3
0x481A	0x6F05      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Expendedora.c,1408 :: 		if(string_cmpnc(CAN_TABLE_SET, &can.rxBuffer[sizeTotal], sizeKey)){
0x481C	0x0E04      	MOVLW       _CAN_TABLE_SET
0x481E	0x6F23      	MOVWF       FARG_string_cmpnc_text1, 1
0x4820	0x0EA4      	MOVLW       hi_addr(_CAN_TABLE_SET)
0x4822	0x6F24      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x4824	0x0E00      	MOVLW       higher_addr(_CAN_TABLE_SET)
0x4826	0x6F25      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x4828	0x0EB4      	MOVLW       _can+107
0x482A	0x6F26      	MOVWF       FARG_string_cmpnc_text2, 1
0x482C	0x0E03      	MOVLW       hi_addr(_can+107)
0x482E	0x6F27      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x4830	0x5000      	MOVF        R0, 0 
0x4832	0x2726      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x4834	0xB0D8      	BTFSC       STATUS, 0 
0x4836	0x2B27      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x4838	0x0E03      	MOVLW       3
0x483A	0x6F28      	MOVWF       FARG_string_cmpnc_bytes, 1
0x483C	0xF013EC78  	CALL        _string_cmpnc, 0
0x4840	0x5200      	MOVF        R0, 1 
0x4842	0xE014      	BZ          L_can_user_read_message816
;Expendedora.c,1409 :: 		sizeTotal += sizeKey;
0x4844	0x5105      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x4846	0x2506      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x4848	0x6E00      	MOVWF       R0 
0x484A	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1410 :: 		DS1307_write_string(&myRTC,&can.rxBuffer[sizeTotal]);
0x484E	0x0EFA      	MOVLW       _myRTC
0x4850	0x6F23      	MOVWF       FARG_DS1307_write_string_myDS, 1
0x4852	0x0E03      	MOVLW       hi_addr(_myRTC)
0x4854	0x6F24      	MOVWF       FARG_DS1307_write_string_myDS+1, 1
0x4856	0x0EB4      	MOVLW       _can+107
0x4858	0x6F25      	MOVWF       FARG_DS1307_write_string_date, 1
0x485A	0x0E03      	MOVLW       hi_addr(_can+107)
0x485C	0x6F26      	MOVWF       FARG_DS1307_write_string_date+1, 1
0x485E	0x5000      	MOVF        R0, 0 
0x4860	0x2725      	ADDWF       FARG_DS1307_write_string_date, 1, 1
0x4862	0xB0D8      	BTFSC       STATUS, 0 
0x4864	0x2B26      	INCF        FARG_DS1307_write_string_date+1, 1, 1
0x4866	0xF00BECCE  	CALL        _DS1307_write_string, 0
;Expendedora.c,1416 :: 		}else if(string_cmpnc(CAN_TABLE_GET, &can.rxBuffer[sizeTotal], sizeKey)){
0x486A	0xD078      	BRA         L_can_user_read_message817
L_can_user_read_message816:
0x486C	0x0E00      	MOVLW       _CAN_TABLE_GET
0x486E	0x6F23      	MOVWF       FARG_string_cmpnc_text1, 1
0x4870	0x0EA4      	MOVLW       hi_addr(_CAN_TABLE_GET)
0x4872	0x6F24      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x4874	0x0E00      	MOVLW       higher_addr(_CAN_TABLE_GET)
0x4876	0x6F25      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x4878	0x0EB4      	MOVLW       _can+107
0x487A	0x6F26      	MOVWF       FARG_string_cmpnc_text2, 1
0x487C	0x0E03      	MOVLW       hi_addr(_can+107)
0x487E	0x6F27      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x4880	0x5106      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x4882	0x2726      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x4884	0xB0D8      	BTFSC       STATUS, 0 
0x4886	0x2B27      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x4888	0xF528C505  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x488C	0xF013EC78  	CALL        _string_cmpnc, 0
0x4890	0x5200      	MOVF        R0, 1 
0x4892	0xE064      	BZ          L_can_user_read_message818
;Expendedora.c,1417 :: 		sizeTotal += sizeKey;
0x4894	0x5105      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x4896	0x2706      	ADDWF       can_user_read_message_sizeTotal_L0, 1, 1
;Expendedora.c,1418 :: 		DS1307_read(&myRTC,true);
0x4898	0x0EFA      	MOVLW       _myRTC
0x489A	0x6F23      	MOVWF       FARG_DS1307_read_myDS, 1
0x489C	0x0E03      	MOVLW       hi_addr(_myRTC)
0x489E	0x6F24      	MOVWF       FARG_DS1307_read_myDS+1, 1
0x48A0	0x0E01      	MOVLW       1
0x48A2	0x6F25      	MOVWF       FARG_DS1307_read_formatComplet, 1
0x48A4	0xF011ECAD  	CALL        _DS1307_read, 0
;Expendedora.c,1419 :: 		string_cpyc(bufferEeprom, CAN_TPV);
0x48A8	0x0E15      	MOVLW       _bufferEeprom
0x48AA	0x6F23      	MOVWF       FARG_string_cpyc_destino, 1
0x48AC	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x48AE	0x6F24      	MOVWF       FARG_string_cpyc_destino+1, 1
0x48B0	0x0EBC      	MOVLW       _CAN_TPV
0x48B2	0x6F25      	MOVWF       FARG_string_cpyc_origen, 1
0x48B4	0x0EA3      	MOVLW       hi_addr(_CAN_TPV)
0x48B6	0x6F26      	MOVWF       FARG_string_cpyc_origen+1, 1
0x48B8	0x0E00      	MOVLW       higher_addr(_CAN_TPV)
0x48BA	0x6F27      	MOVWF       FARG_string_cpyc_origen+2, 1
0x48BC	0xF014EC09  	CALL        _string_cpyc, 0
;Expendedora.c,1420 :: 		string_addc(bufferEeprom, CAN_RTC);
0x48C0	0x0E15      	MOVLW       _bufferEeprom
0x48C2	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x48C4	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x48C6	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x48C8	0x0EF8      	MOVLW       _CAN_RTC
0x48CA	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x48CC	0x0EA3      	MOVLW       hi_addr(_CAN_RTC)
0x48CE	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x48D0	0x0E00      	MOVLW       higher_addr(_CAN_RTC)
0x48D2	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x48D4	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,1421 :: 		string_addc(bufferEeprom, CAN_TABLE_GET);
0x48D8	0x0E15      	MOVLW       _bufferEeprom
0x48DA	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x48DC	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x48DE	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x48E0	0x0E00      	MOVLW       _CAN_TABLE_GET
0x48E2	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x48E4	0x0EA4      	MOVLW       hi_addr(_CAN_TABLE_GET)
0x48E6	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x48E8	0x0E00      	MOVLW       higher_addr(_CAN_TABLE_GET)
0x48EA	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x48EC	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,1422 :: 		string_add(bufferEeprom, myRTC.time);
0x48F0	0x0E15      	MOVLW       _bufferEeprom
0x48F2	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x48F4	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x48F6	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x48F8	0x0E01      	MOVLW       _myRTC+7
0x48FA	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x48FC	0x0E04      	MOVLW       hi_addr(_myRTC+7)
0x48FE	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x4900	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,1423 :: 		string_addc(bufferEeprom, CAN_MODULE);
0x4904	0x0E15      	MOVLW       _bufferEeprom
0x4906	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x4908	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x490A	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x490C	0x0E1E      	MOVLW       _CAN_MODULE
0x490E	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x4910	0x0EA4      	MOVLW       hi_addr(_CAN_MODULE)
0x4912	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x4914	0x0E00      	MOVLW       higher_addr(_CAN_MODULE)
0x4916	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x4918	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,1424 :: 		numToHex(can.id, msjConst, 1);
0x491C	0xF523C355  	MOVFF       _can+12, FARG_numToHex_valor
0x4920	0x0E00      	MOVLW       0
0x4922	0x6F24      	MOVWF       FARG_numToHex_valor+1, 1
0x4924	0x6F25      	MOVWF       FARG_numToHex_valor+2, 1
0x4926	0x6F26      	MOVWF       FARG_numToHex_valor+3, 1
0x4928	0x0E05      	MOVLW       _msjConst
0x492A	0x6F27      	MOVWF       FARG_numToHex_cadena, 1
0x492C	0x0E03      	MOVLW       hi_addr(_msjConst)
0x492E	0x6F28      	MOVWF       FARG_numToHex_cadena+1, 1
0x4930	0x0E01      	MOVLW       1
0x4932	0x6F29      	MOVWF       FARG_numToHex_bytes, 1
0x4934	0xF016EC51  	CALL        _numToHex, 0
;Expendedora.c,1425 :: 		string_add(bufferEeprom, msjConst);
0x4938	0x0E15      	MOVLW       _bufferEeprom
0x493A	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x493C	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x493E	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x4940	0x0E05      	MOVLW       _msjConst
0x4942	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x4944	0x0E03      	MOVLW       hi_addr(_msjConst)
0x4946	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x4948	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,1426 :: 		buffer_save_send(true, bufferEeprom);
0x494C	0x0E01      	MOVLW       1
0x494E	0x6F23      	MOVWF       FARG_buffer_save_send_guardar, 1
0x4950	0x0E15      	MOVLW       _bufferEeprom
0x4952	0x6F24      	MOVWF       FARG_buffer_save_send_buffer, 1
0x4954	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x4956	0x6F25      	MOVWF       FARG_buffer_save_send_buffer+1, 1
0x4958	0xF014ECA9  	CALL        _buffer_save_send, 0
;Expendedora.c,1430 :: 		}
L_can_user_read_message818:
L_can_user_read_message817:
;Expendedora.c,1431 :: 		}else if(string_cmpnc(CAN_PREPAGO, &can.rxBuffer[sizeTotal], sizeKey)){
0x495C	0xF034EFDA  	GOTO        L_can_user_read_message819
L_can_user_read_message815:
0x4960	0x0ED8      	MOVLW       _CAN_PREPAGO
0x4962	0x0105      	MOVLB       5
0x4964	0x6F23      	MOVWF       FARG_string_cmpnc_text1, 1
0x4966	0x0EA3      	MOVLW       hi_addr(_CAN_PREPAGO)
0x4968	0x6F24      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x496A	0x0E00      	MOVLW       higher_addr(_CAN_PREPAGO)
0x496C	0x6F25      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x496E	0x0EB4      	MOVLW       _can+107
0x4970	0x6F26      	MOVWF       FARG_string_cmpnc_text2, 1
0x4972	0x0E03      	MOVLW       hi_addr(_can+107)
0x4974	0x6F27      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x4976	0x5106      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x4978	0x2726      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x497A	0xB0D8      	BTFSC       STATUS, 0 
0x497C	0x2B27      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x497E	0xF528C505  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x4982	0xF013EC78  	CALL        _string_cmpnc, 0
0x4986	0x5200      	MOVF        R0, 1 
0x4988	0xB4D8      	BTFSC       STATUS, 2 
0x498A	0xF02AEFD8  	GOTO        L_can_user_read_message820
;Expendedora.c,1433 :: 		sizeTotal += sizeKey;
0x498E	0x5105      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x4990	0x2506      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x4992	0x6E00      	MOVWF       R0 
0x4994	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1434 :: 		sizeKey = 6;  //3 Bytes en hexadecimal
0x4998	0x0E06      	MOVLW       6
0x499A	0x6F05      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Expendedora.c,1435 :: 		string_cpyn(msjConst, &can.rxBuffer[sizeTotal], sizeKey);
0x499C	0x0E05      	MOVLW       _msjConst
0x499E	0x6F23      	MOVWF       FARG_string_cpyn_destino, 1
0x49A0	0x0E03      	MOVLW       hi_addr(_msjConst)
0x49A2	0x6F24      	MOVWF       FARG_string_cpyn_destino+1, 1
0x49A4	0x0EB4      	MOVLW       _can+107
0x49A6	0x6F25      	MOVWF       FARG_string_cpyn_origen, 1
0x49A8	0x0E03      	MOVLW       hi_addr(_can+107)
0x49AA	0x6F26      	MOVWF       FARG_string_cpyn_origen+1, 1
0x49AC	0x5000      	MOVF        R0, 0 
0x49AE	0x2725      	ADDWF       FARG_string_cpyn_origen, 1, 1
0x49B0	0xB0D8      	BTFSC       STATUS, 0 
0x49B2	0x2B26      	INCF        FARG_string_cpyn_origen+1, 1, 1
0x49B4	0x0E06      	MOVLW       6
0x49B6	0x6F27      	MOVWF       FARG_string_cpyn_size, 1
0x49B8	0xF014EC39  	CALL        _string_cpyn, 0
;Expendedora.c,1436 :: 		idConsulta = hexToNum(msjConst);
0x49BC	0x0E05      	MOVLW       _msjConst
0x49BE	0x6F23      	MOVWF       FARG_hexToNum_hex, 1
0x49C0	0x0E03      	MOVLW       hi_addr(_msjConst)
0x49C2	0x6F24      	MOVWF       FARG_hexToNum_hex+1, 1
0x49C4	0xF010EC5E  	CALL        _hexToNum, 0
0x49C8	0xF50BC000  	MOVFF       R0, can_user_read_message_idConsulta_L0
0x49CC	0xF50CC001  	MOVFF       R1, can_user_read_message_idConsulta_L0+1
0x49D0	0xF50DC002  	MOVFF       R2, can_user_read_message_idConsulta_L0+2
0x49D4	0xF50EC003  	MOVFF       R3, can_user_read_message_idConsulta_L0+3
;Expendedora.c,1438 :: 		sizeTotal += sizeKey;
0x49D8	0x5105      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x49DA	0x2506      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x49DC	0x6E00      	MOVWF       R0 
0x49DE	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1439 :: 		sizeKey = sizeof(CAN_REGISTRAR)-1;  //COMANDO 3BYTES
0x49E2	0x0E03      	MOVLW       3
0x49E4	0x6F05      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Expendedora.c,1441 :: 		string_cpyn(msjConst, &can.rxBuffer[sizeTotal+sizeKey], 4); //4 numeros fila
0x49E6	0x0E05      	MOVLW       _msjConst
0x49E8	0x6F23      	MOVWF       FARG_string_cpyn_destino, 1
0x49EA	0x0E03      	MOVLW       hi_addr(_msjConst)
0x49EC	0x6F24      	MOVWF       FARG_string_cpyn_destino+1, 1
0x49EE	0x0E03      	MOVLW       3
0x49F0	0x2600      	ADDWF       R0, 1 
0x49F2	0x6A01      	CLRF        R1 
0x49F4	0x0E00      	MOVLW       0
0x49F6	0x2201      	ADDWFC      R1, 1 
0x49F8	0x0EB4      	MOVLW       _can+107
0x49FA	0x2400      	ADDWF       R0, 0 
0x49FC	0x6F25      	MOVWF       FARG_string_cpyn_origen, 1
0x49FE	0x0E03      	MOVLW       hi_addr(_can+107)
0x4A00	0x2001      	ADDWFC      R1, 0 
0x4A02	0x6F26      	MOVWF       FARG_string_cpyn_origen+1, 1
0x4A04	0x0E04      	MOVLW       4
0x4A06	0x6F27      	MOVWF       FARG_string_cpyn_size, 1
0x4A08	0xF014EC39  	CALL        _string_cpyn, 0
;Expendedora.c,1442 :: 		fila = stringToNum(msjConst);
0x4A0C	0x0E05      	MOVLW       _msjConst
0x4A0E	0x6F23      	MOVWF       FARG_stringToNum_cadena, 1
0x4A10	0x0E03      	MOVLW       hi_addr(_msjConst)
0x4A12	0x6F24      	MOVWF       FARG_stringToNum_cadena+1, 1
0x4A14	0xF013EC99  	CALL        _stringToNum, 0
0x4A18	0xF507C000  	MOVFF       R0, can_user_read_message_fila_L0
0x4A1C	0xF508C001  	MOVFF       R1, can_user_read_message_fila_L0+1
;Expendedora.c,1445 :: 		if(string_cmpnc(CAN_REGISTRAR, &can.rxBuffer[sizeTotal], sizeKey)){
0x4A20	0x0E10      	MOVLW       _CAN_REGISTRAR
0x4A22	0x6F23      	MOVWF       FARG_string_cmpnc_text1, 1
0x4A24	0x0EA4      	MOVLW       hi_addr(_CAN_REGISTRAR)
0x4A26	0x6F24      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x4A28	0x0E00      	MOVLW       higher_addr(_CAN_REGISTRAR)
0x4A2A	0x6F25      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x4A2C	0x0EB4      	MOVLW       _can+107
0x4A2E	0x6F26      	MOVWF       FARG_string_cmpnc_text2, 1
0x4A30	0x0E03      	MOVLW       hi_addr(_can+107)
0x4A32	0x6F27      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x4A34	0x5106      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x4A36	0x2726      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x4A38	0xB0D8      	BTFSC       STATUS, 0 
0x4A3A	0x2B27      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x4A3C	0xF528C505  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x4A40	0xF013EC78  	CALL        _string_cmpnc, 0
0x4A44	0x5200      	MOVF        R0, 1 
0x4A46	0xB4D8      	BTFSC       STATUS, 2 
0x4A48	0xD103      	BRA         L_can_user_read_message821
;Expendedora.c,1447 :: 		sizeTotal += sizeKey;
0x4A4A	0x5105      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x4A4C	0x2506      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x4A4E	0x6E00      	MOVWF       R0 
0x4A50	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1448 :: 		sizeKey = 4;  //4 POR LA FILA
0x4A54	0x0E04      	MOVLW       4
0x4A56	0x6F05      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Expendedora.c,1450 :: 		idNew = idConsulta;
0x4A58	0xF50FC50B  	MOVFF       can_user_read_message_idConsulta_L0, can_user_read_message_idNew_L0
0x4A5C	0xF510C50C  	MOVFF       can_user_read_message_idConsulta_L0+1, can_user_read_message_idNew_L0+1
0x4A60	0xF511C50D  	MOVFF       can_user_read_message_idConsulta_L0+2, can_user_read_message_idNew_L0+2
0x4A64	0xF512C50E  	MOVFF       can_user_read_message_idConsulta_L0+3, can_user_read_message_idNew_L0+3
;Expendedora.c,1452 :: 		sizeTotal += sizeKey;
0x4A68	0x0E04      	MOVLW       4
0x4A6A	0x2600      	ADDWF       R0, 1 
0x4A6C	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1453 :: 		sizeKey = 8;  //8 Byte
0x4A70	0x0E08      	MOVLW       8
0x4A72	0x6F05      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Expendedora.c,1454 :: 		string_cpyn(msjConst, &can.rxBuffer[sizeTotal], sizeKey);
0x4A74	0x0E05      	MOVLW       _msjConst
0x4A76	0x6F23      	MOVWF       FARG_string_cpyn_destino, 1
0x4A78	0x0E03      	MOVLW       hi_addr(_msjConst)
0x4A7A	0x6F24      	MOVWF       FARG_string_cpyn_destino+1, 1
0x4A7C	0x0EB4      	MOVLW       _can+107
0x4A7E	0x6F25      	MOVWF       FARG_string_cpyn_origen, 1
0x4A80	0x0E03      	MOVLW       hi_addr(_can+107)
0x4A82	0x6F26      	MOVWF       FARG_string_cpyn_origen+1, 1
0x4A84	0x5000      	MOVF        R0, 0 
0x4A86	0x2725      	ADDWF       FARG_string_cpyn_origen, 1, 1
0x4A88	0xB0D8      	BTFSC       STATUS, 0 
0x4A8A	0x2B26      	INCF        FARG_string_cpyn_origen+1, 1, 1
0x4A8C	0x0E08      	MOVLW       8
0x4A8E	0x6F27      	MOVWF       FARG_string_cpyn_size, 1
0x4A90	0xF014EC39  	CALL        _string_cpyn, 0
;Expendedora.c,1455 :: 		nip = hexToNum(msjConst);
0x4A94	0x0E05      	MOVLW       _msjConst
0x4A96	0x6F23      	MOVWF       FARG_hexToNum_hex, 1
0x4A98	0x0E03      	MOVLW       hi_addr(_msjConst)
0x4A9A	0x6F24      	MOVWF       FARG_hexToNum_hex+1, 1
0x4A9C	0xF010EC5E  	CALL        _hexToNum, 0
0x4AA0	0xF517C000  	MOVFF       R0, can_user_read_message_nip_L0
0x4AA4	0xF518C001  	MOVFF       R1, can_user_read_message_nip_L0+1
0x4AA8	0xF519C002  	MOVFF       R2, can_user_read_message_nip_L0+2
0x4AAC	0xF51AC003  	MOVFF       R3, can_user_read_message_nip_L0+3
;Expendedora.c,1457 :: 		sizeTotal += sizeKey;
0x4AB0	0x5105      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x4AB2	0x2506      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x4AB4	0x6E00      	MOVWF       R0 
0x4AB6	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1458 :: 		sizeKey = 8;  //8 Byte
0x4ABA	0x0E08      	MOVLW       8
0x4ABC	0x6F05      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Expendedora.c,1459 :: 		string_cpyn(msjConst, &can.rxBuffer[sizeTotal], sizeKey);
0x4ABE	0x0E05      	MOVLW       _msjConst
0x4AC0	0x6F23      	MOVWF       FARG_string_cpyn_destino, 1
0x4AC2	0x0E03      	MOVLW       hi_addr(_msjConst)
0x4AC4	0x6F24      	MOVWF       FARG_string_cpyn_destino+1, 1
0x4AC6	0x0EB4      	MOVLW       _can+107
0x4AC8	0x6F25      	MOVWF       FARG_string_cpyn_origen, 1
0x4ACA	0x0E03      	MOVLW       hi_addr(_can+107)
0x4ACC	0x6F26      	MOVWF       FARG_string_cpyn_origen+1, 1
0x4ACE	0x5000      	MOVF        R0, 0 
0x4AD0	0x2725      	ADDWF       FARG_string_cpyn_origen, 1, 1
0x4AD2	0xB0D8      	BTFSC       STATUS, 0 
0x4AD4	0x2B26      	INCF        FARG_string_cpyn_origen+1, 1, 1
0x4AD6	0x0E08      	MOVLW       8
0x4AD8	0x6F27      	MOVWF       FARG_string_cpyn_size, 1
0x4ADA	0xF014EC39  	CALL        _string_cpyn, 0
;Expendedora.c,1460 :: 		saldo = hexToNum(msjConst);
0x4ADE	0x0E05      	MOVLW       _msjConst
0x4AE0	0x6F23      	MOVWF       FARG_hexToNum_hex, 1
0x4AE2	0x0E03      	MOVLW       hi_addr(_msjConst)
0x4AE4	0x6F24      	MOVWF       FARG_hexToNum_hex+1, 1
0x4AE6	0xF010EC5E  	CALL        _hexToNum, 0
0x4AEA	0xF51BC000  	MOVFF       R0, can_user_read_message_saldo_L0
0x4AEE	0xF51CC001  	MOVFF       R1, can_user_read_message_saldo_L0+1
0x4AF2	0xF51DC002  	MOVFF       R2, can_user_read_message_saldo_L0+2
0x4AF6	0xF51EC003  	MOVFF       R3, can_user_read_message_saldo_L0+3
;Expendedora.c,1462 :: 		sizeTotal += sizeKey;
0x4AFA	0x5105      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x4AFC	0x2506      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x4AFE	0x6E00      	MOVWF       R0 
0x4B00	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1463 :: 		sizeKey = 1;  //1 Byte
0x4B04	0x0E01      	MOVLW       1
0x4B06	0x6F05      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Expendedora.c,1464 :: 		estatus = can.rxBuffer[sizeTotal];
0x4B08	0x0EB4      	MOVLW       _can+107
0x4B0A	0x6EE9      	MOVWF       FSR0L 
0x4B0C	0x0E03      	MOVLW       hi_addr(_can+107)
0x4B0E	0x6EEA      	MOVWF       FSR0H 
0x4B10	0x5000      	MOVF        R0, 0 
0x4B12	0x26E9      	ADDWF       FSR0L, 1 
0x4B14	0xB0D8      	BTFSC       STATUS, 0 
0x4B16	0x2AEA      	INCF        FSR0H, 1 
0x4B18	0xF50ACFEE  	MOVFF       POSTINC0, can_user_read_message_estatus_L0
;Expendedora.c,1466 :: 		if(mysql_read(tablePrepago, prepagoID, fila, &id) == TABLE_RW_NO_EXIST_ROW){
0x4B1C	0x0E74      	MOVLW       _tablePrepago
0x4B1E	0x6F31      	MOVWF       FARG_mysql_read_name, 1
0x4B20	0x0E01      	MOVLW       hi_addr(_tablePrepago)
0x4B22	0x6F32      	MOVWF       FARG_mysql_read_name+1, 1
0x4B24	0x0E90      	MOVLW       _prepagoId
0x4B26	0x6F33      	MOVWF       FARG_mysql_read_column, 1
0x4B28	0x0E00      	MOVLW       hi_addr(_prepagoId)
0x4B2A	0x6F34      	MOVWF       FARG_mysql_read_column+1, 1
0x4B2C	0xF535C507  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_read_fila
0x4B30	0xF536C508  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_read_fila+1
0x4B34	0x0E13      	MOVLW       can_user_read_message_id_L0
0x4B36	0x6F37      	MOVWF       FARG_mysql_read_result, 1
0x4B38	0x0E05      	MOVLW       hi_addr(can_user_read_message_id_L0)
0x4B3A	0x6F38      	MOVWF       FARG_mysql_read_result+1, 1
0x4B3C	0xF00AECAA  	CALL        _mysql_read, 0
0x4B40	0x5000      	MOVF        R0, 0 
0x4B42	0x0A03      	XORLW       3
0x4B44	0xA4D8      	BTFSS       STATUS, 2 
0x4B46	0xD082      	BRA         L_can_user_read_message822
;Expendedora.c,1467 :: 		if(fila == myTable.rowAct+1){
0x4B48	0x0E01      	MOVLW       1
0x4B4A	0x0103      	MOVLB       3
0x4B4C	0x251D      	ADDWF       Expendedora_myTable+4, 0, 1
0x4B4E	0x6E01      	MOVWF       R1 
0x4B50	0x0E00      	MOVLW       0
0x4B52	0x211E      	ADDWFC      Expendedora_myTable+5, 0, 1
0x4B54	0x6E02      	MOVWF       R2 
0x4B56	0x0105      	MOVLB       5
0x4B58	0x5108      	MOVF        can_user_read_message_fila_L0+1, 0, 1
0x4B5A	0x1802      	XORWF       R2, 0 
0x4B5C	0xE102      	BNZ         L__can_user_read_message1389
0x4B5E	0x5001      	MOVF        R1, 0 
0x4B60	0x1907      	XORWF       can_user_read_message_fila_L0, 0, 1
L__can_user_read_message1389:
0x4B62	0xE174      	BNZ         L_can_user_read_message823
;Expendedora.c,1468 :: 		if(!mysql_write(tablePrepago, prepagoID, -1, idNew, true)){
0x4B64	0x0E74      	MOVLW       _tablePrepago
0x4B66	0x6F23      	MOVWF       FARG_mysql_write_name, 1
0x4B68	0x0E01      	MOVLW       hi_addr(_tablePrepago)
0x4B6A	0x6F24      	MOVWF       FARG_mysql_write_name+1, 1
0x4B6C	0x0E90      	MOVLW       _prepagoId
0x4B6E	0x6F25      	MOVWF       FARG_mysql_write_column, 1
0x4B70	0x0E00      	MOVLW       hi_addr(_prepagoId)
0x4B72	0x6F26      	MOVWF       FARG_mysql_write_column+1, 1
0x4B74	0x0EFF      	MOVLW       255
0x4B76	0x6F27      	MOVWF       FARG_mysql_write_fila, 1
0x4B78	0x0EFF      	MOVLW       255
0x4B7A	0x6F28      	MOVWF       FARG_mysql_write_fila+1, 1
0x4B7C	0xF529C50F  	MOVFF       can_user_read_message_idNew_L0, FARG_mysql_write_value
0x4B80	0xF52AC510  	MOVFF       can_user_read_message_idNew_L0+1, FARG_mysql_write_value+1
0x4B84	0xF52BC511  	MOVFF       can_user_read_message_idNew_L0+2, FARG_mysql_write_value+2
0x4B88	0xF52CC512  	MOVFF       can_user_read_message_idNew_L0+3, FARG_mysql_write_value+3
0x4B8C	0x0E01      	MOVLW       1
0x4B8E	0x6F2D      	MOVWF       FARG_mysql_write_endWrite, 1
0x4B90	0xF012ECDC  	CALL        _mysql_write, 0
0x4B94	0x5200      	MOVF        R0, 1 
0x4B96	0xE15A      	BNZ         L_can_user_read_message824
;Expendedora.c,1470 :: 		mysql_write(tablePrepago, prepagoNip, fila, nip, false);
0x4B98	0x0E74      	MOVLW       _tablePrepago
0x4B9A	0x0105      	MOVLB       5
0x4B9C	0x6F23      	MOVWF       FARG_mysql_write_name, 1
0x4B9E	0x0E01      	MOVLW       hi_addr(_tablePrepago)
0x4BA0	0x6F24      	MOVWF       FARG_mysql_write_name+1, 1
0x4BA2	0x0E93      	MOVLW       _prepagoNip
0x4BA4	0x6F25      	MOVWF       FARG_mysql_write_column, 1
0x4BA6	0x0E00      	MOVLW       hi_addr(_prepagoNip)
0x4BA8	0x6F26      	MOVWF       FARG_mysql_write_column+1, 1
0x4BAA	0xF527C507  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_fila
0x4BAE	0xF528C508  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_fila+1
0x4BB2	0xF529C517  	MOVFF       can_user_read_message_nip_L0, FARG_mysql_write_value
0x4BB6	0xF52AC518  	MOVFF       can_user_read_message_nip_L0+1, FARG_mysql_write_value+1
0x4BBA	0xF52BC519  	MOVFF       can_user_read_message_nip_L0+2, FARG_mysql_write_value+2
0x4BBE	0xF52CC51A  	MOVFF       can_user_read_message_nip_L0+3, FARG_mysql_write_value+3
0x4BC2	0x6B2D      	CLRF        FARG_mysql_write_endWrite, 1
0x4BC4	0xF012ECDC  	CALL        _mysql_write, 0
;Expendedora.c,1471 :: 		mysql_write(tablePrepago, prepagoSaldo, fila, saldo, false);
0x4BC8	0x0E74      	MOVLW       _tablePrepago
0x4BCA	0x0105      	MOVLB       5
0x4BCC	0x6F23      	MOVWF       FARG_mysql_write_name, 1
0x4BCE	0x0E01      	MOVLW       hi_addr(_tablePrepago)
0x4BD0	0x6F24      	MOVWF       FARG_mysql_write_name+1, 1
0x4BD2	0x0EA4      	MOVLW       _prepagoSaldo
0x4BD4	0x6F25      	MOVWF       FARG_mysql_write_column, 1
0x4BD6	0x0E01      	MOVLW       hi_addr(_prepagoSaldo)
0x4BD8	0x6F26      	MOVWF       FARG_mysql_write_column+1, 1
0x4BDA	0xF527C507  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_fila
0x4BDE	0xF528C508  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_fila+1
0x4BE2	0xF529C51B  	MOVFF       can_user_read_message_saldo_L0, FARG_mysql_write_value
0x4BE6	0xF52AC51C  	MOVFF       can_user_read_message_saldo_L0+1, FARG_mysql_write_value+1
0x4BEA	0xF52BC51D  	MOVFF       can_user_read_message_saldo_L0+2, FARG_mysql_write_value+2
0x4BEE	0xF52CC51E  	MOVFF       can_user_read_message_saldo_L0+3, FARG_mysql_write_value+3
0x4BF2	0x6B2D      	CLRF        FARG_mysql_write_endWrite, 1
0x4BF4	0xF012ECDC  	CALL        _mysql_write, 0
;Expendedora.c,1472 :: 		mysql_write(tablePrepago, prepagoEstatus, fila, estatus, false);
0x4BF8	0x0E74      	MOVLW       _tablePrepago
0x4BFA	0x0105      	MOVLB       5
0x4BFC	0x6F23      	MOVWF       FARG_mysql_write_name, 1
0x4BFE	0x0E01      	MOVLW       hi_addr(_tablePrepago)
0x4C00	0x6F24      	MOVWF       FARG_mysql_write_name+1, 1
0x4C02	0x0E8C      	MOVLW       _prepagoEstatus
0x4C04	0x6F25      	MOVWF       FARG_mysql_write_column, 1
0x4C06	0x0E01      	MOVLW       hi_addr(_prepagoEstatus)
0x4C08	0x6F26      	MOVWF       FARG_mysql_write_column+1, 1
0x4C0A	0xF527C507  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_fila
0x4C0E	0xF528C508  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_fila+1
0x4C12	0xF529C50A  	MOVFF       can_user_read_message_estatus_L0, FARG_mysql_write_value
0x4C16	0x0E00      	MOVLW       0
0x4C18	0x6F2A      	MOVWF       FARG_mysql_write_value+1, 1
0x4C1A	0x6F2B      	MOVWF       FARG_mysql_write_value+2, 1
0x4C1C	0x6F2C      	MOVWF       FARG_mysql_write_value+3, 1
0x4C1E	0x6B2D      	CLRF        FARG_mysql_write_endWrite, 1
0x4C20	0xF012ECDC  	CALL        _mysql_write, 0
;Expendedora.c,1473 :: 		mysql_write_string(tablePrepago, prepagoDate, fila, "", false);
0x4C24	0x0E74      	MOVLW       _tablePrepago
0x4C26	0x0105      	MOVLB       5
0x4C28	0x6F23      	MOVWF       FARG_mysql_write_string_name, 1
0x4C2A	0x0E01      	MOVLW       hi_addr(_tablePrepago)
0x4C2C	0x6F24      	MOVWF       FARG_mysql_write_string_name+1, 1
0x4C2E	0x0E24      	MOVLW       _prepagoDate
0x4C30	0x6F25      	MOVWF       FARG_mysql_write_string_column, 1
0x4C32	0x0E02      	MOVLW       hi_addr(_prepagoDate)
0x4C34	0x6F26      	MOVWF       FARG_mysql_write_string_column+1, 1
0x4C36	0xF527C507  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_string_fila
0x4C3A	0xF528C508  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_string_fila+1
0x4C3E	0x0E2D      	MOVLW       ?lstr28_Expendedora
0x4C40	0x6F29      	MOVWF       FARG_mysql_write_string_texto, 1
0x4C42	0x0E02      	MOVLW       hi_addr(?lstr28_Expendedora)
0x4C44	0x6F2A      	MOVWF       FARG_mysql_write_string_texto+1, 1
0x4C46	0x6B2B      	CLRF        FARG_mysql_write_string_endWrite, 1
0x4C48	0xF00DEC62  	CALL        _mysql_write_string, 0
;Expendedora.c,1477 :: 		}
L_can_user_read_message824:
;Expendedora.c,1478 :: 		}
L_can_user_read_message823:
;Expendedora.c,1479 :: 		}
L_can_user_read_message822:
;Expendedora.c,1480 :: 		}else if(string_cmpnc(CAN_ACTUALIZAR, &can.rxBuffer[sizeTotal], sizeKey)){
0x4C4C	0xF02AEFD6  	GOTO        L_can_user_read_message825
L_can_user_read_message821:
0x4C50	0x0E14      	MOVLW       _CAN_ACTUALIZAR
0x4C52	0x0105      	MOVLB       5
0x4C54	0x6F23      	MOVWF       FARG_string_cmpnc_text1, 1
0x4C56	0x0EA4      	MOVLW       hi_addr(_CAN_ACTUALIZAR)
0x4C58	0x6F24      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x4C5A	0x0E00      	MOVLW       higher_addr(_CAN_ACTUALIZAR)
0x4C5C	0x6F25      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x4C5E	0x0EB4      	MOVLW       _can+107
0x4C60	0x6F26      	MOVWF       FARG_string_cmpnc_text2, 1
0x4C62	0x0E03      	MOVLW       hi_addr(_can+107)
0x4C64	0x6F27      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x4C66	0x5106      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x4C68	0x2726      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x4C6A	0xB0D8      	BTFSC       STATUS, 0 
0x4C6C	0x2B27      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x4C6E	0xF528C505  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x4C72	0xF013EC78  	CALL        _string_cmpnc, 0
0x4C76	0x5200      	MOVF        R0, 1 
0x4C78	0xB4D8      	BTFSC       STATUS, 2 
0x4C7A	0xD105      	BRA         L_can_user_read_message826
;Expendedora.c,1482 :: 		sizeTotal += sizeKey;
0x4C7C	0x5105      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x4C7E	0x2506      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x4C80	0x6E00      	MOVWF       R0 
0x4C82	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1483 :: 		sizeKey = 4;  //4 POR LA FILA
0x4C86	0x0E04      	MOVLW       4
0x4C88	0x6F05      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Expendedora.c,1485 :: 		sizeTotal += sizeKey;
0x4C8A	0x0E04      	MOVLW       4
0x4C8C	0x2600      	ADDWF       R0, 1 
0x4C8E	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1486 :: 		sizeKey = 6;  //3 Bytes en hexadecimal
0x4C92	0x0E06      	MOVLW       6
0x4C94	0x6F05      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Expendedora.c,1487 :: 		string_cpyn(msjConst, &can.rxBuffer[sizeTotal], sizeKey);
0x4C96	0x0E05      	MOVLW       _msjConst
0x4C98	0x6F23      	MOVWF       FARG_string_cpyn_destino, 1
0x4C9A	0x0E03      	MOVLW       hi_addr(_msjConst)
0x4C9C	0x6F24      	MOVWF       FARG_string_cpyn_destino+1, 1
0x4C9E	0x0EB4      	MOVLW       _can+107
0x4CA0	0x6F25      	MOVWF       FARG_string_cpyn_origen, 1
0x4CA2	0x0E03      	MOVLW       hi_addr(_can+107)
0x4CA4	0x6F26      	MOVWF       FARG_string_cpyn_origen+1, 1
0x4CA6	0x5000      	MOVF        R0, 0 
0x4CA8	0x2725      	ADDWF       FARG_string_cpyn_origen, 1, 1
0x4CAA	0xB0D8      	BTFSC       STATUS, 0 
0x4CAC	0x2B26      	INCF        FARG_string_cpyn_origen+1, 1, 1
0x4CAE	0x0E06      	MOVLW       6
0x4CB0	0x6F27      	MOVWF       FARG_string_cpyn_size, 1
0x4CB2	0xF014EC39  	CALL        _string_cpyn, 0
;Expendedora.c,1488 :: 		idNew = hexToNum(msjConst);
0x4CB6	0x0E05      	MOVLW       _msjConst
0x4CB8	0x6F23      	MOVWF       FARG_hexToNum_hex, 1
0x4CBA	0x0E03      	MOVLW       hi_addr(_msjConst)
0x4CBC	0x6F24      	MOVWF       FARG_hexToNum_hex+1, 1
0x4CBE	0xF010EC5E  	CALL        _hexToNum, 0
0x4CC2	0xF50FC000  	MOVFF       R0, can_user_read_message_idNew_L0
0x4CC6	0xF510C001  	MOVFF       R1, can_user_read_message_idNew_L0+1
0x4CCA	0xF511C002  	MOVFF       R2, can_user_read_message_idNew_L0+2
0x4CCE	0xF512C003  	MOVFF       R3, can_user_read_message_idNew_L0+3
;Expendedora.c,1490 :: 		sizeTotal += sizeKey;
0x4CD2	0x5105      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x4CD4	0x2506      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x4CD6	0x6E00      	MOVWF       R0 
0x4CD8	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1491 :: 		sizeKey = 8;  //8 Byte
0x4CDC	0x0E08      	MOVLW       8
0x4CDE	0x6F05      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Expendedora.c,1492 :: 		string_cpyn(msjConst, &can.rxBuffer[sizeTotal], sizeKey);
0x4CE0	0x0E05      	MOVLW       _msjConst
0x4CE2	0x6F23      	MOVWF       FARG_string_cpyn_destino, 1
0x4CE4	0x0E03      	MOVLW       hi_addr(_msjConst)
0x4CE6	0x6F24      	MOVWF       FARG_string_cpyn_destino+1, 1
0x4CE8	0x0EB4      	MOVLW       _can+107
0x4CEA	0x6F25      	MOVWF       FARG_string_cpyn_origen, 1
0x4CEC	0x0E03      	MOVLW       hi_addr(_can+107)
0x4CEE	0x6F26      	MOVWF       FARG_string_cpyn_origen+1, 1
0x4CF0	0x5000      	MOVF        R0, 0 
0x4CF2	0x2725      	ADDWF       FARG_string_cpyn_origen, 1, 1
0x4CF4	0xB0D8      	BTFSC       STATUS, 0 
0x4CF6	0x2B26      	INCF        FARG_string_cpyn_origen+1, 1, 1
0x4CF8	0x0E08      	MOVLW       8
0x4CFA	0x6F27      	MOVWF       FARG_string_cpyn_size, 1
0x4CFC	0xF014EC39  	CALL        _string_cpyn, 0
;Expendedora.c,1493 :: 		nip = hexToNum(msjConst);
0x4D00	0x0E05      	MOVLW       _msjConst
0x4D02	0x6F23      	MOVWF       FARG_hexToNum_hex, 1
0x4D04	0x0E03      	MOVLW       hi_addr(_msjConst)
0x4D06	0x6F24      	MOVWF       FARG_hexToNum_hex+1, 1
0x4D08	0xF010EC5E  	CALL        _hexToNum, 0
0x4D0C	0xF517C000  	MOVFF       R0, can_user_read_message_nip_L0
0x4D10	0xF518C001  	MOVFF       R1, can_user_read_message_nip_L0+1
0x4D14	0xF519C002  	MOVFF       R2, can_user_read_message_nip_L0+2
0x4D18	0xF51AC003  	MOVFF       R3, can_user_read_message_nip_L0+3
;Expendedora.c,1495 :: 		sizeTotal += sizeKey;
0x4D1C	0x5105      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x4D1E	0x2506      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x4D20	0x6E00      	MOVWF       R0 
0x4D22	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1496 :: 		sizeKey = 8;  //8 Byte
0x4D26	0x0E08      	MOVLW       8
0x4D28	0x6F05      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Expendedora.c,1497 :: 		string_cpyn(msjConst, &can.rxBuffer[sizeTotal], sizeKey);
0x4D2A	0x0E05      	MOVLW       _msjConst
0x4D2C	0x6F23      	MOVWF       FARG_string_cpyn_destino, 1
0x4D2E	0x0E03      	MOVLW       hi_addr(_msjConst)
0x4D30	0x6F24      	MOVWF       FARG_string_cpyn_destino+1, 1
0x4D32	0x0EB4      	MOVLW       _can+107
0x4D34	0x6F25      	MOVWF       FARG_string_cpyn_origen, 1
0x4D36	0x0E03      	MOVLW       hi_addr(_can+107)
0x4D38	0x6F26      	MOVWF       FARG_string_cpyn_origen+1, 1
0x4D3A	0x5000      	MOVF        R0, 0 
0x4D3C	0x2725      	ADDWF       FARG_string_cpyn_origen, 1, 1
0x4D3E	0xB0D8      	BTFSC       STATUS, 0 
0x4D40	0x2B26      	INCF        FARG_string_cpyn_origen+1, 1, 1
0x4D42	0x0E08      	MOVLW       8
0x4D44	0x6F27      	MOVWF       FARG_string_cpyn_size, 1
0x4D46	0xF014EC39  	CALL        _string_cpyn, 0
;Expendedora.c,1498 :: 		saldo = hexToNum(msjConst);
0x4D4A	0x0E05      	MOVLW       _msjConst
0x4D4C	0x6F23      	MOVWF       FARG_hexToNum_hex, 1
0x4D4E	0x0E03      	MOVLW       hi_addr(_msjConst)
0x4D50	0x6F24      	MOVWF       FARG_hexToNum_hex+1, 1
0x4D52	0xF010EC5E  	CALL        _hexToNum, 0
0x4D56	0xF51BC000  	MOVFF       R0, can_user_read_message_saldo_L0
0x4D5A	0xF51CC001  	MOVFF       R1, can_user_read_message_saldo_L0+1
0x4D5E	0xF51DC002  	MOVFF       R2, can_user_read_message_saldo_L0+2
0x4D62	0xF51EC003  	MOVFF       R3, can_user_read_message_saldo_L0+3
;Expendedora.c,1500 :: 		sizeTotal += sizeKey;
0x4D66	0x5105      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x4D68	0x2506      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x4D6A	0x6E00      	MOVWF       R0 
0x4D6C	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1501 :: 		sizeKey = 1;  //1 Byte
0x4D70	0x0E01      	MOVLW       1
0x4D72	0x6F05      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Expendedora.c,1502 :: 		estatus = can.rxBuffer[sizeTotal];
0x4D74	0x0EB4      	MOVLW       _can+107
0x4D76	0x6EE9      	MOVWF       FSR0L 
0x4D78	0x0E03      	MOVLW       hi_addr(_can+107)
0x4D7A	0x6EEA      	MOVWF       FSR0H 
0x4D7C	0x5000      	MOVF        R0, 0 
0x4D7E	0x26E9      	ADDWF       FSR0L, 1 
0x4D80	0xB0D8      	BTFSC       STATUS, 0 
0x4D82	0x2AEA      	INCF        FSR0H, 1 
0x4D84	0xF50ACFEE  	MOVFF       POSTINC0, can_user_read_message_estatus_L0
;Expendedora.c,1505 :: 		if(!mysql_read(tablePrepago, prepagoID, fila, &id)){
0x4D88	0x0E74      	MOVLW       _tablePrepago
0x4D8A	0x6F31      	MOVWF       FARG_mysql_read_name, 1
0x4D8C	0x0E01      	MOVLW       hi_addr(_tablePrepago)
0x4D8E	0x6F32      	MOVWF       FARG_mysql_read_name+1, 1
0x4D90	0x0E90      	MOVLW       _prepagoId
0x4D92	0x6F33      	MOVWF       FARG_mysql_read_column, 1
0x4D94	0x0E00      	MOVLW       hi_addr(_prepagoId)
0x4D96	0x6F34      	MOVWF       FARG_mysql_read_column+1, 1
0x4D98	0xF535C507  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_read_fila
0x4D9C	0xF536C508  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_read_fila+1
0x4DA0	0x0E13      	MOVLW       can_user_read_message_id_L0
0x4DA2	0x6F37      	MOVWF       FARG_mysql_read_result, 1
0x4DA4	0x0E05      	MOVLW       hi_addr(can_user_read_message_id_L0)
0x4DA6	0x6F38      	MOVWF       FARG_mysql_read_result+1, 1
0x4DA8	0xF00AECAA  	CALL        _mysql_read, 0
0x4DAC	0x5200      	MOVF        R0, 1 
0x4DAE	0xE16A      	BNZ         L_can_user_read_message827
;Expendedora.c,1506 :: 		if(id == idConsulta){
0x4DB0	0x0105      	MOVLB       5
0x4DB2	0x5116      	MOVF        can_user_read_message_id_L0+3, 0, 1
0x4DB4	0x190E      	XORWF       can_user_read_message_idConsulta_L0+3, 0, 1
0x4DB6	0xE108      	BNZ         L__can_user_read_message1390
0x4DB8	0x5115      	MOVF        can_user_read_message_id_L0+2, 0, 1
0x4DBA	0x190D      	XORWF       can_user_read_message_idConsulta_L0+2, 0, 1
0x4DBC	0xE105      	BNZ         L__can_user_read_message1390
0x4DBE	0x5114      	MOVF        can_user_read_message_id_L0+1, 0, 1
0x4DC0	0x190C      	XORWF       can_user_read_message_idConsulta_L0+1, 0, 1
0x4DC2	0xE102      	BNZ         L__can_user_read_message1390
0x4DC4	0x5113      	MOVF        can_user_read_message_id_L0, 0, 1
0x4DC6	0x190B      	XORWF       can_user_read_message_idConsulta_L0, 0, 1
L__can_user_read_message1390:
0x4DC8	0xE15D      	BNZ         L_can_user_read_message828
;Expendedora.c,1507 :: 		mysql_write(tablePrepago, prepagoID, fila, idNew, false);
0x4DCA	0x0E74      	MOVLW       _tablePrepago
0x4DCC	0x6F23      	MOVWF       FARG_mysql_write_name, 1
0x4DCE	0x0E01      	MOVLW       hi_addr(_tablePrepago)
0x4DD0	0x6F24      	MOVWF       FARG_mysql_write_name+1, 1
0x4DD2	0x0E90      	MOVLW       _prepagoId
0x4DD4	0x6F25      	MOVWF       FARG_mysql_write_column, 1
0x4DD6	0x0E00      	MOVLW       hi_addr(_prepagoId)
0x4DD8	0x6F26      	MOVWF       FARG_mysql_write_column+1, 1
0x4DDA	0xF527C507  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_fila
0x4DDE	0xF528C508  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_fila+1
0x4DE2	0xF529C50F  	MOVFF       can_user_read_message_idNew_L0, FARG_mysql_write_value
0x4DE6	0xF52AC510  	MOVFF       can_user_read_message_idNew_L0+1, FARG_mysql_write_value+1
0x4DEA	0xF52BC511  	MOVFF       can_user_read_message_idNew_L0+2, FARG_mysql_write_value+2
0x4DEE	0xF52CC512  	MOVFF       can_user_read_message_idNew_L0+3, FARG_mysql_write_value+3
0x4DF2	0x6B2D      	CLRF        FARG_mysql_write_endWrite, 1
0x4DF4	0xF012ECDC  	CALL        _mysql_write, 0
;Expendedora.c,1508 :: 		mysql_write(tablePrepago, prepagoNip, fila, nip, false);
0x4DF8	0x0E74      	MOVLW       _tablePrepago
0x4DFA	0x0105      	MOVLB       5
0x4DFC	0x6F23      	MOVWF       FARG_mysql_write_name, 1
0x4DFE	0x0E01      	MOVLW       hi_addr(_tablePrepago)
0x4E00	0x6F24      	MOVWF       FARG_mysql_write_name+1, 1
0x4E02	0x0E93      	MOVLW       _prepagoNip
0x4E04	0x6F25      	MOVWF       FARG_mysql_write_column, 1
0x4E06	0x0E00      	MOVLW       hi_addr(_prepagoNip)
0x4E08	0x6F26      	MOVWF       FARG_mysql_write_column+1, 1
0x4E0A	0xF527C507  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_fila
0x4E0E	0xF528C508  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_fila+1
0x4E12	0xF529C517  	MOVFF       can_user_read_message_nip_L0, FARG_mysql_write_value
0x4E16	0xF52AC518  	MOVFF       can_user_read_message_nip_L0+1, FARG_mysql_write_value+1
0x4E1A	0xF52BC519  	MOVFF       can_user_read_message_nip_L0+2, FARG_mysql_write_value+2
0x4E1E	0xF52CC51A  	MOVFF       can_user_read_message_nip_L0+3, FARG_mysql_write_value+3
0x4E22	0x6B2D      	CLRF        FARG_mysql_write_endWrite, 1
0x4E24	0xF012ECDC  	CALL        _mysql_write, 0
;Expendedora.c,1509 :: 		mysql_write(tablePrepago, prepagoSaldo, fila, saldo, false);
0x4E28	0x0E74      	MOVLW       _tablePrepago
0x4E2A	0x0105      	MOVLB       5
0x4E2C	0x6F23      	MOVWF       FARG_mysql_write_name, 1
0x4E2E	0x0E01      	MOVLW       hi_addr(_tablePrepago)
0x4E30	0x6F24      	MOVWF       FARG_mysql_write_name+1, 1
0x4E32	0x0EA4      	MOVLW       _prepagoSaldo
0x4E34	0x6F25      	MOVWF       FARG_mysql_write_column, 1
0x4E36	0x0E01      	MOVLW       hi_addr(_prepagoSaldo)
0x4E38	0x6F26      	MOVWF       FARG_mysql_write_column+1, 1
0x4E3A	0xF527C507  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_fila
0x4E3E	0xF528C508  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_fila+1
0x4E42	0xF529C51B  	MOVFF       can_user_read_message_saldo_L0, FARG_mysql_write_value
0x4E46	0xF52AC51C  	MOVFF       can_user_read_message_saldo_L0+1, FARG_mysql_write_value+1
0x4E4A	0xF52BC51D  	MOVFF       can_user_read_message_saldo_L0+2, FARG_mysql_write_value+2
0x4E4E	0xF52CC51E  	MOVFF       can_user_read_message_saldo_L0+3, FARG_mysql_write_value+3
0x4E52	0x6B2D      	CLRF        FARG_mysql_write_endWrite, 1
0x4E54	0xF012ECDC  	CALL        _mysql_write, 0
;Expendedora.c,1510 :: 		mysql_write(tablePrepago, prepagoEstatus, fila, estatus, false);
0x4E58	0x0E74      	MOVLW       _tablePrepago
0x4E5A	0x0105      	MOVLB       5
0x4E5C	0x6F23      	MOVWF       FARG_mysql_write_name, 1
0x4E5E	0x0E01      	MOVLW       hi_addr(_tablePrepago)
0x4E60	0x6F24      	MOVWF       FARG_mysql_write_name+1, 1
0x4E62	0x0E8C      	MOVLW       _prepagoEstatus
0x4E64	0x6F25      	MOVWF       FARG_mysql_write_column, 1
0x4E66	0x0E01      	MOVLW       hi_addr(_prepagoEstatus)
0x4E68	0x6F26      	MOVWF       FARG_mysql_write_column+1, 1
0x4E6A	0xF527C507  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_fila
0x4E6E	0xF528C508  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_fila+1
0x4E72	0xF529C50A  	MOVFF       can_user_read_message_estatus_L0, FARG_mysql_write_value
0x4E76	0x0E00      	MOVLW       0
0x4E78	0x6F2A      	MOVWF       FARG_mysql_write_value+1, 1
0x4E7A	0x6F2B      	MOVWF       FARG_mysql_write_value+2, 1
0x4E7C	0x6F2C      	MOVWF       FARG_mysql_write_value+3, 1
0x4E7E	0x6B2D      	CLRF        FARG_mysql_write_endWrite, 1
0x4E80	0xF012ECDC  	CALL        _mysql_write, 0
;Expendedora.c,1514 :: 		}
L_can_user_read_message828:
;Expendedora.c,1515 :: 		}
L_can_user_read_message827:
;Expendedora.c,1516 :: 		}else if(string_cmpnc(CAN_CONSULTAR, &can.rxBuffer[sizeTotal], sizeKey)){
0x4E84	0xD393      	BRA         L_can_user_read_message829
L_can_user_read_message826:
0x4E86	0x0EFC      	MOVLW       _CAN_CONSULTAR
0x4E88	0x0105      	MOVLB       5
0x4E8A	0x6F23      	MOVWF       FARG_string_cmpnc_text1, 1
0x4E8C	0x0EA3      	MOVLW       hi_addr(_CAN_CONSULTAR)
0x4E8E	0x6F24      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x4E90	0x0E00      	MOVLW       higher_addr(_CAN_CONSULTAR)
0x4E92	0x6F25      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x4E94	0x0EB4      	MOVLW       _can+107
0x4E96	0x6F26      	MOVWF       FARG_string_cmpnc_text2, 1
0x4E98	0x0E03      	MOVLW       hi_addr(_can+107)
0x4E9A	0x6F27      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x4E9C	0x5106      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x4E9E	0x2726      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x4EA0	0xB0D8      	BTFSC       STATUS, 0 
0x4EA2	0x2B27      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x4EA4	0xF528C505  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x4EA8	0xF013EC78  	CALL        _string_cmpnc, 0
0x4EAC	0x5200      	MOVF        R0, 1 
0x4EAE	0xB4D8      	BTFSC       STATUS, 2 
0x4EB0	0xD0EF      	BRA         L_can_user_read_message830
;Expendedora.c,1518 :: 		sizeTotal += sizeKey;
0x4EB2	0x5105      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x4EB4	0x2706      	ADDWF       can_user_read_message_sizeTotal_L0, 1, 1
;Expendedora.c,1519 :: 		sizeKey = 4;  //4 POR LA FILA
0x4EB6	0x0E04      	MOVLW       4
0x4EB8	0x6F05      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Expendedora.c,1521 :: 		string_cpyc(bufferEeprom, CAN_TPV);
0x4EBA	0x0E15      	MOVLW       _bufferEeprom
0x4EBC	0x6F23      	MOVWF       FARG_string_cpyc_destino, 1
0x4EBE	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x4EC0	0x6F24      	MOVWF       FARG_string_cpyc_destino+1, 1
0x4EC2	0x0EBC      	MOVLW       _CAN_TPV
0x4EC4	0x6F25      	MOVWF       FARG_string_cpyc_origen, 1
0x4EC6	0x0EA3      	MOVLW       hi_addr(_CAN_TPV)
0x4EC8	0x6F26      	MOVWF       FARG_string_cpyc_origen+1, 1
0x4ECA	0x0E00      	MOVLW       higher_addr(_CAN_TPV)
0x4ECC	0x6F27      	MOVWF       FARG_string_cpyc_origen+2, 1
0x4ECE	0xF014EC09  	CALL        _string_cpyc, 0
;Expendedora.c,1522 :: 		string_cpyn(&bufferEeprom[sizeof(CAN_TPV)-1], can.rxBuffer, sizeTotal);
0x4ED2	0x0E18      	MOVLW       _bufferEeprom+3
0x4ED4	0x6F23      	MOVWF       FARG_string_cpyn_destino, 1
0x4ED6	0x0E04      	MOVLW       hi_addr(_bufferEeprom+3)
0x4ED8	0x6F24      	MOVWF       FARG_string_cpyn_destino+1, 1
0x4EDA	0x0EB4      	MOVLW       _can+107
0x4EDC	0x6F25      	MOVWF       FARG_string_cpyn_origen, 1
0x4EDE	0x0E03      	MOVLW       hi_addr(_can+107)
0x4EE0	0x6F26      	MOVWF       FARG_string_cpyn_origen+1, 1
0x4EE2	0xF527C506  	MOVFF       can_user_read_message_sizeTotal_L0, FARG_string_cpyn_size
0x4EE6	0xF014EC39  	CALL        _string_cpyn, 0
;Expendedora.c,1523 :: 		if(!mysql_read(tablePrepago, prepagoID, fila, &id)){
0x4EEA	0x0E74      	MOVLW       _tablePrepago
0x4EEC	0x6F31      	MOVWF       FARG_mysql_read_name, 1
0x4EEE	0x0E01      	MOVLW       hi_addr(_tablePrepago)
0x4EF0	0x6F32      	MOVWF       FARG_mysql_read_name+1, 1
0x4EF2	0x0E90      	MOVLW       _prepagoId
0x4EF4	0x6F33      	MOVWF       FARG_mysql_read_column, 1
0x4EF6	0x0E00      	MOVLW       hi_addr(_prepagoId)
0x4EF8	0x6F34      	MOVWF       FARG_mysql_read_column+1, 1
0x4EFA	0xF535C507  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_read_fila
0x4EFE	0xF536C508  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_read_fila+1
0x4F02	0x0E13      	MOVLW       can_user_read_message_id_L0
0x4F04	0x6F37      	MOVWF       FARG_mysql_read_result, 1
0x4F06	0x0E05      	MOVLW       hi_addr(can_user_read_message_id_L0)
0x4F08	0x6F38      	MOVWF       FARG_mysql_read_result+1, 1
0x4F0A	0xF00AECAA  	CALL        _mysql_read, 0
0x4F0E	0x5200      	MOVF        R0, 1 
0x4F10	0xA4D8      	BTFSS       STATUS, 2 
0x4F12	0xD0B4      	BRA         L_can_user_read_message831
;Expendedora.c,1524 :: 		if(idConsulta == id){
0x4F14	0x0105      	MOVLB       5
0x4F16	0x510E      	MOVF        can_user_read_message_idConsulta_L0+3, 0, 1
0x4F18	0x1916      	XORWF       can_user_read_message_id_L0+3, 0, 1
0x4F1A	0xE108      	BNZ         L__can_user_read_message1391
0x4F1C	0x510D      	MOVF        can_user_read_message_idConsulta_L0+2, 0, 1
0x4F1E	0x1915      	XORWF       can_user_read_message_id_L0+2, 0, 1
0x4F20	0xE105      	BNZ         L__can_user_read_message1391
0x4F22	0x510C      	MOVF        can_user_read_message_idConsulta_L0+1, 0, 1
0x4F24	0x1914      	XORWF       can_user_read_message_id_L0+1, 0, 1
0x4F26	0xE102      	BNZ         L__can_user_read_message1391
0x4F28	0x510B      	MOVF        can_user_read_message_idConsulta_L0, 0, 1
0x4F2A	0x1913      	XORWF       can_user_read_message_id_L0, 0, 1
L__can_user_read_message1391:
0x4F2C	0xA4D8      	BTFSS       STATUS, 2 
0x4F2E	0xD09A      	BRA         L_can_user_read_message832
;Expendedora.c,1525 :: 		mysql_read(tablePrepago, prepagoNip, fila, &nip);
0x4F30	0x0E74      	MOVLW       _tablePrepago
0x4F32	0x6F31      	MOVWF       FARG_mysql_read_name, 1
0x4F34	0x0E01      	MOVLW       hi_addr(_tablePrepago)
0x4F36	0x6F32      	MOVWF       FARG_mysql_read_name+1, 1
0x4F38	0x0E93      	MOVLW       _prepagoNip
0x4F3A	0x6F33      	MOVWF       FARG_mysql_read_column, 1
0x4F3C	0x0E00      	MOVLW       hi_addr(_prepagoNip)
0x4F3E	0x6F34      	MOVWF       FARG_mysql_read_column+1, 1
0x4F40	0xF535C507  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_read_fila
0x4F44	0xF536C508  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_read_fila+1
0x4F48	0x0E17      	MOVLW       can_user_read_message_nip_L0
0x4F4A	0x6F37      	MOVWF       FARG_mysql_read_result, 1
0x4F4C	0x0E05      	MOVLW       hi_addr(can_user_read_message_nip_L0)
0x4F4E	0x6F38      	MOVWF       FARG_mysql_read_result+1, 1
0x4F50	0xF00AECAA  	CALL        _mysql_read, 0
;Expendedora.c,1526 :: 		mysql_read(tablePrepago, prepagoSaldo, fila, &saldo);
0x4F54	0x0E74      	MOVLW       _tablePrepago
0x4F56	0x0105      	MOVLB       5
0x4F58	0x6F31      	MOVWF       FARG_mysql_read_name, 1
0x4F5A	0x0E01      	MOVLW       hi_addr(_tablePrepago)
0x4F5C	0x6F32      	MOVWF       FARG_mysql_read_name+1, 1
0x4F5E	0x0EA4      	MOVLW       _prepagoSaldo
0x4F60	0x6F33      	MOVWF       FARG_mysql_read_column, 1
0x4F62	0x0E01      	MOVLW       hi_addr(_prepagoSaldo)
0x4F64	0x6F34      	MOVWF       FARG_mysql_read_column+1, 1
0x4F66	0xF535C507  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_read_fila
0x4F6A	0xF536C508  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_read_fila+1
0x4F6E	0x0E1B      	MOVLW       can_user_read_message_saldo_L0
0x4F70	0x6F37      	MOVWF       FARG_mysql_read_result, 1
0x4F72	0x0E05      	MOVLW       hi_addr(can_user_read_message_saldo_L0)
0x4F74	0x6F38      	MOVWF       FARG_mysql_read_result+1, 1
0x4F76	0xF00AECAA  	CALL        _mysql_read, 0
;Expendedora.c,1527 :: 		mysql_read_string(tablePrepago, prepagoEstatus, fila, &estatus);
0x4F7A	0x0E74      	MOVLW       _tablePrepago
0x4F7C	0x0105      	MOVLB       5
0x4F7E	0x6F23      	MOVWF       FARG_mysql_read_string_name, 1
0x4F80	0x0E01      	MOVLW       hi_addr(_tablePrepago)
0x4F82	0x6F24      	MOVWF       FARG_mysql_read_string_name+1, 1
0x4F84	0x0E8C      	MOVLW       _prepagoEstatus
0x4F86	0x6F25      	MOVWF       FARG_mysql_read_string_column, 1
0x4F88	0x0E01      	MOVLW       hi_addr(_prepagoEstatus)
0x4F8A	0x6F26      	MOVWF       FARG_mysql_read_string_column+1, 1
0x4F8C	0xF527C507  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_read_string_fila
0x4F90	0xF528C508  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_read_string_fila+1
0x4F94	0x0E0A      	MOVLW       can_user_read_message_estatus_L0
0x4F96	0x6F29      	MOVWF       FARG_mysql_read_string_result, 1
0x4F98	0x0E05      	MOVLW       hi_addr(can_user_read_message_estatus_L0)
0x4F9A	0x6F2A      	MOVWF       FARG_mysql_read_string_result+1, 1
0x4F9C	0xF014EC60  	CALL        _mysql_read_string, 0
;Expendedora.c,1529 :: 		numToHex(nip, msjConst, 4);
0x4FA0	0xF523C517  	MOVFF       can_user_read_message_nip_L0, FARG_numToHex_valor
0x4FA4	0xF524C518  	MOVFF       can_user_read_message_nip_L0+1, FARG_numToHex_valor+1
0x4FA8	0xF525C519  	MOVFF       can_user_read_message_nip_L0+2, FARG_numToHex_valor+2
0x4FAC	0xF526C51A  	MOVFF       can_user_read_message_nip_L0+3, FARG_numToHex_valor+3
0x4FB0	0x0E05      	MOVLW       _msjConst
0x4FB2	0x0105      	MOVLB       5
0x4FB4	0x6F27      	MOVWF       FARG_numToHex_cadena, 1
0x4FB6	0x0E03      	MOVLW       hi_addr(_msjConst)
0x4FB8	0x6F28      	MOVWF       FARG_numToHex_cadena+1, 1
0x4FBA	0x0E04      	MOVLW       4
0x4FBC	0x6F29      	MOVWF       FARG_numToHex_bytes, 1
0x4FBE	0xF016EC51  	CALL        _numToHex, 0
;Expendedora.c,1530 :: 		string_add(bufferEeprom, msjConst);
0x4FC2	0x0E15      	MOVLW       _bufferEeprom
0x4FC4	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x4FC6	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x4FC8	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x4FCA	0x0E05      	MOVLW       _msjConst
0x4FCC	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x4FCE	0x0E03      	MOVLW       hi_addr(_msjConst)
0x4FD0	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x4FD2	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,1531 :: 		numToHex(saldo, msjConst, 4);
0x4FD6	0xF523C51B  	MOVFF       can_user_read_message_saldo_L0, FARG_numToHex_valor
0x4FDA	0xF524C51C  	MOVFF       can_user_read_message_saldo_L0+1, FARG_numToHex_valor+1
0x4FDE	0xF525C51D  	MOVFF       can_user_read_message_saldo_L0+2, FARG_numToHex_valor+2
0x4FE2	0xF526C51E  	MOVFF       can_user_read_message_saldo_L0+3, FARG_numToHex_valor+3
0x4FE6	0x0E05      	MOVLW       _msjConst
0x4FE8	0x6F27      	MOVWF       FARG_numToHex_cadena, 1
0x4FEA	0x0E03      	MOVLW       hi_addr(_msjConst)
0x4FEC	0x6F28      	MOVWF       FARG_numToHex_cadena+1, 1
0x4FEE	0x0E04      	MOVLW       4
0x4FF0	0x6F29      	MOVWF       FARG_numToHex_bytes, 1
0x4FF2	0xF016EC51  	CALL        _numToHex, 0
;Expendedora.c,1532 :: 		string_add(bufferEeprom, msjConst);
0x4FF6	0x0E15      	MOVLW       _bufferEeprom
0x4FF8	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x4FFA	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x4FFC	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x4FFE	0x0E05      	MOVLW       _msjConst
0x5000	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x5002	0x0E03      	MOVLW       hi_addr(_msjConst)
0x5004	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x5006	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,1533 :: 		string_push(bufferEeprom, estatus);
0x500A	0x0E15      	MOVLW       _bufferEeprom
0x500C	0x6F23      	MOVWF       FARG_string_push_texto, 1
0x500E	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5010	0x6F24      	MOVWF       FARG_string_push_texto+1, 1
0x5012	0xF525C50A  	MOVFF       can_user_read_message_estatus_L0, FARG_string_push_caracter
0x5016	0xF013ECEA  	CALL        _string_push, 0
;Expendedora.c,1534 :: 		string_addc(bufferEeprom, CAN_MODULE);
0x501A	0x0E15      	MOVLW       _bufferEeprom
0x501C	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x501E	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5020	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x5022	0x0E1E      	MOVLW       _CAN_MODULE
0x5024	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x5026	0x0EA4      	MOVLW       hi_addr(_CAN_MODULE)
0x5028	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x502A	0x0E00      	MOVLW       higher_addr(_CAN_MODULE)
0x502C	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x502E	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,1535 :: 		numToHex(can.id, msjConst, 1);
0x5032	0xF523C355  	MOVFF       _can+12, FARG_numToHex_valor
0x5036	0x0E00      	MOVLW       0
0x5038	0x6F24      	MOVWF       FARG_numToHex_valor+1, 1
0x503A	0x6F25      	MOVWF       FARG_numToHex_valor+2, 1
0x503C	0x6F26      	MOVWF       FARG_numToHex_valor+3, 1
0x503E	0x0E05      	MOVLW       _msjConst
0x5040	0x6F27      	MOVWF       FARG_numToHex_cadena, 1
0x5042	0x0E03      	MOVLW       hi_addr(_msjConst)
0x5044	0x6F28      	MOVWF       FARG_numToHex_cadena+1, 1
0x5046	0x0E01      	MOVLW       1
0x5048	0x6F29      	MOVWF       FARG_numToHex_bytes, 1
0x504A	0xF016EC51  	CALL        _numToHex, 0
;Expendedora.c,1536 :: 		string_add(bufferEeprom, msjConst);
0x504E	0x0E15      	MOVLW       _bufferEeprom
0x5050	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x5052	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5054	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x5056	0x0E05      	MOVLW       _msjConst
0x5058	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x505A	0x0E03      	MOVLW       hi_addr(_msjConst)
0x505C	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x505E	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,1540 :: 		}else{
0x5062	0xD00C      	BRA         L_can_user_read_message833
L_can_user_read_message832:
;Expendedora.c,1541 :: 		string_addc(bufferEeprom, CAN_TABLE_NO_FOUND);
0x5064	0x0E15      	MOVLW       _bufferEeprom
0x5066	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x5068	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x506A	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x506C	0x0E71      	MOVLW       _CAN_TABLE_NO_FOUND
0x506E	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x5070	0x0EA3      	MOVLW       hi_addr(_CAN_TABLE_NO_FOUND)
0x5072	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x5074	0x0E00      	MOVLW       higher_addr(_CAN_TABLE_NO_FOUND)
0x5076	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x5078	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,1542 :: 		}
L_can_user_read_message833:
;Expendedora.c,1543 :: 		}
L_can_user_read_message831:
0x507C	0x0105      	MOVLB       5
;Expendedora.c,1545 :: 		buffer_save_send(true, bufferEeprom);
0x507E	0x0E01      	MOVLW       1
0x5080	0x6F23      	MOVWF       FARG_buffer_save_send_guardar, 1
0x5082	0x0E15      	MOVLW       _bufferEeprom
0x5084	0x6F24      	MOVWF       FARG_buffer_save_send_buffer, 1
0x5086	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5088	0x6F25      	MOVWF       FARG_buffer_save_send_buffer+1, 1
0x508A	0xF014ECA9  	CALL        _buffer_save_send, 0
;Expendedora.c,1546 :: 		}else if(string_cmpnc(CAN_NIP, &can.rxBuffer[sizeTotal], sizeKey)){
0x508E	0xD28E      	BRA         L_can_user_read_message834
L_can_user_read_message830:
0x5090	0x0EE0      	MOVLW       _CAN_NIP
0x5092	0x0105      	MOVLB       5
0x5094	0x6F23      	MOVWF       FARG_string_cmpnc_text1, 1
0x5096	0x0EA3      	MOVLW       hi_addr(_CAN_NIP)
0x5098	0x6F24      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x509A	0x0E00      	MOVLW       higher_addr(_CAN_NIP)
0x509C	0x6F25      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x509E	0x0EB4      	MOVLW       _can+107
0x50A0	0x6F26      	MOVWF       FARG_string_cmpnc_text2, 1
0x50A2	0x0E03      	MOVLW       hi_addr(_can+107)
0x50A4	0x6F27      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x50A6	0x5106      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x50A8	0x2726      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x50AA	0xB0D8      	BTFSC       STATUS, 0 
0x50AC	0x2B27      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x50AE	0xF528C505  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x50B2	0xF013EC78  	CALL        _string_cmpnc, 0
0x50B6	0x5200      	MOVF        R0, 1 
0x50B8	0xE064      	BZ          L_can_user_read_message835
;Expendedora.c,1548 :: 		sizeTotal += sizeKey;
0x50BA	0x5105      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x50BC	0x2506      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x50BE	0x6E00      	MOVWF       R0 
0x50C0	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1549 :: 		sizeKey = 4;  //4 POR LA FILA
0x50C4	0x0E04      	MOVLW       4
0x50C6	0x6F05      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Expendedora.c,1551 :: 		sizeTotal += sizeKey;
0x50C8	0x0E04      	MOVLW       4
0x50CA	0x2600      	ADDWF       R0, 1 
0x50CC	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1552 :: 		sizeKey = 8;  //8 Byte
0x50D0	0x0E08      	MOVLW       8
0x50D2	0x6F05      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Expendedora.c,1553 :: 		string_cpyn(msjConst, &can.rxBuffer[sizeTotal], sizeKey);
0x50D4	0x0E05      	MOVLW       _msjConst
0x50D6	0x6F23      	MOVWF       FARG_string_cpyn_destino, 1
0x50D8	0x0E03      	MOVLW       hi_addr(_msjConst)
0x50DA	0x6F24      	MOVWF       FARG_string_cpyn_destino+1, 1
0x50DC	0x0EB4      	MOVLW       _can+107
0x50DE	0x6F25      	MOVWF       FARG_string_cpyn_origen, 1
0x50E0	0x0E03      	MOVLW       hi_addr(_can+107)
0x50E2	0x6F26      	MOVWF       FARG_string_cpyn_origen+1, 1
0x50E4	0x5000      	MOVF        R0, 0 
0x50E6	0x2725      	ADDWF       FARG_string_cpyn_origen, 1, 1
0x50E8	0xB0D8      	BTFSC       STATUS, 0 
0x50EA	0x2B26      	INCF        FARG_string_cpyn_origen+1, 1, 1
0x50EC	0x0E08      	MOVLW       8
0x50EE	0x6F27      	MOVWF       FARG_string_cpyn_size, 1
0x50F0	0xF014EC39  	CALL        _string_cpyn, 0
;Expendedora.c,1554 :: 		nip = hexToNum(msjConst);
0x50F4	0x0E05      	MOVLW       _msjConst
0x50F6	0x6F23      	MOVWF       FARG_hexToNum_hex, 1
0x50F8	0x0E03      	MOVLW       hi_addr(_msjConst)
0x50FA	0x6F24      	MOVWF       FARG_hexToNum_hex+1, 1
0x50FC	0xF010EC5E  	CALL        _hexToNum, 0
0x5100	0xF517C000  	MOVFF       R0, can_user_read_message_nip_L0
0x5104	0xF518C001  	MOVFF       R1, can_user_read_message_nip_L0+1
0x5108	0xF519C002  	MOVFF       R2, can_user_read_message_nip_L0+2
0x510C	0xF51AC003  	MOVFF       R3, can_user_read_message_nip_L0+3
;Expendedora.c,1556 :: 		if(!mysql_read(tablePrepago, prepagoID, fila, &id)){
0x5110	0x0E74      	MOVLW       _tablePrepago
0x5112	0x6F31      	MOVWF       FARG_mysql_read_name, 1
0x5114	0x0E01      	MOVLW       hi_addr(_tablePrepago)
0x5116	0x6F32      	MOVWF       FARG_mysql_read_name+1, 1
0x5118	0x0E90      	MOVLW       _prepagoId
0x511A	0x6F33      	MOVWF       FARG_mysql_read_column, 1
0x511C	0x0E00      	MOVLW       hi_addr(_prepagoId)
0x511E	0x6F34      	MOVWF       FARG_mysql_read_column+1, 1
0x5120	0xF535C507  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_read_fila
0x5124	0xF536C508  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_read_fila+1
0x5128	0x0E13      	MOVLW       can_user_read_message_id_L0
0x512A	0x6F37      	MOVWF       FARG_mysql_read_result, 1
0x512C	0x0E05      	MOVLW       hi_addr(can_user_read_message_id_L0)
0x512E	0x6F38      	MOVWF       FARG_mysql_read_result+1, 1
0x5130	0xF00AECAA  	CALL        _mysql_read, 0
0x5134	0x5200      	MOVF        R0, 1 
0x5136	0xE124      	BNZ         L_can_user_read_message836
;Expendedora.c,1557 :: 		if(id == idConsulta){
0x5138	0x0105      	MOVLB       5
0x513A	0x5116      	MOVF        can_user_read_message_id_L0+3, 0, 1
0x513C	0x190E      	XORWF       can_user_read_message_idConsulta_L0+3, 0, 1
0x513E	0xE108      	BNZ         L__can_user_read_message1392
0x5140	0x5115      	MOVF        can_user_read_message_id_L0+2, 0, 1
0x5142	0x190D      	XORWF       can_user_read_message_idConsulta_L0+2, 0, 1
0x5144	0xE105      	BNZ         L__can_user_read_message1392
0x5146	0x5114      	MOVF        can_user_read_message_id_L0+1, 0, 1
0x5148	0x190C      	XORWF       can_user_read_message_idConsulta_L0+1, 0, 1
0x514A	0xE102      	BNZ         L__can_user_read_message1392
0x514C	0x5113      	MOVF        can_user_read_message_id_L0, 0, 1
0x514E	0x190B      	XORWF       can_user_read_message_idConsulta_L0, 0, 1
L__can_user_read_message1392:
0x5150	0xE117      	BNZ         L_can_user_read_message837
;Expendedora.c,1558 :: 		mysql_write(tablePrepago, prepagoNip, fila, nip, false);
0x5152	0x0E74      	MOVLW       _tablePrepago
0x5154	0x6F23      	MOVWF       FARG_mysql_write_name, 1
0x5156	0x0E01      	MOVLW       hi_addr(_tablePrepago)
0x5158	0x6F24      	MOVWF       FARG_mysql_write_name+1, 1
0x515A	0x0E93      	MOVLW       _prepagoNip
0x515C	0x6F25      	MOVWF       FARG_mysql_write_column, 1
0x515E	0x0E00      	MOVLW       hi_addr(_prepagoNip)
0x5160	0x6F26      	MOVWF       FARG_mysql_write_column+1, 1
0x5162	0xF527C507  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_fila
0x5166	0xF528C508  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_fila+1
0x516A	0xF529C517  	MOVFF       can_user_read_message_nip_L0, FARG_mysql_write_value
0x516E	0xF52AC518  	MOVFF       can_user_read_message_nip_L0+1, FARG_mysql_write_value+1
0x5172	0xF52BC519  	MOVFF       can_user_read_message_nip_L0+2, FARG_mysql_write_value+2
0x5176	0xF52CC51A  	MOVFF       can_user_read_message_nip_L0+3, FARG_mysql_write_value+3
0x517A	0x6B2D      	CLRF        FARG_mysql_write_endWrite, 1
0x517C	0xF012ECDC  	CALL        _mysql_write, 0
;Expendedora.c,1562 :: 		}
L_can_user_read_message837:
;Expendedora.c,1563 :: 		}
L_can_user_read_message836:
;Expendedora.c,1564 :: 		}else if(string_cmpnc(CAN_SALDO, &can.rxBuffer[sizeTotal], sizeKey)){
0x5180	0xD215      	BRA         L_can_user_read_message838
L_can_user_read_message835:
0x5182	0x0EA4      	MOVLW       _CAN_SALDO
0x5184	0x0105      	MOVLB       5
0x5186	0x6F23      	MOVWF       FARG_string_cmpnc_text1, 1
0x5188	0x0EA3      	MOVLW       hi_addr(_CAN_SALDO)
0x518A	0x6F24      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x518C	0x0E00      	MOVLW       higher_addr(_CAN_SALDO)
0x518E	0x6F25      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x5190	0x0EB4      	MOVLW       _can+107
0x5192	0x6F26      	MOVWF       FARG_string_cmpnc_text2, 1
0x5194	0x0E03      	MOVLW       hi_addr(_can+107)
0x5196	0x6F27      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x5198	0x5106      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x519A	0x2726      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x519C	0xB0D8      	BTFSC       STATUS, 0 
0x519E	0x2B27      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x51A0	0xF528C505  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x51A4	0xF013EC78  	CALL        _string_cmpnc, 0
0x51A8	0x5200      	MOVF        R0, 1 
0x51AA	0xE064      	BZ          L_can_user_read_message839
;Expendedora.c,1566 :: 		sizeTotal += sizeKey;
0x51AC	0x5105      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x51AE	0x2506      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x51B0	0x6E00      	MOVWF       R0 
0x51B2	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1567 :: 		sizeKey = 4;  //4 POR LA FILA
0x51B6	0x0E04      	MOVLW       4
0x51B8	0x6F05      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Expendedora.c,1569 :: 		sizeTotal += sizeKey;
0x51BA	0x0E04      	MOVLW       4
0x51BC	0x2600      	ADDWF       R0, 1 
0x51BE	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1570 :: 		sizeKey = 8;  //8 Byte
0x51C2	0x0E08      	MOVLW       8
0x51C4	0x6F05      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Expendedora.c,1571 :: 		string_cpyn(msjConst, &can.rxBuffer[sizeTotal], sizeKey);
0x51C6	0x0E05      	MOVLW       _msjConst
0x51C8	0x6F23      	MOVWF       FARG_string_cpyn_destino, 1
0x51CA	0x0E03      	MOVLW       hi_addr(_msjConst)
0x51CC	0x6F24      	MOVWF       FARG_string_cpyn_destino+1, 1
0x51CE	0x0EB4      	MOVLW       _can+107
0x51D0	0x6F25      	MOVWF       FARG_string_cpyn_origen, 1
0x51D2	0x0E03      	MOVLW       hi_addr(_can+107)
0x51D4	0x6F26      	MOVWF       FARG_string_cpyn_origen+1, 1
0x51D6	0x5000      	MOVF        R0, 0 
0x51D8	0x2725      	ADDWF       FARG_string_cpyn_origen, 1, 1
0x51DA	0xB0D8      	BTFSC       STATUS, 0 
0x51DC	0x2B26      	INCF        FARG_string_cpyn_origen+1, 1, 1
0x51DE	0x0E08      	MOVLW       8
0x51E0	0x6F27      	MOVWF       FARG_string_cpyn_size, 1
0x51E2	0xF014EC39  	CALL        _string_cpyn, 0
;Expendedora.c,1572 :: 		saldo = hexToNum(msjConst);
0x51E6	0x0E05      	MOVLW       _msjConst
0x51E8	0x6F23      	MOVWF       FARG_hexToNum_hex, 1
0x51EA	0x0E03      	MOVLW       hi_addr(_msjConst)
0x51EC	0x6F24      	MOVWF       FARG_hexToNum_hex+1, 1
0x51EE	0xF010EC5E  	CALL        _hexToNum, 0
0x51F2	0xF51BC000  	MOVFF       R0, can_user_read_message_saldo_L0
0x51F6	0xF51CC001  	MOVFF       R1, can_user_read_message_saldo_L0+1
0x51FA	0xF51DC002  	MOVFF       R2, can_user_read_message_saldo_L0+2
0x51FE	0xF51EC003  	MOVFF       R3, can_user_read_message_saldo_L0+3
;Expendedora.c,1574 :: 		if(!mysql_read(tablePrepago, prepagoID, fila, &id)){
0x5202	0x0E74      	MOVLW       _tablePrepago
0x5204	0x6F31      	MOVWF       FARG_mysql_read_name, 1
0x5206	0x0E01      	MOVLW       hi_addr(_tablePrepago)
0x5208	0x6F32      	MOVWF       FARG_mysql_read_name+1, 1
0x520A	0x0E90      	MOVLW       _prepagoId
0x520C	0x6F33      	MOVWF       FARG_mysql_read_column, 1
0x520E	0x0E00      	MOVLW       hi_addr(_prepagoId)
0x5210	0x6F34      	MOVWF       FARG_mysql_read_column+1, 1
0x5212	0xF535C507  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_read_fila
0x5216	0xF536C508  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_read_fila+1
0x521A	0x0E13      	MOVLW       can_user_read_message_id_L0
0x521C	0x6F37      	MOVWF       FARG_mysql_read_result, 1
0x521E	0x0E05      	MOVLW       hi_addr(can_user_read_message_id_L0)
0x5220	0x6F38      	MOVWF       FARG_mysql_read_result+1, 1
0x5222	0xF00AECAA  	CALL        _mysql_read, 0
0x5226	0x5200      	MOVF        R0, 1 
0x5228	0xE124      	BNZ         L_can_user_read_message840
;Expendedora.c,1575 :: 		if(id == idConsulta){
0x522A	0x0105      	MOVLB       5
0x522C	0x5116      	MOVF        can_user_read_message_id_L0+3, 0, 1
0x522E	0x190E      	XORWF       can_user_read_message_idConsulta_L0+3, 0, 1
0x5230	0xE108      	BNZ         L__can_user_read_message1393
0x5232	0x5115      	MOVF        can_user_read_message_id_L0+2, 0, 1
0x5234	0x190D      	XORWF       can_user_read_message_idConsulta_L0+2, 0, 1
0x5236	0xE105      	BNZ         L__can_user_read_message1393
0x5238	0x5114      	MOVF        can_user_read_message_id_L0+1, 0, 1
0x523A	0x190C      	XORWF       can_user_read_message_idConsulta_L0+1, 0, 1
0x523C	0xE102      	BNZ         L__can_user_read_message1393
0x523E	0x5113      	MOVF        can_user_read_message_id_L0, 0, 1
0x5240	0x190B      	XORWF       can_user_read_message_idConsulta_L0, 0, 1
L__can_user_read_message1393:
0x5242	0xE117      	BNZ         L_can_user_read_message841
;Expendedora.c,1576 :: 		mysql_write(tablePrepago, prepagoSaldo, fila, saldo, false);
0x5244	0x0E74      	MOVLW       _tablePrepago
0x5246	0x6F23      	MOVWF       FARG_mysql_write_name, 1
0x5248	0x0E01      	MOVLW       hi_addr(_tablePrepago)
0x524A	0x6F24      	MOVWF       FARG_mysql_write_name+1, 1
0x524C	0x0EA4      	MOVLW       _prepagoSaldo
0x524E	0x6F25      	MOVWF       FARG_mysql_write_column, 1
0x5250	0x0E01      	MOVLW       hi_addr(_prepagoSaldo)
0x5252	0x6F26      	MOVWF       FARG_mysql_write_column+1, 1
0x5254	0xF527C507  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_fila
0x5258	0xF528C508  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_fila+1
0x525C	0xF529C51B  	MOVFF       can_user_read_message_saldo_L0, FARG_mysql_write_value
0x5260	0xF52AC51C  	MOVFF       can_user_read_message_saldo_L0+1, FARG_mysql_write_value+1
0x5264	0xF52BC51D  	MOVFF       can_user_read_message_saldo_L0+2, FARG_mysql_write_value+2
0x5268	0xF52CC51E  	MOVFF       can_user_read_message_saldo_L0+3, FARG_mysql_write_value+3
0x526C	0x6B2D      	CLRF        FARG_mysql_write_endWrite, 1
0x526E	0xF012ECDC  	CALL        _mysql_write, 0
;Expendedora.c,1580 :: 		}
L_can_user_read_message841:
;Expendedora.c,1581 :: 		}
L_can_user_read_message840:
;Expendedora.c,1582 :: 		}else if(string_cmpnc(CAN_PASSBACK, &can.rxBuffer[sizeTotal], sizeKey)){
0x5272	0xD19C      	BRA         L_can_user_read_message842
L_can_user_read_message839:
0x5274	0x0EDC      	MOVLW       _CAN_PASSBACK
0x5276	0x0105      	MOVLB       5
0x5278	0x6F23      	MOVWF       FARG_string_cmpnc_text1, 1
0x527A	0x0EA3      	MOVLW       hi_addr(_CAN_PASSBACK)
0x527C	0x6F24      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x527E	0x0E00      	MOVLW       higher_addr(_CAN_PASSBACK)
0x5280	0x6F25      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x5282	0x0EB4      	MOVLW       _can+107
0x5284	0x6F26      	MOVWF       FARG_string_cmpnc_text2, 1
0x5286	0x0E03      	MOVLW       hi_addr(_can+107)
0x5288	0x6F27      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x528A	0x5106      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x528C	0x2726      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x528E	0xB0D8      	BTFSC       STATUS, 0 
0x5290	0x2B27      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x5292	0xF528C505  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x5296	0xF013EC78  	CALL        _string_cmpnc, 0
0x529A	0x5200      	MOVF        R0, 1 
0x529C	0xE04E      	BZ          L_can_user_read_message843
;Expendedora.c,1584 :: 		sizeTotal += sizeKey;
0x529E	0x5105      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x52A0	0x2506      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x52A2	0x6E00      	MOVWF       R0 
0x52A4	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1585 :: 		sizeKey = 4;  //4 POR LA FILA
0x52A8	0x0E04      	MOVLW       4
0x52AA	0x6F05      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Expendedora.c,1587 :: 		sizeTotal += sizeKey;
0x52AC	0x0E04      	MOVLW       4
0x52AE	0x2600      	ADDWF       R0, 1 
0x52B0	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1588 :: 		sizeKey = 1;
0x52B4	0x0E01      	MOVLW       1
0x52B6	0x6F05      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Expendedora.c,1589 :: 		estatus = can.rxBuffer[sizeTotal];
0x52B8	0x0EB4      	MOVLW       _can+107
0x52BA	0x6EE9      	MOVWF       FSR0L 
0x52BC	0x0E03      	MOVLW       hi_addr(_can+107)
0x52BE	0x6EEA      	MOVWF       FSR0H 
0x52C0	0x5000      	MOVF        R0, 0 
0x52C2	0x26E9      	ADDWF       FSR0L, 1 
0x52C4	0xB0D8      	BTFSC       STATUS, 0 
0x52C6	0x2AEA      	INCF        FSR0H, 1 
0x52C8	0xF50ACFEE  	MOVFF       POSTINC0, can_user_read_message_estatus_L0
;Expendedora.c,1591 :: 		if(!mysql_read(tablePrepago, prepagoID, fila, &id)){
0x52CC	0x0E74      	MOVLW       _tablePrepago
0x52CE	0x6F31      	MOVWF       FARG_mysql_read_name, 1
0x52D0	0x0E01      	MOVLW       hi_addr(_tablePrepago)
0x52D2	0x6F32      	MOVWF       FARG_mysql_read_name+1, 1
0x52D4	0x0E90      	MOVLW       _prepagoId
0x52D6	0x6F33      	MOVWF       FARG_mysql_read_column, 1
0x52D8	0x0E00      	MOVLW       hi_addr(_prepagoId)
0x52DA	0x6F34      	MOVWF       FARG_mysql_read_column+1, 1
0x52DC	0xF535C507  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_read_fila
0x52E0	0xF536C508  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_read_fila+1
0x52E4	0x0E13      	MOVLW       can_user_read_message_id_L0
0x52E6	0x6F37      	MOVWF       FARG_mysql_read_result, 1
0x52E8	0x0E05      	MOVLW       hi_addr(can_user_read_message_id_L0)
0x52EA	0x6F38      	MOVWF       FARG_mysql_read_result+1, 1
0x52EC	0xF00AECAA  	CALL        _mysql_read, 0
0x52F0	0x5200      	MOVF        R0, 1 
0x52F2	0xE122      	BNZ         L_can_user_read_message844
;Expendedora.c,1592 :: 		if(id == idConsulta){
0x52F4	0x0105      	MOVLB       5
0x52F6	0x5116      	MOVF        can_user_read_message_id_L0+3, 0, 1
0x52F8	0x190E      	XORWF       can_user_read_message_idConsulta_L0+3, 0, 1
0x52FA	0xE108      	BNZ         L__can_user_read_message1394
0x52FC	0x5115      	MOVF        can_user_read_message_id_L0+2, 0, 1
0x52FE	0x190D      	XORWF       can_user_read_message_idConsulta_L0+2, 0, 1
0x5300	0xE105      	BNZ         L__can_user_read_message1394
0x5302	0x5114      	MOVF        can_user_read_message_id_L0+1, 0, 1
0x5304	0x190C      	XORWF       can_user_read_message_idConsulta_L0+1, 0, 1
0x5306	0xE102      	BNZ         L__can_user_read_message1394
0x5308	0x5113      	MOVF        can_user_read_message_id_L0, 0, 1
0x530A	0x190B      	XORWF       can_user_read_message_idConsulta_L0, 0, 1
L__can_user_read_message1394:
0x530C	0xE115      	BNZ         L_can_user_read_message845
;Expendedora.c,1593 :: 		mysql_write(tablePrepago, prepagoEstatus, fila, estatus, false);
0x530E	0x0E74      	MOVLW       _tablePrepago
0x5310	0x6F23      	MOVWF       FARG_mysql_write_name, 1
0x5312	0x0E01      	MOVLW       hi_addr(_tablePrepago)
0x5314	0x6F24      	MOVWF       FARG_mysql_write_name+1, 1
0x5316	0x0E8C      	MOVLW       _prepagoEstatus
0x5318	0x6F25      	MOVWF       FARG_mysql_write_column, 1
0x531A	0x0E01      	MOVLW       hi_addr(_prepagoEstatus)
0x531C	0x6F26      	MOVWF       FARG_mysql_write_column+1, 1
0x531E	0xF527C507  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_fila
0x5322	0xF528C508  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_fila+1
0x5326	0xF529C50A  	MOVFF       can_user_read_message_estatus_L0, FARG_mysql_write_value
0x532A	0x0E00      	MOVLW       0
0x532C	0x6F2A      	MOVWF       FARG_mysql_write_value+1, 1
0x532E	0x6F2B      	MOVWF       FARG_mysql_write_value+2, 1
0x5330	0x6F2C      	MOVWF       FARG_mysql_write_value+3, 1
0x5332	0x6B2D      	CLRF        FARG_mysql_write_endWrite, 1
0x5334	0xF012ECDC  	CALL        _mysql_write, 0
;Expendedora.c,1597 :: 		}
L_can_user_read_message845:
;Expendedora.c,1598 :: 		}
L_can_user_read_message844:
;Expendedora.c,1599 :: 		}else if(string_cmpnc(CAN_SPECIAL_DATE, &can.rxBuffer[sizeTotal], sizeKey)){
0x5338	0xD139      	BRA         L_can_user_read_message846
L_can_user_read_message843:
0x533A	0x0EE4      	MOVLW       _CAN_SPECIAL_DATE
0x533C	0x0105      	MOVLB       5
0x533E	0x6F23      	MOVWF       FARG_string_cmpnc_text1, 1
0x5340	0x0EA3      	MOVLW       hi_addr(_CAN_SPECIAL_DATE)
0x5342	0x6F24      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x5344	0x0E00      	MOVLW       higher_addr(_CAN_SPECIAL_DATE)
0x5346	0x6F25      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x5348	0x0EB4      	MOVLW       _can+107
0x534A	0x6F26      	MOVWF       FARG_string_cmpnc_text2, 1
0x534C	0x0E03      	MOVLW       hi_addr(_can+107)
0x534E	0x6F27      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x5350	0x5106      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x5352	0x2726      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x5354	0xB0D8      	BTFSC       STATUS, 0 
0x5356	0x2B27      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x5358	0xF528C505  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x535C	0xF013EC78  	CALL        _string_cmpnc, 0
0x5360	0x5200      	MOVF        R0, 1 
0x5362	0xB4D8      	BTFSC       STATUS, 2 
0x5364	0xD077      	BRA         L_can_user_read_message847
;Expendedora.c,1601 :: 		sizeTotal += sizeKey;
0x5366	0x5105      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x5368	0x2506      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x536A	0x6E00      	MOVWF       R0 
0x536C	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1602 :: 		sizeKey = 4;  //4 POR LA FILA
0x5370	0x0E04      	MOVLW       4
0x5372	0x6F05      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Expendedora.c,1604 :: 		sizeTotal += sizeKey;
0x5374	0x0E04      	MOVLW       4
0x5376	0x2600      	ADDWF       R0, 1 
0x5378	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1605 :: 		sizeKey = 1;
0x537C	0x0E01      	MOVLW       1
0x537E	0x6F05      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Expendedora.c,1606 :: 		estatus = can.rxBuffer[sizeTotal];
0x5380	0x0EB4      	MOVLW       _can+107
0x5382	0x6EE9      	MOVWF       FSR0L 
0x5384	0x0E03      	MOVLW       hi_addr(_can+107)
0x5386	0x6EEA      	MOVWF       FSR0H 
0x5388	0x5000      	MOVF        R0, 0 
0x538A	0x26E9      	ADDWF       FSR0L, 1 
0x538C	0xB0D8      	BTFSC       STATUS, 0 
0x538E	0x2AEA      	INCF        FSR0H, 1 
0x5390	0xF50ACFEE  	MOVFF       POSTINC0, can_user_read_message_estatus_L0
;Expendedora.c,1608 :: 		sizeTotal += sizeKey;
0x5394	0x2A00      	INCF        R0, 1 
0x5396	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1609 :: 		sizeKey = 12;
0x539A	0x0E0C      	MOVLW       12
0x539C	0x6F05      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Expendedora.c,1610 :: 		string_cpyn(msjConst, &can.rxBuffer[sizeTotal], sizeKey);
0x539E	0x0E05      	MOVLW       _msjConst
0x53A0	0x6F23      	MOVWF       FARG_string_cpyn_destino, 1
0x53A2	0x0E03      	MOVLW       hi_addr(_msjConst)
0x53A4	0x6F24      	MOVWF       FARG_string_cpyn_destino+1, 1
0x53A6	0x0EB4      	MOVLW       _can+107
0x53A8	0x6F25      	MOVWF       FARG_string_cpyn_origen, 1
0x53AA	0x0E03      	MOVLW       hi_addr(_can+107)
0x53AC	0x6F26      	MOVWF       FARG_string_cpyn_origen+1, 1
0x53AE	0x5000      	MOVF        R0, 0 
0x53B0	0x2725      	ADDWF       FARG_string_cpyn_origen, 1, 1
0x53B2	0xB0D8      	BTFSC       STATUS, 0 
0x53B4	0x2B26      	INCF        FARG_string_cpyn_origen+1, 1, 1
0x53B6	0x0E0C      	MOVLW       12
0x53B8	0x6F27      	MOVWF       FARG_string_cpyn_size, 1
0x53BA	0xF014EC39  	CALL        _string_cpyn, 0
;Expendedora.c,1612 :: 		if(!mysql_read(tablePrepago, prepagoID, fila, &id)){
0x53BE	0x0E74      	MOVLW       _tablePrepago
0x53C0	0x6F31      	MOVWF       FARG_mysql_read_name, 1
0x53C2	0x0E01      	MOVLW       hi_addr(_tablePrepago)
0x53C4	0x6F32      	MOVWF       FARG_mysql_read_name+1, 1
0x53C6	0x0E90      	MOVLW       _prepagoId
0x53C8	0x6F33      	MOVWF       FARG_mysql_read_column, 1
0x53CA	0x0E00      	MOVLW       hi_addr(_prepagoId)
0x53CC	0x6F34      	MOVWF       FARG_mysql_read_column+1, 1
0x53CE	0xF535C507  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_read_fila
0x53D2	0xF536C508  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_read_fila+1
0x53D6	0x0E13      	MOVLW       can_user_read_message_id_L0
0x53D8	0x6F37      	MOVWF       FARG_mysql_read_result, 1
0x53DA	0x0E05      	MOVLW       hi_addr(can_user_read_message_id_L0)
0x53DC	0x6F38      	MOVWF       FARG_mysql_read_result+1, 1
0x53DE	0xF00AECAA  	CALL        _mysql_read, 0
0x53E2	0x5200      	MOVF        R0, 1 
0x53E4	0xE136      	BNZ         L_can_user_read_message848
;Expendedora.c,1613 :: 		if(id == idConsulta){
0x53E6	0x0105      	MOVLB       5
0x53E8	0x5116      	MOVF        can_user_read_message_id_L0+3, 0, 1
0x53EA	0x190E      	XORWF       can_user_read_message_idConsulta_L0+3, 0, 1
0x53EC	0xE108      	BNZ         L__can_user_read_message1395
0x53EE	0x5115      	MOVF        can_user_read_message_id_L0+2, 0, 1
0x53F0	0x190D      	XORWF       can_user_read_message_idConsulta_L0+2, 0, 1
0x53F2	0xE105      	BNZ         L__can_user_read_message1395
0x53F4	0x5114      	MOVF        can_user_read_message_id_L0+1, 0, 1
0x53F6	0x190C      	XORWF       can_user_read_message_idConsulta_L0+1, 0, 1
0x53F8	0xE102      	BNZ         L__can_user_read_message1395
0x53FA	0x5113      	MOVF        can_user_read_message_id_L0, 0, 1
0x53FC	0x190B      	XORWF       can_user_read_message_idConsulta_L0, 0, 1
L__can_user_read_message1395:
0x53FE	0xE129      	BNZ         L_can_user_read_message849
;Expendedora.c,1614 :: 		mysql_write(tablePrepago, prepagoEstatus, fila, estatus, false);
0x5400	0x0E74      	MOVLW       _tablePrepago
0x5402	0x6F23      	MOVWF       FARG_mysql_write_name, 1
0x5404	0x0E01      	MOVLW       hi_addr(_tablePrepago)
0x5406	0x6F24      	MOVWF       FARG_mysql_write_name+1, 1
0x5408	0x0E8C      	MOVLW       _prepagoEstatus
0x540A	0x6F25      	MOVWF       FARG_mysql_write_column, 1
0x540C	0x0E01      	MOVLW       hi_addr(_prepagoEstatus)
0x540E	0x6F26      	MOVWF       FARG_mysql_write_column+1, 1
0x5410	0xF527C507  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_fila
0x5414	0xF528C508  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_fila+1
0x5418	0xF529C50A  	MOVFF       can_user_read_message_estatus_L0, FARG_mysql_write_value
0x541C	0x0E00      	MOVLW       0
0x541E	0x6F2A      	MOVWF       FARG_mysql_write_value+1, 1
0x5420	0x6F2B      	MOVWF       FARG_mysql_write_value+2, 1
0x5422	0x6F2C      	MOVWF       FARG_mysql_write_value+3, 1
0x5424	0x6B2D      	CLRF        FARG_mysql_write_endWrite, 1
0x5426	0xF012ECDC  	CALL        _mysql_write, 0
;Expendedora.c,1615 :: 		mysql_write_string(tablePrepago, prepagoDate, fila, msjConst, false);
0x542A	0x0E74      	MOVLW       _tablePrepago
0x542C	0x0105      	MOVLB       5
0x542E	0x6F23      	MOVWF       FARG_mysql_write_string_name, 1
0x5430	0x0E01      	MOVLW       hi_addr(_tablePrepago)
0x5432	0x6F24      	MOVWF       FARG_mysql_write_string_name+1, 1
0x5434	0x0E24      	MOVLW       _prepagoDate
0x5436	0x6F25      	MOVWF       FARG_mysql_write_string_column, 1
0x5438	0x0E02      	MOVLW       hi_addr(_prepagoDate)
0x543A	0x6F26      	MOVWF       FARG_mysql_write_string_column+1, 1
0x543C	0xF527C507  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_string_fila
0x5440	0xF528C508  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_string_fila+1
0x5444	0x0E05      	MOVLW       _msjConst
0x5446	0x6F29      	MOVWF       FARG_mysql_write_string_texto, 1
0x5448	0x0E03      	MOVLW       hi_addr(_msjConst)
0x544A	0x6F2A      	MOVWF       FARG_mysql_write_string_texto+1, 1
0x544C	0x6B2B      	CLRF        FARG_mysql_write_string_endWrite, 1
0x544E	0xF00DEC62  	CALL        _mysql_write_string, 0
;Expendedora.c,1619 :: 		}
L_can_user_read_message849:
;Expendedora.c,1620 :: 		}
L_can_user_read_message848:
;Expendedora.c,1621 :: 		}else if(string_cmpnc(CAN_SPECIAL_SALDO, &can.rxBuffer[sizeTotal], sizeKey)){
0x5452	0xD0AC      	BRA         L_can_user_read_message850
L_can_user_read_message847:
0x5454	0x0EAC      	MOVLW       _CAN_SPECIAL_SALDO
0x5456	0x0105      	MOVLB       5
0x5458	0x6F23      	MOVWF       FARG_string_cmpnc_text1, 1
0x545A	0x0EA3      	MOVLW       hi_addr(_CAN_SPECIAL_SALDO)
0x545C	0x6F24      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x545E	0x0E00      	MOVLW       higher_addr(_CAN_SPECIAL_SALDO)
0x5460	0x6F25      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x5462	0x0EB4      	MOVLW       _can+107
0x5464	0x6F26      	MOVWF       FARG_string_cmpnc_text2, 1
0x5466	0x0E03      	MOVLW       hi_addr(_can+107)
0x5468	0x6F27      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x546A	0x5106      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x546C	0x2726      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x546E	0xB0D8      	BTFSC       STATUS, 0 
0x5470	0x2B27      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x5472	0xF528C505  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x5476	0xF013EC78  	CALL        _string_cmpnc, 0
0x547A	0x5200      	MOVF        R0, 1 
0x547C	0xB4D8      	BTFSC       STATUS, 2 
0x547E	0xD089      	BRA         L_can_user_read_message851
;Expendedora.c,1623 :: 		sizeTotal += sizeKey;
0x5480	0x5105      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x5482	0x2506      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x5484	0x6E00      	MOVWF       R0 
0x5486	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1624 :: 		sizeKey = 4;  //4 POR LA FILA
0x548A	0x0E04      	MOVLW       4
0x548C	0x6F05      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Expendedora.c,1626 :: 		sizeTotal += sizeKey;
0x548E	0x0E04      	MOVLW       4
0x5490	0x2600      	ADDWF       R0, 1 
0x5492	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1627 :: 		sizeKey = 1;
0x5496	0x0E01      	MOVLW       1
0x5498	0x6F05      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Expendedora.c,1628 :: 		estatus = can.rxBuffer[sizeTotal];
0x549A	0x0EB4      	MOVLW       _can+107
0x549C	0x6EE9      	MOVWF       FSR0L 
0x549E	0x0E03      	MOVLW       hi_addr(_can+107)
0x54A0	0x6EEA      	MOVWF       FSR0H 
0x54A2	0x5000      	MOVF        R0, 0 
0x54A4	0x26E9      	ADDWF       FSR0L, 1 
0x54A6	0xB0D8      	BTFSC       STATUS, 0 
0x54A8	0x2AEA      	INCF        FSR0H, 1 
0x54AA	0xF50ACFEE  	MOVFF       POSTINC0, can_user_read_message_estatus_L0
;Expendedora.c,1630 :: 		sizeTotal += sizeKey;
0x54AE	0x2A00      	INCF        R0, 1 
0x54B0	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1631 :: 		sizeKey = 8;
0x54B4	0x0E08      	MOVLW       8
0x54B6	0x6F05      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Expendedora.c,1632 :: 		string_cpyn(msjConst, &can.rxBuffer[sizeTotal], sizeKey);
0x54B8	0x0E05      	MOVLW       _msjConst
0x54BA	0x6F23      	MOVWF       FARG_string_cpyn_destino, 1
0x54BC	0x0E03      	MOVLW       hi_addr(_msjConst)
0x54BE	0x6F24      	MOVWF       FARG_string_cpyn_destino+1, 1
0x54C0	0x0EB4      	MOVLW       _can+107
0x54C2	0x6F25      	MOVWF       FARG_string_cpyn_origen, 1
0x54C4	0x0E03      	MOVLW       hi_addr(_can+107)
0x54C6	0x6F26      	MOVWF       FARG_string_cpyn_origen+1, 1
0x54C8	0x5000      	MOVF        R0, 0 
0x54CA	0x2725      	ADDWF       FARG_string_cpyn_origen, 1, 1
0x54CC	0xB0D8      	BTFSC       STATUS, 0 
0x54CE	0x2B26      	INCF        FARG_string_cpyn_origen+1, 1, 1
0x54D0	0x0E08      	MOVLW       8
0x54D2	0x6F27      	MOVWF       FARG_string_cpyn_size, 1
0x54D4	0xF014EC39  	CALL        _string_cpyn, 0
;Expendedora.c,1633 :: 		saldo = hexToNum(msjConst);
0x54D8	0x0E05      	MOVLW       _msjConst
0x54DA	0x6F23      	MOVWF       FARG_hexToNum_hex, 1
0x54DC	0x0E03      	MOVLW       hi_addr(_msjConst)
0x54DE	0x6F24      	MOVWF       FARG_hexToNum_hex+1, 1
0x54E0	0xF010EC5E  	CALL        _hexToNum, 0
0x54E4	0xF51BC000  	MOVFF       R0, can_user_read_message_saldo_L0
0x54E8	0xF51CC001  	MOVFF       R1, can_user_read_message_saldo_L0+1
0x54EC	0xF51DC002  	MOVFF       R2, can_user_read_message_saldo_L0+2
0x54F0	0xF51EC003  	MOVFF       R3, can_user_read_message_saldo_L0+3
;Expendedora.c,1635 :: 		if(!mysql_read(tablePrepago, prepagoID, fila, &id)){
0x54F4	0x0E74      	MOVLW       _tablePrepago
0x54F6	0x6F31      	MOVWF       FARG_mysql_read_name, 1
0x54F8	0x0E01      	MOVLW       hi_addr(_tablePrepago)
0x54FA	0x6F32      	MOVWF       FARG_mysql_read_name+1, 1
0x54FC	0x0E90      	MOVLW       _prepagoId
0x54FE	0x6F33      	MOVWF       FARG_mysql_read_column, 1
0x5500	0x0E00      	MOVLW       hi_addr(_prepagoId)
0x5502	0x6F34      	MOVWF       FARG_mysql_read_column+1, 1
0x5504	0xF535C507  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_read_fila
0x5508	0xF536C508  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_read_fila+1
0x550C	0x0E13      	MOVLW       can_user_read_message_id_L0
0x550E	0x6F37      	MOVWF       FARG_mysql_read_result, 1
0x5510	0x0E05      	MOVLW       hi_addr(can_user_read_message_id_L0)
0x5512	0x6F38      	MOVWF       FARG_mysql_read_result+1, 1
0x5514	0xF00AECAA  	CALL        _mysql_read, 0
0x5518	0x5200      	MOVF        R0, 1 
0x551A	0xE13A      	BNZ         L_can_user_read_message852
;Expendedora.c,1636 :: 		if(id == idConsulta){
0x551C	0x0105      	MOVLB       5
0x551E	0x5116      	MOVF        can_user_read_message_id_L0+3, 0, 1
0x5520	0x190E      	XORWF       can_user_read_message_idConsulta_L0+3, 0, 1
0x5522	0xE108      	BNZ         L__can_user_read_message1396
0x5524	0x5115      	MOVF        can_user_read_message_id_L0+2, 0, 1
0x5526	0x190D      	XORWF       can_user_read_message_idConsulta_L0+2, 0, 1
0x5528	0xE105      	BNZ         L__can_user_read_message1396
0x552A	0x5114      	MOVF        can_user_read_message_id_L0+1, 0, 1
0x552C	0x190C      	XORWF       can_user_read_message_idConsulta_L0+1, 0, 1
0x552E	0xE102      	BNZ         L__can_user_read_message1396
0x5530	0x5113      	MOVF        can_user_read_message_id_L0, 0, 1
0x5532	0x190B      	XORWF       can_user_read_message_idConsulta_L0, 0, 1
L__can_user_read_message1396:
0x5534	0xE12D      	BNZ         L_can_user_read_message853
;Expendedora.c,1637 :: 		mysql_write(tablePrepago, prepagoEstatus, fila, estatus, false);
0x5536	0x0E74      	MOVLW       _tablePrepago
0x5538	0x6F23      	MOVWF       FARG_mysql_write_name, 1
0x553A	0x0E01      	MOVLW       hi_addr(_tablePrepago)
0x553C	0x6F24      	MOVWF       FARG_mysql_write_name+1, 1
0x553E	0x0E8C      	MOVLW       _prepagoEstatus
0x5540	0x6F25      	MOVWF       FARG_mysql_write_column, 1
0x5542	0x0E01      	MOVLW       hi_addr(_prepagoEstatus)
0x5544	0x6F26      	MOVWF       FARG_mysql_write_column+1, 1
0x5546	0xF527C507  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_fila
0x554A	0xF528C508  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_fila+1
0x554E	0xF529C50A  	MOVFF       can_user_read_message_estatus_L0, FARG_mysql_write_value
0x5552	0x0E00      	MOVLW       0
0x5554	0x6F2A      	MOVWF       FARG_mysql_write_value+1, 1
0x5556	0x6F2B      	MOVWF       FARG_mysql_write_value+2, 1
0x5558	0x6F2C      	MOVWF       FARG_mysql_write_value+3, 1
0x555A	0x6B2D      	CLRF        FARG_mysql_write_endWrite, 1
0x555C	0xF012ECDC  	CALL        _mysql_write, 0
;Expendedora.c,1638 :: 		mysql_write(tablePrepago, prepagoSaldo, fila, saldo, false);
0x5560	0x0E74      	MOVLW       _tablePrepago
0x5562	0x0105      	MOVLB       5
0x5564	0x6F23      	MOVWF       FARG_mysql_write_name, 1
0x5566	0x0E01      	MOVLW       hi_addr(_tablePrepago)
0x5568	0x6F24      	MOVWF       FARG_mysql_write_name+1, 1
0x556A	0x0EA4      	MOVLW       _prepagoSaldo
0x556C	0x6F25      	MOVWF       FARG_mysql_write_column, 1
0x556E	0x0E01      	MOVLW       hi_addr(_prepagoSaldo)
0x5570	0x6F26      	MOVWF       FARG_mysql_write_column+1, 1
0x5572	0xF527C507  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_fila
0x5576	0xF528C508  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_fila+1
0x557A	0xF529C51B  	MOVFF       can_user_read_message_saldo_L0, FARG_mysql_write_value
0x557E	0xF52AC51C  	MOVFF       can_user_read_message_saldo_L0+1, FARG_mysql_write_value+1
0x5582	0xF52BC51D  	MOVFF       can_user_read_message_saldo_L0+2, FARG_mysql_write_value+2
0x5586	0xF52CC51E  	MOVFF       can_user_read_message_saldo_L0+3, FARG_mysql_write_value+3
0x558A	0x6B2D      	CLRF        FARG_mysql_write_endWrite, 1
0x558C	0xF012ECDC  	CALL        _mysql_write, 0
;Expendedora.c,1642 :: 		}
L_can_user_read_message853:
;Expendedora.c,1643 :: 		}
L_can_user_read_message852:
;Expendedora.c,1644 :: 		}else{
0x5590	0xD00D      	BRA         L_can_user_read_message854
L_can_user_read_message851:
;Expendedora.c,1645 :: 		string_addc(bufferEeprom, CAN_TABLE_ERROR);
0x5592	0x0E15      	MOVLW       _bufferEeprom
0x5594	0x0105      	MOVLB       5
0x5596	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x5598	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x559A	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x559C	0x0E7A      	MOVLW       _CAN_TABLE_ERROR
0x559E	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x55A0	0x0EA3      	MOVLW       hi_addr(_CAN_TABLE_ERROR)
0x55A2	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x55A4	0x0E00      	MOVLW       higher_addr(_CAN_TABLE_ERROR)
0x55A6	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x55A8	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,1646 :: 		}
L_can_user_read_message854:
L_can_user_read_message850:
L_can_user_read_message846:
L_can_user_read_message842:
L_can_user_read_message838:
L_can_user_read_message834:
L_can_user_read_message829:
L_can_user_read_message825:
;Expendedora.c,1647 :: 		}else if(string_cmpnc(CAN_SOPORTE, &can.rxBuffer[sizeTotal], sizeKey)){
0x55AC	0xF034EFDA  	GOTO        L_can_user_read_message855
L_can_user_read_message820:
0x55B0	0x0105      	MOVLB       5
0x55B2	0x0EA8      	MOVLW       _CAN_SOPORTE
0x55B4	0x6F23      	MOVWF       FARG_string_cmpnc_text1, 1
0x55B6	0x0EA3      	MOVLW       hi_addr(_CAN_SOPORTE)
0x55B8	0x6F24      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x55BA	0x0E00      	MOVLW       higher_addr(_CAN_SOPORTE)
0x55BC	0x6F25      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x55BE	0x0EB4      	MOVLW       _can+107
0x55C0	0x6F26      	MOVWF       FARG_string_cmpnc_text2, 1
0x55C2	0x0E03      	MOVLW       hi_addr(_can+107)
0x55C4	0x6F27      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x55C6	0x5106      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x55C8	0x2726      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x55CA	0xB0D8      	BTFSC       STATUS, 0 
0x55CC	0x2B27      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x55CE	0xF528C505  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x55D2	0xF013EC78  	CALL        _string_cmpnc, 0
0x55D6	0x5200      	MOVF        R0, 1 
0x55D8	0xB4D8      	BTFSC       STATUS, 2 
0x55DA	0xD15B      	BRA         L_can_user_read_message856
;Expendedora.c,1649 :: 		sizeTotal += sizeKey;
0x55DC	0x5105      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x55DE	0x2506      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x55E0	0x6E00      	MOVWF       R0 
0x55E2	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1650 :: 		sizeKey = 6;  //3 Bytes en hexadecimal
0x55E6	0x0E06      	MOVLW       6
0x55E8	0x6F05      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Expendedora.c,1651 :: 		string_cpyn(msjConst, &can.rxBuffer[sizeTotal], sizeKey);
0x55EA	0x0E05      	MOVLW       _msjConst
0x55EC	0x6F23      	MOVWF       FARG_string_cpyn_destino, 1
0x55EE	0x0E03      	MOVLW       hi_addr(_msjConst)
0x55F0	0x6F24      	MOVWF       FARG_string_cpyn_destino+1, 1
0x55F2	0x0EB4      	MOVLW       _can+107
0x55F4	0x6F25      	MOVWF       FARG_string_cpyn_origen, 1
0x55F6	0x0E03      	MOVLW       hi_addr(_can+107)
0x55F8	0x6F26      	MOVWF       FARG_string_cpyn_origen+1, 1
0x55FA	0x5000      	MOVF        R0, 0 
0x55FC	0x2725      	ADDWF       FARG_string_cpyn_origen, 1, 1
0x55FE	0xB0D8      	BTFSC       STATUS, 0 
0x5600	0x2B26      	INCF        FARG_string_cpyn_origen+1, 1, 1
0x5602	0x0E06      	MOVLW       6
0x5604	0x6F27      	MOVWF       FARG_string_cpyn_size, 1
0x5606	0xF014EC39  	CALL        _string_cpyn, 0
;Expendedora.c,1652 :: 		idConsulta = hexToNum(msjConst);
0x560A	0x0E05      	MOVLW       _msjConst
0x560C	0x6F23      	MOVWF       FARG_hexToNum_hex, 1
0x560E	0x0E03      	MOVLW       hi_addr(_msjConst)
0x5610	0x6F24      	MOVWF       FARG_hexToNum_hex+1, 1
0x5612	0xF010EC5E  	CALL        _hexToNum, 0
0x5616	0xF50BC000  	MOVFF       R0, can_user_read_message_idConsulta_L0
0x561A	0xF50CC001  	MOVFF       R1, can_user_read_message_idConsulta_L0+1
0x561E	0xF50DC002  	MOVFF       R2, can_user_read_message_idConsulta_L0+2
0x5622	0xF50EC003  	MOVFF       R3, can_user_read_message_idConsulta_L0+3
;Expendedora.c,1654 :: 		sizeTotal += sizeKey;
0x5626	0x5105      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x5628	0x2506      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x562A	0x6E00      	MOVWF       R0 
0x562C	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1655 :: 		sizeKey = sizeof(CAN_REGISTRAR)-1;  //COMANDO 3BYTES
0x5630	0x0E03      	MOVLW       3
0x5632	0x6F05      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Expendedora.c,1657 :: 		string_cpyn(msjConst, &can.rxBuffer[sizeTotal+sizeKey], 4); //4 numeros fila
0x5634	0x0E05      	MOVLW       _msjConst
0x5636	0x6F23      	MOVWF       FARG_string_cpyn_destino, 1
0x5638	0x0E03      	MOVLW       hi_addr(_msjConst)
0x563A	0x6F24      	MOVWF       FARG_string_cpyn_destino+1, 1
0x563C	0x0E03      	MOVLW       3
0x563E	0x2600      	ADDWF       R0, 1 
0x5640	0x6A01      	CLRF        R1 
0x5642	0x0E00      	MOVLW       0
0x5644	0x2201      	ADDWFC      R1, 1 
0x5646	0x0EB4      	MOVLW       _can+107
0x5648	0x2400      	ADDWF       R0, 0 
0x564A	0x6F25      	MOVWF       FARG_string_cpyn_origen, 1
0x564C	0x0E03      	MOVLW       hi_addr(_can+107)
0x564E	0x2001      	ADDWFC      R1, 0 
0x5650	0x6F26      	MOVWF       FARG_string_cpyn_origen+1, 1
0x5652	0x0E04      	MOVLW       4
0x5654	0x6F27      	MOVWF       FARG_string_cpyn_size, 1
0x5656	0xF014EC39  	CALL        _string_cpyn, 0
;Expendedora.c,1658 :: 		fila = stringToNum(msjConst);
0x565A	0x0E05      	MOVLW       _msjConst
0x565C	0x6F23      	MOVWF       FARG_stringToNum_cadena, 1
0x565E	0x0E03      	MOVLW       hi_addr(_msjConst)
0x5660	0x6F24      	MOVWF       FARG_stringToNum_cadena+1, 1
0x5662	0xF013EC99  	CALL        _stringToNum, 0
0x5666	0xF507C000  	MOVFF       R0, can_user_read_message_fila_L0
0x566A	0xF508C001  	MOVFF       R1, can_user_read_message_fila_L0+1
;Expendedora.c,1660 :: 		if(string_cmpnc(CAN_REGISTRAR, &can.rxBuffer[sizeTotal], sizeKey)){
0x566E	0x0E10      	MOVLW       _CAN_REGISTRAR
0x5670	0x6F23      	MOVWF       FARG_string_cmpnc_text1, 1
0x5672	0x0EA4      	MOVLW       hi_addr(_CAN_REGISTRAR)
0x5674	0x6F24      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x5676	0x0E00      	MOVLW       higher_addr(_CAN_REGISTRAR)
0x5678	0x6F25      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x567A	0x0EB4      	MOVLW       _can+107
0x567C	0x6F26      	MOVWF       FARG_string_cmpnc_text2, 1
0x567E	0x0E03      	MOVLW       hi_addr(_can+107)
0x5680	0x6F27      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x5682	0x5106      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x5684	0x2726      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x5686	0xB0D8      	BTFSC       STATUS, 0 
0x5688	0x2B27      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x568A	0xF528C505  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x568E	0xF013EC78  	CALL        _string_cmpnc, 0
0x5692	0x5200      	MOVF        R0, 1 
0x5694	0xE062      	BZ          L_can_user_read_message857
;Expendedora.c,1662 :: 		sizeTotal += sizeKey;
0x5696	0x5105      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x5698	0x2706      	ADDWF       can_user_read_message_sizeTotal_L0, 1, 1
;Expendedora.c,1663 :: 		sizeKey = 4;  //4 POR LA FILA
0x569A	0x0E04      	MOVLW       4
0x569C	0x6F05      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Expendedora.c,1665 :: 		idNew = idConsulta;
0x569E	0xF50FC50B  	MOVFF       can_user_read_message_idConsulta_L0, can_user_read_message_idNew_L0
0x56A2	0xF510C50C  	MOVFF       can_user_read_message_idConsulta_L0+1, can_user_read_message_idNew_L0+1
0x56A6	0xF511C50D  	MOVFF       can_user_read_message_idConsulta_L0+2, can_user_read_message_idNew_L0+2
0x56AA	0xF512C50E  	MOVFF       can_user_read_message_idConsulta_L0+3, can_user_read_message_idNew_L0+3
;Expendedora.c,1667 :: 		if(mysql_read(tableSoporte, soporteID, fila, &id) == TABLE_RW_NO_EXIST_ROW){
0x56AE	0x0E5C      	MOVLW       _tableSoporte
0x56B0	0x6F31      	MOVWF       FARG_mysql_read_name, 1
0x56B2	0x0E01      	MOVLW       hi_addr(_tableSoporte)
0x56B4	0x6F32      	MOVWF       FARG_mysql_read_name+1, 1
0x56B6	0x0EEB      	MOVLW       _soporteID
0x56B8	0x6F33      	MOVWF       FARG_mysql_read_column, 1
0x56BA	0x0E00      	MOVLW       hi_addr(_soporteID)
0x56BC	0x6F34      	MOVWF       FARG_mysql_read_column+1, 1
0x56BE	0xF535C507  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_read_fila
0x56C2	0xF536C508  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_read_fila+1
0x56C6	0x0E13      	MOVLW       can_user_read_message_id_L0
0x56C8	0x6F37      	MOVWF       FARG_mysql_read_result, 1
0x56CA	0x0E05      	MOVLW       hi_addr(can_user_read_message_id_L0)
0x56CC	0x6F38      	MOVWF       FARG_mysql_read_result+1, 1
0x56CE	0xF00AECAA  	CALL        _mysql_read, 0
0x56D2	0x5000      	MOVF        R0, 0 
0x56D4	0x0A03      	XORLW       3
0x56D6	0xE140      	BNZ         L_can_user_read_message858
;Expendedora.c,1668 :: 		if(fila == myTable.rowAct+1){
0x56D8	0x0E01      	MOVLW       1
0x56DA	0x0103      	MOVLB       3
0x56DC	0x251D      	ADDWF       Expendedora_myTable+4, 0, 1
0x56DE	0x6E01      	MOVWF       R1 
0x56E0	0x0E00      	MOVLW       0
0x56E2	0x211E      	ADDWFC      Expendedora_myTable+5, 0, 1
0x56E4	0x6E02      	MOVWF       R2 
0x56E6	0x0105      	MOVLB       5
0x56E8	0x5108      	MOVF        can_user_read_message_fila_L0+1, 0, 1
0x56EA	0x1802      	XORWF       R2, 0 
0x56EC	0xE102      	BNZ         L__can_user_read_message1397
0x56EE	0x5001      	MOVF        R1, 0 
0x56F0	0x1907      	XORWF       can_user_read_message_fila_L0, 0, 1
L__can_user_read_message1397:
0x56F2	0xE132      	BNZ         L_can_user_read_message859
;Expendedora.c,1669 :: 		if(!mysql_write(tableSoporte, soporteID, -1, idNew, true)){
0x56F4	0x0E5C      	MOVLW       _tableSoporte
0x56F6	0x6F23      	MOVWF       FARG_mysql_write_name, 1
0x56F8	0x0E01      	MOVLW       hi_addr(_tableSoporte)
0x56FA	0x6F24      	MOVWF       FARG_mysql_write_name+1, 1
0x56FC	0x0EEB      	MOVLW       _soporteID
0x56FE	0x6F25      	MOVWF       FARG_mysql_write_column, 1
0x5700	0x0E00      	MOVLW       hi_addr(_soporteID)
0x5702	0x6F26      	MOVWF       FARG_mysql_write_column+1, 1
0x5704	0x0EFF      	MOVLW       255
0x5706	0x6F27      	MOVWF       FARG_mysql_write_fila, 1
0x5708	0x0EFF      	MOVLW       255
0x570A	0x6F28      	MOVWF       FARG_mysql_write_fila+1, 1
0x570C	0xF529C50F  	MOVFF       can_user_read_message_idNew_L0, FARG_mysql_write_value
0x5710	0xF52AC510  	MOVFF       can_user_read_message_idNew_L0+1, FARG_mysql_write_value+1
0x5714	0xF52BC511  	MOVFF       can_user_read_message_idNew_L0+2, FARG_mysql_write_value+2
0x5718	0xF52CC512  	MOVFF       can_user_read_message_idNew_L0+3, FARG_mysql_write_value+3
0x571C	0x0E01      	MOVLW       1
0x571E	0x6F2D      	MOVWF       FARG_mysql_write_endWrite, 1
0x5720	0xF012ECDC  	CALL        _mysql_write, 0
0x5724	0x5200      	MOVF        R0, 1 
0x5726	0xE118      	BNZ         L_can_user_read_message860
;Expendedora.c,1673 :: 		mysql_write(tableSoporte, soporteID, fila, idNew, false);
0x5728	0x0E5C      	MOVLW       _tableSoporte
0x572A	0x0105      	MOVLB       5
0x572C	0x6F23      	MOVWF       FARG_mysql_write_name, 1
0x572E	0x0E01      	MOVLW       hi_addr(_tableSoporte)
0x5730	0x6F24      	MOVWF       FARG_mysql_write_name+1, 1
0x5732	0x0EEB      	MOVLW       _soporteID
0x5734	0x6F25      	MOVWF       FARG_mysql_write_column, 1
0x5736	0x0E00      	MOVLW       hi_addr(_soporteID)
0x5738	0x6F26      	MOVWF       FARG_mysql_write_column+1, 1
0x573A	0xF527C507  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_fila
0x573E	0xF528C508  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_fila+1
0x5742	0xF529C50F  	MOVFF       can_user_read_message_idNew_L0, FARG_mysql_write_value
0x5746	0xF52AC510  	MOVFF       can_user_read_message_idNew_L0+1, FARG_mysql_write_value+1
0x574A	0xF52BC511  	MOVFF       can_user_read_message_idNew_L0+2, FARG_mysql_write_value+2
0x574E	0xF52CC512  	MOVFF       can_user_read_message_idNew_L0+3, FARG_mysql_write_value+3
0x5752	0x6B2D      	CLRF        FARG_mysql_write_endWrite, 1
0x5754	0xF012ECDC  	CALL        _mysql_write, 0
;Expendedora.c,1674 :: 		}
L_can_user_read_message860:
;Expendedora.c,1675 :: 		}
L_can_user_read_message859:
;Expendedora.c,1676 :: 		}
L_can_user_read_message858:
;Expendedora.c,1677 :: 		}else if(string_cmpnc(CAN_CONSULTAR, &can.rxBuffer[sizeTotal], sizeKey)){
0x5758	0xD09A      	BRA         L_can_user_read_message861
L_can_user_read_message857:
0x575A	0x0EFC      	MOVLW       _CAN_CONSULTAR
0x575C	0x0105      	MOVLB       5
0x575E	0x6F23      	MOVWF       FARG_string_cmpnc_text1, 1
0x5760	0x0EA3      	MOVLW       hi_addr(_CAN_CONSULTAR)
0x5762	0x6F24      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x5764	0x0E00      	MOVLW       higher_addr(_CAN_CONSULTAR)
0x5766	0x6F25      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x5768	0x0EB4      	MOVLW       _can+107
0x576A	0x6F26      	MOVWF       FARG_string_cmpnc_text2, 1
0x576C	0x0E03      	MOVLW       hi_addr(_can+107)
0x576E	0x6F27      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x5770	0x5106      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x5772	0x2726      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x5774	0xB0D8      	BTFSC       STATUS, 0 
0x5776	0x2B27      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x5778	0xF528C505  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x577C	0xF013EC78  	CALL        _string_cmpnc, 0
0x5780	0x5200      	MOVF        R0, 1 
0x5782	0xB4D8      	BTFSC       STATUS, 2 
0x5784	0xD084      	BRA         L_can_user_read_message862
;Expendedora.c,1679 :: 		sizeTotal += sizeKey;
0x5786	0x5105      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x5788	0x2706      	ADDWF       can_user_read_message_sizeTotal_L0, 1, 1
;Expendedora.c,1680 :: 		sizeKey = 4;  //4 POR LA FILA
0x578A	0x0E04      	MOVLW       4
0x578C	0x6F05      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Expendedora.c,1682 :: 		string_cpyc(bufferEeprom, CAN_TPV);
0x578E	0x0E15      	MOVLW       _bufferEeprom
0x5790	0x6F23      	MOVWF       FARG_string_cpyc_destino, 1
0x5792	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5794	0x6F24      	MOVWF       FARG_string_cpyc_destino+1, 1
0x5796	0x0EBC      	MOVLW       _CAN_TPV
0x5798	0x6F25      	MOVWF       FARG_string_cpyc_origen, 1
0x579A	0x0EA3      	MOVLW       hi_addr(_CAN_TPV)
0x579C	0x6F26      	MOVWF       FARG_string_cpyc_origen+1, 1
0x579E	0x0E00      	MOVLW       higher_addr(_CAN_TPV)
0x57A0	0x6F27      	MOVWF       FARG_string_cpyc_origen+2, 1
0x57A2	0xF014EC09  	CALL        _string_cpyc, 0
;Expendedora.c,1683 :: 		string_cpyn(&bufferEeprom[sizeof(CAN_TPV)-1], can.rxBuffer, sizeTotal);
0x57A6	0x0E18      	MOVLW       _bufferEeprom+3
0x57A8	0x6F23      	MOVWF       FARG_string_cpyn_destino, 1
0x57AA	0x0E04      	MOVLW       hi_addr(_bufferEeprom+3)
0x57AC	0x6F24      	MOVWF       FARG_string_cpyn_destino+1, 1
0x57AE	0x0EB4      	MOVLW       _can+107
0x57B0	0x6F25      	MOVWF       FARG_string_cpyn_origen, 1
0x57B2	0x0E03      	MOVLW       hi_addr(_can+107)
0x57B4	0x6F26      	MOVWF       FARG_string_cpyn_origen+1, 1
0x57B6	0xF527C506  	MOVFF       can_user_read_message_sizeTotal_L0, FARG_string_cpyn_size
0x57BA	0xF014EC39  	CALL        _string_cpyn, 0
;Expendedora.c,1684 :: 		if(!mysql_read(tableSoporte, soporteID, fila, &id)){
0x57BE	0x0E5C      	MOVLW       _tableSoporte
0x57C0	0x6F31      	MOVWF       FARG_mysql_read_name, 1
0x57C2	0x0E01      	MOVLW       hi_addr(_tableSoporte)
0x57C4	0x6F32      	MOVWF       FARG_mysql_read_name+1, 1
0x57C6	0x0EEB      	MOVLW       _soporteID
0x57C8	0x6F33      	MOVWF       FARG_mysql_read_column, 1
0x57CA	0x0E00      	MOVLW       hi_addr(_soporteID)
0x57CC	0x6F34      	MOVWF       FARG_mysql_read_column+1, 1
0x57CE	0xF535C507  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_read_fila
0x57D2	0xF536C508  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_read_fila+1
0x57D6	0x0E13      	MOVLW       can_user_read_message_id_L0
0x57D8	0x6F37      	MOVWF       FARG_mysql_read_result, 1
0x57DA	0x0E05      	MOVLW       hi_addr(can_user_read_message_id_L0)
0x57DC	0x6F38      	MOVWF       FARG_mysql_read_result+1, 1
0x57DE	0xF00AECAA  	CALL        _mysql_read, 0
0x57E2	0x5200      	MOVF        R0, 1 
0x57E4	0xE13F      	BNZ         L_can_user_read_message863
;Expendedora.c,1685 :: 		if(idConsulta == id){
0x57E6	0x0105      	MOVLB       5
0x57E8	0x510E      	MOVF        can_user_read_message_idConsulta_L0+3, 0, 1
0x57EA	0x1916      	XORWF       can_user_read_message_id_L0+3, 0, 1
0x57EC	0xE108      	BNZ         L__can_user_read_message1398
0x57EE	0x510D      	MOVF        can_user_read_message_idConsulta_L0+2, 0, 1
0x57F0	0x1915      	XORWF       can_user_read_message_id_L0+2, 0, 1
0x57F2	0xE105      	BNZ         L__can_user_read_message1398
0x57F4	0x510C      	MOVF        can_user_read_message_idConsulta_L0+1, 0, 1
0x57F6	0x1914      	XORWF       can_user_read_message_id_L0+1, 0, 1
0x57F8	0xE102      	BNZ         L__can_user_read_message1398
0x57FA	0x510B      	MOVF        can_user_read_message_idConsulta_L0, 0, 1
0x57FC	0x1913      	XORWF       can_user_read_message_id_L0, 0, 1
L__can_user_read_message1398:
0x57FE	0xE125      	BNZ         L_can_user_read_message864
;Expendedora.c,1690 :: 		string_addc(bufferEeprom, CAN_MODULE);
0x5800	0x0E15      	MOVLW       _bufferEeprom
0x5802	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x5804	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5806	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x5808	0x0E1E      	MOVLW       _CAN_MODULE
0x580A	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x580C	0x0EA4      	MOVLW       hi_addr(_CAN_MODULE)
0x580E	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x5810	0x0E00      	MOVLW       higher_addr(_CAN_MODULE)
0x5812	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x5814	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,1691 :: 		numToHex(can.id, msjConst, 1);
0x5818	0xF523C355  	MOVFF       _can+12, FARG_numToHex_valor
0x581C	0x0E00      	MOVLW       0
0x581E	0x6F24      	MOVWF       FARG_numToHex_valor+1, 1
0x5820	0x6F25      	MOVWF       FARG_numToHex_valor+2, 1
0x5822	0x6F26      	MOVWF       FARG_numToHex_valor+3, 1
0x5824	0x0E05      	MOVLW       _msjConst
0x5826	0x6F27      	MOVWF       FARG_numToHex_cadena, 1
0x5828	0x0E03      	MOVLW       hi_addr(_msjConst)
0x582A	0x6F28      	MOVWF       FARG_numToHex_cadena+1, 1
0x582C	0x0E01      	MOVLW       1
0x582E	0x6F29      	MOVWF       FARG_numToHex_bytes, 1
0x5830	0xF016EC51  	CALL        _numToHex, 0
;Expendedora.c,1692 :: 		string_add(bufferEeprom, msjConst);
0x5834	0x0E15      	MOVLW       _bufferEeprom
0x5836	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x5838	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x583A	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x583C	0x0E05      	MOVLW       _msjConst
0x583E	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x5840	0x0E03      	MOVLW       hi_addr(_msjConst)
0x5842	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x5844	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,1693 :: 		}else{
0x5848	0xD00C      	BRA         L_can_user_read_message865
L_can_user_read_message864:
;Expendedora.c,1694 :: 		string_addc(bufferEeprom, CAN_TABLE_NO_FOUND);
0x584A	0x0E15      	MOVLW       _bufferEeprom
0x584C	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x584E	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5850	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x5852	0x0E71      	MOVLW       _CAN_TABLE_NO_FOUND
0x5854	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x5856	0x0EA3      	MOVLW       hi_addr(_CAN_TABLE_NO_FOUND)
0x5858	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x585A	0x0E00      	MOVLW       higher_addr(_CAN_TABLE_NO_FOUND)
0x585C	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x585E	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,1695 :: 		}
L_can_user_read_message865:
;Expendedora.c,1696 :: 		}else{
0x5862	0xD00D      	BRA         L_can_user_read_message866
L_can_user_read_message863:
0x5864	0x0105      	MOVLB       5
;Expendedora.c,1697 :: 		string_addc(bufferEeprom, CAN_TABLE_ERROR);
0x5866	0x0E15      	MOVLW       _bufferEeprom
0x5868	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x586A	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x586C	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x586E	0x0E7A      	MOVLW       _CAN_TABLE_ERROR
0x5870	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x5872	0x0EA3      	MOVLW       hi_addr(_CAN_TABLE_ERROR)
0x5874	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x5876	0x0E00      	MOVLW       higher_addr(_CAN_TABLE_ERROR)
0x5878	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x587A	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,1698 :: 		}
L_can_user_read_message866:
;Expendedora.c,1700 :: 		buffer_save_send(true, bufferEeprom);
0x587E	0x0E01      	MOVLW       1
0x5880	0x6F23      	MOVWF       FARG_buffer_save_send_guardar, 1
0x5882	0x0E15      	MOVLW       _bufferEeprom
0x5884	0x6F24      	MOVWF       FARG_buffer_save_send_buffer, 1
0x5886	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5888	0x6F25      	MOVWF       FARG_buffer_save_send_buffer+1, 1
0x588A	0xF014ECA9  	CALL        _buffer_save_send, 0
;Expendedora.c,1701 :: 		}
L_can_user_read_message862:
L_can_user_read_message861:
;Expendedora.c,1702 :: 		}else if(string_cmpnc(CAN_TABLE, &can.rxBuffer[sizeTotal], sizeKey)){
0x588E	0xF034EFDA  	GOTO        L_can_user_read_message867
L_can_user_read_message856:
0x5892	0x0EA0      	MOVLW       _CAN_TABLE
0x5894	0x0105      	MOVLB       5
0x5896	0x6F23      	MOVWF       FARG_string_cmpnc_text1, 1
0x5898	0x0EA3      	MOVLW       hi_addr(_CAN_TABLE)
0x589A	0x6F24      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x589C	0x0E00      	MOVLW       higher_addr(_CAN_TABLE)
0x589E	0x6F25      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x58A0	0x0EB4      	MOVLW       _can+107
0x58A2	0x6F26      	MOVWF       FARG_string_cmpnc_text2, 1
0x58A4	0x0E03      	MOVLW       hi_addr(_can+107)
0x58A6	0x6F27      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x58A8	0x5106      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x58AA	0x2726      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x58AC	0xB0D8      	BTFSC       STATUS, 0 
0x58AE	0x2B27      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x58B0	0xF528C505  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x58B4	0xF013EC78  	CALL        _string_cmpnc, 0
0x58B8	0x5200      	MOVF        R0, 1 
0x58BA	0xB4D8      	BTFSC       STATUS, 2 
0x58BC	0xD21D      	BRA         L_can_user_read_message868
;Expendedora.c,1703 :: 		sizeTotal += sizeKey;
0x58BE	0x5105      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x58C0	0x2706      	ADDWF       can_user_read_message_sizeTotal_L0, 1, 1
;Expendedora.c,1704 :: 		sizeKey = sizeof(CAN_TABLE_ERASE)-1;  //FORMATO ALL/T00/EXX
0x58C2	0x0E03      	MOVLW       3
0x58C4	0x6F05      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Expendedora.c,1707 :: 		string_cpyc(bufferEeprom, CAN_TPV);
0x58C6	0x0E15      	MOVLW       _bufferEeprom
0x58C8	0x6F23      	MOVWF       FARG_string_cpyc_destino, 1
0x58CA	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x58CC	0x6F24      	MOVWF       FARG_string_cpyc_destino+1, 1
0x58CE	0x0EBC      	MOVLW       _CAN_TPV
0x58D0	0x6F25      	MOVWF       FARG_string_cpyc_origen, 1
0x58D2	0x0EA3      	MOVLW       hi_addr(_CAN_TPV)
0x58D4	0x6F26      	MOVWF       FARG_string_cpyc_origen+1, 1
0x58D6	0x0E00      	MOVLW       higher_addr(_CAN_TPV)
0x58D8	0x6F27      	MOVWF       FARG_string_cpyc_origen+2, 1
0x58DA	0xF014EC09  	CALL        _string_cpyc, 0
;Expendedora.c,1708 :: 		string_addc(bufferEeprom, CAN_TABLE);
0x58DE	0x0E15      	MOVLW       _bufferEeprom
0x58E0	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x58E2	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x58E4	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x58E6	0x0EA0      	MOVLW       _CAN_TABLE
0x58E8	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x58EA	0x0EA3      	MOVLW       hi_addr(_CAN_TABLE)
0x58EC	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x58EE	0x0E00      	MOVLW       higher_addr(_CAN_TABLE)
0x58F0	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x58F2	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,1711 :: 		if(string_cmpnc(CAN_TABLE_ERASE, &can.rxBuffer[sizeTotal], sizeKey)){
0x58F6	0x0E94      	MOVLW       _CAN_TABLE_ERASE
0x58F8	0x6F23      	MOVWF       FARG_string_cmpnc_text1, 1
0x58FA	0x0EA3      	MOVLW       hi_addr(_CAN_TABLE_ERASE)
0x58FC	0x6F24      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x58FE	0x0E00      	MOVLW       higher_addr(_CAN_TABLE_ERASE)
0x5900	0x6F25      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x5902	0x0EB4      	MOVLW       _can+107
0x5904	0x6F26      	MOVWF       FARG_string_cmpnc_text2, 1
0x5906	0x0E03      	MOVLW       hi_addr(_can+107)
0x5908	0x6F27      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x590A	0x5106      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x590C	0x2726      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x590E	0xB0D8      	BTFSC       STATUS, 0 
0x5910	0x2B27      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x5912	0xF528C505  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x5916	0xF013EC78  	CALL        _string_cmpnc, 0
0x591A	0x5200      	MOVF        R0, 1 
0x591C	0xE04D      	BZ          L_can_user_read_message869
;Expendedora.c,1712 :: 		sizeTotal += sizeKey;
0x591E	0x5105      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x5920	0x2506      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x5922	0x6E00      	MOVWF       R0 
0x5924	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1713 :: 		if(mysql_erase(&can.rxBuffer[sizeTotal])){
0x5928	0x0EB4      	MOVLW       _can+107
0x592A	0x6F23      	MOVWF       FARG_mysql_erase_name, 1
0x592C	0x0E03      	MOVLW       hi_addr(_can+107)
0x592E	0x6F24      	MOVWF       FARG_mysql_erase_name+1, 1
0x5930	0x5000      	MOVF        R0, 0 
0x5932	0x2723      	ADDWF       FARG_mysql_erase_name, 1, 1
0x5934	0xB0D8      	BTFSC       STATUS, 0 
0x5936	0x2B24      	INCF        FARG_mysql_erase_name+1, 1, 1
0x5938	0xF00EEC06  	CALL        _mysql_erase, 0
0x593C	0x5200      	MOVF        R0, 1 
0x593E	0xE02E      	BZ          L_can_user_read_message870
;Expendedora.c,1714 :: 		string_addc(bufferEeprom, CAN_TABLE_ERASE);
0x5940	0x0E15      	MOVLW       _bufferEeprom
0x5942	0x0105      	MOVLB       5
0x5944	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x5946	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5948	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x594A	0x0E94      	MOVLW       _CAN_TABLE_ERASE
0x594C	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x594E	0x0EA3      	MOVLW       hi_addr(_CAN_TABLE_ERASE)
0x5950	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x5952	0x0E00      	MOVLW       higher_addr(_CAN_TABLE_ERASE)
0x5954	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x5956	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,1716 :: 		string_cpyn(msjConst, &can.rxBuffer[sizeTotal], 3);
0x595A	0x0E05      	MOVLW       _msjConst
0x595C	0x6F23      	MOVWF       FARG_string_cpyn_destino, 1
0x595E	0x0E03      	MOVLW       hi_addr(_msjConst)
0x5960	0x6F24      	MOVWF       FARG_string_cpyn_destino+1, 1
0x5962	0x0EB4      	MOVLW       _can+107
0x5964	0x6F25      	MOVWF       FARG_string_cpyn_origen, 1
0x5966	0x0E03      	MOVLW       hi_addr(_can+107)
0x5968	0x6F26      	MOVWF       FARG_string_cpyn_origen+1, 1
0x596A	0x5106      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x596C	0x2725      	ADDWF       FARG_string_cpyn_origen, 1, 1
0x596E	0xB0D8      	BTFSC       STATUS, 0 
0x5970	0x2B26      	INCF        FARG_string_cpyn_origen+1, 1, 1
0x5972	0x0E03      	MOVLW       3
0x5974	0x6F27      	MOVWF       FARG_string_cpyn_size, 1
0x5976	0xF014EC39  	CALL        _string_cpyn, 0
;Expendedora.c,1717 :: 		string_toUpper(msjConst);
0x597A	0x0E05      	MOVLW       _msjConst
0x597C	0x6F23      	MOVWF       FARG_string_toUpper_cadena, 1
0x597E	0x0E03      	MOVLW       hi_addr(_msjConst)
0x5980	0x6F24      	MOVWF       FARG_string_toUpper_cadena+1, 1
0x5982	0xF010EC20  	CALL        _string_toUpper, 0
;Expendedora.c,1718 :: 		string_add(bufferEeprom, msjConst);
0x5986	0x0E15      	MOVLW       _bufferEeprom
0x5988	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x598A	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x598C	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x598E	0x0E05      	MOVLW       _msjConst
0x5990	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x5992	0x0E03      	MOVLW       hi_addr(_msjConst)
0x5994	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x5996	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,1719 :: 		}else{
0x599A	0xD00D      	BRA         L_can_user_read_message871
L_can_user_read_message870:
0x599C	0x0105      	MOVLB       5
;Expendedora.c,1720 :: 		string_addc(bufferEeprom, CAN_TABLE_NO_FOUND);
0x599E	0x0E15      	MOVLW       _bufferEeprom
0x59A0	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x59A2	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x59A4	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x59A6	0x0E71      	MOVLW       _CAN_TABLE_NO_FOUND
0x59A8	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x59AA	0x0EA3      	MOVLW       hi_addr(_CAN_TABLE_NO_FOUND)
0x59AC	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x59AE	0x0E00      	MOVLW       higher_addr(_CAN_TABLE_NO_FOUND)
0x59B0	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x59B2	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,1721 :: 		}
L_can_user_read_message871:
;Expendedora.c,1726 :: 		}else if(string_cmpnc(CAN_TABLE_INFO, &can.rxBuffer[sizeTotal], sizeKey)){
0x59B6	0xD172      	BRA         L_can_user_read_message872
L_can_user_read_message869:
0x59B8	0x0E98      	MOVLW       _CAN_TABLE_INFO
0x59BA	0x6F23      	MOVWF       FARG_string_cmpnc_text1, 1
0x59BC	0x0EA3      	MOVLW       hi_addr(_CAN_TABLE_INFO)
0x59BE	0x6F24      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x59C0	0x0E00      	MOVLW       higher_addr(_CAN_TABLE_INFO)
0x59C2	0x6F25      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x59C4	0x0EB4      	MOVLW       _can+107
0x59C6	0x6F26      	MOVWF       FARG_string_cmpnc_text2, 1
0x59C8	0x0E03      	MOVLW       hi_addr(_can+107)
0x59CA	0x6F27      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x59CC	0x5106      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x59CE	0x2726      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x59D0	0xB0D8      	BTFSC       STATUS, 0 
0x59D2	0x2B27      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x59D4	0xF528C505  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x59D8	0xF013EC78  	CALL        _string_cmpnc, 0
0x59DC	0x5200      	MOVF        R0, 1 
0x59DE	0xB4D8      	BTFSC       STATUS, 2 
0x59E0	0xD099      	BRA         L_can_user_read_message873
;Expendedora.c,1728 :: 		sizeTotal += sizeKey;
0x59E2	0x5105      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x59E4	0x2506      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x59E6	0x6E00      	MOVWF       R0 
0x59E8	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1730 :: 		if(mysql_exist(&can.rxBuffer[sizeTotal])){
0x59EC	0x0EB4      	MOVLW       _can+107
0x59EE	0x6F47      	MOVWF       FARG_mysql_exist_name, 1
0x59F0	0x0E03      	MOVLW       hi_addr(_can+107)
0x59F2	0x6F48      	MOVWF       FARG_mysql_exist_name+1, 1
0x59F4	0x5000      	MOVF        R0, 0 
0x59F6	0x2747      	ADDWF       FARG_mysql_exist_name, 1, 1
0x59F8	0xB0D8      	BTFSC       STATUS, 0 
0x59FA	0x2B48      	INCF        FARG_mysql_exist_name+1, 1, 1
0x59FC	0xF003EC42  	CALL        _mysql_exist, 0
0x5A00	0x5200      	MOVF        R0, 1 
0x5A02	0xE07A      	BZ          L_can_user_read_message874
;Expendedora.c,1731 :: 		string_addc(bufferEeprom, CAN_TABLE_INFO);
0x5A04	0x0E15      	MOVLW       _bufferEeprom
0x5A06	0x0105      	MOVLB       5
0x5A08	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x5A0A	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5A0C	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x5A0E	0x0E98      	MOVLW       _CAN_TABLE_INFO
0x5A10	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x5A12	0x0EA3      	MOVLW       hi_addr(_CAN_TABLE_INFO)
0x5A14	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x5A16	0x0E00      	MOVLW       higher_addr(_CAN_TABLE_INFO)
0x5A18	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x5A1A	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,1733 :: 		string_cpyn(msjConst, &can.rxBuffer[sizeTotal], 3);
0x5A1E	0x0E05      	MOVLW       _msjConst
0x5A20	0x6F23      	MOVWF       FARG_string_cpyn_destino, 1
0x5A22	0x0E03      	MOVLW       hi_addr(_msjConst)
0x5A24	0x6F24      	MOVWF       FARG_string_cpyn_destino+1, 1
0x5A26	0x0EB4      	MOVLW       _can+107
0x5A28	0x6F25      	MOVWF       FARG_string_cpyn_origen, 1
0x5A2A	0x0E03      	MOVLW       hi_addr(_can+107)
0x5A2C	0x6F26      	MOVWF       FARG_string_cpyn_origen+1, 1
0x5A2E	0x5106      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x5A30	0x2725      	ADDWF       FARG_string_cpyn_origen, 1, 1
0x5A32	0xB0D8      	BTFSC       STATUS, 0 
0x5A34	0x2B26      	INCF        FARG_string_cpyn_origen+1, 1, 1
0x5A36	0x0E03      	MOVLW       3
0x5A38	0x6F27      	MOVWF       FARG_string_cpyn_size, 1
0x5A3A	0xF014EC39  	CALL        _string_cpyn, 0
;Expendedora.c,1734 :: 		string_toUpper(msjConst);
0x5A3E	0x0E05      	MOVLW       _msjConst
0x5A40	0x6F23      	MOVWF       FARG_string_toUpper_cadena, 1
0x5A42	0x0E03      	MOVLW       hi_addr(_msjConst)
0x5A44	0x6F24      	MOVWF       FARG_string_toUpper_cadena+1, 1
0x5A46	0xF010EC20  	CALL        _string_toUpper, 0
;Expendedora.c,1735 :: 		string_add(bufferEeprom, msjConst);
0x5A4A	0x0E15      	MOVLW       _bufferEeprom
0x5A4C	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x5A4E	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5A50	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x5A52	0x0E05      	MOVLW       _msjConst
0x5A54	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x5A56	0x0E03      	MOVLW       hi_addr(_msjConst)
0x5A58	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x5A5A	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,1737 :: 		string_addc(bufferEeprom, FILAS_ACTUALES);
0x5A5E	0x0E15      	MOVLW       _bufferEeprom
0x5A60	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x5A62	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5A64	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x5A66	0x0E9C      	MOVLW       can_user_read_message_FILAS_ACTUALES_L0
0x5A68	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x5A6A	0x0EA3      	MOVLW       hi_addr(can_user_read_message_FILAS_ACTUALES_L0)
0x5A6C	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x5A6E	0x0E00      	MOVLW       higher_addr(can_user_read_message_FILAS_ACTUALES_L0)
0x5A70	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x5A72	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,1738 :: 		numToString(myTable.rowAct, msjConst, 4);
0x5A76	0xF53BC31D  	MOVFF       Expendedora_myTable+4, FARG_numToString_valor
0x5A7A	0xF53CC31E  	MOVFF       Expendedora_myTable+5, FARG_numToString_valor+1
0x5A7E	0x0E00      	MOVLW       0
0x5A80	0x6F3D      	MOVWF       FARG_numToString_valor+2, 1
0x5A82	0x6F3E      	MOVWF       FARG_numToString_valor+3, 1
0x5A84	0x0E05      	MOVLW       _msjConst
0x5A86	0x6F3F      	MOVWF       FARG_numToString_cadena, 1
0x5A88	0x0E03      	MOVLW       hi_addr(_msjConst)
0x5A8A	0x6F40      	MOVWF       FARG_numToString_cadena+1, 1
0x5A8C	0x0E04      	MOVLW       4
0x5A8E	0x6F41      	MOVWF       FARG_numToString_digitos, 1
0x5A90	0xF005EC17  	CALL        _numToString, 0
;Expendedora.c,1739 :: 		string_add(bufferEeprom, msjConst);
0x5A94	0x0E15      	MOVLW       _bufferEeprom
0x5A96	0x0105      	MOVLB       5
0x5A98	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x5A9A	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5A9C	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x5A9E	0x0E05      	MOVLW       _msjConst
0x5AA0	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x5AA2	0x0E03      	MOVLW       hi_addr(_msjConst)
0x5AA4	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x5AA6	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,1741 :: 		string_addc(bufferEeprom, FILAS_PROG);
0x5AAA	0x0E15      	MOVLW       _bufferEeprom
0x5AAC	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x5AAE	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5AB0	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x5AB2	0x0EB0      	MOVLW       can_user_read_message_FILAS_PROG_L0
0x5AB4	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x5AB6	0x0EA3      	MOVLW       hi_addr(can_user_read_message_FILAS_PROG_L0)
0x5AB8	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x5ABA	0x0E00      	MOVLW       higher_addr(can_user_read_message_FILAS_PROG_L0)
0x5ABC	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x5ABE	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,1742 :: 		numToString(myTable.row, msjConst, 4);
0x5AC2	0xF53BC31B  	MOVFF       Expendedora_myTable+2, FARG_numToString_valor
0x5AC6	0xF53CC31C  	MOVFF       Expendedora_myTable+3, FARG_numToString_valor+1
0x5ACA	0x0E00      	MOVLW       0
0x5ACC	0x6F3D      	MOVWF       FARG_numToString_valor+2, 1
0x5ACE	0x6F3E      	MOVWF       FARG_numToString_valor+3, 1
0x5AD0	0x0E05      	MOVLW       _msjConst
0x5AD2	0x6F3F      	MOVWF       FARG_numToString_cadena, 1
0x5AD4	0x0E03      	MOVLW       hi_addr(_msjConst)
0x5AD6	0x6F40      	MOVWF       FARG_numToString_cadena+1, 1
0x5AD8	0x0E04      	MOVLW       4
0x5ADA	0x6F41      	MOVWF       FARG_numToString_digitos, 1
0x5ADC	0xF005EC17  	CALL        _numToString, 0
;Expendedora.c,1743 :: 		string_add(bufferEeprom, msjConst);
0x5AE0	0x0E15      	MOVLW       _bufferEeprom
0x5AE2	0x0105      	MOVLB       5
0x5AE4	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x5AE6	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5AE8	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x5AEA	0x0E05      	MOVLW       _msjConst
0x5AEC	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x5AEE	0x0E03      	MOVLW       hi_addr(_msjConst)
0x5AF0	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x5AF2	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,1748 :: 		}else{
0x5AF6	0xD00D      	BRA         L_can_user_read_message875
L_can_user_read_message874:
0x5AF8	0x0105      	MOVLB       5
;Expendedora.c,1749 :: 		string_addc(bufferEeprom, CAN_TABLE_NO_FOUND);
0x5AFA	0x0E15      	MOVLW       _bufferEeprom
0x5AFC	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x5AFE	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5B00	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x5B02	0x0E71      	MOVLW       _CAN_TABLE_NO_FOUND
0x5B04	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x5B06	0x0EA3      	MOVLW       hi_addr(_CAN_TABLE_NO_FOUND)
0x5B08	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x5B0A	0x0E00      	MOVLW       higher_addr(_CAN_TABLE_NO_FOUND)
0x5B0C	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x5B0E	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,1750 :: 		}
L_can_user_read_message875:
;Expendedora.c,1751 :: 		}else if(string_cmpnc(CAN_PASSBACK, &can.rxBuffer[sizeTotal], sizeKey)){
0x5B12	0xD0C4      	BRA         L_can_user_read_message876
L_can_user_read_message873:
0x5B14	0x0EDC      	MOVLW       _CAN_PASSBACK
0x5B16	0x6F23      	MOVWF       FARG_string_cmpnc_text1, 1
0x5B18	0x0EA3      	MOVLW       hi_addr(_CAN_PASSBACK)
0x5B1A	0x6F24      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x5B1C	0x0E00      	MOVLW       higher_addr(_CAN_PASSBACK)
0x5B1E	0x6F25      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x5B20	0x0EB4      	MOVLW       _can+107
0x5B22	0x6F26      	MOVWF       FARG_string_cmpnc_text2, 1
0x5B24	0x0E03      	MOVLW       hi_addr(_can+107)
0x5B26	0x6F27      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x5B28	0x5106      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x5B2A	0x2726      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x5B2C	0xB0D8      	BTFSC       STATUS, 0 
0x5B2E	0x2B27      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x5B30	0xF528C505  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x5B34	0xF013EC78  	CALL        _string_cmpnc, 0
0x5B38	0x5200      	MOVF        R0, 1 
0x5B3A	0xB4D8      	BTFSC       STATUS, 2 
0x5B3C	0xD0AF      	BRA         L_can_user_read_message877
;Expendedora.c,1753 :: 		sizeTotal += sizeKey;
0x5B3E	0x5105      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x5B40	0x2506      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x5B42	0x6E00      	MOVWF       R0 
0x5B44	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1756 :: 		if(mysql_exist(&can.rxBuffer[sizeTotal])){
0x5B48	0x0EB4      	MOVLW       _can+107
0x5B4A	0x6F47      	MOVWF       FARG_mysql_exist_name, 1
0x5B4C	0x0E03      	MOVLW       hi_addr(_can+107)
0x5B4E	0x6F48      	MOVWF       FARG_mysql_exist_name+1, 1
0x5B50	0x5000      	MOVF        R0, 0 
0x5B52	0x2747      	ADDWF       FARG_mysql_exist_name, 1, 1
0x5B54	0xB0D8      	BTFSC       STATUS, 0 
0x5B56	0x2B48      	INCF        FARG_mysql_exist_name+1, 1, 1
0x5B58	0xF003EC42  	CALL        _mysql_exist, 0
0x5B5C	0x5200      	MOVF        R0, 1 
0x5B5E	0xB4D8      	BTFSC       STATUS, 2 
0x5B60	0xD090      	BRA         L_can_user_read_message878
;Expendedora.c,1757 :: 		string_addc(bufferEeprom, CAN_PASSBACK);
0x5B62	0x0E15      	MOVLW       _bufferEeprom
0x5B64	0x0105      	MOVLB       5
0x5B66	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x5B68	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5B6A	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x5B6C	0x0EDC      	MOVLW       _CAN_PASSBACK
0x5B6E	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x5B70	0x0EA3      	MOVLW       hi_addr(_CAN_PASSBACK)
0x5B72	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x5B74	0x0E00      	MOVLW       higher_addr(_CAN_PASSBACK)
0x5B76	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x5B78	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,1759 :: 		string_cpyn(msjConst, &can.rxBuffer[sizeTotal], 3);
0x5B7C	0x0E05      	MOVLW       _msjConst
0x5B7E	0x6F23      	MOVWF       FARG_string_cpyn_destino, 1
0x5B80	0x0E03      	MOVLW       hi_addr(_msjConst)
0x5B82	0x6F24      	MOVWF       FARG_string_cpyn_destino+1, 1
0x5B84	0x0EB4      	MOVLW       _can+107
0x5B86	0x6F25      	MOVWF       FARG_string_cpyn_origen, 1
0x5B88	0x0E03      	MOVLW       hi_addr(_can+107)
0x5B8A	0x6F26      	MOVWF       FARG_string_cpyn_origen+1, 1
0x5B8C	0x5106      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x5B8E	0x2725      	ADDWF       FARG_string_cpyn_origen, 1, 1
0x5B90	0xB0D8      	BTFSC       STATUS, 0 
0x5B92	0x2B26      	INCF        FARG_string_cpyn_origen+1, 1, 1
0x5B94	0x0E03      	MOVLW       3
0x5B96	0x6F27      	MOVWF       FARG_string_cpyn_size, 1
0x5B98	0xF014EC39  	CALL        _string_cpyn, 0
;Expendedora.c,1760 :: 		string_toUpper(msjConst);
0x5B9C	0x0E05      	MOVLW       _msjConst
0x5B9E	0x6F23      	MOVWF       FARG_string_toUpper_cadena, 1
0x5BA0	0x0E03      	MOVLW       hi_addr(_msjConst)
0x5BA2	0x6F24      	MOVWF       FARG_string_toUpper_cadena+1, 1
0x5BA4	0xF010EC20  	CALL        _string_toUpper, 0
;Expendedora.c,1761 :: 		string_add(bufferEeprom, msjConst);
0x5BA8	0x0E15      	MOVLW       _bufferEeprom
0x5BAA	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x5BAC	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5BAE	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x5BB0	0x0E05      	MOVLW       _msjConst
0x5BB2	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x5BB4	0x0E03      	MOVLW       hi_addr(_msjConst)
0x5BB6	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x5BB8	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,1764 :: 		for(fila = 1; fila <= myTable.rowAct; fila++)
0x5BBC	0x0E01      	MOVLW       1
0x5BBE	0x6F07      	MOVWF       can_user_read_message_fila_L0, 1
0x5BC0	0x0E00      	MOVLW       0
0x5BC2	0x6F08      	MOVWF       can_user_read_message_fila_L0+1, 1
L_can_user_read_message879:
0x5BC4	0x5108      	MOVF        can_user_read_message_fila_L0+1, 0, 1
0x5BC6	0x0103      	MOVLB       3
0x5BC8	0x5D1E      	SUBWF       Expendedora_myTable+5, 0, 1
0x5BCA	0xE104      	BNZ         L__can_user_read_message1399
0x5BCC	0x0105      	MOVLB       5
0x5BCE	0x5107      	MOVF        can_user_read_message_fila_L0, 0, 1
0x5BD0	0x0103      	MOVLB       3
0x5BD2	0x5D1D      	SUBWF       Expendedora_myTable+4, 0, 1
L__can_user_read_message1399:
0x5BD4	0xE31E      	BNC         L_can_user_read_message880
;Expendedora.c,1765 :: 		mysql_write(&can.rxBuffer[sizeTotal], pensionadosEstatus, fila, '-', false);
0x5BD6	0x0EB4      	MOVLW       _can+107
0x5BD8	0x0105      	MOVLB       5
0x5BDA	0x6F23      	MOVWF       FARG_mysql_write_name, 1
0x5BDC	0x0E03      	MOVLW       hi_addr(_can+107)
0x5BDE	0x6F24      	MOVWF       FARG_mysql_write_name+1, 1
0x5BE0	0x5106      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x5BE2	0x2723      	ADDWF       FARG_mysql_write_name, 1, 1
0x5BE4	0xB0D8      	BTFSC       STATUS, 0 
0x5BE6	0x2B24      	INCF        FARG_mysql_write_name+1, 1, 1
0x5BE8	0x0EC9      	MOVLW       _pensionadosEstatus
0x5BEA	0x6F25      	MOVWF       FARG_mysql_write_column, 1
0x5BEC	0x0E01      	MOVLW       hi_addr(_pensionadosEstatus)
0x5BEE	0x6F26      	MOVWF       FARG_mysql_write_column+1, 1
0x5BF0	0xF527C507  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_fila
0x5BF4	0xF528C508  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_fila+1
0x5BF8	0x0E2D      	MOVLW       45
0x5BFA	0x6F29      	MOVWF       FARG_mysql_write_value, 1
0x5BFC	0x0E00      	MOVLW       0
0x5BFE	0x6F2A      	MOVWF       FARG_mysql_write_value+1, 1
0x5C00	0x6F2B      	MOVWF       FARG_mysql_write_value+2, 1
0x5C02	0x6F2C      	MOVWF       FARG_mysql_write_value+3, 1
0x5C04	0x6B2D      	CLRF        FARG_mysql_write_endWrite, 1
0x5C06	0xF012ECDC  	CALL        _mysql_write, 0
;Expendedora.c,1764 :: 		for(fila = 1; fila <= myTable.rowAct; fila++)
0x5C0A	0x0105      	MOVLB       5
0x5C0C	0x4B07      	INFSNZ      can_user_read_message_fila_L0, 1, 1
0x5C0E	0x2B08      	INCF        can_user_read_message_fila_L0+1, 1, 1
;Expendedora.c,1765 :: 		mysql_write(&can.rxBuffer[sizeTotal], pensionadosEstatus, fila, '-', false);
0x5C10	0xD7D9      	BRA         L_can_user_read_message879
L_can_user_read_message880:
0x5C12	0x0105      	MOVLB       5
;Expendedora.c,1768 :: 		if(!mysql_write(&can.rxBuffer[sizeTotal], pensionadosEstatus, 1, '-', false))
0x5C14	0x0EB4      	MOVLW       _can+107
0x5C16	0x6F23      	MOVWF       FARG_mysql_write_name, 1
0x5C18	0x0E03      	MOVLW       hi_addr(_can+107)
0x5C1A	0x6F24      	MOVWF       FARG_mysql_write_name+1, 1
0x5C1C	0x5106      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x5C1E	0x2723      	ADDWF       FARG_mysql_write_name, 1, 1
0x5C20	0xB0D8      	BTFSC       STATUS, 0 
0x5C22	0x2B24      	INCF        FARG_mysql_write_name+1, 1, 1
0x5C24	0x0EC9      	MOVLW       _pensionadosEstatus
0x5C26	0x6F25      	MOVWF       FARG_mysql_write_column, 1
0x5C28	0x0E01      	MOVLW       hi_addr(_pensionadosEstatus)
0x5C2A	0x6F26      	MOVWF       FARG_mysql_write_column+1, 1
0x5C2C	0x0E01      	MOVLW       1
0x5C2E	0x6F27      	MOVWF       FARG_mysql_write_fila, 1
0x5C30	0x0E00      	MOVLW       0
0x5C32	0x6F28      	MOVWF       FARG_mysql_write_fila+1, 1
0x5C34	0x0E2D      	MOVLW       45
0x5C36	0x6F29      	MOVWF       FARG_mysql_write_value, 1
0x5C38	0x0E00      	MOVLW       0
0x5C3A	0x6F2A      	MOVWF       FARG_mysql_write_value+1, 1
0x5C3C	0x6F2B      	MOVWF       FARG_mysql_write_value+2, 1
0x5C3E	0x6F2C      	MOVWF       FARG_mysql_write_value+3, 1
0x5C40	0x6B2D      	CLRF        FARG_mysql_write_endWrite, 1
0x5C42	0xF012ECDC  	CALL        _mysql_write, 0
0x5C46	0x5200      	MOVF        R0, 1 
0x5C48	0xE10E      	BNZ         L_can_user_read_message882
;Expendedora.c,1769 :: 		string_addc(bufferEeprom, CAN_TABLE_MODIFICADO);
0x5C4A	0x0E15      	MOVLW       _bufferEeprom
0x5C4C	0x0105      	MOVLB       5
0x5C4E	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x5C50	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5C52	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x5C54	0x0E5C      	MOVLW       _CAN_TABLE_MODIFICADO
0x5C56	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x5C58	0x0EA3      	MOVLW       hi_addr(_CAN_TABLE_MODIFICADO)
0x5C5A	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x5C5C	0x0E00      	MOVLW       higher_addr(_CAN_TABLE_MODIFICADO)
0x5C5E	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x5C60	0xF015EC0C  	CALL        _string_addc, 0
0x5C64	0xD00D      	BRA         L_can_user_read_message883
L_can_user_read_message882:
0x5C66	0x0105      	MOVLB       5
;Expendedora.c,1771 :: 		string_addc(bufferEeprom,CAN_TABLE_ERROR);
0x5C68	0x0E15      	MOVLW       _bufferEeprom
0x5C6A	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x5C6C	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5C6E	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x5C70	0x0E7A      	MOVLW       _CAN_TABLE_ERROR
0x5C72	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x5C74	0x0EA3      	MOVLW       hi_addr(_CAN_TABLE_ERROR)
0x5C76	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x5C78	0x0E00      	MOVLW       higher_addr(_CAN_TABLE_ERROR)
0x5C7A	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x5C7C	0xF015EC0C  	CALL        _string_addc, 0
L_can_user_read_message883:
;Expendedora.c,1772 :: 		}else{
0x5C80	0xD00D      	BRA         L_can_user_read_message884
L_can_user_read_message878:
0x5C82	0x0105      	MOVLB       5
;Expendedora.c,1773 :: 		string_addc(bufferEeprom, CAN_TABLE_NO_FOUND);
0x5C84	0x0E15      	MOVLW       _bufferEeprom
0x5C86	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x5C88	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5C8A	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x5C8C	0x0E71      	MOVLW       _CAN_TABLE_NO_FOUND
0x5C8E	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x5C90	0x0EA3      	MOVLW       hi_addr(_CAN_TABLE_NO_FOUND)
0x5C92	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x5C94	0x0E00      	MOVLW       higher_addr(_CAN_TABLE_NO_FOUND)
0x5C96	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x5C98	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,1774 :: 		}
L_can_user_read_message884:
;Expendedora.c,1775 :: 		}
L_can_user_read_message877:
L_can_user_read_message876:
L_can_user_read_message872:
;Expendedora.c,1777 :: 		string_cpyc(msjConst, CAN_MODULE);
0x5C9C	0x0E05      	MOVLW       _msjConst
0x5C9E	0x6F23      	MOVWF       FARG_string_cpyc_destino, 1
0x5CA0	0x0E03      	MOVLW       hi_addr(_msjConst)
0x5CA2	0x6F24      	MOVWF       FARG_string_cpyc_destino+1, 1
0x5CA4	0x0E1E      	MOVLW       _CAN_MODULE
0x5CA6	0x6F25      	MOVWF       FARG_string_cpyc_origen, 1
0x5CA8	0x0EA4      	MOVLW       hi_addr(_CAN_MODULE)
0x5CAA	0x6F26      	MOVWF       FARG_string_cpyc_origen+1, 1
0x5CAC	0x0E00      	MOVLW       higher_addr(_CAN_MODULE)
0x5CAE	0x6F27      	MOVWF       FARG_string_cpyc_origen+2, 1
0x5CB0	0xF014EC09  	CALL        _string_cpyc, 0
;Expendedora.c,1778 :: 		numToHex(can.id, &msjConst[1], 1);
0x5CB4	0xF523C355  	MOVFF       _can+12, FARG_numToHex_valor
0x5CB8	0x0E00      	MOVLW       0
0x5CBA	0x6F24      	MOVWF       FARG_numToHex_valor+1, 1
0x5CBC	0x6F25      	MOVWF       FARG_numToHex_valor+2, 1
0x5CBE	0x6F26      	MOVWF       FARG_numToHex_valor+3, 1
0x5CC0	0x0E06      	MOVLW       _msjConst+1
0x5CC2	0x6F27      	MOVWF       FARG_numToHex_cadena, 1
0x5CC4	0x0E03      	MOVLW       hi_addr(_msjConst+1)
0x5CC6	0x6F28      	MOVWF       FARG_numToHex_cadena+1, 1
0x5CC8	0x0E01      	MOVLW       1
0x5CCA	0x6F29      	MOVWF       FARG_numToHex_bytes, 1
0x5CCC	0xF016EC51  	CALL        _numToHex, 0
;Expendedora.c,1779 :: 		string_add(bufferEeprom, msjConst);
0x5CD0	0x0E15      	MOVLW       _bufferEeprom
0x5CD2	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x5CD4	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5CD6	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x5CD8	0x0E05      	MOVLW       _msjConst
0x5CDA	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x5CDC	0x0E03      	MOVLW       hi_addr(_msjConst)
0x5CDE	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x5CE0	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,1781 :: 		buffer_save_send(true, bufferEeprom);
0x5CE4	0x0E01      	MOVLW       1
0x5CE6	0x6F23      	MOVWF       FARG_buffer_save_send_guardar, 1
0x5CE8	0x0E15      	MOVLW       _bufferEeprom
0x5CEA	0x6F24      	MOVWF       FARG_buffer_save_send_buffer, 1
0x5CEC	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5CEE	0x6F25      	MOVWF       FARG_buffer_save_send_buffer+1, 1
0x5CF0	0xF014ECA9  	CALL        _buffer_save_send, 0
;Expendedora.c,1782 :: 		}else if(string_cmpnc(CAN_TABLE_RW, &can.rxBuffer[sizeTotal], sizeKey)){
0x5CF4	0xF034EFDA  	GOTO        L_can_user_read_message885
L_can_user_read_message868:
0x5CF8	0x0ECC      	MOVLW       _CAN_TABLE_RW
0x5CFA	0x0105      	MOVLB       5
0x5CFC	0x6F23      	MOVWF       FARG_string_cmpnc_text1, 1
0x5CFE	0x0EA3      	MOVLW       hi_addr(_CAN_TABLE_RW)
0x5D00	0x6F24      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x5D02	0x0E00      	MOVLW       higher_addr(_CAN_TABLE_RW)
0x5D04	0x6F25      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x5D06	0x0EB4      	MOVLW       _can+107
0x5D08	0x6F26      	MOVWF       FARG_string_cmpnc_text2, 1
0x5D0A	0x0E03      	MOVLW       hi_addr(_can+107)
0x5D0C	0x6F27      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x5D0E	0x5106      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x5D10	0x2726      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x5D12	0xB0D8      	BTFSC       STATUS, 0 
0x5D14	0x2B27      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x5D16	0xF528C505  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x5D1A	0xF013EC78  	CALL        _string_cmpnc, 0
0x5D1E	0x5200      	MOVF        R0, 1 
0x5D20	0xB4D8      	BTFSC       STATUS, 2 
0x5D22	0xD1C1      	BRA         L_can_user_read_message886
;Expendedora.c,1784 :: 		sizeTotal += sizeKey;
0x5D24	0x5105      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x5D26	0x2506      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x5D28	0x6E00      	MOVWF       R0 
0x5D2A	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1785 :: 		sizeKey = 4;
0x5D2E	0x0E04      	MOVLW       4
0x5D30	0x6F05      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Expendedora.c,1786 :: 		string_cpyn(msjConst, &can.rxBuffer[sizeTotal], sizeKey);
0x5D32	0x0E05      	MOVLW       _msjConst
0x5D34	0x6F23      	MOVWF       FARG_string_cpyn_destino, 1
0x5D36	0x0E03      	MOVLW       hi_addr(_msjConst)
0x5D38	0x6F24      	MOVWF       FARG_string_cpyn_destino+1, 1
0x5D3A	0x0EB4      	MOVLW       _can+107
0x5D3C	0x6F25      	MOVWF       FARG_string_cpyn_origen, 1
0x5D3E	0x0E03      	MOVLW       hi_addr(_can+107)
0x5D40	0x6F26      	MOVWF       FARG_string_cpyn_origen+1, 1
0x5D42	0x5000      	MOVF        R0, 0 
0x5D44	0x2725      	ADDWF       FARG_string_cpyn_origen, 1, 1
0x5D46	0xB0D8      	BTFSC       STATUS, 0 
0x5D48	0x2B26      	INCF        FARG_string_cpyn_origen+1, 1, 1
0x5D4A	0x0E04      	MOVLW       4
0x5D4C	0x6F27      	MOVWF       FARG_string_cpyn_size, 1
0x5D4E	0xF014EC39  	CALL        _string_cpyn, 0
;Expendedora.c,1787 :: 		fila = stringToNum(msjConst);
0x5D52	0x0E05      	MOVLW       _msjConst
0x5D54	0x6F23      	MOVWF       FARG_stringToNum_cadena, 1
0x5D56	0x0E03      	MOVLW       hi_addr(_msjConst)
0x5D58	0x6F24      	MOVWF       FARG_stringToNum_cadena+1, 1
0x5D5A	0xF013EC99  	CALL        _stringToNum, 0
0x5D5E	0xF507C000  	MOVFF       R0, can_user_read_message_fila_L0
0x5D62	0xF508C001  	MOVFF       R1, can_user_read_message_fila_L0+1
;Expendedora.c,1789 :: 		sizeTotal += sizeKey;
0x5D66	0x5105      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x5D68	0x2706      	ADDWF       can_user_read_message_sizeTotal_L0, 1, 1
;Expendedora.c,1790 :: 		sizeKey = sizeof(CAN_PENSIONADO)-1;
0x5D6A	0x0E03      	MOVLW       3
0x5D6C	0x6F05      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Expendedora.c,1792 :: 		string_cpyc(bufferEeprom, CAN_TBL);
0x5D6E	0x0E15      	MOVLW       _bufferEeprom
0x5D70	0x6F23      	MOVWF       FARG_string_cpyc_destino, 1
0x5D72	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5D74	0x6F24      	MOVWF       FARG_string_cpyc_destino+1, 1
0x5D76	0x0EC8      	MOVLW       _CAN_TBL
0x5D78	0x6F25      	MOVWF       FARG_string_cpyc_origen, 1
0x5D7A	0x0EA3      	MOVLW       hi_addr(_CAN_TBL)
0x5D7C	0x6F26      	MOVWF       FARG_string_cpyc_origen+1, 1
0x5D7E	0x0E00      	MOVLW       higher_addr(_CAN_TBL)
0x5D80	0x6F27      	MOVWF       FARG_string_cpyc_origen+2, 1
0x5D82	0xF014EC09  	CALL        _string_cpyc, 0
;Expendedora.c,1793 :: 		string_addc(bufferEeprom, CAN_MODULE);
0x5D86	0x0E15      	MOVLW       _bufferEeprom
0x5D88	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x5D8A	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5D8C	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x5D8E	0x0E1E      	MOVLW       _CAN_MODULE
0x5D90	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x5D92	0x0EA4      	MOVLW       hi_addr(_CAN_MODULE)
0x5D94	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x5D96	0x0E00      	MOVLW       higher_addr(_CAN_MODULE)
0x5D98	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x5D9A	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,1794 :: 		numToHex(can.id, msjConst, 1);
0x5D9E	0xF523C355  	MOVFF       _can+12, FARG_numToHex_valor
0x5DA2	0x0E00      	MOVLW       0
0x5DA4	0x6F24      	MOVWF       FARG_numToHex_valor+1, 1
0x5DA6	0x6F25      	MOVWF       FARG_numToHex_valor+2, 1
0x5DA8	0x6F26      	MOVWF       FARG_numToHex_valor+3, 1
0x5DAA	0x0E05      	MOVLW       _msjConst
0x5DAC	0x6F27      	MOVWF       FARG_numToHex_cadena, 1
0x5DAE	0x0E03      	MOVLW       hi_addr(_msjConst)
0x5DB0	0x6F28      	MOVWF       FARG_numToHex_cadena+1, 1
0x5DB2	0x0E01      	MOVLW       1
0x5DB4	0x6F29      	MOVWF       FARG_numToHex_bytes, 1
0x5DB6	0xF016EC51  	CALL        _numToHex, 0
;Expendedora.c,1795 :: 		string_add(bufferEeprom, msjConst);
0x5DBA	0x0E15      	MOVLW       _bufferEeprom
0x5DBC	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x5DBE	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5DC0	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x5DC2	0x0E05      	MOVLW       _msjConst
0x5DC4	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x5DC6	0x0E03      	MOVLW       hi_addr(_msjConst)
0x5DC8	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x5DCA	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,1798 :: 		if(string_cmpnc(CAN_PENSIONADO, &can.rxBuffer[sizeTotal], sizeKey)){
0x5DCE	0x0EF0      	MOVLW       _CAN_PENSIONADO
0x5DD0	0x6F23      	MOVWF       FARG_string_cmpnc_text1, 1
0x5DD2	0x0EA3      	MOVLW       hi_addr(_CAN_PENSIONADO)
0x5DD4	0x6F24      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x5DD6	0x0E00      	MOVLW       higher_addr(_CAN_PENSIONADO)
0x5DD8	0x6F25      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x5DDA	0x0EB4      	MOVLW       _can+107
0x5DDC	0x6F26      	MOVWF       FARG_string_cmpnc_text2, 1
0x5DDE	0x0E03      	MOVLW       hi_addr(_can+107)
0x5DE0	0x6F27      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x5DE2	0x5106      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x5DE4	0x2726      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x5DE6	0xB0D8      	BTFSC       STATUS, 0 
0x5DE8	0x2B27      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x5DEA	0xF528C505  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x5DEE	0xF013EC78  	CALL        _string_cmpnc, 0
0x5DF2	0x5200      	MOVF        R0, 1 
0x5DF4	0xB4D8      	BTFSC       STATUS, 2 
0x5DF6	0xD155      	BRA         L_can_user_read_message887
;Expendedora.c,1800 :: 		string_addc(bufferEeprom, CAN_PENSIONADO);
0x5DF8	0x0E15      	MOVLW       _bufferEeprom
0x5DFA	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x5DFC	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5DFE	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x5E00	0x0EF0      	MOVLW       _CAN_PENSIONADO
0x5E02	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x5E04	0x0EA3      	MOVLW       hi_addr(_CAN_PENSIONADO)
0x5E06	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x5E08	0x0E00      	MOVLW       higher_addr(_CAN_PENSIONADO)
0x5E0A	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x5E0C	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,1801 :: 		sizeTotal += sizeKey;
0x5E10	0x5105      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x5E12	0x2506      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x5E14	0x6E00      	MOVWF       R0 
0x5E16	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1802 :: 		sizeKey = sizeof(CAN_TABLE_READ)-1;
0x5E1A	0x0E03      	MOVLW       3
0x5E1C	0x6F05      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Expendedora.c,1804 :: 		if(string_cmpnc(CAN_TABLE_READ, &can.rxBuffer[sizeTotal], sizeKey)){
0x5E1E	0x0ED4      	MOVLW       _CAN_TABLE_READ
0x5E20	0x6F23      	MOVWF       FARG_string_cmpnc_text1, 1
0x5E22	0x0EA3      	MOVLW       hi_addr(_CAN_TABLE_READ)
0x5E24	0x6F24      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x5E26	0x0E00      	MOVLW       higher_addr(_CAN_TABLE_READ)
0x5E28	0x6F25      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x5E2A	0x0EB4      	MOVLW       _can+107
0x5E2C	0x6F26      	MOVWF       FARG_string_cmpnc_text2, 1
0x5E2E	0x0E03      	MOVLW       hi_addr(_can+107)
0x5E30	0x6F27      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x5E32	0x5000      	MOVF        R0, 0 
0x5E34	0x2726      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x5E36	0xB0D8      	BTFSC       STATUS, 0 
0x5E38	0x2B27      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x5E3A	0x0E03      	MOVLW       3
0x5E3C	0x6F28      	MOVWF       FARG_string_cmpnc_bytes, 1
0x5E3E	0xF013EC78  	CALL        _string_cmpnc, 0
0x5E42	0x5200      	MOVF        R0, 1 
0x5E44	0xE074      	BZ          L_can_user_read_message888
;Expendedora.c,1805 :: 		if(!mysql_read(tablePensionados, pensionadosID, fila, &id)){
0x5E46	0x0E3D      	MOVLW       _tablePensionados
0x5E48	0x6F31      	MOVWF       FARG_mysql_read_name, 1
0x5E4A	0x0E01      	MOVLW       hi_addr(_tablePensionados)
0x5E4C	0x6F32      	MOVWF       FARG_mysql_read_name+1, 1
0x5E4E	0x0EC6      	MOVLW       _pensionadosID
0x5E50	0x6F33      	MOVWF       FARG_mysql_read_column, 1
0x5E52	0x0E01      	MOVLW       hi_addr(_pensionadosID)
0x5E54	0x6F34      	MOVWF       FARG_mysql_read_column+1, 1
0x5E56	0xF535C507  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_read_fila
0x5E5A	0xF536C508  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_read_fila+1
0x5E5E	0x0E13      	MOVLW       can_user_read_message_id_L0
0x5E60	0x6F37      	MOVWF       FARG_mysql_read_result, 1
0x5E62	0x0E05      	MOVLW       hi_addr(can_user_read_message_id_L0)
0x5E64	0x6F38      	MOVWF       FARG_mysql_read_result+1, 1
0x5E66	0xF00AECAA  	CALL        _mysql_read, 0
0x5E6A	0x5200      	MOVF        R0, 1 
0x5E6C	0xE152      	BNZ         L_can_user_read_message889
;Expendedora.c,1807 :: 		mysql_read_string(tablePensionados, pensionadosVigencia, fila, &vigencia);
0x5E6E	0x0E3D      	MOVLW       _tablePensionados
0x5E70	0x0105      	MOVLB       5
0x5E72	0x6F23      	MOVWF       FARG_mysql_read_string_name, 1
0x5E74	0x0E01      	MOVLW       hi_addr(_tablePensionados)
0x5E76	0x6F24      	MOVWF       FARG_mysql_read_string_name+1, 1
0x5E78	0x0EBD      	MOVLW       _pensionadosVigencia
0x5E7A	0x6F25      	MOVWF       FARG_mysql_read_string_column, 1
0x5E7C	0x0E01      	MOVLW       hi_addr(_pensionadosVigencia)
0x5E7E	0x6F26      	MOVWF       FARG_mysql_read_string_column+1, 1
0x5E80	0xF527C507  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_read_string_fila
0x5E84	0xF528C508  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_read_string_fila+1
0x5E88	0x0E09      	MOVLW       can_user_read_message_vigencia_L0
0x5E8A	0x6F29      	MOVWF       FARG_mysql_read_string_result, 1
0x5E8C	0x0E05      	MOVLW       hi_addr(can_user_read_message_vigencia_L0)
0x5E8E	0x6F2A      	MOVWF       FARG_mysql_read_string_result+1, 1
0x5E90	0xF014EC60  	CALL        _mysql_read_string, 0
;Expendedora.c,1808 :: 		mysql_read_string(tablePensionados, pensionadosEstatus, fila, &estatus);
0x5E94	0x0E3D      	MOVLW       _tablePensionados
0x5E96	0x0105      	MOVLB       5
0x5E98	0x6F23      	MOVWF       FARG_mysql_read_string_name, 1
0x5E9A	0x0E01      	MOVLW       hi_addr(_tablePensionados)
0x5E9C	0x6F24      	MOVWF       FARG_mysql_read_string_name+1, 1
0x5E9E	0x0EC9      	MOVLW       _pensionadosEstatus
0x5EA0	0x6F25      	MOVWF       FARG_mysql_read_string_column, 1
0x5EA2	0x0E01      	MOVLW       hi_addr(_pensionadosEstatus)
0x5EA4	0x6F26      	MOVWF       FARG_mysql_read_string_column+1, 1
0x5EA6	0xF527C507  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_read_string_fila
0x5EAA	0xF528C508  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_read_string_fila+1
0x5EAE	0x0E0A      	MOVLW       can_user_read_message_estatus_L0
0x5EB0	0x6F29      	MOVWF       FARG_mysql_read_string_result, 1
0x5EB2	0x0E05      	MOVLW       hi_addr(can_user_read_message_estatus_L0)
0x5EB4	0x6F2A      	MOVWF       FARG_mysql_read_string_result+1, 1
0x5EB6	0xF014EC60  	CALL        _mysql_read_string, 0
;Expendedora.c,1810 :: 		numToHex(id, msjConst, 3);
0x5EBA	0xF523C513  	MOVFF       can_user_read_message_id_L0, FARG_numToHex_valor
0x5EBE	0xF524C514  	MOVFF       can_user_read_message_id_L0+1, FARG_numToHex_valor+1
0x5EC2	0xF525C515  	MOVFF       can_user_read_message_id_L0+2, FARG_numToHex_valor+2
0x5EC6	0xF526C516  	MOVFF       can_user_read_message_id_L0+3, FARG_numToHex_valor+3
0x5ECA	0x0E05      	MOVLW       _msjConst
0x5ECC	0x0105      	MOVLB       5
0x5ECE	0x6F27      	MOVWF       FARG_numToHex_cadena, 1
0x5ED0	0x0E03      	MOVLW       hi_addr(_msjConst)
0x5ED2	0x6F28      	MOVWF       FARG_numToHex_cadena+1, 1
0x5ED4	0x0E03      	MOVLW       3
0x5ED6	0x6F29      	MOVWF       FARG_numToHex_bytes, 1
0x5ED8	0xF016EC51  	CALL        _numToHex, 0
;Expendedora.c,1811 :: 		string_add(bufferEeprom, msjConst);
0x5EDC	0x0E15      	MOVLW       _bufferEeprom
0x5EDE	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x5EE0	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5EE2	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x5EE4	0x0E05      	MOVLW       _msjConst
0x5EE6	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x5EE8	0x0E03      	MOVLW       hi_addr(_msjConst)
0x5EEA	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x5EEC	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,1812 :: 		string_push(bufferEeprom, vigencia);
0x5EF0	0x0E15      	MOVLW       _bufferEeprom
0x5EF2	0x6F23      	MOVWF       FARG_string_push_texto, 1
0x5EF4	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5EF6	0x6F24      	MOVWF       FARG_string_push_texto+1, 1
0x5EF8	0xF525C509  	MOVFF       can_user_read_message_vigencia_L0, FARG_string_push_caracter
0x5EFC	0xF013ECEA  	CALL        _string_push, 0
;Expendedora.c,1813 :: 		string_push(bufferEeprom, estatus);
0x5F00	0x0E15      	MOVLW       _bufferEeprom
0x5F02	0x6F23      	MOVWF       FARG_string_push_texto, 1
0x5F04	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5F06	0x6F24      	MOVWF       FARG_string_push_texto+1, 1
0x5F08	0xF525C50A  	MOVFF       can_user_read_message_estatus_L0, FARG_string_push_caracter
0x5F0C	0xF013ECEA  	CALL        _string_push, 0
;Expendedora.c,1814 :: 		}else{
0x5F10	0xD00D      	BRA         L_can_user_read_message890
L_can_user_read_message889:
0x5F12	0x0105      	MOVLB       5
;Expendedora.c,1815 :: 		string_addc(bufferEeprom, CAN_TABLE_ERROR);
0x5F14	0x0E15      	MOVLW       _bufferEeprom
0x5F16	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x5F18	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x5F1A	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x5F1C	0x0E7A      	MOVLW       _CAN_TABLE_ERROR
0x5F1E	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x5F20	0x0EA3      	MOVLW       hi_addr(_CAN_TABLE_ERROR)
0x5F22	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x5F24	0x0E00      	MOVLW       higher_addr(_CAN_TABLE_ERROR)
0x5F26	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x5F28	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,1816 :: 		}
L_can_user_read_message890:
;Expendedora.c,1817 :: 		}else if(string_cmpnc(CAN_TABLE_WRITE, &can.rxBuffer[sizeTotal], sizeKey)){
0x5F2C	0xD0BA      	BRA         L_can_user_read_message891
L_can_user_read_message888:
0x5F2E	0x0ED0      	MOVLW       _CAN_TABLE_WRITE
0x5F30	0x6F23      	MOVWF       FARG_string_cmpnc_text1, 1
0x5F32	0x0EA3      	MOVLW       hi_addr(_CAN_TABLE_WRITE)
0x5F34	0x6F24      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x5F36	0x0E00      	MOVLW       higher_addr(_CAN_TABLE_WRITE)
0x5F38	0x6F25      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x5F3A	0x0EB4      	MOVLW       _can+107
0x5F3C	0x6F26      	MOVWF       FARG_string_cmpnc_text2, 1
0x5F3E	0x0E03      	MOVLW       hi_addr(_can+107)
0x5F40	0x6F27      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x5F42	0x5106      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x5F44	0x2726      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x5F46	0xB0D8      	BTFSC       STATUS, 0 
0x5F48	0x2B27      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x5F4A	0xF528C505  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x5F4E	0xF013EC78  	CALL        _string_cmpnc, 0
0x5F52	0x5200      	MOVF        R0, 1 
0x5F54	0xB4D8      	BTFSC       STATUS, 2 
0x5F56	0xD0A5      	BRA         L_can_user_read_message892
;Expendedora.c,1818 :: 		sizeTotal += sizeKey;
0x5F58	0x5105      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x5F5A	0x2506      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x5F5C	0x6E00      	MOVWF       R0 
0x5F5E	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1819 :: 		sizeKey = 6;  //3 Bytes en hexadecimal
0x5F62	0x0E06      	MOVLW       6
0x5F64	0x6F05      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Expendedora.c,1820 :: 		string_cpyn(msjConst, &can.rxBuffer[sizeTotal], sizeKey);
0x5F66	0x0E05      	MOVLW       _msjConst
0x5F68	0x6F23      	MOVWF       FARG_string_cpyn_destino, 1
0x5F6A	0x0E03      	MOVLW       hi_addr(_msjConst)
0x5F6C	0x6F24      	MOVWF       FARG_string_cpyn_destino+1, 1
0x5F6E	0x0EB4      	MOVLW       _can+107
0x5F70	0x6F25      	MOVWF       FARG_string_cpyn_origen, 1
0x5F72	0x0E03      	MOVLW       hi_addr(_can+107)
0x5F74	0x6F26      	MOVWF       FARG_string_cpyn_origen+1, 1
0x5F76	0x5000      	MOVF        R0, 0 
0x5F78	0x2725      	ADDWF       FARG_string_cpyn_origen, 1, 1
0x5F7A	0xB0D8      	BTFSC       STATUS, 0 
0x5F7C	0x2B26      	INCF        FARG_string_cpyn_origen+1, 1, 1
0x5F7E	0x0E06      	MOVLW       6
0x5F80	0x6F27      	MOVWF       FARG_string_cpyn_size, 1
0x5F82	0xF014EC39  	CALL        _string_cpyn, 0
;Expendedora.c,1821 :: 		idNew = hexToNum(msjConst);
0x5F86	0x0E05      	MOVLW       _msjConst
0x5F88	0x6F23      	MOVWF       FARG_hexToNum_hex, 1
0x5F8A	0x0E03      	MOVLW       hi_addr(_msjConst)
0x5F8C	0x6F24      	MOVWF       FARG_hexToNum_hex+1, 1
0x5F8E	0xF010EC5E  	CALL        _hexToNum, 0
0x5F92	0xF50FC000  	MOVFF       R0, can_user_read_message_idNew_L0
0x5F96	0xF510C001  	MOVFF       R1, can_user_read_message_idNew_L0+1
0x5F9A	0xF511C002  	MOVFF       R2, can_user_read_message_idNew_L0+2
0x5F9E	0xF512C003  	MOVFF       R3, can_user_read_message_idNew_L0+3
;Expendedora.c,1823 :: 		sizeTotal += sizeKey;
0x5FA2	0x5105      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x5FA4	0x2506      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x5FA6	0x6E00      	MOVWF       R0 
0x5FA8	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1824 :: 		sizeKey = 1;  //1 Byte
0x5FAC	0x0E01      	MOVLW       1
0x5FAE	0x6F05      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Expendedora.c,1825 :: 		vigencia = can.rxBuffer[sizeTotal];
0x5FB0	0x0EB4      	MOVLW       _can+107
0x5FB2	0x6EE9      	MOVWF       FSR0L 
0x5FB4	0x0E03      	MOVLW       hi_addr(_can+107)
0x5FB6	0x6EEA      	MOVWF       FSR0H 
0x5FB8	0x5000      	MOVF        R0, 0 
0x5FBA	0x26E9      	ADDWF       FSR0L, 1 
0x5FBC	0xB0D8      	BTFSC       STATUS, 0 
0x5FBE	0x2AEA      	INCF        FSR0H, 1 
0x5FC0	0xF509CFEE  	MOVFF       POSTINC0, can_user_read_message_vigencia_L0
;Expendedora.c,1827 :: 		sizeTotal += sizeKey;
0x5FC4	0x2A00      	INCF        R0, 1 
0x5FC6	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1828 :: 		sizeKey = 1;  //1 Byte
0x5FCA	0x0E01      	MOVLW       1
0x5FCC	0x6F05      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Expendedora.c,1829 :: 		estatus = can.rxBuffer[sizeTotal];
0x5FCE	0x0EB4      	MOVLW       _can+107
0x5FD0	0x6EE9      	MOVWF       FSR0L 
0x5FD2	0x0E03      	MOVLW       hi_addr(_can+107)
0x5FD4	0x6EEA      	MOVWF       FSR0H 
0x5FD6	0x5000      	MOVF        R0, 0 
0x5FD8	0x26E9      	ADDWF       FSR0L, 1 
0x5FDA	0xB0D8      	BTFSC       STATUS, 0 
0x5FDC	0x2AEA      	INCF        FSR0H, 1 
0x5FDE	0xF50ACFEE  	MOVFF       POSTINC0, can_user_read_message_estatus_L0
;Expendedora.c,1831 :: 		if(!mysql_write(tablePensionados, pensionadosID, fila, id, false)){
0x5FE2	0x0E3D      	MOVLW       _tablePensionados
0x5FE4	0x6F23      	MOVWF       FARG_mysql_write_name, 1
0x5FE6	0x0E01      	MOVLW       hi_addr(_tablePensionados)
0x5FE8	0x6F24      	MOVWF       FARG_mysql_write_name+1, 1
0x5FEA	0x0EC6      	MOVLW       _pensionadosID
0x5FEC	0x6F25      	MOVWF       FARG_mysql_write_column, 1
0x5FEE	0x0E01      	MOVLW       hi_addr(_pensionadosID)
0x5FF0	0x6F26      	MOVWF       FARG_mysql_write_column+1, 1
0x5FF2	0xF527C507  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_fila
0x5FF6	0xF528C508  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_fila+1
0x5FFA	0xF529C513  	MOVFF       can_user_read_message_id_L0, FARG_mysql_write_value
0x5FFE	0xF52AC514  	MOVFF       can_user_read_message_id_L0+1, FARG_mysql_write_value+1
0x6002	0xF52BC515  	MOVFF       can_user_read_message_id_L0+2, FARG_mysql_write_value+2
0x6006	0xF52CC516  	MOVFF       can_user_read_message_id_L0+3, FARG_mysql_write_value+3
0x600A	0x6B2D      	CLRF        FARG_mysql_write_endWrite, 1
0x600C	0xF012ECDC  	CALL        _mysql_write, 0
0x6010	0x5200      	MOVF        R0, 1 
0x6012	0xE13A      	BNZ         L_can_user_read_message893
;Expendedora.c,1833 :: 		mysql_write(tablePensionados, pensionadosVigencia, fila, vigencia, false);
0x6014	0x0E3D      	MOVLW       _tablePensionados
0x6016	0x0105      	MOVLB       5
0x6018	0x6F23      	MOVWF       FARG_mysql_write_name, 1
0x601A	0x0E01      	MOVLW       hi_addr(_tablePensionados)
0x601C	0x6F24      	MOVWF       FARG_mysql_write_name+1, 1
0x601E	0x0EBD      	MOVLW       _pensionadosVigencia
0x6020	0x6F25      	MOVWF       FARG_mysql_write_column, 1
0x6022	0x0E01      	MOVLW       hi_addr(_pensionadosVigencia)
0x6024	0x6F26      	MOVWF       FARG_mysql_write_column+1, 1
0x6026	0xF527C507  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_fila
0x602A	0xF528C508  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_fila+1
0x602E	0xF529C509  	MOVFF       can_user_read_message_vigencia_L0, FARG_mysql_write_value
0x6032	0x0E00      	MOVLW       0
0x6034	0x6F2A      	MOVWF       FARG_mysql_write_value+1, 1
0x6036	0x6F2B      	MOVWF       FARG_mysql_write_value+2, 1
0x6038	0x6F2C      	MOVWF       FARG_mysql_write_value+3, 1
0x603A	0x6B2D      	CLRF        FARG_mysql_write_endWrite, 1
0x603C	0xF012ECDC  	CALL        _mysql_write, 0
;Expendedora.c,1834 :: 		mysql_write(tablePensionados, pensionadosEstatus, fila, estatus, false);
0x6040	0x0E3D      	MOVLW       _tablePensionados
0x6042	0x0105      	MOVLB       5
0x6044	0x6F23      	MOVWF       FARG_mysql_write_name, 1
0x6046	0x0E01      	MOVLW       hi_addr(_tablePensionados)
0x6048	0x6F24      	MOVWF       FARG_mysql_write_name+1, 1
0x604A	0x0EC9      	MOVLW       _pensionadosEstatus
0x604C	0x6F25      	MOVWF       FARG_mysql_write_column, 1
0x604E	0x0E01      	MOVLW       hi_addr(_pensionadosEstatus)
0x6050	0x6F26      	MOVWF       FARG_mysql_write_column+1, 1
0x6052	0xF527C507  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_fila
0x6056	0xF528C508  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_fila+1
0x605A	0xF529C50A  	MOVFF       can_user_read_message_estatus_L0, FARG_mysql_write_value
0x605E	0x0E00      	MOVLW       0
0x6060	0x6F2A      	MOVWF       FARG_mysql_write_value+1, 1
0x6062	0x6F2B      	MOVWF       FARG_mysql_write_value+2, 1
0x6064	0x6F2C      	MOVWF       FARG_mysql_write_value+3, 1
0x6066	0x6B2D      	CLRF        FARG_mysql_write_endWrite, 1
0x6068	0xF012ECDC  	CALL        _mysql_write, 0
;Expendedora.c,1836 :: 		string_addc(bufferEeprom, CAN_TABLE_MODIFICADO);
0x606C	0x0E15      	MOVLW       _bufferEeprom
0x606E	0x0105      	MOVLB       5
0x6070	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x6072	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x6074	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x6076	0x0E5C      	MOVLW       _CAN_TABLE_MODIFICADO
0x6078	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x607A	0x0EA3      	MOVLW       hi_addr(_CAN_TABLE_MODIFICADO)
0x607C	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x607E	0x0E00      	MOVLW       higher_addr(_CAN_TABLE_MODIFICADO)
0x6080	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x6082	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,1837 :: 		}else{
0x6086	0xD00D      	BRA         L_can_user_read_message894
L_can_user_read_message893:
0x6088	0x0105      	MOVLB       5
;Expendedora.c,1838 :: 		string_addc(bufferEeprom, CAN_TABLE_ERROR);
0x608A	0x0E15      	MOVLW       _bufferEeprom
0x608C	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x608E	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x6090	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x6092	0x0E7A      	MOVLW       _CAN_TABLE_ERROR
0x6094	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x6096	0x0EA3      	MOVLW       hi_addr(_CAN_TABLE_ERROR)
0x6098	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x609A	0x0E00      	MOVLW       higher_addr(_CAN_TABLE_ERROR)
0x609C	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x609E	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,1839 :: 		}
L_can_user_read_message894:
;Expendedora.c,1840 :: 		}
L_can_user_read_message892:
L_can_user_read_message891:
;Expendedora.c,1841 :: 		}
L_can_user_read_message887:
;Expendedora.c,1842 :: 		}else if(string_cmpnc(CAN_CMD, &can.rxBuffer[sizeTotal], sizeKey)){
0x60A2	0xF034EFDA  	GOTO        L_can_user_read_message895
L_can_user_read_message886:
0x60A6	0x0EC4      	MOVLW       _CAN_CMD
0x60A8	0x6F23      	MOVWF       FARG_string_cmpnc_text1, 1
0x60AA	0x0EA3      	MOVLW       hi_addr(_CAN_CMD)
0x60AC	0x6F24      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x60AE	0x0E00      	MOVLW       higher_addr(_CAN_CMD)
0x60B0	0x6F25      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x60B2	0x0EB4      	MOVLW       _can+107
0x60B4	0x6F26      	MOVWF       FARG_string_cmpnc_text2, 1
0x60B6	0x0E03      	MOVLW       hi_addr(_can+107)
0x60B8	0x6F27      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x60BA	0x5106      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x60BC	0x2726      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x60BE	0xB0D8      	BTFSC       STATUS, 0 
0x60C0	0x2B27      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x60C2	0xF528C505  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x60C6	0xF013EC78  	CALL        _string_cmpnc, 0
0x60CA	0x5200      	MOVF        R0, 1 
0x60CC	0xB4D8      	BTFSC       STATUS, 2 
0x60CE	0xF034EFDA  	GOTO        L_can_user_read_message896
;Expendedora.c,1843 :: 		sizeTotal += sizeKey;
0x60D2	0x5105      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x60D4	0x2506      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x60D6	0x6E00      	MOVWF       R0 
0x60D8	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1844 :: 		sizeKey = sizeof(CAN_PASSBACK)-1;
0x60DC	0x0E03      	MOVLW       3
0x60DE	0x6F05      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Expendedora.c,1846 :: 		if(string_cmpnc(CAN_PASSBACK, &can.rxBuffer[sizeTotal], sizeKey)){
0x60E0	0x0EDC      	MOVLW       _CAN_PASSBACK
0x60E2	0x6F23      	MOVWF       FARG_string_cmpnc_text1, 1
0x60E4	0x0EA3      	MOVLW       hi_addr(_CAN_PASSBACK)
0x60E6	0x6F24      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x60E8	0x0E00      	MOVLW       higher_addr(_CAN_PASSBACK)
0x60EA	0x6F25      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x60EC	0x0EB4      	MOVLW       _can+107
0x60EE	0x6F26      	MOVWF       FARG_string_cmpnc_text2, 1
0x60F0	0x0E03      	MOVLW       hi_addr(_can+107)
0x60F2	0x6F27      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x60F4	0x5000      	MOVF        R0, 0 
0x60F6	0x2726      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x60F8	0xB0D8      	BTFSC       STATUS, 0 
0x60FA	0x2B27      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x60FC	0x0E03      	MOVLW       3
0x60FE	0x6F28      	MOVWF       FARG_string_cmpnc_bytes, 1
0x6100	0xF013EC78  	CALL        _string_cmpnc, 0
0x6104	0x5200      	MOVF        R0, 1 
0x6106	0xB4D8      	BTFSC       STATUS, 2 
0x6108	0xD0A5      	BRA         L_can_user_read_message897
;Expendedora.c,1847 :: 		sizeTotal += sizeKey;
0x610A	0x5105      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x610C	0x2506      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x610E	0x6E00      	MOVWF       R0 
0x6110	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1849 :: 		if(can.rxBuffer[sizeTotal] == '1')
0x6114	0x0EB4      	MOVLW       _can+107
0x6116	0x6EE9      	MOVWF       FSR0L 
0x6118	0x0E03      	MOVLW       hi_addr(_can+107)
0x611A	0x6EEA      	MOVWF       FSR0H 
0x611C	0x5000      	MOVF        R0, 0 
0x611E	0x26E9      	ADDWF       FSR0L, 1 
0x6120	0xB0D8      	BTFSC       STATUS, 0 
0x6122	0x2AEA      	INCF        FSR0H, 1 
0x6124	0x50EE      	MOVF        POSTINC0, 0 
0x6126	0x0A31      	XORLW       49
0x6128	0xE104      	BNZ         L_can_user_read_message898
;Expendedora.c,1850 :: 		canSynchrony = true;
0x612A	0x0E01      	MOVLW       1
0x612C	0x0102      	MOVLB       2
0x612E	0x6FDB      	MOVWF       _canSynchrony, 1
0x6130	0xD002      	BRA         L_can_user_read_message899
L_can_user_read_message898:
0x6132	0x0102      	MOVLB       2
;Expendedora.c,1852 :: 		canSynchrony = false;
0x6134	0x6BDB      	CLRF        _canSynchrony, 1
L_can_user_read_message899:
;Expendedora.c,1853 :: 		mysql_write(tableSyncronia, columnaEstado, 1, canSynchrony, false);
0x6136	0x0E56      	MOVLW       _tableSyncronia
0x6138	0x0105      	MOVLB       5
0x613A	0x6F23      	MOVWF       FARG_mysql_write_name, 1
0x613C	0x0E02      	MOVLW       hi_addr(_tableSyncronia)
0x613E	0x6F24      	MOVWF       FARG_mysql_write_name+1, 1
0x6140	0x0E4A      	MOVLW       _columnaEstado
0x6142	0x6F25      	MOVWF       FARG_mysql_write_column, 1
0x6144	0x0E02      	MOVLW       hi_addr(_columnaEstado)
0x6146	0x6F26      	MOVWF       FARG_mysql_write_column+1, 1
0x6148	0x0E01      	MOVLW       1
0x614A	0x6F27      	MOVWF       FARG_mysql_write_fila, 1
0x614C	0x0E00      	MOVLW       0
0x614E	0x6F28      	MOVWF       FARG_mysql_write_fila+1, 1
0x6150	0xF529C2DB  	MOVFF       _canSynchrony, FARG_mysql_write_value
0x6154	0x0E00      	MOVLW       0
0x6156	0x6F2A      	MOVWF       FARG_mysql_write_value+1, 1
0x6158	0x6F2B      	MOVWF       FARG_mysql_write_value+2, 1
0x615A	0x6F2C      	MOVWF       FARG_mysql_write_value+3, 1
0x615C	0x6B2D      	CLRF        FARG_mysql_write_endWrite, 1
0x615E	0xF012ECDC  	CALL        _mysql_write, 0
;Expendedora.c,1856 :: 		lcd_clean_row(3);
0x6162	0x0E03      	MOVLW       3
0x6164	0x0105      	MOVLB       5
0x6166	0x6F23      	MOVWF       FARG_lcd_clean_row_fila, 1
0x6168	0xF015EC78  	CALL        _lcd_clean_row, 0
;Expendedora.c,1857 :: 		lcd_out(3,1,canSynchrony? "Sincronizado":"Desincronizado");
0x616C	0x0E03      	MOVLW       3
0x616E	0x6F23      	MOVWF       FARG_lcd_out_fila, 1
0x6170	0x0E01      	MOVLW       1
0x6172	0x6F24      	MOVWF       FARG_lcd_out_col, 1
0x6174	0x0102      	MOVLB       2
0x6176	0x53DB      	MOVF        _canSynchrony, 1, 1
0x6178	0xE006      	BZ          L_can_user_read_message900
0x617A	0x0E3D      	MOVLW       ?lstr29_Expendedora
0x617C	0x0105      	MOVLB       5
0x617E	0x6F01      	MOVWF       ?FLOC___can_user_read_messageT3791, 1
0x6180	0x0E02      	MOVLW       hi_addr(?lstr29_Expendedora)
0x6182	0x6F02      	MOVWF       ?FLOC___can_user_read_messageT3791+1, 1
0x6184	0xD005      	BRA         L_can_user_read_message901
L_can_user_read_message900:
0x6186	0x0105      	MOVLB       5
0x6188	0x0E2E      	MOVLW       ?lstr30_Expendedora
0x618A	0x6F01      	MOVWF       ?FLOC___can_user_read_messageT3791, 1
0x618C	0x0E02      	MOVLW       hi_addr(?lstr30_Expendedora)
0x618E	0x6F02      	MOVWF       ?FLOC___can_user_read_messageT3791+1, 1
L_can_user_read_message901:
0x6190	0xF525C501  	MOVFF       ?FLOC___can_user_read_messageT3791, FARG_lcd_out_texto
0x6194	0xF526C502  	MOVFF       ?FLOC___can_user_read_messageT3791+1, FARG_lcd_out_texto+1
0x6198	0xF010EC01  	CALL        _lcd_out, 0
;Expendedora.c,1859 :: 		string_cpyc(bufferEeprom, CAN_TPV);        //SYN
0x619C	0x0E15      	MOVLW       _bufferEeprom
0x619E	0x6F23      	MOVWF       FARG_string_cpyc_destino, 1
0x61A0	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x61A2	0x6F24      	MOVWF       FARG_string_cpyc_destino+1, 1
0x61A4	0x0EBC      	MOVLW       _CAN_TPV
0x61A6	0x6F25      	MOVWF       FARG_string_cpyc_origen, 1
0x61A8	0x0EA3      	MOVLW       hi_addr(_CAN_TPV)
0x61AA	0x6F26      	MOVWF       FARG_string_cpyc_origen+1, 1
0x61AC	0x0E00      	MOVLW       higher_addr(_CAN_TPV)
0x61AE	0x6F27      	MOVWF       FARG_string_cpyc_origen+2, 1
0x61B0	0xF014EC09  	CALL        _string_cpyc, 0
;Expendedora.c,1860 :: 		string_addc(bufferEeprom, CAN_CMD);
0x61B4	0x0E15      	MOVLW       _bufferEeprom
0x61B6	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x61B8	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x61BA	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x61BC	0x0EC4      	MOVLW       _CAN_CMD
0x61BE	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x61C0	0x0EA3      	MOVLW       hi_addr(_CAN_CMD)
0x61C2	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x61C4	0x0E00      	MOVLW       higher_addr(_CAN_CMD)
0x61C6	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x61C8	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,1861 :: 		string_addc(bufferEeprom, CAN_PASSBACK);
0x61CC	0x0E15      	MOVLW       _bufferEeprom
0x61CE	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x61D0	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x61D2	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x61D4	0x0EDC      	MOVLW       _CAN_PASSBACK
0x61D6	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x61D8	0x0EA3      	MOVLW       hi_addr(_CAN_PASSBACK)
0x61DA	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x61DC	0x0E00      	MOVLW       higher_addr(_CAN_PASSBACK)
0x61DE	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x61E0	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,1862 :: 		string_push(buffereeprom, canSynchrony+'0');
0x61E4	0x0E15      	MOVLW       _bufferEeprom
0x61E6	0x6F23      	MOVWF       FARG_string_push_texto, 1
0x61E8	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x61EA	0x6F24      	MOVWF       FARG_string_push_texto+1, 1
0x61EC	0x0E30      	MOVLW       48
0x61EE	0x0102      	MOVLB       2
0x61F0	0x25DB      	ADDWF       _canSynchrony, 0, 1
0x61F2	0x0105      	MOVLB       5
0x61F4	0x6F25      	MOVWF       FARG_string_push_caracter, 1
0x61F6	0xF013ECEA  	CALL        _string_push, 0
;Expendedora.c,1864 :: 		string_cpyc(msjConst, CAN_MODULE);
0x61FA	0x0E05      	MOVLW       _msjConst
0x61FC	0x6F23      	MOVWF       FARG_string_cpyc_destino, 1
0x61FE	0x0E03      	MOVLW       hi_addr(_msjConst)
0x6200	0x6F24      	MOVWF       FARG_string_cpyc_destino+1, 1
0x6202	0x0E1E      	MOVLW       _CAN_MODULE
0x6204	0x6F25      	MOVWF       FARG_string_cpyc_origen, 1
0x6206	0x0EA4      	MOVLW       hi_addr(_CAN_MODULE)
0x6208	0x6F26      	MOVWF       FARG_string_cpyc_origen+1, 1
0x620A	0x0E00      	MOVLW       higher_addr(_CAN_MODULE)
0x620C	0x6F27      	MOVWF       FARG_string_cpyc_origen+2, 1
0x620E	0xF014EC09  	CALL        _string_cpyc, 0
;Expendedora.c,1865 :: 		numToHex(can.id, &msjConst[1], 1);
0x6212	0xF523C355  	MOVFF       _can+12, FARG_numToHex_valor
0x6216	0x0E00      	MOVLW       0
0x6218	0x6F24      	MOVWF       FARG_numToHex_valor+1, 1
0x621A	0x6F25      	MOVWF       FARG_numToHex_valor+2, 1
0x621C	0x6F26      	MOVWF       FARG_numToHex_valor+3, 1
0x621E	0x0E06      	MOVLW       _msjConst+1
0x6220	0x6F27      	MOVWF       FARG_numToHex_cadena, 1
0x6222	0x0E03      	MOVLW       hi_addr(_msjConst+1)
0x6224	0x6F28      	MOVWF       FARG_numToHex_cadena+1, 1
0x6226	0x0E01      	MOVLW       1
0x6228	0x6F29      	MOVWF       FARG_numToHex_bytes, 1
0x622A	0xF016EC51  	CALL        _numToHex, 0
;Expendedora.c,1866 :: 		string_add(bufferEeprom, msjConst);
0x622E	0x0E15      	MOVLW       _bufferEeprom
0x6230	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x6232	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x6234	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x6236	0x0E05      	MOVLW       _msjConst
0x6238	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x623A	0x0E03      	MOVLW       hi_addr(_msjConst)
0x623C	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x623E	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,1868 :: 		buffer_save_send(true, bufferEeprom);
0x6242	0x0E01      	MOVLW       1
0x6244	0x6F23      	MOVWF       FARG_buffer_save_send_guardar, 1
0x6246	0x0E15      	MOVLW       _bufferEeprom
0x6248	0x6F24      	MOVWF       FARG_buffer_save_send_buffer, 1
0x624A	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x624C	0x6F25      	MOVWF       FARG_buffer_save_send_buffer+1, 1
0x624E	0xF014ECA9  	CALL        _buffer_save_send, 0
;Expendedora.c,1873 :: 		}else if(string_cmpnc(CAN_CUPO, &can.rxBuffer[sizeTotal], sizeKey)){
0x6252	0xD3B0      	BRA         L_can_user_read_message902
L_can_user_read_message897:
0x6254	0x0EB8      	MOVLW       _CAN_CUPO
0x6256	0x0105      	MOVLB       5
0x6258	0x6F23      	MOVWF       FARG_string_cmpnc_text1, 1
0x625A	0x0EA3      	MOVLW       hi_addr(_CAN_CUPO)
0x625C	0x6F24      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x625E	0x0E00      	MOVLW       higher_addr(_CAN_CUPO)
0x6260	0x6F25      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x6262	0x0EB4      	MOVLW       _can+107
0x6264	0x6F26      	MOVWF       FARG_string_cmpnc_text2, 1
0x6266	0x0E03      	MOVLW       hi_addr(_can+107)
0x6268	0x6F27      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x626A	0x5106      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x626C	0x2726      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x626E	0xB0D8      	BTFSC       STATUS, 0 
0x6270	0x2B27      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x6272	0xF528C505  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x6276	0xF013EC78  	CALL        _string_cmpnc, 0
0x627A	0x5200      	MOVF        R0, 1 
0x627C	0xB4D8      	BTFSC       STATUS, 2 
0x627E	0xD0A5      	BRA         L_can_user_read_message903
;Expendedora.c,1874 :: 		sizeTotal += sizeKey;
0x6280	0x5105      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x6282	0x2506      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x6284	0x6E00      	MOVWF       R0 
0x6286	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1876 :: 		if(can.rxBuffer[sizeTotal] == '1')
0x628A	0x0EB4      	MOVLW       _can+107
0x628C	0x6EE9      	MOVWF       FSR0L 
0x628E	0x0E03      	MOVLW       hi_addr(_can+107)
0x6290	0x6EEA      	MOVWF       FSR0H 
0x6292	0x5000      	MOVF        R0, 0 
0x6294	0x26E9      	ADDWF       FSR0L, 1 
0x6296	0xB0D8      	BTFSC       STATUS, 0 
0x6298	0x2AEA      	INCF        FSR0H, 1 
0x629A	0x50EE      	MOVF        POSTINC0, 0 
0x629C	0x0A31      	XORLW       49
0x629E	0xE104      	BNZ         L_can_user_read_message904
;Expendedora.c,1877 :: 		cupoLleno = true;
0x62A0	0x0E01      	MOVLW       1
0x62A2	0x0102      	MOVLB       2
0x62A4	0x6FFF      	MOVWF       _cupoLleno, 1
0x62A6	0xD002      	BRA         L_can_user_read_message905
L_can_user_read_message904:
0x62A8	0x0102      	MOVLB       2
;Expendedora.c,1879 :: 		cupoLleno = false;
0x62AA	0x6BFF      	CLRF        _cupoLleno, 1
L_can_user_read_message905:
;Expendedora.c,1880 :: 		mysql_write(tableCupo, columnaEstado, 1, cupoLleno, false);
0x62AC	0x0E51      	MOVLW       _tableCupo
0x62AE	0x0105      	MOVLB       5
0x62B0	0x6F23      	MOVWF       FARG_mysql_write_name, 1
0x62B2	0x0E02      	MOVLW       hi_addr(_tableCupo)
0x62B4	0x6F24      	MOVWF       FARG_mysql_write_name+1, 1
0x62B6	0x0E4A      	MOVLW       _columnaEstado
0x62B8	0x6F25      	MOVWF       FARG_mysql_write_column, 1
0x62BA	0x0E02      	MOVLW       hi_addr(_columnaEstado)
0x62BC	0x6F26      	MOVWF       FARG_mysql_write_column+1, 1
0x62BE	0x0E01      	MOVLW       1
0x62C0	0x6F27      	MOVWF       FARG_mysql_write_fila, 1
0x62C2	0x0E00      	MOVLW       0
0x62C4	0x6F28      	MOVWF       FARG_mysql_write_fila+1, 1
0x62C6	0xF529C2FF  	MOVFF       _cupoLleno, FARG_mysql_write_value
0x62CA	0x0E00      	MOVLW       0
0x62CC	0x6F2A      	MOVWF       FARG_mysql_write_value+1, 1
0x62CE	0x6F2B      	MOVWF       FARG_mysql_write_value+2, 1
0x62D0	0x6F2C      	MOVWF       FARG_mysql_write_value+3, 1
0x62D2	0x6B2D      	CLRF        FARG_mysql_write_endWrite, 1
0x62D4	0xF012ECDC  	CALL        _mysql_write, 0
;Expendedora.c,1882 :: 		lcd_clean_row(3);
0x62D8	0x0E03      	MOVLW       3
0x62DA	0x0105      	MOVLB       5
0x62DC	0x6F23      	MOVWF       FARG_lcd_clean_row_fila, 1
0x62DE	0xF015EC78  	CALL        _lcd_clean_row, 0
;Expendedora.c,1883 :: 		lcd_out(3,1,cupoLleno? "Cupo lleno":"Cupo disponible");
0x62E2	0x0E03      	MOVLW       3
0x62E4	0x6F23      	MOVWF       FARG_lcd_out_fila, 1
0x62E6	0x0E01      	MOVLW       1
0x62E8	0x6F24      	MOVWF       FARG_lcd_out_col, 1
0x62EA	0x0102      	MOVLB       2
0x62EC	0x53FF      	MOVF        _cupoLleno, 1, 1
0x62EE	0xE006      	BZ          L_can_user_read_message906
0x62F0	0x0EF4      	MOVLW       ?lstr31_Expendedora
0x62F2	0x0105      	MOVLB       5
0x62F4	0x6F03      	MOVWF       ?FLOC___can_user_read_messageT3822, 1
0x62F6	0x0E01      	MOVLW       hi_addr(?lstr31_Expendedora)
0x62F8	0x6F04      	MOVWF       ?FLOC___can_user_read_messageT3822+1, 1
0x62FA	0xD005      	BRA         L_can_user_read_message907
L_can_user_read_message906:
0x62FC	0x0105      	MOVLB       5
0x62FE	0x0EE4      	MOVLW       ?lstr32_Expendedora
0x6300	0x6F03      	MOVWF       ?FLOC___can_user_read_messageT3822, 1
0x6302	0x0E01      	MOVLW       hi_addr(?lstr32_Expendedora)
0x6304	0x6F04      	MOVWF       ?FLOC___can_user_read_messageT3822+1, 1
L_can_user_read_message907:
0x6306	0xF525C503  	MOVFF       ?FLOC___can_user_read_messageT3822, FARG_lcd_out_texto
0x630A	0xF526C504  	MOVFF       ?FLOC___can_user_read_messageT3822+1, FARG_lcd_out_texto+1
0x630E	0xF010EC01  	CALL        _lcd_out, 0
;Expendedora.c,1885 :: 		string_cpyc(bufferEeprom, CAN_TPV);        //SYN
0x6312	0x0E15      	MOVLW       _bufferEeprom
0x6314	0x6F23      	MOVWF       FARG_string_cpyc_destino, 1
0x6316	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x6318	0x6F24      	MOVWF       FARG_string_cpyc_destino+1, 1
0x631A	0x0EBC      	MOVLW       _CAN_TPV
0x631C	0x6F25      	MOVWF       FARG_string_cpyc_origen, 1
0x631E	0x0EA3      	MOVLW       hi_addr(_CAN_TPV)
0x6320	0x6F26      	MOVWF       FARG_string_cpyc_origen+1, 1
0x6322	0x0E00      	MOVLW       higher_addr(_CAN_TPV)
0x6324	0x6F27      	MOVWF       FARG_string_cpyc_origen+2, 1
0x6326	0xF014EC09  	CALL        _string_cpyc, 0
;Expendedora.c,1886 :: 		string_addc(bufferEeprom, CAN_CMD);
0x632A	0x0E15      	MOVLW       _bufferEeprom
0x632C	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x632E	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x6330	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x6332	0x0EC4      	MOVLW       _CAN_CMD
0x6334	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x6336	0x0EA3      	MOVLW       hi_addr(_CAN_CMD)
0x6338	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x633A	0x0E00      	MOVLW       higher_addr(_CAN_CMD)
0x633C	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x633E	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,1887 :: 		string_addc(bufferEeprom, CAN_CUPO);
0x6342	0x0E15      	MOVLW       _bufferEeprom
0x6344	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x6346	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x6348	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x634A	0x0EB8      	MOVLW       _CAN_CUPO
0x634C	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x634E	0x0EA3      	MOVLW       hi_addr(_CAN_CUPO)
0x6350	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x6352	0x0E00      	MOVLW       higher_addr(_CAN_CUPO)
0x6354	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x6356	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,1888 :: 		string_push(buffereeprom, cupoLleno+'0');
0x635A	0x0E15      	MOVLW       _bufferEeprom
0x635C	0x6F23      	MOVWF       FARG_string_push_texto, 1
0x635E	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x6360	0x6F24      	MOVWF       FARG_string_push_texto+1, 1
0x6362	0x0E30      	MOVLW       48
0x6364	0x0102      	MOVLB       2
0x6366	0x25FF      	ADDWF       _cupoLleno, 0, 1
0x6368	0x0105      	MOVLB       5
0x636A	0x6F25      	MOVWF       FARG_string_push_caracter, 1
0x636C	0xF013ECEA  	CALL        _string_push, 0
;Expendedora.c,1890 :: 		string_cpyc(msjConst, CAN_MODULE);
0x6370	0x0E05      	MOVLW       _msjConst
0x6372	0x6F23      	MOVWF       FARG_string_cpyc_destino, 1
0x6374	0x0E03      	MOVLW       hi_addr(_msjConst)
0x6376	0x6F24      	MOVWF       FARG_string_cpyc_destino+1, 1
0x6378	0x0E1E      	MOVLW       _CAN_MODULE
0x637A	0x6F25      	MOVWF       FARG_string_cpyc_origen, 1
0x637C	0x0EA4      	MOVLW       hi_addr(_CAN_MODULE)
0x637E	0x6F26      	MOVWF       FARG_string_cpyc_origen+1, 1
0x6380	0x0E00      	MOVLW       higher_addr(_CAN_MODULE)
0x6382	0x6F27      	MOVWF       FARG_string_cpyc_origen+2, 1
0x6384	0xF014EC09  	CALL        _string_cpyc, 0
;Expendedora.c,1891 :: 		numToHex(can.id, &msjConst[1], 1);
0x6388	0xF523C355  	MOVFF       _can+12, FARG_numToHex_valor
0x638C	0x0E00      	MOVLW       0
0x638E	0x6F24      	MOVWF       FARG_numToHex_valor+1, 1
0x6390	0x6F25      	MOVWF       FARG_numToHex_valor+2, 1
0x6392	0x6F26      	MOVWF       FARG_numToHex_valor+3, 1
0x6394	0x0E06      	MOVLW       _msjConst+1
0x6396	0x6F27      	MOVWF       FARG_numToHex_cadena, 1
0x6398	0x0E03      	MOVLW       hi_addr(_msjConst+1)
0x639A	0x6F28      	MOVWF       FARG_numToHex_cadena+1, 1
0x639C	0x0E01      	MOVLW       1
0x639E	0x6F29      	MOVWF       FARG_numToHex_bytes, 1
0x63A0	0xF016EC51  	CALL        _numToHex, 0
;Expendedora.c,1892 :: 		string_add(bufferEeprom, msjConst);
0x63A4	0x0E15      	MOVLW       _bufferEeprom
0x63A6	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x63A8	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x63AA	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x63AC	0x0E05      	MOVLW       _msjConst
0x63AE	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x63B0	0x0E03      	MOVLW       hi_addr(_msjConst)
0x63B2	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x63B4	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,1894 :: 		buffer_save_send(true, bufferEeprom);
0x63B8	0x0E01      	MOVLW       1
0x63BA	0x6F23      	MOVWF       FARG_buffer_save_send_guardar, 1
0x63BC	0x0E15      	MOVLW       _bufferEeprom
0x63BE	0x6F24      	MOVWF       FARG_buffer_save_send_buffer, 1
0x63C0	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x63C2	0x6F25      	MOVWF       FARG_buffer_save_send_buffer+1, 1
0x63C4	0xF014ECA9  	CALL        _buffer_save_send, 0
;Expendedora.c,1899 :: 		}else if(string_cmpnc(CAN_ABRIR, &can.rxBuffer[sizeTotal], sizeKey)){
0x63C8	0xD2F5      	BRA         L_can_user_read_message908
L_can_user_read_message903:
0x63CA	0x0EB4      	MOVLW       _CAN_ABRIR
0x63CC	0x0105      	MOVLB       5
0x63CE	0x6F23      	MOVWF       FARG_string_cmpnc_text1, 1
0x63D0	0x0EA3      	MOVLW       hi_addr(_CAN_ABRIR)
0x63D2	0x6F24      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x63D4	0x0E00      	MOVLW       higher_addr(_CAN_ABRIR)
0x63D6	0x6F25      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x63D8	0x0EB4      	MOVLW       _can+107
0x63DA	0x6F26      	MOVWF       FARG_string_cmpnc_text2, 1
0x63DC	0x0E03      	MOVLW       hi_addr(_can+107)
0x63DE	0x6F27      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x63E0	0x5106      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x63E2	0x2726      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x63E4	0xB0D8      	BTFSC       STATUS, 0 
0x63E6	0x2B27      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x63E8	0xF528C505  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x63EC	0xF013EC78  	CALL        _string_cmpnc, 0
0x63F0	0x5200      	MOVF        R0, 1 
0x63F2	0xE066      	BZ          L_can_user_read_message909
;Expendedora.c,1901 :: 		eSensor = 0;  //Reiniciar maquina de estados
0x63F4	0x0102      	MOVLB       2
0x63F6	0x6B96      	CLRF        _eSensor, 1
;Expendedora.c,1902 :: 		abrirBarrera = true;
0x63F8	0x0E01      	MOVLW       1
0x63FA	0x6FC2      	MOVWF       _abrirBarrera, 1
;Expendedora.c,1903 :: 		SALIDA_RELE1 = 1;
0x63FC	0x8A80      	BSF         PORTA, 5 
;Expendedora.c,1904 :: 		SALIDA_RELE2 = 1;
0x63FE	0x8084      	BSF         PORTE, 0 
;Expendedora.c,1905 :: 		timer1_reset();
0x6400	0xF00FECFC  	CALL        _timer1_reset, 0
;Expendedora.c,1906 :: 		timer1_enable(true);
0x6404	0x0E01      	MOVLW       1
0x6406	0x0105      	MOVLB       5
0x6408	0x6F23      	MOVWF       FARG_timer1_enable_enable, 1
0x640A	0xF010EC57  	CALL        _timer1_enable, 0
;Expendedora.c,1908 :: 		string_cpyc(bufferEeprom, CAN_TPV);        //SYN
0x640E	0x0E15      	MOVLW       _bufferEeprom
0x6410	0x6F23      	MOVWF       FARG_string_cpyc_destino, 1
0x6412	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x6414	0x6F24      	MOVWF       FARG_string_cpyc_destino+1, 1
0x6416	0x0EBC      	MOVLW       _CAN_TPV
0x6418	0x6F25      	MOVWF       FARG_string_cpyc_origen, 1
0x641A	0x0EA3      	MOVLW       hi_addr(_CAN_TPV)
0x641C	0x6F26      	MOVWF       FARG_string_cpyc_origen+1, 1
0x641E	0x0E00      	MOVLW       higher_addr(_CAN_TPV)
0x6420	0x6F27      	MOVWF       FARG_string_cpyc_origen+2, 1
0x6422	0xF014EC09  	CALL        _string_cpyc, 0
;Expendedora.c,1909 :: 		string_addc(bufferEeprom, CAN_CMD);
0x6426	0x0E15      	MOVLW       _bufferEeprom
0x6428	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x642A	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x642C	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x642E	0x0EC4      	MOVLW       _CAN_CMD
0x6430	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x6432	0x0EA3      	MOVLW       hi_addr(_CAN_CMD)
0x6434	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x6436	0x0E00      	MOVLW       higher_addr(_CAN_CMD)
0x6438	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x643A	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,1910 :: 		string_addc(bufferEeprom, CAN_ABRIR);
0x643E	0x0E15      	MOVLW       _bufferEeprom
0x6440	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x6442	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x6444	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x6446	0x0EB4      	MOVLW       _CAN_ABRIR
0x6448	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x644A	0x0EA3      	MOVLW       hi_addr(_CAN_ABRIR)
0x644C	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x644E	0x0E00      	MOVLW       higher_addr(_CAN_ABRIR)
0x6450	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x6452	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,1911 :: 		string_push(buffereeprom, '1');            //Abrio la barrera
0x6456	0x0E15      	MOVLW       _bufferEeprom
0x6458	0x6F23      	MOVWF       FARG_string_push_texto, 1
0x645A	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x645C	0x6F24      	MOVWF       FARG_string_push_texto+1, 1
0x645E	0x0E31      	MOVLW       49
0x6460	0x6F25      	MOVWF       FARG_string_push_caracter, 1
0x6462	0xF013ECEA  	CALL        _string_push, 0
;Expendedora.c,1913 :: 		string_cpyc(msjConst, CAN_MODULE);
0x6466	0x0E05      	MOVLW       _msjConst
0x6468	0x6F23      	MOVWF       FARG_string_cpyc_destino, 1
0x646A	0x0E03      	MOVLW       hi_addr(_msjConst)
0x646C	0x6F24      	MOVWF       FARG_string_cpyc_destino+1, 1
0x646E	0x0E1E      	MOVLW       _CAN_MODULE
0x6470	0x6F25      	MOVWF       FARG_string_cpyc_origen, 1
0x6472	0x0EA4      	MOVLW       hi_addr(_CAN_MODULE)
0x6474	0x6F26      	MOVWF       FARG_string_cpyc_origen+1, 1
0x6476	0x0E00      	MOVLW       higher_addr(_CAN_MODULE)
0x6478	0x6F27      	MOVWF       FARG_string_cpyc_origen+2, 1
0x647A	0xF014EC09  	CALL        _string_cpyc, 0
;Expendedora.c,1914 :: 		numToHex(can.id, &msjConst[1], 1);
0x647E	0xF523C355  	MOVFF       _can+12, FARG_numToHex_valor
0x6482	0x0E00      	MOVLW       0
0x6484	0x6F24      	MOVWF       FARG_numToHex_valor+1, 1
0x6486	0x6F25      	MOVWF       FARG_numToHex_valor+2, 1
0x6488	0x6F26      	MOVWF       FARG_numToHex_valor+3, 1
0x648A	0x0E06      	MOVLW       _msjConst+1
0x648C	0x6F27      	MOVWF       FARG_numToHex_cadena, 1
0x648E	0x0E03      	MOVLW       hi_addr(_msjConst+1)
0x6490	0x6F28      	MOVWF       FARG_numToHex_cadena+1, 1
0x6492	0x0E01      	MOVLW       1
0x6494	0x6F29      	MOVWF       FARG_numToHex_bytes, 1
0x6496	0xF016EC51  	CALL        _numToHex, 0
;Expendedora.c,1915 :: 		string_add(bufferEeprom, msjConst);
0x649A	0x0E15      	MOVLW       _bufferEeprom
0x649C	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x649E	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x64A0	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x64A2	0x0E05      	MOVLW       _msjConst
0x64A4	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x64A6	0x0E03      	MOVLW       hi_addr(_msjConst)
0x64A8	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x64AA	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,1917 :: 		buffer_save_send(true, bufferEeprom);
0x64AE	0x0E01      	MOVLW       1
0x64B0	0x6F23      	MOVWF       FARG_buffer_save_send_guardar, 1
0x64B2	0x0E15      	MOVLW       _bufferEeprom
0x64B4	0x6F24      	MOVWF       FARG_buffer_save_send_buffer, 1
0x64B6	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x64B8	0x6F25      	MOVWF       FARG_buffer_save_send_buffer+1, 1
0x64BA	0xF014ECA9  	CALL        _buffer_save_send, 0
;Expendedora.c,1921 :: 		}else if(string_cmpnc(CAN_KEY, &can.rxBuffer[sizeTotal], sizeKey)){
0x64BE	0xD27A      	BRA         L_can_user_read_message910
L_can_user_read_message909:
0x64C0	0x0E0C      	MOVLW       _CAN_KEY
0x64C2	0x0105      	MOVLB       5
0x64C4	0x6F23      	MOVWF       FARG_string_cmpnc_text1, 1
0x64C6	0x0EA4      	MOVLW       hi_addr(_CAN_KEY)
0x64C8	0x6F24      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x64CA	0x0E00      	MOVLW       higher_addr(_CAN_KEY)
0x64CC	0x6F25      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x64CE	0x0EB4      	MOVLW       _can+107
0x64D0	0x6F26      	MOVWF       FARG_string_cmpnc_text2, 1
0x64D2	0x0E03      	MOVLW       hi_addr(_can+107)
0x64D4	0x6F27      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x64D6	0x5106      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x64D8	0x2726      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x64DA	0xB0D8      	BTFSC       STATUS, 0 
0x64DC	0x2B27      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x64DE	0xF528C505  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x64E2	0xF013EC78  	CALL        _string_cmpnc, 0
0x64E6	0x5200      	MOVF        R0, 1 
0x64E8	0xB4D8      	BTFSC       STATUS, 2 
0x64EA	0xD163      	BRA         L_can_user_read_message911
;Expendedora.c,1922 :: 		sizeTotal += sizeKey;
0x64EC	0x5105      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x64EE	0x2506      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x64F0	0x6E00      	MOVWF       R0 
0x64F2	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1923 :: 		sizeKey = sizeof(CAN_NIP)-1;
0x64F6	0x0E03      	MOVLW       3
0x64F8	0x6F05      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Expendedora.c,1925 :: 		if(string_cmpnc(CAN_NIP, &can.rxBuffer[sizeTotal], sizeKey)){
0x64FA	0x0EE0      	MOVLW       _CAN_NIP
0x64FC	0x6F23      	MOVWF       FARG_string_cmpnc_text1, 1
0x64FE	0x0EA3      	MOVLW       hi_addr(_CAN_NIP)
0x6500	0x6F24      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x6502	0x0E00      	MOVLW       higher_addr(_CAN_NIP)
0x6504	0x6F25      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x6506	0x0EB4      	MOVLW       _can+107
0x6508	0x6F26      	MOVWF       FARG_string_cmpnc_text2, 1
0x650A	0x0E03      	MOVLW       hi_addr(_can+107)
0x650C	0x6F27      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x650E	0x5000      	MOVF        R0, 0 
0x6510	0x2726      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x6512	0xB0D8      	BTFSC       STATUS, 0 
0x6514	0x2B27      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x6516	0x0E03      	MOVLW       3
0x6518	0x6F28      	MOVWF       FARG_string_cmpnc_bytes, 1
0x651A	0xF013EC78  	CALL        _string_cmpnc, 0
0x651E	0x5200      	MOVF        R0, 1 
0x6520	0xB4D8      	BTFSC       STATUS, 2 
0x6522	0xD146      	BRA         L_can_user_read_message912
;Expendedora.c,1926 :: 		sizeTotal += sizeKey;
0x6524	0x5105      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x6526	0x2506      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x6528	0x6E00      	MOVWF       R0 
0x652A	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1927 :: 		string_cpyn(msjConst, &can.rxBuffer[sizeTotal], 8);
0x652E	0x0E05      	MOVLW       _msjConst
0x6530	0x6F23      	MOVWF       FARG_string_cpyn_destino, 1
0x6532	0x0E03      	MOVLW       hi_addr(_msjConst)
0x6534	0x6F24      	MOVWF       FARG_string_cpyn_destino+1, 1
0x6536	0x0EB4      	MOVLW       _can+107
0x6538	0x6F25      	MOVWF       FARG_string_cpyn_origen, 1
0x653A	0x0E03      	MOVLW       hi_addr(_can+107)
0x653C	0x6F26      	MOVWF       FARG_string_cpyn_origen+1, 1
0x653E	0x5000      	MOVF        R0, 0 
0x6540	0x2725      	ADDWF       FARG_string_cpyn_origen, 1, 1
0x6542	0xB0D8      	BTFSC       STATUS, 0 
0x6544	0x2B26      	INCF        FARG_string_cpyn_origen+1, 1, 1
0x6546	0x0E08      	MOVLW       8
0x6548	0x6F27      	MOVWF       FARG_string_cpyn_size, 1
0x654A	0xF014EC39  	CALL        _string_cpyn, 0
;Expendedora.c,1928 :: 		nip = hexToNum(msjConst);
0x654E	0x0E05      	MOVLW       _msjConst
0x6550	0x6F23      	MOVWF       FARG_hexToNum_hex, 1
0x6552	0x0E03      	MOVLW       hi_addr(_msjConst)
0x6554	0x6F24      	MOVWF       FARG_hexToNum_hex+1, 1
0x6556	0xF010EC5E  	CALL        _hexToNum, 0
0x655A	0xF517C000  	MOVFF       R0, can_user_read_message_nip_L0
0x655E	0xF518C001  	MOVFF       R1, can_user_read_message_nip_L0+1
0x6562	0xF519C002  	MOVFF       R2, can_user_read_message_nip_L0+2
0x6566	0xF51AC003  	MOVFF       R3, can_user_read_message_nip_L0+3
;Expendedora.c,1930 :: 		string_cpyn(msjConst, &can.rxBuffer[sizeTotal+8], 12);
0x656A	0x0E05      	MOVLW       _msjConst
0x656C	0x6F23      	MOVWF       FARG_string_cpyn_destino, 1
0x656E	0x0E03      	MOVLW       hi_addr(_msjConst)
0x6570	0x6F24      	MOVWF       FARG_string_cpyn_destino+1, 1
0x6572	0x0E08      	MOVLW       8
0x6574	0x2506      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x6576	0x6E00      	MOVWF       R0 
0x6578	0x6A01      	CLRF        R1 
0x657A	0x0E00      	MOVLW       0
0x657C	0x2201      	ADDWFC      R1, 1 
0x657E	0x0EB4      	MOVLW       _can+107
0x6580	0x2400      	ADDWF       R0, 0 
0x6582	0x6F25      	MOVWF       FARG_string_cpyn_origen, 1
0x6584	0x0E03      	MOVLW       hi_addr(_can+107)
0x6586	0x2001      	ADDWFC      R1, 0 
0x6588	0x6F26      	MOVWF       FARG_string_cpyn_origen+1, 1
0x658A	0x0E0C      	MOVLW       12
0x658C	0x6F27      	MOVWF       FARG_string_cpyn_size, 1
0x658E	0xF014EC39  	CALL        _string_cpyn, 0
;Expendedora.c,1932 :: 		if(!mysql_search_forced(tableKeyOutNip, keyOutNip, nip, &fila)){
0x6592	0x0E39      	MOVLW       _tableKeyOutNip
0x6594	0x6F23      	MOVWF       FARG_mysql_search_forced_tabla, 1
0x6596	0x0E00      	MOVLW       hi_addr(_tableKeyOutNip)
0x6598	0x6F24      	MOVWF       FARG_mysql_search_forced_tabla+1, 1
0x659A	0x0E48      	MOVLW       _keyOutNip
0x659C	0x6F25      	MOVWF       FARG_mysql_search_forced_columna, 1
0x659E	0x0E00      	MOVLW       hi_addr(_keyOutNip)
0x65A0	0x6F26      	MOVWF       FARG_mysql_search_forced_columna+1, 1
0x65A2	0xF527C517  	MOVFF       can_user_read_message_nip_L0, FARG_mysql_search_forced_buscar
0x65A6	0xF528C518  	MOVFF       can_user_read_message_nip_L0+1, FARG_mysql_search_forced_buscar+1
0x65AA	0xF529C519  	MOVFF       can_user_read_message_nip_L0+2, FARG_mysql_search_forced_buscar+2
0x65AE	0xF52AC51A  	MOVFF       can_user_read_message_nip_L0+3, FARG_mysql_search_forced_buscar+3
0x65B2	0x0E07      	MOVLW       can_user_read_message_fila_L0
0x65B4	0x6F2B      	MOVWF       FARG_mysql_search_forced_fila, 1
0x65B6	0x0E05      	MOVLW       hi_addr(can_user_read_message_fila_L0)
0x65B8	0x6F2C      	MOVWF       FARG_mysql_search_forced_fila+1, 1
0x65BA	0xF011EC4D  	CALL        _mysql_search_forced, 0
0x65BE	0x5200      	MOVF        R0, 1 
0x65C0	0xE132      	BNZ         L_can_user_read_message913
;Expendedora.c,1933 :: 		estatus = '0';
0x65C2	0x0E30      	MOVLW       48
0x65C4	0x0105      	MOVLB       5
0x65C6	0x6F0A      	MOVWF       can_user_read_message_estatus_L0, 1
;Expendedora.c,1934 :: 		mysql_write_forced(tableKeyOutNip, keyOutEstatus, fila, &estatus, sizeof(estatus));
0x65C8	0x0E39      	MOVLW       _tableKeyOutNip
0x65CA	0x6F31      	MOVWF       FARG_mysql_write_forced_name, 1
0x65CC	0x0E00      	MOVLW       hi_addr(_tableKeyOutNip)
0x65CE	0x6F32      	MOVWF       FARG_mysql_write_forced_name+1, 1
0x65D0	0x0E40      	MOVLW       _keyOutEstatus
0x65D2	0x6F33      	MOVWF       FARG_mysql_write_forced_column, 1
0x65D4	0x0E00      	MOVLW       hi_addr(_keyOutEstatus)
0x65D6	0x6F34      	MOVWF       FARG_mysql_write_forced_column+1, 1
0x65D8	0xF535C507  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_forced_fila
0x65DC	0xF536C508  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_forced_fila+1
0x65E0	0x0E0A      	MOVLW       can_user_read_message_estatus_L0
0x65E2	0x6F37      	MOVWF       FARG_mysql_write_forced_texto, 1
0x65E4	0x0E05      	MOVLW       hi_addr(can_user_read_message_estatus_L0)
0x65E6	0x6F38      	MOVWF       FARG_mysql_write_forced_texto+1, 1
0x65E8	0x0E01      	MOVLW       1
0x65EA	0x6F39      	MOVWF       FARG_mysql_write_forced_bytes, 1
0x65EC	0xF008ECA9  	CALL        _mysql_write_forced, 0
;Expendedora.c,1935 :: 		auxNip = -1;  //Nip invalido
0x65F0	0x0EFF      	MOVLW       255
0x65F2	0x0105      	MOVLB       5
0x65F4	0x6F1F      	MOVWF       can_user_read_message_auxNip_L0, 1
0x65F6	0x0EFF      	MOVLW       255
0x65F8	0x6F20      	MOVWF       can_user_read_message_auxNip_L0+1, 1
0x65FA	0x6F21      	MOVWF       can_user_read_message_auxNip_L0+2, 1
0x65FC	0x6F22      	MOVWF       can_user_read_message_auxNip_L0+3, 1
;Expendedora.c,1936 :: 		mysql_write_forced(tableKeyOutNip, keyOutNip, fila, (char*)&auxNip, sizeof(auxNip));
0x65FE	0x0E39      	MOVLW       _tableKeyOutNip
0x6600	0x6F31      	MOVWF       FARG_mysql_write_forced_name, 1
0x6602	0x0E00      	MOVLW       hi_addr(_tableKeyOutNip)
0x6604	0x6F32      	MOVWF       FARG_mysql_write_forced_name+1, 1
0x6606	0x0E48      	MOVLW       _keyOutNip
0x6608	0x6F33      	MOVWF       FARG_mysql_write_forced_column, 1
0x660A	0x0E00      	MOVLW       hi_addr(_keyOutNip)
0x660C	0x6F34      	MOVWF       FARG_mysql_write_forced_column+1, 1
0x660E	0xF535C507  	MOVFF       can_user_read_message_fila_L0, FARG_mysql_write_forced_fila
0x6612	0xF536C508  	MOVFF       can_user_read_message_fila_L0+1, FARG_mysql_write_forced_fila+1
0x6616	0x0E1F      	MOVLW       can_user_read_message_auxNip_L0
0x6618	0x6F37      	MOVWF       FARG_mysql_write_forced_texto, 1
0x661A	0x0E05      	MOVLW       hi_addr(can_user_read_message_auxNip_L0)
0x661C	0x6F38      	MOVWF       FARG_mysql_write_forced_texto+1, 1
0x661E	0x0E04      	MOVLW       4
0x6620	0x6F39      	MOVWF       FARG_mysql_write_forced_bytes, 1
0x6622	0xF008ECA9  	CALL        _mysql_write_forced, 0
;Expendedora.c,1937 :: 		}
L_can_user_read_message913:
;Expendedora.c,1939 :: 		mysql_write_roundTrip(tableKeyOutNip, keyOutEstatus, "1", 1);
0x6626	0x0E39      	MOVLW       _tableKeyOutNip
0x6628	0x0105      	MOVLB       5
0x662A	0x6F31      	MOVWF       FARG_mysql_write_roundTrip_name, 1
0x662C	0x0E00      	MOVLW       hi_addr(_tableKeyOutNip)
0x662E	0x6F32      	MOVWF       FARG_mysql_write_roundTrip_name+1, 1
0x6630	0x0E40      	MOVLW       _keyOutEstatus
0x6632	0x6F33      	MOVWF       FARG_mysql_write_roundTrip_column, 1
0x6634	0x0E00      	MOVLW       hi_addr(_keyOutEstatus)
0x6636	0x6F34      	MOVWF       FARG_mysql_write_roundTrip_column+1, 1
0x6638	0x0EFF      	MOVLW       ?lstr33_Expendedora
0x663A	0x6F35      	MOVWF       FARG_mysql_write_roundTrip_texto, 1
0x663C	0x0E01      	MOVLW       hi_addr(?lstr33_Expendedora)
0x663E	0x6F36      	MOVWF       FARG_mysql_write_roundTrip_texto+1, 1
0x6640	0x0E01      	MOVLW       1
0x6642	0x6F37      	MOVWF       FARG_mysql_write_roundTrip_bytes, 1
0x6644	0xF009EC45  	CALL        _mysql_write_roundTrip, 0
;Expendedora.c,1940 :: 		mysql_write_forced(tableKeyOutNip, keyOutNip, myTable.rowAct, (char*)&nip, sizeof(nip));
0x6648	0x0E39      	MOVLW       _tableKeyOutNip
0x664A	0x0105      	MOVLB       5
0x664C	0x6F31      	MOVWF       FARG_mysql_write_forced_name, 1
0x664E	0x0E00      	MOVLW       hi_addr(_tableKeyOutNip)
0x6650	0x6F32      	MOVWF       FARG_mysql_write_forced_name+1, 1
0x6652	0x0E48      	MOVLW       _keyOutNip
0x6654	0x6F33      	MOVWF       FARG_mysql_write_forced_column, 1
0x6656	0x0E00      	MOVLW       hi_addr(_keyOutNip)
0x6658	0x6F34      	MOVWF       FARG_mysql_write_forced_column+1, 1
0x665A	0xF535C31D  	MOVFF       Expendedora_myTable+4, FARG_mysql_write_forced_fila
0x665E	0xF536C31E  	MOVFF       Expendedora_myTable+5, FARG_mysql_write_forced_fila+1
0x6662	0x0E17      	MOVLW       can_user_read_message_nip_L0
0x6664	0x6F37      	MOVWF       FARG_mysql_write_forced_texto, 1
0x6666	0x0E05      	MOVLW       hi_addr(can_user_read_message_nip_L0)
0x6668	0x6F38      	MOVWF       FARG_mysql_write_forced_texto+1, 1
0x666A	0x0E04      	MOVLW       4
0x666C	0x6F39      	MOVWF       FARG_mysql_write_forced_bytes, 1
0x666E	0xF008ECA9  	CALL        _mysql_write_forced, 0
;Expendedora.c,1941 :: 		mysql_write_forced(tableKeyOutNip, keyOutDate, myTable.rowAct, msjConst, string_len(msjConst)+1);
0x6672	0x0E05      	MOVLW       _msjConst
0x6674	0x0105      	MOVLB       5
0x6676	0x6F31      	MOVWF       FARG_string_len_texto, 1
0x6678	0x0E03      	MOVLW       hi_addr(_msjConst)
0x667A	0x6F32      	MOVWF       FARG_string_len_texto+1, 1
0x667C	0xF008ECF9  	CALL        _string_len, 0
0x6680	0x5000      	MOVF        R0, 0 
0x6682	0x0F01      	ADDLW       1
0x6684	0x6F39      	MOVWF       FARG_mysql_write_forced_bytes, 1
0x6686	0x0E39      	MOVLW       _tableKeyOutNip
0x6688	0x6F31      	MOVWF       FARG_mysql_write_forced_name, 1
0x668A	0x0E00      	MOVLW       hi_addr(_tableKeyOutNip)
0x668C	0x6F32      	MOVWF       FARG_mysql_write_forced_name+1, 1
0x668E	0x0EA8      	MOVLW       _keyOutDate
0x6690	0x6F33      	MOVWF       FARG_mysql_write_forced_column, 1
0x6692	0x0E00      	MOVLW       hi_addr(_keyOutDate)
0x6694	0x6F34      	MOVWF       FARG_mysql_write_forced_column+1, 1
0x6696	0xF535C31D  	MOVFF       Expendedora_myTable+4, FARG_mysql_write_forced_fila
0x669A	0xF536C31E  	MOVFF       Expendedora_myTable+5, FARG_mysql_write_forced_fila+1
0x669E	0x0E05      	MOVLW       _msjConst
0x66A0	0x6F37      	MOVWF       FARG_mysql_write_forced_texto, 1
0x66A2	0x0E03      	MOVLW       hi_addr(_msjConst)
0x66A4	0x6F38      	MOVWF       FARG_mysql_write_forced_texto+1, 1
0x66A6	0xF008ECA9  	CALL        _mysql_write_forced, 0
;Expendedora.c,1944 :: 		string_cpyc(bufferEeprom, CAN_TPV);
0x66AA	0x0E15      	MOVLW       _bufferEeprom
0x66AC	0x0105      	MOVLB       5
0x66AE	0x6F23      	MOVWF       FARG_string_cpyc_destino, 1
0x66B0	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x66B2	0x6F24      	MOVWF       FARG_string_cpyc_destino+1, 1
0x66B4	0x0EBC      	MOVLW       _CAN_TPV
0x66B6	0x6F25      	MOVWF       FARG_string_cpyc_origen, 1
0x66B8	0x0EA3      	MOVLW       hi_addr(_CAN_TPV)
0x66BA	0x6F26      	MOVWF       FARG_string_cpyc_origen+1, 1
0x66BC	0x0E00      	MOVLW       higher_addr(_CAN_TPV)
0x66BE	0x6F27      	MOVWF       FARG_string_cpyc_origen+2, 1
0x66C0	0xF014EC09  	CALL        _string_cpyc, 0
;Expendedora.c,1945 :: 		string_addc(bufferEeprom, CAN_OUT);
0x66C4	0x0E15      	MOVLW       _bufferEeprom
0x66C6	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x66C8	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x66CA	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x66CC	0x0EC0      	MOVLW       _CAN_OUT
0x66CE	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x66D0	0x0EA3      	MOVLW       hi_addr(_CAN_OUT)
0x66D2	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x66D4	0x0E00      	MOVLW       higher_addr(_CAN_OUT)
0x66D6	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x66D8	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,1946 :: 		string_addc(bufferEeprom, CAN_KEY);
0x66DC	0x0E15      	MOVLW       _bufferEeprom
0x66DE	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x66E0	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x66E2	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x66E4	0x0E0C      	MOVLW       _CAN_KEY
0x66E6	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x66E8	0x0EA4      	MOVLW       hi_addr(_CAN_KEY)
0x66EA	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x66EC	0x0E00      	MOVLW       higher_addr(_CAN_KEY)
0x66EE	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x66F0	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,1947 :: 		string_addc(bufferEeprom, CAN_NIP);
0x66F4	0x0E15      	MOVLW       _bufferEeprom
0x66F6	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x66F8	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x66FA	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x66FC	0x0EE0      	MOVLW       _CAN_NIP
0x66FE	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x6700	0x0EA3      	MOVLW       hi_addr(_CAN_NIP)
0x6702	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x6704	0x0E00      	MOVLW       higher_addr(_CAN_NIP)
0x6706	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x6708	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,1948 :: 		numToHex(nip, msjConst, 4);
0x670C	0xF523C517  	MOVFF       can_user_read_message_nip_L0, FARG_numToHex_valor
0x6710	0xF524C518  	MOVFF       can_user_read_message_nip_L0+1, FARG_numToHex_valor+1
0x6714	0xF525C519  	MOVFF       can_user_read_message_nip_L0+2, FARG_numToHex_valor+2
0x6718	0xF526C51A  	MOVFF       can_user_read_message_nip_L0+3, FARG_numToHex_valor+3
0x671C	0x0E05      	MOVLW       _msjConst
0x671E	0x6F27      	MOVWF       FARG_numToHex_cadena, 1
0x6720	0x0E03      	MOVLW       hi_addr(_msjConst)
0x6722	0x6F28      	MOVWF       FARG_numToHex_cadena+1, 1
0x6724	0x0E04      	MOVLW       4
0x6726	0x6F29      	MOVWF       FARG_numToHex_bytes, 1
0x6728	0xF016EC51  	CALL        _numToHex, 0
;Expendedora.c,1949 :: 		string_add(bufferEeprom, msjConst);
0x672C	0x0E15      	MOVLW       _bufferEeprom
0x672E	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x6730	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x6732	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x6734	0x0E05      	MOVLW       _msjConst
0x6736	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x6738	0x0E03      	MOVLW       hi_addr(_msjConst)
0x673A	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x673C	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,1950 :: 		string_addc(bufferEeprom, CAN_REGISTRAR);
0x6740	0x0E15      	MOVLW       _bufferEeprom
0x6742	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x6744	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x6746	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x6748	0x0E10      	MOVLW       _CAN_REGISTRAR
0x674A	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x674C	0x0EA4      	MOVLW       hi_addr(_CAN_REGISTRAR)
0x674E	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x6750	0x0E00      	MOVLW       higher_addr(_CAN_REGISTRAR)
0x6752	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x6754	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,1952 :: 		string_addc(bufferEeprom, CAN_MODULE);
0x6758	0x0E15      	MOVLW       _bufferEeprom
0x675A	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x675C	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x675E	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x6760	0x0E1E      	MOVLW       _CAN_MODULE
0x6762	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x6764	0x0EA4      	MOVLW       hi_addr(_CAN_MODULE)
0x6766	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x6768	0x0E00      	MOVLW       higher_addr(_CAN_MODULE)
0x676A	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x676C	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,1953 :: 		numToHex(canId, msjConst, 1);
0x6770	0xF523C2BF  	MOVFF       _canId, FARG_numToHex_valor
0x6774	0x0E00      	MOVLW       0
0x6776	0x6F24      	MOVWF       FARG_numToHex_valor+1, 1
0x6778	0x6F25      	MOVWF       FARG_numToHex_valor+2, 1
0x677A	0x6F26      	MOVWF       FARG_numToHex_valor+3, 1
0x677C	0x0E05      	MOVLW       _msjConst
0x677E	0x6F27      	MOVWF       FARG_numToHex_cadena, 1
0x6780	0x0E03      	MOVLW       hi_addr(_msjConst)
0x6782	0x6F28      	MOVWF       FARG_numToHex_cadena+1, 1
0x6784	0x0E01      	MOVLW       1
0x6786	0x6F29      	MOVWF       FARG_numToHex_bytes, 1
0x6788	0xF016EC51  	CALL        _numToHex, 0
;Expendedora.c,1954 :: 		string_add(bufferEeprom, msjConst);
0x678C	0x0E15      	MOVLW       _bufferEeprom
0x678E	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x6790	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x6792	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x6794	0x0E05      	MOVLW       _msjConst
0x6796	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x6798	0x0E03      	MOVLW       hi_addr(_msjConst)
0x679A	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x679C	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,1956 :: 		buffer_save_send(true, bufferEeprom);
0x67A0	0x0E01      	MOVLW       1
0x67A2	0x6F23      	MOVWF       FARG_buffer_save_send_guardar, 1
0x67A4	0x0E15      	MOVLW       _bufferEeprom
0x67A6	0x6F24      	MOVWF       FARG_buffer_save_send_buffer, 1
0x67A8	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x67AA	0x6F25      	MOVWF       FARG_buffer_save_send_buffer+1, 1
0x67AC	0xF014ECA9  	CALL        _buffer_save_send, 0
;Expendedora.c,1961 :: 		}
L_can_user_read_message912:
;Expendedora.c,1962 :: 		}else if(string_cmpnc(CAN_FOL, &can.rxBuffer[sizeTotal], sizeKey)){
0x67B0	0xD101      	BRA         L_can_user_read_message914
L_can_user_read_message911:
0x67B2	0x0EEC      	MOVLW       _CAN_FOL
0x67B4	0x0105      	MOVLB       5
0x67B6	0x6F23      	MOVWF       FARG_string_cmpnc_text1, 1
0x67B8	0x0EA3      	MOVLW       hi_addr(_CAN_FOL)
0x67BA	0x6F24      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x67BC	0x0E00      	MOVLW       higher_addr(_CAN_FOL)
0x67BE	0x6F25      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x67C0	0x0EB4      	MOVLW       _can+107
0x67C2	0x6F26      	MOVWF       FARG_string_cmpnc_text2, 1
0x67C4	0x0E03      	MOVLW       hi_addr(_can+107)
0x67C6	0x6F27      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x67C8	0x5106      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x67CA	0x2726      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x67CC	0xB0D8      	BTFSC       STATUS, 0 
0x67CE	0x2B27      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x67D0	0xF528C505  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x67D4	0xF013EC78  	CALL        _string_cmpnc, 0
0x67D8	0x5200      	MOVF        R0, 1 
0x67DA	0xB4D8      	BTFSC       STATUS, 2 
0x67DC	0xD0EB      	BRA         L_can_user_read_message915
;Expendedora.c,1963 :: 		sizeTotal += sizeKey;
0x67DE	0x5105      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x67E0	0x2506      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x67E2	0x6E00      	MOVWF       R0 
0x67E4	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1964 :: 		sizeKey = sizeof(CAN_TABLE_GET)-1;
0x67E8	0x0E03      	MOVLW       3
0x67EA	0x6F05      	MOVWF       can_user_read_message_sizeKey_L0, 1
;Expendedora.c,1966 :: 		if(string_cmpnc(CAN_TABLE_GET, &can.rxBuffer[sizeTotal], sizeKey)){
0x67EC	0x0E00      	MOVLW       _CAN_TABLE_GET
0x67EE	0x6F23      	MOVWF       FARG_string_cmpnc_text1, 1
0x67F0	0x0EA4      	MOVLW       hi_addr(_CAN_TABLE_GET)
0x67F2	0x6F24      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x67F4	0x0E00      	MOVLW       higher_addr(_CAN_TABLE_GET)
0x67F6	0x6F25      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x67F8	0x0EB4      	MOVLW       _can+107
0x67FA	0x6F26      	MOVWF       FARG_string_cmpnc_text2, 1
0x67FC	0x0E03      	MOVLW       hi_addr(_can+107)
0x67FE	0x6F27      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x6800	0x5000      	MOVF        R0, 0 
0x6802	0x2726      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x6804	0xB0D8      	BTFSC       STATUS, 0 
0x6806	0x2B27      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x6808	0x0E03      	MOVLW       3
0x680A	0x6F28      	MOVWF       FARG_string_cmpnc_bytes, 1
0x680C	0xF013EC78  	CALL        _string_cmpnc, 0
0x6810	0x5200      	MOVF        R0, 1 
0x6812	0xB4D8      	BTFSC       STATUS, 2 
0x6814	0xD080      	BRA         L_can_user_read_message916
;Expendedora.c,1967 :: 		sizeTotal += sizeKey;
0x6816	0x5105      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x6818	0x2706      	ADDWF       can_user_read_message_sizeTotal_L0, 1, 1
;Expendedora.c,1968 :: 		string_cpyc(bufferEeprom, CAN_TPV);
0x681A	0x0E15      	MOVLW       _bufferEeprom
0x681C	0x6F23      	MOVWF       FARG_string_cpyc_destino, 1
0x681E	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x6820	0x6F24      	MOVWF       FARG_string_cpyc_destino+1, 1
0x6822	0x0EBC      	MOVLW       _CAN_TPV
0x6824	0x6F25      	MOVWF       FARG_string_cpyc_origen, 1
0x6826	0x0EA3      	MOVLW       hi_addr(_CAN_TPV)
0x6828	0x6F26      	MOVWF       FARG_string_cpyc_origen+1, 1
0x682A	0x0E00      	MOVLW       higher_addr(_CAN_TPV)
0x682C	0x6F27      	MOVWF       FARG_string_cpyc_origen+2, 1
0x682E	0xF014EC09  	CALL        _string_cpyc, 0
;Expendedora.c,1969 :: 		string_addc(bufferEeprom, CAN_FOL);
0x6832	0x0E15      	MOVLW       _bufferEeprom
0x6834	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x6836	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x6838	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x683A	0x0EEC      	MOVLW       _CAN_FOL
0x683C	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x683E	0x0EA3      	MOVLW       hi_addr(_CAN_FOL)
0x6840	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x6842	0x0E00      	MOVLW       higher_addr(_CAN_FOL)
0x6844	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x6846	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,1970 :: 		string_addc(bufferEeprom, CAN_TABLE_GET);
0x684A	0x0E15      	MOVLW       _bufferEeprom
0x684C	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x684E	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x6850	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x6852	0x0E00      	MOVLW       _CAN_TABLE_GET
0x6854	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x6856	0x0EA4      	MOVLW       hi_addr(_CAN_TABLE_GET)
0x6858	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x685A	0x0E00      	MOVLW       higher_addr(_CAN_TABLE_GET)
0x685C	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x685E	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,1972 :: 		mysql_read(tableFolio, folioTotal, 1, &folio);
0x6862	0x0E9D      	MOVLW       _tableFolio
0x6864	0x6F31      	MOVWF       FARG_mysql_read_name, 1
0x6866	0x0E02      	MOVLW       hi_addr(_tableFolio)
0x6868	0x6F32      	MOVWF       FARG_mysql_read_name+1, 1
0x686A	0x0E97      	MOVLW       _folioTotal
0x686C	0x6F33      	MOVWF       FARG_mysql_read_column, 1
0x686E	0x0E02      	MOVLW       hi_addr(_folioTotal)
0x6870	0x6F34      	MOVWF       FARG_mysql_read_column+1, 1
0x6872	0x0E01      	MOVLW       1
0x6874	0x6F35      	MOVWF       FARG_mysql_read_fila, 1
0x6876	0x0E00      	MOVLW       0
0x6878	0x6F36      	MOVWF       FARG_mysql_read_fila+1, 1
0x687A	0x0E01      	MOVLW       _folio
0x687C	0x6F37      	MOVWF       FARG_mysql_read_result, 1
0x687E	0x0E03      	MOVLW       hi_addr(_folio)
0x6880	0x6F38      	MOVWF       FARG_mysql_read_result+1, 1
0x6882	0xF00AECAA  	CALL        _mysql_read, 0
;Expendedora.c,1973 :: 		numToHex(folio, msjConst, 4);
0x6886	0xF523C301  	MOVFF       _folio, FARG_numToHex_valor
0x688A	0xF524C302  	MOVFF       _folio+1, FARG_numToHex_valor+1
0x688E	0xF525C303  	MOVFF       _folio+2, FARG_numToHex_valor+2
0x6892	0xF526C304  	MOVFF       _folio+3, FARG_numToHex_valor+3
0x6896	0x0E05      	MOVLW       _msjConst
0x6898	0x0105      	MOVLB       5
0x689A	0x6F27      	MOVWF       FARG_numToHex_cadena, 1
0x689C	0x0E03      	MOVLW       hi_addr(_msjConst)
0x689E	0x6F28      	MOVWF       FARG_numToHex_cadena+1, 1
0x68A0	0x0E04      	MOVLW       4
0x68A2	0x6F29      	MOVWF       FARG_numToHex_bytes, 1
0x68A4	0xF016EC51  	CALL        _numToHex, 0
;Expendedora.c,1974 :: 		string_add(bufferEeprom, msjConst);
0x68A8	0x0E15      	MOVLW       _bufferEeprom
0x68AA	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x68AC	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x68AE	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x68B0	0x0E05      	MOVLW       _msjConst
0x68B2	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x68B4	0x0E03      	MOVLW       hi_addr(_msjConst)
0x68B6	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x68B8	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,1975 :: 		string_addc(bufferEeprom, CAN_MODULE);
0x68BC	0x0E15      	MOVLW       _bufferEeprom
0x68BE	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x68C0	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x68C2	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x68C4	0x0E1E      	MOVLW       _CAN_MODULE
0x68C6	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x68C8	0x0EA4      	MOVLW       hi_addr(_CAN_MODULE)
0x68CA	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x68CC	0x0E00      	MOVLW       higher_addr(_CAN_MODULE)
0x68CE	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x68D0	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,1976 :: 		numToHex(can.id, msjConst, 1);
0x68D4	0xF523C355  	MOVFF       _can+12, FARG_numToHex_valor
0x68D8	0x0E00      	MOVLW       0
0x68DA	0x6F24      	MOVWF       FARG_numToHex_valor+1, 1
0x68DC	0x6F25      	MOVWF       FARG_numToHex_valor+2, 1
0x68DE	0x6F26      	MOVWF       FARG_numToHex_valor+3, 1
0x68E0	0x0E05      	MOVLW       _msjConst
0x68E2	0x6F27      	MOVWF       FARG_numToHex_cadena, 1
0x68E4	0x0E03      	MOVLW       hi_addr(_msjConst)
0x68E6	0x6F28      	MOVWF       FARG_numToHex_cadena+1, 1
0x68E8	0x0E01      	MOVLW       1
0x68EA	0x6F29      	MOVWF       FARG_numToHex_bytes, 1
0x68EC	0xF016EC51  	CALL        _numToHex, 0
;Expendedora.c,1977 :: 		string_add(bufferEeprom, msjConst);
0x68F0	0x0E15      	MOVLW       _bufferEeprom
0x68F2	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x68F4	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x68F6	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x68F8	0x0E05      	MOVLW       _msjConst
0x68FA	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x68FC	0x0E03      	MOVLW       hi_addr(_msjConst)
0x68FE	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x6900	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,1978 :: 		buffer_save_send(true, bufferEeprom);
0x6904	0x0E01      	MOVLW       1
0x6906	0x6F23      	MOVWF       FARG_buffer_save_send_guardar, 1
0x6908	0x0E15      	MOVLW       _bufferEeprom
0x690A	0x6F24      	MOVWF       FARG_buffer_save_send_buffer, 1
0x690C	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x690E	0x6F25      	MOVWF       FARG_buffer_save_send_buffer+1, 1
0x6910	0xF014ECA9  	CALL        _buffer_save_send, 0
;Expendedora.c,1982 :: 		}else if(string_cmpnc(CAN_TABLE_SET, &can.rxBuffer[sizeTotal], sizeKey)){
0x6914	0xD04F      	BRA         L_can_user_read_message917
L_can_user_read_message916:
0x6916	0x0E04      	MOVLW       _CAN_TABLE_SET
0x6918	0x0105      	MOVLB       5
0x691A	0x6F23      	MOVWF       FARG_string_cmpnc_text1, 1
0x691C	0x0EA4      	MOVLW       hi_addr(_CAN_TABLE_SET)
0x691E	0x6F24      	MOVWF       FARG_string_cmpnc_text1+1, 1
0x6920	0x0E00      	MOVLW       higher_addr(_CAN_TABLE_SET)
0x6922	0x6F25      	MOVWF       FARG_string_cmpnc_text1+2, 1
0x6924	0x0EB4      	MOVLW       _can+107
0x6926	0x6F26      	MOVWF       FARG_string_cmpnc_text2, 1
0x6928	0x0E03      	MOVLW       hi_addr(_can+107)
0x692A	0x6F27      	MOVWF       FARG_string_cmpnc_text2+1, 1
0x692C	0x5106      	MOVF        can_user_read_message_sizeTotal_L0, 0, 1
0x692E	0x2726      	ADDWF       FARG_string_cmpnc_text2, 1, 1
0x6930	0xB0D8      	BTFSC       STATUS, 0 
0x6932	0x2B27      	INCF        FARG_string_cmpnc_text2+1, 1, 1
0x6934	0xF528C505  	MOVFF       can_user_read_message_sizeKey_L0, FARG_string_cmpnc_bytes
0x6938	0xF013EC78  	CALL        _string_cmpnc, 0
0x693C	0x5200      	MOVF        R0, 1 
0x693E	0xE03A      	BZ          L_can_user_read_message918
;Expendedora.c,1983 :: 		sizeTotal += sizeKey;
0x6940	0x5105      	MOVF        can_user_read_message_sizeKey_L0, 0, 1
0x6942	0x2506      	ADDWF       can_user_read_message_sizeTotal_L0, 0, 1
0x6944	0x6E00      	MOVWF       R0 
0x6946	0xF506C000  	MOVFF       R0, can_user_read_message_sizeTotal_L0
;Expendedora.c,1984 :: 		string_cpyn(msjConst, &can.rxBuffer[sizeTotal], 8);
0x694A	0x0E05      	MOVLW       _msjConst
0x694C	0x6F23      	MOVWF       FARG_string_cpyn_destino, 1
0x694E	0x0E03      	MOVLW       hi_addr(_msjConst)
0x6950	0x6F24      	MOVWF       FARG_string_cpyn_destino+1, 1
0x6952	0x0EB4      	MOVLW       _can+107
0x6954	0x6F25      	MOVWF       FARG_string_cpyn_origen, 1
0x6956	0x0E03      	MOVLW       hi_addr(_can+107)
0x6958	0x6F26      	MOVWF       FARG_string_cpyn_origen+1, 1
0x695A	0x5000      	MOVF        R0, 0 
0x695C	0x2725      	ADDWF       FARG_string_cpyn_origen, 1, 1
0x695E	0xB0D8      	BTFSC       STATUS, 0 
0x6960	0x2B26      	INCF        FARG_string_cpyn_origen+1, 1, 1
0x6962	0x0E08      	MOVLW       8
0x6964	0x6F27      	MOVWF       FARG_string_cpyn_size, 1
0x6966	0xF014EC39  	CALL        _string_cpyn, 0
;Expendedora.c,1985 :: 		folio = hexToNum(msjConst);
0x696A	0x0E05      	MOVLW       _msjConst
0x696C	0x6F23      	MOVWF       FARG_hexToNum_hex, 1
0x696E	0x0E03      	MOVLW       hi_addr(_msjConst)
0x6970	0x6F24      	MOVWF       FARG_hexToNum_hex+1, 1
0x6972	0xF010EC5E  	CALL        _hexToNum, 0
0x6976	0xF301C000  	MOVFF       R0, _folio
0x697A	0xF302C001  	MOVFF       R1, _folio+1
0x697E	0xF303C002  	MOVFF       R2, _folio+2
0x6982	0xF304C003  	MOVFF       R3, _folio+3
;Expendedora.c,1986 :: 		mysql_write(tableFolio, folioTotal, 1, folio, false);
0x6986	0x0E9D      	MOVLW       _tableFolio
0x6988	0x6F23      	MOVWF       FARG_mysql_write_name, 1
0x698A	0x0E02      	MOVLW       hi_addr(_tableFolio)
0x698C	0x6F24      	MOVWF       FARG_mysql_write_name+1, 1
0x698E	0x0E97      	MOVLW       _folioTotal
0x6990	0x6F25      	MOVWF       FARG_mysql_write_column, 1
0x6992	0x0E02      	MOVLW       hi_addr(_folioTotal)
0x6994	0x6F26      	MOVWF       FARG_mysql_write_column+1, 1
0x6996	0x0E01      	MOVLW       1
0x6998	0x6F27      	MOVWF       FARG_mysql_write_fila, 1
0x699A	0x0E00      	MOVLW       0
0x699C	0x6F28      	MOVWF       FARG_mysql_write_fila+1, 1
0x699E	0xF529C000  	MOVFF       R0, FARG_mysql_write_value
0x69A2	0xF52AC001  	MOVFF       R1, FARG_mysql_write_value+1
0x69A6	0xF52BC002  	MOVFF       R2, FARG_mysql_write_value+2
0x69AA	0xF52CC003  	MOVFF       R3, FARG_mysql_write_value+3
0x69AE	0x6B2D      	CLRF        FARG_mysql_write_endWrite, 1
0x69B0	0xF012ECDC  	CALL        _mysql_write, 0
;Expendedora.c,1991 :: 		}
L_can_user_read_message918:
L_can_user_read_message917:
;Expendedora.c,1992 :: 		}
L_can_user_read_message915:
L_can_user_read_message914:
L_can_user_read_message910:
L_can_user_read_message908:
L_can_user_read_message902:
;Expendedora.c,1993 :: 		}
L_can_user_read_message896:
L_can_user_read_message895:
L_can_user_read_message885:
L_can_user_read_message867:
L_can_user_read_message855:
L_can_user_read_message819:
L_can_user_read_message814:
;Expendedora.c,1994 :: 		}
L_end_can_user_read_message:
0x69B4	0x0012      	RETURN      0
; end of _can_user_read_message
_Div_32x32_FP:
;__Lib_MathDouble.c,1325 :: 		
;__Lib_MathDouble.c,1339 :: 		
0x69B6	0x5004      	MOVF        R4, 0 
0x69B8	0x0A00      	XORLW       0
0x69BA	0xE112      	BNZ         L_Div_32x32_FP11
;__Lib_MathDouble.c,1340 :: 		
0x69BC	0x5005      	MOVF        R5, 0 
0x69BE	0x0A00      	XORLW       0
0x69C0	0xE10F      	BNZ         L_Div_32x32_FP12
;__Lib_MathDouble.c,1341 :: 		
0x69C2	0x5006      	MOVF        R6, 0 
0x69C4	0x0A00      	XORLW       0
0x69C6	0xE10C      	BNZ         L_Div_32x32_FP13
;__Lib_MathDouble.c,1342 :: 		
0x69C8	0x5007      	MOVF        R7, 0 
0x69CA	0x0A00      	XORLW       0
0x69CC	0xE109      	BNZ         L_Div_32x32_FP14
;__Lib_MathDouble.c,1343 :: 		
0x69CE	0x0EFF      	MOVLW       255
0x69D0	0x6E00      	MOVWF       R0 
;__Lib_MathDouble.c,1344 :: 		
0x69D2	0x0EFF      	MOVLW       255
0x69D4	0x6E01      	MOVWF       R1 
;__Lib_MathDouble.c,1345 :: 		
0x69D6	0x0E7F      	MOVLW       127
0x69D8	0x6E02      	MOVWF       R2 
;__Lib_MathDouble.c,1346 :: 		
0x69DA	0x0EFF      	MOVLW       255
0x69DC	0x6E03      	MOVWF       R3 
;__Lib_MathDouble.c,1347 :: 		
0x69DE	0xD0A8      	BRA         L_end_Div_32x32_FP
;__Lib_MathDouble.c,1348 :: 		
L_Div_32x32_FP14:
L_Div_32x32_FP13:
L_Div_32x32_FP12:
L_Div_32x32_FP11:
;__Lib_MathDouble.c,1353 :: 		
0x69E0	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,1354 :: 		
0x69E2	0x6A09      	CLRF        R9, 0
;__Lib_MathDouble.c,1356 :: 		
0x69E4	0x5007      	MOVF        R7, 0, 0
;__Lib_MathDouble.c,1357 :: 		
0x69E6	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1358 :: 		
0x69E8	0xF035EF86  	GOTO        JPDSETFDZ32
;__Lib_MathDouble.c,1360 :: 		
0x69EC	0x5003      	MOVF        R3, 0, 0
;__Lib_MathDouble.c,1361 :: 		
0x69EE	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1362 :: 		
0x69F0	0xF035EF8B  	GOTO        JPDRES032
;__Lib_MathDouble.c,1364 :: 		
0x69F4	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,1365 :: 		
0x69F6	0x1806      	XORWF       R6, 0, 0
;__Lib_MathDouble.c,1366 :: 		
0x69F8	0x6E0A      	MOVWF       R10, 0
;__Lib_MathDouble.c,1367 :: 		
0x69FA	0x8E02      	BSF         R2, 7, 0
;__Lib_MathDouble.c,1368 :: 		
0x69FC	0x8E06      	BSF         R6, 7, 0
;__Lib_MathDouble.c,1370 :: 		
0x69FE	0x6A0E      	CLRF        R14, 0
;__Lib_MathDouble.c,1371 :: 		
0x6A00	0xF008C002  	MOVFF       R2, R8
;__Lib_MathDouble.c,1372 :: 		
0x6A04	0xF00CC001  	MOVFF       R1, R12
;__Lib_MathDouble.c,1373 :: 		
0x6A08	0xF00DC000  	MOVFF       R0, R13
;__Lib_MathDouble.c,1375 :: 		
0x6A0C	0x5004      	MOVF        R4, 0, 0
;__Lib_MathDouble.c,1376 :: 		
0x6A0E	0x5E0D      	SUBWF       R13, 1, 0
;__Lib_MathDouble.c,1377 :: 		
0x6A10	0x5005      	MOVF        R5, 0, 0
;__Lib_MathDouble.c,1378 :: 		
0x6A12	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1379 :: 		
0x6A14	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_MathDouble.c,1381 :: 		
0x6A16	0x5E0C      	SUBWF       R12, 1, 0
;__Lib_MathDouble.c,1382 :: 		
0x6A18	0x5006      	MOVF        R6, 0, 0
;__Lib_MathDouble.c,1383 :: 		
0x6A1A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1384 :: 		
0x6A1C	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_MathDouble.c,1386 :: 		
0x6A1E	0x5E08      	SUBWF       R8, 1, 0
;__Lib_MathDouble.c,1387 :: 		
0x6A20	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,1388 :: 		
0x6A22	0x6A0C      	CLRF        R12, 0
;__Lib_MathDouble.c,1389 :: 		
0x6A24	0x6A0D      	CLRF        R13, 0
;__Lib_MathDouble.c,1390 :: 		
0x6A26	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1391 :: 		
0x6A28	0xF035EF1D  	GOTO        DALIGN32OK
;__Lib_MathDouble.c,1393 :: 		
0x6A2C	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,1394 :: 		
0x6A2E	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,1395 :: 		
0x6A30	0x3201      	RRCF        R1, 1, 0
;__Lib_MathDouble.c,1396 :: 		
0x6A32	0x3200      	RRCF        R0, 1, 0
;__Lib_MathDouble.c,1397 :: 		
0x6A34	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,1398 :: 		
0x6A36	0x0E01      	MOVLW       1
;__Lib_MathDouble.c,1399 :: 		
0x6A38	0x6E0E      	MOVWF       R14, 0
;__Lib_MathDouble.c,1400 :: 		
DALIGN32OK:
;__Lib_MathDouble.c,1401 :: 		
0x6A3A	0x5007      	MOVF        R7, 0, 0
;__Lib_MathDouble.c,1402 :: 		
0x6A3C	0x5E03      	SUBWF       R3, 1, 0
;__Lib_MathDouble.c,1403 :: 		
0x6A3E	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1404 :: 		
0x6A40	0xF035EF2A  	GOTO        ALTB32
;__Lib_MathDouble.c,1406 :: 		
0x6A44	0x0E7E      	MOVLW       126
;__Lib_MathDouble.c,1407 :: 		
0x6A46	0x240E      	ADDWF       R14, 0, 0
;__Lib_MathDouble.c,1408 :: 		
0x6A48	0x2603      	ADDWF       R3, 1, 0
;__Lib_MathDouble.c,1409 :: 		
0x6A4A	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_MathDouble.c,1410 :: 		
0x6A4C	0xF035EF90  	GOTO        JPDSETFOV32
;__Lib_MathDouble.c,1411 :: 		
0x6A50	0xF035EF30  	GOTO        DARGOK32
;__Lib_MathDouble.c,1412 :: 		
ALTB32:
;__Lib_MathDouble.c,1413 :: 		
0x6A54	0x0E7E      	MOVLW       126
;__Lib_MathDouble.c,1414 :: 		
0x6A56	0x240E      	ADDWF       R14, 0, 0
;__Lib_MathDouble.c,1415 :: 		
0x6A58	0x2603      	ADDWF       R3, 1, 0
;__Lib_MathDouble.c,1416 :: 		
0x6A5A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1417 :: 		
0x6A5C	0xF035EF95  	GOTO        JPDSETFUN32
;__Lib_MathDouble.c,1418 :: 		
DARGOK32:
;__Lib_MathDouble.c,1419 :: 		
0x6A60	0x0E18      	MOVLW       24
;__Lib_MathDouble.c,1420 :: 		
0x6A62	0x6E0B      	MOVWF       R11, 0
;__Lib_MathDouble.c,1421 :: 		
DLOOP32:
;__Lib_MathDouble.c,1422 :: 		
0x6A64	0x360D      	RLCF        R13, 1, 0
;__Lib_MathDouble.c,1423 :: 		
0x6A66	0x360C      	RLCF        R12, 1, 0
;__Lib_MathDouble.c,1424 :: 		
0x6A68	0x3608      	RLCF        R8, 1, 0
;__Lib_MathDouble.c,1425 :: 		
0x6A6A	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,1426 :: 		
0x6A6C	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,1427 :: 		
0x6A6E	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,1428 :: 		
0x6A70	0x360E      	RLCF        R14, 1, 0
;__Lib_MathDouble.c,1430 :: 		
0x6A72	0x5004      	MOVF        R4, 0, 0
;__Lib_MathDouble.c,1431 :: 		
0x6A74	0x5E00      	SUBWF       R0, 1, 0
;__Lib_MathDouble.c,1432 :: 		
0x6A76	0x5005      	MOVF        R5, 0, 0
;__Lib_MathDouble.c,1433 :: 		
0x6A78	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1434 :: 		
0x6A7A	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_MathDouble.c,1436 :: 		
0x6A7C	0x5E01      	SUBWF       R1, 1, 0
;__Lib_MathDouble.c,1437 :: 		
0x6A7E	0x5006      	MOVF        R6, 0, 0
;__Lib_MathDouble.c,1438 :: 		
0x6A80	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1439 :: 		
0x6A82	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_MathDouble.c,1441 :: 		
0x6A84	0x5E02      	SUBWF       R2, 1, 0
;__Lib_MathDouble.c,1442 :: 		
0x6A86	0x3406      	RLCF        R6, 0, 0
;__Lib_MathDouble.c,1443 :: 		
0x6A88	0x120E      	IORWF       R14, 1, 0
;__Lib_MathDouble.c,1444 :: 		
0x6A8A	0xA00E      	BTFSS       R14, 0, 0
;__Lib_MathDouble.c,1445 :: 		
0x6A8C	0xF035EF4B  	GOTO        DREST32
;__Lib_MathDouble.c,1446 :: 		
0x6A90	0x800D      	BSF         R13, 0, 0
;__Lib_MathDouble.c,1447 :: 		
0x6A92	0xF035EF56  	GOTO        DOK32
;__Lib_MathDouble.c,1448 :: 		
DREST32:
;__Lib_MathDouble.c,1449 :: 		
0x6A96	0x5004      	MOVF        R4, 0, 0
;__Lib_MathDouble.c,1450 :: 		
0x6A98	0x2600      	ADDWF       R0, 1, 0
;__Lib_MathDouble.c,1451 :: 		
0x6A9A	0x5005      	MOVF        R5, 0, 0
;__Lib_MathDouble.c,1452 :: 		
0x6A9C	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_MathDouble.c,1453 :: 		
0x6A9E	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_MathDouble.c,1455 :: 		
0x6AA0	0x2601      	ADDWF       R1, 1, 0
;__Lib_MathDouble.c,1456 :: 		
0x6AA2	0x5006      	MOVF        R6, 0, 0
;__Lib_MathDouble.c,1457 :: 		
0x6AA4	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_MathDouble.c,1458 :: 		
0x6AA6	0x2806      	INCF        R6, 0, 0
;__Lib_MathDouble.c,1459 :: 		
0x6AA8	0x2602      	ADDWF       R2, 1, 0
;__Lib_MathDouble.c,1460 :: 		
0x6AAA	0x900D      	BCF         R13, 0, 0
;__Lib_MathDouble.c,1461 :: 		
DOK32:
;__Lib_MathDouble.c,1462 :: 		
0x6AAC	0x2E0B      	DECFSZ      R11, 1, 0
;__Lib_MathDouble.c,1463 :: 		
0x6AAE	0xF035EF32  	GOTO        DLOOP32
;__Lib_MathDouble.c,1467 :: 		
0x6AB2	0xF035EF7C  	GOTO        DIV32OK
;__Lib_MathDouble.c,1468 :: 		
0x6AB6	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,1469 :: 		
0x6AB8	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,1470 :: 		
0x6ABA	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,1471 :: 		
0x6ABC	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,1472 :: 		
0x6ABE	0x360E      	RLCF        R14, 1, 0
;__Lib_MathDouble.c,1474 :: 		
0x6AC0	0x5004      	MOVF        R4, 0, 0
;__Lib_MathDouble.c,1475 :: 		
0x6AC2	0x5E00      	SUBWF       R0, 1, 0
;__Lib_MathDouble.c,1476 :: 		
0x6AC4	0x5005      	MOVF        R5, 0, 0
;__Lib_MathDouble.c,1477 :: 		
0x6AC6	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1478 :: 		
0x6AC8	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_MathDouble.c,1479 :: 		
0x6ACA	0x5E01      	SUBWF       R1, 1, 0
;__Lib_MathDouble.c,1480 :: 		
0x6ACC	0x5006      	MOVF        R6, 0, 0
;__Lib_MathDouble.c,1481 :: 		
0x6ACE	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1482 :: 		
0x6AD0	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_MathDouble.c,1483 :: 		
0x6AD2	0x5E02      	SUBWF       R2, 1, 0
;__Lib_MathDouble.c,1484 :: 		
0x6AD4	0x3406      	RLCF        R6, 0, 0
;__Lib_MathDouble.c,1485 :: 		
0x6AD6	0x100E      	IORWF       R14, 0, 0
;__Lib_MathDouble.c,1486 :: 		
0x6AD8	0x0B01      	ANDLW       1
;__Lib_MathDouble.c,1487 :: 		
0x6ADA	0x260D      	ADDWF       R13, 1, 0
;__Lib_MathDouble.c,1488 :: 		
0x6ADC	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_MathDouble.c,1489 :: 		
0x6ADE	0x2A0C      	INCF        R12, 1, 0
;__Lib_MathDouble.c,1490 :: 		
0x6AE0	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1491 :: 		
0x6AE2	0x2A08      	INCF        R8, 1, 0
;__Lib_MathDouble.c,1492 :: 		
0x6AE4	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,1493 :: 		
0x6AE6	0xF035EF7C  	GOTO        DIV32OK
;__Lib_MathDouble.c,1494 :: 		
0x6AEA	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,1495 :: 		
0x6AEC	0x320C      	RRCF        R12, 1, 0
;__Lib_MathDouble.c,1496 :: 		
0x6AEE	0x320D      	RRCF        R13, 1, 0
;__Lib_MathDouble.c,1497 :: 		
0x6AF0	0x2A03      	INCF        R3, 1, 0
;__Lib_MathDouble.c,1498 :: 		
0x6AF2	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1499 :: 		
0x6AF4	0xF035EF90  	GOTO        JPDSETFOV32
;__Lib_MathDouble.c,1500 :: 		
DIV32OK:
;__Lib_MathDouble.c,1501 :: 		
0x6AF8	0xAE0A      	BTFSS       R10, 7, 0
;__Lib_MathDouble.c,1502 :: 		
0x6AFA	0x9E08      	BCF         R8, 7, 0
;__Lib_MathDouble.c,1503 :: 		
0x6AFC	0x5008      	MOVF        R8, 0, 0
;__Lib_MathDouble.c,1504 :: 		
0x6AFE	0x6E02      	MOVWF       R2, 0
;__Lib_MathDouble.c,1505 :: 		
0x6B00	0x500C      	MOVF        R12, 0, 0
;__Lib_MathDouble.c,1506 :: 		
0x6B02	0x6E01      	MOVWF       R1, 0
;__Lib_MathDouble.c,1507 :: 		
0x6B04	0x500D      	MOVF        R13, 0, 0
;__Lib_MathDouble.c,1508 :: 		
0x6B06	0x6E00      	MOVWF       R0, 0
;__Lib_MathDouble.c,1511 :: 		
0x6B08	0xF035EF98  	GOTO        DIV32EEE
;__Lib_MathDouble.c,1512 :: 		
JPDSETFDZ32:
;__Lib_MathDouble.c,1513 :: 		
0x6B0C	0x0E01      	MOVLW       1
;__Lib_MathDouble.c,1516 :: 		
0x6B0E	0xF00FECF2  	CALL        _SETFDZ32, 0
;__Lib_MathDouble.c,1518 :: 		
0x6B12	0xF035EF98  	GOTO        DIV32EEE
;__Lib_MathDouble.c,1519 :: 		
JPDRES032:
;__Lib_MathDouble.c,1520 :: 		
0x6B16	0x0E02      	MOVLW       2
;__Lib_MathDouble.c,1523 :: 		
0x6B18	0xF00BEC02  	CALL        _RES032, 0
;__Lib_MathDouble.c,1525 :: 		
0x6B1C	0xF035EF98  	GOTO        DIV32EEE
;__Lib_MathDouble.c,1526 :: 		
JPDSETFOV32:
;__Lib_MathDouble.c,1527 :: 		
0x6B20	0x0E04      	MOVLW       4
;__Lib_MathDouble.c,1530 :: 		
0x6B22	0xF00BEC33  	CALL        _SETFOV32, 0
;__Lib_MathDouble.c,1532 :: 		
0x6B26	0xF035EF98  	GOTO        DIV32EEE
;__Lib_MathDouble.c,1533 :: 		
JPDSETFUN32:
;__Lib_MathDouble.c,1534 :: 		
0x6B2A	0x0E08      	MOVLW       8
;__Lib_MathDouble.c,1537 :: 		
0x6B2C	0xF00BEC3F  	CALL        _SETFUN32, 0
;__Lib_MathDouble.c,1539 :: 		
DIV32EEE:
;__Lib_MathDouble.c,1547 :: 		
L_end_Div_32x32_FP:
0x6B30	0x0012      	RETURN      0
; end of _Div_32x32_FP
_string_cmpn:
;string.h,134 :: 		bool string_cmpn(char *text1, char *text2, char bytes){
;string.h,137 :: 		for(cont = 0; cont < bytes; cont++){
0x6B32	0x6A01      	CLRF        R1 
L_string_cmpn48:
0x6B34	0x0104      	MOVLB       4
0x6B36	0x51C3      	MOVF        FARG_string_cmpn_bytes, 0, 1
0x6B38	0x5C01      	SUBWF       R1, 0 
0x6B3A	0xE213      	BC          L_string_cmpn49
;string.h,138 :: 		if(text1[cont] != text2[cont])
0x6B3C	0x5001      	MOVF        R1, 0 
0x6B3E	0x25BF      	ADDWF       FARG_string_cmpn_text1, 0, 1
0x6B40	0x6EE9      	MOVWF       FSR0L 
0x6B42	0x0E00      	MOVLW       0
0x6B44	0x21C0      	ADDWFC      FARG_string_cmpn_text1+1, 0, 1
0x6B46	0x6EEA      	MOVWF       FSR0H 
0x6B48	0x5001      	MOVF        R1, 0 
0x6B4A	0x25C1      	ADDWF       FARG_string_cmpn_text2, 0, 1
0x6B4C	0x6ED9      	MOVWF       FSR2L 
0x6B4E	0x0E00      	MOVLW       0
0x6B50	0x21C2      	ADDWFC      FARG_string_cmpn_text2+1, 0, 1
0x6B52	0x6EDA      	MOVWF       FSR2H 
0x6B54	0x50EE      	MOVF        POSTINC0, 0 
0x6B56	0x18DE      	XORWF       POSTINC2, 0 
0x6B58	0xE002      	BZ          L_string_cmpn51
;string.h,139 :: 		return false;
0x6B5A	0x6A00      	CLRF        R0 
0x6B5C	0xD004      	BRA         L_end_string_cmpn
L_string_cmpn51:
;string.h,137 :: 		for(cont = 0; cont < bytes; cont++){
0x6B5E	0x2A01      	INCF        R1, 1 
;string.h,140 :: 		}
0x6B60	0xD7E9      	BRA         L_string_cmpn48
L_string_cmpn49:
;string.h,142 :: 		return true;
0x6B62	0x0E01      	MOVLW       1
0x6B64	0x6E00      	MOVWF       R0 
;string.h,143 :: 		}
L_end_string_cmpn:
0x6B66	0x0012      	RETURN      0
; end of _string_cmpn
_timer1_open:
;lib_timer1.h,10 :: 		void timer1_open(long time_us, bool powerOn, bool enable, bool priorityHigh){
;lib_timer1.h,14 :: 		time_us *= Clock_Mhz();
0x6B68	0xF000C4BF  	MOVFF       FARG_timer1_open_time_us, R0
0x6B6C	0xF001C4C0  	MOVFF       FARG_timer1_open_time_us+1, R1
0x6B70	0xF002C4C1  	MOVFF       FARG_timer1_open_time_us+2, R2
0x6B74	0xF003C4C2  	MOVFF       FARG_timer1_open_time_us+3, R3
0x6B78	0x0E28      	MOVLW       40
0x6B7A	0x6E04      	MOVWF       R4 
0x6B7C	0x0E00      	MOVLW       0
0x6B7E	0x6E05      	MOVWF       R5 
0x6B80	0x6E06      	MOVWF       R6 
0x6B82	0x6E07      	MOVWF       R7 
0x6B84	0xF003ECC8  	CALL        _Mul_32x32_U, 0
0x6B88	0xF4BFC000  	MOVFF       R0, FARG_timer1_open_time_us
0x6B8C	0xF4C0C001  	MOVFF       R1, FARG_timer1_open_time_us+1
0x6B90	0xF4C1C002  	MOVFF       R2, FARG_timer1_open_time_us+2
0x6B94	0xF4C2C003  	MOVFF       R3, FARG_timer1_open_time_us+3
;lib_timer1.h,15 :: 		time_us /= 4;
0x6B98	0xF4BFC000  	MOVFF       R0, FARG_timer1_open_time_us
0x6B9C	0xF4C0C001  	MOVFF       R1, FARG_timer1_open_time_us+1
0x6BA0	0xF4C1C002  	MOVFF       R2, FARG_timer1_open_time_us+2
0x6BA4	0xF4C2C003  	MOVFF       R3, FARG_timer1_open_time_us+3
0x6BA8	0x0104      	MOVLB       4
0x6BAA	0x33C2      	RRCF        FARG_timer1_open_time_us+3, 1, 1
0x6BAC	0x33C1      	RRCF        FARG_timer1_open_time_us+2, 1, 1
0x6BAE	0x33C0      	RRCF        FARG_timer1_open_time_us+1, 1, 1
0x6BB0	0x33BF      	RRCF        FARG_timer1_open_time_us, 1, 1
0x6BB2	0x9FC2      	BCF         FARG_timer1_open_time_us+3, 7, 1
0x6BB4	0xBDC2      	BTFSC       FARG_timer1_open_time_us+3, 6, 1
0x6BB6	0x8FC2      	BSF         FARG_timer1_open_time_us+3, 7, 1
0x6BB8	0x33C2      	RRCF        FARG_timer1_open_time_us+3, 1, 1
0x6BBA	0x33C1      	RRCF        FARG_timer1_open_time_us+2, 1, 1
0x6BBC	0x33C0      	RRCF        FARG_timer1_open_time_us+1, 1, 1
0x6BBE	0x33BF      	RRCF        FARG_timer1_open_time_us, 1, 1
0x6BC0	0x9FC2      	BCF         FARG_timer1_open_time_us+3, 7, 1
0x6BC2	0xBDC2      	BTFSC       FARG_timer1_open_time_us+3, 6, 1
0x6BC4	0x8FC2      	BSF         FARG_timer1_open_time_us+3, 7, 1
;lib_timer1.h,17 :: 		for(i = 0; i < 3; i++){
0x6BC6	0x6BC6      	CLRF        timer1_open_i_L0, 1
L_timer1_open101:
0x6BC8	0x0E03      	MOVLW       3
0x6BCA	0x5DC6      	SUBWF       timer1_open_i_L0, 0, 1
0x6BCC	0xE21A      	BC          L_timer1_open102
;lib_timer1.h,18 :: 		if(time_us < 65536)
0x6BCE	0x0E80      	MOVLW       128
0x6BD0	0x19C2      	XORWF       FARG_timer1_open_time_us+3, 0, 1
0x6BD2	0x6E00      	MOVWF       R0 
0x6BD4	0x0E80      	MOVLW       128
0x6BD6	0x0A00      	XORLW       0
0x6BD8	0x5C00      	SUBWF       R0, 0 
0x6BDA	0xE108      	BNZ         L__timer1_open1049
0x6BDC	0x0E01      	MOVLW       1
0x6BDE	0x5DC1      	SUBWF       FARG_timer1_open_time_us+2, 0, 1
0x6BE0	0xE105      	BNZ         L__timer1_open1049
0x6BE2	0x0E00      	MOVLW       0
0x6BE4	0x5DC0      	SUBWF       FARG_timer1_open_time_us+1, 0, 1
0x6BE6	0xE102      	BNZ         L__timer1_open1049
0x6BE8	0x0E00      	MOVLW       0
0x6BEA	0x5DBF      	SUBWF       FARG_timer1_open_time_us, 0, 1
L__timer1_open1049:
0x6BEC	0xE201      	BC          L_timer1_open104
;lib_timer1.h,19 :: 		break;
0x6BEE	0xD009      	BRA         L_timer1_open102
L_timer1_open104:
;lib_timer1.h,21 :: 		time_us /= 2;
0x6BF0	0x33C2      	RRCF        FARG_timer1_open_time_us+3, 1, 1
0x6BF2	0x33C1      	RRCF        FARG_timer1_open_time_us+2, 1, 1
0x6BF4	0x33C0      	RRCF        FARG_timer1_open_time_us+1, 1, 1
0x6BF6	0x33BF      	RRCF        FARG_timer1_open_time_us, 1, 1
0x6BF8	0x9FC2      	BCF         FARG_timer1_open_time_us+3, 7, 1
0x6BFA	0xBDC2      	BTFSC       FARG_timer1_open_time_us+3, 6, 1
0x6BFC	0x8FC2      	BSF         FARG_timer1_open_time_us+3, 7, 1
;lib_timer1.h,17 :: 		for(i = 0; i < 3; i++){
0x6BFE	0x2BC6      	INCF        timer1_open_i_L0, 1, 1
;lib_timer1.h,22 :: 		}
0x6C00	0xD7E3      	BRA         L_timer1_open101
L_timer1_open102:
;lib_timer1.h,23 :: 		time_us = 65536-time_us;  //Ultima operacion
0x6C02	0x0E00      	MOVLW       0
0x6C04	0x6E00      	MOVWF       R0 
0x6C06	0x0E00      	MOVLW       0
0x6C08	0x6E01      	MOVWF       R1 
0x6C0A	0x0E01      	MOVLW       1
0x6C0C	0x6E02      	MOVWF       R2 
0x6C0E	0x0E00      	MOVLW       0
0x6C10	0x6E03      	MOVWF       R3 
0x6C12	0x51BF      	MOVF        FARG_timer1_open_time_us, 0, 1
0x6C14	0x5E00      	SUBWF       R0, 1 
0x6C16	0x51C0      	MOVF        FARG_timer1_open_time_us+1, 0, 1
0x6C18	0x5A01      	SUBWFB      R1, 1 
0x6C1A	0x51C1      	MOVF        FARG_timer1_open_time_us+2, 0, 1
0x6C1C	0x5A02      	SUBWFB      R2, 1 
0x6C1E	0x51C2      	MOVF        FARG_timer1_open_time_us+3, 0, 1
0x6C20	0x5A03      	SUBWFB      R3, 1 
0x6C22	0xF4BFC000  	MOVFF       R0, FARG_timer1_open_time_us
0x6C26	0xF4C0C001  	MOVFF       R1, FARG_timer1_open_time_us+1
0x6C2A	0xF4C1C002  	MOVFF       R2, FARG_timer1_open_time_us+2
0x6C2E	0xF4C2C003  	MOVFF       R3, FARG_timer1_open_time_us+3
;lib_timer1.h,24 :: 		sampler1 = time_us;       //Guardamos el valor del timer
0x6C32	0xF49DC000  	MOVFF       R0, _sampler1
0x6C36	0xF49EC001  	MOVFF       R1, _sampler1+1
;lib_timer1.h,26 :: 		T1CON.TMR1ON = 0;       //APAGAR TIMER0
0x6C3A	0x90CD      	BCF         T1CON, 0 
;lib_timer1.h,27 :: 		T1CON.RD16 = 1;         //FORMATO DE 16 BITS
0x6C3C	0x8ECD      	BSF         T1CON, 7 
;lib_timer1.h,28 :: 		T1CON.T1CKPS0 = i.B0;   //PRESCALER
0x6C3E	0xB1C6      	BTFSC       timer1_open_i_L0, 0, 1
0x6C40	0xD002      	BRA         L__timer1_open1050
0x6C42	0x98CD      	BCF         T1CON, 4 
0x6C44	0xD001      	BRA         L__timer1_open1051
L__timer1_open1050:
0x6C46	0x88CD      	BSF         T1CON, 4 
L__timer1_open1051:
;lib_timer1.h,29 :: 		T1CON.T1CKPS1 = i.B1;   //PRESCALER
0x6C48	0xB3C6      	BTFSC       timer1_open_i_L0, 1, 1
0x6C4A	0xD002      	BRA         L__timer1_open1052
0x6C4C	0x9ACD      	BCF         T1CON, 5 
0x6C4E	0xD001      	BRA         L__timer1_open1053
L__timer1_open1052:
0x6C50	0x8ACD      	BSF         T1CON, 5 
L__timer1_open1053:
;lib_timer1.h,30 :: 		T1CON.T1OSCEN = 0;      //SEÑAL EXTERNA APAGADA
0x6C52	0x96CD      	BCF         T1CON, 3 
;lib_timer1.h,31 :: 		T1CON.T1SYNC = 0;       //BIT IGNORADO POR USAR CLOCK INTERNO
0x6C54	0x94CD      	BCF         T1CON, 2 
;lib_timer1.h,32 :: 		T1CON.TMR1CS = 0;       //CLOCK INTERNO FOSC/4
0x6C56	0x92CD      	BCF         T1CON, 1 
;lib_timer1.h,35 :: 		TMR1H = getByte(sampler1,1);
0x6C58	0xFFCFC49E  	MOVFF       _sampler1+1, TMR1H
;lib_timer1.h,36 :: 		TMR1L = getByte(sampler1,0);
0x6C5C	0xFFCEC49D  	MOVFF       _sampler1, TMR1L
;lib_timer1.h,39 :: 		PIR1.TMR1IF = 0;            //LIMPIAR BANDERA
0x6C60	0x909E      	BCF         PIR1, 0 
;lib_timer1.h,40 :: 		PIE1.TMR1IE = enable;       //ACTIVAR O DESACTIVAR TIMER
0x6C62	0xB1C4      	BTFSC       FARG_timer1_open_enable, 0, 1
0x6C64	0xD002      	BRA         L__timer1_open1054
0x6C66	0x909D      	BCF         PIE1, 0 
0x6C68	0xD001      	BRA         L__timer1_open1055
L__timer1_open1054:
0x6C6A	0x809D      	BSF         PIE1, 0 
L__timer1_open1055:
;lib_timer1.h,41 :: 		IPR1.TMR1IP = priorityHigh; //TIPO DE PRIORIDAD
0x6C6C	0xB1C5      	BTFSC       FARG_timer1_open_priorityHigh, 0, 1
0x6C6E	0xD002      	BRA         L__timer1_open1056
0x6C70	0x909F      	BCF         IPR1, 0 
0x6C72	0xD001      	BRA         L__timer1_open1057
L__timer1_open1056:
0x6C74	0x809F      	BSF         IPR1, 0 
L__timer1_open1057:
;lib_timer1.h,42 :: 		T1CON.TMR1ON = powerOn;     //ENCENDER TIMER
0x6C76	0xB1C3      	BTFSC       FARG_timer1_open_powerOn, 0, 1
0x6C78	0xD002      	BRA         L__timer1_open1058
0x6C7A	0x90CD      	BCF         T1CON, 0 
0x6C7C	0xD001      	BRA         L__timer1_open1059
L__timer1_open1058:
0x6C7E	0x80CD      	BSF         T1CON, 0 
L__timer1_open1059:
;lib_timer1.h,43 :: 		}
L_end_timer1_open:
0x6C80	0x0012      	RETURN      0
; end of _timer1_open
_lcd_cmd:
;lcd_4x20.h,121 :: 		void lcd_cmd(char comando){
;lcd_4x20.h,122 :: 		lcd_send_byte(0, comando);
0x6C82	0x0105      	MOVLB       5
0x6C84	0x6B47      	CLRF        FARG_lcd_send_byte_address, 1
0x6C86	0xF548C4BF  	MOVFF       FARG_lcd_cmd_comando, FARG_lcd_send_byte_enviar
0x6C8A	0xF002EC7C  	CALL        _lcd_send_byte, 0
;lcd_4x20.h,123 :: 		delay_ms(2);
0x6C8E	0x0E1A      	MOVLW       26
0x6C90	0x6E0C      	MOVWF       R12, 0
0x6C92	0x0EF8      	MOVLW       248
0x6C94	0x6E0D      	MOVWF       R13, 0
L_lcd_cmd652:
0x6C96	0x2E0D      	DECFSZ      R13, 1, 0
0x6C98	0xD7FE      	BRA         L_lcd_cmd652
0x6C9A	0x2E0C      	DECFSZ      R12, 1, 0
0x6C9C	0xD7FC      	BRA         L_lcd_cmd652
0x6C9E	0x0000      	NOP
;lcd_4x20.h,124 :: 		}
L_end_lcd_cmd:
0x6CA0	0x0012      	RETURN      0
; end of _lcd_cmd
_usart_open:
;lib_usart.h,38 :: 		void usart_open(unsigned long baudRate){
;lib_usart.h,40 :: 		TXSTA.CSRC = 0;   //NO IMPORTA, MODO ASYNCHRONO
0x6CA2	0x9EAC      	BCF         TXSTA, 7 
;lib_usart.h,41 :: 		TXSTA.TX9 = 0;    //MODO 8 BITS DE TRANSMISION
0x6CA4	0x9CAC      	BCF         TXSTA, 6 
;lib_usart.h,42 :: 		TXSTA.TXEN = 1;   //DISPONIBLE TX
0x6CA6	0x8AAC      	BSF         TXSTA, 5 
;lib_usart.h,43 :: 		TXSTA.SYNC = 0;   //MODO ASYNCHRONO
0x6CA8	0x98AC      	BCF         TXSTA, 4 
;lib_usart.h,44 :: 		TXSTA.SENDB = 0;  //ENVIAR ROTURA DE TRANSMISION COMPLETADA ***
0x6CAA	0x96AC      	BCF         TXSTA, 3 
;lib_usart.h,45 :: 		TXSTA.BRGH = 1;   //0 - LOW SPEED, 1 - HIHG SPEED
0x6CAC	0x84AC      	BSF         TXSTA, 2 
;lib_usart.h,47 :: 		TXSTA.TX9D = 0;   //BIT DE PARIDAD
0x6CAE	0x90AC      	BCF         TXSTA, 0 
;lib_usart.h,50 :: 		RCSTA.RX9 = 0;    //MODO 8 BITS RECEPCION
0x6CB0	0x9CAB      	BCF         RCSTA, 6 
;lib_usart.h,51 :: 		RCSTA.SREN = 0;   //NO IMPORTA, MODO ASYNCHRONO
0x6CB2	0x9AAB      	BCF         RCSTA, 5 
;lib_usart.h,52 :: 		RCSTA.CREN = 1;   //DISPONIBLE RX
0x6CB4	0x88AB      	BSF         RCSTA, 4 
;lib_usart.h,53 :: 		RCSTA.ADDEN = 0;  //DISABLE INTERRUPT POR RECIBIR EL 9BIT
0x6CB6	0x96AB      	BCF         RCSTA, 3 
;lib_usart.h,54 :: 		RCSTA.SPEN = 1;   //CONFIGURA PINES RX AND TX COMO SERIALES
0x6CB8	0x8EAB      	BSF         RCSTA, 7 
;lib_usart.h,61 :: 		BAUDCON.SCKP = 0; //NO IMPORTA, MODO ASYNCHRONOS
0x6CBA	0x98B8      	BCF         BAUDCON, 4 
;lib_usart.h,62 :: 		BAUDCON.BRG16 = 1;//MODO 16 BITS
0x6CBC	0x86B8      	BSF         BAUDCON, 3 
;lib_usart.h,63 :: 		BAUDCON.WUE = 0;  //PIN RX NO ES MONITORIADO EN FLANCO DE BAJADA***
0x6CBE	0x92B8      	BCF         BAUDCON, 1 
;lib_usart.h,64 :: 		BAUDCON.ABDEN = 0;//DISABLE MODO MEDICION DE BAUDIOS***
0x6CC0	0x90B8      	BCF         BAUDCON, 0 
;lib_usart.h,68 :: 		baudRate >>= 1;                           //Divido sobre dos
0x6CC2	0xF000C4BF  	MOVFF       FARG_usart_open_baudRate, R0
0x6CC6	0xF001C4C0  	MOVFF       FARG_usart_open_baudRate+1, R1
0x6CCA	0xF002C4C1  	MOVFF       FARG_usart_open_baudRate+2, R2
0x6CCE	0xF003C4C2  	MOVFF       FARG_usart_open_baudRate+3, R3
0x6CD2	0x3203      	RRCF        R3, 1 
0x6CD4	0x3202      	RRCF        R2, 1 
0x6CD6	0x3201      	RRCF        R1, 1 
0x6CD8	0x3200      	RRCF        R0, 1 
0x6CDA	0x9E03      	BCF         R3, 7 
0x6CDC	0xF4BFC000  	MOVFF       R0, FARG_usart_open_baudRate
0x6CE0	0xF4C0C001  	MOVFF       R1, FARG_usart_open_baudRate+1
0x6CE4	0xF4C1C002  	MOVFF       R2, FARG_usart_open_baudRate+2
0x6CE8	0xF4C2C003  	MOVFF       R3, FARG_usart_open_baudRate+3
;lib_usart.h,69 :: 		baudRate = (Clock_MHz()*250e3)/baudRate;  //Fosc/(Baudios/2)
0x6CEC	0xF020EC46  	CALL        _longword2double, 0
0x6CF0	0xF004C000  	MOVFF       R0, R4
0x6CF4	0xF005C001  	MOVFF       R1, R5
0x6CF8	0xF006C002  	MOVFF       R2, R6
0x6CFC	0xF007C003  	MOVFF       R3, R7
0x6D00	0x0E80      	MOVLW       128
0x6D02	0x6E00      	MOVWF       R0 
0x6D04	0x0E96      	MOVLW       150
0x6D06	0x6E01      	MOVWF       R1 
0x6D08	0x0E18      	MOVLW       24
0x6D0A	0x6E02      	MOVWF       R2 
0x6D0C	0x0E96      	MOVLW       150
0x6D0E	0x6E03      	MOVWF       R3 
0x6D10	0xDE52      	RCALL       _Div_32x32_FP
0x6D12	0xF019EC66  	CALL        _double2longword, 0
0x6D16	0xF4BFC000  	MOVFF       R0, FARG_usart_open_baudRate
0x6D1A	0xF4C0C001  	MOVFF       R1, FARG_usart_open_baudRate+1
0x6D1E	0xF4C1C002  	MOVFF       R2, FARG_usart_open_baudRate+2
0x6D22	0xF4C2C003  	MOVFF       R3, FARG_usart_open_baudRate+3
;lib_usart.h,70 :: 		baudRate += 1;                            //Sumar uno por compute round
0x6D26	0x0E01      	MOVLW       1
0x6D28	0x2400      	ADDWF       R0, 0 
0x6D2A	0x0104      	MOVLB       4
0x6D2C	0x6FBF      	MOVWF       FARG_usart_open_baudRate, 1
0x6D2E	0x0E00      	MOVLW       0
0x6D30	0x2001      	ADDWFC      R1, 0 
0x6D32	0x6FC0      	MOVWF       FARG_usart_open_baudRate+1, 1
0x6D34	0x0E00      	MOVLW       0
0x6D36	0x2002      	ADDWFC      R2, 0 
0x6D38	0x6FC1      	MOVWF       FARG_usart_open_baudRate+2, 1
0x6D3A	0x0E00      	MOVLW       0
0x6D3C	0x2003      	ADDWFC      R3, 0 
0x6D3E	0x6FC2      	MOVWF       FARG_usart_open_baudRate+3, 1
;lib_usart.h,71 :: 		baudRate >>= 1;                           //Divido sobre dos
0x6D40	0x33C2      	RRCF        FARG_usart_open_baudRate+3, 1, 1
0x6D42	0x33C1      	RRCF        FARG_usart_open_baudRate+2, 1, 1
0x6D44	0x33C0      	RRCF        FARG_usart_open_baudRate+1, 1, 1
0x6D46	0x33BF      	RRCF        FARG_usart_open_baudRate, 1, 1
0x6D48	0x9FC2      	BCF         FARG_usart_open_baudRate+3, 7, 1
;lib_usart.h,72 :: 		baudRate -= 1;                            //Resto -1, formula
0x6D4A	0x0E01      	MOVLW       1
0x6D4C	0x5FBF      	SUBWF       FARG_usart_open_baudRate, 1, 1
0x6D4E	0x0E00      	MOVLW       0
0x6D50	0x5BC0      	SUBWFB      FARG_usart_open_baudRate+1, 1, 1
0x6D52	0x5BC1      	SUBWFB      FARG_usart_open_baudRate+2, 1, 1
0x6D54	0x5BC2      	SUBWFB      FARG_usart_open_baudRate+3, 1, 1
;lib_usart.h,73 :: 		SPBRG = getByte(baudRate,0);
0x6D56	0xFFAFC4BF  	MOVFF       FARG_usart_open_baudRate, SPBRG
;lib_usart.h,74 :: 		SPBRGH = getByte(baudRate,1);
0x6D5A	0xFFB0C4C0  	MOVFF       FARG_usart_open_baudRate+1, SPBRGH
;lib_usart.h,77 :: 		TRISC.B6 = 0;   //TX
0x6D5E	0x9C94      	BCF         TRISC, 6 
;lib_usart.h,78 :: 		TRISC.B7 = 1;   //RX
0x6D60	0x8E94      	BSF         TRISC, 7 
;lib_usart.h,81 :: 		while(!TXSTA.TRMT);
L_usart_open116:
0x6D62	0xB2AC      	BTFSC       TXSTA, 1 
0x6D64	0xD001      	BRA         L_usart_open117
0x6D66	0xD7FD      	BRA         L_usart_open116
L_usart_open117:
;lib_usart.h,82 :: 		}
L_end_usart_open:
0x6D68	0x0012      	RETURN      0
; end of _usart_open
_timer3_open:
;lib_timer3.h,10 :: 		void timer3_open(long time_us, bool powerOn, bool enable, bool priorityHigh){
;lib_timer3.h,14 :: 		time_us *= Clock_Mhz();
0x6D6A	0xF000C4BF  	MOVFF       FARG_timer3_open_time_us, R0
0x6D6E	0xF001C4C0  	MOVFF       FARG_timer3_open_time_us+1, R1
0x6D72	0xF002C4C1  	MOVFF       FARG_timer3_open_time_us+2, R2
0x6D76	0xF003C4C2  	MOVFF       FARG_timer3_open_time_us+3, R3
0x6D7A	0x0E28      	MOVLW       40
0x6D7C	0x6E04      	MOVWF       R4 
0x6D7E	0x0E00      	MOVLW       0
0x6D80	0x6E05      	MOVWF       R5 
0x6D82	0x6E06      	MOVWF       R6 
0x6D84	0x6E07      	MOVWF       R7 
0x6D86	0xF003ECC8  	CALL        _Mul_32x32_U, 0
0x6D8A	0xF4BFC000  	MOVFF       R0, FARG_timer3_open_time_us
0x6D8E	0xF4C0C001  	MOVFF       R1, FARG_timer3_open_time_us+1
0x6D92	0xF4C1C002  	MOVFF       R2, FARG_timer3_open_time_us+2
0x6D96	0xF4C2C003  	MOVFF       R3, FARG_timer3_open_time_us+3
;lib_timer3.h,15 :: 		time_us /= 4;
0x6D9A	0xF4BFC000  	MOVFF       R0, FARG_timer3_open_time_us
0x6D9E	0xF4C0C001  	MOVFF       R1, FARG_timer3_open_time_us+1
0x6DA2	0xF4C1C002  	MOVFF       R2, FARG_timer3_open_time_us+2
0x6DA6	0xF4C2C003  	MOVFF       R3, FARG_timer3_open_time_us+3
0x6DAA	0x0104      	MOVLB       4
0x6DAC	0x33C2      	RRCF        FARG_timer3_open_time_us+3, 1, 1
0x6DAE	0x33C1      	RRCF        FARG_timer3_open_time_us+2, 1, 1
0x6DB0	0x33C0      	RRCF        FARG_timer3_open_time_us+1, 1, 1
0x6DB2	0x33BF      	RRCF        FARG_timer3_open_time_us, 1, 1
0x6DB4	0x9FC2      	BCF         FARG_timer3_open_time_us+3, 7, 1
0x6DB6	0xBDC2      	BTFSC       FARG_timer3_open_time_us+3, 6, 1
0x6DB8	0x8FC2      	BSF         FARG_timer3_open_time_us+3, 7, 1
0x6DBA	0x33C2      	RRCF        FARG_timer3_open_time_us+3, 1, 1
0x6DBC	0x33C1      	RRCF        FARG_timer3_open_time_us+2, 1, 1
0x6DBE	0x33C0      	RRCF        FARG_timer3_open_time_us+1, 1, 1
0x6DC0	0x33BF      	RRCF        FARG_timer3_open_time_us, 1, 1
0x6DC2	0x9FC2      	BCF         FARG_timer3_open_time_us+3, 7, 1
0x6DC4	0xBDC2      	BTFSC       FARG_timer3_open_time_us+3, 6, 1
0x6DC6	0x8FC2      	BSF         FARG_timer3_open_time_us+3, 7, 1
;lib_timer3.h,17 :: 		for(i = 0; i < 3; i++){
0x6DC8	0x6BC6      	CLRF        timer3_open_i_L0, 1
L_timer3_open112:
0x6DCA	0x0E03      	MOVLW       3
0x6DCC	0x5DC6      	SUBWF       timer3_open_i_L0, 0, 1
0x6DCE	0xE21A      	BC          L_timer3_open113
;lib_timer3.h,18 :: 		if(time_us < 65536)
0x6DD0	0x0E80      	MOVLW       128
0x6DD2	0x19C2      	XORWF       FARG_timer3_open_time_us+3, 0, 1
0x6DD4	0x6E00      	MOVWF       R0 
0x6DD6	0x0E80      	MOVLW       128
0x6DD8	0x0A00      	XORLW       0
0x6DDA	0x5C00      	SUBWF       R0, 0 
0x6DDC	0xE108      	BNZ         L__timer3_open1100
0x6DDE	0x0E01      	MOVLW       1
0x6DE0	0x5DC1      	SUBWF       FARG_timer3_open_time_us+2, 0, 1
0x6DE2	0xE105      	BNZ         L__timer3_open1100
0x6DE4	0x0E00      	MOVLW       0
0x6DE6	0x5DC0      	SUBWF       FARG_timer3_open_time_us+1, 0, 1
0x6DE8	0xE102      	BNZ         L__timer3_open1100
0x6DEA	0x0E00      	MOVLW       0
0x6DEC	0x5DBF      	SUBWF       FARG_timer3_open_time_us, 0, 1
L__timer3_open1100:
0x6DEE	0xE201      	BC          L_timer3_open115
;lib_timer3.h,19 :: 		break;
0x6DF0	0xD009      	BRA         L_timer3_open113
L_timer3_open115:
;lib_timer3.h,21 :: 		time_us /= 2;
0x6DF2	0x33C2      	RRCF        FARG_timer3_open_time_us+3, 1, 1
0x6DF4	0x33C1      	RRCF        FARG_timer3_open_time_us+2, 1, 1
0x6DF6	0x33C0      	RRCF        FARG_timer3_open_time_us+1, 1, 1
0x6DF8	0x33BF      	RRCF        FARG_timer3_open_time_us, 1, 1
0x6DFA	0x9FC2      	BCF         FARG_timer3_open_time_us+3, 7, 1
0x6DFC	0xBDC2      	BTFSC       FARG_timer3_open_time_us+3, 6, 1
0x6DFE	0x8FC2      	BSF         FARG_timer3_open_time_us+3, 7, 1
;lib_timer3.h,17 :: 		for(i = 0; i < 3; i++){
0x6E00	0x2BC6      	INCF        timer3_open_i_L0, 1, 1
;lib_timer3.h,22 :: 		}
0x6E02	0xD7E3      	BRA         L_timer3_open112
L_timer3_open113:
;lib_timer3.h,23 :: 		time_us = 65536-time_us;  //Ultima operacion
0x6E04	0x0E00      	MOVLW       0
0x6E06	0x6E00      	MOVWF       R0 
0x6E08	0x0E00      	MOVLW       0
0x6E0A	0x6E01      	MOVWF       R1 
0x6E0C	0x0E01      	MOVLW       1
0x6E0E	0x6E02      	MOVWF       R2 
0x6E10	0x0E00      	MOVLW       0
0x6E12	0x6E03      	MOVWF       R3 
0x6E14	0x51BF      	MOVF        FARG_timer3_open_time_us, 0, 1
0x6E16	0x5E00      	SUBWF       R0, 1 
0x6E18	0x51C0      	MOVF        FARG_timer3_open_time_us+1, 0, 1
0x6E1A	0x5A01      	SUBWFB      R1, 1 
0x6E1C	0x51C1      	MOVF        FARG_timer3_open_time_us+2, 0, 1
0x6E1E	0x5A02      	SUBWFB      R2, 1 
0x6E20	0x51C2      	MOVF        FARG_timer3_open_time_us+3, 0, 1
0x6E22	0x5A03      	SUBWFB      R3, 1 
0x6E24	0xF4BFC000  	MOVFF       R0, FARG_timer3_open_time_us
0x6E28	0xF4C0C001  	MOVFF       R1, FARG_timer3_open_time_us+1
0x6E2C	0xF4C1C002  	MOVFF       R2, FARG_timer3_open_time_us+2
0x6E30	0xF4C2C003  	MOVFF       R3, FARG_timer3_open_time_us+3
;lib_timer3.h,24 :: 		sampler3 = time_us;       //Guardamos el valor del timer
0x6E34	0xF2FBC000  	MOVFF       R0, _sampler3
0x6E38	0xF2FCC001  	MOVFF       R1, _sampler3+1
;lib_timer3.h,26 :: 		T3CON.TMR3ON = 0;       //APAGAR TIMER0
0x6E3C	0x90B1      	BCF         T3CON, 0 
;lib_timer3.h,27 :: 		T3CON.RD16 = 1;         //FORMATO DE 16 BITS
0x6E3E	0x8EB1      	BSF         T3CON, 7 
;lib_timer3.h,28 :: 		T3CON.T3CCP1 = 1;      //TIMER3 PARA CLOCK EN CCP1 Y ECCP
0x6E40	0x86B1      	BSF         T3CON, 3 
;lib_timer3.h,29 :: 		T3CON.T3ECCP1 = 1;      //TIMER3 PARA CLOCK EN CCP1 Y ECCP
0x6E42	0x8CB1      	BSF         T3CON, 6 
;lib_timer3.h,30 :: 		T3CON.T3CKPS0 = i.B0;   //PRESCALER
0x6E44	0xB1C6      	BTFSC       timer3_open_i_L0, 0, 1
0x6E46	0xD002      	BRA         L__timer3_open1101
0x6E48	0x98B1      	BCF         T3CON, 4 
0x6E4A	0xD001      	BRA         L__timer3_open1102
L__timer3_open1101:
0x6E4C	0x88B1      	BSF         T3CON, 4 
L__timer3_open1102:
;lib_timer3.h,31 :: 		T3CON.T3CKPS1 = i.B1;   //PRESCALER
0x6E4E	0xB3C6      	BTFSC       timer3_open_i_L0, 1, 1
0x6E50	0xD002      	BRA         L__timer3_open1103
0x6E52	0x9AB1      	BCF         T3CON, 5 
0x6E54	0xD001      	BRA         L__timer3_open1104
L__timer3_open1103:
0x6E56	0x8AB1      	BSF         T3CON, 5 
L__timer3_open1104:
;lib_timer3.h,32 :: 		T3CON.T3SYNC = 0;       //BIT IGNORADO POR USAR CLOCK INTERNO
0x6E58	0x94B1      	BCF         T3CON, 2 
;lib_timer3.h,33 :: 		T3CON.TMR3CS = 0;       //CLOCK INTERNO FOSC/4
0x6E5A	0x92B1      	BCF         T3CON, 1 
;lib_timer3.h,36 :: 		TMR3H = getByte(sampler3,1);
0x6E5C	0xFFB3C2FC  	MOVFF       _sampler3+1, TMR3H
;lib_timer3.h,37 :: 		TMR3L = getByte(sampler3,0);
0x6E60	0xFFB2C2FB  	MOVFF       _sampler3, TMR3L
;lib_timer3.h,40 :: 		PIR2.TMR3IF = 0;            //LIMPIAR BANDERA
0x6E64	0x92A1      	BCF         PIR2, 1 
;lib_timer3.h,41 :: 		PIE2.TMR3IE = enable;       //ACTIVAR O DESACTIVAR TIMER
0x6E66	0xB1C4      	BTFSC       FARG_timer3_open_enable, 0, 1
0x6E68	0xD002      	BRA         L__timer3_open1105
0x6E6A	0x92A0      	BCF         PIE2, 1 
0x6E6C	0xD001      	BRA         L__timer3_open1106
L__timer3_open1105:
0x6E6E	0x82A0      	BSF         PIE2, 1 
L__timer3_open1106:
;lib_timer3.h,42 :: 		IPR2.TMR3IP = priorityHigh; //TIPO DE PRIORIDAD
0x6E70	0xB1C5      	BTFSC       FARG_timer3_open_priorityHigh, 0, 1
0x6E72	0xD002      	BRA         L__timer3_open1107
0x6E74	0x92A2      	BCF         IPR2, 1 
0x6E76	0xD001      	BRA         L__timer3_open1108
L__timer3_open1107:
0x6E78	0x82A2      	BSF         IPR2, 1 
L__timer3_open1108:
;lib_timer3.h,43 :: 		T3CON.TMR3ON = powerOn;     //ENCENDER TIMER
0x6E7A	0xB1C3      	BTFSC       FARG_timer3_open_powerOn, 0, 1
0x6E7C	0xD002      	BRA         L__timer3_open1109
0x6E7E	0x90B1      	BCF         T3CON, 0 
0x6E80	0xD001      	BRA         L__timer3_open1110
L__timer3_open1109:
0x6E82	0x80B1      	BSF         T3CON, 0 
L__timer3_open1110:
;lib_timer3.h,44 :: 		}
L_end_timer3_open:
0x6E84	0x0012      	RETURN      0
; end of _timer3_open
_DS1307_open:
;ds1307.h,50 :: 		void DS1307_open(){
;ds1307.h,51 :: 		Soft_I2C_Init();         //Initialize Soft I2C communication
0x6E86	0xF01BECED  	CALL        _Soft_I2C_Init, 0
;ds1307.h,52 :: 		}
L_end_DS1307_open:
0x6E8A	0x0012      	RETURN      0
; end of _DS1307_open
_EEPROM_Read:
;__Lib_EEPROM_1024.c,8 :: 		
;__Lib_EEPROM_1024.c,10 :: 		
0x6E8C	0x9CA6      	BCF         EECON1, 6 
;__Lib_EEPROM_1024.c,11 :: 		
0x6E8E	0xFFAAC4C0  	MOVFF       FARG_EEPROM_Read_address+1, EEADRH
;__Lib_EEPROM_1024.c,12 :: 		
0x6E92	0xFFA9C4BF  	MOVFF       FARG_EEPROM_Read_address, EEADR
;__Lib_EEPROM_1024.c,13 :: 		
0x6E96	0x9EA6      	BCF         EECON1, 7 
;__Lib_EEPROM_1024.c,14 :: 		
0x6E98	0x80A6      	BSF         EECON1, 0 
;__Lib_EEPROM_1024.c,16 :: 		
0x6E9A	0xF000CFA8  	MOVFF       EEDATA, R0
;__Lib_EEPROM_1024.c,18 :: 		
L_end_EEPROM_Read:
0x6E9E	0x0012      	RETURN      0
; end of _EEPROM_Read
_lcd_init:
;lcd_4x20.h,56 :: 		void lcd_init(){
;lcd_4x20.h,60 :: 		LCD_D4_Direction = 0;
0x6EA0	0x9892      	BCF         LCD_D4_Direction, BitPos(LCD_D4_Direction+0) 
;lcd_4x20.h,61 :: 		LCD_D5_Direction = 0;
0x6EA2	0x9492      	BCF         LCD_D5_Direction, BitPos(LCD_D5_Direction+0) 
;lcd_4x20.h,62 :: 		LCD_D6_Direction = 0;
0x6EA4	0x9292      	BCF         LCD_D6_Direction, BitPos(LCD_D6_Direction+0) 
;lcd_4x20.h,63 :: 		LCD_D7_Direction = 0;
0x6EA6	0x9092      	BCF         LCD_D7_Direction, BitPos(LCD_D7_Direction+0) 
;lcd_4x20.h,64 :: 		LCD_RS_Direction = 0;
0x6EA8	0x9496      	BCF         LCD_RS_Direction, BitPos(LCD_RS_Direction+0) 
;lcd_4x20.h,65 :: 		LCD_EN_Direction = 0;
0x6EAA	0x9692      	BCF         LCD_EN_Direction, BitPos(LCD_EN_Direction+0) 
;lcd_4x20.h,68 :: 		LCD_RS = 0;
0x6EAC	0x9484      	BCF         LCD_RS, BitPos(LCD_RS+0) 
;lcd_4x20.h,69 :: 		LCD_EN = 0;
0x6EAE	0x9680      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;lcd_4x20.h,71 :: 		delay_ms(15);
0x6EB0	0x0EC3      	MOVLW       195
0x6EB2	0x6E0C      	MOVWF       R12, 0
0x6EB4	0x0ECD      	MOVLW       205
0x6EB6	0x6E0D      	MOVWF       R13, 0
L_lcd_init633:
0x6EB8	0x2E0D      	DECFSZ      R13, 1, 0
0x6EBA	0xD7FE      	BRA         L_lcd_init633
0x6EBC	0x2E0C      	DECFSZ      R12, 1, 0
0x6EBE	0xD7FC      	BRA         L_lcd_init633
;lcd_4x20.h,73 :: 		for(i = 0; i < 3; i++){
0x6EC0	0x0104      	MOVLB       4
0x6EC2	0x6BBF      	CLRF        lcd_init_i_L0, 1
L_lcd_init634:
0x6EC4	0x0E03      	MOVLW       3
0x6EC6	0x5DBF      	SUBWF       lcd_init_i_L0, 0, 1
0x6EC8	0xE211      	BC          L_lcd_init635
;lcd_4x20.h,74 :: 		lcd_send_nibble(0x03);
0x6ECA	0x0E03      	MOVLW       3
0x6ECC	0x0105      	MOVLB       5
0x6ECE	0x6F49      	MOVWF       FARG_lcd_send_nibble_nibble, 1
0x6ED0	0xF002EC31  	CALL        _lcd_send_nibble, 0
;lcd_4x20.h,75 :: 		delay_ms(5);
0x6ED4	0x0E41      	MOVLW       65
0x6ED6	0x6E0C      	MOVWF       R12, 0
0x6ED8	0x0EEE      	MOVLW       238
0x6EDA	0x6E0D      	MOVWF       R13, 0
L_lcd_init637:
0x6EDC	0x2E0D      	DECFSZ      R13, 1, 0
0x6EDE	0xD7FE      	BRA         L_lcd_init637
0x6EE0	0x2E0C      	DECFSZ      R12, 1, 0
0x6EE2	0xD7FC      	BRA         L_lcd_init637
0x6EE4	0x0000      	NOP
;lcd_4x20.h,73 :: 		for(i = 0; i < 3; i++){
0x6EE6	0x0104      	MOVLB       4
0x6EE8	0x2BBF      	INCF        lcd_init_i_L0, 1, 1
;lcd_4x20.h,76 :: 		}
0x6EEA	0xD7EC      	BRA         L_lcd_init634
L_lcd_init635:
;lcd_4x20.h,78 :: 		lcd_send_nibble(0x02);
0x6EEC	0x0E02      	MOVLW       2
0x6EEE	0x0105      	MOVLB       5
0x6EF0	0x6F49      	MOVWF       FARG_lcd_send_nibble_nibble, 1
0x6EF2	0xF002EC31  	CALL        _lcd_send_nibble, 0
;lcd_4x20.h,80 :: 		lcd_send_byte(0, 0x28);  //Set mode: 4-bit, 2+ lines, 5x8 dots
0x6EF6	0x6B47      	CLRF        FARG_lcd_send_byte_address, 1
0x6EF8	0x0E28      	MOVLW       40
0x6EFA	0x6F48      	MOVWF       FARG_lcd_send_byte_enviar, 1
0x6EFC	0xF002EC7C  	CALL        _lcd_send_byte, 0
;lcd_4x20.h,81 :: 		delay_ms(5);
0x6F00	0x0E41      	MOVLW       65
0x6F02	0x6E0C      	MOVWF       R12, 0
0x6F04	0x0EEE      	MOVLW       238
0x6F06	0x6E0D      	MOVWF       R13, 0
L_lcd_init638:
0x6F08	0x2E0D      	DECFSZ      R13, 1, 0
0x6F0A	0xD7FE      	BRA         L_lcd_init638
0x6F0C	0x2E0C      	DECFSZ      R12, 1, 0
0x6F0E	0xD7FC      	BRA         L_lcd_init638
0x6F10	0x0000      	NOP
;lcd_4x20.h,82 :: 		lcd_send_byte(0, 0x0C);  //Display on
0x6F12	0x6B47      	CLRF        FARG_lcd_send_byte_address, 1
0x6F14	0x0E0C      	MOVLW       12
0x6F16	0x6F48      	MOVWF       FARG_lcd_send_byte_enviar, 1
0x6F18	0xF002EC7C  	CALL        _lcd_send_byte, 0
;lcd_4x20.h,83 :: 		delay_ms(5);
0x6F1C	0x0E41      	MOVLW       65
0x6F1E	0x6E0C      	MOVWF       R12, 0
0x6F20	0x0EEE      	MOVLW       238
0x6F22	0x6E0D      	MOVWF       R13, 0
L_lcd_init639:
0x6F24	0x2E0D      	DECFSZ      R13, 1, 0
0x6F26	0xD7FE      	BRA         L_lcd_init639
0x6F28	0x2E0C      	DECFSZ      R12, 1, 0
0x6F2A	0xD7FC      	BRA         L_lcd_init639
0x6F2C	0x0000      	NOP
;lcd_4x20.h,84 :: 		lcd_send_byte(0, 0x01);  //Clear display
0x6F2E	0x6B47      	CLRF        FARG_lcd_send_byte_address, 1
0x6F30	0x0E01      	MOVLW       1
0x6F32	0x6F48      	MOVWF       FARG_lcd_send_byte_enviar, 1
0x6F34	0xF002EC7C  	CALL        _lcd_send_byte, 0
;lcd_4x20.h,85 :: 		delay_ms(5);
0x6F38	0x0E41      	MOVLW       65
0x6F3A	0x6E0C      	MOVWF       R12, 0
0x6F3C	0x0EEE      	MOVLW       238
0x6F3E	0x6E0D      	MOVWF       R13, 0
L_lcd_init640:
0x6F40	0x2E0D      	DECFSZ      R13, 1, 0
0x6F42	0xD7FE      	BRA         L_lcd_init640
0x6F44	0x2E0C      	DECFSZ      R12, 1, 0
0x6F46	0xD7FC      	BRA         L_lcd_init640
0x6F48	0x0000      	NOP
;lcd_4x20.h,86 :: 		lcd_send_byte(0, 0x06);  //Increment cursor
0x6F4A	0x6B47      	CLRF        FARG_lcd_send_byte_address, 1
0x6F4C	0x0E06      	MOVLW       6
0x6F4E	0x6F48      	MOVWF       FARG_lcd_send_byte_enviar, 1
0x6F50	0xF002EC7C  	CALL        _lcd_send_byte, 0
;lcd_4x20.h,87 :: 		delay_ms(5);
0x6F54	0x0E41      	MOVLW       65
0x6F56	0x6E0C      	MOVWF       R12, 0
0x6F58	0x0EEE      	MOVLW       238
0x6F5A	0x6E0D      	MOVWF       R13, 0
L_lcd_init641:
0x6F5C	0x2E0D      	DECFSZ      R13, 1, 0
0x6F5E	0xD7FE      	BRA         L_lcd_init641
0x6F60	0x2E0C      	DECFSZ      R12, 1, 0
0x6F62	0xD7FC      	BRA         L_lcd_init641
0x6F64	0x0000      	NOP
;lcd_4x20.h,88 :: 		}
L_end_lcd_init:
0x6F66	0x0012      	RETURN      0
; end of _lcd_init
_expendedora_ticket:
;Expendedora.c,1157 :: 		bool expendedora_ticket(){
;Expendedora.c,1160 :: 		char cont = 0;
0x6F68	0x0105      	MOVLB       5
0x6F6A	0x6B00      	CLRF        expendedora_ticket_cont_L0, 1
;Expendedora.c,1163 :: 		cont = 0;
0x6F6C	0x6B00      	CLRF        expendedora_ticket_cont_L0, 1
;Expendedora.c,1177 :: 		while(ticket[puntero] != 0){
L_expendedora_ticket776:
0x6F6E	0x0E04      	MOVLW       _ticket
0x6F70	0x0102      	MOVLB       2
0x6F72	0x2509      	ADDWF       expendedora_ticket_puntero_L0, 0, 1
0x6F74	0x6EF6      	MOVWF       4086 
0x6F76	0x0E9C      	MOVLW       hi_addr(_ticket)
0x6F78	0x210A      	ADDWFC      expendedora_ticket_puntero_L0+1, 0, 1
0x6F7A	0x6EF7      	MOVWF       TBLPTRH 
0x6F7C	0x0E00      	MOVLW       higher_addr(_ticket)
0x6F7E	0x6EF8      	MOVWF       TBLPTRU 
0x6F80	0x0E00      	MOVLW       0
0x6F82	0x22F8      	ADDWFC      TBLPTRU, 1 
0x6F84	0x0009      	TBLRD*+
0x6F86	0xF001CFF5  	MOVFF       TABLAT, R1
0x6F8A	0x5001      	MOVF        R1, 0 
0x6F8C	0x0A00      	XORLW       0
0x6F8E	0xE02F      	BZ          L_expendedora_ticket777
;Expendedora.c,1178 :: 		buffer[cont++] = ticket[puntero++];
0x6F90	0x0EBF      	MOVLW       expendedora_ticket_buffer_L0
0x6F92	0x6EE1      	MOVWF       FSR1L 
0x6F94	0x0E04      	MOVLW       hi_addr(expendedora_ticket_buffer_L0)
0x6F96	0x6EE2      	MOVWF       FSR1H 
0x6F98	0x0105      	MOVLB       5
0x6F9A	0x5100      	MOVF        expendedora_ticket_cont_L0, 0, 1
0x6F9C	0x26E1      	ADDWF       FSR1L, 1 
0x6F9E	0xB0D8      	BTFSC       STATUS, 0 
0x6FA0	0x2AE2      	INCF        FSR1H, 1 
0x6FA2	0x0E04      	MOVLW       _ticket
0x6FA4	0x0102      	MOVLB       2
0x6FA6	0x2509      	ADDWF       expendedora_ticket_puntero_L0, 0, 1
0x6FA8	0x6EF6      	MOVWF       4086 
0x6FAA	0x0E9C      	MOVLW       hi_addr(_ticket)
0x6FAC	0x210A      	ADDWFC      expendedora_ticket_puntero_L0+1, 0, 1
0x6FAE	0x6EF7      	MOVWF       TBLPTRH 
0x6FB0	0x0E00      	MOVLW       higher_addr(_ticket)
0x6FB2	0x6EF8      	MOVWF       TBLPTRU 
0x6FB4	0x0E00      	MOVLW       0
0x6FB6	0x22F8      	ADDWFC      TBLPTRU, 1 
0x6FB8	0x0009      	TBLRD*+
0x6FBA	0xF000CFF5  	MOVFF       TABLAT, R0
0x6FBE	0xFFE6C000  	MOVFF       R0, POSTINC1
0x6FC2	0x0105      	MOVLB       5
0x6FC4	0x2B00      	INCF        expendedora_ticket_cont_L0, 1, 1
0x6FC6	0x0102      	MOVLB       2
0x6FC8	0x4B09      	INFSNZ      expendedora_ticket_puntero_L0, 1, 1
0x6FCA	0x2B0A      	INCF        expendedora_ticket_puntero_L0+1, 1, 1
;Expendedora.c,1180 :: 		if(buffer[cont-1] == '\n')
0x6FCC	0x0105      	MOVLB       5
0x6FCE	0x0500      	DECF        expendedora_ticket_cont_L0, 0, 1
0x6FD0	0x6E00      	MOVWF       R0 
0x6FD2	0x6A01      	CLRF        R1 
0x6FD4	0x0E00      	MOVLW       0
0x6FD6	0x5A01      	SUBWFB      R1, 1 
0x6FD8	0x0EBF      	MOVLW       expendedora_ticket_buffer_L0
0x6FDA	0x2400      	ADDWF       R0, 0 
0x6FDC	0x6EE9      	MOVWF       FSR0L 
0x6FDE	0x0E04      	MOVLW       hi_addr(expendedora_ticket_buffer_L0)
0x6FE0	0x2001      	ADDWFC      R1, 0 
0x6FE2	0x6EEA      	MOVWF       FSR0H 
0x6FE4	0x50EE      	MOVF        POSTINC0, 0 
0x6FE6	0x0A0A      	XORLW       10
0x6FE8	0xE101      	BNZ         L_expendedora_ticket778
;Expendedora.c,1181 :: 		break;
0x6FEA	0xD001      	BRA         L_expendedora_ticket777
L_expendedora_ticket778:
;Expendedora.c,1182 :: 		}
0x6FEC	0xD7C0      	BRA         L_expendedora_ticket776
L_expendedora_ticket777:
0x6FEE	0x0105      	MOVLB       5
;Expendedora.c,1184 :: 		buffer[cont] = 0;
0x6FF0	0x0EBF      	MOVLW       expendedora_ticket_buffer_L0
0x6FF2	0x6EE1      	MOVWF       FSR1L 
0x6FF4	0x0E04      	MOVLW       hi_addr(expendedora_ticket_buffer_L0)
0x6FF6	0x6EE2      	MOVWF       FSR1H 
0x6FF8	0x5100      	MOVF        expendedora_ticket_cont_L0, 0, 1
0x6FFA	0x26E1      	ADDWF       FSR1L, 1 
0x6FFC	0xB0D8      	BTFSC       STATUS, 0 
0x6FFE	0x2AE2      	INCF        FSR1H, 1 
0x7000	0x6AE6      	CLRF        POSTINC1 
;Expendedora.c,1186 :: 		impresoraTerm_writeDinamicText(buffer, ticketAddr);
0x7002	0x0EBF      	MOVLW       expendedora_ticket_buffer_L0
0x7004	0x6F01      	MOVWF       FARG_impresoraTerm_writeDinamicText_texto, 1
0x7006	0x0E04      	MOVLW       hi_addr(expendedora_ticket_buffer_L0)
0x7008	0x6F02      	MOVWF       FARG_impresoraTerm_writeDinamicText_texto+1, 1
0x700A	0x0E67      	MOVLW       _ticketAddr
0x700C	0x6F03      	MOVWF       FARG_impresoraTerm_writeDinamicText_address, 1
0x700E	0x0EA3      	MOVLW       hi_addr(_ticketAddr)
0x7010	0x6F04      	MOVWF       FARG_impresoraTerm_writeDinamicText_address+1, 1
0x7012	0x0E00      	MOVLW       higher_addr(_ticketAddr)
0x7014	0x6F05      	MOVWF       FARG_impresoraTerm_writeDinamicText_address+2, 1
0x7016	0xF01DECB8  	CALL        _impresoraTerm_writeDinamicText, 0
;Expendedora.c,1189 :: 		if(ticket[puntero] == 0/*puntero == myTable.rowAct-1 || puntero == myTable.rowAct*/){
0x701A	0x0E04      	MOVLW       _ticket
0x701C	0x0102      	MOVLB       2
0x701E	0x2509      	ADDWF       expendedora_ticket_puntero_L0, 0, 1
0x7020	0x6EF6      	MOVWF       4086 
0x7022	0x0E9C      	MOVLW       hi_addr(_ticket)
0x7024	0x210A      	ADDWFC      expendedora_ticket_puntero_L0+1, 0, 1
0x7026	0x6EF7      	MOVWF       TBLPTRH 
0x7028	0x0E00      	MOVLW       higher_addr(_ticket)
0x702A	0x6EF8      	MOVWF       TBLPTRU 
0x702C	0x0E00      	MOVLW       0
0x702E	0x22F8      	ADDWFC      TBLPTRU, 1 
0x7030	0x0009      	TBLRD*+
0x7032	0xF001CFF5  	MOVFF       TABLAT, R1
0x7036	0x5001      	MOVF        R1, 0 
0x7038	0x0A00      	XORLW       0
0x703A	0xE105      	BNZ         L_expendedora_ticket779
;Expendedora.c,1190 :: 		puntero = 0;
0x703C	0x6B09      	CLRF        expendedora_ticket_puntero_L0, 1
0x703E	0x6B0A      	CLRF        expendedora_ticket_puntero_L0+1, 1
;Expendedora.c,1191 :: 		return true;
0x7040	0x0E01      	MOVLW       1
0x7042	0x6E00      	MOVWF       R0 
0x7044	0xD001      	BRA         L_end_expendedora_ticket
;Expendedora.c,1192 :: 		}
L_expendedora_ticket779:
;Expendedora.c,1194 :: 		return false;
0x7046	0x6A00      	CLRF        R0 
;Expendedora.c,1195 :: 		}
L_end_expendedora_ticket:
0x7048	0x0012      	RETURN      0
; end of _expendedora_ticket
_int_external_int0:
;wiegand26.h,170 :: 		void int_external_int0(){
;wiegand26.h,171 :: 		if(INTCON.INT0IF && INTCON.INT0IE){
0x704A	0xA2F2      	BTFSS       INTCON, 1 
0x704C	0xD016      	BRA         L_int_external_int0573
0x704E	0xA8F2      	BTFSS       INTCON, 4 
0x7050	0xD014      	BRA         L_int_external_int0573
L__int_external_int0991:
;wiegand26.h,172 :: 		WIEGAN26_CONT++;
0x7052	0x0104      	MOVLB       4
0x7054	0x2B9C      	INCF        Expendedora_WIEGAN26_CONT, 1, 1
;wiegand26.h,173 :: 		WIEGAN26_DATA <<= 1;
0x7056	0x0102      	MOVLB       2
0x7058	0x37D3      	RLCF        Expendedora_WIEGAN26_DATA, 1, 1
0x705A	0x91D3      	BCF         Expendedora_WIEGAN26_DATA, 0, 1
0x705C	0x37D4      	RLCF        Expendedora_WIEGAN26_DATA+1, 1, 1
0x705E	0x37D5      	RLCF        Expendedora_WIEGAN26_DATA+2, 1, 1
0x7060	0x37D6      	RLCF        Expendedora_WIEGAN26_DATA+3, 1, 1
;wiegand26.h,174 :: 		WIEGAN26_DATA |= 0;
;wiegand26.h,176 :: 		WIEGAND_TEMP = 0;
0x7062	0x6BFD      	CLRF        _WIEGAND_TEMP, 1
0x7064	0x6BFE      	CLRF        _WIEGAND_TEMP+1, 1
;wiegand26.h,177 :: 		if(WIEGAN26_CONT > WIEGAND_BITS_NIP)
0x7066	0x0104      	MOVLB       4
0x7068	0x519C      	MOVF        Expendedora_WIEGAN26_CONT, 0, 1
0x706A	0x0820      	SUBLW       32
0x706C	0xE205      	BC          L_int_external_int0574
;wiegand26.h,178 :: 		WIEGAND_TEMP = WIEGAND_TIME_FRAME_DELTA;
0x706E	0x0E94      	MOVLW       148
0x7070	0x0102      	MOVLB       2
0x7072	0x6FFD      	MOVWF       _WIEGAND_TEMP, 1
0x7074	0x0E11      	MOVLW       17
0x7076	0x6FFE      	MOVWF       _WIEGAND_TEMP+1, 1
L_int_external_int0574:
;wiegand26.h,179 :: 		INTCON.INT0IF = 0;
0x7078	0x92F2      	BCF         INTCON, 1 
;wiegand26.h,180 :: 		}
L_int_external_int0573:
;wiegand26.h,181 :: 		}
L_end_int_external_int0:
0x707A	0x0012      	RETURN      0
; end of _int_external_int0
_int_external_int1:
;wiegand26.h,183 :: 		void int_external_int1(){
;wiegand26.h,184 :: 		if(INTCON3.INT1IF && INTCON3.INT1IE){
0x707C	0xA0F0      	BTFSS       INTCON3, 0 
0x707E	0xD017      	BRA         L_int_external_int1577
0x7080	0xA6F0      	BTFSS       INTCON3, 3 
0x7082	0xD015      	BRA         L_int_external_int1577
L__int_external_int1992:
;wiegand26.h,185 :: 		WIEGAN26_CONT++;
0x7084	0x0104      	MOVLB       4
0x7086	0x2B9C      	INCF        Expendedora_WIEGAN26_CONT, 1, 1
;wiegand26.h,186 :: 		WIEGAN26_DATA <<= 1;
0x7088	0x0102      	MOVLB       2
0x708A	0x37D3      	RLCF        Expendedora_WIEGAN26_DATA, 1, 1
0x708C	0x91D3      	BCF         Expendedora_WIEGAN26_DATA, 0, 1
0x708E	0x37D4      	RLCF        Expendedora_WIEGAN26_DATA+1, 1, 1
0x7090	0x37D5      	RLCF        Expendedora_WIEGAN26_DATA+2, 1, 1
0x7092	0x37D6      	RLCF        Expendedora_WIEGAN26_DATA+3, 1, 1
;wiegand26.h,187 :: 		WIEGAN26_DATA |= 1;
0x7094	0x81D3      	BSF         Expendedora_WIEGAN26_DATA, 0, 1
;wiegand26.h,189 :: 		WIEGAND_TEMP = 0;
0x7096	0x6BFD      	CLRF        _WIEGAND_TEMP, 1
0x7098	0x6BFE      	CLRF        _WIEGAND_TEMP+1, 1
;wiegand26.h,190 :: 		if(WIEGAN26_CONT > WIEGAND_BITS_NIP)
0x709A	0x0104      	MOVLB       4
0x709C	0x519C      	MOVF        Expendedora_WIEGAN26_CONT, 0, 1
0x709E	0x0820      	SUBLW       32
0x70A0	0xE205      	BC          L_int_external_int1578
;wiegand26.h,191 :: 		WIEGAND_TEMP = WIEGAND_TIME_FRAME_DELTA;
0x70A2	0x0E94      	MOVLW       148
0x70A4	0x0102      	MOVLB       2
0x70A6	0x6FFD      	MOVWF       _WIEGAND_TEMP, 1
0x70A8	0x0E11      	MOVLW       17
0x70AA	0x6FFE      	MOVWF       _WIEGAND_TEMP+1, 1
L_int_external_int1578:
;wiegand26.h,192 :: 		INTCON3.INT1IF = 0;
0x70AC	0x90F0      	BCF         INTCON3, 0 
;wiegand26.h,193 :: 		}
L_int_external_int1577:
;wiegand26.h,194 :: 		}
L_end_int_external_int1:
0x70AE	0x0012      	RETURN      0
; end of _int_external_int1
_string_pop:
;string.h,18 :: 		char string_pop(char *texto){
;string.h,19 :: 		char cont = 0, result;
0x70B0	0x0104      	MOVLB       4
0x70B2	0x6BC1      	CLRF        string_pop_cont_L0, 1
;string.h,22 :: 		while(texto[cont])
L_string_pop10:
0x70B4	0x51C1      	MOVF        string_pop_cont_L0, 0, 1
0x70B6	0x25BF      	ADDWF       FARG_string_pop_texto, 0, 1
0x70B8	0x6EE9      	MOVWF       FSR0L 
0x70BA	0x0E00      	MOVLW       0
0x70BC	0x21C0      	ADDWFC      FARG_string_pop_texto+1, 0, 1
0x70BE	0x6EEA      	MOVWF       FSR0H 
0x70C0	0x52EE      	MOVF        POSTINC0, 1 
0x70C2	0xE002      	BZ          L_string_pop11
;string.h,23 :: 		cont++;
0x70C4	0x2BC1      	INCF        string_pop_cont_L0, 1, 1
0x70C6	0xD7F6      	BRA         L_string_pop10
L_string_pop11:
;string.h,25 :: 		if(cont == 0)
0x70C8	0x51C1      	MOVF        string_pop_cont_L0, 0, 1
0x70CA	0x0A00      	XORLW       0
0x70CC	0xE103      	BNZ         L_string_pop12
;string.h,26 :: 		return cont;
0x70CE	0xF000C4C1  	MOVFF       string_pop_cont_L0, R0
0x70D2	0xD014      	BRA         L_end_string_pop
L_string_pop12:
;string.h,28 :: 		result = texto[--cont];
0x70D4	0x07C1      	DECF        string_pop_cont_L0, 1, 1
0x70D6	0x51C1      	MOVF        string_pop_cont_L0, 0, 1
0x70D8	0x25BF      	ADDWF       FARG_string_pop_texto, 0, 1
0x70DA	0x6E00      	MOVWF       R0 
0x70DC	0x0E00      	MOVLW       0
0x70DE	0x21C0      	ADDWFC      FARG_string_pop_texto+1, 0, 1
0x70E0	0x6E01      	MOVWF       R1 
0x70E2	0xFFE9C000  	MOVFF       R0, FSR0L
0x70E6	0xFFEAC001  	MOVFF       R1, FSR0H
0x70EA	0xF002CFEE  	MOVFF       POSTINC0, R2
;string.h,29 :: 		texto[cont] = 0;  //Agregar final de cadena
0x70EE	0xFFE1C000  	MOVFF       R0, FSR1L
0x70F2	0xFFE2C001  	MOVFF       R1, FSR1H
0x70F6	0x6AE6      	CLRF        POSTINC1 
;string.h,32 :: 		return result;
0x70F8	0xF000C002  	MOVFF       R2, R0
;string.h,33 :: 		}
L_end_string_pop:
0x70FC	0x0012      	RETURN      0
; end of _string_pop
_mysql_search:
;table_eeprom.h,384 :: 		char mysql_search(char *tabla, char *columna, long buscar, int *fila){
;table_eeprom.h,388 :: 		if(mysql_exist(tabla)){
0x70FE	0xF547C4BF  	MOVFF       FARG_mysql_search_tabla, FARG_mysql_exist_name
0x7102	0xF548C4C0  	MOVFF       FARG_mysql_search_tabla+1, FARG_mysql_exist_name+1
0x7106	0xF003EC42  	CALL        _mysql_exist, 0
0x710A	0x5200      	MOVF        R0, 1 
0x710C	0xE055      	BZ          L_mysql_search509
;table_eeprom.h,389 :: 		for(*fila = 1; *fila <= myTable.rowAct; (*fila)++){
0x710E	0xFFE1C4C7  	MOVFF       FARG_mysql_search_fila, FSR1L
0x7112	0xFFE2C4C8  	MOVFF       FARG_mysql_search_fila+1, FSR1H
0x7116	0x0E01      	MOVLW       1
0x7118	0x6EE6      	MOVWF       POSTINC1 
0x711A	0x0E00      	MOVLW       0
0x711C	0x6EE6      	MOVWF       POSTINC1 
L_mysql_search510:
0x711E	0xFFE9C4C7  	MOVFF       FARG_mysql_search_fila, FSR0L
0x7122	0xFFEAC4C8  	MOVFF       FARG_mysql_search_fila+1, FSR0H
0x7126	0xF001CFEE  	MOVFF       POSTINC0, R1
0x712A	0xF002CFEE  	MOVFF       POSTINC0, R2
0x712E	0x5002      	MOVF        R2, 0 
0x7130	0x0103      	MOVLB       3
0x7132	0x5D1E      	SUBWF       Expendedora_myTable+5, 0, 1
0x7134	0xE102      	BNZ         L__mysql_search1297
0x7136	0x5001      	MOVF        R1, 0 
0x7138	0x5D1D      	SUBWF       Expendedora_myTable+4, 0, 1
L__mysql_search1297:
0x713A	0xE33B      	BNC         L_mysql_search511
;table_eeprom.h,391 :: 		if(!mysql_read(tabla, columna, *fila, &busqueda)){
0x713C	0xF531C4BF  	MOVFF       FARG_mysql_search_tabla, FARG_mysql_read_name
0x7140	0xF532C4C0  	MOVFF       FARG_mysql_search_tabla+1, FARG_mysql_read_name+1
0x7144	0xF533C4C1  	MOVFF       FARG_mysql_search_columna, FARG_mysql_read_column
0x7148	0xF534C4C2  	MOVFF       FARG_mysql_search_columna+1, FARG_mysql_read_column+1
0x714C	0xFFE9C4C7  	MOVFF       FARG_mysql_search_fila, FSR0L
0x7150	0xFFEAC4C8  	MOVFF       FARG_mysql_search_fila+1, FSR0H
0x7154	0xF535CFEE  	MOVFF       POSTINC0, FARG_mysql_read_fila
0x7158	0xF536CFEE  	MOVFF       POSTINC0, FARG_mysql_read_fila+1
0x715C	0x0EC9      	MOVLW       mysql_search_busqueda_L0
0x715E	0x0105      	MOVLB       5
0x7160	0x6F37      	MOVWF       FARG_mysql_read_result, 1
0x7162	0x0E04      	MOVLW       hi_addr(mysql_search_busqueda_L0)
0x7164	0x6F38      	MOVWF       FARG_mysql_read_result+1, 1
0x7166	0xF00AECAA  	CALL        _mysql_read, 0
0x716A	0x5200      	MOVF        R0, 1 
0x716C	0xE10F      	BNZ         L_mysql_search513
;table_eeprom.h,392 :: 		if(buscar == busqueda)
0x716E	0x0104      	MOVLB       4
0x7170	0x51C6      	MOVF        FARG_mysql_search_buscar+3, 0, 1
0x7172	0x19CC      	XORWF       mysql_search_busqueda_L0+3, 0, 1
0x7174	0xE108      	BNZ         L__mysql_search1298
0x7176	0x51C5      	MOVF        FARG_mysql_search_buscar+2, 0, 1
0x7178	0x19CB      	XORWF       mysql_search_busqueda_L0+2, 0, 1
0x717A	0xE105      	BNZ         L__mysql_search1298
0x717C	0x51C4      	MOVF        FARG_mysql_search_buscar+1, 0, 1
0x717E	0x19CA      	XORWF       mysql_search_busqueda_L0+1, 0, 1
0x7180	0xE102      	BNZ         L__mysql_search1298
0x7182	0x51C3      	MOVF        FARG_mysql_search_buscar, 0, 1
0x7184	0x19C9      	XORWF       mysql_search_busqueda_L0, 0, 1
L__mysql_search1298:
0x7186	0xE102      	BNZ         L_mysql_search514
;table_eeprom.h,393 :: 		return TABLE_RW_SUCCESS;
0x7188	0x6A00      	CLRF        R0 
0x718A	0xD018      	BRA         L_end_mysql_search
L_mysql_search514:
;table_eeprom.h,394 :: 		}
L_mysql_search513:
;table_eeprom.h,389 :: 		for(*fila = 1; *fila <= myTable.rowAct; (*fila)++){
0x718C	0xFFE9C4C7  	MOVFF       FARG_mysql_search_fila, FSR0L
0x7190	0xFFEAC4C8  	MOVFF       FARG_mysql_search_fila+1, FSR0H
0x7194	0xF000CFEE  	MOVFF       POSTINC0, R0
0x7198	0xF001CFEE  	MOVFF       POSTINC0, R1
0x719C	0x4A00      	INFSNZ      R0, 1 
0x719E	0x2A01      	INCF        R1, 1 
0x71A0	0xFFE1C4C7  	MOVFF       FARG_mysql_search_fila, FSR1L
0x71A4	0xFFE2C4C8  	MOVFF       FARG_mysql_search_fila+1, FSR1H
0x71A8	0xFFE6C000  	MOVFF       R0, POSTINC1
0x71AC	0xFFE6C001  	MOVFF       R1, POSTINC1
;table_eeprom.h,395 :: 		}
0x71B0	0xD7B6      	BRA         L_mysql_search510
L_mysql_search511:
;table_eeprom.h,396 :: 		return TABLE_RW_NO_EXIST_ROW;
0x71B2	0x0E03      	MOVLW       3
0x71B4	0x6E00      	MOVWF       R0 
0x71B6	0xD002      	BRA         L_end_mysql_search
;table_eeprom.h,397 :: 		}
L_mysql_search509:
;table_eeprom.h,399 :: 		return TABLE_RW_NO_EXIST_TABLE;
0x71B8	0x0E01      	MOVLW       1
0x71BA	0x6E00      	MOVWF       R0 
;table_eeprom.h,400 :: 		}
L_end_mysql_search:
0x71BC	0x0012      	RETURN      0
; end of _mysql_search
_mysql_init:
;table_eeprom.h,67 :: 		void mysql_init(unsigned int memoryMax){
;table_eeprom.h,69 :: 		myTable.col = 0;
0x71BE	0x0103      	MOVLB       3
0x71C0	0x6B1A      	CLRF        Expendedora_myTable+1, 1
;table_eeprom.h,70 :: 		myTable.row = 0;
0x71C2	0x6B1B      	CLRF        Expendedora_myTable+2, 1
0x71C4	0x6B1C      	CLRF        Expendedora_myTable+3, 1
;table_eeprom.h,71 :: 		myTable.rowAct = 0;
0x71C6	0x6B1D      	CLRF        Expendedora_myTable+4, 1
0x71C8	0x6B1E      	CLRF        Expendedora_myTable+5, 1
;table_eeprom.h,72 :: 		myTable.nameAct[0] = 0;          //Inicializar cadena en cero
0x71CA	0x6B20      	CLRF        Expendedora_myTable+7, 1
;table_eeprom.h,73 :: 		myTable.nameColAct[0] = 0;
0x71CC	0x6B30      	CLRF        Expendedora_myTable+23, 1
;table_eeprom.h,74 :: 		myTable.sizeMax = memoryMax;
0x71CE	0xF340C4BF  	MOVFF       FARG_mysql_init_memoryMax, Expendedora_myTable+39
0x71D2	0xF341C4C0  	MOVFF       FARG_mysql_init_memoryMax+1, Expendedora_myTable+40
;table_eeprom.h,76 :: 		eeprom_i2c_open();  //Preguntamos si deseo resetear la memoria
0x71D6	0xF01DEC19  	CALL        _eeprom_i2c_open, 0
;table_eeprom.h,77 :: 		eeprom_i2c_read(0x0000,&myTable.numTables, 1);
0x71DA	0x0105      	MOVLB       5
0x71DC	0x6B49      	CLRF        FARG_eeprom_i2c_read_address, 1
0x71DE	0x6B4A      	CLRF        FARG_eeprom_i2c_read_address+1, 1
0x71E0	0x0E19      	MOVLW       Expendedora_myTable
0x71E2	0x6F4B      	MOVWF       FARG_eeprom_i2c_read_datos, 1
0x71E4	0x0E03      	MOVLW       hi_addr(Expendedora_myTable)
0x71E6	0x6F4C      	MOVWF       FARG_eeprom_i2c_read_datos+1, 1
0x71E8	0x0E01      	MOVLW       1
0x71EA	0x6F4D      	MOVWF       FARG_eeprom_i2c_read_size, 1
0x71EC	0xF001ECF0  	CALL        _eeprom_i2c_read, 0
;table_eeprom.h,78 :: 		eeprom_i2c_read(0x0001,(char*)&myTable.size, 2);
0x71F0	0x0E01      	MOVLW       1
0x71F2	0x6F49      	MOVWF       FARG_eeprom_i2c_read_address, 1
0x71F4	0x0E00      	MOVLW       0
0x71F6	0x6F4A      	MOVWF       FARG_eeprom_i2c_read_address+1, 1
0x71F8	0x0E42      	MOVLW       Expendedora_myTable+41
0x71FA	0x6F4B      	MOVWF       FARG_eeprom_i2c_read_datos, 1
0x71FC	0x0E03      	MOVLW       hi_addr(Expendedora_myTable+41)
0x71FE	0x6F4C      	MOVWF       FARG_eeprom_i2c_read_datos+1, 1
0x7200	0x0E02      	MOVLW       2
0x7202	0x6F4D      	MOVWF       FARG_eeprom_i2c_read_size, 1
0x7204	0xF001ECF0  	CALL        _eeprom_i2c_read, 0
;table_eeprom.h,79 :: 		}
L_end_mysql_init:
0x7208	0x0012      	RETURN      0
; end of _mysql_init
_encrypt_basic:
;_lib_cryptography.h,5 :: 		void encrypt_basic(char *cadena){
;_lib_cryptography.h,6 :: 		char cont = 0;
0x720A	0x0104      	MOVLB       4
0x720C	0x6BC1      	CLRF        encrypt_basic_cont_L0, 1
;_lib_cryptography.h,8 :: 		while(cadena[cont]){
L_encrypt_basic587:
0x720E	0x51C1      	MOVF        encrypt_basic_cont_L0, 0, 1
0x7210	0x25BF      	ADDWF       FARG_encrypt_basic_cadena, 0, 1
0x7212	0x6EE9      	MOVWF       FSR0L 
0x7214	0x0E00      	MOVLW       0
0x7216	0x21C0      	ADDWFC      FARG_encrypt_basic_cadena+1, 0, 1
0x7218	0x6EEA      	MOVWF       FSR0H 
0x721A	0x52EE      	MOVF        POSTINC0, 1 
0x721C	0xB4D8      	BTFSC       STATUS, 2 
0x721E	0xD0B5      	BRA         L_encrypt_basic588
;_lib_cryptography.h,9 :: 		if(cadena[cont] == '0')
0x7220	0x51C1      	MOVF        encrypt_basic_cont_L0, 0, 1
0x7222	0x25BF      	ADDWF       FARG_encrypt_basic_cadena, 0, 1
0x7224	0x6EE9      	MOVWF       FSR0L 
0x7226	0x0E00      	MOVLW       0
0x7228	0x21C0      	ADDWFC      FARG_encrypt_basic_cadena+1, 0, 1
0x722A	0x6EEA      	MOVWF       FSR0H 
0x722C	0x50EE      	MOVF        POSTINC0, 0 
0x722E	0x0A30      	XORLW       48
0x7230	0xE109      	BNZ         L_encrypt_basic589
;_lib_cryptography.h,10 :: 		cadena[cont] = '2';
0x7232	0x51C1      	MOVF        encrypt_basic_cont_L0, 0, 1
0x7234	0x25BF      	ADDWF       FARG_encrypt_basic_cadena, 0, 1
0x7236	0x6EE1      	MOVWF       FSR1L 
0x7238	0x0E00      	MOVLW       0
0x723A	0x21C0      	ADDWFC      FARG_encrypt_basic_cadena+1, 0, 1
0x723C	0x6EE2      	MOVWF       FSR1H 
0x723E	0x0E32      	MOVLW       50
0x7240	0x6EE6      	MOVWF       POSTINC1 
0x7242	0xD0A1      	BRA         L_encrypt_basic590
L_encrypt_basic589:
;_lib_cryptography.h,11 :: 		else if(cadena[cont] == '1')
0x7244	0x51C1      	MOVF        encrypt_basic_cont_L0, 0, 1
0x7246	0x25BF      	ADDWF       FARG_encrypt_basic_cadena, 0, 1
0x7248	0x6EE9      	MOVWF       FSR0L 
0x724A	0x0E00      	MOVLW       0
0x724C	0x21C0      	ADDWFC      FARG_encrypt_basic_cadena+1, 0, 1
0x724E	0x6EEA      	MOVWF       FSR0H 
0x7250	0x50EE      	MOVF        POSTINC0, 0 
0x7252	0x0A31      	XORLW       49
0x7254	0xE109      	BNZ         L_encrypt_basic591
;_lib_cryptography.h,12 :: 		cadena[cont] = '0';
0x7256	0x51C1      	MOVF        encrypt_basic_cont_L0, 0, 1
0x7258	0x25BF      	ADDWF       FARG_encrypt_basic_cadena, 0, 1
0x725A	0x6EE1      	MOVWF       FSR1L 
0x725C	0x0E00      	MOVLW       0
0x725E	0x21C0      	ADDWFC      FARG_encrypt_basic_cadena+1, 0, 1
0x7260	0x6EE2      	MOVWF       FSR1H 
0x7262	0x0E30      	MOVLW       48
0x7264	0x6EE6      	MOVWF       POSTINC1 
0x7266	0xD08F      	BRA         L_encrypt_basic592
L_encrypt_basic591:
;_lib_cryptography.h,13 :: 		else if(cadena[cont] == '2')
0x7268	0x51C1      	MOVF        encrypt_basic_cont_L0, 0, 1
0x726A	0x25BF      	ADDWF       FARG_encrypt_basic_cadena, 0, 1
0x726C	0x6EE9      	MOVWF       FSR0L 
0x726E	0x0E00      	MOVLW       0
0x7270	0x21C0      	ADDWFC      FARG_encrypt_basic_cadena+1, 0, 1
0x7272	0x6EEA      	MOVWF       FSR0H 
0x7274	0x50EE      	MOVF        POSTINC0, 0 
0x7276	0x0A32      	XORLW       50
0x7278	0xE109      	BNZ         L_encrypt_basic593
;_lib_cryptography.h,14 :: 		cadena[cont] = '8';
0x727A	0x51C1      	MOVF        encrypt_basic_cont_L0, 0, 1
0x727C	0x25BF      	ADDWF       FARG_encrypt_basic_cadena, 0, 1
0x727E	0x6EE1      	MOVWF       FSR1L 
0x7280	0x0E00      	MOVLW       0
0x7282	0x21C0      	ADDWFC      FARG_encrypt_basic_cadena+1, 0, 1
0x7284	0x6EE2      	MOVWF       FSR1H 
0x7286	0x0E38      	MOVLW       56
0x7288	0x6EE6      	MOVWF       POSTINC1 
0x728A	0xD07D      	BRA         L_encrypt_basic594
L_encrypt_basic593:
;_lib_cryptography.h,15 :: 		else if(cadena[cont] == '3')
0x728C	0x51C1      	MOVF        encrypt_basic_cont_L0, 0, 1
0x728E	0x25BF      	ADDWF       FARG_encrypt_basic_cadena, 0, 1
0x7290	0x6EE9      	MOVWF       FSR0L 
0x7292	0x0E00      	MOVLW       0
0x7294	0x21C0      	ADDWFC      FARG_encrypt_basic_cadena+1, 0, 1
0x7296	0x6EEA      	MOVWF       FSR0H 
0x7298	0x50EE      	MOVF        POSTINC0, 0 
0x729A	0x0A33      	XORLW       51
0x729C	0xE109      	BNZ         L_encrypt_basic595
;_lib_cryptography.h,16 :: 		cadena[cont] = '9';
0x729E	0x51C1      	MOVF        encrypt_basic_cont_L0, 0, 1
0x72A0	0x25BF      	ADDWF       FARG_encrypt_basic_cadena, 0, 1
0x72A2	0x6EE1      	MOVWF       FSR1L 
0x72A4	0x0E00      	MOVLW       0
0x72A6	0x21C0      	ADDWFC      FARG_encrypt_basic_cadena+1, 0, 1
0x72A8	0x6EE2      	MOVWF       FSR1H 
0x72AA	0x0E39      	MOVLW       57
0x72AC	0x6EE6      	MOVWF       POSTINC1 
0x72AE	0xD06B      	BRA         L_encrypt_basic596
L_encrypt_basic595:
;_lib_cryptography.h,17 :: 		else if(cadena[cont] == '4')
0x72B0	0x51C1      	MOVF        encrypt_basic_cont_L0, 0, 1
0x72B2	0x25BF      	ADDWF       FARG_encrypt_basic_cadena, 0, 1
0x72B4	0x6EE9      	MOVWF       FSR0L 
0x72B6	0x0E00      	MOVLW       0
0x72B8	0x21C0      	ADDWFC      FARG_encrypt_basic_cadena+1, 0, 1
0x72BA	0x6EEA      	MOVWF       FSR0H 
0x72BC	0x50EE      	MOVF        POSTINC0, 0 
0x72BE	0x0A34      	XORLW       52
0x72C0	0xE109      	BNZ         L_encrypt_basic597
;_lib_cryptography.h,18 :: 		cadena[cont] = '7';
0x72C2	0x51C1      	MOVF        encrypt_basic_cont_L0, 0, 1
0x72C4	0x25BF      	ADDWF       FARG_encrypt_basic_cadena, 0, 1
0x72C6	0x6EE1      	MOVWF       FSR1L 
0x72C8	0x0E00      	MOVLW       0
0x72CA	0x21C0      	ADDWFC      FARG_encrypt_basic_cadena+1, 0, 1
0x72CC	0x6EE2      	MOVWF       FSR1H 
0x72CE	0x0E37      	MOVLW       55
0x72D0	0x6EE6      	MOVWF       POSTINC1 
0x72D2	0xD059      	BRA         L_encrypt_basic598
L_encrypt_basic597:
;_lib_cryptography.h,19 :: 		else if(cadena[cont] == '5')
0x72D4	0x51C1      	MOVF        encrypt_basic_cont_L0, 0, 1
0x72D6	0x25BF      	ADDWF       FARG_encrypt_basic_cadena, 0, 1
0x72D8	0x6EE9      	MOVWF       FSR0L 
0x72DA	0x0E00      	MOVLW       0
0x72DC	0x21C0      	ADDWFC      FARG_encrypt_basic_cadena+1, 0, 1
0x72DE	0x6EEA      	MOVWF       FSR0H 
0x72E0	0x50EE      	MOVF        POSTINC0, 0 
0x72E2	0x0A35      	XORLW       53
0x72E4	0xE109      	BNZ         L_encrypt_basic599
;_lib_cryptography.h,20 :: 		cadena[cont] = '6';
0x72E6	0x51C1      	MOVF        encrypt_basic_cont_L0, 0, 1
0x72E8	0x25BF      	ADDWF       FARG_encrypt_basic_cadena, 0, 1
0x72EA	0x6EE1      	MOVWF       FSR1L 
0x72EC	0x0E00      	MOVLW       0
0x72EE	0x21C0      	ADDWFC      FARG_encrypt_basic_cadena+1, 0, 1
0x72F0	0x6EE2      	MOVWF       FSR1H 
0x72F2	0x0E36      	MOVLW       54
0x72F4	0x6EE6      	MOVWF       POSTINC1 
0x72F6	0xD047      	BRA         L_encrypt_basic600
L_encrypt_basic599:
;_lib_cryptography.h,21 :: 		else if(cadena[cont] == '6')
0x72F8	0x51C1      	MOVF        encrypt_basic_cont_L0, 0, 1
0x72FA	0x25BF      	ADDWF       FARG_encrypt_basic_cadena, 0, 1
0x72FC	0x6EE9      	MOVWF       FSR0L 
0x72FE	0x0E00      	MOVLW       0
0x7300	0x21C0      	ADDWFC      FARG_encrypt_basic_cadena+1, 0, 1
0x7302	0x6EEA      	MOVWF       FSR0H 
0x7304	0x50EE      	MOVF        POSTINC0, 0 
0x7306	0x0A36      	XORLW       54
0x7308	0xE109      	BNZ         L_encrypt_basic601
;_lib_cryptography.h,22 :: 		cadena[cont] = '4';
0x730A	0x51C1      	MOVF        encrypt_basic_cont_L0, 0, 1
0x730C	0x25BF      	ADDWF       FARG_encrypt_basic_cadena, 0, 1
0x730E	0x6EE1      	MOVWF       FSR1L 
0x7310	0x0E00      	MOVLW       0
0x7312	0x21C0      	ADDWFC      FARG_encrypt_basic_cadena+1, 0, 1
0x7314	0x6EE2      	MOVWF       FSR1H 
0x7316	0x0E34      	MOVLW       52
0x7318	0x6EE6      	MOVWF       POSTINC1 
0x731A	0xD035      	BRA         L_encrypt_basic602
L_encrypt_basic601:
;_lib_cryptography.h,23 :: 		else if(cadena[cont] == '7')
0x731C	0x51C1      	MOVF        encrypt_basic_cont_L0, 0, 1
0x731E	0x25BF      	ADDWF       FARG_encrypt_basic_cadena, 0, 1
0x7320	0x6EE9      	MOVWF       FSR0L 
0x7322	0x0E00      	MOVLW       0
0x7324	0x21C0      	ADDWFC      FARG_encrypt_basic_cadena+1, 0, 1
0x7326	0x6EEA      	MOVWF       FSR0H 
0x7328	0x50EE      	MOVF        POSTINC0, 0 
0x732A	0x0A37      	XORLW       55
0x732C	0xE109      	BNZ         L_encrypt_basic603
;_lib_cryptography.h,24 :: 		cadena[cont] = '5';
0x732E	0x51C1      	MOVF        encrypt_basic_cont_L0, 0, 1
0x7330	0x25BF      	ADDWF       FARG_encrypt_basic_cadena, 0, 1
0x7332	0x6EE1      	MOVWF       FSR1L 
0x7334	0x0E00      	MOVLW       0
0x7336	0x21C0      	ADDWFC      FARG_encrypt_basic_cadena+1, 0, 1
0x7338	0x6EE2      	MOVWF       FSR1H 
0x733A	0x0E35      	MOVLW       53
0x733C	0x6EE6      	MOVWF       POSTINC1 
0x733E	0xD023      	BRA         L_encrypt_basic604
L_encrypt_basic603:
;_lib_cryptography.h,25 :: 		else if(cadena[cont] == '8')
0x7340	0x51C1      	MOVF        encrypt_basic_cont_L0, 0, 1
0x7342	0x25BF      	ADDWF       FARG_encrypt_basic_cadena, 0, 1
0x7344	0x6EE9      	MOVWF       FSR0L 
0x7346	0x0E00      	MOVLW       0
0x7348	0x21C0      	ADDWFC      FARG_encrypt_basic_cadena+1, 0, 1
0x734A	0x6EEA      	MOVWF       FSR0H 
0x734C	0x50EE      	MOVF        POSTINC0, 0 
0x734E	0x0A38      	XORLW       56
0x7350	0xE109      	BNZ         L_encrypt_basic605
;_lib_cryptography.h,26 :: 		cadena[cont] = '3';
0x7352	0x51C1      	MOVF        encrypt_basic_cont_L0, 0, 1
0x7354	0x25BF      	ADDWF       FARG_encrypt_basic_cadena, 0, 1
0x7356	0x6EE1      	MOVWF       FSR1L 
0x7358	0x0E00      	MOVLW       0
0x735A	0x21C0      	ADDWFC      FARG_encrypt_basic_cadena+1, 0, 1
0x735C	0x6EE2      	MOVWF       FSR1H 
0x735E	0x0E33      	MOVLW       51
0x7360	0x6EE6      	MOVWF       POSTINC1 
0x7362	0xD011      	BRA         L_encrypt_basic606
L_encrypt_basic605:
;_lib_cryptography.h,27 :: 		else if(cadena[cont] == '9')
0x7364	0x51C1      	MOVF        encrypt_basic_cont_L0, 0, 1
0x7366	0x25BF      	ADDWF       FARG_encrypt_basic_cadena, 0, 1
0x7368	0x6EE9      	MOVWF       FSR0L 
0x736A	0x0E00      	MOVLW       0
0x736C	0x21C0      	ADDWFC      FARG_encrypt_basic_cadena+1, 0, 1
0x736E	0x6EEA      	MOVWF       FSR0H 
0x7370	0x50EE      	MOVF        POSTINC0, 0 
0x7372	0x0A39      	XORLW       57
0x7374	0xE108      	BNZ         L_encrypt_basic607
;_lib_cryptography.h,28 :: 		cadena[cont] = '1';
0x7376	0x51C1      	MOVF        encrypt_basic_cont_L0, 0, 1
0x7378	0x25BF      	ADDWF       FARG_encrypt_basic_cadena, 0, 1
0x737A	0x6EE1      	MOVWF       FSR1L 
0x737C	0x0E00      	MOVLW       0
0x737E	0x21C0      	ADDWFC      FARG_encrypt_basic_cadena+1, 0, 1
0x7380	0x6EE2      	MOVWF       FSR1H 
0x7382	0x0E31      	MOVLW       49
0x7384	0x6EE6      	MOVWF       POSTINC1 
L_encrypt_basic607:
L_encrypt_basic606:
L_encrypt_basic604:
L_encrypt_basic602:
L_encrypt_basic600:
L_encrypt_basic598:
L_encrypt_basic596:
L_encrypt_basic594:
L_encrypt_basic592:
L_encrypt_basic590:
;_lib_cryptography.h,29 :: 		cont++;
0x7386	0x2BC1      	INCF        encrypt_basic_cont_L0, 1, 1
;_lib_cryptography.h,30 :: 		}
0x7388	0xD742      	BRA         L_encrypt_basic587
L_encrypt_basic588:
;_lib_cryptography.h,31 :: 		}
L_end_encrypt_basic:
0x738A	0x0012      	RETURN      0
; end of _encrypt_basic
_wiegand26_open:
;wiegand26.h,51 :: 		void wiegand26_open(){
;wiegand26.h,52 :: 		external_int0_open(false, false);        //No disponible, flanco de bajada
0x738C	0x0105      	MOVLB       5
0x738E	0x6B01      	CLRF        FARG_external_int0_open_enable, 1
0x7390	0x6B02      	CLRF        FARG_external_int0_open_edgeOnRising, 1
0x7392	0xF01CECDF  	CALL        _external_int0_open, 0
;wiegand26.h,53 :: 		external_int1_open(false, false, true);  //No disponible, flanco de bajada
0x7396	0x6B01      	CLRF        FARG_external_int1_open_enable, 1
0x7398	0x6B02      	CLRF        FARG_external_int1_open_edgeOnRising, 1
0x739A	0x0E01      	MOVLW       1
0x739C	0x6F03      	MOVWF       FARG_external_int1_open_priorityHigh, 1
0x739E	0xF01CECCD  	CALL        _external_int1_open, 0
;wiegand26.h,54 :: 		WIEGAN26_DATA = 0;
0x73A2	0x0102      	MOVLB       2
0x73A4	0x6BD3      	CLRF        Expendedora_WIEGAN26_DATA, 1
0x73A6	0x6BD4      	CLRF        Expendedora_WIEGAN26_DATA+1, 1
0x73A8	0x6BD5      	CLRF        Expendedora_WIEGAN26_DATA+2, 1
0x73AA	0x6BD6      	CLRF        Expendedora_WIEGAN26_DATA+3, 1
;wiegand26.h,55 :: 		WIEGAN26_CONT = 0;
0x73AC	0x0104      	MOVLB       4
0x73AE	0x6B9C      	CLRF        Expendedora_WIEGAN26_CONT, 1
;wiegand26.h,56 :: 		WIEGAND_TEMP = 0;
0x73B0	0x0102      	MOVLB       2
0x73B2	0x6BFD      	CLRF        _WIEGAND_TEMP, 1
0x73B4	0x6BFE      	CLRF        _WIEGAND_TEMP+1, 1
;wiegand26.h,58 :: 		timer2_open(5000, true, true, false);
0x73B6	0x0E88      	MOVLW       136
0x73B8	0x0105      	MOVLB       5
0x73BA	0x6F01      	MOVWF       FARG_timer2_open_time_us, 1
0x73BC	0x0E13      	MOVLW       19
0x73BE	0x6F02      	MOVWF       FARG_timer2_open_time_us+1, 1
0x73C0	0x0E00      	MOVLW       0
0x73C2	0x6F03      	MOVWF       FARG_timer2_open_time_us+2, 1
0x73C4	0x6F04      	MOVWF       FARG_timer2_open_time_us+3, 1
0x73C6	0x0E01      	MOVLW       1
0x73C8	0x6F05      	MOVWF       FARG_timer2_open_powerOn, 1
0x73CA	0x0E01      	MOVLW       1
0x73CC	0x6F06      	MOVWF       FARG_timer2_open_enable, 1
0x73CE	0x6B07      	CLRF        FARG_timer2_open_priorityHigh, 1
0x73D0	0xF01BECF8  	CALL        _timer2_open, 0
;wiegand26.h,59 :: 		}
L_end_wiegand26_open:
0x73D4	0x0012      	RETURN      0
; end of _wiegand26_open
_DS1307_getSeconds:
;ds1307.h,189 :: 		long DS1307_getSeconds(char *HHMMSS){
;ds1307.h,190 :: 		char cont = 0;
0x73D6	0x0104      	MOVLB       4
0x73D8	0x6BC1      	CLRF        DS1307_getSeconds_cont_L0, 1
0x73DA	0x0EFF      	MOVLW       255
0x73DC	0x6FC2      	MOVWF       DS1307_getSeconds_segundos_L0, 1
0x73DE	0x0EFF      	MOVLW       255
0x73E0	0x6FC3      	MOVWF       DS1307_getSeconds_segundos_L0+1, 1
0x73E2	0x0EFF      	MOVLW       255
0x73E4	0x6FC4      	MOVWF       DS1307_getSeconds_segundos_L0+2, 1
0x73E6	0x0EFF      	MOVLW       255
0x73E8	0x6FC5      	MOVWF       DS1307_getSeconds_segundos_L0+3, 1
;ds1307.h,193 :: 		if(string_len(HHMMSS) == 6){
0x73EA	0xF531C4BF  	MOVFF       FARG_DS1307_getSeconds_HHMMSS, FARG_string_len_texto
0x73EE	0xF532C4C0  	MOVFF       FARG_DS1307_getSeconds_HHMMSS+1, FARG_string_len_texto+1
0x73F2	0xF008ECF9  	CALL        _string_len, 0
0x73F6	0x5000      	MOVF        R0, 0 
0x73F8	0x0A06      	XORLW       6
0x73FA	0xE13F      	BNZ         L_DS1307_getSeconds351
;ds1307.h,194 :: 		segundos = 0;
0x73FC	0x0104      	MOVLB       4
0x73FE	0x6BC2      	CLRF        DS1307_getSeconds_segundos_L0, 1
0x7400	0x6BC3      	CLRF        DS1307_getSeconds_segundos_L0+1, 1
0x7402	0x6BC4      	CLRF        DS1307_getSeconds_segundos_L0+2, 1
0x7404	0x6BC5      	CLRF        DS1307_getSeconds_segundos_L0+3, 1
;ds1307.h,196 :: 		while(HHMMSS[cont] != 0){
L_DS1307_getSeconds352:
0x7406	0x51C1      	MOVF        DS1307_getSeconds_cont_L0, 0, 1
0x7408	0x25BF      	ADDWF       FARG_DS1307_getSeconds_HHMMSS, 0, 1
0x740A	0x6EE9      	MOVWF       FSR0L 
0x740C	0x0E00      	MOVLW       0
0x740E	0x21C0      	ADDWFC      FARG_DS1307_getSeconds_HHMMSS+1, 0, 1
0x7410	0x6EEA      	MOVWF       FSR0H 
0x7412	0x50EE      	MOVF        POSTINC0, 0 
0x7414	0x0A00      	XORLW       0
0x7416	0xE031      	BZ          L_DS1307_getSeconds353
;ds1307.h,197 :: 		segundos *= 60;
0x7418	0xF000C4C2  	MOVFF       DS1307_getSeconds_segundos_L0, R0
0x741C	0xF001C4C3  	MOVFF       DS1307_getSeconds_segundos_L0+1, R1
0x7420	0xF002C4C4  	MOVFF       DS1307_getSeconds_segundos_L0+2, R2
0x7424	0xF003C4C5  	MOVFF       DS1307_getSeconds_segundos_L0+3, R3
0x7428	0x0E3C      	MOVLW       60
0x742A	0x6E04      	MOVWF       R4 
0x742C	0x0E00      	MOVLW       0
0x742E	0x6E05      	MOVWF       R5 
0x7430	0x6E06      	MOVWF       R6 
0x7432	0x6E07      	MOVWF       R7 
0x7434	0xF003ECC8  	CALL        _Mul_32x32_U, 0
0x7438	0xF4C2C000  	MOVFF       R0, DS1307_getSeconds_segundos_L0
0x743C	0xF4C3C001  	MOVFF       R1, DS1307_getSeconds_segundos_L0+1
0x7440	0xF4C4C002  	MOVFF       R2, DS1307_getSeconds_segundos_L0+2
0x7444	0xF4C5C003  	MOVFF       R3, DS1307_getSeconds_segundos_L0+3
;ds1307.h,198 :: 		segundos += stringToNumN(&HHMMSS[cont], 2);
0x7448	0x51C1      	MOVF        DS1307_getSeconds_cont_L0, 0, 1
0x744A	0x25BF      	ADDWF       FARG_DS1307_getSeconds_HHMMSS, 0, 1
0x744C	0x0105      	MOVLB       5
0x744E	0x6F31      	MOVWF       FARG_stringToNumN_cadena, 1
0x7450	0x0E00      	MOVLW       0
0x7452	0x0104      	MOVLB       4
0x7454	0x21C0      	ADDWFC      FARG_DS1307_getSeconds_HHMMSS+1, 0, 1
0x7456	0x0105      	MOVLB       5
0x7458	0x6F32      	MOVWF       FARG_stringToNumN_cadena+1, 1
0x745A	0x0E02      	MOVLW       2
0x745C	0x6F33      	MOVWF       FARG_stringToNumN_size, 1
0x745E	0xF009ECB8  	CALL        _stringToNumN, 0
0x7462	0x5000      	MOVF        R0, 0 
0x7464	0x0104      	MOVLB       4
0x7466	0x27C2      	ADDWF       DS1307_getSeconds_segundos_L0, 1, 1
0x7468	0x5001      	MOVF        R1, 0 
0x746A	0x23C3      	ADDWFC      DS1307_getSeconds_segundos_L0+1, 1, 1
0x746C	0x5002      	MOVF        R2, 0 
0x746E	0x23C4      	ADDWFC      DS1307_getSeconds_segundos_L0+2, 1, 1
0x7470	0x5003      	MOVF        R3, 0 
0x7472	0x23C5      	ADDWFC      DS1307_getSeconds_segundos_L0+3, 1, 1
;ds1307.h,199 :: 		cont += 2;
0x7474	0x0E02      	MOVLW       2
0x7476	0x27C1      	ADDWF       DS1307_getSeconds_cont_L0, 1, 1
;ds1307.h,200 :: 		}
0x7478	0xD7C6      	BRA         L_DS1307_getSeconds352
L_DS1307_getSeconds353:
;ds1307.h,201 :: 		}
L_DS1307_getSeconds351:
;ds1307.h,203 :: 		return segundos;
0x747A	0xF000C4C2  	MOVFF       DS1307_getSeconds_segundos_L0, R0
0x747E	0xF001C4C3  	MOVFF       DS1307_getSeconds_segundos_L0+1, R1
0x7482	0xF002C4C4  	MOVFF       DS1307_getSeconds_segundos_L0+2, R2
0x7486	0xF003C4C5  	MOVFF       DS1307_getSeconds_segundos_L0+3, R3
;ds1307.h,204 :: 		}
L_end_DS1307_getSeconds:
0x748A	0x0012      	RETURN      0
; end of _DS1307_getSeconds
_usart_write_line:
;lib_usart.h,108 :: 		void usart_write_line(char *texto){
;lib_usart.h,109 :: 		char cont = 0;
0x748C	0x0104      	MOVLB       4
0x748E	0x6BC1      	CLRF        usart_write_line_cont_L0, 1
;lib_usart.h,111 :: 		while(texto[cont]){
L_usart_write_line125:
0x7490	0x51C1      	MOVF        usart_write_line_cont_L0, 0, 1
0x7492	0x25BF      	ADDWF       FARG_usart_write_line_texto, 0, 1
0x7494	0x6EE9      	MOVWF       FSR0L 
0x7496	0x0E00      	MOVLW       0
0x7498	0x21C0      	ADDWFC      FARG_usart_write_line_texto+1, 0, 1
0x749A	0x6EEA      	MOVWF       FSR0H 
0x749C	0x52EE      	MOVF        POSTINC0, 1 
0x749E	0xE00D      	BZ          L_usart_write_line126
;lib_usart.h,112 :: 		TXREG = texto[cont++];
0x74A0	0x51C1      	MOVF        usart_write_line_cont_L0, 0, 1
0x74A2	0x25BF      	ADDWF       FARG_usart_write_line_texto, 0, 1
0x74A4	0x6EE9      	MOVWF       FSR0L 
0x74A6	0x0E00      	MOVLW       0
0x74A8	0x21C0      	ADDWFC      FARG_usart_write_line_texto+1, 0, 1
0x74AA	0x6EEA      	MOVWF       FSR0H 
0x74AC	0xFFADCFEE  	MOVFF       POSTINC0, TXREG
0x74B0	0x2BC1      	INCF        usart_write_line_cont_L0, 1, 1
;lib_usart.h,113 :: 		while(!TXSTA.TRMT);    //Esperar a que el buffer se vacie en evnvio
L_usart_write_line127:
0x74B2	0xB2AC      	BTFSC       TXSTA, 1 
0x74B4	0xD001      	BRA         L_usart_write_line128
0x74B6	0xD7FD      	BRA         L_usart_write_line127
L_usart_write_line128:
;lib_usart.h,114 :: 		}
0x74B8	0xD7EB      	BRA         L_usart_write_line125
L_usart_write_line126:
;lib_usart.h,116 :: 		TXREG = USART_NEW_LINE[0];
0x74BA	0x0E0D      	MOVLW       13
0x74BC	0x6EAD      	MOVWF       TXREG 
;lib_usart.h,117 :: 		while(!TXSTA.TRMT);    //Esperar a que el buffer se vacie en evnvio
L_usart_write_line129:
0x74BE	0xB2AC      	BTFSC       TXSTA, 1 
0x74C0	0xD001      	BRA         L_usart_write_line130
0x74C2	0xD7FD      	BRA         L_usart_write_line129
L_usart_write_line130:
;lib_usart.h,118 :: 		TXREG = USART_NEW_LINE[1];
0x74C4	0x0E0A      	MOVLW       10
0x74C6	0x6EAD      	MOVWF       TXREG 
;lib_usart.h,119 :: 		while(!TXSTA.TRMT);    //Esperar a que el buffer se vacie en evnvio
L_usart_write_line131:
0x74C8	0xB2AC      	BTFSC       TXSTA, 1 
0x74CA	0xD001      	BRA         L_usart_write_line132
0x74CC	0xD7FD      	BRA         L_usart_write_line131
L_usart_write_line132:
;lib_usart.h,120 :: 		}
L_end_usart_write_line:
0x74CE	0x0012      	RETURN      0
; end of _usart_write_line
_can_heartbeat:
;Expendedora.c,2028 :: 		void can_heartbeat(){
;Expendedora.c,2032 :: 		if(++temp_heartbeat >= TIME_HEARTBEAT){
0x74D0	0x0102      	MOVLB       2
0x74D2	0x4BD1      	INFSNZ      _temp_heartbeat, 1, 1
0x74D4	0x2BD2      	INCF        _temp_heartbeat+1, 1, 1
0x74D6	0x0E00      	MOVLW       0
0x74D8	0x5DD2      	SUBWF       _temp_heartbeat+1, 0, 1
0x74DA	0xE102      	BNZ         L__can_heartbeat1403
0x74DC	0x0E05      	MOVLW       5
0x74DE	0x5DD1      	SUBWF       _temp_heartbeat, 0, 1
L__can_heartbeat1403:
0x74E0	0xE31B      	BNC         L_can_heartbeat925
;Expendedora.c,2033 :: 		temp_heartbeat = 0;
0x74E2	0x6BD1      	CLRF        _temp_heartbeat, 1
0x74E4	0x6BD2      	CLRF        _temp_heartbeat+1, 1
;Expendedora.c,2034 :: 		cmdHeartBeat[0] = can.id;
0x74E6	0xF4BFC355  	MOVFF       _can+12, can_heartbeat_cmdHeartBeat_L0
;Expendedora.c,2035 :: 		cmdHeartBeat[1] = CAN_PROTOCOL_HEARTBEAT;
0x74EA	0x0EFF      	MOVLW       255
0x74EC	0x0104      	MOVLB       4
0x74EE	0x6FC0      	MOVWF       can_heartbeat_cmdHeartBeat_L0+1, 1
;Expendedora.c,2036 :: 		can_write(can.ip+canIdTPV, cmdHeartBeat, sizeof(cmdHeartBeat), 3, false);
0x74F0	0xF501C349  	MOVFF       _can, FARG_can_write_id
0x74F4	0xF502C34A  	MOVFF       _can+1, FARG_can_write_id+1
0x74F8	0xF503C34B  	MOVFF       _can+2, FARG_can_write_id+2
0x74FC	0xF504C34C  	MOVFF       _can+3, FARG_can_write_id+3
0x7500	0x0EBF      	MOVLW       can_heartbeat_cmdHeartBeat_L0
0x7502	0x0105      	MOVLB       5
0x7504	0x6F05      	MOVWF       FARG_can_write_datos, 1
0x7506	0x0E04      	MOVLW       hi_addr(can_heartbeat_cmdHeartBeat_L0)
0x7508	0x6F06      	MOVWF       FARG_can_write_datos+1, 1
0x750A	0x0E02      	MOVLW       2
0x750C	0x6F07      	MOVWF       FARG_can_write_size, 1
0x750E	0x0E03      	MOVLW       3
0x7510	0x6F08      	MOVWF       FARG_can_write_priority, 1
0x7512	0x6B09      	CLRF        FARG_can_write_rtr, 1
0x7514	0xF017ECF5  	CALL        _can_write, 0
;Expendedora.c,2037 :: 		}
L_can_heartbeat925:
;Expendedora.c,2038 :: 		}
L_end_can_heartbeat:
0x7518	0x0012      	RETURN      0
; end of _can_heartbeat
_can_desonexion:
;lib_can.h,794 :: 		void can_desonexion(){
;lib_can.h,795 :: 		if(can.conected){
0x751A	0x0103      	MOVLB       3
0x751C	0x5356      	MOVF        _can+13, 1, 1
0x751E	0xE013      	BZ          L_can_desonexion326
;lib_can.h,796 :: 		if(TXB0CON.TXERR || TXB1CON.TXERR || TXB2CON.TXERR){
0x7520	0x010F      	MOVLB       15
0x7522	0xB940      	BTFSC       TXB0CON, 4, 1
0x7524	0xD005      	BRA         L__can_desonexion972
0x7526	0xB930      	BTFSC       TXB1CON, 4, 1
0x7528	0xD003      	BRA         L__can_desonexion972
0x752A	0xB920      	BTFSC       TXB2CON, 4, 1
0x752C	0xD001      	BRA         L__can_desonexion972
0x752E	0xD00B      	BRA         L_can_desonexion329
L__can_desonexion972:
;lib_can.h,797 :: 		if(TXB0CON.TXERR) //!TXB0CON.TXABT
0x7530	0xA940      	BTFSS       TXB0CON, 4, 1
0x7532	0xD001      	BRA         L_can_desonexion330
;lib_can.h,798 :: 		TXB0CON.TXREQ = 1;  //CANCELA ENVIO
0x7534	0x8740      	BSF         TXB0CON, 3, 1
L_can_desonexion330:
;lib_can.h,799 :: 		if(TXB1CON.TXERR) //!TXB1CON.TXABT
0x7536	0xA930      	BTFSS       TXB1CON, 4, 1
0x7538	0xD001      	BRA         L_can_desonexion331
;lib_can.h,800 :: 		TXB1CON.TXREQ = 1;  //CANCELA ENVIO
0x753A	0x8730      	BSF         TXB1CON, 3, 1
L_can_desonexion331:
;lib_can.h,801 :: 		if(TXB2CON.TXERR) //!TXB2CON.TXABT
0x753C	0xA920      	BTFSS       TXB2CON, 4, 1
0x753E	0xD001      	BRA         L_can_desonexion332
;lib_can.h,802 :: 		TXB2CON.TXREQ = 1;  //CANCELA ENVIO
0x7540	0x8720      	BSF         TXB2CON, 3, 1
L_can_desonexion332:
;lib_can.h,803 :: 		can.conected = false;
0x7542	0x0103      	MOVLB       3
0x7544	0x6B56      	CLRF        _can+13, 1
;lib_can.h,804 :: 		}
L_can_desonexion329:
;lib_can.h,805 :: 		}
L_can_desonexion326:
;lib_can.h,806 :: 		}
L_end_can_desonexion:
0x7546	0x0012      	RETURN      0
; end of _can_desonexion
_LongToStr:
;__Lib_Conversions.c,240 :: 		
;__Lib_Conversions.c,246 :: 		
0x7548	0x0104      	MOVLB       4
0x754A	0x6BC7      	CLRF        LongToStr_negative_L0, 1
0x754C	0x6BC8      	CLRF        LongToStr_negative_L0+1, 1
;__Lib_Conversions.c,247 :: 		
0x754E	0xF4C9C4BF  	MOVFF       FARG_LongToStr_input, LongToStr_inword_L0
0x7552	0xF4CAC4C0  	MOVFF       FARG_LongToStr_input+1, LongToStr_inword_L0+1
0x7556	0xF4CBC4C1  	MOVFF       FARG_LongToStr_input+2, LongToStr_inword_L0+2
0x755A	0xF4CCC4C2  	MOVFF       FARG_LongToStr_input+3, LongToStr_inword_L0+3
;__Lib_Conversions.c,248 :: 		
0x755E	0x0E80      	MOVLW       128
0x7560	0x19C2      	XORWF       FARG_LongToStr_input+3, 0, 1
0x7562	0x6E00      	MOVWF       R0 
0x7564	0x0E80      	MOVLW       128
0x7566	0x5C00      	SUBWF       R0, 0 
0x7568	0xE108      	BNZ         L__LongToStr127
0x756A	0x0E00      	MOVLW       0
0x756C	0x5DC1      	SUBWF       FARG_LongToStr_input+2, 0, 1
0x756E	0xE105      	BNZ         L__LongToStr127
0x7570	0x0E00      	MOVLW       0
0x7572	0x5DC0      	SUBWF       FARG_LongToStr_input+1, 0, 1
0x7574	0xE102      	BNZ         L__LongToStr127
0x7576	0x0E00      	MOVLW       0
0x7578	0x5DBF      	SUBWF       FARG_LongToStr_input, 0, 1
L__LongToStr127:
0x757A	0xE210      	BC          L_LongToStr49
;__Lib_Conversions.c,249 :: 		
0x757C	0x0E01      	MOVLW       1
0x757E	0x6FC7      	MOVWF       LongToStr_negative_L0, 1
0x7580	0x0E00      	MOVLW       0
0x7582	0x6FC8      	MOVWF       LongToStr_negative_L0+1, 1
;__Lib_Conversions.c,250 :: 		
0x7584	0x6BC9      	CLRF        LongToStr_inword_L0, 1
0x7586	0x6BCA      	CLRF        LongToStr_inword_L0+1, 1
0x7588	0x6BCB      	CLRF        LongToStr_inword_L0+2, 1
0x758A	0x6BCC      	CLRF        LongToStr_inword_L0+3, 1
0x758C	0x51BF      	MOVF        FARG_LongToStr_input, 0, 1
0x758E	0x5FC9      	SUBWF       LongToStr_inword_L0, 1, 1
0x7590	0x51C0      	MOVF        FARG_LongToStr_input+1, 0, 1
0x7592	0x5BCA      	SUBWFB      LongToStr_inword_L0+1, 1, 1
0x7594	0x51C1      	MOVF        FARG_LongToStr_input+2, 0, 1
0x7596	0x5BCB      	SUBWFB      LongToStr_inword_L0+2, 1, 1
0x7598	0x51C2      	MOVF        FARG_LongToStr_input+3, 0, 1
0x759A	0x5BCC      	SUBWFB      LongToStr_inword_L0+3, 1, 1
;__Lib_Conversions.c,251 :: 		
L_LongToStr49:
;__Lib_Conversions.c,252 :: 		
0x759C	0xF501C4C9  	MOVFF       LongToStr_inword_L0, FARG_LongWordToStr_input
0x75A0	0xF502C4CA  	MOVFF       LongToStr_inword_L0+1, FARG_LongWordToStr_input+1
0x75A4	0xF503C4CB  	MOVFF       LongToStr_inword_L0+2, FARG_LongWordToStr_input+2
0x75A8	0xF504C4CC  	MOVFF       LongToStr_inword_L0+3, FARG_LongWordToStr_input+3
0x75AC	0xF505C4C3  	MOVFF       FARG_LongToStr_output, FARG_LongWordToStr_output
0x75B0	0xF506C4C4  	MOVFF       FARG_LongToStr_output+1, FARG_LongWordToStr_output+1
0x75B4	0xF01FECA6  	CALL        _LongWordToStr, 0
;__Lib_Conversions.c,254 :: 		
0x75B8	0x0E0B      	MOVLW       11
0x75BA	0x0104      	MOVLB       4
0x75BC	0x6FC5      	MOVWF       LongToStr_i_L0, 1
0x75BE	0x0E00      	MOVLW       0
0x75C0	0x6FC6      	MOVWF       LongToStr_i_L0+1, 1
;__Lib_Conversions.c,255 :: 		
L_LongToStr50:
0x75C2	0x0E00      	MOVLW       0
0x75C4	0x6E00      	MOVWF       R0 
0x75C6	0x51C6      	MOVF        LongToStr_i_L0+1, 0, 1
0x75C8	0x5C00      	SUBWF       R0, 0 
0x75CA	0xE102      	BNZ         L__LongToStr128
0x75CC	0x51C5      	MOVF        LongToStr_i_L0, 0, 1
0x75CE	0x0800      	SUBLW       0
L__LongToStr128:
0x75D0	0xE219      	BC          L_LongToStr51
;__Lib_Conversions.c,256 :: 		
0x75D2	0x51C5      	MOVF        LongToStr_i_L0, 0, 1
0x75D4	0x25C3      	ADDWF       FARG_LongToStr_output, 0, 1
0x75D6	0x6EE1      	MOVWF       FSR1L 
0x75D8	0x51C6      	MOVF        LongToStr_i_L0+1, 0, 1
0x75DA	0x21C4      	ADDWFC      FARG_LongToStr_output+1, 0, 1
0x75DC	0x6EE2      	MOVWF       FSR1H 
0x75DE	0x0E01      	MOVLW       1
0x75E0	0x5DC5      	SUBWF       LongToStr_i_L0, 0, 1
0x75E2	0x6E00      	MOVWF       R0 
0x75E4	0x0E00      	MOVLW       0
0x75E6	0x59C6      	SUBWFB      LongToStr_i_L0+1, 0, 1
0x75E8	0x6E01      	MOVWF       R1 
0x75EA	0x5000      	MOVF        R0, 0 
0x75EC	0x25C3      	ADDWF       FARG_LongToStr_output, 0, 1
0x75EE	0x6EE9      	MOVWF       FSR0L 
0x75F0	0x5001      	MOVF        R1, 0 
0x75F2	0x21C4      	ADDWFC      FARG_LongToStr_output+1, 0, 1
0x75F4	0x6EEA      	MOVWF       FSR0H 
0x75F6	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
;__Lib_Conversions.c,257 :: 		
0x75FA	0x0E01      	MOVLW       1
0x75FC	0x5FC5      	SUBWF       LongToStr_i_L0, 1, 1
0x75FE	0x0E00      	MOVLW       0
0x7600	0x5BC6      	SUBWFB      LongToStr_i_L0+1, 1, 1
;__Lib_Conversions.c,258 :: 		
0x7602	0xD7DF      	BRA         L_LongToStr50
L_LongToStr51:
;__Lib_Conversions.c,259 :: 		
0x7604	0xFFE1C4C3  	MOVFF       FARG_LongToStr_output, FSR1L
0x7608	0xFFE2C4C4  	MOVFF       FARG_LongToStr_output+1, FSR1H
0x760C	0x0E20      	MOVLW       32
0x760E	0x6EE6      	MOVWF       POSTINC1 
;__Lib_Conversions.c,260 :: 		
0x7610	0x51C7      	MOVF        LongToStr_negative_L0, 0, 1
0x7612	0x11C8      	IORWF       LongToStr_negative_L0+1, 0, 1
0x7614	0xE01A      	BZ          L_LongToStr52
;__Lib_Conversions.c,261 :: 		
0x7616	0x6BC5      	CLRF        LongToStr_i_L0, 1
0x7618	0x6BC6      	CLRF        LongToStr_i_L0+1, 1
;__Lib_Conversions.c,262 :: 		
L_LongToStr53:
0x761A	0x51C5      	MOVF        LongToStr_i_L0, 0, 1
0x761C	0x25C3      	ADDWF       FARG_LongToStr_output, 0, 1
0x761E	0x6EE9      	MOVWF       FSR0L 
0x7620	0x51C6      	MOVF        LongToStr_i_L0+1, 0, 1
0x7622	0x21C4      	ADDWFC      FARG_LongToStr_output+1, 0, 1
0x7624	0x6EEA      	MOVWF       FSR0H 
0x7626	0x50EE      	MOVF        POSTINC0, 0 
0x7628	0x0A20      	XORLW       32
0x762A	0xE103      	BNZ         L_LongToStr54
0x762C	0x4BC5      	INFSNZ      LongToStr_i_L0, 1, 1
0x762E	0x2BC6      	INCF        LongToStr_i_L0+1, 1, 1
0x7630	0xD7F4      	BRA         L_LongToStr53
L_LongToStr54:
;__Lib_Conversions.c,263 :: 		
0x7632	0x0E01      	MOVLW       1
0x7634	0x5FC5      	SUBWF       LongToStr_i_L0, 1, 1
0x7636	0x0E00      	MOVLW       0
0x7638	0x5BC6      	SUBWFB      LongToStr_i_L0+1, 1, 1
;__Lib_Conversions.c,264 :: 		
0x763A	0x51C5      	MOVF        LongToStr_i_L0, 0, 1
0x763C	0x25C3      	ADDWF       FARG_LongToStr_output, 0, 1
0x763E	0x6EE1      	MOVWF       FSR1L 
0x7640	0x51C6      	MOVF        LongToStr_i_L0+1, 0, 1
0x7642	0x21C4      	ADDWFC      FARG_LongToStr_output+1, 0, 1
0x7644	0x6EE2      	MOVWF       FSR1H 
0x7646	0x0E2D      	MOVLW       45
0x7648	0x6EE6      	MOVWF       POSTINC1 
;__Lib_Conversions.c,265 :: 		
L_LongToStr52:
;__Lib_Conversions.c,266 :: 		
L_end_LongToStr:
0x764A	0x0012      	RETURN      0
; end of _LongToStr
_can_do_write_message:
;lib_can.h,180 :: 		void can_do_write_message(){
;lib_can.h,188 :: 		if(!can.txQueu)
0x764C	0x0103      	MOVLB       3
0x764E	0x536A      	MOVF        _can+33, 1, 1
0x7650	0xE101      	BNZ         L_can_do_write_message156
;lib_can.h,189 :: 		return; //CAN_RW_WITHOUT_QUEU;
0x7652	0xD120      	BRA         L_end_can_do_write_message
L_can_do_write_message156:
;lib_can.h,192 :: 		if(can.temp >= CAN_MAX_TIME_ACK){
0x7654	0x0E0B      	MOVLW       11
0x7656	0x5DF7      	SUBWF       _can+174, 0, 1
0x7658	0xE102      	BNZ         L__can_do_write_message1141
0x765A	0x0EB8      	MOVLW       184
0x765C	0x5DF6      	SUBWF       _can+173, 0, 1
L__can_do_write_message1141:
0x765E	0xE308      	BNC         L_can_do_write_message157
;lib_can.h,193 :: 		maquinaE = 0;
0x7660	0x0102      	MOVLB       2
0x7662	0x6B02      	CLRF        can_do_write_message_maquinaE_L0, 1
;lib_can.h,194 :: 		can.txQueu = false;
0x7664	0x0103      	MOVLB       3
0x7666	0x6B6A      	CLRF        _can+33, 1
;lib_can.h,196 :: 		can.tx_status = CAN_RW_CORRUPT;
0x7668	0x0E03      	MOVLW       3
0x766A	0x6F6B      	MOVWF       _can+34, 1
;lib_can.h,197 :: 		can_user_write_message();
0x766C	0xF01FEC6F  	CALL        _can_user_write_message, 0
;lib_can.h,198 :: 		}
L_can_do_write_message157:
;lib_can.h,201 :: 		if(maquinaE == 0){  //Mando datos al buffer
0x7670	0x0102      	MOVLB       2
0x7672	0x5102      	MOVF        can_do_write_message_maquinaE_L0, 0, 1
0x7674	0x0A00      	XORLW       0
0x7676	0xE120      	BNZ         L_can_do_write_message158
;lib_can.h,202 :: 		maquinaE = 2;
0x7678	0x0E02      	MOVLW       2
0x767A	0x6F02      	MOVWF       can_do_write_message_maquinaE_L0, 1
;lib_can.h,203 :: 		datosEnviados = 0;
0x767C	0x6BE6      	CLRF        can_do_write_message_datosEnviados_L0, 1
;lib_can.h,204 :: 		finalizar = false;
0x767E	0x6BE5      	CLRF        can_do_write_message_finalizar_L0, 1
;lib_can.h,205 :: 		can.bufferTX[0] = can.id;             //Id del que envia
0x7680	0xF35AC355  	MOVFF       _can+12, _can+17
;lib_can.h,206 :: 		can.bufferTX[1] = CAN_PROTOCOL_INIT;  //Inicia comunicacion con el otro dispo
0x7684	0x0103      	MOVLB       3
0x7686	0x6B5B      	CLRF        _can+18, 1
;lib_can.h,207 :: 		can_write(can.txId, can.bufferTX, 2, can.txPriority, false);
0x7688	0xF501C36E  	MOVFF       _can+37, FARG_can_write_id
0x768C	0xF502C36F  	MOVFF       _can+38, FARG_can_write_id+1
0x7690	0xF503C370  	MOVFF       _can+39, FARG_can_write_id+2
0x7694	0xF504C371  	MOVFF       _can+40, FARG_can_write_id+3
0x7698	0x0E5A      	MOVLW       _can+17
0x769A	0x0105      	MOVLB       5
0x769C	0x6F05      	MOVWF       FARG_can_write_datos, 1
0x769E	0x0E03      	MOVLW       hi_addr(_can+17)
0x76A0	0x6F06      	MOVWF       FARG_can_write_datos+1, 1
0x76A2	0x0E02      	MOVLW       2
0x76A4	0x6F07      	MOVWF       FARG_can_write_size, 1
0x76A6	0xF508C36D  	MOVFF       _can+36, FARG_can_write_priority
0x76AA	0x6B09      	CLRF        FARG_can_write_rtr, 1
0x76AC	0xF017ECF5  	CALL        _can_write, 0
;lib_can.h,208 :: 		can.temp = 0;
0x76B0	0x0103      	MOVLB       3
0x76B2	0x6BF6      	CLRF        _can+173, 1
0x76B4	0x6BF7      	CLRF        _can+174, 1
;lib_can.h,209 :: 		}else if(maquinaE == 1){
0x76B6	0xD0EC      	BRA         L_can_do_write_message159
L_can_do_write_message158:
0x76B8	0x0102      	MOVLB       2
0x76BA	0x5102      	MOVF        can_do_write_message_maquinaE_L0, 0, 1
0x76BC	0x0A01      	XORLW       1
0x76BE	0xE164      	BNZ         L_can_do_write_message160
;lib_can.h,210 :: 		finalizar = !can.txBuffer[datosEnviados];
0x76C0	0x0E72      	MOVLW       _can+41
0x76C2	0x6E00      	MOVWF       R0 
0x76C4	0x0E03      	MOVLW       hi_addr(_can+41)
0x76C6	0x6E01      	MOVWF       R1 
0x76C8	0x51E6      	MOVF        can_do_write_message_datosEnviados_L0, 0, 1
0x76CA	0x2600      	ADDWF       R0, 1 
0x76CC	0xB0D8      	BTFSC       STATUS, 0 
0x76CE	0x2A01      	INCF        R1, 1 
0x76D0	0xFFE9C000  	MOVFF       R0, FSR0L
0x76D4	0xFFEAC001  	MOVFF       R1, FSR0H
0x76D8	0x52EE      	MOVF        POSTINC0, 1 
0x76DA	0x0E01      	MOVLW       1
0x76DC	0xA4D8      	BTFSS       STATUS, 2 
0x76DE	0x0E00      	MOVLW       0
0x76E0	0x6FE5      	MOVWF       can_do_write_message_finalizar_L0, 1
;lib_can.h,212 :: 		can.bufferTX[0] = can.id;
0x76E2	0xF35AC355  	MOVFF       _can+12, _can+17
;lib_can.h,214 :: 		can.bufferTX[1] = can.txBuffer[datosEnviados]?CAN_PROTOCOL_QUEU:CAN_PROTOCOL_END;
0x76E6	0xFFE9C000  	MOVFF       R0, FSR0L
0x76EA	0xFFEAC001  	MOVFF       R1, FSR0H
0x76EE	0x52EE      	MOVF        POSTINC0, 1 
0x76F0	0xE004      	BZ          L_can_do_write_message161
0x76F2	0x0E01      	MOVLW       1
0x76F4	0x0104      	MOVLB       4
0x76F6	0x6FBF      	MOVWF       ?FLOC___can_do_write_messageT670, 1
0x76F8	0xD003      	BRA         L_can_do_write_message162
L_can_do_write_message161:
0x76FA	0x0104      	MOVLB       4
0x76FC	0x0E02      	MOVLW       2
0x76FE	0x6FBF      	MOVWF       ?FLOC___can_do_write_messageT670, 1
L_can_do_write_message162:
0x7700	0xF35BC4BF  	MOVFF       ?FLOC___can_do_write_messageT670, _can+18
;lib_can.h,215 :: 		for(cont = 2; cont < 8 && can.txBuffer[datosEnviados]; cont++)
0x7704	0x0E02      	MOVLW       2
0x7706	0x6FC1      	MOVWF       can_do_write_message_cont_L0, 1
L_can_do_write_message163:
0x7708	0x0E08      	MOVLW       8
0x770A	0x5DC1      	SUBWF       can_do_write_message_cont_L0, 0, 1
0x770C	0xE223      	BC          L_can_do_write_message164
0x770E	0x0E72      	MOVLW       _can+41
0x7710	0x6EE9      	MOVWF       FSR0L 
0x7712	0x0E03      	MOVLW       hi_addr(_can+41)
0x7714	0x6EEA      	MOVWF       FSR0H 
0x7716	0x0102      	MOVLB       2
0x7718	0x51E6      	MOVF        can_do_write_message_datosEnviados_L0, 0, 1
0x771A	0x26E9      	ADDWF       FSR0L, 1 
0x771C	0xB0D8      	BTFSC       STATUS, 0 
0x771E	0x2AEA      	INCF        FSR0H, 1 
0x7720	0x52EE      	MOVF        POSTINC0, 1 
0x7722	0xE018      	BZ          L_can_do_write_message164
L__can_do_write_message954:
;lib_can.h,216 :: 		can.bufferTX[cont] = can.txBuffer[datosEnviados++];
0x7724	0x0E5A      	MOVLW       _can+17
0x7726	0x6EE1      	MOVWF       FSR1L 
0x7728	0x0E03      	MOVLW       hi_addr(_can+17)
0x772A	0x6EE2      	MOVWF       FSR1H 
0x772C	0x0104      	MOVLB       4
0x772E	0x51C1      	MOVF        can_do_write_message_cont_L0, 0, 1
0x7730	0x26E1      	ADDWF       FSR1L, 1 
0x7732	0xB0D8      	BTFSC       STATUS, 0 
0x7734	0x2AE2      	INCF        FSR1H, 1 
0x7736	0x0E72      	MOVLW       _can+41
0x7738	0x6EE9      	MOVWF       FSR0L 
0x773A	0x0E03      	MOVLW       hi_addr(_can+41)
0x773C	0x6EEA      	MOVWF       FSR0H 
0x773E	0x0102      	MOVLB       2
0x7740	0x51E6      	MOVF        can_do_write_message_datosEnviados_L0, 0, 1
0x7742	0x26E9      	ADDWF       FSR0L, 1 
0x7744	0xB0D8      	BTFSC       STATUS, 0 
0x7746	0x2AEA      	INCF        FSR0H, 1 
0x7748	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x774C	0x2BE6      	INCF        can_do_write_message_datosEnviados_L0, 1, 1
;lib_can.h,215 :: 		for(cont = 2; cont < 8 && can.txBuffer[datosEnviados]; cont++)
0x774E	0x0104      	MOVLB       4
0x7750	0x2BC1      	INCF        can_do_write_message_cont_L0, 1, 1
;lib_can.h,216 :: 		can.bufferTX[cont] = can.txBuffer[datosEnviados++];
0x7752	0xD7DA      	BRA         L_can_do_write_message163
L_can_do_write_message164:
;lib_can.h,219 :: 		can_write(can.txId, can.bufferTX, cont, can.txPriority, false);
0x7754	0xF501C36E  	MOVFF       _can+37, FARG_can_write_id
0x7758	0xF502C36F  	MOVFF       _can+38, FARG_can_write_id+1
0x775C	0xF503C370  	MOVFF       _can+39, FARG_can_write_id+2
0x7760	0xF504C371  	MOVFF       _can+40, FARG_can_write_id+3
0x7764	0x0E5A      	MOVLW       _can+17
0x7766	0x0105      	MOVLB       5
0x7768	0x6F05      	MOVWF       FARG_can_write_datos, 1
0x776A	0x0E03      	MOVLW       hi_addr(_can+17)
0x776C	0x6F06      	MOVWF       FARG_can_write_datos+1, 1
0x776E	0xF507C4C1  	MOVFF       can_do_write_message_cont_L0, FARG_can_write_size
0x7772	0xF508C36D  	MOVFF       _can+36, FARG_can_write_priority
0x7776	0x6B09      	CLRF        FARG_can_write_rtr, 1
0x7778	0xF017ECF5  	CALL        _can_write, 0
;lib_can.h,220 :: 		maquinaE++;  //Avanza al siguiente estado
0x777C	0x0102      	MOVLB       2
0x777E	0x2B02      	INCF        can_do_write_message_maquinaE_L0, 1, 1
;lib_can.h,221 :: 		can.temp = 0;
0x7780	0x0103      	MOVLB       3
0x7782	0x6BF6      	CLRF        _can+173, 1
0x7784	0x6BF7      	CLRF        _can+174, 1
;lib_can.h,222 :: 		}else if(maquinaE == 2){  //Escucha si recibio los datos
0x7786	0xD084      	BRA         L_can_do_write_message168
L_can_do_write_message160:
0x7788	0x0102      	MOVLB       2
0x778A	0x5102      	MOVF        can_do_write_message_maquinaE_L0, 0, 1
0x778C	0x0A02      	XORLW       2
0x778E	0xA4D8      	BTFSS       STATUS, 2 
0x7790	0xD072      	BRA         L_can_do_write_message169
;lib_can.h,223 :: 		if(can_read(&id, can.bufferRX, &can.rxSize) == CAN_RW_DATA){
0x7792	0x0EC2      	MOVLW       can_do_write_message_id_L0
0x7794	0x0105      	MOVLB       5
0x7796	0x6F01      	MOVWF       FARG_can_read_id, 1
0x7798	0x0E04      	MOVLW       hi_addr(can_do_write_message_id_L0)
0x779A	0x6F02      	MOVWF       FARG_can_read_id+1, 1
0x779C	0x0E62      	MOVLW       _can+25
0x779E	0x6F03      	MOVWF       FARG_can_read_datos, 1
0x77A0	0x0E03      	MOVLW       hi_addr(_can+25)
0x77A2	0x6F04      	MOVWF       FARG_can_read_datos+1, 1
0x77A4	0x0EF4      	MOVLW       _can+171
0x77A6	0x6F05      	MOVWF       FARG_can_read_size, 1
0x77A8	0x0E03      	MOVLW       hi_addr(_can+171)
0x77AA	0x6F06      	MOVWF       FARG_can_read_size+1, 1
0x77AC	0xF01AEC02  	CALL        _can_read, 0
0x77B0	0x5000      	MOVF        R0, 0 
0x77B2	0x0A01      	XORLW       1
0x77B4	0xE15F      	BNZ         L_can_do_write_message170
;lib_can.h,224 :: 		if(id == can.ipAddress){
0x77B6	0x0104      	MOVLB       4
0x77B8	0x51C5      	MOVF        can_do_write_message_id_L0+3, 0, 1
0x77BA	0x0103      	MOVLB       3
0x77BC	0x1950      	XORWF       _can+7, 0, 1
0x77BE	0xE10E      	BNZ         L__can_do_write_message1142
0x77C0	0x0104      	MOVLB       4
0x77C2	0x51C4      	MOVF        can_do_write_message_id_L0+2, 0, 1
0x77C4	0x0103      	MOVLB       3
0x77C6	0x194F      	XORWF       _can+6, 0, 1
0x77C8	0xE109      	BNZ         L__can_do_write_message1142
0x77CA	0x0104      	MOVLB       4
0x77CC	0x51C3      	MOVF        can_do_write_message_id_L0+1, 0, 1
0x77CE	0x0103      	MOVLB       3
0x77D0	0x194E      	XORWF       _can+5, 0, 1
0x77D2	0xE104      	BNZ         L__can_do_write_message1142
0x77D4	0x0104      	MOVLB       4
0x77D6	0x51C2      	MOVF        can_do_write_message_id_L0, 0, 1
0x77D8	0x0103      	MOVLB       3
0x77DA	0x194D      	XORWF       _can+4, 0, 1
L__can_do_write_message1142:
0x77DC	0xE14B      	BNZ         L_can_do_write_message171
;lib_can.h,226 :: 		if(can.bufferRX[0] == getByte(can.txId, 0)){
0x77DE	0x5162      	MOVF        _can+25, 0, 1
0x77E0	0x196E      	XORWF       _can+37, 0, 1
0x77E2	0xE13F      	BNZ         L_can_do_write_message172
;lib_can.h,227 :: 		if(can.bufferRX[1] == CAN_PROTOCOL_FREE){
0x77E4	0x5163      	MOVF        _can+26, 0, 1
0x77E6	0x0A04      	XORLW       4
0x77E8	0xE111      	BNZ         L_can_do_write_message173
;lib_can.h,229 :: 		maquinaE += !finalizar? -1:1;
0x77EA	0x0102      	MOVLB       2
0x77EC	0x53E5      	MOVF        can_do_write_message_finalizar_L0, 1, 1
0x77EE	0xE104      	BNZ         L_can_do_write_message174
0x77F0	0x0EFF      	MOVLW       255
0x77F2	0x0104      	MOVLB       4
0x77F4	0x6FC0      	MOVWF       ?FLOC___can_do_write_messageT701, 1
0x77F6	0xD003      	BRA         L_can_do_write_message175
L_can_do_write_message174:
0x77F8	0x0104      	MOVLB       4
0x77FA	0x0E01      	MOVLW       1
0x77FC	0x6FC0      	MOVWF       ?FLOC___can_do_write_messageT701, 1
L_can_do_write_message175:
0x77FE	0x51C0      	MOVF        ?FLOC___can_do_write_messageT701, 0, 1
0x7800	0x0102      	MOVLB       2
0x7802	0x2702      	ADDWF       can_do_write_message_maquinaE_L0, 1, 1
;lib_can.h,230 :: 		can.temp = 0;
0x7804	0x0103      	MOVLB       3
0x7806	0x6BF6      	CLRF        _can+173, 1
0x7808	0x6BF7      	CLRF        _can+174, 1
;lib_can.h,231 :: 		}else if(can.bufferRX[1] == CAN_PROTOCOL_INIT){
0x780A	0xD02A      	BRA         L_can_do_write_message176
L_can_do_write_message173:
0x780C	0x5163      	MOVF        _can+26, 0, 1
0x780E	0x0A00      	XORLW       0
0x7810	0xE11B      	BNZ         L_can_do_write_message177
;lib_can.h,233 :: 		can.bufferTX[0] = can.id;             //Id del que envia
0x7812	0xF35AC355  	MOVFF       _can+12, _can+17
;lib_can.h,234 :: 		can.bufferTX[1] = CAN_PROTOCOL_BUSY;  //Inicia comunicacion con el otro dispo
0x7816	0x0E03      	MOVLW       3
0x7818	0x6F5B      	MOVWF       _can+18, 1
;lib_can.h,235 :: 		can_write(can.txId, can.bufferTX, 2, 3, false);
0x781A	0xF501C36E  	MOVFF       _can+37, FARG_can_write_id
0x781E	0xF502C36F  	MOVFF       _can+38, FARG_can_write_id+1
0x7822	0xF503C370  	MOVFF       _can+39, FARG_can_write_id+2
0x7826	0xF504C371  	MOVFF       _can+40, FARG_can_write_id+3
0x782A	0x0E5A      	MOVLW       _can+17
0x782C	0x0105      	MOVLB       5
0x782E	0x6F05      	MOVWF       FARG_can_write_datos, 1
0x7830	0x0E03      	MOVLW       hi_addr(_can+17)
0x7832	0x6F06      	MOVWF       FARG_can_write_datos+1, 1
0x7834	0x0E02      	MOVLW       2
0x7836	0x6F07      	MOVWF       FARG_can_write_size, 1
0x7838	0x0E03      	MOVLW       3
0x783A	0x6F08      	MOVWF       FARG_can_write_priority, 1
0x783C	0x6B09      	CLRF        FARG_can_write_rtr, 1
0x783E	0xF017ECF5  	CALL        _can_write, 0
;lib_can.h,237 :: 		maquinaE = 0;
0x7842	0x0102      	MOVLB       2
0x7844	0x6B02      	CLRF        can_do_write_message_maquinaE_L0, 1
;lib_can.h,238 :: 		}else if(can.bufferRX[1] == CAN_PROTOCOL_BUSY){
0x7846	0xD00C      	BRA         L_can_do_write_message178
L_can_do_write_message177:
0x7848	0x0103      	MOVLB       3
0x784A	0x5163      	MOVF        _can+26, 0, 1
0x784C	0x0A03      	XORLW       3
0x784E	0xE108      	BNZ         L_can_do_write_message179
;lib_can.h,239 :: 		maquinaE = 0;
0x7850	0x0102      	MOVLB       2
0x7852	0x6B02      	CLRF        can_do_write_message_maquinaE_L0, 1
;lib_can.h,240 :: 		can.txQueu = false;
0x7854	0x0103      	MOVLB       3
0x7856	0x6B6A      	CLRF        _can+33, 1
;lib_can.h,242 :: 		can.tx_status = CAN_RW_CORRUPT;
0x7858	0x0E03      	MOVLW       3
0x785A	0x6F6B      	MOVWF       _can+34, 1
;lib_can.h,243 :: 		can_user_write_message();
0x785C	0xF01FEC6F  	CALL        _can_user_write_message, 0
;lib_can.h,244 :: 		}
L_can_do_write_message179:
L_can_do_write_message178:
L_can_do_write_message176:
;lib_can.h,245 :: 		}else{
0x7860	0xD009      	BRA         L_can_do_write_message180
L_can_do_write_message172:
;lib_can.h,246 :: 		if(can.bufferRX[1] == CAN_PROTOCOL_HEARTBEAT){
0x7862	0x0103      	MOVLB       3
0x7864	0x5163      	MOVF        _can+26, 0, 1
0x7866	0x0AFF      	XORLW       255
0x7868	0xE105      	BNZ         L_can_do_write_message181
;lib_can.h,247 :: 		can_user_guardHeartBeat(can.bufferRX[0]);
0x786A	0xF501C362  	MOVFF       _can+25, FARG_can_user_guardHeartBeat_idNodo
0x786E	0xF017ECED  	CALL        _can_user_guardHeartBeat, 0
;lib_can.h,248 :: 		return;
0x7872	0xD010      	BRA         L_end_can_do_write_message
;lib_can.h,249 :: 		}
L_can_do_write_message181:
;lib_can.h,250 :: 		}
L_can_do_write_message180:
;lib_can.h,251 :: 		}
L_can_do_write_message171:
;lib_can.h,252 :: 		}
L_can_do_write_message170:
;lib_can.h,253 :: 		}else if(maquinaE == 3){
0x7874	0xD00D      	BRA         L_can_do_write_message182
L_can_do_write_message169:
0x7876	0x0102      	MOVLB       2
0x7878	0x5102      	MOVF        can_do_write_message_maquinaE_L0, 0, 1
0x787A	0x0A03      	XORLW       3
0x787C	0xE109      	BNZ         L_can_do_write_message183
;lib_can.h,254 :: 		maquinaE = 0;
0x787E	0x6B02      	CLRF        can_do_write_message_maquinaE_L0, 1
;lib_can.h,255 :: 		can.txQueu = false;
0x7880	0x0103      	MOVLB       3
0x7882	0x6B6A      	CLRF        _can+33, 1
;lib_can.h,256 :: 		finalizar  = false;
0x7884	0x0102      	MOVLB       2
0x7886	0x6BE5      	CLRF        can_do_write_message_finalizar_L0, 1
;lib_can.h,257 :: 		can.tx_status = CAN_RW_ENVIADO;
0x7888	0x0103      	MOVLB       3
0x788A	0x6B6B      	CLRF        _can+34, 1
;lib_can.h,258 :: 		can_user_write_message();  //DATOS ENVIADOS CON EXITO
0x788C	0xF01FEC6F  	CALL        _can_user_write_message, 0
;lib_can.h,259 :: 		}
L_can_do_write_message183:
L_can_do_write_message182:
L_can_do_write_message168:
L_can_do_write_message159:
;lib_can.h,261 :: 		can.tx_status = 0;
0x7890	0x0103      	MOVLB       3
0x7892	0x6B6B      	CLRF        _can+34, 1
;lib_can.h,263 :: 		}
L_end_can_do_write_message:
0x7894	0x0012      	RETURN      0
; end of _can_do_write_message
_wiegand26_read_card:
;wiegand26.h,61 :: 		bool wiegand26_read_card(long *id){
;wiegand26.h,65 :: 		if(WIEGAN26_CONT == 26){
0x7896	0x0104      	MOVLB       4
0x7898	0x519C      	MOVF        Expendedora_WIEGAN26_CONT, 0, 1
0x789A	0x0A1A      	XORLW       26
0x789C	0xA4D8      	BTFSS       STATUS, 2 
0x789E	0xD098      	BRA         L_wiegand26_read_card541
;wiegand26.h,66 :: 		delay_ms(_WIEGAND26_PULSE_TIME_MAX_MS);  //Para asegurar datos de 26 bits
0x78A0	0x0E41      	MOVLW       65
0x78A2	0x6E0C      	MOVWF       R12, 0
0x78A4	0x0EEE      	MOVLW       238
0x78A6	0x6E0D      	MOVWF       R13, 0
L_wiegand26_read_card542:
0x78A8	0x2E0D      	DECFSZ      R13, 1, 0
0x78AA	0xD7FE      	BRA         L_wiegand26_read_card542
0x78AC	0x2E0C      	DECFSZ      R12, 1, 0
0x78AE	0xD7FC      	BRA         L_wiegand26_read_card542
0x78B0	0x0000      	NOP
;wiegand26.h,68 :: 		if(WIEGAN26_CONT != 26)
0x78B2	0x519C      	MOVF        Expendedora_WIEGAN26_CONT, 0, 1
0x78B4	0x0A1A      	XORLW       26
0x78B6	0xE002      	BZ          L_wiegand26_read_card543
;wiegand26.h,69 :: 		return false;
0x78B8	0x6A00      	CLRF        R0 
0x78BA	0xD08B      	BRA         L_end_wiegand26_read_card
L_wiegand26_read_card543:
;wiegand26.h,71 :: 		WIEGAN26_BUFFER = WIEGAN26_DATA;
0x78BC	0xF2D7C2D3  	MOVFF       Expendedora_WIEGAN26_DATA, Expendedora_WIEGAN26_BUFFER
0x78C0	0xF2D8C2D4  	MOVFF       Expendedora_WIEGAN26_DATA+1, Expendedora_WIEGAN26_BUFFER+1
0x78C4	0xF2D9C2D5  	MOVFF       Expendedora_WIEGAN26_DATA+2, Expendedora_WIEGAN26_BUFFER+2
0x78C8	0xF2DAC2D6  	MOVFF       Expendedora_WIEGAN26_DATA+3, Expendedora_WIEGAN26_BUFFER+3
;wiegand26.h,72 :: 		aux = WIEGAN26_BUFFER;
0x78CC	0xF00EC2D3  	MOVFF       Expendedora_WIEGAN26_DATA, R14
0x78D0	0xF00FC2D4  	MOVFF       Expendedora_WIEGAN26_DATA+1, R15
0x78D4	0xF010C2D5  	MOVFF       Expendedora_WIEGAN26_DATA+2, R16
0x78D8	0xF011C2D6  	MOVFF       Expendedora_WIEGAN26_DATA+3, R17
;wiegand26.h,74 :: 		WIEGAN26_CONT = 0;    //Resetear puntero
0x78DC	0x6B9C      	CLRF        Expendedora_WIEGAN26_CONT, 1
;wiegand26.h,75 :: 		WIEGAN26_DATA = 0;    //Resetear la informacion
0x78DE	0x0102      	MOVLB       2
0x78E0	0x6BD3      	CLRF        Expendedora_WIEGAN26_DATA, 1
0x78E2	0x6BD4      	CLRF        Expendedora_WIEGAN26_DATA+1, 1
0x78E4	0x6BD5      	CLRF        Expendedora_WIEGAN26_DATA+2, 1
0x78E6	0x6BD6      	CLRF        Expendedora_WIEGAN26_DATA+3, 1
;wiegand26.h,77 :: 		for(paridad = 0, i = 0; i < 13; i++){
0x78E8	0x6A0A      	CLRF        R10 
0x78EA	0x6A09      	CLRF        R9 
L_wiegand26_read_card544:
0x78EC	0x0E0D      	MOVLW       13
0x78EE	0x5C09      	SUBWF       R9, 0 
0x78F0	0xE20E      	BC          L_wiegand26_read_card545
;wiegand26.h,78 :: 		paridad += getByte(aux,0).B0;
0x78F2	0x6A00      	CLRF        R0 
0x78F4	0xB00E      	BTFSC       R14, 0 
0x78F6	0x2A00      	INCF        R0, 1 
0x78F8	0x5000      	MOVF        R0, 0 
0x78FA	0x260A      	ADDWF       R10, 1 
;wiegand26.h,79 :: 		aux >>= 1;
0x78FC	0x3211      	RRCF        R17, 1 
0x78FE	0x3210      	RRCF        R16, 1 
0x7900	0x320F      	RRCF        R15, 1 
0x7902	0x320E      	RRCF        R14, 1 
0x7904	0x9E11      	BCF         R17, 7 
0x7906	0xBC11      	BTFSC       R17, 6 
0x7908	0x8E11      	BSF         R17, 7 
;wiegand26.h,77 :: 		for(paridad = 0, i = 0; i < 13; i++){
0x790A	0x2A09      	INCF        R9, 1 
;wiegand26.h,80 :: 		}
0x790C	0xD7EF      	BRA         L_wiegand26_read_card544
L_wiegand26_read_card545:
;wiegand26.h,82 :: 		if(paridad % 2 != 1)
0x790E	0x0E01      	MOVLW       1
0x7910	0x140A      	ANDWF       R10, 0 
0x7912	0x6E01      	MOVWF       R1 
0x7914	0x5001      	MOVF        R1, 0 
0x7916	0x0A01      	XORLW       1
0x7918	0xE002      	BZ          L_wiegand26_read_card547
;wiegand26.h,83 :: 		return false;
0x791A	0x6A00      	CLRF        R0 
0x791C	0xD05A      	BRA         L_end_wiegand26_read_card
L_wiegand26_read_card547:
;wiegand26.h,85 :: 		for(paridad = 0, i = 0; i < 13; i++){
0x791E	0x6A0A      	CLRF        R10 
0x7920	0x6A09      	CLRF        R9 
L_wiegand26_read_card548:
0x7922	0x0E0D      	MOVLW       13
0x7924	0x5C09      	SUBWF       R9, 0 
0x7926	0xE20E      	BC          L_wiegand26_read_card549
;wiegand26.h,86 :: 		paridad += getByte(aux,0).B0;
0x7928	0x6A00      	CLRF        R0 
0x792A	0xB00E      	BTFSC       R14, 0 
0x792C	0x2A00      	INCF        R0, 1 
0x792E	0x5000      	MOVF        R0, 0 
0x7930	0x260A      	ADDWF       R10, 1 
;wiegand26.h,87 :: 		aux >>= 1;
0x7932	0x3211      	RRCF        R17, 1 
0x7934	0x3210      	RRCF        R16, 1 
0x7936	0x320F      	RRCF        R15, 1 
0x7938	0x320E      	RRCF        R14, 1 
0x793A	0x9E11      	BCF         R17, 7 
0x793C	0xBC11      	BTFSC       R17, 6 
0x793E	0x8E11      	BSF         R17, 7 
;wiegand26.h,85 :: 		for(paridad = 0, i = 0; i < 13; i++){
0x7940	0x2A09      	INCF        R9, 1 
;wiegand26.h,88 :: 		}
0x7942	0xD7EF      	BRA         L_wiegand26_read_card548
L_wiegand26_read_card549:
;wiegand26.h,90 :: 		if(paridad % 2 != 0)
0x7944	0x0E01      	MOVLW       1
0x7946	0x140A      	ANDWF       R10, 0 
0x7948	0x6E01      	MOVWF       R1 
0x794A	0x5001      	MOVF        R1, 0 
0x794C	0x0A00      	XORLW       0
0x794E	0xE002      	BZ          L_wiegand26_read_card551
;wiegand26.h,91 :: 		return false;
0x7950	0x6A00      	CLRF        R0 
0x7952	0xD03F      	BRA         L_end_wiegand26_read_card
L_wiegand26_read_card551:
;wiegand26.h,93 :: 		*id = WIEGAN26_BUFFER;
0x7954	0xFFE1C4BF  	MOVFF       FARG_wiegand26_read_card_id, FSR1L
0x7958	0xFFE2C4C0  	MOVFF       FARG_wiegand26_read_card_id+1, FSR1H
0x795C	0xFFE6C2D7  	MOVFF       Expendedora_WIEGAN26_BUFFER, POSTINC1
0x7960	0xFFE6C2D8  	MOVFF       Expendedora_WIEGAN26_BUFFER+1, POSTINC1
0x7964	0xFFE6C2D9  	MOVFF       Expendedora_WIEGAN26_BUFFER+2, POSTINC1
0x7968	0xFFE6C2DA  	MOVFF       Expendedora_WIEGAN26_BUFFER+3, POSTINC1
;wiegand26.h,94 :: 		*id >>= 1;              //Se recorre a la derecha, quitar bit paridad imparidad
0x796C	0xFFE9C4BF  	MOVFF       FARG_wiegand26_read_card_id, FSR0L
0x7970	0xFFEAC4C0  	MOVFF       FARG_wiegand26_read_card_id+1, FSR0H
0x7974	0xF005CFEE  	MOVFF       POSTINC0, R5
0x7978	0xF006CFEE  	MOVFF       POSTINC0, R6
0x797C	0xF007CFEE  	MOVFF       POSTINC0, R7
0x7980	0xF008CFEE  	MOVFF       POSTINC0, R8
0x7984	0xF000C005  	MOVFF       R5, R0
0x7988	0xF001C006  	MOVFF       R6, R1
0x798C	0xF002C007  	MOVFF       R7, R2
0x7990	0xF003C008  	MOVFF       R8, R3
0x7994	0x3203      	RRCF        R3, 1 
0x7996	0x3202      	RRCF        R2, 1 
0x7998	0x3201      	RRCF        R1, 1 
0x799A	0x3200      	RRCF        R0, 1 
0x799C	0x9E03      	BCF         R3, 7 
0x799E	0xBC03      	BTFSC       R3, 6 
0x79A0	0x8E03      	BSF         R3, 7 
0x79A2	0xFFE1C4BF  	MOVFF       FARG_wiegand26_read_card_id, FSR1L
0x79A6	0xFFE2C4C0  	MOVFF       FARG_wiegand26_read_card_id+1, FSR1H
0x79AA	0xFFE6C000  	MOVFF       R0, POSTINC1
0x79AE	0xFFE6C001  	MOVFF       R1, POSTINC1
0x79B2	0xFFE6C002  	MOVFF       R2, POSTINC1
0x79B6	0xFFE6C003  	MOVFF       R3, POSTINC1
;wiegand26.h,95 :: 		getByte(*id, 3) = 0x00; //Quitamos el bit de paridad par
0x79BA	0x0E03      	MOVLW       3
0x79BC	0x0104      	MOVLB       4
0x79BE	0x25BF      	ADDWF       FARG_wiegand26_read_card_id, 0, 1
0x79C0	0x6EE1      	MOVWF       FSR1L 
0x79C2	0x0E00      	MOVLW       0
0x79C4	0x21C0      	ADDWFC      FARG_wiegand26_read_card_id+1, 0, 1
0x79C6	0x6EE2      	MOVWF       FSR1H 
0x79C8	0x6AE6      	CLRF        POSTINC1 
;wiegand26.h,96 :: 		return true;
0x79CA	0x0E01      	MOVLW       1
0x79CC	0x6E00      	MOVWF       R0 
0x79CE	0xD001      	BRA         L_end_wiegand26_read_card
;wiegand26.h,97 :: 		}
L_wiegand26_read_card541:
;wiegand26.h,99 :: 		return false;
0x79D0	0x6A00      	CLRF        R0 
;wiegand26.h,100 :: 		}
L_end_wiegand26_read_card:
0x79D2	0x0012      	RETURN      0
; end of _wiegand26_read_card
_string_cpy:
;string.h,65 :: 		char string_cpy(char *destino, char *origen){
;string.h,66 :: 		char cont = 0;
0x79D4	0x0104      	MOVLB       4
0x79D6	0x6BC3      	CLRF        string_cpy_cont_L0, 1
;string.h,68 :: 		while(origen[cont])
L_string_cpy21:
0x79D8	0x51C3      	MOVF        string_cpy_cont_L0, 0, 1
0x79DA	0x25C1      	ADDWF       FARG_string_cpy_origen, 0, 1
0x79DC	0x6EE9      	MOVWF       FSR0L 
0x79DE	0x0E00      	MOVLW       0
0x79E0	0x21C2      	ADDWFC      FARG_string_cpy_origen+1, 0, 1
0x79E2	0x6EEA      	MOVWF       FSR0H 
0x79E4	0x52EE      	MOVF        POSTINC0, 1 
0x79E6	0xE010      	BZ          L_string_cpy22
;string.h,69 :: 		destino[cont] = origen[cont++];
0x79E8	0x51C3      	MOVF        string_cpy_cont_L0, 0, 1
0x79EA	0x25BF      	ADDWF       FARG_string_cpy_destino, 0, 1
0x79EC	0x6EE1      	MOVWF       FSR1L 
0x79EE	0x0E00      	MOVLW       0
0x79F0	0x21C0      	ADDWFC      FARG_string_cpy_destino+1, 0, 1
0x79F2	0x6EE2      	MOVWF       FSR1H 
0x79F4	0x51C3      	MOVF        string_cpy_cont_L0, 0, 1
0x79F6	0x25C1      	ADDWF       FARG_string_cpy_origen, 0, 1
0x79F8	0x6EE9      	MOVWF       FSR0L 
0x79FA	0x0E00      	MOVLW       0
0x79FC	0x21C2      	ADDWFC      FARG_string_cpy_origen+1, 0, 1
0x79FE	0x6EEA      	MOVWF       FSR0H 
0x7A00	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x7A04	0x2BC3      	INCF        string_cpy_cont_L0, 1, 1
0x7A06	0xD7E8      	BRA         L_string_cpy21
L_string_cpy22:
;string.h,70 :: 		destino[cont] = 0;              //Final de cadena
0x7A08	0x51C3      	MOVF        string_cpy_cont_L0, 0, 1
0x7A0A	0x25BF      	ADDWF       FARG_string_cpy_destino, 0, 1
0x7A0C	0x6EE1      	MOVWF       FSR1L 
0x7A0E	0x0E00      	MOVLW       0
0x7A10	0x21C0      	ADDWFC      FARG_string_cpy_destino+1, 0, 1
0x7A12	0x6EE2      	MOVWF       FSR1H 
0x7A14	0x6AE6      	CLRF        POSTINC1 
;string.h,73 :: 		return cont;
0x7A16	0xF000C4C3  	MOVFF       string_cpy_cont_L0, R0
;string.h,74 :: 		}
L_end_string_cpy:
0x7A1A	0x0012      	RETURN      0
; end of _string_cpy
_wiegand26_enable:
;wiegand26.h,138 :: 		void wiegand26_enable(){
;wiegand26.h,139 :: 		external_int0_enable(true);
0x7A1C	0x0E01      	MOVLW       1
0x7A1E	0x0105      	MOVLB       5
0x7A20	0x6F01      	MOVWF       FARG_external_int0_enable_enable, 1
0x7A22	0xF01DEC12  	CALL        _external_int0_enable, 0
;wiegand26.h,140 :: 		external_int1_enable(true);
0x7A26	0x0E01      	MOVLW       1
0x7A28	0x6F01      	MOVWF       FARG_external_int1_enable_enable, 1
0x7A2A	0xF017ECEE  	CALL        _external_int1_enable, 0
;wiegand26.h,141 :: 		}
L_end_wiegand26_enable:
0x7A2E	0x0012      	RETURN      0
; end of _wiegand26_enable
_clamp:
;miscelaneos.h,37 :: 		long clamp(long valor, long min, long max){
;miscelaneos.h,38 :: 		if(valor > max)
0x7A30	0x0E80      	MOVLW       128
0x7A32	0x0104      	MOVLB       4
0x7A34	0x19CA      	XORWF       FARG_clamp_max+3, 0, 1
0x7A36	0x6E00      	MOVWF       R0 
0x7A38	0x0E80      	MOVLW       128
0x7A3A	0x19C2      	XORWF       FARG_clamp_valor+3, 0, 1
0x7A3C	0x5C00      	SUBWF       R0, 0 
0x7A3E	0xE108      	BNZ         L__clamp1024
0x7A40	0x51C1      	MOVF        FARG_clamp_valor+2, 0, 1
0x7A42	0x5DC9      	SUBWF       FARG_clamp_max+2, 0, 1
0x7A44	0xE105      	BNZ         L__clamp1024
0x7A46	0x51C0      	MOVF        FARG_clamp_valor+1, 0, 1
0x7A48	0x5DC8      	SUBWF       FARG_clamp_max+1, 0, 1
0x7A4A	0xE102      	BNZ         L__clamp1024
0x7A4C	0x51BF      	MOVF        FARG_clamp_valor, 0, 1
0x7A4E	0x5DC7      	SUBWF       FARG_clamp_max, 0, 1
L__clamp1024:
0x7A50	0xE209      	BC          L_clamp2
;miscelaneos.h,39 :: 		valor = max;
0x7A52	0xF4BFC4C7  	MOVFF       FARG_clamp_max, FARG_clamp_valor
0x7A56	0xF4C0C4C8  	MOVFF       FARG_clamp_max+1, FARG_clamp_valor+1
0x7A5A	0xF4C1C4C9  	MOVFF       FARG_clamp_max+2, FARG_clamp_valor+2
0x7A5E	0xF4C2C4CA  	MOVFF       FARG_clamp_max+3, FARG_clamp_valor+3
0x7A62	0xD018      	BRA         L_clamp3
L_clamp2:
;miscelaneos.h,40 :: 		else if(valor < min)
0x7A64	0x0E80      	MOVLW       128
0x7A66	0x19C2      	XORWF       FARG_clamp_valor+3, 0, 1
0x7A68	0x6E00      	MOVWF       R0 
0x7A6A	0x0E80      	MOVLW       128
0x7A6C	0x19C6      	XORWF       FARG_clamp_min+3, 0, 1
0x7A6E	0x5C00      	SUBWF       R0, 0 
0x7A70	0xE108      	BNZ         L__clamp1025
0x7A72	0x51C5      	MOVF        FARG_clamp_min+2, 0, 1
0x7A74	0x5DC1      	SUBWF       FARG_clamp_valor+2, 0, 1
0x7A76	0xE105      	BNZ         L__clamp1025
0x7A78	0x51C4      	MOVF        FARG_clamp_min+1, 0, 1
0x7A7A	0x5DC0      	SUBWF       FARG_clamp_valor+1, 0, 1
0x7A7C	0xE102      	BNZ         L__clamp1025
0x7A7E	0x51C3      	MOVF        FARG_clamp_min, 0, 1
0x7A80	0x5DBF      	SUBWF       FARG_clamp_valor, 0, 1
L__clamp1025:
0x7A82	0xE208      	BC          L_clamp4
;miscelaneos.h,41 :: 		valor = min;
0x7A84	0xF4BFC4C3  	MOVFF       FARG_clamp_min, FARG_clamp_valor
0x7A88	0xF4C0C4C4  	MOVFF       FARG_clamp_min+1, FARG_clamp_valor+1
0x7A8C	0xF4C1C4C5  	MOVFF       FARG_clamp_min+2, FARG_clamp_valor+2
0x7A90	0xF4C2C4C6  	MOVFF       FARG_clamp_min+3, FARG_clamp_valor+3
L_clamp4:
L_clamp3:
;miscelaneos.h,43 :: 		return valor;
0x7A94	0xF000C4BF  	MOVFF       FARG_clamp_valor, R0
0x7A98	0xF001C4C0  	MOVFF       FARG_clamp_valor+1, R1
0x7A9C	0xF002C4C1  	MOVFF       FARG_clamp_valor+2, R2
0x7AA0	0xF003C4C2  	MOVFF       FARG_clamp_valor+3, R3
;miscelaneos.h,44 :: 		}
L_end_clamp:
0x7AA4	0x0012      	RETURN      0
; end of _clamp
_wiegand26_read_nip:
;wiegand26.h,102 :: 		bool wiegand26_read_nip(int *nip){
;wiegand26.h,105 :: 		if(WIEGAN26_CONT == 32){
0x7AA6	0x0104      	MOVLB       4
0x7AA8	0x519C      	MOVF        Expendedora_WIEGAN26_CONT, 0, 1
0x7AAA	0x0A20      	XORLW       32
0x7AAC	0xA4D8      	BTFSS       STATUS, 2 
0x7AAE	0xD0AD      	BRA         L_wiegand26_read_nip552
;wiegand26.h,106 :: 		delay_ms(_WIEGAND26_PULSE_TIME_MAX_MS);  //Para asegurar datos de 26 bits
0x7AB0	0x0E41      	MOVLW       65
0x7AB2	0x6E0C      	MOVWF       R12, 0
0x7AB4	0x0EEE      	MOVLW       238
0x7AB6	0x6E0D      	MOVWF       R13, 0
L_wiegand26_read_nip553:
0x7AB8	0x2E0D      	DECFSZ      R13, 1, 0
0x7ABA	0xD7FE      	BRA         L_wiegand26_read_nip553
0x7ABC	0x2E0C      	DECFSZ      R12, 1, 0
0x7ABE	0xD7FC      	BRA         L_wiegand26_read_nip553
0x7AC0	0x0000      	NOP
;wiegand26.h,108 :: 		if(WIEGAN26_CONT != 32)
0x7AC2	0x519C      	MOVF        Expendedora_WIEGAN26_CONT, 0, 1
0x7AC4	0x0A20      	XORLW       32
0x7AC6	0xE002      	BZ          L_wiegand26_read_nip554
;wiegand26.h,109 :: 		return false;
0x7AC8	0x6A00      	CLRF        R0 
0x7ACA	0xD0A0      	BRA         L_end_wiegand26_read_nip
L_wiegand26_read_nip554:
;wiegand26.h,112 :: 		WIEGAN26_BUFFER = WIEGAN26_DATA;
0x7ACC	0xF2D7C2D3  	MOVFF       Expendedora_WIEGAN26_DATA, Expendedora_WIEGAN26_BUFFER
0x7AD0	0xF2D8C2D4  	MOVFF       Expendedora_WIEGAN26_DATA+1, Expendedora_WIEGAN26_BUFFER+1
0x7AD4	0xF2D9C2D5  	MOVFF       Expendedora_WIEGAN26_DATA+2, Expendedora_WIEGAN26_BUFFER+2
0x7AD8	0xF2DAC2D6  	MOVFF       Expendedora_WIEGAN26_DATA+3, Expendedora_WIEGAN26_BUFFER+3
;wiegand26.h,114 :: 		WIEGAN26_CONT = 0;    //Resetear puntero
0x7ADC	0x6B9C      	CLRF        Expendedora_WIEGAN26_CONT, 1
;wiegand26.h,115 :: 		WIEGAN26_DATA = 0;    //Resetear la informacion
0x7ADE	0x0102      	MOVLB       2
0x7AE0	0x6BD3      	CLRF        Expendedora_WIEGAN26_DATA, 1
0x7AE2	0x6BD4      	CLRF        Expendedora_WIEGAN26_DATA+1, 1
0x7AE4	0x6BD5      	CLRF        Expendedora_WIEGAN26_DATA+2, 1
0x7AE6	0x6BD6      	CLRF        Expendedora_WIEGAN26_DATA+3, 1
;wiegand26.h,118 :: 		if(!wiegand26_checkTouch(4))
0x7AE8	0x0E04      	MOVLW       4
0x7AEA	0x0105      	MOVLB       5
0x7AEC	0x6F01      	MOVWF       FARG_wiegand26_checkTouch_bytes, 1
0x7AEE	0xF020EC17  	CALL        _wiegand26_checkTouch, 0
0x7AF2	0x5200      	MOVF        R0, 1 
0x7AF4	0xE102      	BNZ         L_wiegand26_read_nip555
;wiegand26.h,119 :: 		return false;
0x7AF6	0x6A00      	CLRF        R0 
0x7AF8	0xD089      	BRA         L_end_wiegand26_read_nip
L_wiegand26_read_nip555:
;wiegand26.h,121 :: 		for(i = 0; i < 4; i++){
0x7AFA	0x0104      	MOVLB       4
0x7AFC	0x6BC1      	CLRF        wiegand26_read_nip_i_L0, 1
L_wiegand26_read_nip556:
0x7AFE	0x0E80      	MOVLW       128
0x7B00	0x19C1      	XORWF       wiegand26_read_nip_i_L0, 0, 1
0x7B02	0x6E00      	MOVWF       R0 
0x7B04	0x0E80      	MOVLW       128
0x7B06	0x0A04      	XORLW       4
0x7B08	0x5C00      	SUBWF       R0, 0 
0x7B0A	0xE236      	BC          L_wiegand26_read_nip557
;wiegand26.h,122 :: 		getByte(WIEGAN26_BUFFER,i) &= 0x0F;
0x7B0C	0x0ED7      	MOVLW       Expendedora_WIEGAN26_BUFFER
0x7B0E	0x6E01      	MOVWF       R1 
0x7B10	0x0E02      	MOVLW       hi_addr(Expendedora_WIEGAN26_BUFFER)
0x7B12	0x6E02      	MOVWF       R2 
0x7B14	0x51C1      	MOVF        wiegand26_read_nip_i_L0, 0, 1
0x7B16	0x2601      	ADDWF       R1, 1 
0x7B18	0x0E00      	MOVLW       0
0x7B1A	0xBFC1      	BTFSC       wiegand26_read_nip_i_L0, 7, 1
0x7B1C	0x0EFF      	MOVLW       255
0x7B1E	0x2202      	ADDWFC      R2, 1 
0x7B20	0xFFE9C001  	MOVFF       R1, FSR0L
0x7B24	0xFFEAC002  	MOVFF       R2, FSR0H
0x7B28	0x0E0F      	MOVLW       15
0x7B2A	0x14EE      	ANDWF       POSTINC0, 0 
0x7B2C	0x6E00      	MOVWF       R0 
0x7B2E	0xFFE1C001  	MOVFF       R1, FSR1L
0x7B32	0xFFE2C002  	MOVFF       R2, FSR1H
0x7B36	0xFFE6C000  	MOVFF       R0, POSTINC1
;wiegand26.h,123 :: 		if(getByte(WIEGAN26_BUFFER,i) == 0x0A || getByte(WIEGAN26_BUFFER,i) == 0x0B)
0x7B3A	0x0ED7      	MOVLW       Expendedora_WIEGAN26_BUFFER
0x7B3C	0x6EE9      	MOVWF       FSR0L 
0x7B3E	0x0E02      	MOVLW       hi_addr(Expendedora_WIEGAN26_BUFFER)
0x7B40	0x6EEA      	MOVWF       FSR0H 
0x7B42	0x51C1      	MOVF        wiegand26_read_nip_i_L0, 0, 1
0x7B44	0x26E9      	ADDWF       FSR0L, 1 
0x7B46	0x0E00      	MOVLW       0
0x7B48	0xBFC1      	BTFSC       wiegand26_read_nip_i_L0, 7, 1
0x7B4A	0x0EFF      	MOVLW       255
0x7B4C	0x22EA      	ADDWFC      FSR0H, 1 
0x7B4E	0x50EE      	MOVF        POSTINC0, 0 
0x7B50	0x0A0A      	XORLW       10
0x7B52	0xE00E      	BZ          L__wiegand26_read_nip990
0x7B54	0x0ED7      	MOVLW       Expendedora_WIEGAN26_BUFFER
0x7B56	0x6EE9      	MOVWF       FSR0L 
0x7B58	0x0E02      	MOVLW       hi_addr(Expendedora_WIEGAN26_BUFFER)
0x7B5A	0x6EEA      	MOVWF       FSR0H 
0x7B5C	0x51C1      	MOVF        wiegand26_read_nip_i_L0, 0, 1
0x7B5E	0x26E9      	ADDWF       FSR0L, 1 
0x7B60	0x0E00      	MOVLW       0
0x7B62	0xBFC1      	BTFSC       wiegand26_read_nip_i_L0, 7, 1
0x7B64	0x0EFF      	MOVLW       255
0x7B66	0x22EA      	ADDWFC      FSR0H, 1 
0x7B68	0x50EE      	MOVF        POSTINC0, 0 
0x7B6A	0x0A0B      	XORLW       11
0x7B6C	0xE001      	BZ          L__wiegand26_read_nip990
0x7B6E	0xD002      	BRA         L_wiegand26_read_nip561
L__wiegand26_read_nip990:
;wiegand26.h,124 :: 		return false;
0x7B70	0x6A00      	CLRF        R0 
0x7B72	0xD04C      	BRA         L_end_wiegand26_read_nip
L_wiegand26_read_nip561:
;wiegand26.h,121 :: 		for(i = 0; i < 4; i++){
0x7B74	0x2BC1      	INCF        wiegand26_read_nip_i_L0, 1, 1
;wiegand26.h,125 :: 		}
0x7B76	0xD7C3      	BRA         L_wiegand26_read_nip556
L_wiegand26_read_nip557:
;wiegand26.h,127 :: 		*nip = 0;
0x7B78	0xFFE1C4BF  	MOVFF       FARG_wiegand26_read_nip_nip, FSR1L
0x7B7C	0xFFE2C4C0  	MOVFF       FARG_wiegand26_read_nip_nip+1, FSR1H
0x7B80	0x6AE6      	CLRF        POSTINC1 
0x7B82	0x6AE6      	CLRF        POSTINC1 
;wiegand26.h,128 :: 		for(i = 3; i >= 0; i--){
0x7B84	0x0E03      	MOVLW       3
0x7B86	0x6FC1      	MOVWF       wiegand26_read_nip_i_L0, 1
L_wiegand26_read_nip562:
0x7B88	0x0E80      	MOVLW       128
0x7B8A	0xBFC1      	BTFSC       wiegand26_read_nip_i_L0, 7, 1
0x7B8C	0x0E7F      	MOVLW       127
0x7B8E	0x6E00      	MOVWF       R0 
0x7B90	0x0E80      	MOVLW       128
0x7B92	0x5C00      	SUBWF       R0, 0 
0x7B94	0xE102      	BNZ         L__wiegand26_read_nip1339
0x7B96	0x0E00      	MOVLW       0
0x7B98	0x5DC1      	SUBWF       wiegand26_read_nip_i_L0, 0, 1
L__wiegand26_read_nip1339:
0x7B9A	0xE334      	BNC         L_wiegand26_read_nip563
;wiegand26.h,129 :: 		*nip *= 10;
0x7B9C	0xFFE9C4BF  	MOVFF       FARG_wiegand26_read_nip_nip, FSR0L
0x7BA0	0xFFEAC4C0  	MOVFF       FARG_wiegand26_read_nip_nip+1, FSR0H
0x7BA4	0xF000CFEE  	MOVFF       POSTINC0, R0
0x7BA8	0xF001CFEE  	MOVFF       POSTINC0, R1
0x7BAC	0x0E0A      	MOVLW       10
0x7BAE	0x6E04      	MOVWF       R4 
0x7BB0	0x0E00      	MOVLW       0
0x7BB2	0x6E05      	MOVWF       R5 
0x7BB4	0xF002EC54  	CALL        _Mul_16X16_U, 0
0x7BB8	0xFFE1C4BF  	MOVFF       FARG_wiegand26_read_nip_nip, FSR1L
0x7BBC	0xFFE2C4C0  	MOVFF       FARG_wiegand26_read_nip_nip+1, FSR1H
0x7BC0	0xFFE6C000  	MOVFF       R0, POSTINC1
0x7BC4	0xFFE6C001  	MOVFF       R1, POSTINC1
;wiegand26.h,130 :: 		*nip += getByte(WIEGAN26_BUFFER,i);
0x7BC8	0x0ED7      	MOVLW       Expendedora_WIEGAN26_BUFFER
0x7BCA	0x6ED9      	MOVWF       FSR2L 
0x7BCC	0x0E02      	MOVLW       hi_addr(Expendedora_WIEGAN26_BUFFER)
0x7BCE	0x6EDA      	MOVWF       FSR2H 
0x7BD0	0x51C1      	MOVF        wiegand26_read_nip_i_L0, 0, 1
0x7BD2	0x26D9      	ADDWF       FSR2L, 1 
0x7BD4	0x0E00      	MOVLW       0
0x7BD6	0xBFC1      	BTFSC       wiegand26_read_nip_i_L0, 7, 1
0x7BD8	0x0EFF      	MOVLW       255
0x7BDA	0x22DA      	ADDWFC      FSR2H, 1 
0x7BDC	0xFFE9C4BF  	MOVFF       FARG_wiegand26_read_nip_nip, FSR0L
0x7BE0	0xFFEAC4C0  	MOVFF       FARG_wiegand26_read_nip_nip+1, FSR0H
0x7BE4	0x50DE      	MOVF        POSTINC2, 0 
0x7BE6	0x24EE      	ADDWF       POSTINC0, 0 
0x7BE8	0x6E00      	MOVWF       R0 
0x7BEA	0x0E00      	MOVLW       0
0x7BEC	0x20EE      	ADDWFC      POSTINC0, 0 
0x7BEE	0x6E01      	MOVWF       R1 
0x7BF0	0xFFE1C4BF  	MOVFF       FARG_wiegand26_read_nip_nip, FSR1L
0x7BF4	0xFFE2C4C0  	MOVFF       FARG_wiegand26_read_nip_nip+1, FSR1H
0x7BF8	0xFFE6C000  	MOVFF       R0, POSTINC1
0x7BFC	0xFFE6C001  	MOVFF       R1, POSTINC1
;wiegand26.h,128 :: 		for(i = 3; i >= 0; i--){
0x7C00	0x07C1      	DECF        wiegand26_read_nip_i_L0, 1, 1
;wiegand26.h,131 :: 		}
0x7C02	0xD7C2      	BRA         L_wiegand26_read_nip562
L_wiegand26_read_nip563:
;wiegand26.h,132 :: 		return true;
0x7C04	0x0E01      	MOVLW       1
0x7C06	0x6E00      	MOVWF       R0 
0x7C08	0xD001      	BRA         L_end_wiegand26_read_nip
;wiegand26.h,133 :: 		}
L_wiegand26_read_nip552:
;wiegand26.h,135 :: 		return false;
0x7C0A	0x6A00      	CLRF        R0 
;wiegand26.h,136 :: 		}
L_end_wiegand26_read_nip:
0x7C0C	0x0012      	RETURN      0
; end of _wiegand26_read_nip
_can_interrupt:
;lib_can.h,770 :: 		void can_interrupt(bool enable, bool hihgPriprity){
;lib_can.h,773 :: 		PIR3.TXB0IF = 0;
0x7C0E	0x94A4      	BCF         PIR3, 2 
;lib_can.h,774 :: 		PIR3.TXB1IF = 0;
0x7C10	0x96A4      	BCF         PIR3, 3 
;lib_can.h,775 :: 		PIR3.TXBnIF = 0;
0x7C12	0x98A4      	BCF         PIR3, 4 
;lib_can.h,778 :: 		IPR3.TXB0IP = hihgPriprity;
0x7C14	0x0104      	MOVLB       4
0x7C16	0xB1C0      	BTFSC       FARG_can_interrupt_hihgPriprity, 0, 1
0x7C18	0xD002      	BRA         L__can_interrupt1221
0x7C1A	0x94A5      	BCF         IPR3, 2 
0x7C1C	0xD001      	BRA         L__can_interrupt1222
L__can_interrupt1221:
0x7C1E	0x84A5      	BSF         IPR3, 2 
L__can_interrupt1222:
;lib_can.h,779 :: 		IPR3.TXB1IP = hihgPriprity;
0x7C20	0xB1C0      	BTFSC       FARG_can_interrupt_hihgPriprity, 0, 1
0x7C22	0xD002      	BRA         L__can_interrupt1223
0x7C24	0x96A5      	BCF         IPR3, 3 
0x7C26	0xD001      	BRA         L__can_interrupt1224
L__can_interrupt1223:
0x7C28	0x86A5      	BSF         IPR3, 3 
L__can_interrupt1224:
;lib_can.h,780 :: 		IPR3.TXBnIP = hihgPriprity;
0x7C2A	0xB1C0      	BTFSC       FARG_can_interrupt_hihgPriprity, 0, 1
0x7C2C	0xD002      	BRA         L__can_interrupt1225
0x7C2E	0x98A5      	BCF         IPR3, 4 
0x7C30	0xD001      	BRA         L__can_interrupt1226
L__can_interrupt1225:
0x7C32	0x88A5      	BSF         IPR3, 4 
L__can_interrupt1226:
;lib_can.h,783 :: 		PIE3.TXB0IE = enable;
0x7C34	0xB1BF      	BTFSC       FARG_can_interrupt_enable, 0, 1
0x7C36	0xD002      	BRA         L__can_interrupt1227
0x7C38	0x94A3      	BCF         PIE3, 2 
0x7C3A	0xD001      	BRA         L__can_interrupt1228
L__can_interrupt1227:
0x7C3C	0x84A3      	BSF         PIE3, 2 
L__can_interrupt1228:
;lib_can.h,784 :: 		PIE3.TXB1IE = enable;
0x7C3E	0xB1BF      	BTFSC       FARG_can_interrupt_enable, 0, 1
0x7C40	0xD002      	BRA         L__can_interrupt1229
0x7C42	0x96A3      	BCF         PIE3, 3 
0x7C44	0xD001      	BRA         L__can_interrupt1230
L__can_interrupt1229:
0x7C46	0x86A3      	BSF         PIE3, 3 
L__can_interrupt1230:
;lib_can.h,785 :: 		PIE3.TXBnIE = enable;
0x7C48	0xB1BF      	BTFSC       FARG_can_interrupt_enable, 0, 1
0x7C4A	0xD002      	BRA         L__can_interrupt1231
0x7C4C	0x98A3      	BCF         PIE3, 4 
0x7C4E	0xD001      	BRA         L__can_interrupt1232
L__can_interrupt1231:
0x7C50	0x88A3      	BSF         PIE3, 4 
L__can_interrupt1232:
;lib_can.h,792 :: 		}
L_end_can_interrupt:
0x7C52	0x0012      	RETURN      0
; end of _can_interrupt
_can_do_read_message:
;lib_can.h,265 :: 		void can_do_read_message(){
;lib_can.h,271 :: 		if(can.txQueu)
0x7C54	0x0103      	MOVLB       3
0x7C56	0x536A      	MOVF        _can+33, 1, 1
0x7C58	0xE001      	BZ          L_can_do_read_message184
;lib_can.h,272 :: 		return;
0x7C5A	0xD0E1      	BRA         L_end_can_do_read_message
L_can_do_read_message184:
;lib_can.h,275 :: 		if(can.rxBusy){
0x7C5C	0x53B3      	MOVF        _can+106, 1, 1
0x7C5E	0xE008      	BZ          L_can_do_read_message185
;lib_can.h,276 :: 		if(can.temp >= CAN_MAX_TIME_ACK){
0x7C60	0x0E0B      	MOVLW       11
0x7C62	0x5DF7      	SUBWF       _can+174, 0, 1
0x7C64	0xE102      	BNZ         L__can_do_read_message1144
0x7C66	0x0EB8      	MOVLW       184
0x7C68	0x5DF6      	SUBWF       _can+173, 0, 1
L__can_do_read_message1144:
0x7C6A	0xE302      	BNC         L_can_do_read_message186
;lib_can.h,277 :: 		can.rxBusy = false;
0x7C6C	0x6BB3      	CLRF        _can+106, 1
;lib_can.h,278 :: 		return;
0x7C6E	0xD0D7      	BRA         L_end_can_do_read_message
;lib_can.h,279 :: 		}
L_can_do_read_message186:
;lib_can.h,280 :: 		}
L_can_do_read_message185:
;lib_can.h,283 :: 		if(can_read(&id, can.bufferRX, &can.rxSize) == CAN_RW_DATA){
0x7C70	0x0EBF      	MOVLW       can_do_read_message_id_L0
0x7C72	0x0105      	MOVLB       5
0x7C74	0x6F01      	MOVWF       FARG_can_read_id, 1
0x7C76	0x0E04      	MOVLW       hi_addr(can_do_read_message_id_L0)
0x7C78	0x6F02      	MOVWF       FARG_can_read_id+1, 1
0x7C7A	0x0E62      	MOVLW       _can+25
0x7C7C	0x6F03      	MOVWF       FARG_can_read_datos, 1
0x7C7E	0x0E03      	MOVLW       hi_addr(_can+25)
0x7C80	0x6F04      	MOVWF       FARG_can_read_datos+1, 1
0x7C82	0x0EF4      	MOVLW       _can+171
0x7C84	0x6F05      	MOVWF       FARG_can_read_size, 1
0x7C86	0x0E03      	MOVLW       hi_addr(_can+171)
0x7C88	0x6F06      	MOVWF       FARG_can_read_size+1, 1
0x7C8A	0xF01AEC02  	CALL        _can_read, 0
0x7C8E	0x5000      	MOVF        R0, 0 
0x7C90	0x0A01      	XORLW       1
0x7C92	0xA4D8      	BTFSS       STATUS, 2 
0x7C94	0xD0C4      	BRA         L_can_do_read_message187
;lib_can.h,284 :: 		if(id == can.ipAddress){  //LA IP CONTIENE EL NUMERO DE RED+ID
0x7C96	0x0104      	MOVLB       4
0x7C98	0x51C2      	MOVF        can_do_read_message_id_L0+3, 0, 1
0x7C9A	0x0103      	MOVLB       3
0x7C9C	0x1950      	XORWF       _can+7, 0, 1
0x7C9E	0xE10E      	BNZ         L__can_do_read_message1145
0x7CA0	0x0104      	MOVLB       4
0x7CA2	0x51C1      	MOVF        can_do_read_message_id_L0+2, 0, 1
0x7CA4	0x0103      	MOVLB       3
0x7CA6	0x194F      	XORWF       _can+6, 0, 1
0x7CA8	0xE109      	BNZ         L__can_do_read_message1145
0x7CAA	0x0104      	MOVLB       4
0x7CAC	0x51C0      	MOVF        can_do_read_message_id_L0+1, 0, 1
0x7CAE	0x0103      	MOVLB       3
0x7CB0	0x194E      	XORWF       _can+5, 0, 1
0x7CB2	0xE104      	BNZ         L__can_do_read_message1145
0x7CB4	0x0104      	MOVLB       4
0x7CB6	0x51BF      	MOVF        can_do_read_message_id_L0, 0, 1
0x7CB8	0x0103      	MOVLB       3
0x7CBA	0x194D      	XORWF       _can+4, 0, 1
L__can_do_read_message1145:
0x7CBC	0xA4D8      	BTFSS       STATUS, 2 
0x7CBE	0xD0AF      	BRA         L_can_do_read_message188
;lib_can.h,286 :: 		if(can.bufferRX[1] == CAN_PROTOCOL_HEARTBEAT){
0x7CC0	0x5163      	MOVF        _can+26, 0, 1
0x7CC2	0x0AFF      	XORLW       255
0x7CC4	0xE105      	BNZ         L_can_do_read_message189
;lib_can.h,287 :: 		can_user_guardHeartBeat(can.bufferRX[0]);
0x7CC6	0xF501C362  	MOVFF       _can+25, FARG_can_user_guardHeartBeat_idNodo
0x7CCA	0xF017ECED  	CALL        _can_user_guardHeartBeat, 0
;lib_can.h,288 :: 		return;
0x7CCE	0xD0A7      	BRA         L_end_can_do_read_message
;lib_can.h,289 :: 		}
L_can_do_read_message189:
;lib_can.h,291 :: 		if(can.rxBusy){
0x7CD0	0x53B3      	MOVF        _can+106, 1, 1
0x7CD2	0xE026      	BZ          L_can_do_read_message190
;lib_can.h,293 :: 		if(can.rxId != can.bufferRX[0]){
0x7CD4	0x51F5      	MOVF        _can+172, 0, 1
0x7CD6	0x1962      	XORWF       _can+25, 0, 1
0x7CD8	0xE023      	BZ          L_can_do_read_message191
;lib_can.h,294 :: 		can.bufferTX[0] = can.id;
0x7CDA	0xF35AC355  	MOVFF       _can+12, _can+17
;lib_can.h,295 :: 		can.bufferTX[1] = CAN_PROTOCOL_BUSY;
0x7CDE	0x0E03      	MOVLW       3
0x7CE0	0x6F5B      	MOVWF       _can+18, 1
;lib_can.h,296 :: 		can_write(can.ip+can.bufferRX[0], can.bufferTX, 2, 3, false);
0x7CE2	0x5162      	MOVF        _can+25, 0, 1
0x7CE4	0x2549      	ADDWF       _can, 0, 1
0x7CE6	0x0105      	MOVLB       5
0x7CE8	0x6F01      	MOVWF       FARG_can_write_id, 1
0x7CEA	0x0E00      	MOVLW       0
0x7CEC	0x0103      	MOVLB       3
0x7CEE	0x214A      	ADDWFC      _can+1, 0, 1
0x7CF0	0x0105      	MOVLB       5
0x7CF2	0x6F02      	MOVWF       FARG_can_write_id+1, 1
0x7CF4	0x0E00      	MOVLW       0
0x7CF6	0x0103      	MOVLB       3
0x7CF8	0x214B      	ADDWFC      _can+2, 0, 1
0x7CFA	0x0105      	MOVLB       5
0x7CFC	0x6F03      	MOVWF       FARG_can_write_id+2, 1
0x7CFE	0x0E00      	MOVLW       0
0x7D00	0x0103      	MOVLB       3
0x7D02	0x214C      	ADDWFC      _can+3, 0, 1
0x7D04	0x0105      	MOVLB       5
0x7D06	0x6F04      	MOVWF       FARG_can_write_id+3, 1
0x7D08	0x0E5A      	MOVLW       _can+17
0x7D0A	0x6F05      	MOVWF       FARG_can_write_datos, 1
0x7D0C	0x0E03      	MOVLW       hi_addr(_can+17)
0x7D0E	0x6F06      	MOVWF       FARG_can_write_datos+1, 1
0x7D10	0x0E02      	MOVLW       2
0x7D12	0x6F07      	MOVWF       FARG_can_write_size, 1
0x7D14	0x0E03      	MOVLW       3
0x7D16	0x6F08      	MOVWF       FARG_can_write_priority, 1
0x7D18	0x6B09      	CLRF        FARG_can_write_rtr, 1
0x7D1A	0xF017ECF5  	CALL        _can_write, 0
;lib_can.h,297 :: 		return;
0x7D1E	0xD07F      	BRA         L_end_can_do_read_message
;lib_can.h,298 :: 		}
L_can_do_read_message191:
;lib_can.h,299 :: 		}
L_can_do_read_message190:
;lib_can.h,301 :: 		if(can.bufferRX[1] == CAN_PROTOCOL_INIT){  //INICIA LA PRIMERA COMUNICACION
0x7D20	0x0103      	MOVLB       3
0x7D22	0x5163      	MOVF        _can+26, 0, 1
0x7D24	0x0A00      	XORLW       0
0x7D26	0xE10A      	BNZ         L_can_do_read_message192
;lib_can.h,302 :: 		can.rxId = can.bufferRX[0];  //ID del transmisor
0x7D28	0xF3F5C362  	MOVFF       _can+25, _can+172
;lib_can.h,303 :: 		can.rxBusy = true;
0x7D2C	0x0E01      	MOVLW       1
0x7D2E	0x6FB3      	MOVWF       _can+106, 1
;lib_can.h,304 :: 		len = 0;
0x7D30	0x0102      	MOVLB       2
0x7D32	0x6B05      	CLRF        can_do_read_message_len_L0, 1
;lib_can.h,305 :: 		can.temp = 0;
0x7D34	0x0103      	MOVLB       3
0x7D36	0x6BF6      	CLRF        _can+173, 1
0x7D38	0x6BF7      	CLRF        _can+174, 1
;lib_can.h,306 :: 		}else if(!can.rxBusy){
0x7D3A	0xD046      	BRA         L_can_do_read_message193
L_can_do_read_message192:
0x7D3C	0x53B3      	MOVF        _can+106, 1, 1
0x7D3E	0xE101      	BNZ         L_can_do_read_message194
;lib_can.h,308 :: 		return;
0x7D40	0xD06E      	BRA         L_end_can_do_read_message
;lib_can.h,309 :: 		}else if(can.bufferRX[1] == CAN_PROTOCOL_QUEU){ //ENCOLA LOS DATOS
L_can_do_read_message194:
0x7D42	0x5163      	MOVF        _can+26, 0, 1
0x7D44	0x0A01      	XORLW       1
0x7D46	0xE132      	BNZ         L_can_do_read_message196
;lib_can.h,311 :: 		for(cont = 2; cont < can.rxSize && len < CAN_LEN_BUFFER_RXTX-1; cont++)
0x7D48	0x0E02      	MOVLW       2
0x7D4A	0x0104      	MOVLB       4
0x7D4C	0x6FC3      	MOVWF       can_do_read_message_cont_L0, 1
L_can_do_read_message197:
0x7D4E	0x0103      	MOVLB       3
0x7D50	0x51F4      	MOVF        _can+171, 0, 1
0x7D52	0x0104      	MOVLB       4
0x7D54	0x5DC3      	SUBWF       can_do_read_message_cont_L0, 0, 1
0x7D56	0xE21C      	BC          L_can_do_read_message198
0x7D58	0x0E3F      	MOVLW       63
0x7D5A	0x0102      	MOVLB       2
0x7D5C	0x5D05      	SUBWF       can_do_read_message_len_L0, 0, 1
0x7D5E	0xE218      	BC          L_can_do_read_message198
L__can_do_read_message955:
;lib_can.h,312 :: 		can.rxBuffer[len++] = can.bufferRX[cont];
0x7D60	0x0EB4      	MOVLW       _can+107
0x7D62	0x6EE1      	MOVWF       FSR1L 
0x7D64	0x0E03      	MOVLW       hi_addr(_can+107)
0x7D66	0x6EE2      	MOVWF       FSR1H 
0x7D68	0x5105      	MOVF        can_do_read_message_len_L0, 0, 1
0x7D6A	0x26E1      	ADDWF       FSR1L, 1 
0x7D6C	0xB0D8      	BTFSC       STATUS, 0 
0x7D6E	0x2AE2      	INCF        FSR1H, 1 
0x7D70	0x0E62      	MOVLW       _can+25
0x7D72	0x6EE9      	MOVWF       FSR0L 
0x7D74	0x0E03      	MOVLW       hi_addr(_can+25)
0x7D76	0x6EEA      	MOVWF       FSR0H 
0x7D78	0x0104      	MOVLB       4
0x7D7A	0x51C3      	MOVF        can_do_read_message_cont_L0, 0, 1
0x7D7C	0x26E9      	ADDWF       FSR0L, 1 
0x7D7E	0xB0D8      	BTFSC       STATUS, 0 
0x7D80	0x2AEA      	INCF        FSR0H, 1 
0x7D82	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x7D86	0x0102      	MOVLB       2
0x7D88	0x2B05      	INCF        can_do_read_message_len_L0, 1, 1
;lib_can.h,311 :: 		for(cont = 2; cont < can.rxSize && len < CAN_LEN_BUFFER_RXTX-1; cont++)
0x7D8A	0x0104      	MOVLB       4
0x7D8C	0x2BC3      	INCF        can_do_read_message_cont_L0, 1, 1
;lib_can.h,312 :: 		can.rxBuffer[len++] = can.bufferRX[cont];
0x7D8E	0xD7DF      	BRA         L_can_do_read_message197
L_can_do_read_message198:
;lib_can.h,313 :: 		can.rxBuffer[len] = 0;
0x7D90	0x0EB4      	MOVLW       _can+107
0x7D92	0x6EE1      	MOVWF       FSR1L 
0x7D94	0x0E03      	MOVLW       hi_addr(_can+107)
0x7D96	0x6EE2      	MOVWF       FSR1H 
0x7D98	0x0102      	MOVLB       2
0x7D9A	0x5105      	MOVF        can_do_read_message_len_L0, 0, 1
0x7D9C	0x26E1      	ADDWF       FSR1L, 1 
0x7D9E	0xB0D8      	BTFSC       STATUS, 0 
0x7DA0	0x2AE2      	INCF        FSR1H, 1 
0x7DA2	0x6AE6      	CLRF        POSTINC1 
;lib_can.h,314 :: 		can.temp = 0;
0x7DA4	0x0103      	MOVLB       3
0x7DA6	0x6BF6      	CLRF        _can+173, 1
0x7DA8	0x6BF7      	CLRF        _can+174, 1
;lib_can.h,315 :: 		}else if(can.bufferRX[1] == CAN_PROTOCOL_END){  //FINALIZA COMUNICACION
0x7DAA	0xD00E      	BRA         L_can_do_read_message202
L_can_do_read_message196:
0x7DAC	0x5163      	MOVF        _can+26, 0, 1
0x7DAE	0x0A02      	XORLW       2
0x7DB0	0xE10B      	BNZ         L_can_do_read_message203
;lib_can.h,316 :: 		can.rxBuffer[len] = 0;  //Agregar final de cadena
0x7DB2	0x0EB4      	MOVLW       _can+107
0x7DB4	0x6EE1      	MOVWF       FSR1L 
0x7DB6	0x0E03      	MOVLW       hi_addr(_can+107)
0x7DB8	0x6EE2      	MOVWF       FSR1H 
0x7DBA	0x0102      	MOVLB       2
0x7DBC	0x5105      	MOVF        can_do_read_message_len_L0, 0, 1
0x7DBE	0x26E1      	ADDWF       FSR1L, 1 
0x7DC0	0xB0D8      	BTFSC       STATUS, 0 
0x7DC2	0x2AE2      	INCF        FSR1H, 1 
0x7DC4	0x6AE6      	CLRF        POSTINC1 
;lib_can.h,317 :: 		len = 0;
0x7DC6	0x6B05      	CLRF        can_do_read_message_len_L0, 1
;lib_can.h,318 :: 		}
L_can_do_read_message203:
L_can_do_read_message202:
L_can_do_read_message193:
;lib_can.h,321 :: 		can.bufferTX[0] = can.id;
0x7DC8	0xF35AC355  	MOVFF       _can+12, _can+17
;lib_can.h,322 :: 		can.bufferTX[1] = CAN_PROTOCOL_FREE;  //Modulo libre
0x7DCC	0x0E04      	MOVLW       4
0x7DCE	0x0103      	MOVLB       3
0x7DD0	0x6F5B      	MOVWF       _can+18, 1
;lib_can.h,323 :: 		can_write(can.ip+can.bufferRX[0], can.bufferTX, 2, 3, false);
0x7DD2	0x5162      	MOVF        _can+25, 0, 1
0x7DD4	0x2549      	ADDWF       _can, 0, 1
0x7DD6	0x0105      	MOVLB       5
0x7DD8	0x6F01      	MOVWF       FARG_can_write_id, 1
0x7DDA	0x0E00      	MOVLW       0
0x7DDC	0x0103      	MOVLB       3
0x7DDE	0x214A      	ADDWFC      _can+1, 0, 1
0x7DE0	0x0105      	MOVLB       5
0x7DE2	0x6F02      	MOVWF       FARG_can_write_id+1, 1
0x7DE4	0x0E00      	MOVLW       0
0x7DE6	0x0103      	MOVLB       3
0x7DE8	0x214B      	ADDWFC      _can+2, 0, 1
0x7DEA	0x0105      	MOVLB       5
0x7DEC	0x6F03      	MOVWF       FARG_can_write_id+2, 1
0x7DEE	0x0E00      	MOVLW       0
0x7DF0	0x0103      	MOVLB       3
0x7DF2	0x214C      	ADDWFC      _can+3, 0, 1
0x7DF4	0x0105      	MOVLB       5
0x7DF6	0x6F04      	MOVWF       FARG_can_write_id+3, 1
0x7DF8	0x0E5A      	MOVLW       _can+17
0x7DFA	0x6F05      	MOVWF       FARG_can_write_datos, 1
0x7DFC	0x0E03      	MOVLW       hi_addr(_can+17)
0x7DFE	0x6F06      	MOVWF       FARG_can_write_datos+1, 1
0x7E00	0x0E02      	MOVLW       2
0x7E02	0x6F07      	MOVWF       FARG_can_write_size, 1
0x7E04	0x0E03      	MOVLW       3
0x7E06	0x6F08      	MOVWF       FARG_can_write_priority, 1
0x7E08	0x6B09      	CLRF        FARG_can_write_rtr, 1
0x7E0A	0xF017ECF5  	CALL        _can_write, 0
;lib_can.h,326 :: 		if(can.bufferRX[1] == CAN_PROTOCOL_END){
0x7E0E	0x0103      	MOVLB       3
0x7E10	0x5163      	MOVF        _can+26, 0, 1
0x7E12	0x0A02      	XORLW       2
0x7E14	0xE104      	BNZ         L_can_do_read_message204
;lib_can.h,327 :: 		can_user_read_message();
0x7E16	0xF020EC59  	CALL        _can_user_read_message, 0
;lib_can.h,328 :: 		can.rxBusy = false;
0x7E1A	0x0103      	MOVLB       3
0x7E1C	0x6BB3      	CLRF        _can+106, 1
;lib_can.h,329 :: 		}
L_can_do_read_message204:
;lib_can.h,330 :: 		}
L_can_do_read_message188:
;lib_can.h,331 :: 		}
L_can_do_read_message187:
;lib_can.h,332 :: 		}
L_end_can_do_read_message:
0x7E1E	0x0012      	RETURN      0
; end of _can_do_read_message
_mysql_count_forced:
;table_eeprom.h,438 :: 		int mysql_count_forced(char *tabla, char *columna, long buscar){
;table_eeprom.h,439 :: 		int coincidencias = 0;
0x7E20	0x0104      	MOVLB       4
0x7E22	0x6BC7      	CLRF        mysql_count_forced_coincidencias_L0, 1
0x7E24	0x6BC8      	CLRF        mysql_count_forced_coincidencias_L0+1, 1
0x7E26	0x6BC9      	CLRF        mysql_count_forced_busqueda_L0, 1
0x7E28	0x6BCA      	CLRF        mysql_count_forced_busqueda_L0+1, 1
0x7E2A	0x6BCB      	CLRF        mysql_count_forced_busqueda_L0+2, 1
0x7E2C	0x6BCC      	CLRF        mysql_count_forced_busqueda_L0+3, 1
;table_eeprom.h,443 :: 		if(mysql_exist(tabla)){
0x7E2E	0xF547C4BF  	MOVFF       FARG_mysql_count_forced_tabla, FARG_mysql_exist_name
0x7E32	0xF548C4C0  	MOVFF       FARG_mysql_count_forced_tabla+1, FARG_mysql_exist_name+1
0x7E36	0xF003EC42  	CALL        _mysql_exist, 0
0x7E3A	0x5200      	MOVF        R0, 1 
0x7E3C	0xE034      	BZ          L_mysql_count_forced527
;table_eeprom.h,444 :: 		for(myTable.cont = 1; myTable.cont <= myTable.row; myTable.cont++){
0x7E3E	0x0E01      	MOVLW       1
0x7E40	0x0103      	MOVLB       3
0x7E42	0x6F48      	MOVWF       Expendedora_myTable+47, 1
L_mysql_count_forced528:
0x7E44	0x0E00      	MOVLW       0
0x7E46	0x5D1C      	SUBWF       Expendedora_myTable+3, 0, 1
0x7E48	0xE102      	BNZ         L__mysql_count_forced1306
0x7E4A	0x5148      	MOVF        Expendedora_myTable+47, 0, 1
0x7E4C	0x5D1B      	SUBWF       Expendedora_myTable+2, 0, 1
L__mysql_count_forced1306:
0x7E4E	0xE32B      	BNC         L_mysql_count_forced529
;table_eeprom.h,446 :: 		if(!mysql_read_forced(tabla, columna, myTable.cont, (char*)&busqueda)){
0x7E50	0xF531C4BF  	MOVFF       FARG_mysql_count_forced_tabla, FARG_mysql_read_forced_name
0x7E54	0xF532C4C0  	MOVFF       FARG_mysql_count_forced_tabla+1, FARG_mysql_read_forced_name+1
0x7E58	0xF533C4C1  	MOVFF       FARG_mysql_count_forced_columna, FARG_mysql_read_forced_column
0x7E5C	0xF534C4C2  	MOVFF       FARG_mysql_count_forced_columna+1, FARG_mysql_read_forced_column+1
0x7E60	0xF535C348  	MOVFF       Expendedora_myTable+47, FARG_mysql_read_forced_fila
0x7E64	0x0E00      	MOVLW       0
0x7E66	0x0105      	MOVLB       5
0x7E68	0x6F36      	MOVWF       FARG_mysql_read_forced_fila+1, 1
0x7E6A	0x0EC9      	MOVLW       mysql_count_forced_busqueda_L0
0x7E6C	0x6F37      	MOVWF       FARG_mysql_read_forced_result, 1
0x7E6E	0x0E04      	MOVLW       hi_addr(mysql_count_forced_busqueda_L0)
0x7E70	0x6F38      	MOVWF       FARG_mysql_read_forced_result+1, 1
0x7E72	0xF00AEC09  	CALL        _mysql_read_forced, 0
0x7E76	0x5200      	MOVF        R0, 1 
0x7E78	0xE10F      	BNZ         L_mysql_count_forced531
;table_eeprom.h,447 :: 		if(buscar == busqueda)
0x7E7A	0x0104      	MOVLB       4
0x7E7C	0x51C6      	MOVF        FARG_mysql_count_forced_buscar+3, 0, 1
0x7E7E	0x19CC      	XORWF       mysql_count_forced_busqueda_L0+3, 0, 1
0x7E80	0xE108      	BNZ         L__mysql_count_forced1307
0x7E82	0x51C5      	MOVF        FARG_mysql_count_forced_buscar+2, 0, 1
0x7E84	0x19CB      	XORWF       mysql_count_forced_busqueda_L0+2, 0, 1
0x7E86	0xE105      	BNZ         L__mysql_count_forced1307
0x7E88	0x51C4      	MOVF        FARG_mysql_count_forced_buscar+1, 0, 1
0x7E8A	0x19CA      	XORWF       mysql_count_forced_busqueda_L0+1, 0, 1
0x7E8C	0xE102      	BNZ         L__mysql_count_forced1307
0x7E8E	0x51C3      	MOVF        FARG_mysql_count_forced_buscar, 0, 1
0x7E90	0x19C9      	XORWF       mysql_count_forced_busqueda_L0, 0, 1
L__mysql_count_forced1307:
0x7E92	0xE102      	BNZ         L_mysql_count_forced532
;table_eeprom.h,448 :: 		coincidencias++;
0x7E94	0x4BC7      	INFSNZ      mysql_count_forced_coincidencias_L0, 1, 1
0x7E96	0x2BC8      	INCF        mysql_count_forced_coincidencias_L0+1, 1, 1
L_mysql_count_forced532:
;table_eeprom.h,449 :: 		}
L_mysql_count_forced531:
;table_eeprom.h,444 :: 		for(myTable.cont = 1; myTable.cont <= myTable.row; myTable.cont++){
0x7E98	0x0103      	MOVLB       3
0x7E9A	0x5148      	MOVF        Expendedora_myTable+47, 0, 1
0x7E9C	0x0F01      	ADDLW       1
0x7E9E	0x6E00      	MOVWF       R0 
0x7EA0	0xF348C000  	MOVFF       R0, Expendedora_myTable+47
;table_eeprom.h,450 :: 		}
0x7EA4	0xD7CF      	BRA         L_mysql_count_forced528
L_mysql_count_forced529:
;table_eeprom.h,451 :: 		}
L_mysql_count_forced527:
;table_eeprom.h,453 :: 		return coincidencias;
0x7EA6	0xF000C4C7  	MOVFF       mysql_count_forced_coincidencias_L0, R0
0x7EAA	0xF001C4C8  	MOVFF       mysql_count_forced_coincidencias_L0+1, R1
;table_eeprom.h,454 :: 		}
L_end_mysql_count_forced:
0x7EAE	0x0012      	RETURN      0
; end of _mysql_count_forced
_can_open:
;lib_can.h,334 :: 		void can_open(long ip, long mask, char id, char speed_us){
;lib_can.h,336 :: 		can.ip = ip;
0x7EB0	0xF349C4BF  	MOVFF       FARG_can_open_ip, _can
0x7EB4	0xF34AC4C0  	MOVFF       FARG_can_open_ip+1, _can+1
0x7EB8	0xF34BC4C1  	MOVFF       FARG_can_open_ip+2, _can+2
0x7EBC	0xF34CC4C2  	MOVFF       FARG_can_open_ip+3, _can+3
;lib_can.h,337 :: 		can.mask = mask;
0x7EC0	0xF351C4C3  	MOVFF       FARG_can_open_mask, _can+8
0x7EC4	0xF352C4C4  	MOVFF       FARG_can_open_mask+1, _can+9
0x7EC8	0xF353C4C5  	MOVFF       FARG_can_open_mask+2, _can+10
0x7ECC	0xF354C4C6  	MOVFF       FARG_can_open_mask+3, _can+11
;lib_can.h,338 :: 		can.ipAddress = ip + id;
0x7ED0	0x0104      	MOVLB       4
0x7ED2	0x51C7      	MOVF        FARG_can_open_id, 0, 1
0x7ED4	0x25BF      	ADDWF       FARG_can_open_ip, 0, 1
0x7ED6	0x6E00      	MOVWF       R0 
0x7ED8	0x0E00      	MOVLW       0
0x7EDA	0x21C0      	ADDWFC      FARG_can_open_ip+1, 0, 1
0x7EDC	0x6E01      	MOVWF       R1 
0x7EDE	0x0E00      	MOVLW       0
0x7EE0	0x21C1      	ADDWFC      FARG_can_open_ip+2, 0, 1
0x7EE2	0x6E02      	MOVWF       R2 
0x7EE4	0x0E00      	MOVLW       0
0x7EE6	0x21C2      	ADDWFC      FARG_can_open_ip+3, 0, 1
0x7EE8	0x6E03      	MOVWF       R3 
0x7EEA	0xF34DC000  	MOVFF       R0, _can+4
0x7EEE	0xF34EC001  	MOVFF       R1, _can+5
0x7EF2	0xF34FC002  	MOVFF       R2, _can+6
0x7EF6	0xF350C003  	MOVFF       R3, _can+7
;lib_can.h,339 :: 		can.id = id;
0x7EFA	0xF355C4C7  	MOVFF       FARG_can_open_id, _can+12
;lib_can.h,342 :: 		can.conected = true;
0x7EFE	0x0E01      	MOVLW       1
0x7F00	0x0103      	MOVLB       3
0x7F02	0x6F56      	MOVWF       _can+13, 1
;lib_can.h,343 :: 		can.tx_status = 0;      //Estado cero por defecto
0x7F04	0x6B6B      	CLRF        _can+34, 1
;lib_can.h,344 :: 		can.txQueu = false;     //No ha encolado datos para transmitir
0x7F06	0x6B6A      	CLRF        _can+33, 1
;lib_can.h,345 :: 		can.rxBusy = false;     //No esta escuhando ningun mensaje
0x7F08	0x6BB3      	CLRF        _can+106, 1
;lib_can.h,347 :: 		can_set_operation(CAN_OPERATION_CONFIG);
0x7F0A	0x0E04      	MOVLW       4
0x7F0C	0x0105      	MOVLB       5
0x7F0E	0x6F23      	MOVWF       FARG_can_set_operation_CAN_OPERATION, 1
0x7F10	0xF00EEC2B  	CALL        _can_set_operation, 0
;lib_can.h,348 :: 		can_set_mode(CAN_MODE_LEGACY);
0x7F14	0x6B01      	CLRF        FARG_can_set_mode_CAN_MODE, 1
0x7F16	0xF01CECEC  	CALL        _can_set_mode, 0
;lib_can.h,349 :: 		can_set_baud(speed_us);
0x7F1A	0xF501C4C8  	MOVFF       FARG_can_open_speed_us, FARG_can_set_baud_speed_us
0x7F1E	0x0E00      	MOVLW       0
0x7F20	0x6F02      	MOVWF       FARG_can_set_baud_speed_us+1, 1
0x7F22	0xF01DEC1C  	CALL        _can_set_baud, 0
;lib_can.h,351 :: 		RXB0CON = 0;
0x7F26	0x6A60      	CLRF        RXB0CON 
;lib_can.h,352 :: 		RXB0CON.RXM0 = 0;  //RECIBE TODOS LOS MENSAJES VALIDOS, STANDAR Ó EXTENDED
0x7F28	0x9A60      	BCF         RXB0CON, 5 
;lib_can.h,353 :: 		RXB0CON.RXM1 = 0;  //SEGUN EL BIT EXIDEN EN EL REGISTRO RXFnSIDL
0x7F2A	0x9C60      	BCF         RXB0CON, 6 
;lib_can.h,354 :: 		RXB0CON.RXB0DBEN = CAN_USE_DOUBLE_BUFFER;
0x7F2C	0x9460      	BCF         RXB0CON, 2 
;lib_can.h,355 :: 		RXB1CON = 0;
0x7F2E	0x010F      	MOVLB       15
0x7F30	0x6B50      	CLRF        RXB1CON, 1
;lib_can.h,357 :: 		CIOCON.ENDRHI = CAN_ENABLE_DRIVE_HIGH;
0x7F32	0x9A73      	BCF         CIOCON, 5 
;lib_can.h,358 :: 		CIOCON.CANCAP = CAN_ENABLE_CAPTURE;
0x7F34	0x9873      	BCF         CIOCON, 4 
;lib_can.h,361 :: 		can_set_id(&RXM0EIDL, mask);    //MASKARA 0, ACEPTA X ID
0x7F36	0x0E1B      	MOVLW       RXM0EIDL
0x7F38	0x0105      	MOVLB       5
0x7F3A	0x6F23      	MOVWF       FARG_can_set_id_address, 1
0x7F3C	0x0E0F      	MOVLW       hi_addr(RXM0EIDL)
0x7F3E	0x6F24      	MOVWF       FARG_can_set_id_address+1, 1
0x7F40	0xF525C4C3  	MOVFF       FARG_can_open_mask, FARG_can_set_id_value
0x7F44	0xF526C4C4  	MOVFF       FARG_can_open_mask+1, FARG_can_set_id_value+1
0x7F48	0xF527C4C5  	MOVFF       FARG_can_open_mask+2, FARG_can_set_id_value+2
0x7F4C	0xF528C4C6  	MOVFF       FARG_can_open_mask+3, FARG_can_set_id_value+3
0x7F50	0xF016EC07  	CALL        _can_set_id, 0
;lib_can.h,362 :: 		can_set_id(&RXM1EIDL, mask);    //MASKARA 1, ACEPTA X ID
0x7F54	0x0E1F      	MOVLW       RXM1EIDL
0x7F56	0x6F23      	MOVWF       FARG_can_set_id_address, 1
0x7F58	0x0E0F      	MOVLW       hi_addr(RXM1EIDL)
0x7F5A	0x6F24      	MOVWF       FARG_can_set_id_address+1, 1
0x7F5C	0xF525C4C3  	MOVFF       FARG_can_open_mask, FARG_can_set_id_value
0x7F60	0xF526C4C4  	MOVFF       FARG_can_open_mask+1, FARG_can_set_id_value+1
0x7F64	0xF527C4C5  	MOVFF       FARG_can_open_mask+2, FARG_can_set_id_value+2
0x7F68	0xF528C4C6  	MOVFF       FARG_can_open_mask+3, FARG_can_set_id_value+3
0x7F6C	0xF016EC07  	CALL        _can_set_id, 0
;lib_can.h,364 :: 		can_set_id(&RXF0EIDL, can.ipAddress);  //FILTRO 0 ASOCIADO CON LA MASKARA 0
0x7F70	0x0E03      	MOVLW       RXF0EIDL
0x7F72	0x6F23      	MOVWF       FARG_can_set_id_address, 1
0x7F74	0x0E0F      	MOVLW       hi_addr(RXF0EIDL)
0x7F76	0x6F24      	MOVWF       FARG_can_set_id_address+1, 1
0x7F78	0xF525C34D  	MOVFF       _can+4, FARG_can_set_id_value
0x7F7C	0xF526C34E  	MOVFF       _can+5, FARG_can_set_id_value+1
0x7F80	0xF527C34F  	MOVFF       _can+6, FARG_can_set_id_value+2
0x7F84	0xF528C350  	MOVFF       _can+7, FARG_can_set_id_value+3
0x7F88	0xF016EC07  	CALL        _can_set_id, 0
;lib_can.h,365 :: 		can_set_id(&RXF1EIDL, can.ipAddress);  //FILTRO 1 ASOCIADO CON LA MASKARA 0
0x7F8C	0x0E07      	MOVLW       RXF1EIDL
0x7F8E	0x6F23      	MOVWF       FARG_can_set_id_address, 1
0x7F90	0x0E0F      	MOVLW       hi_addr(RXF1EIDL)
0x7F92	0x6F24      	MOVWF       FARG_can_set_id_address+1, 1
0x7F94	0xF525C34D  	MOVFF       _can+4, FARG_can_set_id_value
0x7F98	0xF526C34E  	MOVFF       _can+5, FARG_can_set_id_value+1
0x7F9C	0xF527C34F  	MOVFF       _can+6, FARG_can_set_id_value+2
0x7FA0	0xF528C350  	MOVFF       _can+7, FARG_can_set_id_value+3
0x7FA4	0xF016EC07  	CALL        _can_set_id, 0
;lib_can.h,366 :: 		can_set_id(&RXF2EIDL, can.ipAddress);  //FILTRO 2 ASOCIADO CON LA MASKARA 1
0x7FA8	0x0E0B      	MOVLW       RXF2EIDL
0x7FAA	0x6F23      	MOVWF       FARG_can_set_id_address, 1
0x7FAC	0x0E0F      	MOVLW       hi_addr(RXF2EIDL)
0x7FAE	0x6F24      	MOVWF       FARG_can_set_id_address+1, 1
0x7FB0	0xF525C34D  	MOVFF       _can+4, FARG_can_set_id_value
0x7FB4	0xF526C34E  	MOVFF       _can+5, FARG_can_set_id_value+1
0x7FB8	0xF527C34F  	MOVFF       _can+6, FARG_can_set_id_value+2
0x7FBC	0xF528C350  	MOVFF       _can+7, FARG_can_set_id_value+3
0x7FC0	0xF016EC07  	CALL        _can_set_id, 0
;lib_can.h,367 :: 		can_set_id(&RXF3EIDL, can.ipAddress);  //FILTRO 3 ASOCIADO CON LA MASKARA 1
0x7FC4	0x0E0F      	MOVLW       RXF3EIDL
0x7FC6	0x6F23      	MOVWF       FARG_can_set_id_address, 1
0x7FC8	0x0E0F      	MOVLW       hi_addr(RXF3EIDL)
0x7FCA	0x6F24      	MOVWF       FARG_can_set_id_address+1, 1
0x7FCC	0xF525C34D  	MOVFF       _can+4, FARG_can_set_id_value
0x7FD0	0xF526C34E  	MOVFF       _can+5, FARG_can_set_id_value+1
0x7FD4	0xF527C34F  	MOVFF       _can+6, FARG_can_set_id_value+2
0x7FD8	0xF528C350  	MOVFF       _can+7, FARG_can_set_id_value+3
0x7FDC	0xF016EC07  	CALL        _can_set_id, 0
;lib_can.h,368 :: 		can_set_id(&RXF4EIDL, can.ipAddress);  //FILTRO 4 ASOCIADO CON LA MASKARA 1
0x7FE0	0x0E13      	MOVLW       RXF4EIDL
0x7FE2	0x6F23      	MOVWF       FARG_can_set_id_address, 1
0x7FE4	0x0E0F      	MOVLW       hi_addr(RXF4EIDL)
0x7FE6	0x6F24      	MOVWF       FARG_can_set_id_address+1, 1
0x7FE8	0xF525C34D  	MOVFF       _can+4, FARG_can_set_id_value
0x7FEC	0xF526C34E  	MOVFF       _can+5, FARG_can_set_id_value+1
0x7FF0	0xF527C34F  	MOVFF       _can+6, FARG_can_set_id_value+2
0x7FF4	0xF528C350  	MOVFF       _can+7, FARG_can_set_id_value+3
0x7FF8	0xF016EC07  	CALL        _can_set_id, 0
;lib_can.h,369 :: 		can_set_id(&RXF5EIDL, can.ipAddress);  //FILTRO 5 ASOCIADO CON LA MASKARA 1
0x7FFC	0x0E17      	MOVLW       RXF5EIDL
0x7FFE	0x6F23      	MOVWF       FARG_can_set_id_address, 1
0x8000	0x0E0F      	MOVLW       hi_addr(RXF5EIDL)
0x8002	0x6F24      	MOVWF       FARG_can_set_id_address+1, 1
0x8004	0xF525C34D  	MOVFF       _can+4, FARG_can_set_id_value
0x8008	0xF526C34E  	MOVFF       _can+5, FARG_can_set_id_value+1
0x800C	0xF527C34F  	MOVFF       _can+6, FARG_can_set_id_value+2
0x8010	0xF528C350  	MOVFF       _can+7, FARG_can_set_id_value+3
0x8014	0xF016EC07  	CALL        _can_set_id, 0
;lib_can.h,371 :: 		can_set_id(&RXF6EIDL, 0);       //FILTRO 6
0x8018	0x0E63      	MOVLW       RXF6EIDL
0x801A	0x6F23      	MOVWF       FARG_can_set_id_address, 1
0x801C	0x0E0D      	MOVLW       hi_addr(RXF6EIDL)
0x801E	0x6F24      	MOVWF       FARG_can_set_id_address+1, 1
0x8020	0x6B25      	CLRF        FARG_can_set_id_value, 1
0x8022	0x6B26      	CLRF        FARG_can_set_id_value+1, 1
0x8024	0x6B27      	CLRF        FARG_can_set_id_value+2, 1
0x8026	0x6B28      	CLRF        FARG_can_set_id_value+3, 1
0x8028	0xF016EC07  	CALL        _can_set_id, 0
;lib_can.h,372 :: 		can_set_id(&RXF7EIDL, 0);       //FILTRO 7
0x802C	0x0E67      	MOVLW       RXF7EIDL
0x802E	0x6F23      	MOVWF       FARG_can_set_id_address, 1
0x8030	0x0E0D      	MOVLW       hi_addr(RXF7EIDL)
0x8032	0x6F24      	MOVWF       FARG_can_set_id_address+1, 1
0x8034	0x6B25      	CLRF        FARG_can_set_id_value, 1
0x8036	0x6B26      	CLRF        FARG_can_set_id_value+1, 1
0x8038	0x6B27      	CLRF        FARG_can_set_id_value+2, 1
0x803A	0x6B28      	CLRF        FARG_can_set_id_value+3, 1
0x803C	0xF016EC07  	CALL        _can_set_id, 0
;lib_can.h,373 :: 		can_set_id(&RXF8EIDL, 0);       //FILTRO 8
0x8040	0x0E6B      	MOVLW       RXF8EIDL
0x8042	0x6F23      	MOVWF       FARG_can_set_id_address, 1
0x8044	0x0E0D      	MOVLW       hi_addr(RXF8EIDL)
0x8046	0x6F24      	MOVWF       FARG_can_set_id_address+1, 1
0x8048	0x6B25      	CLRF        FARG_can_set_id_value, 1
0x804A	0x6B26      	CLRF        FARG_can_set_id_value+1, 1
0x804C	0x6B27      	CLRF        FARG_can_set_id_value+2, 1
0x804E	0x6B28      	CLRF        FARG_can_set_id_value+3, 1
0x8050	0xF016EC07  	CALL        _can_set_id, 0
;lib_can.h,374 :: 		can_set_id(&RXF9EIDL, 0);       //FILTRO 9
0x8054	0x0E73      	MOVLW       RXF9EIDL
0x8056	0x6F23      	MOVWF       FARG_can_set_id_address, 1
0x8058	0x0E0D      	MOVLW       hi_addr(RXF9EIDL)
0x805A	0x6F24      	MOVWF       FARG_can_set_id_address+1, 1
0x805C	0x6B25      	CLRF        FARG_can_set_id_value, 1
0x805E	0x6B26      	CLRF        FARG_can_set_id_value+1, 1
0x8060	0x6B27      	CLRF        FARG_can_set_id_value+2, 1
0x8062	0x6B28      	CLRF        FARG_can_set_id_value+3, 1
0x8064	0xF016EC07  	CALL        _can_set_id, 0
;lib_can.h,375 :: 		can_set_id(&RXF10EIDL, 0);      //FILTRO 10
0x8068	0x0E77      	MOVLW       RXF10EIDL
0x806A	0x6F23      	MOVWF       FARG_can_set_id_address, 1
0x806C	0x0E0D      	MOVLW       hi_addr(RXF10EIDL)
0x806E	0x6F24      	MOVWF       FARG_can_set_id_address+1, 1
0x8070	0x6B25      	CLRF        FARG_can_set_id_value, 1
0x8072	0x6B26      	CLRF        FARG_can_set_id_value+1, 1
0x8074	0x6B27      	CLRF        FARG_can_set_id_value+2, 1
0x8076	0x6B28      	CLRF        FARG_can_set_id_value+3, 1
0x8078	0xF016EC07  	CALL        _can_set_id, 0
;lib_can.h,376 :: 		can_set_id(&RXF11EIDL, 0);      //FILTRO 11
0x807C	0x0E7B      	MOVLW       RXF11EIDL
0x807E	0x6F23      	MOVWF       FARG_can_set_id_address, 1
0x8080	0x0E0D      	MOVLW       hi_addr(RXF11EIDL)
0x8082	0x6F24      	MOVWF       FARG_can_set_id_address+1, 1
0x8084	0x6B25      	CLRF        FARG_can_set_id_value, 1
0x8086	0x6B26      	CLRF        FARG_can_set_id_value+1, 1
0x8088	0x6B27      	CLRF        FARG_can_set_id_value+2, 1
0x808A	0x6B28      	CLRF        FARG_can_set_id_value+3, 1
0x808C	0xF016EC07  	CALL        _can_set_id, 0
;lib_can.h,377 :: 		can_set_id(&RXF12EIDL, 0);      //FILTRO 12
0x8090	0x0E83      	MOVLW       RXF12EIDL
0x8092	0x6F23      	MOVWF       FARG_can_set_id_address, 1
0x8094	0x0E0D      	MOVLW       hi_addr(RXF12EIDL)
0x8096	0x6F24      	MOVWF       FARG_can_set_id_address+1, 1
0x8098	0x6B25      	CLRF        FARG_can_set_id_value, 1
0x809A	0x6B26      	CLRF        FARG_can_set_id_value+1, 1
0x809C	0x6B27      	CLRF        FARG_can_set_id_value+2, 1
0x809E	0x6B28      	CLRF        FARG_can_set_id_value+3, 1
0x80A0	0xF016EC07  	CALL        _can_set_id, 0
;lib_can.h,378 :: 		can_set_id(&RXF13EIDL, 0);      //FILTRO 13
0x80A4	0x0E87      	MOVLW       RXF13EIDL
0x80A6	0x6F23      	MOVWF       FARG_can_set_id_address, 1
0x80A8	0x0E0D      	MOVLW       hi_addr(RXF13EIDL)
0x80AA	0x6F24      	MOVWF       FARG_can_set_id_address+1, 1
0x80AC	0x6B25      	CLRF        FARG_can_set_id_value, 1
0x80AE	0x6B26      	CLRF        FARG_can_set_id_value+1, 1
0x80B0	0x6B27      	CLRF        FARG_can_set_id_value+2, 1
0x80B2	0x6B28      	CLRF        FARG_can_set_id_value+3, 1
0x80B4	0xF016EC07  	CALL        _can_set_id, 0
;lib_can.h,379 :: 		can_set_id(&RXF14EIDL, 0);      //FILTRO 14
0x80B8	0x0E8B      	MOVLW       RXF14EIDL
0x80BA	0x6F23      	MOVWF       FARG_can_set_id_address, 1
0x80BC	0x0E0D      	MOVLW       hi_addr(RXF14EIDL)
0x80BE	0x6F24      	MOVWF       FARG_can_set_id_address+1, 1
0x80C0	0x6B25      	CLRF        FARG_can_set_id_value, 1
0x80C2	0x6B26      	CLRF        FARG_can_set_id_value+1, 1
0x80C4	0x6B27      	CLRF        FARG_can_set_id_value+2, 1
0x80C6	0x6B28      	CLRF        FARG_can_set_id_value+3, 1
0x80C8	0xF016EC07  	CALL        _can_set_id, 0
;lib_can.h,380 :: 		can_set_id(&RXF15EIDL, 0);      //FILTRO 15
0x80CC	0x0E93      	MOVLW       RXF15EIDL
0x80CE	0x6F23      	MOVWF       FARG_can_set_id_address, 1
0x80D0	0x0E0D      	MOVLW       hi_addr(RXF15EIDL)
0x80D2	0x6F24      	MOVWF       FARG_can_set_id_address+1, 1
0x80D4	0x6B25      	CLRF        FARG_can_set_id_value, 1
0x80D6	0x6B26      	CLRF        FARG_can_set_id_value+1, 1
0x80D8	0x6B27      	CLRF        FARG_can_set_id_value+2, 1
0x80DA	0x6B28      	CLRF        FARG_can_set_id_value+3, 1
0x80DC	0xF016EC07  	CALL        _can_set_id, 0
;lib_can.h,388 :: 		TRISB.B2 = 0;  //CANAL TX
0x80E0	0x9493      	BCF         TRISB, 2 
;lib_can.h,389 :: 		TRISB.B3 = 1;  //CANAL RX
0x80E2	0x8693      	BSF         TRISB, 3 
;lib_can.h,392 :: 		can_set_operation(CAN_OPERATION_NORMAL);
0x80E4	0x6B23      	CLRF        FARG_can_set_operation_CAN_OPERATION, 1
0x80E6	0xF00EEC2B  	CALL        _can_set_operation, 0
;lib_can.h,393 :: 		}
L_end_can_open:
0x80EA	0x0012      	RETURN      0
; end of _can_open
_int_timer2:
;wiegand26.h,196 :: 		void int_timer2(){
;wiegand26.h,197 :: 		if(PIR1.TMR2IF && PIE1.TMR2IE){
0x80EC	0xA29E      	BTFSS       PIR1, 1 
0x80EE	0xD025      	BRA         L_int_timer2581
0x80F0	0xA29D      	BTFSS       PIE1, 1 
0x80F2	0xD023      	BRA         L_int_timer2581
L__int_timer2993:
;wiegand26.h,199 :: 		WIEGAND_TEMP += 5;  //Cada 5ms
0x80F4	0x0E05      	MOVLW       5
0x80F6	0x0102      	MOVLB       2
0x80F8	0x27FD      	ADDWF       _WIEGAND_TEMP, 1, 1
0x80FA	0x0E00      	MOVLW       0
0x80FC	0x23FE      	ADDWFC      _WIEGAND_TEMP+1, 1, 1
;wiegand26.h,200 :: 		if(WIEGAND_TEMP >= WIEGAND_TIME_FRAME_RESET){
0x80FE	0x0E13      	MOVLW       19
0x8100	0x5DFE      	SUBWF       _WIEGAND_TEMP+1, 0, 1
0x8102	0xE102      	BNZ         L__int_timer21346
0x8104	0x0E88      	MOVLW       136
0x8106	0x5DFD      	SUBWF       _WIEGAND_TEMP, 0, 1
L__int_timer21346:
0x8108	0xE317      	BNC         L_int_timer2582
;wiegand26.h,201 :: 		WIEGAND_TEMP = 0;
0x810A	0x6BFD      	CLRF        _WIEGAND_TEMP, 1
0x810C	0x6BFE      	CLRF        _WIEGAND_TEMP+1, 1
;wiegand26.h,203 :: 		if(WIEGAN26_CONT){
0x810E	0x0104      	MOVLB       4
0x8110	0x539C      	MOVF        Expendedora_WIEGAN26_CONT, 1, 1
0x8112	0xE012      	BZ          L_int_timer2583
;wiegand26.h,204 :: 		if(!(WIEGAN26_CONT == WIEGAND_BITS_CARD || WIEGAN26_CONT == WIEGAND_BITS_NIP)){
0x8114	0x519C      	MOVF        Expendedora_WIEGAN26_CONT, 0, 1
0x8116	0x0A1A      	XORLW       26
0x8118	0xE005      	BZ          L_int_timer2585
0x811A	0x519C      	MOVF        Expendedora_WIEGAN26_CONT, 0, 1
0x811C	0x0A20      	XORLW       32
0x811E	0xE002      	BZ          L_int_timer2585
0x8120	0x6A00      	CLRF        R0 
0x8122	0xD002      	BRA         L_int_timer2584
L_int_timer2585:
0x8124	0x0E01      	MOVLW       1
0x8126	0x6E00      	MOVWF       R0 
L_int_timer2584:
0x8128	0x5200      	MOVF        R0, 1 
0x812A	0xE106      	BNZ         L_int_timer2586
;wiegand26.h,205 :: 		WIEGAN26_CONT = 0;
0x812C	0x6B9C      	CLRF        Expendedora_WIEGAN26_CONT, 1
;wiegand26.h,206 :: 		WIEGAN26_DATA = 0;
0x812E	0x0102      	MOVLB       2
0x8130	0x6BD3      	CLRF        Expendedora_WIEGAN26_DATA, 1
0x8132	0x6BD4      	CLRF        Expendedora_WIEGAN26_DATA+1, 1
0x8134	0x6BD5      	CLRF        Expendedora_WIEGAN26_DATA+2, 1
0x8136	0x6BD6      	CLRF        Expendedora_WIEGAN26_DATA+3, 1
;wiegand26.h,207 :: 		}
L_int_timer2586:
;wiegand26.h,208 :: 		}
L_int_timer2583:
;wiegand26.h,209 :: 		}
L_int_timer2582:
;wiegand26.h,211 :: 		PIR1.TMR2IF = 0;   //LIMPÍAR BANDERA
0x8138	0x929E      	BCF         PIR1, 1 
;wiegand26.h,212 :: 		}
L_int_timer2581:
;wiegand26.h,213 :: 		}
L_end_int_timer2:
0x813A	0x0012      	RETURN      0
; end of _int_timer2
_int_timer1:
;Expendedora.c,2070 :: 		void int_timer1(){
;Expendedora.c,2073 :: 		if(PIR1.TMR1IF && PIE1.TMR1IE){
0x813C	0xA09E      	BTFSS       PIR1, 0 
0x813E	0xD010      	BRA         L_int_timer1933
0x8140	0xA09D      	BTFSS       PIE1, 0 
0x8142	0xD00E      	BRA         L_int_timer1933
L__int_timer11018:
;Expendedora.c,2075 :: 		if(++temp >= 20){
0x8144	0x0102      	MOVLB       2
0x8146	0x2B04      	INCF        int_timer1_temp_L0, 1, 1
0x8148	0x0E14      	MOVLW       20
0x814A	0x5D04      	SUBWF       int_timer1_temp_L0, 0, 1
0x814C	0xE304      	BNC         L_int_timer1934
;Expendedora.c,2076 :: 		temp = 0;
0x814E	0x6B04      	CLRF        int_timer1_temp_L0, 1
;Expendedora.c,2077 :: 		SALIDA_RELE1 = 0; //APAGAR RELE DESPUES DE UN SEGUNDO
0x8150	0x9A80      	BCF         PORTA, 5 
;Expendedora.c,2078 :: 		SALIDA_RELE2 = 0;
0x8152	0x9084      	BCF         PORTE, 0 
;Expendedora.c,2079 :: 		PIE1.TMR1IE = 0;  //DESACTIVAR EL TIMER1
0x8154	0x909D      	BCF         PIE1, 0 
;Expendedora.c,2080 :: 		}
L_int_timer1934:
;Expendedora.c,2083 :: 		TMR1H = getByte(sampler1,1);
0x8156	0xFFCFC49E  	MOVFF       _sampler1+1, TMR1H
;Expendedora.c,2084 :: 		TMR1L = getByte(sampler1,0);
0x815A	0xFFCEC49D  	MOVFF       _sampler1, TMR1L
;Expendedora.c,2085 :: 		PIR1.TMR1IF = 0;   //LIMPï¿½AR BANDERA
0x815E	0x909E      	BCF         PIR1, 0 
;Expendedora.c,2086 :: 		}
L_int_timer1933:
;Expendedora.c,2087 :: 		}
L_end_int_timer1:
0x8160	0x0012      	RETURN      0
; end of _int_timer1
_int_timer3:
;Expendedora.c,2089 :: 		void int_timer3(){
;Expendedora.c,2092 :: 		if(PIR2.TMR3IF && PIE2.TMR3IE){
0x8162	0xA2A1      	BTFSS       PIR2, 1 
0x8164	0xD01F      	BRA         L_int_timer3937
0x8166	0xA2A0      	BTFSS       PIE2, 1 
0x8168	0xD01D      	BRA         L_int_timer3937
L__int_timer31019:
;Expendedora.c,2093 :: 		can.temp += 50;     //Can protocol
0x816A	0x0E32      	MOVLW       50
0x816C	0x0103      	MOVLB       3
0x816E	0x25F6      	ADDWF       _can+173, 0, 1
0x8170	0x6E00      	MOVWF       R0 
0x8172	0x0E00      	MOVLW       0
0x8174	0x21F7      	ADDWFC      _can+174, 0, 1
0x8176	0x6E01      	MOVWF       R1 
0x8178	0xF3F6C000  	MOVFF       R0, _can+173
0x817C	0xF3F7C001  	MOVFF       R1, _can+174
;Expendedora.c,2094 :: 		flagTMR3.B0 = true;
0x8180	0x0102      	MOVLB       2
0x8182	0x8101      	BSF         _flagTMR3, 0, 1
;Expendedora.c,2097 :: 		if(++temp >= 20){
0x8184	0x2B03      	INCF        int_timer3_temp_L0, 1, 1
0x8186	0x0E14      	MOVLW       20
0x8188	0x5D03      	SUBWF       int_timer3_temp_L0, 0, 1
0x818A	0xE307      	BNC         L_int_timer3938
;Expendedora.c,2098 :: 		if(can.conected)
0x818C	0x0103      	MOVLB       3
0x818E	0x5356      	MOVF        _can+13, 1, 1
0x8190	0xA4D8      	BTFSS       STATUS, 2 
;Expendedora.c,2099 :: 		LED_LINK ^= 1;
0x8192	0x7482      	BTG         PORTC, 2 
L_int_timer3939:
;Expendedora.c,2100 :: 		temp = 0;
0x8194	0x0102      	MOVLB       2
0x8196	0x6B03      	CLRF        int_timer3_temp_L0, 1
;Expendedora.c,2101 :: 		flagSecondTMR3.B0 = true;
0x8198	0x81CF      	BSF         _flagSecondTMR3, 0, 1
;Expendedora.c,2102 :: 		}
L_int_timer3938:
;Expendedora.c,2104 :: 		TMR3H = getByte(sampler3,1);
0x819A	0xFFB3C2FC  	MOVFF       _sampler3+1, TMR3H
;Expendedora.c,2105 :: 		TMR3L = getByte(sampler3,0);
0x819E	0xFFB2C2FB  	MOVFF       _sampler3, TMR3L
;Expendedora.c,2106 :: 		PIR2.TMR3IF = 0;   //LIMPï¿½AR BANDERA
0x81A2	0x92A1      	BCF         PIR2, 1 
;Expendedora.c,2107 :: 		}
L_int_timer3937:
;Expendedora.c,2108 :: 		}
L_end_int_timer3:
0x81A4	0x0012      	RETURN      0
; end of _int_timer3
_int_wiegand26:
;wiegand26.h,165 :: 		void int_wiegand26(){
;wiegand26.h,166 :: 		int_external_int0();
0x81A6	0xF038EC25  	CALL        _int_external_int0, 0
;wiegand26.h,167 :: 		int_external_int1();
0x81AA	0xF038EC3E  	CALL        _int_external_int1, 0
;wiegand26.h,168 :: 		}
L_end_int_wiegand26:
0x81AE	0x0012      	RETURN      0
; end of _int_wiegand26
_int_can:
;lib_can.h,814 :: 		void int_can(){
;lib_can.h,822 :: 		if(PIE3.TXB0IE && PIR3.TXB0IF){
0x81B0	0xA4A3      	BTFSS       PIE3, 2 
0x81B2	0xD005      	BRA         L_int_can335
0x81B4	0xA4A4      	BTFSS       PIR3, 2 
0x81B6	0xD003      	BRA         L_int_can335
L__int_can975:
;lib_can.h,823 :: 		can.conected.B0 = true;
0x81B8	0x0103      	MOVLB       3
0x81BA	0x8156      	BSF         _can+13, 0, 1
;lib_can.h,824 :: 		PIR3.TXB0IF = 0;
0x81BC	0x94A4      	BCF         PIR3, 2 
;lib_can.h,825 :: 		}
L_int_can335:
;lib_can.h,826 :: 		if(PIE3.TXB1IE && PIR3.TXB1IF){
0x81BE	0xA6A3      	BTFSS       PIE3, 3 
0x81C0	0xD005      	BRA         L_int_can338
0x81C2	0xA6A4      	BTFSS       PIR3, 3 
0x81C4	0xD003      	BRA         L_int_can338
L__int_can974:
0x81C6	0x0103      	MOVLB       3
;lib_can.h,827 :: 		can.conected.B0 = true;
0x81C8	0x8156      	BSF         _can+13, 0, 1
;lib_can.h,828 :: 		PIR3.TXB1IF = 0;
0x81CA	0x96A4      	BCF         PIR3, 3 
;lib_can.h,829 :: 		}
L_int_can338:
;lib_can.h,830 :: 		if(PIE3.TXBnIE && PIR3.TXBnIF){
0x81CC	0xA8A3      	BTFSS       PIE3, 4 
0x81CE	0xD005      	BRA         L_int_can341
0x81D0	0xA8A4      	BTFSS       PIR3, 4 
0x81D2	0xD003      	BRA         L_int_can341
L__int_can973:
0x81D4	0x0103      	MOVLB       3
;lib_can.h,831 :: 		can.conected.B0 = true;
0x81D6	0x8156      	BSF         _can+13, 0, 1
;lib_can.h,832 :: 		PIR3.TXBnIF = 0;
0x81D8	0x98A4      	BCF         PIR3, 4 
;lib_can.h,833 :: 		}
L_int_can341:
;lib_can.h,834 :: 		}
L_end_int_can:
0x81DA	0x0012      	RETURN      0
; end of _int_can
_expendedora_temporizadores:
;Expendedora.c,542 :: 		void expendedora_temporizadores(){
;Expendedora.c,545 :: 		if(flagSecondTMR3){
0x81DC	0x0102      	MOVLB       2
0x81DE	0x53CF      	MOVF        _flagSecondTMR3, 1, 1
0x81E0	0xB4D8      	BTFSC       STATUS, 2 
0x81E2	0xD079      	BRA         L_expendedora_temporizadores665
;Expendedora.c,546 :: 		flagSecondTMR3 = false;
0x81E4	0x6BCF      	CLRF        _flagSecondTMR3, 1
;Expendedora.c,547 :: 		can_heartbeat();              //Envia heartbeat
0x81E6	0xF03AEC68  	CALL        _can_heartbeat, 0
;Expendedora.c,548 :: 		tempSensor++;
0x81EA	0x0103      	MOVLB       3
0x81EC	0x2B00      	INCF        _tempSensor, 1, 1
;Expendedora.c,551 :: 		if(isCanConect != can.conected){
0x81EE	0x0101      	MOVLB       1
0x81F0	0x51E3      	MOVF        expendedora_temporizadores_isCanConect_L0, 0, 1
0x81F2	0x0103      	MOVLB       3
0x81F4	0x1956      	XORWF       _can+13, 0, 1
0x81F6	0xE002      	BZ          L_expendedora_temporizadores666
;Expendedora.c,556 :: 		isCanConect = can.conected;
0x81F8	0xF1E3C356  	MOVFF       _can+13, expendedora_temporizadores_isCanConect_L0
;Expendedora.c,557 :: 		}
L_expendedora_temporizadores666:
;Expendedora.c,559 :: 		DS1307_Read(&myRTC,true);
0x81FC	0x0EFA      	MOVLW       _myRTC
0x81FE	0x0105      	MOVLB       5
0x8200	0x6F23      	MOVWF       FARG_DS1307_read_myDS, 1
0x8202	0x0E03      	MOVLW       hi_addr(_myRTC)
0x8204	0x6F24      	MOVWF       FARG_DS1307_read_myDS+1, 1
0x8206	0x0E01      	MOVLW       1
0x8208	0x6F25      	MOVWF       FARG_DS1307_read_formatComplet, 1
0x820A	0xF011ECAD  	CALL        _DS1307_read, 0
;Expendedora.c,560 :: 		string_cpyn(msjConst, &myRTC.time[2], 8);
0x820E	0x0E05      	MOVLW       _msjConst
0x8210	0x6F23      	MOVWF       FARG_string_cpyn_destino, 1
0x8212	0x0E03      	MOVLW       hi_addr(_msjConst)
0x8214	0x6F24      	MOVWF       FARG_string_cpyn_destino+1, 1
0x8216	0x0E03      	MOVLW       _myRTC+9
0x8218	0x6F25      	MOVWF       FARG_string_cpyn_origen, 1
0x821A	0x0E04      	MOVLW       hi_addr(_myRTC+9)
0x821C	0x6F26      	MOVWF       FARG_string_cpyn_origen+1, 1
0x821E	0x0E08      	MOVLW       8
0x8220	0x6F27      	MOVWF       FARG_string_cpyn_size, 1
0x8222	0xF014EC39  	CALL        _string_cpyn, 0
;Expendedora.c,561 :: 		lcd_out(4, 2, msjConst);
0x8226	0x0E04      	MOVLW       4
0x8228	0x6F23      	MOVWF       FARG_lcd_out_fila, 1
0x822A	0x0E02      	MOVLW       2
0x822C	0x6F24      	MOVWF       FARG_lcd_out_col, 1
0x822E	0x0E05      	MOVLW       _msjConst
0x8230	0x6F25      	MOVWF       FARG_lcd_out_texto, 1
0x8232	0x0E03      	MOVLW       hi_addr(_msjConst)
0x8234	0x6F26      	MOVWF       FARG_lcd_out_texto+1, 1
0x8236	0xF010EC01  	CALL        _lcd_out, 0
;Expendedora.c,562 :: 		string_cpyn(msjConst, &myRTC.time[11], 8);
0x823A	0x0E05      	MOVLW       _msjConst
0x823C	0x6F23      	MOVWF       FARG_string_cpyn_destino, 1
0x823E	0x0E03      	MOVLW       hi_addr(_msjConst)
0x8240	0x6F24      	MOVWF       FARG_string_cpyn_destino+1, 1
0x8242	0x0E0C      	MOVLW       _myRTC+18
0x8244	0x6F25      	MOVWF       FARG_string_cpyn_origen, 1
0x8246	0x0E04      	MOVLW       hi_addr(_myRTC+18)
0x8248	0x6F26      	MOVWF       FARG_string_cpyn_origen+1, 1
0x824A	0x0E08      	MOVLW       8
0x824C	0x6F27      	MOVWF       FARG_string_cpyn_size, 1
0x824E	0xF014EC39  	CALL        _string_cpyn, 0
;Expendedora.c,563 :: 		lcd_out(4, 12, msjConst);
0x8252	0x0E04      	MOVLW       4
0x8254	0x6F23      	MOVWF       FARG_lcd_out_fila, 1
0x8256	0x0E0C      	MOVLW       12
0x8258	0x6F24      	MOVWF       FARG_lcd_out_col, 1
0x825A	0x0E05      	MOVLW       _msjConst
0x825C	0x6F25      	MOVWF       FARG_lcd_out_texto, 1
0x825E	0x0E03      	MOVLW       hi_addr(_msjConst)
0x8260	0x6F26      	MOVWF       FARG_lcd_out_texto+1, 1
0x8262	0xF010EC01  	CALL        _lcd_out, 0
;Expendedora.c,565 :: 		if(limpiarLCD){
0x8266	0x0102      	MOVLB       2
0x8268	0x5378      	MOVF        _limpiarLCD, 1, 1
0x826A	0xE035      	BZ          L_expendedora_temporizadores667
;Expendedora.c,566 :: 		if(++tempLCD >= 5){
0x826C	0x2B77      	INCF        _tempLCD, 1, 1
0x826E	0x0E05      	MOVLW       5
0x8270	0x5D77      	SUBWF       _tempLCD, 0, 1
0x8272	0xE331      	BNC         L_expendedora_temporizadores668
;Expendedora.c,567 :: 		limpiarLCD = false;
0x8274	0x6B78      	CLRF        _limpiarLCD, 1
;Expendedora.c,568 :: 		tempLCD = 0;
0x8276	0x6B77      	CLRF        _tempLCD, 1
;Expendedora.c,569 :: 		lcd_clean_row(1);
0x8278	0x0E01      	MOVLW       1
0x827A	0x0105      	MOVLB       5
0x827C	0x6F23      	MOVWF       FARG_lcd_clean_row_fila, 1
0x827E	0xF015EC78  	CALL        _lcd_clean_row, 0
;Expendedora.c,570 :: 		lcd_clean_row(2);
0x8282	0x0E02      	MOVLW       2
0x8284	0x6F23      	MOVWF       FARG_lcd_clean_row_fila, 1
0x8286	0xF015EC78  	CALL        _lcd_clean_row, 0
;Expendedora.c,571 :: 		lcd_clean_row(3);
0x828A	0x0E03      	MOVLW       3
0x828C	0x6F23      	MOVWF       FARG_lcd_clean_row_fila, 1
0x828E	0xF015EC78  	CALL        _lcd_clean_row, 0
;Expendedora.c,572 :: 		lcd_clean_row(4);
0x8292	0x0E04      	MOVLW       4
0x8294	0x6F23      	MOVWF       FARG_lcd_clean_row_fila, 1
0x8296	0xF015EC78  	CALL        _lcd_clean_row, 0
;Expendedora.c,573 :: 		lcd_out(1, 5, "Expendedora");
0x829A	0x0E01      	MOVLW       1
0x829C	0x6F23      	MOVWF       FARG_lcd_out_fila, 1
0x829E	0x0E05      	MOVLW       5
0x82A0	0x6F24      	MOVWF       FARG_lcd_out_col, 1
0x82A2	0x0EC3      	MOVLW       ?lstr3_Expendedora
0x82A4	0x6F25      	MOVWF       FARG_lcd_out_texto, 1
0x82A6	0x0E02      	MOVLW       hi_addr(?lstr3_Expendedora)
0x82A8	0x6F26      	MOVWF       FARG_lcd_out_texto+1, 1
0x82AA	0xF010EC01  	CALL        _lcd_out, 0
;Expendedora.c,575 :: 		if(BOTON_ENTRADA1)
0x82AE	0xA883      	BTFSS       PORTD, 4 
0x82B0	0xD008      	BRA         L_expendedora_temporizadores669
;Expendedora.c,576 :: 		lcd_chr(1,18,'B');
0x82B2	0x0E01      	MOVLW       1
0x82B4	0x6F31      	MOVWF       FARG_lcd_chr_fila, 1
0x82B6	0x0E12      	MOVLW       18
0x82B8	0x6F32      	MOVWF       FARG_lcd_chr_col, 1
0x82BA	0x0E42      	MOVLW       66
0x82BC	0x6F33      	MOVWF       FARG_lcd_chr_c, 1
0x82BE	0xF00BEC09  	CALL        _lcd_chr, 0
L_expendedora_temporizadores669:
;Expendedora.c,577 :: 		if(SENSOR_COCHE)
0x82C2	0xA083      	BTFSS       PORTD, 0 
0x82C4	0xD008      	BRA         L_expendedora_temporizadores670
;Expendedora.c,578 :: 		lcd_chr(1,20,'C');
0x82C6	0x0E01      	MOVLW       1
0x82C8	0x6F31      	MOVWF       FARG_lcd_chr_fila, 1
0x82CA	0x0E14      	MOVLW       20
0x82CC	0x6F32      	MOVWF       FARG_lcd_chr_col, 1
0x82CE	0x0E43      	MOVLW       67
0x82D0	0x6F33      	MOVWF       FARG_lcd_chr_c, 1
0x82D2	0xF00BEC09  	CALL        _lcd_chr, 0
L_expendedora_temporizadores670:
;Expendedora.c,579 :: 		}
L_expendedora_temporizadores668:
;Expendedora.c,580 :: 		}
L_expendedora_temporizadores667:
;Expendedora.c,581 :: 		}
L_expendedora_temporizadores665:
;Expendedora.c,582 :: 		}
L_end_expendedora_temporizadores:
0x82D6	0x0012      	RETURN      0
; end of _expendedora_temporizadores
_expendedora_barrera:
;Expendedora.c,471 :: 		void expendedora_barrera(){
;Expendedora.c,476 :: 		if(BOTON_ENTRADA1 && !sensor.B0){
0x82D8	0xA883      	BTFSS       PORTD, 4 
0x82DA	0xD074      	BRA         L_expendedora_barrera658
0x82DC	0x0102      	MOVLB       2
0x82DE	0xB107      	BTFSC       expendedora_barrera_sensor_L0, 0, 1
0x82E0	0xD071      	BRA         L_expendedora_barrera658
L__expendedora_barrera995:
;Expendedora.c,477 :: 		sensor.B0 = true;
0x82E2	0x8107      	BSF         expendedora_barrera_sensor_L0, 0, 1
;Expendedora.c,479 :: 		string_cpyc(bufferEeprom, CAN_TPV);
0x82E4	0x0E15      	MOVLW       _bufferEeprom
0x82E6	0x0105      	MOVLB       5
0x82E8	0x6F23      	MOVWF       FARG_string_cpyc_destino, 1
0x82EA	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x82EC	0x6F24      	MOVWF       FARG_string_cpyc_destino+1, 1
0x82EE	0x0EBC      	MOVLW       _CAN_TPV
0x82F0	0x6F25      	MOVWF       FARG_string_cpyc_origen, 1
0x82F2	0x0EA3      	MOVLW       hi_addr(_CAN_TPV)
0x82F4	0x6F26      	MOVWF       FARG_string_cpyc_origen+1, 1
0x82F6	0x0E00      	MOVLW       higher_addr(_CAN_TPV)
0x82F8	0x6F27      	MOVWF       FARG_string_cpyc_origen+2, 1
0x82FA	0xF014EC09  	CALL        _string_cpyc, 0
;Expendedora.c,480 :: 		string_addc(bufferEeprom, CAN_BAR);         //BAR
0x82FE	0x0E15      	MOVLW       _bufferEeprom
0x8300	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x8302	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x8304	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x8306	0x0EE8      	MOVLW       expendedora_barrera_CAN_BAR_L0
0x8308	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x830A	0x0EA3      	MOVLW       hi_addr(expendedora_barrera_CAN_BAR_L0)
0x830C	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x830E	0x0E00      	MOVLW       higher_addr(expendedora_barrera_CAN_BAR_L0)
0x8310	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x8312	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,481 :: 		string_addc(bufferEeprom, BARRERA_ABIERTA);
0x8316	0x0E15      	MOVLW       _bufferEeprom
0x8318	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x831A	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x831C	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x831E	0x0E8A      	MOVLW       expendedora_barrera_BARRERA_ABIERTA_L0
0x8320	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x8322	0x0EA3      	MOVLW       hi_addr(expendedora_barrera_BARRERA_ABIERTA_L0)
0x8324	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x8326	0x0E00      	MOVLW       higher_addr(expendedora_barrera_BARRERA_ABIERTA_L0)
0x8328	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x832A	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,482 :: 		DS1307_read(&myRTC, false);
0x832E	0x0EFA      	MOVLW       _myRTC
0x8330	0x6F23      	MOVWF       FARG_DS1307_read_myDS, 1
0x8332	0x0E03      	MOVLW       hi_addr(_myRTC)
0x8334	0x6F24      	MOVWF       FARG_DS1307_read_myDS+1, 1
0x8336	0x6B25      	CLRF        FARG_DS1307_read_formatComplet, 1
0x8338	0xF011ECAD  	CALL        _DS1307_read, 0
;Expendedora.c,483 :: 		string_add(bufferEeprom, &myRTC.time[1]);
0x833C	0x0E15      	MOVLW       _bufferEeprom
0x833E	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x8340	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x8342	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x8344	0x0E02      	MOVLW       _myRTC+8
0x8346	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x8348	0x0E04      	MOVLW       hi_addr(_myRTC+8)
0x834A	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x834C	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,485 :: 		string_addc(bufferEeprom, CAN_MODULE);
0x8350	0x0E15      	MOVLW       _bufferEeprom
0x8352	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x8354	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x8356	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x8358	0x0E1E      	MOVLW       _CAN_MODULE
0x835A	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x835C	0x0EA4      	MOVLW       hi_addr(_CAN_MODULE)
0x835E	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x8360	0x0E00      	MOVLW       higher_addr(_CAN_MODULE)
0x8362	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x8364	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,486 :: 		numToHex(canId, msjConst, 1);
0x8368	0xF523C2BF  	MOVFF       _canId, FARG_numToHex_valor
0x836C	0x0E00      	MOVLW       0
0x836E	0x6F24      	MOVWF       FARG_numToHex_valor+1, 1
0x8370	0x6F25      	MOVWF       FARG_numToHex_valor+2, 1
0x8372	0x6F26      	MOVWF       FARG_numToHex_valor+3, 1
0x8374	0x0E05      	MOVLW       _msjConst
0x8376	0x6F27      	MOVWF       FARG_numToHex_cadena, 1
0x8378	0x0E03      	MOVLW       hi_addr(_msjConst)
0x837A	0x6F28      	MOVWF       FARG_numToHex_cadena+1, 1
0x837C	0x0E01      	MOVLW       1
0x837E	0x6F29      	MOVWF       FARG_numToHex_bytes, 1
0x8380	0xF016EC51  	CALL        _numToHex, 0
;Expendedora.c,487 :: 		string_add(bufferEeprom, msjConst);
0x8384	0x0E15      	MOVLW       _bufferEeprom
0x8386	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x8388	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x838A	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x838C	0x0E05      	MOVLW       _msjConst
0x838E	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x8390	0x0E03      	MOVLW       hi_addr(_msjConst)
0x8392	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x8394	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,488 :: 		buffer_save_send(false, bufferEeprom);
0x8398	0x6B23      	CLRF        FARG_buffer_save_send_guardar, 1
0x839A	0x0E15      	MOVLW       _bufferEeprom
0x839C	0x6F24      	MOVWF       FARG_buffer_save_send_buffer, 1
0x839E	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x83A0	0x6F25      	MOVWF       FARG_buffer_save_send_buffer+1, 1
0x83A2	0xF014ECA9  	CALL        _buffer_save_send, 0
;Expendedora.c,492 :: 		delay_ms(50);
0x83A6	0x0E03      	MOVLW       3
0x83A8	0x6E0B      	MOVWF       R11, 0
0x83AA	0x0E8A      	MOVLW       138
0x83AC	0x6E0C      	MOVWF       R12, 0
0x83AE	0x0E55      	MOVLW       85
0x83B0	0x6E0D      	MOVWF       R13, 0
L_expendedora_barrera659:
0x83B2	0x2E0D      	DECFSZ      R13, 1, 0
0x83B4	0xD7FE      	BRA         L_expendedora_barrera659
0x83B6	0x2E0C      	DECFSZ      R12, 1, 0
0x83B8	0xD7FC      	BRA         L_expendedora_barrera659
0x83BA	0x2E0B      	DECFSZ      R11, 1, 0
0x83BC	0xD7FA      	BRA         L_expendedora_barrera659
0x83BE	0x0000      	NOP
0x83C0	0x0000      	NOP
;Expendedora.c,493 :: 		}else if(!BOTON_ENTRADA1 && sensor){
0x83C2	0xD014      	BRA         L_expendedora_barrera660
L_expendedora_barrera658:
0x83C4	0xB883      	BTFSC       PORTD, 4 
0x83C6	0xD012      	BRA         L_expendedora_barrera663
0x83C8	0x0102      	MOVLB       2
0x83CA	0x5307      	MOVF        expendedora_barrera_sensor_L0, 1, 1
0x83CC	0xE00F      	BZ          L_expendedora_barrera663
L__expendedora_barrera994:
;Expendedora.c,494 :: 		sensor.B0 = false;
0x83CE	0x9107      	BCF         expendedora_barrera_sensor_L0, 0, 1
;Expendedora.c,495 :: 		delay_ms(50);
0x83D0	0x0E03      	MOVLW       3
0x83D2	0x6E0B      	MOVWF       R11, 0
0x83D4	0x0E8A      	MOVLW       138
0x83D6	0x6E0C      	MOVWF       R12, 0
0x83D8	0x0E55      	MOVLW       85
0x83DA	0x6E0D      	MOVWF       R13, 0
L_expendedora_barrera664:
0x83DC	0x2E0D      	DECFSZ      R13, 1, 0
0x83DE	0xD7FE      	BRA         L_expendedora_barrera664
0x83E0	0x2E0C      	DECFSZ      R12, 1, 0
0x83E2	0xD7FC      	BRA         L_expendedora_barrera664
0x83E4	0x2E0B      	DECFSZ      R11, 1, 0
0x83E6	0xD7FA      	BRA         L_expendedora_barrera664
0x83E8	0x0000      	NOP
0x83EA	0x0000      	NOP
;Expendedora.c,496 :: 		}
L_expendedora_barrera663:
L_expendedora_barrera660:
;Expendedora.c,540 :: 		}
L_end_expendedora_barrera:
0x83EC	0x0012      	RETURN      0
; end of _expendedora_barrera
_expendedora_checkTarjeta:
;Expendedora.c,584 :: 		void expendedora_checkTarjeta(){
;Expendedora.c,613 :: 		if(wiegand26_read_card(&id)){
0x83EE	0x0EDE      	MOVLW       expendedora_checkTarjeta_id_L0
0x83F0	0x0104      	MOVLB       4
0x83F2	0x6FBF      	MOVWF       FARG_wiegand26_read_card_id, 1
0x83F4	0x0E02      	MOVLW       hi_addr(expendedora_checkTarjeta_id_L0)
0x83F6	0x6FC0      	MOVWF       FARG_wiegand26_read_card_id+1, 1
0x83F8	0xF03CEC4B  	CALL        _wiegand26_read_card, 0
0x83FC	0x5200      	MOVF        R0, 1 
0x83FE	0xE035      	BZ          L_expendedora_checkTarjeta671
;Expendedora.c,614 :: 		limpiarLCD = true;
0x8400	0x0E01      	MOVLW       1
0x8402	0x0102      	MOVLB       2
0x8404	0x6F78      	MOVWF       _limpiarLCD, 1
;Expendedora.c,615 :: 		tempLCD = 0;
0x8406	0x6B77      	CLRF        _tempLCD, 1
;Expendedora.c,616 :: 		if(!buscarID && !buscarNIP)
0x8408	0x0101      	MOVLB       1
0x840A	0x53E2      	MOVF        expendedora_checkTarjeta_buscarID_L0, 1, 1
0x840C	0xE104      	BNZ         L_expendedora_checkTarjeta674
0x840E	0x53E1      	MOVF        expendedora_checkTarjeta_buscarNIP_L0, 1, 1
0x8410	0xE102      	BNZ         L_expendedora_checkTarjeta674
L__expendedora_checkTarjeta1012:
;Expendedora.c,617 :: 		buscarID = true;
0x8412	0x0E01      	MOVLW       1
0x8414	0x6FE2      	MOVWF       expendedora_checkTarjeta_buscarID_L0, 1
L_expendedora_checkTarjeta674:
;Expendedora.c,618 :: 		lcd_clean_row(1);
0x8416	0x0E01      	MOVLW       1
0x8418	0x0105      	MOVLB       5
0x841A	0x6F23      	MOVWF       FARG_lcd_clean_row_fila, 1
0x841C	0xF015EC78  	CALL        _lcd_clean_row, 0
;Expendedora.c,619 :: 		lcd_out(1, 1, "CARD: ");
0x8420	0x0E01      	MOVLW       1
0x8422	0x6F23      	MOVWF       FARG_lcd_out_fila, 1
0x8424	0x0E01      	MOVLW       1
0x8426	0x6F24      	MOVWF       FARG_lcd_out_col, 1
0x8428	0x0E6D      	MOVLW       ?lstr4_Expendedora
0x842A	0x6F25      	MOVWF       FARG_lcd_out_texto, 1
0x842C	0x0E01      	MOVLW       hi_addr(?lstr4_Expendedora)
0x842E	0x6F26      	MOVWF       FARG_lcd_out_texto+1, 1
0x8430	0xF010EC01  	CALL        _lcd_out, 0
;Expendedora.c,620 :: 		longtostr(id, msjConst);
0x8434	0xF4BFC2DE  	MOVFF       expendedora_checkTarjeta_id_L0, FARG_LongToStr_input
0x8438	0xF4C0C2DF  	MOVFF       expendedora_checkTarjeta_id_L0+1, FARG_LongToStr_input+1
0x843C	0xF4C1C2E0  	MOVFF       expendedora_checkTarjeta_id_L0+2, FARG_LongToStr_input+2
0x8440	0xF4C2C2E1  	MOVFF       expendedora_checkTarjeta_id_L0+3, FARG_LongToStr_input+3
0x8444	0x0E05      	MOVLW       _msjConst
0x8446	0x0104      	MOVLB       4
0x8448	0x6FC3      	MOVWF       FARG_LongToStr_output, 1
0x844A	0x0E03      	MOVLW       hi_addr(_msjConst)
0x844C	0x6FC4      	MOVWF       FARG_LongToStr_output+1, 1
0x844E	0xF03AECA4  	CALL        _LongToStr, 0
;Expendedora.c,621 :: 		lcd_out(1, sizeof("CARD: "), msjConst);
0x8452	0x0E01      	MOVLW       1
0x8454	0x0105      	MOVLB       5
0x8456	0x6F23      	MOVWF       FARG_lcd_out_fila, 1
0x8458	0x0E06      	MOVLW       6
0x845A	0x6F24      	MOVWF       FARG_lcd_out_col, 1
0x845C	0x0E05      	MOVLW       _msjConst
0x845E	0x6F25      	MOVWF       FARG_lcd_out_texto, 1
0x8460	0x0E03      	MOVLW       hi_addr(_msjConst)
0x8462	0x6F26      	MOVWF       FARG_lcd_out_texto+1, 1
0x8464	0xF010EC01  	CALL        _lcd_out, 0
;Expendedora.c,627 :: 		}else if(wiegand26_read_nip(&nip)){
0x8468	0xD041      	BRA         L_expendedora_checkTarjeta675
L_expendedora_checkTarjeta671:
0x846A	0x0EE2      	MOVLW       expendedora_checkTarjeta_nip_L0
0x846C	0x0104      	MOVLB       4
0x846E	0x6FBF      	MOVWF       FARG_wiegand26_read_nip_nip, 1
0x8470	0x0E02      	MOVLW       hi_addr(expendedora_checkTarjeta_nip_L0)
0x8472	0x6FC0      	MOVWF       FARG_wiegand26_read_nip_nip+1, 1
0x8474	0xF03DEC53  	CALL        _wiegand26_read_nip, 0
0x8478	0x5200      	MOVF        R0, 1 
0x847A	0xE038      	BZ          L_expendedora_checkTarjeta676
;Expendedora.c,628 :: 		limpiarLCD = true;
0x847C	0x0E01      	MOVLW       1
0x847E	0x0102      	MOVLB       2
0x8480	0x6F78      	MOVWF       _limpiarLCD, 1
;Expendedora.c,629 :: 		tempLCD = 0;
0x8482	0x6B77      	CLRF        _tempLCD, 1
;Expendedora.c,630 :: 		if(!buscarID && !buscarNIP)
0x8484	0x0101      	MOVLB       1
0x8486	0x53E2      	MOVF        expendedora_checkTarjeta_buscarID_L0, 1, 1
0x8488	0xE104      	BNZ         L_expendedora_checkTarjeta679
0x848A	0x53E1      	MOVF        expendedora_checkTarjeta_buscarNIP_L0, 1, 1
0x848C	0xE102      	BNZ         L_expendedora_checkTarjeta679
L__expendedora_checkTarjeta1011:
;Expendedora.c,631 :: 		buscarNIP = true;
0x848E	0x0E01      	MOVLW       1
0x8490	0x6FE1      	MOVWF       expendedora_checkTarjeta_buscarNIP_L0, 1
L_expendedora_checkTarjeta679:
;Expendedora.c,632 :: 		lcd_clean_row(1);
0x8492	0x0E01      	MOVLW       1
0x8494	0x0105      	MOVLB       5
0x8496	0x6F23      	MOVWF       FARG_lcd_clean_row_fila, 1
0x8498	0xF015EC78  	CALL        _lcd_clean_row, 0
;Expendedora.c,633 :: 		lcd_out(1, 1, " NIP: ");
0x849C	0x0E01      	MOVLW       1
0x849E	0x6F23      	MOVWF       FARG_lcd_out_fila, 1
0x84A0	0x0E01      	MOVLW       1
0x84A2	0x6F24      	MOVWF       FARG_lcd_out_col, 1
0x84A4	0x0E66      	MOVLW       ?lstr5_Expendedora
0x84A6	0x6F25      	MOVWF       FARG_lcd_out_texto, 1
0x84A8	0x0E01      	MOVLW       hi_addr(?lstr5_Expendedora)
0x84AA	0x6F26      	MOVWF       FARG_lcd_out_texto+1, 1
0x84AC	0xF010EC01  	CALL        _lcd_out, 0
;Expendedora.c,634 :: 		numToString(nip, msjConst, 4);
0x84B0	0xF53BC2E2  	MOVFF       expendedora_checkTarjeta_nip_L0, FARG_numToString_valor
0x84B4	0xF53CC2E3  	MOVFF       expendedora_checkTarjeta_nip_L0+1, FARG_numToString_valor+1
0x84B8	0x0E00      	MOVLW       0
0x84BA	0x0102      	MOVLB       2
0x84BC	0xBFE3      	BTFSC       expendedora_checkTarjeta_nip_L0+1, 7, 1
0x84BE	0x0EFF      	MOVLW       255
0x84C0	0x0105      	MOVLB       5
0x84C2	0x6F3D      	MOVWF       FARG_numToString_valor+2, 1
0x84C4	0x6F3E      	MOVWF       FARG_numToString_valor+3, 1
0x84C6	0x0E05      	MOVLW       _msjConst
0x84C8	0x6F3F      	MOVWF       FARG_numToString_cadena, 1
0x84CA	0x0E03      	MOVLW       hi_addr(_msjConst)
0x84CC	0x6F40      	MOVWF       FARG_numToString_cadena+1, 1
0x84CE	0x0E04      	MOVLW       4
0x84D0	0x6F41      	MOVWF       FARG_numToString_digitos, 1
0x84D2	0xF005EC17  	CALL        _numToString, 0
;Expendedora.c,636 :: 		lcd_out(1, sizeof(" NIP: "), msjConst);
0x84D6	0x0E01      	MOVLW       1
0x84D8	0x0105      	MOVLB       5
0x84DA	0x6F23      	MOVWF       FARG_lcd_out_fila, 1
0x84DC	0x0E06      	MOVLW       6
0x84DE	0x6F24      	MOVWF       FARG_lcd_out_col, 1
0x84E0	0x0E05      	MOVLW       _msjConst
0x84E2	0x6F25      	MOVWF       FARG_lcd_out_texto, 1
0x84E4	0x0E03      	MOVLW       hi_addr(_msjConst)
0x84E6	0x6F26      	MOVWF       FARG_lcd_out_texto+1, 1
0x84E8	0xF010EC01  	CALL        _lcd_out, 0
;Expendedora.c,642 :: 		}
L_expendedora_checkTarjeta676:
L_expendedora_checkTarjeta675:
;Expendedora.c,645 :: 		if(buscarID){
0x84EC	0x0101      	MOVLB       1
0x84EE	0x53E2      	MOVF        expendedora_checkTarjeta_buscarID_L0, 1, 1
0x84F0	0xE031      	BZ          L_expendedora_checkTarjeta680
;Expendedora.c,646 :: 		if(!mysql_search(tableSoporte, soporteID, id, &fila)){
0x84F2	0x0E5C      	MOVLW       _tableSoporte
0x84F4	0x0104      	MOVLB       4
0x84F6	0x6FBF      	MOVWF       FARG_mysql_search_tabla, 1
0x84F8	0x0E01      	MOVLW       hi_addr(_tableSoporte)
0x84FA	0x6FC0      	MOVWF       FARG_mysql_search_tabla+1, 1
0x84FC	0x0EEB      	MOVLW       _soporteID
0x84FE	0x6FC1      	MOVWF       FARG_mysql_search_columna, 1
0x8500	0x0E00      	MOVLW       hi_addr(_soporteID)
0x8502	0x6FC2      	MOVWF       FARG_mysql_search_columna+1, 1
0x8504	0xF4C3C2DE  	MOVFF       expendedora_checkTarjeta_id_L0, FARG_mysql_search_buscar
0x8508	0xF4C4C2DF  	MOVFF       expendedora_checkTarjeta_id_L0+1, FARG_mysql_search_buscar+1
0x850C	0xF4C5C2E0  	MOVFF       expendedora_checkTarjeta_id_L0+2, FARG_mysql_search_buscar+2
0x8510	0xF4C6C2E1  	MOVFF       expendedora_checkTarjeta_id_L0+3, FARG_mysql_search_buscar+3
0x8514	0x0EDC      	MOVLW       expendedora_checkTarjeta_fila_L0
0x8516	0x6FC7      	MOVWF       FARG_mysql_search_fila, 1
0x8518	0x0E02      	MOVLW       hi_addr(expendedora_checkTarjeta_fila_L0)
0x851A	0x6FC8      	MOVWF       FARG_mysql_search_fila+1, 1
0x851C	0xF038EC7F  	CALL        _mysql_search, 0
0x8520	0x5200      	MOVF        R0, 1 
0x8522	0xE118      	BNZ         L_expendedora_checkTarjeta681
;Expendedora.c,656 :: 		usart_write_line("Card soport block");
0x8524	0x0ED9      	MOVLW       ?lstr6_Expendedora
0x8526	0x0104      	MOVLB       4
0x8528	0x6FBF      	MOVWF       FARG_usart_write_line_texto, 1
0x852A	0x0E00      	MOVLW       hi_addr(?lstr6_Expendedora)
0x852C	0x6FC0      	MOVWF       FARG_usart_write_line_texto+1, 1
0x852E	0xF03AEC46  	CALL        _usart_write_line, 0
;Expendedora.c,657 :: 		lcd_clean_row(3);
0x8532	0x0E03      	MOVLW       3
0x8534	0x0105      	MOVLB       5
0x8536	0x6F23      	MOVWF       FARG_lcd_clean_row_fila, 1
0x8538	0xF015EC78  	CALL        _lcd_clean_row, 0
;Expendedora.c,658 :: 		lcd_out(3,1,"Tarjeta bloqueada");
0x853C	0x0E03      	MOVLW       3
0x853E	0x6F23      	MOVWF       FARG_lcd_out_fila, 1
0x8540	0x0E01      	MOVLW       1
0x8542	0x6F24      	MOVWF       FARG_lcd_out_col, 1
0x8544	0x0EEE      	MOVLW       ?lstr7_Expendedora
0x8546	0x6F25      	MOVWF       FARG_lcd_out_texto, 1
0x8548	0x0E00      	MOVLW       hi_addr(?lstr7_Expendedora)
0x854A	0x6F26      	MOVWF       FARG_lcd_out_texto+1, 1
0x854C	0xF010EC01  	CALL        _lcd_out, 0
;Expendedora.c,659 :: 		buscarID = false;
0x8550	0x0101      	MOVLB       1
0x8552	0x6BE2      	CLRF        expendedora_checkTarjeta_buscarID_L0, 1
;Expendedora.c,674 :: 		}
L_expendedora_checkTarjeta681:
;Expendedora.c,675 :: 		}
L_expendedora_checkTarjeta680:
;Expendedora.c,678 :: 		if(!SENSOR_COCHE){
0x8554	0xB083      	BTFSC       PORTD, 0 
0x8556	0xD017      	BRA         L_expendedora_checkTarjeta682
;Expendedora.c,679 :: 		if(buscarNIP || buscarID){
0x8558	0x0101      	MOVLB       1
0x855A	0x53E1      	MOVF        expendedora_checkTarjeta_buscarNIP_L0, 1, 1
0x855C	0xE103      	BNZ         L__expendedora_checkTarjeta1010
0x855E	0x53E2      	MOVF        expendedora_checkTarjeta_buscarID_L0, 1, 1
0x8560	0xE101      	BNZ         L__expendedora_checkTarjeta1010
0x8562	0xD011      	BRA         L_expendedora_checkTarjeta685
L__expendedora_checkTarjeta1010:
;Expendedora.c,680 :: 		buscarNIP = false;
0x8564	0x6BE1      	CLRF        expendedora_checkTarjeta_buscarNIP_L0, 1
;Expendedora.c,681 :: 		buscarID = false;
0x8566	0x6BE2      	CLRF        expendedora_checkTarjeta_buscarID_L0, 1
;Expendedora.c,682 :: 		lcd_clean_row(3);
0x8568	0x0E03      	MOVLW       3
0x856A	0x0105      	MOVLB       5
0x856C	0x6F23      	MOVWF       FARG_lcd_clean_row_fila, 1
0x856E	0xF015EC78  	CALL        _lcd_clean_row, 0
;Expendedora.c,683 :: 		lcd_out(3,1,"No se detecta auto");
0x8572	0x0E03      	MOVLW       3
0x8574	0x6F23      	MOVWF       FARG_lcd_out_fila, 1
0x8576	0x0E01      	MOVLW       1
0x8578	0x6F24      	MOVWF       FARG_lcd_out_col, 1
0x857A	0x0E49      	MOVLW       ?lstr8_Expendedora
0x857C	0x6F25      	MOVWF       FARG_lcd_out_texto, 1
0x857E	0x0E01      	MOVLW       hi_addr(?lstr8_Expendedora)
0x8580	0x6F26      	MOVWF       FARG_lcd_out_texto+1, 1
0x8582	0xF010EC01  	CALL        _lcd_out, 0
;Expendedora.c,684 :: 		}
L_expendedora_checkTarjeta685:
;Expendedora.c,685 :: 		}
L_expendedora_checkTarjeta682:
;Expendedora.c,688 :: 		if(buscarID){
0x8586	0x0101      	MOVLB       1
0x8588	0x53E2      	MOVF        expendedora_checkTarjeta_buscarID_L0, 1, 1
0x858A	0xB4D8      	BTFSC       STATUS, 2 
0x858C	0xD36B      	BRA         L_expendedora_checkTarjeta686
;Expendedora.c,689 :: 		buscarID = false;
0x858E	0x6BE2      	CLRF        expendedora_checkTarjeta_buscarID_L0, 1
;Expendedora.c,691 :: 		DS1307_read(&myRTC, false);
0x8590	0x0EFA      	MOVLW       _myRTC
0x8592	0x0105      	MOVLB       5
0x8594	0x6F23      	MOVWF       FARG_DS1307_read_myDS, 1
0x8596	0x0E03      	MOVLW       hi_addr(_myRTC)
0x8598	0x6F24      	MOVWF       FARG_DS1307_read_myDS+1, 1
0x859A	0x6B25      	CLRF        FARG_DS1307_read_formatComplet, 1
0x859C	0xF011ECAD  	CALL        _DS1307_read, 0
;Expendedora.c,693 :: 		string_cpyc(canCommand, CAN_TPV);
0x85A0	0x0E5C      	MOVLW       _canCommand
0x85A2	0x6F23      	MOVWF       FARG_string_cpyc_destino, 1
0x85A4	0x0E04      	MOVLW       hi_addr(_canCommand)
0x85A6	0x6F24      	MOVWF       FARG_string_cpyc_destino+1, 1
0x85A8	0x0EBC      	MOVLW       _CAN_TPV
0x85AA	0x6F25      	MOVWF       FARG_string_cpyc_origen, 1
0x85AC	0x0EA3      	MOVLW       hi_addr(_CAN_TPV)
0x85AE	0x6F26      	MOVWF       FARG_string_cpyc_origen+1, 1
0x85B0	0x0E00      	MOVLW       higher_addr(_CAN_TPV)
0x85B2	0x6F27      	MOVWF       FARG_string_cpyc_origen+2, 1
0x85B4	0xF014EC09  	CALL        _string_cpyc, 0
;Expendedora.c,694 :: 		string_addc(canCommand, CAN_IDX);       //IDX
0x85B8	0x0E5C      	MOVLW       _canCommand
0x85BA	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x85BC	0x0E04      	MOVLW       hi_addr(_canCommand)
0x85BE	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x85C0	0x0EF4      	MOVLW       _CAN_IDX
0x85C2	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x85C4	0x0EA3      	MOVLW       hi_addr(_CAN_IDX)
0x85C6	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x85C8	0x0E00      	MOVLW       higher_addr(_CAN_IDX)
0x85CA	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x85CC	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,695 :: 		numToHex(id, msjConst, 3);
0x85D0	0xF523C2DE  	MOVFF       expendedora_checkTarjeta_id_L0, FARG_numToHex_valor
0x85D4	0xF524C2DF  	MOVFF       expendedora_checkTarjeta_id_L0+1, FARG_numToHex_valor+1
0x85D8	0xF525C2E0  	MOVFF       expendedora_checkTarjeta_id_L0+2, FARG_numToHex_valor+2
0x85DC	0xF526C2E1  	MOVFF       expendedora_checkTarjeta_id_L0+3, FARG_numToHex_valor+3
0x85E0	0x0E05      	MOVLW       _msjConst
0x85E2	0x6F27      	MOVWF       FARG_numToHex_cadena, 1
0x85E4	0x0E03      	MOVLW       hi_addr(_msjConst)
0x85E6	0x6F28      	MOVWF       FARG_numToHex_cadena+1, 1
0x85E8	0x0E03      	MOVLW       3
0x85EA	0x6F29      	MOVWF       FARG_numToHex_bytes, 1
0x85EC	0xF016EC51  	CALL        _numToHex, 0
;Expendedora.c,696 :: 		string_add(canCommand, msjConst);       //IDX + RFID(HEX)
0x85F0	0x0E5C      	MOVLW       _canCommand
0x85F2	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x85F4	0x0E04      	MOVLW       hi_addr(_canCommand)
0x85F6	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x85F8	0x0E05      	MOVLW       _msjConst
0x85FA	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x85FC	0x0E03      	MOVLW       hi_addr(_msjConst)
0x85FE	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x8600	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,697 :: 		string_add(canCommand, &myRTC.time[1]); //IDX + ID(HEX) + DATE
0x8604	0x0E5C      	MOVLW       _canCommand
0x8606	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x8608	0x0E04      	MOVLW       hi_addr(_canCommand)
0x860A	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x860C	0x0E02      	MOVLW       _myRTC+8
0x860E	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x8610	0x0E04      	MOVLW       hi_addr(_myRTC+8)
0x8612	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x8614	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,699 :: 		string_cpyc(acceso, ACCESO_DENEGADO);   //Sin Acceso, Sin vigencia, no passback, desconocida id
0x8618	0x0EA4      	MOVLW       expendedora_checkTarjeta_acceso_L0
0x861A	0x6F23      	MOVWF       FARG_string_cpyc_destino, 1
0x861C	0x0E04      	MOVLW       hi_addr(expendedora_checkTarjeta_acceso_L0)
0x861E	0x6F24      	MOVWF       FARG_string_cpyc_destino+1, 1
0x8620	0x0E80      	MOVLW       expendedora_checkTarjeta_ACCESO_DENEGADO_L0
0x8622	0x6F25      	MOVWF       FARG_string_cpyc_origen, 1
0x8624	0x0EA3      	MOVLW       hi_addr(expendedora_checkTarjeta_ACCESO_DENEGADO_L0)
0x8626	0x6F26      	MOVWF       FARG_string_cpyc_origen+1, 1
0x8628	0x0E00      	MOVLW       higher_addr(expendedora_checkTarjeta_ACCESO_DENEGADO_L0)
0x862A	0x6F27      	MOVWF       FARG_string_cpyc_origen+2, 1
0x862C	0xF014EC09  	CALL        _string_cpyc, 0
;Expendedora.c,702 :: 		if(!mysql_search(tablePensionados, pensionadosID, id, &fila)){
0x8630	0x0E3D      	MOVLW       _tablePensionados
0x8632	0x0104      	MOVLB       4
0x8634	0x6FBF      	MOVWF       FARG_mysql_search_tabla, 1
0x8636	0x0E01      	MOVLW       hi_addr(_tablePensionados)
0x8638	0x6FC0      	MOVWF       FARG_mysql_search_tabla+1, 1
0x863A	0x0EC6      	MOVLW       _pensionadosID
0x863C	0x6FC1      	MOVWF       FARG_mysql_search_columna, 1
0x863E	0x0E01      	MOVLW       hi_addr(_pensionadosID)
0x8640	0x6FC2      	MOVWF       FARG_mysql_search_columna+1, 1
0x8642	0xF4C3C2DE  	MOVFF       expendedora_checkTarjeta_id_L0, FARG_mysql_search_buscar
0x8646	0xF4C4C2DF  	MOVFF       expendedora_checkTarjeta_id_L0+1, FARG_mysql_search_buscar+1
0x864A	0xF4C5C2E0  	MOVFF       expendedora_checkTarjeta_id_L0+2, FARG_mysql_search_buscar+2
0x864E	0xF4C6C2E1  	MOVFF       expendedora_checkTarjeta_id_L0+3, FARG_mysql_search_buscar+3
0x8652	0x0EDC      	MOVLW       expendedora_checkTarjeta_fila_L0
0x8654	0x6FC7      	MOVWF       FARG_mysql_search_fila, 1
0x8656	0x0E02      	MOVLW       hi_addr(expendedora_checkTarjeta_fila_L0)
0x8658	0x6FC8      	MOVWF       FARG_mysql_search_fila+1, 1
0x865A	0xF038EC7F  	CALL        _mysql_search, 0
0x865E	0x5200      	MOVF        R0, 1 
0x8660	0xA4D8      	BTFSS       STATUS, 2 
0x8662	0xD130      	BRA         L_expendedora_checkTarjeta687
;Expendedora.c,704 :: 		canCommand[3] = CAN_PENSIONADO[0];
0x8664	0x0E50      	MOVLW       80
0x8666	0x0104      	MOVLB       4
0x8668	0x6F5F      	MOVWF       _canCommand+3, 1
;Expendedora.c,705 :: 		canCommand[4] = CAN_PENSIONADO[1];
0x866A	0x0E45      	MOVLW       69
0x866C	0x6F60      	MOVWF       _canCommand+4, 1
;Expendedora.c,706 :: 		canCommand[5] = CAN_PENSIONADO[2];
0x866E	0x0E4E      	MOVLW       78
0x8670	0x6F61      	MOVWF       _canCommand+5, 1
;Expendedora.c,708 :: 		mysql_read_string(tablePensionados, pensionadosVigencia, fila, &vigencia);
0x8672	0x0E3D      	MOVLW       _tablePensionados
0x8674	0x0105      	MOVLB       5
0x8676	0x6F23      	MOVWF       FARG_mysql_read_string_name, 1
0x8678	0x0E01      	MOVLW       hi_addr(_tablePensionados)
0x867A	0x6F24      	MOVWF       FARG_mysql_read_string_name+1, 1
0x867C	0x0EBD      	MOVLW       _pensionadosVigencia
0x867E	0x6F25      	MOVWF       FARG_mysql_read_string_column, 1
0x8680	0x0E01      	MOVLW       hi_addr(_pensionadosVigencia)
0x8682	0x6F26      	MOVWF       FARG_mysql_read_string_column+1, 1
0x8684	0xF527C2DC  	MOVFF       expendedora_checkTarjeta_fila_L0, FARG_mysql_read_string_fila
0x8688	0xF528C2DD  	MOVFF       expendedora_checkTarjeta_fila_L0+1, FARG_mysql_read_string_fila+1
0x868C	0x0EA2      	MOVLW       expendedora_checkTarjeta_vigencia_L0
0x868E	0x6F29      	MOVWF       FARG_mysql_read_string_result, 1
0x8690	0x0E04      	MOVLW       hi_addr(expendedora_checkTarjeta_vigencia_L0)
0x8692	0x6F2A      	MOVWF       FARG_mysql_read_string_result+1, 1
0x8694	0xF014EC60  	CALL        _mysql_read_string, 0
;Expendedora.c,709 :: 		mysql_read_string(tablePensionados, pensionadosEstatus, fila, &estatus);
0x8698	0x0E3D      	MOVLW       _tablePensionados
0x869A	0x0105      	MOVLB       5
0x869C	0x6F23      	MOVWF       FARG_mysql_read_string_name, 1
0x869E	0x0E01      	MOVLW       hi_addr(_tablePensionados)
0x86A0	0x6F24      	MOVWF       FARG_mysql_read_string_name+1, 1
0x86A2	0x0EC9      	MOVLW       _pensionadosEstatus
0x86A4	0x6F25      	MOVWF       FARG_mysql_read_string_column, 1
0x86A6	0x0E01      	MOVLW       hi_addr(_pensionadosEstatus)
0x86A8	0x6F26      	MOVWF       FARG_mysql_read_string_column+1, 1
0x86AA	0xF527C2DC  	MOVFF       expendedora_checkTarjeta_fila_L0, FARG_mysql_read_string_fila
0x86AE	0xF528C2DD  	MOVFF       expendedora_checkTarjeta_fila_L0+1, FARG_mysql_read_string_fila+1
0x86B2	0x0EA3      	MOVLW       expendedora_checkTarjeta_estatus_L0
0x86B4	0x6F29      	MOVWF       FARG_mysql_read_string_result, 1
0x86B6	0x0E04      	MOVLW       hi_addr(expendedora_checkTarjeta_estatus_L0)
0x86B8	0x6F2A      	MOVWF       FARG_mysql_read_string_result+1, 1
0x86BA	0xF014EC60  	CALL        _mysql_read_string, 0
;Expendedora.c,716 :: 		if(vigencia == VIGENTE && (estatus == ESTATUS_PAS || estatus == ESTATUS_BREAK || !canSynchrony || !can.conected)){
0x86BE	0x0104      	MOVLB       4
0x86C0	0x51A2      	MOVF        expendedora_checkTarjeta_vigencia_L0, 0, 1
0x86C2	0x0A56      	XORLW       86
0x86C4	0xE161      	BNZ         L_expendedora_checkTarjeta692
0x86C6	0x51A3      	MOVF        expendedora_checkTarjeta_estatus_L0, 0, 1
0x86C8	0x0A4F      	XORLW       79
0x86CA	0xE00A      	BZ          L__expendedora_checkTarjeta1009
0x86CC	0x51A3      	MOVF        expendedora_checkTarjeta_estatus_L0, 0, 1
0x86CE	0x0A2D      	XORLW       45
0x86D0	0xE007      	BZ          L__expendedora_checkTarjeta1009
0x86D2	0x0102      	MOVLB       2
0x86D4	0x53DB      	MOVF        _canSynchrony, 1, 1
0x86D6	0xE004      	BZ          L__expendedora_checkTarjeta1009
0x86D8	0x0103      	MOVLB       3
0x86DA	0x5356      	MOVF        _can+13, 1, 1
0x86DC	0xE001      	BZ          L__expendedora_checkTarjeta1009
0x86DE	0xD054      	BRA         L_expendedora_checkTarjeta692
L__expendedora_checkTarjeta1009:
L__expendedora_checkTarjeta1008:
;Expendedora.c,718 :: 		eSensor = 0;  //Reiniciar maquina de estados
0x86E0	0x0102      	MOVLB       2
0x86E2	0x6B96      	CLRF        _eSensor, 1
;Expendedora.c,719 :: 		abrirBarrera = true;
0x86E4	0x0E01      	MOVLW       1
0x86E6	0x6FC2      	MOVWF       _abrirBarrera, 1
;Expendedora.c,720 :: 		SALIDA_RELE1 = 1;
0x86E8	0x8A80      	BSF         PORTA, 5 
;Expendedora.c,721 :: 		SALIDA_RELE2 = 1;
0x86EA	0x8084      	BSF         PORTE, 0 
;Expendedora.c,722 :: 		timer1_reset();
0x86EC	0xF00FECFC  	CALL        _timer1_reset, 0
;Expendedora.c,723 :: 		timer1_enable(true);
0x86F0	0x0E01      	MOVLW       1
0x86F2	0x0105      	MOVLB       5
0x86F4	0x6F23      	MOVWF       FARG_timer1_enable_enable, 1
0x86F6	0xF010EC57  	CALL        _timer1_enable, 0
;Expendedora.c,724 :: 		acceso[0] = TPV_ACCESO;     //Acceso
0x86FA	0x0E41      	MOVLW       65
0x86FC	0x0104      	MOVLB       4
0x86FE	0x6FA4      	MOVWF       expendedora_checkTarjeta_acceso_L0, 1
;Expendedora.c,726 :: 		if(!can.conected || !canSynchrony || estatus == ESTATUS_BREAK)
0x8700	0x0103      	MOVLB       3
0x8702	0x5356      	MOVF        _can+13, 1, 1
0x8704	0xE008      	BZ          L__expendedora_checkTarjeta1007
0x8706	0x0102      	MOVLB       2
0x8708	0x53DB      	MOVF        _canSynchrony, 1, 1
0x870A	0xE005      	BZ          L__expendedora_checkTarjeta1007
0x870C	0x0104      	MOVLB       4
0x870E	0x51A3      	MOVF        expendedora_checkTarjeta_estatus_L0, 0, 1
0x8710	0x0A2D      	XORLW       45
0x8712	0xE001      	BZ          L__expendedora_checkTarjeta1007
0x8714	0xD003      	BRA         L_expendedora_checkTarjeta695
L__expendedora_checkTarjeta1007:
0x8716	0x0104      	MOVLB       4
;Expendedora.c,727 :: 		acceso[2] = ESTATUS_BREAK;   //Estado del passback roto
0x8718	0x0E2D      	MOVLW       45
0x871A	0x6FA6      	MOVWF       expendedora_checkTarjeta_acceso_L0+2, 1
L_expendedora_checkTarjeta695:
;Expendedora.c,729 :: 		estatus = (!can.conected || !canSynchrony)? ESTATUS_BREAK:ESTATUS_MOD;
0x871C	0x0103      	MOVLB       3
0x871E	0x5356      	MOVF        _can+13, 1, 1
0x8720	0xE004      	BZ          L__expendedora_checkTarjeta1006
0x8722	0x0102      	MOVLB       2
0x8724	0x53DB      	MOVF        _canSynchrony, 1, 1
0x8726	0xE001      	BZ          L__expendedora_checkTarjeta1006
0x8728	0xD004      	BRA         L_expendedora_checkTarjeta698
L__expendedora_checkTarjeta1006:
0x872A	0x0E2D      	MOVLW       45
0x872C	0x0104      	MOVLB       4
0x872E	0x6F9F      	MOVWF       ?FLOC___expendedora_checkTarjetaT2673, 1
0x8730	0xD003      	BRA         L_expendedora_checkTarjeta699
L_expendedora_checkTarjeta698:
0x8732	0x0104      	MOVLB       4
0x8734	0x0E49      	MOVLW       73
0x8736	0x6F9F      	MOVWF       ?FLOC___expendedora_checkTarjetaT2673, 1
L_expendedora_checkTarjeta699:
0x8738	0xF4A3C49F  	MOVFF       ?FLOC___expendedora_checkTarjetaT2673, expendedora_checkTarjeta_estatus_L0
;Expendedora.c,730 :: 		mysql_write(tablePensionados, pensionadosEstatus, fila, estatus, false);
0x873C	0x0E3D      	MOVLW       _tablePensionados
0x873E	0x0105      	MOVLB       5
0x8740	0x6F23      	MOVWF       FARG_mysql_write_name, 1
0x8742	0x0E01      	MOVLW       hi_addr(_tablePensionados)
0x8744	0x6F24      	MOVWF       FARG_mysql_write_name+1, 1
0x8746	0x0EC9      	MOVLW       _pensionadosEstatus
0x8748	0x6F25      	MOVWF       FARG_mysql_write_column, 1
0x874A	0x0E01      	MOVLW       hi_addr(_pensionadosEstatus)
0x874C	0x6F26      	MOVWF       FARG_mysql_write_column+1, 1
0x874E	0xF527C2DC  	MOVFF       expendedora_checkTarjeta_fila_L0, FARG_mysql_write_fila
0x8752	0xF528C2DD  	MOVFF       expendedora_checkTarjeta_fila_L0+1, FARG_mysql_write_fila+1
0x8756	0xF529C49F  	MOVFF       ?FLOC___expendedora_checkTarjetaT2673, FARG_mysql_write_value
0x875A	0x0E00      	MOVLW       0
0x875C	0x6F2A      	MOVWF       FARG_mysql_write_value+1, 1
0x875E	0x6F2B      	MOVWF       FARG_mysql_write_value+2, 1
0x8760	0x6F2C      	MOVWF       FARG_mysql_write_value+3, 1
0x8762	0x6B2D      	CLRF        FARG_mysql_write_endWrite, 1
0x8764	0xF012ECDC  	CALL        _mysql_write, 0
;Expendedora.c,731 :: 		lcd_clean_row(2);
0x8768	0x0E02      	MOVLW       2
0x876A	0x0105      	MOVLB       5
0x876C	0x6F23      	MOVWF       FARG_lcd_clean_row_fila, 1
0x876E	0xF015EC78  	CALL        _lcd_clean_row, 0
;Expendedora.c,732 :: 		lcd_out(2, 1, "Acceso aceptado");
0x8772	0x0E02      	MOVLW       2
0x8774	0x6F23      	MOVWF       FARG_lcd_out_fila, 1
0x8776	0x0E01      	MOVLW       1
0x8778	0x6F24      	MOVWF       FARG_lcd_out_col, 1
0x877A	0x0ED1      	MOVLW       ?lstr9_Expendedora
0x877C	0x6F25      	MOVWF       FARG_lcd_out_texto, 1
0x877E	0x0E01      	MOVLW       hi_addr(?lstr9_Expendedora)
0x8780	0x6F26      	MOVWF       FARG_lcd_out_texto+1, 1
0x8782	0xF010EC01  	CALL        _lcd_out, 0
;Expendedora.c,738 :: 		}else{
0x8786	0xD02B      	BRA         L_expendedora_checkTarjeta700
L_expendedora_checkTarjeta692:
;Expendedora.c,739 :: 		if(vigencia == ESTATUS_NOT){
0x8788	0x0104      	MOVLB       4
0x878A	0x51A2      	MOVF        expendedora_checkTarjeta_vigencia_L0, 0, 1
0x878C	0x0A4E      	XORLW       78
0x878E	0xE112      	BNZ         L_expendedora_checkTarjeta701
;Expendedora.c,740 :: 		acceso[1] = TPV_NO_VIGENCIA;    //Vigencia
0x8790	0x0E56      	MOVLW       86
0x8792	0x6FA5      	MOVWF       expendedora_checkTarjeta_acceso_L0+1, 1
;Expendedora.c,741 :: 		lcd_clean_row(2);
0x8794	0x0E02      	MOVLW       2
0x8796	0x0105      	MOVLB       5
0x8798	0x6F23      	MOVWF       FARG_lcd_clean_row_fila, 1
0x879A	0xF015EC78  	CALL        _lcd_clean_row, 0
;Expendedora.c,742 :: 		lcd_out(2, 1, "Vigencia terminada");
0x879E	0x0E02      	MOVLW       2
0x87A0	0x6F23      	MOVWF       FARG_lcd_out_fila, 1
0x87A2	0x0E01      	MOVLW       1
0x87A4	0x6F24      	MOVWF       FARG_lcd_out_col, 1
0x87A6	0x0EAA      	MOVLW       ?lstr10_Expendedora
0x87A8	0x6F25      	MOVWF       FARG_lcd_out_texto, 1
0x87AA	0x0E01      	MOVLW       hi_addr(?lstr10_Expendedora)
0x87AC	0x6F26      	MOVWF       FARG_lcd_out_texto+1, 1
0x87AE	0xF010EC01  	CALL        _lcd_out, 0
;Expendedora.c,746 :: 		}else if(estatus == ESTATUS_MOD){
0x87B2	0xD015      	BRA         L_expendedora_checkTarjeta702
L_expendedora_checkTarjeta701:
0x87B4	0x0104      	MOVLB       4
0x87B6	0x51A3      	MOVF        expendedora_checkTarjeta_estatus_L0, 0, 1
0x87B8	0x0A49      	XORLW       73
0x87BA	0xE111      	BNZ         L_expendedora_checkTarjeta703
;Expendedora.c,747 :: 		acceso[2] = TPV_PASSBACK;   //Estado del passback
0x87BC	0x0E50      	MOVLW       80
0x87BE	0x6FA6      	MOVWF       expendedora_checkTarjeta_acceso_L0+2, 1
;Expendedora.c,748 :: 		lcd_clean_row(2);
0x87C0	0x0E02      	MOVLW       2
0x87C2	0x0105      	MOVLB       5
0x87C4	0x6F23      	MOVWF       FARG_lcd_clean_row_fila, 1
0x87C6	0xF015EC78  	CALL        _lcd_clean_row, 0
;Expendedora.c,749 :: 		lcd_out(2,1,"Passback activo");
0x87CA	0x0E02      	MOVLW       2
0x87CC	0x6F23      	MOVWF       FARG_lcd_out_fila, 1
0x87CE	0x0E01      	MOVLW       1
0x87D0	0x6F24      	MOVWF       FARG_lcd_out_col, 1
0x87D2	0x0E7C      	MOVLW       ?lstr11_Expendedora
0x87D4	0x6F25      	MOVWF       FARG_lcd_out_texto, 1
0x87D6	0x0E01      	MOVLW       hi_addr(?lstr11_Expendedora)
0x87D8	0x6F26      	MOVWF       FARG_lcd_out_texto+1, 1
0x87DA	0xF010EC01  	CALL        _lcd_out, 0
;Expendedora.c,753 :: 		}
L_expendedora_checkTarjeta703:
L_expendedora_checkTarjeta702:
;Expendedora.c,754 :: 		}
L_expendedora_checkTarjeta700:
0x87DE	0x0105      	MOVLB       5
;Expendedora.c,756 :: 		string_add(canCommand, acceso);
0x87E0	0x0E5C      	MOVLW       _canCommand
0x87E2	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x87E4	0x0E04      	MOVLW       hi_addr(_canCommand)
0x87E6	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x87E8	0x0EA4      	MOVLW       expendedora_checkTarjeta_acceso_L0
0x87EA	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x87EC	0x0E04      	MOVLW       hi_addr(expendedora_checkTarjeta_acceso_L0)
0x87EE	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x87F0	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,758 :: 		string_cpyc(bufferEeprom, CAN_PENSIONADO);
0x87F4	0x0E15      	MOVLW       _bufferEeprom
0x87F6	0x6F23      	MOVWF       FARG_string_cpyc_destino, 1
0x87F8	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x87FA	0x6F24      	MOVWF       FARG_string_cpyc_destino+1, 1
0x87FC	0x0EF0      	MOVLW       _CAN_PENSIONADO
0x87FE	0x6F25      	MOVWF       FARG_string_cpyc_origen, 1
0x8800	0x0EA3      	MOVLW       hi_addr(_CAN_PENSIONADO)
0x8802	0x6F26      	MOVWF       FARG_string_cpyc_origen+1, 1
0x8804	0x0E00      	MOVLW       higher_addr(_CAN_PENSIONADO)
0x8806	0x6F27      	MOVWF       FARG_string_cpyc_origen+2, 1
0x8808	0xF014EC09  	CALL        _string_cpyc, 0
;Expendedora.c,759 :: 		numTohex(id, msjConst, 3);
0x880C	0xF523C2DE  	MOVFF       expendedora_checkTarjeta_id_L0, FARG_numToHex_valor
0x8810	0xF524C2DF  	MOVFF       expendedora_checkTarjeta_id_L0+1, FARG_numToHex_valor+1
0x8814	0xF525C2E0  	MOVFF       expendedora_checkTarjeta_id_L0+2, FARG_numToHex_valor+2
0x8818	0xF526C2E1  	MOVFF       expendedora_checkTarjeta_id_L0+3, FARG_numToHex_valor+3
0x881C	0x0E05      	MOVLW       _msjConst
0x881E	0x6F27      	MOVWF       FARG_numToHex_cadena, 1
0x8820	0x0E03      	MOVLW       hi_addr(_msjConst)
0x8822	0x6F28      	MOVWF       FARG_numToHex_cadena+1, 1
0x8824	0x0E03      	MOVLW       3
0x8826	0x6F29      	MOVWF       FARG_numToHex_bytes, 1
0x8828	0xF016EC51  	CALL        _numToHex, 0
;Expendedora.c,760 :: 		string_add(bufferEeprom, msjConst);
0x882C	0x0E15      	MOVLW       _bufferEeprom
0x882E	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x8830	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x8832	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x8834	0x0E05      	MOVLW       _msjConst
0x8836	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x8838	0x0E03      	MOVLW       hi_addr(_msjConst)
0x883A	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x883C	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,761 :: 		string_addc(bufferEeprom, CAN_PASSBACK);   //CODIGO DE ACCION
0x8840	0x0E15      	MOVLW       _bufferEeprom
0x8842	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x8844	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x8846	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x8848	0x0EDC      	MOVLW       _CAN_PASSBACK
0x884A	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x884C	0x0EA3      	MOVLW       hi_addr(_CAN_PASSBACK)
0x884E	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x8850	0x0E00      	MOVLW       higher_addr(_CAN_PASSBACK)
0x8852	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x8854	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,762 :: 		numToString(fila, msjConst, 4);
0x8858	0xF53BC2DC  	MOVFF       expendedora_checkTarjeta_fila_L0, FARG_numToString_valor
0x885C	0xF53CC2DD  	MOVFF       expendedora_checkTarjeta_fila_L0+1, FARG_numToString_valor+1
0x8860	0x0E00      	MOVLW       0
0x8862	0x0102      	MOVLB       2
0x8864	0xBFDD      	BTFSC       expendedora_checkTarjeta_fila_L0+1, 7, 1
0x8866	0x0EFF      	MOVLW       255
0x8868	0x0105      	MOVLB       5
0x886A	0x6F3D      	MOVWF       FARG_numToString_valor+2, 1
0x886C	0x6F3E      	MOVWF       FARG_numToString_valor+3, 1
0x886E	0x0E05      	MOVLW       _msjConst
0x8870	0x6F3F      	MOVWF       FARG_numToString_cadena, 1
0x8872	0x0E03      	MOVLW       hi_addr(_msjConst)
0x8874	0x6F40      	MOVWF       FARG_numToString_cadena+1, 1
0x8876	0x0E04      	MOVLW       4
0x8878	0x6F41      	MOVWF       FARG_numToString_digitos, 1
0x887A	0xF005EC17  	CALL        _numToString, 0
;Expendedora.c,763 :: 		string_add(bufferEeprom, msjConst);
0x887E	0x0E15      	MOVLW       _bufferEeprom
0x8880	0x0105      	MOVLB       5
0x8882	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x8884	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x8886	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x8888	0x0E05      	MOVLW       _msjConst
0x888A	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x888C	0x0E03      	MOVLW       hi_addr(_msjConst)
0x888E	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x8890	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,765 :: 		msjConst[0] = estatus;
0x8894	0xF305C4A3  	MOVFF       expendedora_checkTarjeta_estatus_L0, _msjConst
;Expendedora.c,766 :: 		msjConst[1] = 0;
0x8898	0x0103      	MOVLB       3
0x889A	0x6B06      	CLRF        _msjConst+1, 1
;Expendedora.c,767 :: 		string_add(bufferEeprom, msjConst);
0x889C	0x0E15      	MOVLW       _bufferEeprom
0x889E	0x0105      	MOVLB       5
0x88A0	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x88A2	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x88A4	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x88A6	0x0E05      	MOVLW       _msjConst
0x88A8	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x88AA	0x0E03      	MOVLW       hi_addr(_msjConst)
0x88AC	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x88AE	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,769 :: 		buffer_save_send(true, bufferEeprom);
0x88B2	0x0E01      	MOVLW       1
0x88B4	0x6F23      	MOVWF       FARG_buffer_save_send_guardar, 1
0x88B6	0x0E15      	MOVLW       _bufferEeprom
0x88B8	0x6F24      	MOVWF       FARG_buffer_save_send_buffer, 1
0x88BA	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x88BC	0x6F25      	MOVWF       FARG_buffer_save_send_buffer+1, 1
0x88BE	0xF014ECA9  	CALL        _buffer_save_send, 0
;Expendedora.c,770 :: 		}else if(!mysql_search(tablePrepago, pensionadosID, id, &fila)){
0x88C2	0xD1A3      	BRA         L_expendedora_checkTarjeta704
L_expendedora_checkTarjeta687:
0x88C4	0x0E74      	MOVLW       _tablePrepago
0x88C6	0x0104      	MOVLB       4
0x88C8	0x6FBF      	MOVWF       FARG_mysql_search_tabla, 1
0x88CA	0x0E01      	MOVLW       hi_addr(_tablePrepago)
0x88CC	0x6FC0      	MOVWF       FARG_mysql_search_tabla+1, 1
0x88CE	0x0EC6      	MOVLW       _pensionadosID
0x88D0	0x6FC1      	MOVWF       FARG_mysql_search_columna, 1
0x88D2	0x0E01      	MOVLW       hi_addr(_pensionadosID)
0x88D4	0x6FC2      	MOVWF       FARG_mysql_search_columna+1, 1
0x88D6	0xF4C3C2DE  	MOVFF       expendedora_checkTarjeta_id_L0, FARG_mysql_search_buscar
0x88DA	0xF4C4C2DF  	MOVFF       expendedora_checkTarjeta_id_L0+1, FARG_mysql_search_buscar+1
0x88DE	0xF4C5C2E0  	MOVFF       expendedora_checkTarjeta_id_L0+2, FARG_mysql_search_buscar+2
0x88E2	0xF4C6C2E1  	MOVFF       expendedora_checkTarjeta_id_L0+3, FARG_mysql_search_buscar+3
0x88E6	0x0EDC      	MOVLW       expendedora_checkTarjeta_fila_L0
0x88E8	0x6FC7      	MOVWF       FARG_mysql_search_fila, 1
0x88EA	0x0E02      	MOVLW       hi_addr(expendedora_checkTarjeta_fila_L0)
0x88EC	0x6FC8      	MOVWF       FARG_mysql_search_fila+1, 1
0x88EE	0xF038EC7F  	CALL        _mysql_search, 0
0x88F2	0x5200      	MOVF        R0, 1 
0x88F4	0xA4D8      	BTFSS       STATUS, 2 
0x88F6	0xD16C      	BRA         L_expendedora_checkTarjeta705
;Expendedora.c,772 :: 		canCommand[3] = CAN_PREPAGO[0];
0x88F8	0x0E50      	MOVLW       80
0x88FA	0x0104      	MOVLB       4
0x88FC	0x6F5F      	MOVWF       _canCommand+3, 1
;Expendedora.c,773 :: 		canCommand[4] = CAN_PREPAGO[1];
0x88FE	0x0E52      	MOVLW       82
0x8900	0x6F60      	MOVWF       _canCommand+4, 1
;Expendedora.c,774 :: 		canCommand[5] = CAN_PREPAGO[2];
0x8902	0x0E45      	MOVLW       69
0x8904	0x6F61      	MOVWF       _canCommand+5, 1
;Expendedora.c,777 :: 		mysql_read_string(tablePrepago, prepagoEstatus, fila, &estatus);
0x8906	0x0E74      	MOVLW       _tablePrepago
0x8908	0x0105      	MOVLB       5
0x890A	0x6F23      	MOVWF       FARG_mysql_read_string_name, 1
0x890C	0x0E01      	MOVLW       hi_addr(_tablePrepago)
0x890E	0x6F24      	MOVWF       FARG_mysql_read_string_name+1, 1
0x8910	0x0E8C      	MOVLW       _prepagoEstatus
0x8912	0x6F25      	MOVWF       FARG_mysql_read_string_column, 1
0x8914	0x0E01      	MOVLW       hi_addr(_prepagoEstatus)
0x8916	0x6F26      	MOVWF       FARG_mysql_read_string_column+1, 1
0x8918	0xF527C2DC  	MOVFF       expendedora_checkTarjeta_fila_L0, FARG_mysql_read_string_fila
0x891C	0xF528C2DD  	MOVFF       expendedora_checkTarjeta_fila_L0+1, FARG_mysql_read_string_fila+1
0x8920	0x0EA3      	MOVLW       expendedora_checkTarjeta_estatus_L0
0x8922	0x6F29      	MOVWF       FARG_mysql_read_string_result, 1
0x8924	0x0E04      	MOVLW       hi_addr(expendedora_checkTarjeta_estatus_L0)
0x8926	0x6F2A      	MOVWF       FARG_mysql_read_string_result+1, 1
0x8928	0xF014EC60  	CALL        _mysql_read_string, 0
;Expendedora.c,778 :: 		mysql_read(tablePrepago, prepagoSaldo, fila, &saldo);
0x892C	0x0E74      	MOVLW       _tablePrepago
0x892E	0x0105      	MOVLB       5
0x8930	0x6F31      	MOVWF       FARG_mysql_read_name, 1
0x8932	0x0E01      	MOVLW       hi_addr(_tablePrepago)
0x8934	0x6F32      	MOVWF       FARG_mysql_read_name+1, 1
0x8936	0x0EA4      	MOVLW       _prepagoSaldo
0x8938	0x6F33      	MOVWF       FARG_mysql_read_column, 1
0x893A	0x0E01      	MOVLW       hi_addr(_prepagoSaldo)
0x893C	0x6F34      	MOVWF       FARG_mysql_read_column+1, 1
0x893E	0xF535C2DC  	MOVFF       expendedora_checkTarjeta_fila_L0, FARG_mysql_read_fila
0x8942	0xF536C2DD  	MOVFF       expendedora_checkTarjeta_fila_L0+1, FARG_mysql_read_fila+1
0x8946	0x0EA9      	MOVLW       expendedora_checkTarjeta_saldo_L0
0x8948	0x6F37      	MOVWF       FARG_mysql_read_result, 1
0x894A	0x0E04      	MOVLW       hi_addr(expendedora_checkTarjeta_saldo_L0)
0x894C	0x6F38      	MOVWF       FARG_mysql_read_result+1, 1
0x894E	0xF00AECAA  	CALL        _mysql_read, 0
;Expendedora.c,779 :: 		if(saldo >= 3600 && (estatus == ESTATUS_PAS || estatus == ESTATUS_BREAK || !canSynchrony || !can.conected)){
0x8952	0x0E80      	MOVLW       128
0x8954	0x0104      	MOVLB       4
0x8956	0x19AC      	XORWF       expendedora_checkTarjeta_saldo_L0+3, 0, 1
0x8958	0x6E00      	MOVWF       R0 
0x895A	0x0E80      	MOVLW       128
0x895C	0x5C00      	SUBWF       R0, 0 
0x895E	0xE108      	BNZ         L__expendedora_checkTarjeta1373
0x8960	0x0E00      	MOVLW       0
0x8962	0x5DAB      	SUBWF       expendedora_checkTarjeta_saldo_L0+2, 0, 1
0x8964	0xE105      	BNZ         L__expendedora_checkTarjeta1373
0x8966	0x0E0E      	MOVLW       14
0x8968	0x5DAA      	SUBWF       expendedora_checkTarjeta_saldo_L0+1, 0, 1
0x896A	0xE102      	BNZ         L__expendedora_checkTarjeta1373
0x896C	0x0E10      	MOVLW       16
0x896E	0x5DA9      	SUBWF       expendedora_checkTarjeta_saldo_L0, 0, 1
L__expendedora_checkTarjeta1373:
0x8970	0xE361      	BNC         L_expendedora_checkTarjeta710
0x8972	0x51A3      	MOVF        expendedora_checkTarjeta_estatus_L0, 0, 1
0x8974	0x0A4F      	XORLW       79
0x8976	0xE00A      	BZ          L__expendedora_checkTarjeta1005
0x8978	0x51A3      	MOVF        expendedora_checkTarjeta_estatus_L0, 0, 1
0x897A	0x0A2D      	XORLW       45
0x897C	0xE007      	BZ          L__expendedora_checkTarjeta1005
0x897E	0x0102      	MOVLB       2
0x8980	0x53DB      	MOVF        _canSynchrony, 1, 1
0x8982	0xE004      	BZ          L__expendedora_checkTarjeta1005
0x8984	0x0103      	MOVLB       3
0x8986	0x5356      	MOVF        _can+13, 1, 1
0x8988	0xE001      	BZ          L__expendedora_checkTarjeta1005
0x898A	0xD054      	BRA         L_expendedora_checkTarjeta710
L__expendedora_checkTarjeta1005:
L__expendedora_checkTarjeta1004:
;Expendedora.c,781 :: 		eSensor = 0;  //Reiniciar maquina de estados
0x898C	0x0102      	MOVLB       2
0x898E	0x6B96      	CLRF        _eSensor, 1
;Expendedora.c,782 :: 		abrirBarrera = true;
0x8990	0x0E01      	MOVLW       1
0x8992	0x6FC2      	MOVWF       _abrirBarrera, 1
;Expendedora.c,783 :: 		SALIDA_RELE1 = 1;
0x8994	0x8A80      	BSF         PORTA, 5 
;Expendedora.c,784 :: 		SALIDA_RELE2 = 1;
0x8996	0x8084      	BSF         PORTE, 0 
;Expendedora.c,785 :: 		timer1_reset();
0x8998	0xF00FECFC  	CALL        _timer1_reset, 0
;Expendedora.c,786 :: 		timer1_enable(true);
0x899C	0x0E01      	MOVLW       1
0x899E	0x0105      	MOVLB       5
0x89A0	0x6F23      	MOVWF       FARG_timer1_enable_enable, 1
0x89A2	0xF010EC57  	CALL        _timer1_enable, 0
;Expendedora.c,787 :: 		acceso[0] = TPV_ACCESO;     //Acceso
0x89A6	0x0E41      	MOVLW       65
0x89A8	0x0104      	MOVLB       4
0x89AA	0x6FA4      	MOVWF       expendedora_checkTarjeta_acceso_L0, 1
;Expendedora.c,789 :: 		if(!can.conected || !canSynchrony || estatus == ESTATUS_BREAK)
0x89AC	0x0103      	MOVLB       3
0x89AE	0x5356      	MOVF        _can+13, 1, 1
0x89B0	0xE008      	BZ          L__expendedora_checkTarjeta1003
0x89B2	0x0102      	MOVLB       2
0x89B4	0x53DB      	MOVF        _canSynchrony, 1, 1
0x89B6	0xE005      	BZ          L__expendedora_checkTarjeta1003
0x89B8	0x0104      	MOVLB       4
0x89BA	0x51A3      	MOVF        expendedora_checkTarjeta_estatus_L0, 0, 1
0x89BC	0x0A2D      	XORLW       45
0x89BE	0xE001      	BZ          L__expendedora_checkTarjeta1003
0x89C0	0xD003      	BRA         L_expendedora_checkTarjeta713
L__expendedora_checkTarjeta1003:
0x89C2	0x0104      	MOVLB       4
;Expendedora.c,790 :: 		acceso[2] = ESTATUS_BREAK;   //Estado del passback roto
0x89C4	0x0E2D      	MOVLW       45
0x89C6	0x6FA6      	MOVWF       expendedora_checkTarjeta_acceso_L0+2, 1
L_expendedora_checkTarjeta713:
;Expendedora.c,792 :: 		estatus = (!can.conected || !canSynchrony)? ESTATUS_BREAK:ESTATUS_MOD;
0x89C8	0x0103      	MOVLB       3
0x89CA	0x5356      	MOVF        _can+13, 1, 1
0x89CC	0xE004      	BZ          L__expendedora_checkTarjeta1002
0x89CE	0x0102      	MOVLB       2
0x89D0	0x53DB      	MOVF        _canSynchrony, 1, 1
0x89D2	0xE001      	BZ          L__expendedora_checkTarjeta1002
0x89D4	0xD004      	BRA         L_expendedora_checkTarjeta716
L__expendedora_checkTarjeta1002:
0x89D6	0x0E2D      	MOVLW       45
0x89D8	0x0104      	MOVLB       4
0x89DA	0x6FA0      	MOVWF       ?FLOC___expendedora_checkTarjetaT2732, 1
0x89DC	0xD003      	BRA         L_expendedora_checkTarjeta717
L_expendedora_checkTarjeta716:
0x89DE	0x0104      	MOVLB       4
0x89E0	0x0E49      	MOVLW       73
0x89E2	0x6FA0      	MOVWF       ?FLOC___expendedora_checkTarjetaT2732, 1
L_expendedora_checkTarjeta717:
0x89E4	0xF4A3C4A0  	MOVFF       ?FLOC___expendedora_checkTarjetaT2732, expendedora_checkTarjeta_estatus_L0
;Expendedora.c,793 :: 		mysql_write(tablePrepago, prepagoEstatus, fila, estatus, false);
0x89E8	0x0E74      	MOVLW       _tablePrepago
0x89EA	0x0105      	MOVLB       5
0x89EC	0x6F23      	MOVWF       FARG_mysql_write_name, 1
0x89EE	0x0E01      	MOVLW       hi_addr(_tablePrepago)
0x89F0	0x6F24      	MOVWF       FARG_mysql_write_name+1, 1
0x89F2	0x0E8C      	MOVLW       _prepagoEstatus
0x89F4	0x6F25      	MOVWF       FARG_mysql_write_column, 1
0x89F6	0x0E01      	MOVLW       hi_addr(_prepagoEstatus)
0x89F8	0x6F26      	MOVWF       FARG_mysql_write_column+1, 1
0x89FA	0xF527C2DC  	MOVFF       expendedora_checkTarjeta_fila_L0, FARG_mysql_write_fila
0x89FE	0xF528C2DD  	MOVFF       expendedora_checkTarjeta_fila_L0+1, FARG_mysql_write_fila+1
0x8A02	0xF529C4A0  	MOVFF       ?FLOC___expendedora_checkTarjetaT2732, FARG_mysql_write_value
0x8A06	0x0E00      	MOVLW       0
0x8A08	0x6F2A      	MOVWF       FARG_mysql_write_value+1, 1
0x8A0A	0x6F2B      	MOVWF       FARG_mysql_write_value+2, 1
0x8A0C	0x6F2C      	MOVWF       FARG_mysql_write_value+3, 1
0x8A0E	0x6B2D      	CLRF        FARG_mysql_write_endWrite, 1
0x8A10	0xF012ECDC  	CALL        _mysql_write, 0
;Expendedora.c,794 :: 		lcd_clean_row(2);
0x8A14	0x0E02      	MOVLW       2
0x8A16	0x0105      	MOVLB       5
0x8A18	0x6F23      	MOVWF       FARG_lcd_clean_row_fila, 1
0x8A1A	0xF015EC78  	CALL        _lcd_clean_row, 0
;Expendedora.c,795 :: 		lcd_out(2,1,"Acceso aceptado");
0x8A1E	0x0E02      	MOVLW       2
0x8A20	0x6F23      	MOVWF       FARG_lcd_out_fila, 1
0x8A22	0x0E01      	MOVLW       1
0x8A24	0x6F24      	MOVWF       FARG_lcd_out_col, 1
0x8A26	0x0E94      	MOVLW       ?lstr12_Expendedora
0x8A28	0x6F25      	MOVWF       FARG_lcd_out_texto, 1
0x8A2A	0x0E01      	MOVLW       hi_addr(?lstr12_Expendedora)
0x8A2C	0x6F26      	MOVWF       FARG_lcd_out_texto+1, 1
0x8A2E	0xF010EC01  	CALL        _lcd_out, 0
;Expendedora.c,801 :: 		}else{
0x8A32	0xD037      	BRA         L_expendedora_checkTarjeta718
L_expendedora_checkTarjeta710:
;Expendedora.c,802 :: 		if(saldo < 3600){
0x8A34	0x0E80      	MOVLW       128
0x8A36	0x0104      	MOVLB       4
0x8A38	0x19AC      	XORWF       expendedora_checkTarjeta_saldo_L0+3, 0, 1
0x8A3A	0x6E00      	MOVWF       R0 
0x8A3C	0x0E80      	MOVLW       128
0x8A3E	0x5C00      	SUBWF       R0, 0 
0x8A40	0xE108      	BNZ         L__expendedora_checkTarjeta1374
0x8A42	0x0E00      	MOVLW       0
0x8A44	0x5DAB      	SUBWF       expendedora_checkTarjeta_saldo_L0+2, 0, 1
0x8A46	0xE105      	BNZ         L__expendedora_checkTarjeta1374
0x8A48	0x0E0E      	MOVLW       14
0x8A4A	0x5DAA      	SUBWF       expendedora_checkTarjeta_saldo_L0+1, 0, 1
0x8A4C	0xE102      	BNZ         L__expendedora_checkTarjeta1374
0x8A4E	0x0E10      	MOVLW       16
0x8A50	0x5DA9      	SUBWF       expendedora_checkTarjeta_saldo_L0, 0, 1
L__expendedora_checkTarjeta1374:
0x8A52	0xE212      	BC          L_expendedora_checkTarjeta719
;Expendedora.c,803 :: 		acceso[1] = TPV_SIN_SALDO;  //Sin saldo
0x8A54	0x0E53      	MOVLW       83
0x8A56	0x6FA5      	MOVWF       expendedora_checkTarjeta_acceso_L0+1, 1
;Expendedora.c,804 :: 		lcd_clean_row(2);
0x8A58	0x0E02      	MOVLW       2
0x8A5A	0x0105      	MOVLB       5
0x8A5C	0x6F23      	MOVWF       FARG_lcd_clean_row_fila, 1
0x8A5E	0xF015EC78  	CALL        _lcd_clean_row, 0
;Expendedora.c,805 :: 		lcd_out(2,1,"Saldo terminado");
0x8A62	0x0E02      	MOVLW       2
0x8A64	0x6F23      	MOVWF       FARG_lcd_out_fila, 1
0x8A66	0x0E01      	MOVLW       1
0x8A68	0x6F24      	MOVWF       FARG_lcd_out_col, 1
0x8A6A	0x0E6C      	MOVLW       ?lstr13_Expendedora
0x8A6C	0x6F25      	MOVWF       FARG_lcd_out_texto, 1
0x8A6E	0x0E00      	MOVLW       hi_addr(?lstr13_Expendedora)
0x8A70	0x6F26      	MOVWF       FARG_lcd_out_texto+1, 1
0x8A72	0xF010EC01  	CALL        _lcd_out, 0
;Expendedora.c,809 :: 		}else if(estatus == ESTATUS_MOD){
0x8A76	0xD015      	BRA         L_expendedora_checkTarjeta720
L_expendedora_checkTarjeta719:
0x8A78	0x0104      	MOVLB       4
0x8A7A	0x51A3      	MOVF        expendedora_checkTarjeta_estatus_L0, 0, 1
0x8A7C	0x0A49      	XORLW       73
0x8A7E	0xE111      	BNZ         L_expendedora_checkTarjeta721
;Expendedora.c,810 :: 		acceso[2] = TPV_PASSBACK;   //Estado del passback
0x8A80	0x0E50      	MOVLW       80
0x8A82	0x6FA6      	MOVWF       expendedora_checkTarjeta_acceso_L0+2, 1
;Expendedora.c,811 :: 		lcd_clean_row(2);
0x8A84	0x0E02      	MOVLW       2
0x8A86	0x0105      	MOVLB       5
0x8A88	0x6F23      	MOVWF       FARG_lcd_clean_row_fila, 1
0x8A8A	0xF015EC78  	CALL        _lcd_clean_row, 0
;Expendedora.c,812 :: 		lcd_out(2,1,"Passback activo");
0x8A8E	0x0E02      	MOVLW       2
0x8A90	0x6F23      	MOVWF       FARG_lcd_out_fila, 1
0x8A92	0x0E01      	MOVLW       1
0x8A94	0x6F24      	MOVWF       FARG_lcd_out_col, 1
0x8A96	0x0E5C      	MOVLW       ?lstr14_Expendedora
0x8A98	0x6F25      	MOVWF       FARG_lcd_out_texto, 1
0x8A9A	0x0E00      	MOVLW       hi_addr(?lstr14_Expendedora)
0x8A9C	0x6F26      	MOVWF       FARG_lcd_out_texto+1, 1
0x8A9E	0xF010EC01  	CALL        _lcd_out, 0
;Expendedora.c,816 :: 		}
L_expendedora_checkTarjeta721:
L_expendedora_checkTarjeta720:
;Expendedora.c,817 :: 		}
L_expendedora_checkTarjeta718:
0x8AA2	0x0105      	MOVLB       5
;Expendedora.c,819 :: 		string_add(canCommand, acceso);
0x8AA4	0x0E5C      	MOVLW       _canCommand
0x8AA6	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x8AA8	0x0E04      	MOVLW       hi_addr(_canCommand)
0x8AAA	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x8AAC	0x0EA4      	MOVLW       expendedora_checkTarjeta_acceso_L0
0x8AAE	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x8AB0	0x0E04      	MOVLW       hi_addr(expendedora_checkTarjeta_acceso_L0)
0x8AB2	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x8AB4	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,821 :: 		string_cpyc(bufferEeprom, CAN_PREPAGO);
0x8AB8	0x0E15      	MOVLW       _bufferEeprom
0x8ABA	0x6F23      	MOVWF       FARG_string_cpyc_destino, 1
0x8ABC	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x8ABE	0x6F24      	MOVWF       FARG_string_cpyc_destino+1, 1
0x8AC0	0x0ED8      	MOVLW       _CAN_PREPAGO
0x8AC2	0x6F25      	MOVWF       FARG_string_cpyc_origen, 1
0x8AC4	0x0EA3      	MOVLW       hi_addr(_CAN_PREPAGO)
0x8AC6	0x6F26      	MOVWF       FARG_string_cpyc_origen+1, 1
0x8AC8	0x0E00      	MOVLW       higher_addr(_CAN_PREPAGO)
0x8ACA	0x6F27      	MOVWF       FARG_string_cpyc_origen+2, 1
0x8ACC	0xF014EC09  	CALL        _string_cpyc, 0
;Expendedora.c,822 :: 		numTohex(id, msjConst, 3);
0x8AD0	0xF523C2DE  	MOVFF       expendedora_checkTarjeta_id_L0, FARG_numToHex_valor
0x8AD4	0xF524C2DF  	MOVFF       expendedora_checkTarjeta_id_L0+1, FARG_numToHex_valor+1
0x8AD8	0xF525C2E0  	MOVFF       expendedora_checkTarjeta_id_L0+2, FARG_numToHex_valor+2
0x8ADC	0xF526C2E1  	MOVFF       expendedora_checkTarjeta_id_L0+3, FARG_numToHex_valor+3
0x8AE0	0x0E05      	MOVLW       _msjConst
0x8AE2	0x6F27      	MOVWF       FARG_numToHex_cadena, 1
0x8AE4	0x0E03      	MOVLW       hi_addr(_msjConst)
0x8AE6	0x6F28      	MOVWF       FARG_numToHex_cadena+1, 1
0x8AE8	0x0E03      	MOVLW       3
0x8AEA	0x6F29      	MOVWF       FARG_numToHex_bytes, 1
0x8AEC	0xF016EC51  	CALL        _numToHex, 0
;Expendedora.c,823 :: 		string_add(bufferEeprom, msjConst);
0x8AF0	0x0E15      	MOVLW       _bufferEeprom
0x8AF2	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x8AF4	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x8AF6	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x8AF8	0x0E05      	MOVLW       _msjConst
0x8AFA	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x8AFC	0x0E03      	MOVLW       hi_addr(_msjConst)
0x8AFE	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x8B00	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,824 :: 		if(acceso[0] == TPV_ACCESO)
0x8B04	0x0104      	MOVLB       4
0x8B06	0x51A4      	MOVF        expendedora_checkTarjeta_acceso_L0, 0, 1
0x8B08	0x0A41      	XORLW       65
0x8B0A	0xE10E      	BNZ         L_expendedora_checkTarjeta722
;Expendedora.c,825 :: 		string_addc(bufferEeprom, CAN_SPECIAL_DATE);   //CODIGO DE ACCION
0x8B0C	0x0E15      	MOVLW       _bufferEeprom
0x8B0E	0x0105      	MOVLB       5
0x8B10	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x8B12	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x8B14	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x8B16	0x0EE4      	MOVLW       _CAN_SPECIAL_DATE
0x8B18	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x8B1A	0x0EA3      	MOVLW       hi_addr(_CAN_SPECIAL_DATE)
0x8B1C	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x8B1E	0x0E00      	MOVLW       higher_addr(_CAN_SPECIAL_DATE)
0x8B20	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x8B22	0xF015EC0C  	CALL        _string_addc, 0
0x8B26	0xD00D      	BRA         L_expendedora_checkTarjeta723
L_expendedora_checkTarjeta722:
0x8B28	0x0105      	MOVLB       5
;Expendedora.c,827 :: 		string_addc(bufferEeprom, CAN_PASSBACK);
0x8B2A	0x0E15      	MOVLW       _bufferEeprom
0x8B2C	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x8B2E	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x8B30	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x8B32	0x0EDC      	MOVLW       _CAN_PASSBACK
0x8B34	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x8B36	0x0EA3      	MOVLW       hi_addr(_CAN_PASSBACK)
0x8B38	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x8B3A	0x0E00      	MOVLW       higher_addr(_CAN_PASSBACK)
0x8B3C	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x8B3E	0xF015EC0C  	CALL        _string_addc, 0
L_expendedora_checkTarjeta723:
;Expendedora.c,828 :: 		numToString(fila, msjConst, 4);
0x8B42	0xF53BC2DC  	MOVFF       expendedora_checkTarjeta_fila_L0, FARG_numToString_valor
0x8B46	0xF53CC2DD  	MOVFF       expendedora_checkTarjeta_fila_L0+1, FARG_numToString_valor+1
0x8B4A	0x0E00      	MOVLW       0
0x8B4C	0x0102      	MOVLB       2
0x8B4E	0xBFDD      	BTFSC       expendedora_checkTarjeta_fila_L0+1, 7, 1
0x8B50	0x0EFF      	MOVLW       255
0x8B52	0x0105      	MOVLB       5
0x8B54	0x6F3D      	MOVWF       FARG_numToString_valor+2, 1
0x8B56	0x6F3E      	MOVWF       FARG_numToString_valor+3, 1
0x8B58	0x0E05      	MOVLW       _msjConst
0x8B5A	0x6F3F      	MOVWF       FARG_numToString_cadena, 1
0x8B5C	0x0E03      	MOVLW       hi_addr(_msjConst)
0x8B5E	0x6F40      	MOVWF       FARG_numToString_cadena+1, 1
0x8B60	0x0E04      	MOVLW       4
0x8B62	0x6F41      	MOVWF       FARG_numToString_digitos, 1
0x8B64	0xF005EC17  	CALL        _numToString, 0
;Expendedora.c,829 :: 		string_add(bufferEeprom, msjConst);
0x8B68	0x0E15      	MOVLW       _bufferEeprom
0x8B6A	0x0105      	MOVLB       5
0x8B6C	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x8B6E	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x8B70	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x8B72	0x0E05      	MOVLW       _msjConst
0x8B74	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x8B76	0x0E03      	MOVLW       hi_addr(_msjConst)
0x8B78	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x8B7A	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,831 :: 		msjConst[0] = estatus;
0x8B7E	0xF305C4A3  	MOVFF       expendedora_checkTarjeta_estatus_L0, _msjConst
;Expendedora.c,832 :: 		msjConst[1] = 0;
0x8B82	0x0103      	MOVLB       3
0x8B84	0x6B06      	CLRF        _msjConst+1, 1
;Expendedora.c,833 :: 		string_add(bufferEeprom, msjConst);
0x8B86	0x0E15      	MOVLW       _bufferEeprom
0x8B88	0x0105      	MOVLB       5
0x8B8A	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x8B8C	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x8B8E	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x8B90	0x0E05      	MOVLW       _msjConst
0x8B92	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x8B94	0x0E03      	MOVLW       hi_addr(_msjConst)
0x8B96	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x8B98	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,835 :: 		DS1307_read(&myRTC, false);
0x8B9C	0x0EFA      	MOVLW       _myRTC
0x8B9E	0x6F23      	MOVWF       FARG_DS1307_read_myDS, 1
0x8BA0	0x0E03      	MOVLW       hi_addr(_myRTC)
0x8BA2	0x6F24      	MOVWF       FARG_DS1307_read_myDS+1, 1
0x8BA4	0x6B25      	CLRF        FARG_DS1307_read_formatComplet, 1
0x8BA6	0xF011ECAD  	CALL        _DS1307_read, 0
;Expendedora.c,836 :: 		string_add(bufferEeprom, &myRTC.time[1]);
0x8BAA	0x0E15      	MOVLW       _bufferEeprom
0x8BAC	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x8BAE	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x8BB0	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x8BB2	0x0E02      	MOVLW       _myRTC+8
0x8BB4	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x8BB6	0x0E04      	MOVLW       hi_addr(_myRTC+8)
0x8BB8	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x8BBA	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,838 :: 		buffer_save_send(true, bufferEeprom);
0x8BBE	0x0E01      	MOVLW       1
0x8BC0	0x6F23      	MOVWF       FARG_buffer_save_send_guardar, 1
0x8BC2	0x0E15      	MOVLW       _bufferEeprom
0x8BC4	0x6F24      	MOVWF       FARG_buffer_save_send_buffer, 1
0x8BC6	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x8BC8	0x6F25      	MOVWF       FARG_buffer_save_send_buffer+1, 1
0x8BCA	0xF014ECA9  	CALL        _buffer_save_send, 0
;Expendedora.c,839 :: 		}else{
0x8BCE	0xD01D      	BRA         L_expendedora_checkTarjeta724
L_expendedora_checkTarjeta705:
;Expendedora.c,840 :: 		lcd_clean_row(2);
0x8BD0	0x0E02      	MOVLW       2
0x8BD2	0x0105      	MOVLB       5
0x8BD4	0x6F23      	MOVWF       FARG_lcd_clean_row_fila, 1
0x8BD6	0xF015EC78  	CALL        _lcd_clean_row, 0
;Expendedora.c,841 :: 		lcd_out(2,1,"Tarjeta desconocida");
0x8BDA	0x0E02      	MOVLW       2
0x8BDC	0x6F23      	MOVWF       FARG_lcd_out_fila, 1
0x8BDE	0x0E01      	MOVLW       1
0x8BE0	0x6F24      	MOVWF       FARG_lcd_out_col, 1
0x8BE2	0x0E7C      	MOVLW       ?lstr15_Expendedora
0x8BE4	0x6F25      	MOVWF       FARG_lcd_out_texto, 1
0x8BE6	0x0E00      	MOVLW       hi_addr(?lstr15_Expendedora)
0x8BE8	0x6F26      	MOVWF       FARG_lcd_out_texto+1, 1
0x8BEA	0xF010EC01  	CALL        _lcd_out, 0
;Expendedora.c,846 :: 		acceso[3] = TPV_DESCONOCIDO;      //Tarjeta desconocida
0x8BEE	0x0E44      	MOVLW       68
0x8BF0	0x0104      	MOVLB       4
0x8BF2	0x6FA7      	MOVWF       expendedora_checkTarjeta_acceso_L0+3, 1
;Expendedora.c,847 :: 		string_add(canCommand, acceso);
0x8BF4	0x0E5C      	MOVLW       _canCommand
0x8BF6	0x0105      	MOVLB       5
0x8BF8	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x8BFA	0x0E04      	MOVLW       hi_addr(_canCommand)
0x8BFC	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x8BFE	0x0EA4      	MOVLW       expendedora_checkTarjeta_acceso_L0
0x8C00	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x8C02	0x0E04      	MOVLW       hi_addr(expendedora_checkTarjeta_acceso_L0)
0x8C04	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x8C06	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,848 :: 		}
L_expendedora_checkTarjeta724:
L_expendedora_checkTarjeta704:
0x8C0A	0x0105      	MOVLB       5
;Expendedora.c,850 :: 		string_addc(canCommand, CAN_MODULE);
0x8C0C	0x0E5C      	MOVLW       _canCommand
0x8C0E	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x8C10	0x0E04      	MOVLW       hi_addr(_canCommand)
0x8C12	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x8C14	0x0E1E      	MOVLW       _CAN_MODULE
0x8C16	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x8C18	0x0EA4      	MOVLW       hi_addr(_CAN_MODULE)
0x8C1A	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x8C1C	0x0E00      	MOVLW       higher_addr(_CAN_MODULE)
0x8C1E	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x8C20	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,851 :: 		numToHex(canId, msjConst, 1);
0x8C24	0xF523C2BF  	MOVFF       _canId, FARG_numToHex_valor
0x8C28	0x0E00      	MOVLW       0
0x8C2A	0x6F24      	MOVWF       FARG_numToHex_valor+1, 1
0x8C2C	0x6F25      	MOVWF       FARG_numToHex_valor+2, 1
0x8C2E	0x6F26      	MOVWF       FARG_numToHex_valor+3, 1
0x8C30	0x0E05      	MOVLW       _msjConst
0x8C32	0x6F27      	MOVWF       FARG_numToHex_cadena, 1
0x8C34	0x0E03      	MOVLW       hi_addr(_msjConst)
0x8C36	0x6F28      	MOVWF       FARG_numToHex_cadena+1, 1
0x8C38	0x0E01      	MOVLW       1
0x8C3A	0x6F29      	MOVWF       FARG_numToHex_bytes, 1
0x8C3C	0xF016EC51  	CALL        _numToHex, 0
;Expendedora.c,852 :: 		string_add(canCommand, msjConst);
0x8C40	0x0E5C      	MOVLW       _canCommand
0x8C42	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x8C44	0x0E04      	MOVLW       hi_addr(_canCommand)
0x8C46	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x8C48	0x0E05      	MOVLW       _msjConst
0x8C4A	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x8C4C	0x0E03      	MOVLW       hi_addr(_msjConst)
0x8C4E	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x8C50	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,853 :: 		buffer_save_send(false, canCommand);
0x8C54	0x6B23      	CLRF        FARG_buffer_save_send_guardar, 1
0x8C56	0x0E5C      	MOVLW       _canCommand
0x8C58	0x6F24      	MOVWF       FARG_buffer_save_send_buffer, 1
0x8C5A	0x0E04      	MOVLW       hi_addr(_canCommand)
0x8C5C	0x6F25      	MOVWF       FARG_buffer_save_send_buffer+1, 1
0x8C5E	0xF014ECA9  	CALL        _buffer_save_send, 0
;Expendedora.c,854 :: 		}else if(buscarNIP){
0x8C62	0xD3B9      	BRA         L_expendedora_checkTarjeta725
L_expendedora_checkTarjeta686:
0x8C64	0x0101      	MOVLB       1
0x8C66	0x53E1      	MOVF        expendedora_checkTarjeta_buscarNIP_L0, 1, 1
0x8C68	0xB4D8      	BTFSC       STATUS, 2 
0x8C6A	0xD3B5      	BRA         L_expendedora_checkTarjeta726
;Expendedora.c,855 :: 		buscarNIP = false;
0x8C6C	0x6BE1      	CLRF        expendedora_checkTarjeta_buscarNIP_L0, 1
;Expendedora.c,857 :: 		DS1307_read(&myRTC, false);
0x8C6E	0x0EFA      	MOVLW       _myRTC
0x8C70	0x0105      	MOVLB       5
0x8C72	0x6F23      	MOVWF       FARG_DS1307_read_myDS, 1
0x8C74	0x0E03      	MOVLW       hi_addr(_myRTC)
0x8C76	0x6F24      	MOVWF       FARG_DS1307_read_myDS+1, 1
0x8C78	0x6B25      	CLRF        FARG_DS1307_read_formatComplet, 1
0x8C7A	0xF011ECAD  	CALL        _DS1307_read, 0
;Expendedora.c,859 :: 		string_cpyc(canCommand, CAN_TPV);
0x8C7E	0x0E5C      	MOVLW       _canCommand
0x8C80	0x6F23      	MOVWF       FARG_string_cpyc_destino, 1
0x8C82	0x0E04      	MOVLW       hi_addr(_canCommand)
0x8C84	0x6F24      	MOVWF       FARG_string_cpyc_destino+1, 1
0x8C86	0x0EBC      	MOVLW       _CAN_TPV
0x8C88	0x6F25      	MOVWF       FARG_string_cpyc_origen, 1
0x8C8A	0x0EA3      	MOVLW       hi_addr(_CAN_TPV)
0x8C8C	0x6F26      	MOVWF       FARG_string_cpyc_origen+1, 1
0x8C8E	0x0E00      	MOVLW       higher_addr(_CAN_TPV)
0x8C90	0x6F27      	MOVWF       FARG_string_cpyc_origen+2, 1
0x8C92	0xF014EC09  	CALL        _string_cpyc, 0
;Expendedora.c,860 :: 		string_addc(canCommand, CAN_NIP);       //NIP
0x8C96	0x0E5C      	MOVLW       _canCommand
0x8C98	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x8C9A	0x0E04      	MOVLW       hi_addr(_canCommand)
0x8C9C	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x8C9E	0x0EE0      	MOVLW       _CAN_NIP
0x8CA0	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x8CA2	0x0EA3      	MOVLW       hi_addr(_CAN_NIP)
0x8CA4	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x8CA6	0x0E00      	MOVLW       higher_addr(_CAN_NIP)
0x8CA8	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x8CAA	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,861 :: 		numToString(nip, msjConst, 4);
0x8CAE	0xF53BC2E2  	MOVFF       expendedora_checkTarjeta_nip_L0, FARG_numToString_valor
0x8CB2	0xF53CC2E3  	MOVFF       expendedora_checkTarjeta_nip_L0+1, FARG_numToString_valor+1
0x8CB6	0x0E00      	MOVLW       0
0x8CB8	0x0102      	MOVLB       2
0x8CBA	0xBFE3      	BTFSC       expendedora_checkTarjeta_nip_L0+1, 7, 1
0x8CBC	0x0EFF      	MOVLW       255
0x8CBE	0x0105      	MOVLB       5
0x8CC0	0x6F3D      	MOVWF       FARG_numToString_valor+2, 1
0x8CC2	0x6F3E      	MOVWF       FARG_numToString_valor+3, 1
0x8CC4	0x0E05      	MOVLW       _msjConst
0x8CC6	0x6F3F      	MOVWF       FARG_numToString_cadena, 1
0x8CC8	0x0E03      	MOVLW       hi_addr(_msjConst)
0x8CCA	0x6F40      	MOVWF       FARG_numToString_cadena+1, 1
0x8CCC	0x0E04      	MOVLW       4
0x8CCE	0x6F41      	MOVWF       FARG_numToString_digitos, 1
0x8CD0	0xF005EC17  	CALL        _numToString, 0
;Expendedora.c,862 :: 		string_add(canCommand, msjConst);       //NIP + NIP(DEC)
0x8CD4	0x0E5C      	MOVLW       _canCommand
0x8CD6	0x0105      	MOVLB       5
0x8CD8	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x8CDA	0x0E04      	MOVLW       hi_addr(_canCommand)
0x8CDC	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x8CDE	0x0E05      	MOVLW       _msjConst
0x8CE0	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x8CE2	0x0E03      	MOVLW       hi_addr(_msjConst)
0x8CE4	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x8CE6	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,863 :: 		string_add(canCommand, &myRTC.time[1]); //NIP + NIP(DEC) + DATE
0x8CEA	0x0E5C      	MOVLW       _canCommand
0x8CEC	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x8CEE	0x0E04      	MOVLW       hi_addr(_canCommand)
0x8CF0	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x8CF2	0x0E02      	MOVLW       _myRTC+8
0x8CF4	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x8CF6	0x0E04      	MOVLW       hi_addr(_myRTC+8)
0x8CF8	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x8CFA	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,865 :: 		string_cpyc(acceso, ACCESO_DENEGADO);   //sin acceso, sin Saldo, sin passback, desconocida nip
0x8CFE	0x0EA4      	MOVLW       expendedora_checkTarjeta_acceso_L0
0x8D00	0x6F23      	MOVWF       FARG_string_cpyc_destino, 1
0x8D02	0x0E04      	MOVLW       hi_addr(expendedora_checkTarjeta_acceso_L0)
0x8D04	0x6F24      	MOVWF       FARG_string_cpyc_destino+1, 1
0x8D06	0x0E80      	MOVLW       expendedora_checkTarjeta_ACCESO_DENEGADO_L0
0x8D08	0x6F25      	MOVWF       FARG_string_cpyc_origen, 1
0x8D0A	0x0EA3      	MOVLW       hi_addr(expendedora_checkTarjeta_ACCESO_DENEGADO_L0)
0x8D0C	0x6F26      	MOVWF       FARG_string_cpyc_origen+1, 1
0x8D0E	0x0E00      	MOVLW       higher_addr(expendedora_checkTarjeta_ACCESO_DENEGADO_L0)
0x8D10	0x6F27      	MOVWF       FARG_string_cpyc_origen+2, 1
0x8D12	0xF014EC09  	CALL        _string_cpyc, 0
;Expendedora.c,868 :: 		if(!mysql_search(tablePrepago, prepagoNip, nip, &fila)){
0x8D16	0x0E74      	MOVLW       _tablePrepago
0x8D18	0x0104      	MOVLB       4
0x8D1A	0x6FBF      	MOVWF       FARG_mysql_search_tabla, 1
0x8D1C	0x0E01      	MOVLW       hi_addr(_tablePrepago)
0x8D1E	0x6FC0      	MOVWF       FARG_mysql_search_tabla+1, 1
0x8D20	0x0E93      	MOVLW       _prepagoNip
0x8D22	0x6FC1      	MOVWF       FARG_mysql_search_columna, 1
0x8D24	0x0E00      	MOVLW       hi_addr(_prepagoNip)
0x8D26	0x6FC2      	MOVWF       FARG_mysql_search_columna+1, 1
0x8D28	0xF4C3C2E2  	MOVFF       expendedora_checkTarjeta_nip_L0, FARG_mysql_search_buscar
0x8D2C	0xF4C4C2E3  	MOVFF       expendedora_checkTarjeta_nip_L0+1, FARG_mysql_search_buscar+1
0x8D30	0x0E00      	MOVLW       0
0x8D32	0x0102      	MOVLB       2
0x8D34	0xBFE3      	BTFSC       expendedora_checkTarjeta_nip_L0+1, 7, 1
0x8D36	0x0EFF      	MOVLW       255
0x8D38	0x0104      	MOVLB       4
0x8D3A	0x6FC5      	MOVWF       FARG_mysql_search_buscar+2, 1
0x8D3C	0x6FC6      	MOVWF       FARG_mysql_search_buscar+3, 1
0x8D3E	0x0EDC      	MOVLW       expendedora_checkTarjeta_fila_L0
0x8D40	0x6FC7      	MOVWF       FARG_mysql_search_fila, 1
0x8D42	0x0E02      	MOVLW       hi_addr(expendedora_checkTarjeta_fila_L0)
0x8D44	0x6FC8      	MOVWF       FARG_mysql_search_fila+1, 1
0x8D46	0xF038EC7F  	CALL        _mysql_search, 0
0x8D4A	0x5200      	MOVF        R0, 1 
0x8D4C	0xA4D8      	BTFSS       STATUS, 2 
0x8D4E	0xD171      	BRA         L_expendedora_checkTarjeta727
;Expendedora.c,870 :: 		mysql_read_string(tablePrepago, prepagoEstatus, fila, &estatus);
0x8D50	0x0E74      	MOVLW       _tablePrepago
0x8D52	0x0105      	MOVLB       5
0x8D54	0x6F23      	MOVWF       FARG_mysql_read_string_name, 1
0x8D56	0x0E01      	MOVLW       hi_addr(_tablePrepago)
0x8D58	0x6F24      	MOVWF       FARG_mysql_read_string_name+1, 1
0x8D5A	0x0E8C      	MOVLW       _prepagoEstatus
0x8D5C	0x6F25      	MOVWF       FARG_mysql_read_string_column, 1
0x8D5E	0x0E01      	MOVLW       hi_addr(_prepagoEstatus)
0x8D60	0x6F26      	MOVWF       FARG_mysql_read_string_column+1, 1
0x8D62	0xF527C2DC  	MOVFF       expendedora_checkTarjeta_fila_L0, FARG_mysql_read_string_fila
0x8D66	0xF528C2DD  	MOVFF       expendedora_checkTarjeta_fila_L0+1, FARG_mysql_read_string_fila+1
0x8D6A	0x0EA3      	MOVLW       expendedora_checkTarjeta_estatus_L0
0x8D6C	0x6F29      	MOVWF       FARG_mysql_read_string_result, 1
0x8D6E	0x0E04      	MOVLW       hi_addr(expendedora_checkTarjeta_estatus_L0)
0x8D70	0x6F2A      	MOVWF       FARG_mysql_read_string_result+1, 1
0x8D72	0xF014EC60  	CALL        _mysql_read_string, 0
;Expendedora.c,871 :: 		mysql_read(tablePrepago, prepagoSaldo, fila, &saldo);
0x8D76	0x0E74      	MOVLW       _tablePrepago
0x8D78	0x0105      	MOVLB       5
0x8D7A	0x6F31      	MOVWF       FARG_mysql_read_name, 1
0x8D7C	0x0E01      	MOVLW       hi_addr(_tablePrepago)
0x8D7E	0x6F32      	MOVWF       FARG_mysql_read_name+1, 1
0x8D80	0x0EA4      	MOVLW       _prepagoSaldo
0x8D82	0x6F33      	MOVWF       FARG_mysql_read_column, 1
0x8D84	0x0E01      	MOVLW       hi_addr(_prepagoSaldo)
0x8D86	0x6F34      	MOVWF       FARG_mysql_read_column+1, 1
0x8D88	0xF535C2DC  	MOVFF       expendedora_checkTarjeta_fila_L0, FARG_mysql_read_fila
0x8D8C	0xF536C2DD  	MOVFF       expendedora_checkTarjeta_fila_L0+1, FARG_mysql_read_fila+1
0x8D90	0x0EA9      	MOVLW       expendedora_checkTarjeta_saldo_L0
0x8D92	0x6F37      	MOVWF       FARG_mysql_read_result, 1
0x8D94	0x0E04      	MOVLW       hi_addr(expendedora_checkTarjeta_saldo_L0)
0x8D96	0x6F38      	MOVWF       FARG_mysql_read_result+1, 1
0x8D98	0xF00AECAA  	CALL        _mysql_read, 0
;Expendedora.c,872 :: 		mysql_read(tablePrepago, prepagoID, fila, &id);
0x8D9C	0x0E74      	MOVLW       _tablePrepago
0x8D9E	0x0105      	MOVLB       5
0x8DA0	0x6F31      	MOVWF       FARG_mysql_read_name, 1
0x8DA2	0x0E01      	MOVLW       hi_addr(_tablePrepago)
0x8DA4	0x6F32      	MOVWF       FARG_mysql_read_name+1, 1
0x8DA6	0x0E90      	MOVLW       _prepagoId
0x8DA8	0x6F33      	MOVWF       FARG_mysql_read_column, 1
0x8DAA	0x0E00      	MOVLW       hi_addr(_prepagoId)
0x8DAC	0x6F34      	MOVWF       FARG_mysql_read_column+1, 1
0x8DAE	0xF535C2DC  	MOVFF       expendedora_checkTarjeta_fila_L0, FARG_mysql_read_fila
0x8DB2	0xF536C2DD  	MOVFF       expendedora_checkTarjeta_fila_L0+1, FARG_mysql_read_fila+1
0x8DB6	0x0EDE      	MOVLW       expendedora_checkTarjeta_id_L0
0x8DB8	0x6F37      	MOVWF       FARG_mysql_read_result, 1
0x8DBA	0x0E02      	MOVLW       hi_addr(expendedora_checkTarjeta_id_L0)
0x8DBC	0x6F38      	MOVWF       FARG_mysql_read_result+1, 1
0x8DBE	0xF00AECAA  	CALL        _mysql_read, 0
;Expendedora.c,874 :: 		if(saldo >= 3600 && (estatus == ESTATUS_PAS || estatus == ESTATUS_BREAK || !canSynchrony || !can.conected)){
0x8DC2	0x0E80      	MOVLW       128
0x8DC4	0x0104      	MOVLB       4
0x8DC6	0x19AC      	XORWF       expendedora_checkTarjeta_saldo_L0+3, 0, 1
0x8DC8	0x6E00      	MOVWF       R0 
0x8DCA	0x0E80      	MOVLW       128
0x8DCC	0x5C00      	SUBWF       R0, 0 
0x8DCE	0xE108      	BNZ         L__expendedora_checkTarjeta1375
0x8DD0	0x0E00      	MOVLW       0
0x8DD2	0x5DAB      	SUBWF       expendedora_checkTarjeta_saldo_L0+2, 0, 1
0x8DD4	0xE105      	BNZ         L__expendedora_checkTarjeta1375
0x8DD6	0x0E0E      	MOVLW       14
0x8DD8	0x5DAA      	SUBWF       expendedora_checkTarjeta_saldo_L0+1, 0, 1
0x8DDA	0xE102      	BNZ         L__expendedora_checkTarjeta1375
0x8DDC	0x0E10      	MOVLW       16
0x8DDE	0x5DA9      	SUBWF       expendedora_checkTarjeta_saldo_L0, 0, 1
L__expendedora_checkTarjeta1375:
0x8DE0	0xE361      	BNC         L_expendedora_checkTarjeta732
0x8DE2	0x51A3      	MOVF        expendedora_checkTarjeta_estatus_L0, 0, 1
0x8DE4	0x0A4F      	XORLW       79
0x8DE6	0xE00A      	BZ          L__expendedora_checkTarjeta1001
0x8DE8	0x51A3      	MOVF        expendedora_checkTarjeta_estatus_L0, 0, 1
0x8DEA	0x0A2D      	XORLW       45
0x8DEC	0xE007      	BZ          L__expendedora_checkTarjeta1001
0x8DEE	0x0102      	MOVLB       2
0x8DF0	0x53DB      	MOVF        _canSynchrony, 1, 1
0x8DF2	0xE004      	BZ          L__expendedora_checkTarjeta1001
0x8DF4	0x0103      	MOVLB       3
0x8DF6	0x5356      	MOVF        _can+13, 1, 1
0x8DF8	0xE001      	BZ          L__expendedora_checkTarjeta1001
0x8DFA	0xD054      	BRA         L_expendedora_checkTarjeta732
L__expendedora_checkTarjeta1001:
L__expendedora_checkTarjeta1000:
;Expendedora.c,876 :: 		eSensor = 0;  //Reiniciar maquina de estados
0x8DFC	0x0102      	MOVLB       2
0x8DFE	0x6B96      	CLRF        _eSensor, 1
;Expendedora.c,877 :: 		abrirBarrera = true;
0x8E00	0x0E01      	MOVLW       1
0x8E02	0x6FC2      	MOVWF       _abrirBarrera, 1
;Expendedora.c,878 :: 		SALIDA_RELE1 = 1;
0x8E04	0x8A80      	BSF         PORTA, 5 
;Expendedora.c,879 :: 		SALIDA_RELE2 = 1;
0x8E06	0x8084      	BSF         PORTE, 0 
;Expendedora.c,880 :: 		timer1_reset();
0x8E08	0xF00FECFC  	CALL        _timer1_reset, 0
;Expendedora.c,881 :: 		timer1_enable(true);
0x8E0C	0x0E01      	MOVLW       1
0x8E0E	0x0105      	MOVLB       5
0x8E10	0x6F23      	MOVWF       FARG_timer1_enable_enable, 1
0x8E12	0xF010EC57  	CALL        _timer1_enable, 0
;Expendedora.c,883 :: 		acceso[0] = TPV_ACCESO;    //Acceso
0x8E16	0x0E41      	MOVLW       65
0x8E18	0x0104      	MOVLB       4
0x8E1A	0x6FA4      	MOVWF       expendedora_checkTarjeta_acceso_L0, 1
;Expendedora.c,885 :: 		if(!can.conected || !canSynchrony || estatus == ESTATUS_BREAK)
0x8E1C	0x0103      	MOVLB       3
0x8E1E	0x5356      	MOVF        _can+13, 1, 1
0x8E20	0xE008      	BZ          L__expendedora_checkTarjeta999
0x8E22	0x0102      	MOVLB       2
0x8E24	0x53DB      	MOVF        _canSynchrony, 1, 1
0x8E26	0xE005      	BZ          L__expendedora_checkTarjeta999
0x8E28	0x0104      	MOVLB       4
0x8E2A	0x51A3      	MOVF        expendedora_checkTarjeta_estatus_L0, 0, 1
0x8E2C	0x0A2D      	XORLW       45
0x8E2E	0xE001      	BZ          L__expendedora_checkTarjeta999
0x8E30	0xD003      	BRA         L_expendedora_checkTarjeta735
L__expendedora_checkTarjeta999:
0x8E32	0x0104      	MOVLB       4
;Expendedora.c,886 :: 		acceso[2] = ESTATUS_BREAK;   //Estado del passback roto
0x8E34	0x0E2D      	MOVLW       45
0x8E36	0x6FA6      	MOVWF       expendedora_checkTarjeta_acceso_L0+2, 1
L_expendedora_checkTarjeta735:
;Expendedora.c,888 :: 		estatus = (!can.conected || !canSynchrony)? ESTATUS_BREAK:ESTATUS_MOD;
0x8E38	0x0103      	MOVLB       3
0x8E3A	0x5356      	MOVF        _can+13, 1, 1
0x8E3C	0xE004      	BZ          L__expendedora_checkTarjeta998
0x8E3E	0x0102      	MOVLB       2
0x8E40	0x53DB      	MOVF        _canSynchrony, 1, 1
0x8E42	0xE001      	BZ          L__expendedora_checkTarjeta998
0x8E44	0xD004      	BRA         L_expendedora_checkTarjeta738
L__expendedora_checkTarjeta998:
0x8E46	0x0E2D      	MOVLW       45
0x8E48	0x0104      	MOVLB       4
0x8E4A	0x6FA1      	MOVWF       ?FLOC___expendedora_checkTarjetaT2819, 1
0x8E4C	0xD003      	BRA         L_expendedora_checkTarjeta739
L_expendedora_checkTarjeta738:
0x8E4E	0x0104      	MOVLB       4
0x8E50	0x0E49      	MOVLW       73
0x8E52	0x6FA1      	MOVWF       ?FLOC___expendedora_checkTarjetaT2819, 1
L_expendedora_checkTarjeta739:
0x8E54	0xF4A3C4A1  	MOVFF       ?FLOC___expendedora_checkTarjetaT2819, expendedora_checkTarjeta_estatus_L0
;Expendedora.c,889 :: 		mysql_write(tablePrepago, prepagoEstatus, fila, estatus, false);
0x8E58	0x0E74      	MOVLW       _tablePrepago
0x8E5A	0x0105      	MOVLB       5
0x8E5C	0x6F23      	MOVWF       FARG_mysql_write_name, 1
0x8E5E	0x0E01      	MOVLW       hi_addr(_tablePrepago)
0x8E60	0x6F24      	MOVWF       FARG_mysql_write_name+1, 1
0x8E62	0x0E8C      	MOVLW       _prepagoEstatus
0x8E64	0x6F25      	MOVWF       FARG_mysql_write_column, 1
0x8E66	0x0E01      	MOVLW       hi_addr(_prepagoEstatus)
0x8E68	0x6F26      	MOVWF       FARG_mysql_write_column+1, 1
0x8E6A	0xF527C2DC  	MOVFF       expendedora_checkTarjeta_fila_L0, FARG_mysql_write_fila
0x8E6E	0xF528C2DD  	MOVFF       expendedora_checkTarjeta_fila_L0+1, FARG_mysql_write_fila+1
0x8E72	0xF529C4A1  	MOVFF       ?FLOC___expendedora_checkTarjetaT2819, FARG_mysql_write_value
0x8E76	0x0E00      	MOVLW       0
0x8E78	0x6F2A      	MOVWF       FARG_mysql_write_value+1, 1
0x8E7A	0x6F2B      	MOVWF       FARG_mysql_write_value+2, 1
0x8E7C	0x6F2C      	MOVWF       FARG_mysql_write_value+3, 1
0x8E7E	0x6B2D      	CLRF        FARG_mysql_write_endWrite, 1
0x8E80	0xF012ECDC  	CALL        _mysql_write, 0
;Expendedora.c,890 :: 		lcd_clean_row(2);
0x8E84	0x0E02      	MOVLW       2
0x8E86	0x0105      	MOVLB       5
0x8E88	0x6F23      	MOVWF       FARG_lcd_clean_row_fila, 1
0x8E8A	0xF015EC78  	CALL        _lcd_clean_row, 0
;Expendedora.c,891 :: 		lcd_out(2,1,"Acceso aceptado");
0x8E8E	0x0E02      	MOVLW       2
0x8E90	0x6F23      	MOVWF       FARG_lcd_out_fila, 1
0x8E92	0x0E01      	MOVLW       1
0x8E94	0x6F24      	MOVWF       FARG_lcd_out_col, 1
0x8E96	0x0E4C      	MOVLW       ?lstr16_Expendedora
0x8E98	0x6F25      	MOVWF       FARG_lcd_out_texto, 1
0x8E9A	0x0E00      	MOVLW       hi_addr(?lstr16_Expendedora)
0x8E9C	0x6F26      	MOVWF       FARG_lcd_out_texto+1, 1
0x8E9E	0xF010EC01  	CALL        _lcd_out, 0
;Expendedora.c,897 :: 		}else{
0x8EA2	0xD037      	BRA         L_expendedora_checkTarjeta740
L_expendedora_checkTarjeta732:
;Expendedora.c,898 :: 		if(saldo < 3600){
0x8EA4	0x0E80      	MOVLW       128
0x8EA6	0x0104      	MOVLB       4
0x8EA8	0x19AC      	XORWF       expendedora_checkTarjeta_saldo_L0+3, 0, 1
0x8EAA	0x6E00      	MOVWF       R0 
0x8EAC	0x0E80      	MOVLW       128
0x8EAE	0x5C00      	SUBWF       R0, 0 
0x8EB0	0xE108      	BNZ         L__expendedora_checkTarjeta1376
0x8EB2	0x0E00      	MOVLW       0
0x8EB4	0x5DAB      	SUBWF       expendedora_checkTarjeta_saldo_L0+2, 0, 1
0x8EB6	0xE105      	BNZ         L__expendedora_checkTarjeta1376
0x8EB8	0x0E0E      	MOVLW       14
0x8EBA	0x5DAA      	SUBWF       expendedora_checkTarjeta_saldo_L0+1, 0, 1
0x8EBC	0xE102      	BNZ         L__expendedora_checkTarjeta1376
0x8EBE	0x0E10      	MOVLW       16
0x8EC0	0x5DA9      	SUBWF       expendedora_checkTarjeta_saldo_L0, 0, 1
L__expendedora_checkTarjeta1376:
0x8EC2	0xE212      	BC          L_expendedora_checkTarjeta741
;Expendedora.c,899 :: 		acceso[1] = TPV_SIN_SALDO;  //Sin saldo
0x8EC4	0x0E53      	MOVLW       83
0x8EC6	0x6FA5      	MOVWF       expendedora_checkTarjeta_acceso_L0+1, 1
;Expendedora.c,900 :: 		lcd_clean_row(2);
0x8EC8	0x0E02      	MOVLW       2
0x8ECA	0x0105      	MOVLB       5
0x8ECC	0x6F23      	MOVWF       FARG_lcd_clean_row_fila, 1
0x8ECE	0xF015EC78  	CALL        _lcd_clean_row, 0
;Expendedora.c,901 :: 		lcd_out(2,1,"Saldo agotado");
0x8ED2	0x0E02      	MOVLW       2
0x8ED4	0x6F23      	MOVWF       FARG_lcd_out_fila, 1
0x8ED6	0x0E01      	MOVLW       1
0x8ED8	0x6F24      	MOVWF       FARG_lcd_out_col, 1
0x8EDA	0x0E2B      	MOVLW       ?lstr17_Expendedora
0x8EDC	0x6F25      	MOVWF       FARG_lcd_out_texto, 1
0x8EDE	0x0E00      	MOVLW       hi_addr(?lstr17_Expendedora)
0x8EE0	0x6F26      	MOVWF       FARG_lcd_out_texto+1, 1
0x8EE2	0xF010EC01  	CALL        _lcd_out, 0
;Expendedora.c,905 :: 		}else if(estatus == ESTATUS_MOD){
0x8EE6	0xD015      	BRA         L_expendedora_checkTarjeta742
L_expendedora_checkTarjeta741:
0x8EE8	0x0104      	MOVLB       4
0x8EEA	0x51A3      	MOVF        expendedora_checkTarjeta_estatus_L0, 0, 1
0x8EEC	0x0A49      	XORLW       73
0x8EEE	0xE111      	BNZ         L_expendedora_checkTarjeta743
;Expendedora.c,906 :: 		acceso[2] = TPV_PASSBACK;   //Estado del passback
0x8EF0	0x0E50      	MOVLW       80
0x8EF2	0x6FA6      	MOVWF       expendedora_checkTarjeta_acceso_L0+2, 1
;Expendedora.c,907 :: 		lcd_clean_row(2);
0x8EF4	0x0E02      	MOVLW       2
0x8EF6	0x0105      	MOVLB       5
0x8EF8	0x6F23      	MOVWF       FARG_lcd_clean_row_fila, 1
0x8EFA	0xF015EC78  	CALL        _lcd_clean_row, 0
;Expendedora.c,908 :: 		lcd_out(2,1,"Passback activo");
0x8EFE	0x0E02      	MOVLW       2
0x8F00	0x6F23      	MOVWF       FARG_lcd_out_fila, 1
0x8F02	0x0E01      	MOVLW       1
0x8F04	0x6F24      	MOVWF       FARG_lcd_out_col, 1
0x8F06	0x0E1B      	MOVLW       ?lstr18_Expendedora
0x8F08	0x6F25      	MOVWF       FARG_lcd_out_texto, 1
0x8F0A	0x0E00      	MOVLW       hi_addr(?lstr18_Expendedora)
0x8F0C	0x6F26      	MOVWF       FARG_lcd_out_texto+1, 1
0x8F0E	0xF010EC01  	CALL        _lcd_out, 0
;Expendedora.c,912 :: 		}
L_expendedora_checkTarjeta743:
L_expendedora_checkTarjeta742:
;Expendedora.c,913 :: 		}
L_expendedora_checkTarjeta740:
0x8F12	0x0105      	MOVLB       5
;Expendedora.c,915 :: 		string_add(canCommand, acceso);
0x8F14	0x0E5C      	MOVLW       _canCommand
0x8F16	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x8F18	0x0E04      	MOVLW       hi_addr(_canCommand)
0x8F1A	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x8F1C	0x0EA4      	MOVLW       expendedora_checkTarjeta_acceso_L0
0x8F1E	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x8F20	0x0E04      	MOVLW       hi_addr(expendedora_checkTarjeta_acceso_L0)
0x8F22	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x8F24	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,917 :: 		string_cpyc(bufferEeprom, CAN_PREPAGO);
0x8F28	0x0E15      	MOVLW       _bufferEeprom
0x8F2A	0x6F23      	MOVWF       FARG_string_cpyc_destino, 1
0x8F2C	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x8F2E	0x6F24      	MOVWF       FARG_string_cpyc_destino+1, 1
0x8F30	0x0ED8      	MOVLW       _CAN_PREPAGO
0x8F32	0x6F25      	MOVWF       FARG_string_cpyc_origen, 1
0x8F34	0x0EA3      	MOVLW       hi_addr(_CAN_PREPAGO)
0x8F36	0x6F26      	MOVWF       FARG_string_cpyc_origen+1, 1
0x8F38	0x0E00      	MOVLW       higher_addr(_CAN_PREPAGO)
0x8F3A	0x6F27      	MOVWF       FARG_string_cpyc_origen+2, 1
0x8F3C	0xF014EC09  	CALL        _string_cpyc, 0
;Expendedora.c,918 :: 		numTohex(id, msjConst, 3);
0x8F40	0xF523C2DE  	MOVFF       expendedora_checkTarjeta_id_L0, FARG_numToHex_valor
0x8F44	0xF524C2DF  	MOVFF       expendedora_checkTarjeta_id_L0+1, FARG_numToHex_valor+1
0x8F48	0xF525C2E0  	MOVFF       expendedora_checkTarjeta_id_L0+2, FARG_numToHex_valor+2
0x8F4C	0xF526C2E1  	MOVFF       expendedora_checkTarjeta_id_L0+3, FARG_numToHex_valor+3
0x8F50	0x0E05      	MOVLW       _msjConst
0x8F52	0x6F27      	MOVWF       FARG_numToHex_cadena, 1
0x8F54	0x0E03      	MOVLW       hi_addr(_msjConst)
0x8F56	0x6F28      	MOVWF       FARG_numToHex_cadena+1, 1
0x8F58	0x0E03      	MOVLW       3
0x8F5A	0x6F29      	MOVWF       FARG_numToHex_bytes, 1
0x8F5C	0xF016EC51  	CALL        _numToHex, 0
;Expendedora.c,919 :: 		string_add(bufferEeprom, msjConst);
0x8F60	0x0E15      	MOVLW       _bufferEeprom
0x8F62	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x8F64	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x8F66	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x8F68	0x0E05      	MOVLW       _msjConst
0x8F6A	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x8F6C	0x0E03      	MOVLW       hi_addr(_msjConst)
0x8F6E	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x8F70	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,920 :: 		if(acceso[0] == TPV_ACCESO)
0x8F74	0x0104      	MOVLB       4
0x8F76	0x51A4      	MOVF        expendedora_checkTarjeta_acceso_L0, 0, 1
0x8F78	0x0A41      	XORLW       65
0x8F7A	0xE10E      	BNZ         L_expendedora_checkTarjeta744
;Expendedora.c,921 :: 		string_addc(bufferEeprom, CAN_SPECIAL_DATE);   //CODIGO DE ACCION
0x8F7C	0x0E15      	MOVLW       _bufferEeprom
0x8F7E	0x0105      	MOVLB       5
0x8F80	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x8F82	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x8F84	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x8F86	0x0EE4      	MOVLW       _CAN_SPECIAL_DATE
0x8F88	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x8F8A	0x0EA3      	MOVLW       hi_addr(_CAN_SPECIAL_DATE)
0x8F8C	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x8F8E	0x0E00      	MOVLW       higher_addr(_CAN_SPECIAL_DATE)
0x8F90	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x8F92	0xF015EC0C  	CALL        _string_addc, 0
0x8F96	0xD00D      	BRA         L_expendedora_checkTarjeta745
L_expendedora_checkTarjeta744:
0x8F98	0x0105      	MOVLB       5
;Expendedora.c,923 :: 		string_addc(bufferEeprom, CAN_PASSBACK);
0x8F9A	0x0E15      	MOVLW       _bufferEeprom
0x8F9C	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x8F9E	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x8FA0	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x8FA2	0x0EDC      	MOVLW       _CAN_PASSBACK
0x8FA4	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x8FA6	0x0EA3      	MOVLW       hi_addr(_CAN_PASSBACK)
0x8FA8	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x8FAA	0x0E00      	MOVLW       higher_addr(_CAN_PASSBACK)
0x8FAC	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x8FAE	0xF015EC0C  	CALL        _string_addc, 0
L_expendedora_checkTarjeta745:
;Expendedora.c,924 :: 		numToString(fila, msjConst, 4);
0x8FB2	0xF53BC2DC  	MOVFF       expendedora_checkTarjeta_fila_L0, FARG_numToString_valor
0x8FB6	0xF53CC2DD  	MOVFF       expendedora_checkTarjeta_fila_L0+1, FARG_numToString_valor+1
0x8FBA	0x0E00      	MOVLW       0
0x8FBC	0x0102      	MOVLB       2
0x8FBE	0xBFDD      	BTFSC       expendedora_checkTarjeta_fila_L0+1, 7, 1
0x8FC0	0x0EFF      	MOVLW       255
0x8FC2	0x0105      	MOVLB       5
0x8FC4	0x6F3D      	MOVWF       FARG_numToString_valor+2, 1
0x8FC6	0x6F3E      	MOVWF       FARG_numToString_valor+3, 1
0x8FC8	0x0E05      	MOVLW       _msjConst
0x8FCA	0x6F3F      	MOVWF       FARG_numToString_cadena, 1
0x8FCC	0x0E03      	MOVLW       hi_addr(_msjConst)
0x8FCE	0x6F40      	MOVWF       FARG_numToString_cadena+1, 1
0x8FD0	0x0E04      	MOVLW       4
0x8FD2	0x6F41      	MOVWF       FARG_numToString_digitos, 1
0x8FD4	0xF005EC17  	CALL        _numToString, 0
;Expendedora.c,925 :: 		string_add(bufferEeprom, msjConst);
0x8FD8	0x0E15      	MOVLW       _bufferEeprom
0x8FDA	0x0105      	MOVLB       5
0x8FDC	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x8FDE	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x8FE0	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x8FE2	0x0E05      	MOVLW       _msjConst
0x8FE4	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x8FE6	0x0E03      	MOVLW       hi_addr(_msjConst)
0x8FE8	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x8FEA	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,927 :: 		string_push(bufferEeprom, estatus);
0x8FEE	0x0E15      	MOVLW       _bufferEeprom
0x8FF0	0x6F23      	MOVWF       FARG_string_push_texto, 1
0x8FF2	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x8FF4	0x6F24      	MOVWF       FARG_string_push_texto+1, 1
0x8FF6	0xF525C4A3  	MOVFF       expendedora_checkTarjeta_estatus_L0, FARG_string_push_caracter
0x8FFA	0xF013ECEA  	CALL        _string_push, 0
;Expendedora.c,929 :: 		DS1307_read(&myRTC, false);
0x8FFE	0x0EFA      	MOVLW       _myRTC
0x9000	0x6F23      	MOVWF       FARG_DS1307_read_myDS, 1
0x9002	0x0E03      	MOVLW       hi_addr(_myRTC)
0x9004	0x6F24      	MOVWF       FARG_DS1307_read_myDS+1, 1
0x9006	0x6B25      	CLRF        FARG_DS1307_read_formatComplet, 1
0x9008	0xF011ECAD  	CALL        _DS1307_read, 0
;Expendedora.c,930 :: 		string_add(bufferEeprom, &myRTC.time[1]);
0x900C	0x0E15      	MOVLW       _bufferEeprom
0x900E	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x9010	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x9012	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x9014	0x0E02      	MOVLW       _myRTC+8
0x9016	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x9018	0x0E04      	MOVLW       hi_addr(_myRTC+8)
0x901A	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x901C	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,932 :: 		buffer_save_send(true, bufferEeprom);
0x9020	0x0E01      	MOVLW       1
0x9022	0x6F23      	MOVWF       FARG_buffer_save_send_guardar, 1
0x9024	0x0E15      	MOVLW       _bufferEeprom
0x9026	0x6F24      	MOVWF       FARG_buffer_save_send_buffer, 1
0x9028	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x902A	0x6F25      	MOVWF       FARG_buffer_save_send_buffer+1, 1
0x902C	0xF014ECA9  	CALL        _buffer_save_send, 0
;Expendedora.c,933 :: 		}else if(!mysql_search_forced(tableKeyOutNip, keyOutNip, nip, &fila)){
0x9030	0xD1A6      	BRA         L_expendedora_checkTarjeta746
L_expendedora_checkTarjeta727:
0x9032	0x0E39      	MOVLW       _tableKeyOutNip
0x9034	0x0105      	MOVLB       5
0x9036	0x6F23      	MOVWF       FARG_mysql_search_forced_tabla, 1
0x9038	0x0E00      	MOVLW       hi_addr(_tableKeyOutNip)
0x903A	0x6F24      	MOVWF       FARG_mysql_search_forced_tabla+1, 1
0x903C	0x0E48      	MOVLW       _keyOutNip
0x903E	0x6F25      	MOVWF       FARG_mysql_search_forced_columna, 1
0x9040	0x0E00      	MOVLW       hi_addr(_keyOutNip)
0x9042	0x6F26      	MOVWF       FARG_mysql_search_forced_columna+1, 1
0x9044	0xF527C2E2  	MOVFF       expendedora_checkTarjeta_nip_L0, FARG_mysql_search_forced_buscar
0x9048	0xF528C2E3  	MOVFF       expendedora_checkTarjeta_nip_L0+1, FARG_mysql_search_forced_buscar+1
0x904C	0x0E00      	MOVLW       0
0x904E	0x0102      	MOVLB       2
0x9050	0xBFE3      	BTFSC       expendedora_checkTarjeta_nip_L0+1, 7, 1
0x9052	0x0EFF      	MOVLW       255
0x9054	0x0105      	MOVLB       5
0x9056	0x6F29      	MOVWF       FARG_mysql_search_forced_buscar+2, 1
0x9058	0x6F2A      	MOVWF       FARG_mysql_search_forced_buscar+3, 1
0x905A	0x0EDC      	MOVLW       expendedora_checkTarjeta_fila_L0
0x905C	0x6F2B      	MOVWF       FARG_mysql_search_forced_fila, 1
0x905E	0x0E02      	MOVLW       hi_addr(expendedora_checkTarjeta_fila_L0)
0x9060	0x6F2C      	MOVWF       FARG_mysql_search_forced_fila+1, 1
0x9062	0xF011EC4D  	CALL        _mysql_search_forced, 0
0x9066	0x5200      	MOVF        R0, 1 
0x9068	0xA4D8      	BTFSS       STATUS, 2 
0x906A	0xD16C      	BRA         L_expendedora_checkTarjeta747
;Expendedora.c,935 :: 		canCommand[3] = CAN_KEY[0];
0x906C	0x0E4B      	MOVLW       75
0x906E	0x0104      	MOVLB       4
0x9070	0x6F5F      	MOVWF       _canCommand+3, 1
;Expendedora.c,936 :: 		canCommand[4] = CAN_KEY[1];
0x9072	0x0E45      	MOVLW       69
0x9074	0x6F60      	MOVWF       _canCommand+4, 1
;Expendedora.c,937 :: 		canCommand[5] = CAN_KEY[2];
0x9076	0x0E59      	MOVLW       89
0x9078	0x6F61      	MOVWF       _canCommand+5, 1
;Expendedora.c,938 :: 		mysql_read_forced(tableKeyOutNip, keyOutEstatus, fila, &estatus);
0x907A	0x0E39      	MOVLW       _tableKeyOutNip
0x907C	0x0105      	MOVLB       5
0x907E	0x6F31      	MOVWF       FARG_mysql_read_forced_name, 1
0x9080	0x0E00      	MOVLW       hi_addr(_tableKeyOutNip)
0x9082	0x6F32      	MOVWF       FARG_mysql_read_forced_name+1, 1
0x9084	0x0E40      	MOVLW       _keyOutEstatus
0x9086	0x6F33      	MOVWF       FARG_mysql_read_forced_column, 1
0x9088	0x0E00      	MOVLW       hi_addr(_keyOutEstatus)
0x908A	0x6F34      	MOVWF       FARG_mysql_read_forced_column+1, 1
0x908C	0xF535C2DC  	MOVFF       expendedora_checkTarjeta_fila_L0, FARG_mysql_read_forced_fila
0x9090	0xF536C2DD  	MOVFF       expendedora_checkTarjeta_fila_L0+1, FARG_mysql_read_forced_fila+1
0x9094	0x0EA3      	MOVLW       expendedora_checkTarjeta_estatus_L0
0x9096	0x6F37      	MOVWF       FARG_mysql_read_forced_result, 1
0x9098	0x0E04      	MOVLW       hi_addr(expendedora_checkTarjeta_estatus_L0)
0x909A	0x6F38      	MOVWF       FARG_mysql_read_forced_result+1, 1
0x909C	0xF00AEC09  	CALL        _mysql_read_forced, 0
;Expendedora.c,939 :: 		mysql_read_forced(tableKeyOutNip, keyOutDate, fila, fecha);
0x90A0	0x0E39      	MOVLW       _tableKeyOutNip
0x90A2	0x0105      	MOVLB       5
0x90A4	0x6F31      	MOVWF       FARG_mysql_read_forced_name, 1
0x90A6	0x0E00      	MOVLW       hi_addr(_tableKeyOutNip)
0x90A8	0x6F32      	MOVWF       FARG_mysql_read_forced_name+1, 1
0x90AA	0x0EA8      	MOVLW       _keyOutDate
0x90AC	0x6F33      	MOVWF       FARG_mysql_read_forced_column, 1
0x90AE	0x0E00      	MOVLW       hi_addr(_keyOutDate)
0x90B0	0x6F34      	MOVWF       FARG_mysql_read_forced_column+1, 1
0x90B2	0xF535C2DC  	MOVFF       expendedora_checkTarjeta_fila_L0, FARG_mysql_read_forced_fila
0x90B6	0xF536C2DD  	MOVFF       expendedora_checkTarjeta_fila_L0+1, FARG_mysql_read_forced_fila+1
0x90BA	0x0EB1      	MOVLW       expendedora_checkTarjeta_fecha_L0
0x90BC	0x6F37      	MOVWF       FARG_mysql_read_forced_result, 1
0x90BE	0x0E04      	MOVLW       hi_addr(expendedora_checkTarjeta_fecha_L0)
0x90C0	0x6F38      	MOVWF       FARG_mysql_read_forced_result+1, 1
0x90C2	0xF00AEC09  	CALL        _mysql_read_forced, 0
;Expendedora.c,940 :: 		fecha[12] = 0; //Agregar final de cadena, proteccion
0x90C6	0x0104      	MOVLB       4
0x90C8	0x6BBD      	CLRF        expendedora_checkTarjeta_fecha_L0+12, 1
;Expendedora.c,941 :: 		DS1307_read(&myRTC, false);
0x90CA	0x0EFA      	MOVLW       _myRTC
0x90CC	0x0105      	MOVLB       5
0x90CE	0x6F23      	MOVWF       FARG_DS1307_read_myDS, 1
0x90D0	0x0E03      	MOVLW       hi_addr(_myRTC)
0x90D2	0x6F24      	MOVWF       FARG_DS1307_read_myDS+1, 1
0x90D4	0x6B25      	CLRF        FARG_DS1307_read_formatComplet, 1
0x90D6	0xF011ECAD  	CALL        _DS1307_read, 0
;Expendedora.c,950 :: 		string_cpyn(msjConst, &myRTC.time[1], 6);
0x90DA	0x0E05      	MOVLW       _msjConst
0x90DC	0x6F23      	MOVWF       FARG_string_cpyn_destino, 1
0x90DE	0x0E03      	MOVLW       hi_addr(_msjConst)
0x90E0	0x6F24      	MOVWF       FARG_string_cpyn_destino+1, 1
0x90E2	0x0E02      	MOVLW       _myRTC+8
0x90E4	0x6F25      	MOVWF       FARG_string_cpyn_origen, 1
0x90E6	0x0E04      	MOVLW       hi_addr(_myRTC+8)
0x90E8	0x6F26      	MOVWF       FARG_string_cpyn_origen+1, 1
0x90EA	0x0E06      	MOVLW       6
0x90EC	0x6F27      	MOVWF       FARG_string_cpyn_size, 1
0x90EE	0xF014EC39  	CALL        _string_cpyn, 0
;Expendedora.c,951 :: 		seconds = DS1307_getSeconds(msjConst);
0x90F2	0x0E05      	MOVLW       _msjConst
0x90F4	0x0104      	MOVLB       4
0x90F6	0x6FBF      	MOVWF       FARG_DS1307_getSeconds_HHMMSS, 1
0x90F8	0x0E03      	MOVLW       hi_addr(_msjConst)
0x90FA	0x6FC0      	MOVWF       FARG_DS1307_getSeconds_HHMMSS+1, 1
0x90FC	0xF039ECEB  	CALL        _DS1307_getSeconds, 0
0x9100	0xF4ADC000  	MOVFF       R0, expendedora_checkTarjeta_seconds_L0
0x9104	0xF4AEC001  	MOVFF       R1, expendedora_checkTarjeta_seconds_L0+1
0x9108	0xF4AFC002  	MOVFF       R2, expendedora_checkTarjeta_seconds_L0+2
0x910C	0xF4B0C003  	MOVFF       R3, expendedora_checkTarjeta_seconds_L0+3
;Expendedora.c,952 :: 		string_cpyn(msjConst, fecha, 6);
0x9110	0x0E05      	MOVLW       _msjConst
0x9112	0x0105      	MOVLB       5
0x9114	0x6F23      	MOVWF       FARG_string_cpyn_destino, 1
0x9116	0x0E03      	MOVLW       hi_addr(_msjConst)
0x9118	0x6F24      	MOVWF       FARG_string_cpyn_destino+1, 1
0x911A	0x0EB1      	MOVLW       expendedora_checkTarjeta_fecha_L0
0x911C	0x6F25      	MOVWF       FARG_string_cpyn_origen, 1
0x911E	0x0E04      	MOVLW       hi_addr(expendedora_checkTarjeta_fecha_L0)
0x9120	0x6F26      	MOVWF       FARG_string_cpyn_origen+1, 1
0x9122	0x0E06      	MOVLW       6
0x9124	0x6F27      	MOVWF       FARG_string_cpyn_size, 1
0x9126	0xF014EC39  	CALL        _string_cpyn, 0
;Expendedora.c,953 :: 		seconds -= DS1307_getSeconds(msjConst);
0x912A	0x0E05      	MOVLW       _msjConst
0x912C	0x0104      	MOVLB       4
0x912E	0x6FBF      	MOVWF       FARG_DS1307_getSeconds_HHMMSS, 1
0x9130	0x0E03      	MOVLW       hi_addr(_msjConst)
0x9132	0x6FC0      	MOVWF       FARG_DS1307_getSeconds_HHMMSS+1, 1
0x9134	0xF039ECEB  	CALL        _DS1307_getSeconds, 0
0x9138	0xF004C4AD  	MOVFF       expendedora_checkTarjeta_seconds_L0, R4
0x913C	0xF005C4AE  	MOVFF       expendedora_checkTarjeta_seconds_L0+1, R5
0x9140	0xF006C4AF  	MOVFF       expendedora_checkTarjeta_seconds_L0+2, R6
0x9144	0xF007C4B0  	MOVFF       expendedora_checkTarjeta_seconds_L0+3, R7
0x9148	0x5000      	MOVF        R0, 0 
0x914A	0x5E04      	SUBWF       R4, 1 
0x914C	0x5001      	MOVF        R1, 0 
0x914E	0x5A05      	SUBWFB      R5, 1 
0x9150	0x5002      	MOVF        R2, 0 
0x9152	0x5A06      	SUBWFB      R6, 1 
0x9154	0x5003      	MOVF        R3, 0 
0x9156	0x5A07      	SUBWFB      R7, 1 
0x9158	0xF4ADC004  	MOVFF       R4, expendedora_checkTarjeta_seconds_L0
0x915C	0xF4AEC005  	MOVFF       R5, expendedora_checkTarjeta_seconds_L0+1
0x9160	0xF4AFC006  	MOVFF       R6, expendedora_checkTarjeta_seconds_L0+2
0x9164	0xF4B0C007  	MOVFF       R7, expendedora_checkTarjeta_seconds_L0+3
;Expendedora.c,954 :: 		seconds = clamp(seconds, 0, TOLERANCIA_OUT); //Saturar en este rango
0x9168	0xF4BFC004  	MOVFF       R4, FARG_clamp_valor
0x916C	0xF4C0C005  	MOVFF       R5, FARG_clamp_valor+1
0x9170	0xF4C1C006  	MOVFF       R6, FARG_clamp_valor+2
0x9174	0xF4C2C007  	MOVFF       R7, FARG_clamp_valor+3
0x9178	0x0104      	MOVLB       4
0x917A	0x6BC3      	CLRF        FARG_clamp_min, 1
0x917C	0x6BC4      	CLRF        FARG_clamp_min+1, 1
0x917E	0x6BC5      	CLRF        FARG_clamp_min+2, 1
0x9180	0x6BC6      	CLRF        FARG_clamp_min+3, 1
0x9182	0x0E8E      	MOVLW       142
0x9184	0x6FC7      	MOVWF       FARG_clamp_max, 1
0x9186	0x0E03      	MOVLW       3
0x9188	0x6FC8      	MOVWF       FARG_clamp_max+1, 1
0x918A	0x0E00      	MOVLW       0
0x918C	0x6FC9      	MOVWF       FARG_clamp_max+2, 1
0x918E	0x6FCA      	MOVWF       FARG_clamp_max+3, 1
0x9190	0xF03DEC18  	CALL        _clamp, 0
0x9194	0xF4ADC000  	MOVFF       R0, expendedora_checkTarjeta_seconds_L0
0x9198	0xF4AEC001  	MOVFF       R1, expendedora_checkTarjeta_seconds_L0+1
0x919C	0xF4AFC002  	MOVFF       R2, expendedora_checkTarjeta_seconds_L0+2
0x91A0	0xF4B0C003  	MOVFF       R3, expendedora_checkTarjeta_seconds_L0+3
;Expendedora.c,957 :: 		string_cpy(msjConst, &myRTC.time[1]);
0x91A4	0x0E05      	MOVLW       _msjConst
0x91A6	0x6FBF      	MOVWF       FARG_string_cpy_destino, 1
0x91A8	0x0E03      	MOVLW       hi_addr(_msjConst)
0x91AA	0x6FC0      	MOVWF       FARG_string_cpy_destino+1, 1
0x91AC	0x0E02      	MOVLW       _myRTC+8
0x91AE	0x6FC1      	MOVWF       FARG_string_cpy_origen, 1
0x91B0	0x0E04      	MOVLW       hi_addr(_myRTC+8)
0x91B2	0x6FC2      	MOVWF       FARG_string_cpy_origen+1, 1
0x91B4	0xF03CECEA  	CALL        _string_cpy, 0
;Expendedora.c,958 :: 		isOtherToday = !string_cmpn(&msjConst[6], &fecha[6], 2);
0x91B8	0x0E0B      	MOVLW       _msjConst+6
0x91BA	0x6FBF      	MOVWF       FARG_string_cmpn_text1, 1
0x91BC	0x0E03      	MOVLW       hi_addr(_msjConst+6)
0x91BE	0x6FC0      	MOVWF       FARG_string_cmpn_text1+1, 1
0x91C0	0x0EB7      	MOVLW       expendedora_checkTarjeta_fecha_L0+6
0x91C2	0x6FC1      	MOVWF       FARG_string_cmpn_text2, 1
0x91C4	0x0E04      	MOVLW       hi_addr(expendedora_checkTarjeta_fecha_L0+6)
0x91C6	0x6FC2      	MOVWF       FARG_string_cmpn_text2+1, 1
0x91C8	0x0E02      	MOVLW       2
0x91CA	0x6FC3      	MOVWF       FARG_string_cmpn_bytes, 1
0x91CC	0xF035EC99  	CALL        _string_cmpn, 0
0x91D0	0x5200      	MOVF        R0, 1 
0x91D2	0x0E01      	MOVLW       1
0x91D4	0xA4D8      	BTFSS       STATUS, 2 
0x91D6	0x0E00      	MOVLW       0
0x91D8	0x6FBE      	MOVWF       expendedora_checkTarjeta_isOtherToday_L0, 1
;Expendedora.c,959 :: 		isOtherToday |= !string_cmpn(&msjConst[8], &fecha[8], 2);
0x91DA	0x0E0D      	MOVLW       _msjConst+8
0x91DC	0x6FBF      	MOVWF       FARG_string_cmpn_text1, 1
0x91DE	0x0E03      	MOVLW       hi_addr(_msjConst+8)
0x91E0	0x6FC0      	MOVWF       FARG_string_cmpn_text1+1, 1
0x91E2	0x0EB9      	MOVLW       expendedora_checkTarjeta_fecha_L0+8
0x91E4	0x6FC1      	MOVWF       FARG_string_cmpn_text2, 1
0x91E6	0x0E04      	MOVLW       hi_addr(expendedora_checkTarjeta_fecha_L0+8)
0x91E8	0x6FC2      	MOVWF       FARG_string_cmpn_text2+1, 1
0x91EA	0x0E02      	MOVLW       2
0x91EC	0x6FC3      	MOVWF       FARG_string_cmpn_bytes, 1
0x91EE	0xF035EC99  	CALL        _string_cmpn, 0
0x91F2	0x5200      	MOVF        R0, 1 
0x91F4	0x0E01      	MOVLW       1
0x91F6	0xA4D8      	BTFSS       STATUS, 2 
0x91F8	0x0E00      	MOVLW       0
0x91FA	0x6E01      	MOVWF       R1 
0x91FC	0x5001      	MOVF        R1, 0 
0x91FE	0x13BE      	IORWF       expendedora_checkTarjeta_isOtherToday_L0, 1, 1
;Expendedora.c,960 :: 		isOtherToday |= !string_cmpn(&msjConst[10], &fecha[10], 2);
0x9200	0x0E0F      	MOVLW       _msjConst+10
0x9202	0x6FBF      	MOVWF       FARG_string_cmpn_text1, 1
0x9204	0x0E03      	MOVLW       hi_addr(_msjConst+10)
0x9206	0x6FC0      	MOVWF       FARG_string_cmpn_text1+1, 1
0x9208	0x0EBB      	MOVLW       expendedora_checkTarjeta_fecha_L0+10
0x920A	0x6FC1      	MOVWF       FARG_string_cmpn_text2, 1
0x920C	0x0E04      	MOVLW       hi_addr(expendedora_checkTarjeta_fecha_L0+10)
0x920E	0x6FC2      	MOVWF       FARG_string_cmpn_text2+1, 1
0x9210	0x0E02      	MOVLW       2
0x9212	0x6FC3      	MOVWF       FARG_string_cmpn_bytes, 1
0x9214	0xF035EC99  	CALL        _string_cmpn, 0
0x9218	0x5200      	MOVF        R0, 1 
0x921A	0x0E01      	MOVLW       1
0x921C	0xA4D8      	BTFSS       STATUS, 2 
0x921E	0x0E00      	MOVLW       0
0x9220	0x6E01      	MOVWF       R1 
0x9222	0x5001      	MOVF        R1, 0 
0x9224	0x13BE      	IORWF       expendedora_checkTarjeta_isOtherToday_L0, 1, 1
;Expendedora.c,963 :: 		if(estatus == '1' && seconds < TOLERANCIA_OUT && !isOtherToday){
0x9226	0x51A3      	MOVF        expendedora_checkTarjeta_estatus_L0, 0, 1
0x9228	0x0A31      	XORLW       49
0x922A	0xE146      	BNZ         L_expendedora_checkTarjeta750
0x922C	0x0E80      	MOVLW       128
0x922E	0x19B0      	XORWF       expendedora_checkTarjeta_seconds_L0+3, 0, 1
0x9230	0x6E00      	MOVWF       R0 
0x9232	0x0E80      	MOVLW       128
0x9234	0x5C00      	SUBWF       R0, 0 
0x9236	0xE108      	BNZ         L__expendedora_checkTarjeta1377
0x9238	0x0E00      	MOVLW       0
0x923A	0x5DAF      	SUBWF       expendedora_checkTarjeta_seconds_L0+2, 0, 1
0x923C	0xE105      	BNZ         L__expendedora_checkTarjeta1377
0x923E	0x0E03      	MOVLW       3
0x9240	0x5DAE      	SUBWF       expendedora_checkTarjeta_seconds_L0+1, 0, 1
0x9242	0xE102      	BNZ         L__expendedora_checkTarjeta1377
0x9244	0x0E8E      	MOVLW       142
0x9246	0x5DAD      	SUBWF       expendedora_checkTarjeta_seconds_L0, 0, 1
L__expendedora_checkTarjeta1377:
0x9248	0xE237      	BC          L_expendedora_checkTarjeta750
0x924A	0x53BE      	MOVF        expendedora_checkTarjeta_isOtherToday_L0, 1, 1
0x924C	0xE135      	BNZ         L_expendedora_checkTarjeta750
L__expendedora_checkTarjeta997:
;Expendedora.c,965 :: 		eSensor = 0;  //Reiniciar maquina de estados
0x924E	0x0102      	MOVLB       2
0x9250	0x6B96      	CLRF        _eSensor, 1
;Expendedora.c,966 :: 		abrirBarrera = true;
0x9252	0x0E01      	MOVLW       1
0x9254	0x6FC2      	MOVWF       _abrirBarrera, 1
;Expendedora.c,967 :: 		SALIDA_RELE1 = 1;
0x9256	0x8A80      	BSF         PORTA, 5 
;Expendedora.c,968 :: 		SALIDA_RELE2 = 1;
0x9258	0x8084      	BSF         PORTE, 0 
;Expendedora.c,969 :: 		timer1_reset();
0x925A	0xF00FECFC  	CALL        _timer1_reset, 0
;Expendedora.c,970 :: 		timer1_enable(true);
0x925E	0x0E01      	MOVLW       1
0x9260	0x0105      	MOVLB       5
0x9262	0x6F23      	MOVWF       FARG_timer1_enable_enable, 1
0x9264	0xF010EC57  	CALL        _timer1_enable, 0
;Expendedora.c,972 :: 		acceso[0] = TPV_ACCESO;    //Acceso
0x9268	0x0E41      	MOVLW       65
0x926A	0x0104      	MOVLB       4
0x926C	0x6FA4      	MOVWF       expendedora_checkTarjeta_acceso_L0, 1
;Expendedora.c,976 :: 		mysql_write_forced(tableKeyOutNip, keyOutEstatus, fila, "0", 1);
0x926E	0x0E39      	MOVLW       _tableKeyOutNip
0x9270	0x0105      	MOVLB       5
0x9272	0x6F31      	MOVWF       FARG_mysql_write_forced_name, 1
0x9274	0x0E00      	MOVLW       hi_addr(_tableKeyOutNip)
0x9276	0x6F32      	MOVWF       FARG_mysql_write_forced_name+1, 1
0x9278	0x0E40      	MOVLW       _keyOutEstatus
0x927A	0x6F33      	MOVWF       FARG_mysql_write_forced_column, 1
0x927C	0x0E00      	MOVLW       hi_addr(_keyOutEstatus)
0x927E	0x6F34      	MOVWF       FARG_mysql_write_forced_column+1, 1
0x9280	0xF535C2DC  	MOVFF       expendedora_checkTarjeta_fila_L0, FARG_mysql_write_forced_fila
0x9284	0xF536C2DD  	MOVFF       expendedora_checkTarjeta_fila_L0+1, FARG_mysql_write_forced_fila+1
0x9288	0x0EA6      	MOVLW       ?lstr19_Expendedora
0x928A	0x6F37      	MOVWF       FARG_mysql_write_forced_texto, 1
0x928C	0x0E00      	MOVLW       hi_addr(?lstr19_Expendedora)
0x928E	0x6F38      	MOVWF       FARG_mysql_write_forced_texto+1, 1
0x9290	0x0E01      	MOVLW       1
0x9292	0x6F39      	MOVWF       FARG_mysql_write_forced_bytes, 1
0x9294	0xF008ECA9  	CALL        _mysql_write_forced, 0
;Expendedora.c,977 :: 		lcd_clean_row(2);
0x9298	0x0E02      	MOVLW       2
0x929A	0x0105      	MOVLB       5
0x929C	0x6F23      	MOVWF       FARG_lcd_clean_row_fila, 1
0x929E	0xF015EC78  	CALL        _lcd_clean_row, 0
;Expendedora.c,978 :: 		lcd_out(2,1,"NIP aceptado");
0x92A2	0x0E02      	MOVLW       2
0x92A4	0x6F23      	MOVWF       FARG_lcd_out_fila, 1
0x92A6	0x0E01      	MOVLW       1
0x92A8	0x6F24      	MOVWF       FARG_lcd_out_col, 1
0x92AA	0x0EAD      	MOVLW       ?lstr20_Expendedora
0x92AC	0x6F25      	MOVWF       FARG_lcd_out_texto, 1
0x92AE	0x0E00      	MOVLW       hi_addr(?lstr20_Expendedora)
0x92B0	0x6F26      	MOVWF       FARG_lcd_out_texto+1, 1
0x92B2	0xF010EC01  	CALL        _lcd_out, 0
;Expendedora.c,984 :: 		}else if(estatus == '0'){
0x92B6	0xD03A      	BRA         L_expendedora_checkTarjeta751
L_expendedora_checkTarjeta750:
0x92B8	0x0104      	MOVLB       4
0x92BA	0x51A3      	MOVF        expendedora_checkTarjeta_estatus_L0, 0, 1
0x92BC	0x0A30      	XORLW       48
0x92BE	0xE112      	BNZ         L_expendedora_checkTarjeta752
;Expendedora.c,985 :: 		acceso[2] = TPV_PASSBACK;   //Llave ya utilizada
0x92C0	0x0E50      	MOVLW       80
0x92C2	0x6FA6      	MOVWF       expendedora_checkTarjeta_acceso_L0+2, 1
;Expendedora.c,986 :: 		lcd_clean_row(2);
0x92C4	0x0E02      	MOVLW       2
0x92C6	0x0105      	MOVLB       5
0x92C8	0x6F23      	MOVWF       FARG_lcd_clean_row_fila, 1
0x92CA	0xF015EC78  	CALL        _lcd_clean_row, 0
;Expendedora.c,987 :: 		lcd_out(2,1,"NIP desconocido*");
0x92CE	0x0E02      	MOVLW       2
0x92D0	0x6F23      	MOVWF       FARG_lcd_out_fila, 1
0x92D2	0x0E01      	MOVLW       1
0x92D4	0x6F24      	MOVWF       FARG_lcd_out_col, 1
0x92D6	0x0EC8      	MOVLW       ?lstr21_Expendedora
0x92D8	0x6F25      	MOVWF       FARG_lcd_out_texto, 1
0x92DA	0x0E00      	MOVLW       hi_addr(?lstr21_Expendedora)
0x92DC	0x6F26      	MOVWF       FARG_lcd_out_texto+1, 1
0x92DE	0xF010EC01  	CALL        _lcd_out, 0
;Expendedora.c,993 :: 		}else if(isOtherToday || seconds >= TOLERANCIA_OUT){
0x92E2	0xD024      	BRA         L_expendedora_checkTarjeta753
L_expendedora_checkTarjeta752:
0x92E4	0x0104      	MOVLB       4
0x92E6	0x53BE      	MOVF        expendedora_checkTarjeta_isOtherToday_L0, 1, 1
0x92E8	0xE110      	BNZ         L__expendedora_checkTarjeta996
0x92EA	0x0E80      	MOVLW       128
0x92EC	0x19B0      	XORWF       expendedora_checkTarjeta_seconds_L0+3, 0, 1
0x92EE	0x6E00      	MOVWF       R0 
0x92F0	0x0E80      	MOVLW       128
0x92F2	0x5C00      	SUBWF       R0, 0 
0x92F4	0xE108      	BNZ         L__expendedora_checkTarjeta1378
0x92F6	0x0E00      	MOVLW       0
0x92F8	0x5DAF      	SUBWF       expendedora_checkTarjeta_seconds_L0+2, 0, 1
0x92FA	0xE105      	BNZ         L__expendedora_checkTarjeta1378
0x92FC	0x0E03      	MOVLW       3
0x92FE	0x5DAE      	SUBWF       expendedora_checkTarjeta_seconds_L0+1, 0, 1
0x9300	0xE102      	BNZ         L__expendedora_checkTarjeta1378
0x9302	0x0E8E      	MOVLW       142
0x9304	0x5DAD      	SUBWF       expendedora_checkTarjeta_seconds_L0, 0, 1
L__expendedora_checkTarjeta1378:
0x9306	0xE201      	BC          L__expendedora_checkTarjeta996
0x9308	0xD011      	BRA         L_expendedora_checkTarjeta756
L__expendedora_checkTarjeta996:
;Expendedora.c,994 :: 		acceso[1] = TPV_OUT_TIME;  //FECHA EN FUERA DE RANGO
0x930A	0x0E54      	MOVLW       84
0x930C	0x6FA5      	MOVWF       expendedora_checkTarjeta_acceso_L0+1, 1
;Expendedora.c,995 :: 		lcd_clean_row(2);
0x930E	0x0E02      	MOVLW       2
0x9310	0x0105      	MOVLB       5
0x9312	0x6F23      	MOVWF       FARG_lcd_clean_row_fila, 1
0x9314	0xF015EC78  	CALL        _lcd_clean_row, 0
;Expendedora.c,996 :: 		lcd_out(2,1,"NIP invalido*");
0x9318	0x0E02      	MOVLW       2
0x931A	0x6F23      	MOVWF       FARG_lcd_out_fila, 1
0x931C	0x0E01      	MOVLW       1
0x931E	0x6F24      	MOVWF       FARG_lcd_out_col, 1
0x9320	0x0EBA      	MOVLW       ?lstr22_Expendedora
0x9322	0x6F25      	MOVWF       FARG_lcd_out_texto, 1
0x9324	0x0E00      	MOVLW       hi_addr(?lstr22_Expendedora)
0x9326	0x6F26      	MOVWF       FARG_lcd_out_texto+1, 1
0x9328	0xF010EC01  	CALL        _lcd_out, 0
;Expendedora.c,1000 :: 		}
L_expendedora_checkTarjeta756:
L_expendedora_checkTarjeta753:
L_expendedora_checkTarjeta751:
0x932C	0x0105      	MOVLB       5
;Expendedora.c,1002 :: 		string_add(canCommand, acceso);
0x932E	0x0E5C      	MOVLW       _canCommand
0x9330	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x9332	0x0E04      	MOVLW       hi_addr(_canCommand)
0x9334	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x9336	0x0EA4      	MOVLW       expendedora_checkTarjeta_acceso_L0
0x9338	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x933A	0x0E04      	MOVLW       hi_addr(expendedora_checkTarjeta_acceso_L0)
0x933C	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x933E	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,1003 :: 		}else{
0x9342	0xD01D      	BRA         L_expendedora_checkTarjeta757
L_expendedora_checkTarjeta747:
0x9344	0x0105      	MOVLB       5
;Expendedora.c,1004 :: 		lcd_clean_row(2);
0x9346	0x0E02      	MOVLW       2
0x9348	0x6F23      	MOVWF       FARG_lcd_clean_row_fila, 1
0x934A	0xF015EC78  	CALL        _lcd_clean_row, 0
;Expendedora.c,1005 :: 		lcd_out(2,1,"Nip descnocido");
0x934E	0x0E02      	MOVLW       2
0x9350	0x6F23      	MOVWF       FARG_lcd_out_fila, 1
0x9352	0x0E01      	MOVLW       1
0x9354	0x6F24      	MOVWF       FARG_lcd_out_col, 1
0x9356	0x0E97      	MOVLW       ?lstr23_Expendedora
0x9358	0x6F25      	MOVWF       FARG_lcd_out_texto, 1
0x935A	0x0E00      	MOVLW       hi_addr(?lstr23_Expendedora)
0x935C	0x6F26      	MOVWF       FARG_lcd_out_texto+1, 1
0x935E	0xF010EC01  	CALL        _lcd_out, 0
;Expendedora.c,1009 :: 		acceso[3] = TPV_DESCONOCIDO;
0x9362	0x0E44      	MOVLW       68
0x9364	0x0104      	MOVLB       4
0x9366	0x6FA7      	MOVWF       expendedora_checkTarjeta_acceso_L0+3, 1
;Expendedora.c,1010 :: 		string_add(canCommand,acceso);
0x9368	0x0E5C      	MOVLW       _canCommand
0x936A	0x0105      	MOVLB       5
0x936C	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x936E	0x0E04      	MOVLW       hi_addr(_canCommand)
0x9370	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x9372	0x0EA4      	MOVLW       expendedora_checkTarjeta_acceso_L0
0x9374	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x9376	0x0E04      	MOVLW       hi_addr(expendedora_checkTarjeta_acceso_L0)
0x9378	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x937A	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,1011 :: 		}
L_expendedora_checkTarjeta757:
L_expendedora_checkTarjeta746:
0x937E	0x0105      	MOVLB       5
;Expendedora.c,1013 :: 		string_addc(canCommand, CAN_MODULE);
0x9380	0x0E5C      	MOVLW       _canCommand
0x9382	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x9384	0x0E04      	MOVLW       hi_addr(_canCommand)
0x9386	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x9388	0x0E1E      	MOVLW       _CAN_MODULE
0x938A	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x938C	0x0EA4      	MOVLW       hi_addr(_CAN_MODULE)
0x938E	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x9390	0x0E00      	MOVLW       higher_addr(_CAN_MODULE)
0x9392	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x9394	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,1014 :: 		numToHex(canId, msjConst, 1);
0x9398	0xF523C2BF  	MOVFF       _canId, FARG_numToHex_valor
0x939C	0x0E00      	MOVLW       0
0x939E	0x6F24      	MOVWF       FARG_numToHex_valor+1, 1
0x93A0	0x6F25      	MOVWF       FARG_numToHex_valor+2, 1
0x93A2	0x6F26      	MOVWF       FARG_numToHex_valor+3, 1
0x93A4	0x0E05      	MOVLW       _msjConst
0x93A6	0x6F27      	MOVWF       FARG_numToHex_cadena, 1
0x93A8	0x0E03      	MOVLW       hi_addr(_msjConst)
0x93AA	0x6F28      	MOVWF       FARG_numToHex_cadena+1, 1
0x93AC	0x0E01      	MOVLW       1
0x93AE	0x6F29      	MOVWF       FARG_numToHex_bytes, 1
0x93B0	0xF016EC51  	CALL        _numToHex, 0
;Expendedora.c,1015 :: 		string_add(canCommand, msjConst);
0x93B4	0x0E5C      	MOVLW       _canCommand
0x93B6	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x93B8	0x0E04      	MOVLW       hi_addr(_canCommand)
0x93BA	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x93BC	0x0E05      	MOVLW       _msjConst
0x93BE	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x93C0	0x0E03      	MOVLW       hi_addr(_msjConst)
0x93C2	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x93C4	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,1016 :: 		buffer_save_send(false, canCommand);
0x93C8	0x6B23      	CLRF        FARG_buffer_save_send_guardar, 1
0x93CA	0x0E5C      	MOVLW       _canCommand
0x93CC	0x6F24      	MOVWF       FARG_buffer_save_send_buffer, 1
0x93CE	0x0E04      	MOVLW       hi_addr(_canCommand)
0x93D0	0x6F25      	MOVWF       FARG_buffer_save_send_buffer+1, 1
0x93D2	0xF014ECA9  	CALL        _buffer_save_send, 0
;Expendedora.c,1017 :: 		}
L_expendedora_checkTarjeta726:
L_expendedora_checkTarjeta725:
;Expendedora.c,1018 :: 		}
L_end_expendedora_checkTarjeta:
0x93D6	0x0012      	RETURN      0
; end of _expendedora_checkTarjeta
_expendedora_imprimir:
;Expendedora.c,1020 :: 		void expendedora_imprimir(){
;Expendedora.c,1027 :: 		if(SENSOR_COCHE && !btnCoche){
0x93D8	0xA083      	BTFSS       PORTD, 0 
0x93DA	0xD063      	BRA         L_expendedora_imprimir760
0x93DC	0x0102      	MOVLB       2
0x93DE	0x5306      	MOVF        expendedora_imprimir_btnCoche_L0, 1, 1
0x93E0	0xE160      	BNZ         L_expendedora_imprimir760
L__expendedora_imprimir1015:
;Expendedora.c,1028 :: 		btnCoche = true;
0x93E2	0x0E01      	MOVLW       1
0x93E4	0x6F06      	MOVWF       expendedora_imprimir_btnCoche_L0, 1
;Expendedora.c,1029 :: 		lcd_chr(1,20,'C');
0x93E6	0x0E01      	MOVLW       1
0x93E8	0x0105      	MOVLB       5
0x93EA	0x6F31      	MOVWF       FARG_lcd_chr_fila, 1
0x93EC	0x0E14      	MOVLW       20
0x93EE	0x6F32      	MOVWF       FARG_lcd_chr_col, 1
0x93F0	0x0E43      	MOVLW       67
0x93F2	0x6F33      	MOVWF       FARG_lcd_chr_c, 1
0x93F4	0xF00BEC09  	CALL        _lcd_chr, 0
;Expendedora.c,1031 :: 		string_cpyc(bufferEeprom, CAN_TPV);
0x93F8	0x0E15      	MOVLW       _bufferEeprom
0x93FA	0x6F23      	MOVWF       FARG_string_cpyc_destino, 1
0x93FC	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x93FE	0x6F24      	MOVWF       FARG_string_cpyc_destino+1, 1
0x9400	0x0EBC      	MOVLW       _CAN_TPV
0x9402	0x6F25      	MOVWF       FARG_string_cpyc_origen, 1
0x9404	0x0EA3      	MOVLW       hi_addr(_CAN_TPV)
0x9406	0x6F26      	MOVWF       FARG_string_cpyc_origen+1, 1
0x9408	0x0E00      	MOVLW       higher_addr(_CAN_TPV)
0x940A	0x6F27      	MOVWF       FARG_string_cpyc_origen+2, 1
0x940C	0xF014EC09  	CALL        _string_cpyc, 0
;Expendedora.c,1032 :: 		string_addc(bufferEeprom, CAN_COCHE_IN);
0x9410	0x0E15      	MOVLW       _bufferEeprom
0x9412	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x9414	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x9416	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x9418	0x0E8F      	MOVLW       _CAN_COCHE_IN
0x941A	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x941C	0x0EA3      	MOVLW       hi_addr(_CAN_COCHE_IN)
0x941E	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x9420	0x0E00      	MOVLW       higher_addr(_CAN_COCHE_IN)
0x9422	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x9424	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,1033 :: 		DS1307_read(&myRTC, false);
0x9428	0x0EFA      	MOVLW       _myRTC
0x942A	0x6F23      	MOVWF       FARG_DS1307_read_myDS, 1
0x942C	0x0E03      	MOVLW       hi_addr(_myRTC)
0x942E	0x6F24      	MOVWF       FARG_DS1307_read_myDS+1, 1
0x9430	0x6B25      	CLRF        FARG_DS1307_read_formatComplet, 1
0x9432	0xF011ECAD  	CALL        _DS1307_read, 0
;Expendedora.c,1034 :: 		string_add(bufferEeprom, &myRTC.time[1]);
0x9436	0x0E15      	MOVLW       _bufferEeprom
0x9438	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x943A	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x943C	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x943E	0x0E02      	MOVLW       _myRTC+8
0x9440	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x9442	0x0E04      	MOVLW       hi_addr(_myRTC+8)
0x9444	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x9446	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,1036 :: 		string_addc(bufferEeprom, CAN_MODULE);
0x944A	0x0E15      	MOVLW       _bufferEeprom
0x944C	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x944E	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x9450	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x9452	0x0E1E      	MOVLW       _CAN_MODULE
0x9454	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x9456	0x0EA4      	MOVLW       hi_addr(_CAN_MODULE)
0x9458	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x945A	0x0E00      	MOVLW       higher_addr(_CAN_MODULE)
0x945C	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x945E	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,1037 :: 		numToHex(canId, msjConst, 1);
0x9462	0xF523C2BF  	MOVFF       _canId, FARG_numToHex_valor
0x9466	0x0E00      	MOVLW       0
0x9468	0x6F24      	MOVWF       FARG_numToHex_valor+1, 1
0x946A	0x6F25      	MOVWF       FARG_numToHex_valor+2, 1
0x946C	0x6F26      	MOVWF       FARG_numToHex_valor+3, 1
0x946E	0x0E05      	MOVLW       _msjConst
0x9470	0x6F27      	MOVWF       FARG_numToHex_cadena, 1
0x9472	0x0E03      	MOVLW       hi_addr(_msjConst)
0x9474	0x6F28      	MOVWF       FARG_numToHex_cadena+1, 1
0x9476	0x0E01      	MOVLW       1
0x9478	0x6F29      	MOVWF       FARG_numToHex_bytes, 1
0x947A	0xF016EC51  	CALL        _numToHex, 0
;Expendedora.c,1038 :: 		string_add(bufferEeprom, msjConst);
0x947E	0x0E15      	MOVLW       _bufferEeprom
0x9480	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x9482	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x9484	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x9486	0x0E05      	MOVLW       _msjConst
0x9488	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x948A	0x0E03      	MOVLW       hi_addr(_msjConst)
0x948C	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x948E	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,1039 :: 		buffer_save_send(false, bufferEeprom);
0x9492	0x6B23      	CLRF        FARG_buffer_save_send_guardar, 1
0x9494	0x0E15      	MOVLW       _bufferEeprom
0x9496	0x6F24      	MOVWF       FARG_buffer_save_send_buffer, 1
0x9498	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x949A	0x6F25      	MOVWF       FARG_buffer_save_send_buffer+1, 1
0x949C	0xF014ECA9  	CALL        _buffer_save_send, 0
;Expendedora.c,1043 :: 		}else if(!SENSOR_COCHE && btnCoche){
0x94A0	0xD063      	BRA         L_expendedora_imprimir761
L_expendedora_imprimir760:
0x94A2	0xB083      	BTFSC       PORTD, 0 
0x94A4	0xD061      	BRA         L_expendedora_imprimir764
0x94A6	0x0102      	MOVLB       2
0x94A8	0x5306      	MOVF        expendedora_imprimir_btnCoche_L0, 1, 1
0x94AA	0xE05E      	BZ          L_expendedora_imprimir764
L__expendedora_imprimir1014:
;Expendedora.c,1044 :: 		btnCoche = false;
0x94AC	0x6B06      	CLRF        expendedora_imprimir_btnCoche_L0, 1
;Expendedora.c,1045 :: 		lcd_chr(1,20,' ');
0x94AE	0x0E01      	MOVLW       1
0x94B0	0x0105      	MOVLB       5
0x94B2	0x6F31      	MOVWF       FARG_lcd_chr_fila, 1
0x94B4	0x0E14      	MOVLW       20
0x94B6	0x6F32      	MOVWF       FARG_lcd_chr_col, 1
0x94B8	0x0E20      	MOVLW       32
0x94BA	0x6F33      	MOVWF       FARG_lcd_chr_c, 1
0x94BC	0xF00BEC09  	CALL        _lcd_chr, 0
;Expendedora.c,1047 :: 		string_cpyc(bufferEeprom, CAN_TPV);
0x94C0	0x0E15      	MOVLW       _bufferEeprom
0x94C2	0x6F23      	MOVWF       FARG_string_cpyc_destino, 1
0x94C4	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x94C6	0x6F24      	MOVWF       FARG_string_cpyc_destino+1, 1
0x94C8	0x0EBC      	MOVLW       _CAN_TPV
0x94CA	0x6F25      	MOVWF       FARG_string_cpyc_origen, 1
0x94CC	0x0EA3      	MOVLW       hi_addr(_CAN_TPV)
0x94CE	0x6F26      	MOVWF       FARG_string_cpyc_origen+1, 1
0x94D0	0x0E00      	MOVLW       higher_addr(_CAN_TPV)
0x94D2	0x6F27      	MOVWF       FARG_string_cpyc_origen+2, 1
0x94D4	0xF014EC09  	CALL        _string_cpyc, 0
;Expendedora.c,1048 :: 		string_addc(bufferEeprom, CAN_COCHE_OUT);
0x94D8	0x0E15      	MOVLW       _bufferEeprom
0x94DA	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x94DC	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x94DE	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x94E0	0x0E85      	MOVLW       _CAN_COCHE_OUT
0x94E2	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x94E4	0x0EA3      	MOVLW       hi_addr(_CAN_COCHE_OUT)
0x94E6	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x94E8	0x0E00      	MOVLW       higher_addr(_CAN_COCHE_OUT)
0x94EA	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x94EC	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,1049 :: 		DS1307_read(&myRTC, false);
0x94F0	0x0EFA      	MOVLW       _myRTC
0x94F2	0x6F23      	MOVWF       FARG_DS1307_read_myDS, 1
0x94F4	0x0E03      	MOVLW       hi_addr(_myRTC)
0x94F6	0x6F24      	MOVWF       FARG_DS1307_read_myDS+1, 1
0x94F8	0x6B25      	CLRF        FARG_DS1307_read_formatComplet, 1
0x94FA	0xF011ECAD  	CALL        _DS1307_read, 0
;Expendedora.c,1050 :: 		string_add(bufferEeprom, &myRTC.time[1]);
0x94FE	0x0E15      	MOVLW       _bufferEeprom
0x9500	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x9502	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x9504	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x9506	0x0E02      	MOVLW       _myRTC+8
0x9508	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x950A	0x0E04      	MOVLW       hi_addr(_myRTC+8)
0x950C	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x950E	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,1052 :: 		string_addc(bufferEeprom, CAN_MODULE);
0x9512	0x0E15      	MOVLW       _bufferEeprom
0x9514	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x9516	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x9518	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x951A	0x0E1E      	MOVLW       _CAN_MODULE
0x951C	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x951E	0x0EA4      	MOVLW       hi_addr(_CAN_MODULE)
0x9520	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x9522	0x0E00      	MOVLW       higher_addr(_CAN_MODULE)
0x9524	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x9526	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,1053 :: 		numToHex(canId, msjConst, 1);
0x952A	0xF523C2BF  	MOVFF       _canId, FARG_numToHex_valor
0x952E	0x0E00      	MOVLW       0
0x9530	0x6F24      	MOVWF       FARG_numToHex_valor+1, 1
0x9532	0x6F25      	MOVWF       FARG_numToHex_valor+2, 1
0x9534	0x6F26      	MOVWF       FARG_numToHex_valor+3, 1
0x9536	0x0E05      	MOVLW       _msjConst
0x9538	0x6F27      	MOVWF       FARG_numToHex_cadena, 1
0x953A	0x0E03      	MOVLW       hi_addr(_msjConst)
0x953C	0x6F28      	MOVWF       FARG_numToHex_cadena+1, 1
0x953E	0x0E01      	MOVLW       1
0x9540	0x6F29      	MOVWF       FARG_numToHex_bytes, 1
0x9542	0xF016EC51  	CALL        _numToHex, 0
;Expendedora.c,1054 :: 		string_add(bufferEeprom, msjConst);
0x9546	0x0E15      	MOVLW       _bufferEeprom
0x9548	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x954A	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x954C	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x954E	0x0E05      	MOVLW       _msjConst
0x9550	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x9552	0x0E03      	MOVLW       hi_addr(_msjConst)
0x9554	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x9556	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,1055 :: 		buffer_save_send(false, bufferEeprom);
0x955A	0x6B23      	CLRF        FARG_buffer_save_send_guardar, 1
0x955C	0x0E15      	MOVLW       _bufferEeprom
0x955E	0x6F24      	MOVWF       FARG_buffer_save_send_buffer, 1
0x9560	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x9562	0x6F25      	MOVWF       FARG_buffer_save_send_buffer+1, 1
0x9564	0xF014ECA9  	CALL        _buffer_save_send, 0
;Expendedora.c,1059 :: 		}
L_expendedora_imprimir764:
L_expendedora_imprimir761:
;Expendedora.c,1062 :: 		if(BOTON_IMPRIMIR){
0x9568	0xA283      	BTFSS       PORTD, 1 
0x956A	0xD0F9      	BRA         L_expendedora_imprimir765
;Expendedora.c,1063 :: 		if(!imprimir && SENSOR_COCHE){
0x956C	0x0102      	MOVLB       2
0x956E	0x5308      	MOVF        expendedora_imprimir_imprimir_L0, 1, 1
0x9570	0xA4D8      	BTFSS       STATUS, 2 
0x9572	0xD0F5      	BRA         L_expendedora_imprimir768
0x9574	0xA083      	BTFSS       PORTD, 0 
0x9576	0xD0F3      	BRA         L_expendedora_imprimir768
L__expendedora_imprimir1013:
;Expendedora.c,1064 :: 		limpiarLCD = true;
0x9578	0x0E01      	MOVLW       1
0x957A	0x6F78      	MOVWF       _limpiarLCD, 1
;Expendedora.c,1065 :: 		tempLCD = 0;
0x957C	0x6B77      	CLRF        _tempLCD, 1
;Expendedora.c,1067 :: 		if(cupoLleno){
0x957E	0x53FF      	MOVF        _cupoLleno, 1, 1
0x9580	0xE010      	BZ          L_expendedora_imprimir769
;Expendedora.c,1068 :: 		lcd_clean_row(1);
0x9582	0x0E01      	MOVLW       1
0x9584	0x0105      	MOVLB       5
0x9586	0x6F23      	MOVWF       FARG_lcd_clean_row_fila, 1
0x9588	0xF015EC78  	CALL        _lcd_clean_row, 0
;Expendedora.c,1069 :: 		lcd_out(3,1,"Cupo lleno");
0x958C	0x0E03      	MOVLW       3
0x958E	0x6F23      	MOVWF       FARG_lcd_out_fila, 1
0x9590	0x0E01      	MOVLW       1
0x9592	0x6F24      	MOVWF       FARG_lcd_out_col, 1
0x9594	0x0E6C      	MOVLW       ?lstr24_Expendedora
0x9596	0x6F25      	MOVWF       FARG_lcd_out_texto, 1
0x9598	0x0E02      	MOVLW       hi_addr(?lstr24_Expendedora)
0x959A	0x6F26      	MOVWF       FARG_lcd_out_texto+1, 1
0x959C	0xF010EC01  	CALL        _lcd_out, 0
;Expendedora.c,1073 :: 		return;
0x95A0	0xD181      	BRA         L_end_expendedora_imprimir
;Expendedora.c,1074 :: 		}
L_expendedora_imprimir769:
;Expendedora.c,1076 :: 		imprimir = 0x03;      //Imprimiendo y esperar seï¿½al en bajo
0x95A2	0x0E03      	MOVLW       3
0x95A4	0x0102      	MOVLB       2
0x95A6	0x6F08      	MOVWF       expendedora_imprimir_imprimir_L0, 1
;Expendedora.c,1077 :: 		lcd_clean_row(3);
0x95A8	0x0E03      	MOVLW       3
0x95AA	0x0105      	MOVLB       5
0x95AC	0x6F23      	MOVWF       FARG_lcd_clean_row_fila, 1
0x95AE	0xF015EC78  	CALL        _lcd_clean_row, 0
;Expendedora.c,1078 :: 		lcd_out(3,1,"Imprimendo...");
0x95B2	0x0E03      	MOVLW       3
0x95B4	0x6F23      	MOVWF       FARG_lcd_out_fila, 1
0x95B6	0x0E01      	MOVLW       1
0x95B8	0x6F24      	MOVWF       FARG_lcd_out_col, 1
0x95BA	0x0E79      	MOVLW       ?lstr25_Expendedora
0x95BC	0x6F25      	MOVWF       FARG_lcd_out_texto, 1
0x95BE	0x0E02      	MOVLW       hi_addr(?lstr25_Expendedora)
0x95C0	0x6F26      	MOVWF       FARG_lcd_out_texto+1, 1
0x95C2	0xF010EC01  	CALL        _lcd_out, 0
;Expendedora.c,1083 :: 		folio = clamp_shift(++folio, 1, 9999999); //FORMATO DE 7 DIGITOS
0x95C6	0x0E01      	MOVLW       1
0x95C8	0x0103      	MOVLB       3
0x95CA	0x2701      	ADDWF       _folio, 1, 1
0x95CC	0x0E00      	MOVLW       0
0x95CE	0x2302      	ADDWFC      _folio+1, 1, 1
0x95D0	0x2303      	ADDWFC      _folio+2, 1, 1
0x95D2	0x2304      	ADDWFC      _folio+3, 1, 1
0x95D4	0xF53BC301  	MOVFF       _folio, FARG_clamp_shift_valor
0x95D8	0xF53CC302  	MOVFF       _folio+1, FARG_clamp_shift_valor+1
0x95DC	0xF53DC303  	MOVFF       _folio+2, FARG_clamp_shift_valor+2
0x95E0	0xF53EC304  	MOVFF       _folio+3, FARG_clamp_shift_valor+3
0x95E4	0x0E01      	MOVLW       1
0x95E6	0x0105      	MOVLB       5
0x95E8	0x6F3F      	MOVWF       FARG_clamp_shift_min, 1
0x95EA	0x0E00      	MOVLW       0
0x95EC	0x6F40      	MOVWF       FARG_clamp_shift_min+1, 1
0x95EE	0x6F41      	MOVWF       FARG_clamp_shift_min+2, 1
0x95F0	0x6F42      	MOVWF       FARG_clamp_shift_min+3, 1
0x95F2	0x0E7F      	MOVLW       127
0x95F4	0x6F43      	MOVWF       FARG_clamp_shift_max, 1
0x95F6	0x0E96      	MOVLW       150
0x95F8	0x6F44      	MOVWF       FARG_clamp_shift_max+1, 1
0x95FA	0x0E98      	MOVLW       152
0x95FC	0x6F45      	MOVWF       FARG_clamp_shift_max+2, 1
0x95FE	0x0E00      	MOVLW       0
0x9600	0x6F46      	MOVWF       FARG_clamp_shift_max+3, 1
0x9602	0xF005ECD5  	CALL        _clamp_shift, 0
0x9606	0xF301C000  	MOVFF       R0, _folio
0x960A	0xF302C001  	MOVFF       R1, _folio+1
0x960E	0xF303C002  	MOVFF       R2, _folio+2
0x9612	0xF304C003  	MOVFF       R3, _folio+3
;Expendedora.c,1084 :: 		numToString(folio, ticketFolio, 7);
0x9616	0xF53BC000  	MOVFF       R0, FARG_numToString_valor
0x961A	0xF53CC001  	MOVFF       R1, FARG_numToString_valor+1
0x961E	0xF53DC002  	MOVFF       R2, FARG_numToString_valor+2
0x9622	0xF53EC003  	MOVFF       R3, FARG_numToString_valor+3
0x9626	0x0E14      	MOVLW       _ticketFolio
0x9628	0x6F3F      	MOVWF       FARG_numToString_cadena, 1
0x962A	0x0E01      	MOVLW       hi_addr(_ticketFolio)
0x962C	0x6F40      	MOVWF       FARG_numToString_cadena+1, 1
0x962E	0x0E07      	MOVLW       7
0x9630	0x6F41      	MOVWF       FARG_numToString_digitos, 1
0x9632	0xF005EC17  	CALL        _numToString, 0
;Expendedora.c,1085 :: 		DS1307_read(&myRTC, true);                //Obtiene la hora actual
0x9636	0x0EFA      	MOVLW       _myRTC
0x9638	0x0105      	MOVLB       5
0x963A	0x6F23      	MOVWF       FARG_DS1307_read_myDS, 1
0x963C	0x0E03      	MOVLW       hi_addr(_myRTC)
0x963E	0x6F24      	MOVWF       FARG_DS1307_read_myDS+1, 1
0x9640	0x0E01      	MOVLW       1
0x9642	0x6F25      	MOVWF       FARG_DS1307_read_formatComplet, 1
0x9644	0xF011ECAD  	CALL        _DS1307_read, 0
;Expendedora.c,1086 :: 		string_cpy(ticketTime, &myRTC.time[2]);
0x9648	0x0E00      	MOVLW       _ticketTime
0x964A	0x0104      	MOVLB       4
0x964C	0x6FBF      	MOVWF       FARG_string_cpy_destino, 1
0x964E	0x0E01      	MOVLW       hi_addr(_ticketTime)
0x9650	0x6FC0      	MOVWF       FARG_string_cpy_destino+1, 1
0x9652	0x0E03      	MOVLW       _myRTC+9
0x9654	0x6FC1      	MOVWF       FARG_string_cpy_origen, 1
0x9656	0x0E04      	MOVLW       hi_addr(_myRTC+9)
0x9658	0x6FC2      	MOVWF       FARG_string_cpy_origen+1, 1
0x965A	0xF03CECEA  	CALL        _string_cpy, 0
;Expendedora.c,1088 :: 		DS1307_read(&myRTC, false);                //Obtiene la hora actual
0x965E	0x0EFA      	MOVLW       _myRTC
0x9660	0x0105      	MOVLB       5
0x9662	0x6F23      	MOVWF       FARG_DS1307_read_myDS, 1
0x9664	0x0E03      	MOVLW       hi_addr(_myRTC)
0x9666	0x6F24      	MOVWF       FARG_DS1307_read_myDS+1, 1
0x9668	0x6B25      	CLRF        FARG_DS1307_read_formatComplet, 1
0x966A	0xF011ECAD  	CALL        _DS1307_read, 0
;Expendedora.c,1089 :: 		string_cpy(ticketCodigo, &myRTC.time[1]);  //B:13, W-HH:MM:SS DD/MT/YY
0x966E	0x0E1F      	MOVLW       _ticketCodigo
0x9670	0x0104      	MOVLB       4
0x9672	0x6FBF      	MOVWF       FARG_string_cpy_destino, 1
0x9674	0x0E01      	MOVLW       hi_addr(_ticketCodigo)
0x9676	0x6FC0      	MOVWF       FARG_string_cpy_destino+1, 1
0x9678	0x0E02      	MOVLW       _myRTC+8
0x967A	0x6FC1      	MOVWF       FARG_string_cpy_origen, 1
0x967C	0x0E04      	MOVLW       hi_addr(_myRTC+8)
0x967E	0x6FC2      	MOVWF       FARG_string_cpy_origen+1, 1
0x9680	0xF03CECEA  	CALL        _string_cpy, 0
;Expendedora.c,1090 :: 		string_cpy(tiempoEvento, &myRTC.time[1]);
0x9684	0x0EE7      	MOVLW       expendedora_imprimir_tiempoEvento_L0
0x9686	0x6FBF      	MOVWF       FARG_string_cpy_destino, 1
0x9688	0x0E02      	MOVLW       hi_addr(expendedora_imprimir_tiempoEvento_L0)
0x968A	0x6FC0      	MOVWF       FARG_string_cpy_destino+1, 1
0x968C	0x0E02      	MOVLW       _myRTC+8
0x968E	0x6FC1      	MOVWF       FARG_string_cpy_origen, 1
0x9690	0x0E04      	MOVLW       hi_addr(_myRTC+8)
0x9692	0x6FC2      	MOVWF       FARG_string_cpy_origen+1, 1
0x9694	0xF03CECEA  	CALL        _string_cpy, 0
;Expendedora.c,1092 :: 		string_pop(ticketCodigo);
0x9698	0x0E1F      	MOVLW       _ticketCodigo
0x969A	0x6FBF      	MOVWF       FARG_string_pop_texto, 1
0x969C	0x0E01      	MOVLW       hi_addr(_ticketCodigo)
0x969E	0x6FC0      	MOVWF       FARG_string_pop_texto+1, 1
0x96A0	0xF038EC58  	CALL        _string_pop, 0
;Expendedora.c,1093 :: 		string_pop(ticketCodigo);
0x96A4	0x0E1F      	MOVLW       _ticketCodigo
0x96A6	0x6FBF      	MOVWF       FARG_string_pop_texto, 1
0x96A8	0x0E01      	MOVLW       hi_addr(_ticketCodigo)
0x96AA	0x6FC0      	MOVWF       FARG_string_pop_texto+1, 1
0x96AC	0xF038EC58  	CALL        _string_pop, 0
;Expendedora.c,1094 :: 		numToString(myRTC.year, msjConst, 3);
0x96B0	0xF53BC400  	MOVFF       _myRTC+6, FARG_numToString_valor
0x96B4	0x0E00      	MOVLW       0
0x96B6	0x0105      	MOVLB       5
0x96B8	0x6F3C      	MOVWF       FARG_numToString_valor+1, 1
0x96BA	0x6F3D      	MOVWF       FARG_numToString_valor+2, 1
0x96BC	0x6F3E      	MOVWF       FARG_numToString_valor+3, 1
0x96BE	0x0E05      	MOVLW       _msjConst
0x96C0	0x6F3F      	MOVWF       FARG_numToString_cadena, 1
0x96C2	0x0E03      	MOVLW       hi_addr(_msjConst)
0x96C4	0x6F40      	MOVWF       FARG_numToString_cadena+1, 1
0x96C6	0x0E03      	MOVLW       3
0x96C8	0x6F41      	MOVWF       FARG_numToString_digitos, 1
0x96CA	0xF005EC17  	CALL        _numToString, 0
;Expendedora.c,1095 :: 		string_add(ticketCodigo, msjConst);
0x96CE	0x0E1F      	MOVLW       _ticketCodigo
0x96D0	0x0105      	MOVLB       5
0x96D2	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x96D4	0x0E01      	MOVLW       hi_addr(_ticketCodigo)
0x96D6	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x96D8	0x0E05      	MOVLW       _msjConst
0x96DA	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x96DC	0x0E03      	MOVLW       hi_addr(_msjConst)
0x96DE	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x96E0	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,1096 :: 		string_push(ticketCodigo, '1');
0x96E4	0x0E1F      	MOVLW       _ticketCodigo
0x96E6	0x6F23      	MOVWF       FARG_string_push_texto, 1
0x96E8	0x0E01      	MOVLW       hi_addr(_ticketCodigo)
0x96EA	0x6F24      	MOVWF       FARG_string_push_texto+1, 1
0x96EC	0x0E31      	MOVLW       49
0x96EE	0x6F25      	MOVWF       FARG_string_push_caracter, 1
0x96F0	0xF013ECEA  	CALL        _string_push, 0
;Expendedora.c,1097 :: 		string_add(ticketCodigo, ticketFolio);     //B:7
0x96F4	0x0E1F      	MOVLW       _ticketCodigo
0x96F6	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x96F8	0x0E01      	MOVLW       hi_addr(_ticketCodigo)
0x96FA	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x96FC	0x0E14      	MOVLW       _ticketFolio
0x96FE	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x9700	0x0E01      	MOVLW       hi_addr(_ticketFolio)
0x9702	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x9704	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,1098 :: 		string_addc(ticketCodigo, convenio);
0x9708	0x0E1F      	MOVLW       _ticketCodigo
0x970A	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x970C	0x0E01      	MOVLW       hi_addr(_ticketCodigo)
0x970E	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x9710	0x0E18      	MOVLW       expendedora_imprimir_convenio_L0
0x9712	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x9714	0x0EA4      	MOVLW       hi_addr(expendedora_imprimir_convenio_L0)
0x9716	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x9718	0x0E00      	MOVLW       higher_addr(expendedora_imprimir_convenio_L0)
0x971A	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x971C	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,1103 :: 		encrypt_basic(ticketCodigo);
0x9720	0x0E1F      	MOVLW       _ticketCodigo
0x9722	0x0104      	MOVLB       4
0x9724	0x6FBF      	MOVWF       FARG_encrypt_basic_cadena, 1
0x9726	0x0E01      	MOVLW       hi_addr(_ticketCodigo)
0x9728	0x6FC0      	MOVWF       FARG_encrypt_basic_cadena+1, 1
0x972A	0xF039EC05  	CALL        _encrypt_basic, 0
;Expendedora.c,1106 :: 		mysql_write(tableFolio, folioTotal, 1, folio, false);
0x972E	0x0E9D      	MOVLW       _tableFolio
0x9730	0x0105      	MOVLB       5
0x9732	0x6F23      	MOVWF       FARG_mysql_write_name, 1
0x9734	0x0E02      	MOVLW       hi_addr(_tableFolio)
0x9736	0x6F24      	MOVWF       FARG_mysql_write_name+1, 1
0x9738	0x0E97      	MOVLW       _folioTotal
0x973A	0x6F25      	MOVWF       FARG_mysql_write_column, 1
0x973C	0x0E02      	MOVLW       hi_addr(_folioTotal)
0x973E	0x6F26      	MOVWF       FARG_mysql_write_column+1, 1
0x9740	0x0E01      	MOVLW       1
0x9742	0x6F27      	MOVWF       FARG_mysql_write_fila, 1
0x9744	0x0E00      	MOVLW       0
0x9746	0x6F28      	MOVWF       FARG_mysql_write_fila+1, 1
0x9748	0xF529C301  	MOVFF       _folio, FARG_mysql_write_value
0x974C	0xF52AC302  	MOVFF       _folio+1, FARG_mysql_write_value+1
0x9750	0xF52BC303  	MOVFF       _folio+2, FARG_mysql_write_value+2
0x9754	0xF52CC304  	MOVFF       _folio+3, FARG_mysql_write_value+3
0x9758	0x6B2D      	CLRF        FARG_mysql_write_endWrite, 1
0x975A	0xF012ECDC  	CALL        _mysql_write, 0
;Expendedora.c,1111 :: 		}
L_expendedora_imprimir768:
;Expendedora.c,1112 :: 		}
L_expendedora_imprimir765:
;Expendedora.c,1115 :: 		if(imprimir){
0x975E	0x0102      	MOVLB       2
0x9760	0x5308      	MOVF        expendedora_imprimir_imprimir_L0, 1, 1
0x9762	0xB4D8      	BTFSC       STATUS, 2 
0x9764	0xD09F      	BRA         L_expendedora_imprimir770
;Expendedora.c,1117 :: 		if(imprimir.B0){
0x9766	0xA108      	BTFSS       expendedora_imprimir_imprimir_L0, 0, 1
0x9768	0xD089      	BRA         L_expendedora_imprimir771
;Expendedora.c,1118 :: 		if(expendedora_ticket()){
0x976A	0xF037ECB4  	CALL        _expendedora_ticket, 0
0x976E	0x5200      	MOVF        R0, 1 
0x9770	0xB4D8      	BTFSC       STATUS, 2 
0x9772	0xD084      	BRA         L_expendedora_imprimir772
;Expendedora.c,1119 :: 		imprimir.B0 = false;
0x9774	0x9108      	BCF         expendedora_imprimir_imprimir_L0, 0, 1
;Expendedora.c,1120 :: 		lcd_clean_row(3);
0x9776	0x0E03      	MOVLW       3
0x9778	0x0105      	MOVLB       5
0x977A	0x6F23      	MOVWF       FARG_lcd_clean_row_fila, 1
0x977C	0xF015EC78  	CALL        _lcd_clean_row, 0
;Expendedora.c,1121 :: 		lcd_out(3, 4, "Tome su boleto");
0x9780	0x0E03      	MOVLW       3
0x9782	0x6F23      	MOVWF       FARG_lcd_out_fila, 1
0x9784	0x0E04      	MOVLW       4
0x9786	0x6F24      	MOVWF       FARG_lcd_out_col, 1
0x9788	0x0E87      	MOVLW       ?lstr26_Expendedora
0x978A	0x6F25      	MOVWF       FARG_lcd_out_texto, 1
0x978C	0x0E02      	MOVLW       hi_addr(?lstr26_Expendedora)
0x978E	0x6F26      	MOVWF       FARG_lcd_out_texto+1, 1
0x9790	0xF010EC01  	CALL        _lcd_out, 0
;Expendedora.c,1126 :: 		eSensor = 0;  //Reiniciar maquina de estados
0x9794	0x0102      	MOVLB       2
0x9796	0x6B96      	CLRF        _eSensor, 1
;Expendedora.c,1127 :: 		abrirBarrera = true;
0x9798	0x0E01      	MOVLW       1
0x979A	0x6FC2      	MOVWF       _abrirBarrera, 1
;Expendedora.c,1128 :: 		SALIDA_RELE1 = 1;
0x979C	0x8A80      	BSF         PORTA, 5 
;Expendedora.c,1129 :: 		SALIDA_RELE2 = 1;
0x979E	0x8084      	BSF         PORTE, 0 
;Expendedora.c,1130 :: 		timer1_reset();
0x97A0	0xF00FECFC  	CALL        _timer1_reset, 0
;Expendedora.c,1131 :: 		timer1_enable(true);
0x97A4	0x0E01      	MOVLW       1
0x97A6	0x0105      	MOVLB       5
0x97A8	0x6F23      	MOVWF       FARG_timer1_enable_enable, 1
0x97AA	0xF010EC57  	CALL        _timer1_enable, 0
;Expendedora.c,1133 :: 		string_cpyc(canCommand, CAN_TPV);      //TPV
0x97AE	0x0E5C      	MOVLW       _canCommand
0x97B0	0x6F23      	MOVWF       FARG_string_cpyc_destino, 1
0x97B2	0x0E04      	MOVLW       hi_addr(_canCommand)
0x97B4	0x6F24      	MOVWF       FARG_string_cpyc_destino+1, 1
0x97B6	0x0EBC      	MOVLW       _CAN_TPV
0x97B8	0x6F25      	MOVWF       FARG_string_cpyc_origen, 1
0x97BA	0x0EA3      	MOVLW       hi_addr(_CAN_TPV)
0x97BC	0x6F26      	MOVWF       FARG_string_cpyc_origen+1, 1
0x97BE	0x0E00      	MOVLW       higher_addr(_CAN_TPV)
0x97C0	0x6F27      	MOVWF       FARG_string_cpyc_origen+2, 1
0x97C2	0xF014EC09  	CALL        _string_cpyc, 0
;Expendedora.c,1134 :: 		string_addc(canCommand, CAN_FOL);      //FOL
0x97C6	0x0E5C      	MOVLW       _canCommand
0x97C8	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x97CA	0x0E04      	MOVLW       hi_addr(_canCommand)
0x97CC	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x97CE	0x0EEC      	MOVLW       _CAN_FOL
0x97D0	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x97D2	0x0EA3      	MOVLW       hi_addr(_CAN_FOL)
0x97D4	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x97D6	0x0E00      	MOVLW       higher_addr(_CAN_FOL)
0x97D8	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x97DA	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,1135 :: 		numToHex(folio, ticketFolio, 4);
0x97DE	0xF523C301  	MOVFF       _folio, FARG_numToHex_valor
0x97E2	0xF524C302  	MOVFF       _folio+1, FARG_numToHex_valor+1
0x97E6	0xF525C303  	MOVFF       _folio+2, FARG_numToHex_valor+2
0x97EA	0xF526C304  	MOVFF       _folio+3, FARG_numToHex_valor+3
0x97EE	0x0E14      	MOVLW       _ticketFolio
0x97F0	0x6F27      	MOVWF       FARG_numToHex_cadena, 1
0x97F2	0x0E01      	MOVLW       hi_addr(_ticketFolio)
0x97F4	0x6F28      	MOVWF       FARG_numToHex_cadena+1, 1
0x97F6	0x0E04      	MOVLW       4
0x97F8	0x6F29      	MOVWF       FARG_numToHex_bytes, 1
0x97FA	0xF016EC51  	CALL        _numToHex, 0
;Expendedora.c,1136 :: 		string_add(canCommand, ticketFolio);   //FOL + FOL(HEX)
0x97FE	0x0E5C      	MOVLW       _canCommand
0x9800	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x9802	0x0E04      	MOVLW       hi_addr(_canCommand)
0x9804	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x9806	0x0E14      	MOVLW       _ticketFolio
0x9808	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x980A	0x0E01      	MOVLW       hi_addr(_ticketFolio)
0x980C	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x980E	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,1139 :: 		string_add(canCommand, tiempoEvento);
0x9812	0x0E5C      	MOVLW       _canCommand
0x9814	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x9816	0x0E04      	MOVLW       hi_addr(_canCommand)
0x9818	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x981A	0x0EE7      	MOVLW       expendedora_imprimir_tiempoEvento_L0
0x981C	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x981E	0x0E02      	MOVLW       hi_addr(expendedora_imprimir_tiempoEvento_L0)
0x9820	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x9822	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,1140 :: 		string_addc(canCommand, CAN_MODULE);   //FOL + FOL(HEX) + DATE + E
0x9826	0x0E5C      	MOVLW       _canCommand
0x9828	0x6F23      	MOVWF       FARG_string_addc_destino, 1
0x982A	0x0E04      	MOVLW       hi_addr(_canCommand)
0x982C	0x6F24      	MOVWF       FARG_string_addc_destino+1, 1
0x982E	0x0E1E      	MOVLW       _CAN_MODULE
0x9830	0x6F25      	MOVWF       FARG_string_addc_addEnd, 1
0x9832	0x0EA4      	MOVLW       hi_addr(_CAN_MODULE)
0x9834	0x6F26      	MOVWF       FARG_string_addc_addEnd+1, 1
0x9836	0x0E00      	MOVLW       higher_addr(_CAN_MODULE)
0x9838	0x6F27      	MOVWF       FARG_string_addc_addEnd+2, 1
0x983A	0xF015EC0C  	CALL        _string_addc, 0
;Expendedora.c,1141 :: 		numToHex(canId, msjConst, 1);          //CONVIERTE EL NODO EN NUM
0x983E	0xF523C2BF  	MOVFF       _canId, FARG_numToHex_valor
0x9842	0x0E00      	MOVLW       0
0x9844	0x6F24      	MOVWF       FARG_numToHex_valor+1, 1
0x9846	0x6F25      	MOVWF       FARG_numToHex_valor+2, 1
0x9848	0x6F26      	MOVWF       FARG_numToHex_valor+3, 1
0x984A	0x0E05      	MOVLW       _msjConst
0x984C	0x6F27      	MOVWF       FARG_numToHex_cadena, 1
0x984E	0x0E03      	MOVLW       hi_addr(_msjConst)
0x9850	0x6F28      	MOVWF       FARG_numToHex_cadena+1, 1
0x9852	0x0E01      	MOVLW       1
0x9854	0x6F29      	MOVWF       FARG_numToHex_bytes, 1
0x9856	0xF016EC51  	CALL        _numToHex, 0
;Expendedora.c,1142 :: 		string_add(canCommand, msjConst);      //FOL + FOL(HEX) + DATE + E + ID(HEX)
0x985A	0x0E5C      	MOVLW       _canCommand
0x985C	0x6F23      	MOVWF       FARG_string_add_destino, 1
0x985E	0x0E04      	MOVLW       hi_addr(_canCommand)
0x9860	0x6F24      	MOVWF       FARG_string_add_destino+1, 1
0x9862	0x0E05      	MOVLW       _msjConst
0x9864	0x6F25      	MOVWF       FARG_string_add_addEnd, 1
0x9866	0x0E03      	MOVLW       hi_addr(_msjConst)
0x9868	0x6F26      	MOVWF       FARG_string_add_addEnd+1, 1
0x986A	0xF015EC48  	CALL        _string_add, 0
;Expendedora.c,1144 :: 		buffer_save_send(false, canCommand);
0x986E	0x6B23      	CLRF        FARG_buffer_save_send_guardar, 1
0x9870	0x0E5C      	MOVLW       _canCommand
0x9872	0x6F24      	MOVWF       FARG_buffer_save_send_buffer, 1
0x9874	0x0E04      	MOVLW       hi_addr(_canCommand)
0x9876	0x6F25      	MOVWF       FARG_buffer_save_send_buffer+1, 1
0x9878	0xF014ECA9  	CALL        _buffer_save_send, 0
;Expendedora.c,1145 :: 		}
L_expendedora_imprimir772:
;Expendedora.c,1146 :: 		}
L_expendedora_imprimir771:
;Expendedora.c,1148 :: 		if(imprimir.B1){
0x987C	0x0102      	MOVLB       2
0x987E	0xA308      	BTFSS       expendedora_imprimir_imprimir_L0, 1, 1
0x9880	0xD011      	BRA         L_expendedora_imprimir773
;Expendedora.c,1149 :: 		if(!SENSOR_COCHE){
0x9882	0xB083      	BTFSC       PORTD, 0 
0x9884	0xD00F      	BRA         L_expendedora_imprimir774
;Expendedora.c,1150 :: 		imprimir.B1 = false;
0x9886	0x9308      	BCF         expendedora_imprimir_imprimir_L0, 1, 1
;Expendedora.c,1151 :: 		delay_ms(50);        //Posible delay por los sensores
0x9888	0x0E03      	MOVLW       3
0x988A	0x6E0B      	MOVWF       R11, 0
0x988C	0x0E8A      	MOVLW       138
0x988E	0x6E0C      	MOVWF       R12, 0
0x9890	0x0E55      	MOVLW       85
0x9892	0x6E0D      	MOVWF       R13, 0
L_expendedora_imprimir775:
0x9894	0x2E0D      	DECFSZ      R13, 1, 0
0x9896	0xD7FE      	BRA         L_expendedora_imprimir775
0x9898	0x2E0C      	DECFSZ      R12, 1, 0
0x989A	0xD7FC      	BRA         L_expendedora_imprimir775
0x989C	0x2E0B      	DECFSZ      R11, 1, 0
0x989E	0xD7FA      	BRA         L_expendedora_imprimir775
0x98A0	0x0000      	NOP
0x98A2	0x0000      	NOP
;Expendedora.c,1152 :: 		}
L_expendedora_imprimir774:
;Expendedora.c,1153 :: 		}
L_expendedora_imprimir773:
;Expendedora.c,1154 :: 		}
L_expendedora_imprimir770:
;Expendedora.c,1155 :: 		}
L_end_expendedora_imprimir:
0x98A4	0x0012      	RETURN      0
; end of _expendedora_imprimir
_can_do_work:
;lib_can.h,808 :: 		void can_do_work(){
;lib_can.h,809 :: 		can_do_read_message();
0x98A6	0xF03EEC2A  	CALL        _can_do_read_message, 0
;lib_can.h,810 :: 		can_do_write_message();
0x98AA	0xF03BEC26  	CALL        _can_do_write_message, 0
;lib_can.h,811 :: 		can_desonexion();
0x98AE	0xF03AEC8D  	CALL        _can_desonexion, 0
;lib_can.h,812 :: 		}
L_end_can_do_work:
0x98B2	0x0012      	RETURN      0
; end of _can_do_work
_expendedora_bufferEventos:
;Expendedora.c,1197 :: 		void expendedora_bufferEventos(){
;Expendedora.c,1202 :: 		if(!pilaBufferCAN || !can.conected)
0x98B4	0x0103      	MOVLB       3
0x98B6	0x51F8      	MOVF        _pilaBufferCAN, 0, 1
0x98B8	0x11F9      	IORWF       _pilaBufferCAN+1, 0, 1
0x98BA	0xE003      	BZ          L__expendedora_bufferEventos1017
0x98BC	0x5356      	MOVF        _can+13, 1, 1
0x98BE	0xE001      	BZ          L__expendedora_bufferEventos1017
0x98C0	0xD001      	BRA         L_expendedora_bufferEventos782
L__expendedora_bufferEventos1017:
;Expendedora.c,1203 :: 		return;
0x98C2	0xD069      	BRA         L_end_expendedora_bufferEventos
L_expendedora_bufferEventos782:
;Expendedora.c,1206 :: 		if(!can.txQueu && !can.rxBusy && !modeBufferEventos){
0x98C4	0x536A      	MOVF        _can+33, 1, 1
0x98C6	0xE167      	BNZ         L_expendedora_bufferEventos785
0x98C8	0x53B3      	MOVF        _can+106, 1, 1
0x98CA	0xE165      	BNZ         L_expendedora_bufferEventos785
0x98CC	0x0102      	MOVLB       2
0x98CE	0x53D0      	MOVF        _modeBufferEventos, 1, 1
0x98D0	0xE162      	BNZ         L_expendedora_bufferEventos785
L__expendedora_bufferEventos1016:
;Expendedora.c,1208 :: 		if(!mysql_read_forced(tableEventosCAN, eventosEstatus, pilaBufferPointer, &estatus)){
0x98D2	0x0EB4      	MOVLW       _tableEventosCAN
0x98D4	0x0105      	MOVLB       5
0x98D6	0x6F31      	MOVWF       FARG_mysql_read_forced_name, 1
0x98D8	0x0E02      	MOVLW       hi_addr(_tableEventosCAN)
0x98DA	0x6F32      	MOVWF       FARG_mysql_read_forced_name+1, 1
0x98DC	0x0EAC      	MOVLW       _eventosEstatus
0x98DE	0x6F33      	MOVWF       FARG_mysql_read_forced_column, 1
0x98E0	0x0E02      	MOVLW       hi_addr(_eventosEstatus)
0x98E2	0x6F34      	MOVWF       FARG_mysql_read_forced_column+1, 1
0x98E4	0xF535C455  	MOVFF       _pilaBufferPointer, FARG_mysql_read_forced_fila
0x98E8	0xF536C456  	MOVFF       _pilaBufferPointer+1, FARG_mysql_read_forced_fila+1
0x98EC	0x0E9F      	MOVLW       expendedora_bufferEventos_estatus_L0
0x98EE	0x6F37      	MOVWF       FARG_mysql_read_forced_result, 1
0x98F0	0x0E04      	MOVLW       hi_addr(expendedora_bufferEventos_estatus_L0)
0x98F2	0x6F38      	MOVWF       FARG_mysql_read_forced_result+1, 1
0x98F4	0xF00AEC09  	CALL        _mysql_read_forced, 0
0x98F8	0x5200      	MOVF        R0, 1 
0x98FA	0xE12D      	BNZ         L_expendedora_bufferEventos786
;Expendedora.c,1218 :: 		if(estatus == '1'){  //Data no enviada
0x98FC	0x0104      	MOVLB       4
0x98FE	0x519F      	MOVF        expendedora_bufferEventos_estatus_L0, 0, 1
0x9900	0x0A31      	XORLW       49
0x9902	0xE129      	BNZ         L_expendedora_bufferEventos787
;Expendedora.c,1219 :: 		mysql_read_string(tableEventosCAN, eventosRegistro, pilaBufferPointer, bufferEeprom);
0x9904	0x0EB4      	MOVLW       _tableEventosCAN
0x9906	0x0105      	MOVLB       5
0x9908	0x6F23      	MOVWF       FARG_mysql_read_string_name, 1
0x990A	0x0E02      	MOVLW       hi_addr(_tableEventosCAN)
0x990C	0x6F24      	MOVWF       FARG_mysql_read_string_name+1, 1
0x990E	0x0EA3      	MOVLW       _eventosRegistro
0x9910	0x6F25      	MOVWF       FARG_mysql_read_string_column, 1
0x9912	0x0E02      	MOVLW       hi_addr(_eventosRegistro)
0x9914	0x6F26      	MOVWF       FARG_mysql_read_string_column+1, 1
0x9916	0xF527C455  	MOVFF       _pilaBufferPointer, FARG_mysql_read_string_fila
0x991A	0xF528C456  	MOVFF       _pilaBufferPointer+1, FARG_mysql_read_string_fila+1
0x991E	0x0E15      	MOVLW       _bufferEeprom
0x9920	0x6F29      	MOVWF       FARG_mysql_read_string_result, 1
0x9922	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x9924	0x6F2A      	MOVWF       FARG_mysql_read_string_result+1, 1
0x9926	0xF014EC60  	CALL        _mysql_read_string, 0
;Expendedora.c,1221 :: 		if(can_write_text(can.ip+canIdTPV, bufferEeprom, 0)){
0x992A	0xF531C349  	MOVFF       _can, FARG_can_write_text_ipAddress
0x992E	0xF532C34A  	MOVFF       _can+1, FARG_can_write_text_ipAddress+1
0x9932	0xF533C34B  	MOVFF       _can+2, FARG_can_write_text_ipAddress+2
0x9936	0xF534C34C  	MOVFF       _can+3, FARG_can_write_text_ipAddress+3
0x993A	0x0E15      	MOVLW       _bufferEeprom
0x993C	0x0105      	MOVLB       5
0x993E	0x6F35      	MOVWF       FARG_can_write_text_texto, 1
0x9940	0x0E04      	MOVLW       hi_addr(_bufferEeprom)
0x9942	0x6F36      	MOVWF       FARG_can_write_text_texto+1, 1
0x9944	0x6B37      	CLRF        FARG_can_write_text_priority, 1
0x9946	0xF008EC6A  	CALL        _can_write_text, 0
0x994A	0x5200      	MOVF        R0, 1 
0x994C	0xE003      	BZ          L_expendedora_bufferEventos788
;Expendedora.c,1222 :: 		modeBufferEventos = true;
0x994E	0x0E01      	MOVLW       1
0x9950	0x0102      	MOVLB       2
0x9952	0x6FD0      	MOVWF       _modeBufferEventos, 1
;Expendedora.c,1223 :: 		}
L_expendedora_bufferEventos788:
;Expendedora.c,1232 :: 		return;
0x9954	0xD020      	BRA         L_end_expendedora_bufferEventos
;Expendedora.c,1233 :: 		}
L_expendedora_bufferEventos787:
;Expendedora.c,1234 :: 		}
L_expendedora_bufferEventos786:
;Expendedora.c,1236 :: 		pilaBufferPointer = clamp_shift(++pilaBufferPointer, 1, myTable.row);
0x9956	0x0104      	MOVLB       4
0x9958	0x4B55      	INFSNZ      _pilaBufferPointer, 1, 1
0x995A	0x2B56      	INCF        _pilaBufferPointer+1, 1, 1
0x995C	0xF53BC455  	MOVFF       _pilaBufferPointer, FARG_clamp_shift_valor
0x9960	0xF53CC456  	MOVFF       _pilaBufferPointer+1, FARG_clamp_shift_valor+1
0x9964	0x0E00      	MOVLW       0
0x9966	0xBF56      	BTFSC       _pilaBufferPointer+1, 7, 1
0x9968	0x0EFF      	MOVLW       255
0x996A	0x0105      	MOVLB       5
0x996C	0x6F3D      	MOVWF       FARG_clamp_shift_valor+2, 1
0x996E	0x6F3E      	MOVWF       FARG_clamp_shift_valor+3, 1
0x9970	0x0E01      	MOVLW       1
0x9972	0x6F3F      	MOVWF       FARG_clamp_shift_min, 1
0x9974	0x0E00      	MOVLW       0
0x9976	0x6F40      	MOVWF       FARG_clamp_shift_min+1, 1
0x9978	0x6F41      	MOVWF       FARG_clamp_shift_min+2, 1
0x997A	0x6F42      	MOVWF       FARG_clamp_shift_min+3, 1
0x997C	0xF543C31B  	MOVFF       Expendedora_myTable+2, FARG_clamp_shift_max
0x9980	0xF544C31C  	MOVFF       Expendedora_myTable+3, FARG_clamp_shift_max+1
0x9984	0x0E00      	MOVLW       0
0x9986	0x6F45      	MOVWF       FARG_clamp_shift_max+2, 1
0x9988	0x6F46      	MOVWF       FARG_clamp_shift_max+3, 1
0x998A	0xF005ECD5  	CALL        _clamp_shift, 0
0x998E	0xF455C000  	MOVFF       R0, _pilaBufferPointer
0x9992	0xF456C001  	MOVFF       R1, _pilaBufferPointer+1
;Expendedora.c,1237 :: 		}
L_expendedora_bufferEventos785:
;Expendedora.c,1238 :: 		}
L_end_expendedora_bufferEventos:
0x9996	0x0012      	RETURN      0
; end of _expendedora_bufferEventos
_pic_init:
;Expendedora.c,282 :: 		void pic_init(){
;Expendedora.c,284 :: 		OSCCON = 0x40;  //Oscilador externo
0x9998	0x0E40      	MOVLW       64
0x999A	0x6ED3      	MOVWF       OSCCON 
;Expendedora.c,287 :: 		ADCON1 = 0x0F;  //Todos digitales
0x999C	0x0E0F      	MOVLW       15
0x999E	0x6EC1      	MOVWF       ADCON1 
;Expendedora.c,288 :: 		CMCON = 0x07;   //Apagar los comparadores
0x99A0	0x0E07      	MOVLW       7
0x99A2	0x6EB4      	MOVWF       CMCON 
;Expendedora.c,291 :: 		SENSOR_COCHED = 1;
0x99A4	0x8095      	BSF         TRISD, 0 
;Expendedora.c,292 :: 		BOTON_IMPRIMIRD = 1;
0x99A6	0x8295      	BSF         TRISD, 1 
;Expendedora.c,293 :: 		BOTON_ENTRADA1D = 1;
0x99A8	0x8895      	BSF         TRISD, 4 
;Expendedora.c,294 :: 		LED_LINKD = 0;
0x99AA	0x9494      	BCF         TRISC, 2 
;Expendedora.c,295 :: 		SALIDA_RELE1D = 0;
0x99AC	0x9A92      	BCF         TRISA, 5 
;Expendedora.c,296 :: 		SALIDA_RELE2D = 0;
0x99AE	0x9096      	BCF         TRISE, 0 
;Expendedora.c,297 :: 		SALIDA_RELE3D = 0;
0x99B0	0x9495      	BCF         TRISD, 2 
;Expendedora.c,298 :: 		SALIDA_RELE4D = 0;
0x99B2	0x9695      	BCF         TRISD, 3 
;Expendedora.c,299 :: 		SALIDA_RELE5D = 0;
0x99B4	0x9E95      	BCF         TRISD, 7 
;Expendedora.c,301 :: 		SALIDA_RELE1 = 0;
0x99B6	0x9A80      	BCF         PORTA, 5 
;Expendedora.c,302 :: 		SALIDA_RELE2 = 0;
0x99B8	0x9084      	BCF         PORTE, 0 
;Expendedora.c,303 :: 		SALIDA_RELE3 = 0;
0x99BA	0x9483      	BCF         PORTD, 2 
;Expendedora.c,304 :: 		SALIDA_RELE4 = 0;
0x99BC	0x9683      	BCF         PORTD, 3 
;Expendedora.c,305 :: 		SALIDA_RELE5 = 0;
0x99BE	0x9E83      	BCF         PORTD, 7 
;Expendedora.c,306 :: 		LED_LINK = 0;
0x99C0	0x9482      	BCF         PORTC, 2 
;Expendedora.c,309 :: 		canId = eeprom_read(0);
0x99C2	0x0104      	MOVLB       4
0x99C4	0x6BBF      	CLRF        FARG_EEPROM_Read_address, 1
0x99C6	0x6BC0      	CLRF        FARG_EEPROM_Read_address+1, 1
0x99C8	0xF037EC46  	CALL        _EEPROM_Read, 0
0x99CC	0xF2BFC000  	MOVFF       R0, _canId
;Expendedora.c,312 :: 		timer1_open(50e3, true, false, false);
0x99D0	0x0E50      	MOVLW       80
0x99D2	0x6FBF      	MOVWF       FARG_timer1_open_time_us, 1
0x99D4	0x0EC3      	MOVLW       195
0x99D6	0x6FC0      	MOVWF       FARG_timer1_open_time_us+1, 1
0x99D8	0x0E00      	MOVLW       0
0x99DA	0x6FC1      	MOVWF       FARG_timer1_open_time_us+2, 1
0x99DC	0x6FC2      	MOVWF       FARG_timer1_open_time_us+3, 1
0x99DE	0x0E01      	MOVLW       1
0x99E0	0x6FC3      	MOVWF       FARG_timer1_open_powerOn, 1
0x99E2	0x6BC4      	CLRF        FARG_timer1_open_enable, 1
0x99E4	0x6BC5      	CLRF        FARG_timer1_open_priorityHigh, 1
0x99E6	0xF035ECB4  	CALL        _timer1_open, 0
;Expendedora.c,313 :: 		timer3_open(50e3, true, true, false);
0x99EA	0x0E50      	MOVLW       80
0x99EC	0x6FBF      	MOVWF       FARG_timer3_open_time_us, 1
0x99EE	0x0EC3      	MOVLW       195
0x99F0	0x6FC0      	MOVWF       FARG_timer3_open_time_us+1, 1
0x99F2	0x0E00      	MOVLW       0
0x99F4	0x6FC1      	MOVWF       FARG_timer3_open_time_us+2, 1
0x99F6	0x6FC2      	MOVWF       FARG_timer3_open_time_us+3, 1
0x99F8	0x0E01      	MOVLW       1
0x99FA	0x6FC3      	MOVWF       FARG_timer3_open_powerOn, 1
0x99FC	0x0E01      	MOVLW       1
0x99FE	0x6FC4      	MOVWF       FARG_timer3_open_enable, 1
0x9A00	0x6BC5      	CLRF        FARG_timer3_open_priorityHigh, 1
0x9A02	0xF036ECB5  	CALL        _timer3_open, 0
;Expendedora.c,314 :: 		usart_open(baudiosRate);
0x9A06	0x0E80      	MOVLW       128
0x9A08	0x6FBF      	MOVWF       FARG_usart_open_baudRate, 1
0x9A0A	0x0E25      	MOVLW       37
0x9A0C	0x6FC0      	MOVWF       FARG_usart_open_baudRate+1, 1
0x9A0E	0x0E00      	MOVLW       0
0x9A10	0x6FC1      	MOVWF       FARG_usart_open_baudRate+2, 1
0x9A12	0x0E00      	MOVLW       0
0x9A14	0x6FC2      	MOVWF       FARG_usart_open_baudRate+3, 1
0x9A16	0xF036EC51  	CALL        _usart_open, 0
;Expendedora.c,318 :: 		DS1307_open();
0x9A1A	0xF037EC43  	CALL        _DS1307_open, 0
;Expendedora.c,319 :: 		lcd_init();
0x9A1E	0xF037EC50  	CALL        _lcd_init, 0
;Expendedora.c,320 :: 		lcd_cmd(_LCD_CURSOR_OFF);
0x9A22	0x0E0C      	MOVLW       12
0x9A24	0x0104      	MOVLB       4
0x9A26	0x6FBF      	MOVWF       FARG_lcd_cmd_comando, 1
0x9A28	0xF036EC41  	CALL        _lcd_cmd, 0
;Expendedora.c,321 :: 		lcd_cmd(_LCD_CLEAR);
0x9A2C	0x0E01      	MOVLW       1
0x9A2E	0x0104      	MOVLB       4
0x9A30	0x6FBF      	MOVWF       FARG_lcd_cmd_comando, 1
0x9A32	0xF036EC41  	CALL        _lcd_cmd, 0
;Expendedora.c,322 :: 		mysql_init(32768);
0x9A36	0x0E00      	MOVLW       0
0x9A38	0x0104      	MOVLB       4
0x9A3A	0x6FBF      	MOVWF       FARG_mysql_init_memoryMax, 1
0x9A3C	0x0E80      	MOVLW       128
0x9A3E	0x6FC0      	MOVWF       FARG_mysql_init_memoryMax+1, 1
0x9A40	0xF038ECDF  	CALL        _mysql_init, 0
;Expendedora.c,323 :: 		wiegand26_open();
0x9A44	0xF039ECC6  	CALL        _wiegand26_open, 0
;Expendedora.c,324 :: 		can_open(canIp, canMask, canId, 4);
0x9A48	0xF4BFC20B  	MOVFF       _canIp, FARG_can_open_ip
0x9A4C	0xF4C0C20C  	MOVFF       _canIp+1, FARG_can_open_ip+1
0x9A50	0xF4C1C20D  	MOVFF       _canIp+2, FARG_can_open_ip+2
0x9A54	0xF4C2C20E  	MOVFF       _canIp+3, FARG_can_open_ip+3
0x9A58	0xF4C3C220  	MOVFF       _canMask, FARG_can_open_mask
0x9A5C	0xF4C4C221  	MOVFF       _canMask+1, FARG_can_open_mask+1
0x9A60	0xF4C5C222  	MOVFF       _canMask+2, FARG_can_open_mask+2
0x9A64	0xF4C6C223  	MOVFF       _canMask+3, FARG_can_open_mask+3
0x9A68	0xF4C7C2BF  	MOVFF       _canId, FARG_can_open_id
0x9A6C	0x0E04      	MOVLW       4
0x9A6E	0x0104      	MOVLB       4
0x9A70	0x6FC8      	MOVWF       FARG_can_open_speed_us, 1
0x9A72	0xF03FEC58  	CALL        _can_open, 0
;Expendedora.c,325 :: 		can_interrupt(true, false);
0x9A76	0x0E01      	MOVLW       1
0x9A78	0x0104      	MOVLB       4
0x9A7A	0x6FBF      	MOVWF       FARG_can_interrupt_enable, 1
0x9A7C	0x6BC0      	CLRF        FARG_can_interrupt_hihgPriprity, 1
0x9A7E	0xF03EEC07  	CALL        _can_interrupt, 0
;Expendedora.c,328 :: 		lcd_clean_row(1);
0x9A82	0x0E01      	MOVLW       1
0x9A84	0x0105      	MOVLB       5
0x9A86	0x6F23      	MOVWF       FARG_lcd_clean_row_fila, 1
0x9A88	0xF015EC78  	CALL        _lcd_clean_row, 0
;Expendedora.c,329 :: 		lcd_out(1, 1, "Inicializando...");
0x9A8C	0x0E01      	MOVLW       1
0x9A8E	0x6F23      	MOVWF       FARG_lcd_out_fila, 1
0x9A90	0x0E01      	MOVLW       1
0x9A92	0x6F24      	MOVWF       FARG_lcd_out_col, 1
0x9A94	0x0E0F      	MOVLW       ?lstr1_Expendedora
0x9A96	0x6F25      	MOVWF       FARG_lcd_out_texto, 1
0x9A98	0x0E02      	MOVLW       hi_addr(?lstr1_Expendedora)
0x9A9A	0x6F26      	MOVWF       FARG_lcd_out_texto+1, 1
0x9A9C	0xF010EC01  	CALL        _lcd_out, 0
;Expendedora.c,333 :: 		wiegand26_enable();
0x9AA0	0xF03DEC0E  	CALL        _wiegand26_enable, 0
;Expendedora.c,334 :: 		DS1307_Read(&myRTC, true);
0x9AA4	0x0EFA      	MOVLW       _myRTC
0x9AA6	0x6F23      	MOVWF       FARG_DS1307_read_myDS, 1
0x9AA8	0x0E03      	MOVLW       hi_addr(_myRTC)
0x9AAA	0x6F24      	MOVWF       FARG_DS1307_read_myDS+1, 1
0x9AAC	0x0E01      	MOVLW       1
0x9AAE	0x6F25      	MOVWF       FARG_DS1307_read_formatComplet, 1
0x9AB0	0xF011ECAD  	CALL        _DS1307_read, 0
;Expendedora.c,336 :: 		pilaBufferCAN = mysql_count_forced(tableEventosCAN, eventosEstatus, '1');
0x9AB4	0x0EB4      	MOVLW       _tableEventosCAN
0x9AB6	0x0104      	MOVLB       4
0x9AB8	0x6FBF      	MOVWF       FARG_mysql_count_forced_tabla, 1
0x9ABA	0x0E02      	MOVLW       hi_addr(_tableEventosCAN)
0x9ABC	0x6FC0      	MOVWF       FARG_mysql_count_forced_tabla+1, 1
0x9ABE	0x0EAC      	MOVLW       _eventosEstatus
0x9AC0	0x6FC1      	MOVWF       FARG_mysql_count_forced_columna, 1
0x9AC2	0x0E02      	MOVLW       hi_addr(_eventosEstatus)
0x9AC4	0x6FC2      	MOVWF       FARG_mysql_count_forced_columna+1, 1
0x9AC6	0x0E31      	MOVLW       49
0x9AC8	0x6FC3      	MOVWF       FARG_mysql_count_forced_buscar, 1
0x9ACA	0x0E00      	MOVLW       0
0x9ACC	0x6FC4      	MOVWF       FARG_mysql_count_forced_buscar+1, 1
0x9ACE	0x6FC5      	MOVWF       FARG_mysql_count_forced_buscar+2, 1
0x9AD0	0x6FC6      	MOVWF       FARG_mysql_count_forced_buscar+3, 1
0x9AD2	0xF03FEC10  	CALL        _mysql_count_forced, 0
0x9AD6	0xF3F8C000  	MOVFF       R0, _pilaBufferCAN
0x9ADA	0xF3F9C001  	MOVFF       R1, _pilaBufferCAN+1
;Expendedora.c,343 :: 		mysql_read(tableFolio, folioTotal, 1, &folio);
0x9ADE	0x0E9D      	MOVLW       _tableFolio
0x9AE0	0x0105      	MOVLB       5
0x9AE2	0x6F31      	MOVWF       FARG_mysql_read_name, 1
0x9AE4	0x0E02      	MOVLW       hi_addr(_tableFolio)
0x9AE6	0x6F32      	MOVWF       FARG_mysql_read_name+1, 1
0x9AE8	0x0E97      	MOVLW       _folioTotal
0x9AEA	0x6F33      	MOVWF       FARG_mysql_read_column, 1
0x9AEC	0x0E02      	MOVLW       hi_addr(_folioTotal)
0x9AEE	0x6F34      	MOVWF       FARG_mysql_read_column+1, 1
0x9AF0	0x0E01      	MOVLW       1
0x9AF2	0x6F35      	MOVWF       FARG_mysql_read_fila, 1
0x9AF4	0x0E00      	MOVLW       0
0x9AF6	0x6F36      	MOVWF       FARG_mysql_read_fila+1, 1
0x9AF8	0x0E01      	MOVLW       _folio
0x9AFA	0x6F37      	MOVWF       FARG_mysql_read_result, 1
0x9AFC	0x0E03      	MOVLW       hi_addr(_folio)
0x9AFE	0x6F38      	MOVWF       FARG_mysql_read_result+1, 1
0x9B00	0xF00AECAA  	CALL        _mysql_read, 0
;Expendedora.c,344 :: 		mysql_read_string(tableCupo, columnaEstado, 1, &cupoLleno);
0x9B04	0x0E51      	MOVLW       _tableCupo
0x9B06	0x0105      	MOVLB       5
0x9B08	0x6F23      	MOVWF       FARG_mysql_read_string_name, 1
0x9B0A	0x0E02      	MOVLW       hi_addr(_tableCupo)
0x9B0C	0x6F24      	MOVWF       FARG_mysql_read_string_name+1, 1
0x9B0E	0x0E4A      	MOVLW       _columnaEstado
0x9B10	0x6F25      	MOVWF       FARG_mysql_read_string_column, 1
0x9B12	0x0E02      	MOVLW       hi_addr(_columnaEstado)
0x9B14	0x6F26      	MOVWF       FARG_mysql_read_string_column+1, 1
0x9B16	0x0E01      	MOVLW       1
0x9B18	0x6F27      	MOVWF       FARG_mysql_read_string_fila, 1
0x9B1A	0x0E00      	MOVLW       0
0x9B1C	0x6F28      	MOVWF       FARG_mysql_read_string_fila+1, 1
0x9B1E	0x0EFF      	MOVLW       _cupoLleno
0x9B20	0x6F29      	MOVWF       FARG_mysql_read_string_result, 1
0x9B22	0x0E02      	MOVLW       hi_addr(_cupoLleno)
0x9B24	0x6F2A      	MOVWF       FARG_mysql_read_string_result+1, 1
0x9B26	0xF014EC60  	CALL        _mysql_read_string, 0
;Expendedora.c,345 :: 		mysql_read_string(tableSyncronia, columnaEstado, 1, &canSynchrony);
0x9B2A	0x0E56      	MOVLW       _tableSyncronia
0x9B2C	0x0105      	MOVLB       5
0x9B2E	0x6F23      	MOVWF       FARG_mysql_read_string_name, 1
0x9B30	0x0E02      	MOVLW       hi_addr(_tableSyncronia)
0x9B32	0x6F24      	MOVWF       FARG_mysql_read_string_name+1, 1
0x9B34	0x0E4A      	MOVLW       _columnaEstado
0x9B36	0x6F25      	MOVWF       FARG_mysql_read_string_column, 1
0x9B38	0x0E02      	MOVLW       hi_addr(_columnaEstado)
0x9B3A	0x6F26      	MOVWF       FARG_mysql_read_string_column+1, 1
0x9B3C	0x0E01      	MOVLW       1
0x9B3E	0x6F27      	MOVWF       FARG_mysql_read_string_fila, 1
0x9B40	0x0E00      	MOVLW       0
0x9B42	0x6F28      	MOVWF       FARG_mysql_read_string_fila+1, 1
0x9B44	0x0EDB      	MOVLW       _canSynchrony
0x9B46	0x6F29      	MOVWF       FARG_mysql_read_string_result, 1
0x9B48	0x0E02      	MOVLW       hi_addr(_canSynchrony)
0x9B4A	0x6F2A      	MOVWF       FARG_mysql_read_string_result+1, 1
0x9B4C	0xF014EC60  	CALL        _mysql_read_string, 0
;Expendedora.c,348 :: 		RCON.IPEN = 1;     //ACTIVAR NIVELES DE INTERRUPCION
0x9B50	0x8ED0      	BSF         RCON, 7 
;Expendedora.c,349 :: 		INTCON.PEIE = 1;   //ACTIVAR INTERRUPCIONES PERIFERICAS
0x9B52	0x8CF2      	BSF         INTCON, 6 
;Expendedora.c,350 :: 		INTCON.GIE = 1;    //ACTIVAR INTERRUPCIONES GLOBALES
0x9B54	0x8EF2      	BSF         INTCON, 7 
;Expendedora.c,462 :: 		delay_ms(timeAwake);
0x9B56	0x0E10      	MOVLW       16
0x9B58	0x6E0B      	MOVWF       R11, 0
0x9B5A	0x0E39      	MOVLW       57
0x9B5C	0x6E0C      	MOVWF       R12, 0
0x9B5E	0x0E0D      	MOVLW       13
0x9B60	0x6E0D      	MOVWF       R13, 0
L_pic_init655:
0x9B62	0x2E0D      	DECFSZ      R13, 1, 0
0x9B64	0xD7FE      	BRA         L_pic_init655
0x9B66	0x2E0C      	DECFSZ      R12, 1, 0
0x9B68	0xD7FC      	BRA         L_pic_init655
0x9B6A	0x2E0B      	DECFSZ      R11, 1, 0
0x9B6C	0xD7FA      	BRA         L_pic_init655
0x9B6E	0x0000      	NOP
0x9B70	0x0000      	NOP
;Expendedora.c,466 :: 		lcd_clean_row(1);
0x9B72	0x0E01      	MOVLW       1
0x9B74	0x0105      	MOVLB       5
0x9B76	0x6F23      	MOVWF       FARG_lcd_clean_row_fila, 1
0x9B78	0xF015EC78  	CALL        _lcd_clean_row, 0
;Expendedora.c,468 :: 		lcd_out(1, 5, "Expendedora");
0x9B7C	0x0E01      	MOVLW       1
0x9B7E	0x6F23      	MOVWF       FARG_lcd_out_fila, 1
0x9B80	0x0E05      	MOVLW       5
0x9B82	0x6F24      	MOVWF       FARG_lcd_out_col, 1
0x9B84	0x0E60      	MOVLW       ?lstr2_Expendedora
0x9B86	0x6F25      	MOVWF       FARG_lcd_out_texto, 1
0x9B88	0x0E02      	MOVLW       hi_addr(?lstr2_Expendedora)
0x9B8A	0x6F26      	MOVWF       FARG_lcd_out_texto+1, 1
0x9B8C	0xF010EC01  	CALL        _lcd_out, 0
;Expendedora.c,469 :: 		}
L_end_pic_init:
0x9B90	0x0012      	RETURN      0
; end of _pic_init
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x9B92	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x9B94	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x9B98	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x9B9A	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x9B9C	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x9B9E	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x9BA0	0x0012      	RETURN      0
; end of ___CC2DW
_main:
0x9BA2	0xF052EC10  	CALL        42016, 0
;Expendedora.c,253 :: 		void main(){
;Expendedora.c,255 :: 		pic_init();
0x9BA6	0xDEF8      	RCALL       _pic_init
;Expendedora.c,257 :: 		while(true){
L_main653:
;Expendedora.c,258 :: 		can_do_work();                  //Tareas can open
0x9BA8	0xDE7E      	RCALL       _can_do_work
;Expendedora.c,259 :: 		expendedora_checkTarjeta();     //Verifica la tarjeta del pensionado
0x9BAA	0xF041ECF7  	CALL        _expendedora_checkTarjeta, 0
;Expendedora.c,260 :: 		expendedora_imprimir();         //Imprime ticket
0x9BAE	0xDC14      	RCALL       _expendedora_imprimir
;Expendedora.c,261 :: 		expendedora_bufferEventos();
0x9BB0	0xDE81      	RCALL       _expendedora_bufferEventos
;Expendedora.c,262 :: 		expendedora_temporizadores();
0x9BB2	0xF040ECEE  	CALL        _expendedora_temporizadores, 0
;Expendedora.c,263 :: 		expendedora_barrera();
0x9BB6	0xF041EC6C  	CALL        _expendedora_barrera, 0
;Expendedora.c,264 :: 		}
0x9BBA	0xD7F6      	BRA         L_main653
;Expendedora.c,265 :: 		}
L_end_main:
0x9BBC	0xD7FF      	BRA         $+0
; end of _main
0x9BBE	0xF019C000  	MOVFF       R0, 25
0x9BC2	0xF018C001  	MOVFF       R1, 24
_interrupt_low:
0x9BC6	0x6E15      	MOVWF       ___Low_saveWREG 
0x9BC8	0xF016CFD8  	MOVFF       STATUS, ___Low_saveSTATUS
0x9BCC	0xF017CFE0  	MOVFF       BSR, ___Low_saveBSR
;Expendedora.c,272 :: 		void interrupt_low(){
;Expendedora.c,273 :: 		int_timer1();
0x9BD0	0xF040EC9E  	CALL        _int_timer1, 0
;Expendedora.c,274 :: 		int_timer2();
0x9BD4	0xF040EC76  	CALL        _int_timer2, 0
;Expendedora.c,275 :: 		int_timer3();
0x9BD8	0xF040ECB1  	CALL        _int_timer3, 0
;Expendedora.c,277 :: 		int_can();
0x9BDC	0xF040ECD8  	CALL        _int_can, 0
;Expendedora.c,278 :: 		}
L_end_interrupt_low:
L__interrupt_low1368:
0x9BE0	0x5017      	MOVF        ___Low_saveBSR, 0 
0x9BE2	0x6EE0      	MOVWF       BSR 
0x9BE4	0x5016      	MOVF        ___Low_saveSTATUS, 0 
0x9BE6	0x6ED8      	MOVWF       STATUS 
0x9BE8	0x3A15      	SWAPF       ___Low_saveWREG, 1 
0x9BEA	0x3815      	SWAPF       ___Low_saveWREG, 0 
0x9BEC	0xF000C019  	MOVFF       25, R0
0x9BF0	0xF001C018  	MOVFF       24, R1
0x9BF4	0x0010      	RETFIE      0
; end of _interrupt_low
_interrupt:
;Expendedora.c,267 :: 		void interrupt(){
0x9BF6	0xF01AC000  	MOVFF       R0, 26
;Expendedora.c,268 :: 		int_wiegand26();
0x9BFA	0xF040ECD3  	CALL        _int_wiegand26, 0
;Expendedora.c,270 :: 		}
L_end_interrupt:
L__interrupt1366:
0x9BFE	0xF000C01A  	MOVFF       26, R0
0x9C02	0x0011      	RETFIE      1
; end of _interrupt
0xA420	0xF01BEE10  	LFSR        1, 27
0xA424	0x0EE5      	MOVLW       229
0xA426	0x6E00      	MOVWF       R0 
0xA428	0x0E01      	MOVLW       1
0xA42A	0x6E01      	MOVWF       R1 
0xA42C	0x0E77      	MOVLW       119
0xA42E	0x6EF6      	MOVWF       4086 
0xA430	0x0EA2      	MOVLW       162
0xA432	0x6EF7      	MOVWF       TBLPTRH 
0xA434	0x0E00      	MOVLW       0
0xA436	0x6EF8      	MOVWF       TBLPTRU 
0xA438	0xF04DECC9  	CALL        39826, 0
0xA43C	0xF03DEE11  	LFSR        1, 317
0xA440	0x0E96      	MOVLW       150
0xA442	0x6E00      	MOVWF       R0 
0xA444	0x0E02      	MOVLW       2
0xA446	0x6E01      	MOVWF       R1 
0xA448	0x0EE1      	MOVLW       225
0xA44A	0x6EF6      	MOVWF       4086 
0xA44C	0x0EA0      	MOVLW       160
0xA44E	0x6EF7      	MOVWF       TBLPTRH 
0xA450	0x0E00      	MOVLW       0
0xA452	0x6EF8      	MOVWF       TBLPTRU 
0xA454	0xF04DECC9  	CALL        39826, 0
0xA458	0x0012      	RETURN      0
;Expendedora.c,28 :: _ticket
0x9C04	0x3102 ;_ticket+0
0x9C06	0x3134 ;_ticket+2
0x9C08	0x3442 ;_ticket+4
0x9C0A	0x3130 ;_ticket+6
0x9C0C	0x3242 ;_ticket+8
0x9C0E	0x3031 ;_ticket+10
0x9C10	0x3131 ;_ticket+12
0x9C12	0x3342 ;_ticket+14
0x9C14	0x3133 ;_ticket+16
0x9C16	0x3134 ;_ticket+18
0x9C18	0x3642 ;_ticket+20
0x9C1A	0x3031 ;_ticket+22
0x9C1C	0x3130 ;_ticket+24
0x9C1E	0x3244 ;_ticket+26
0x9C20	0x3331 ;_ticket+28
0x9C22	0x0A33 ;_ticket+30
0x9C24	0x3002 ;_ticket+32
0x9C26	0x3139 ;_ticket+34
0x9C28	0x3244 ;_ticket+36
0x9C2A	0x3131 ;_ticket+38
0x9C2C	0x3131 ;_ticket+40
0x9C2E	0x3642 ;_ticket+42
0x9C30	0x3031 ;_ticket+44
0x9C32	0x3131 ;_ticket+46
0x9C34	0x3442 ;_ticket+48
0x9C36	0x3035 ;_ticket+50
0x9C38	0x0A31 ;_ticket+52
0x9C3A	0x4F46 ;_ticket+54
0x9C3C	0x494C ;_ticket+56
0x9C3E	0x3A4F ;_ticket+58
0x9C40	0x3005 ;_ticket+60
0x9C42	0x3131 ;_ticket+62
0x9C44	0x0A34 ;_ticket+64
0x9C46	0x5345 ;_ticket+66
0x9C48	0x4154 ;_ticket+68
0x9C4A	0x4943 ;_ticket+70
0x9C4C	0x4E4F ;_ticket+72
0x9C4E	0x4D41 ;_ticket+74
0x9C50	0x4549 ;_ticket+76
0x9C52	0x544E ;_ticket+78
0x9C54	0x204F ;_ticket+80
0x9C56	0x494A ;_ticket+82
0x9C58	0x454E ;_ticket+84
0x9C5A	0x4554 ;_ticket+86
0x9C5C	0x0A53 ;_ticket+88
0x9C5E	0x3002 ;_ticket+90
0x9C60	0x3139 ;_ticket+92
0x9C62	0x3244 ;_ticket+94
0x9C64	0x3031 ;_ticket+96
0x9C66	0x3130 ;_ticket+98
0x9C68	0x3642 ;_ticket+100
0x9C6A	0x3031 ;_ticket+102
0x9C6C	0x3131 ;_ticket+104
0x9C6E	0x3442 ;_ticket+106
0x9C70	0x3035 ;_ticket+108
0x9C72	0x0A30 ;_ticket+110
0x9C74	0x4F0A ;_ticket+112
0x9C76	0x6570 ;_ticket+114
0x9C78	0x6172 ;_ticket+116
0x9C7A	0x6F64 ;_ticket+118
0x9C7C	0x7020 ;_ticket+120
0x9C7E	0x726F ;_ticket+122
0x9C80	0x4420 ;_ticket+124
0x9C82	0x6E61 ;_ticket+126
0x9C84	0x6569 ;_ticket+128
0x9C86	0x206C ;_ticket+130
0x9C88	0x6548 ;_ticket+132
0x9C8A	0x6E72 ;_ticket+134
0x9C8C	0x6E61 ;_ticket+136
0x9C8E	0x6564 ;_ticket+138
0x9C90	0x207A ;_ticket+140
0x9C92	0x6548 ;_ticket+142
0x9C94	0x6E72 ;_ticket+144
0x9C96	0x6E61 ;_ticket+146
0x9C98	0x6564 ;_ticket+148
0x9C9A	0x0A7A ;_ticket+150
0x9C9C	0x2E52 ;_ticket+152
0x9C9E	0x2E46 ;_ticket+154
0x9CA0	0x2E43 ;_ticket+156
0x9CA2	0x203A ;_ticket+158
0x9CA4	0x4548 ;_ticket+160
0x9CA6	0x4448 ;_ticket+162
0x9CA8	0x3337 ;_ticket+164
0x9CAA	0x3830 ;_ticket+166
0x9CAC	0x3931 ;_ticket+168
0x9CAE	0x434B ;_ticket+170
0x9CB0	0x2032 ;_ticket+172
0x9CB2	0x430A ;_ticket+174
0x9CB4	0x4C41 ;_ticket+176
0x9CB6	0x454C ;_ticket+178
0x9CB8	0x4120 ;_ticket+180
0x9CBA	0x5548 ;_ticket+182
0x9CBC	0x5441 ;_ticket+184
0x9CBE	0x414C ;_ticket+186
0x9CC0	0x3120 ;_ticket+188
0x9CC2	0x2032 ;_ticket+190
0x9CC4	0x4F43 ;_ticket+192
0x9CC6	0x2E4C ;_ticket+194
0x9CC8	0x4C20 ;_ticket+196
0x9CCA	0x5341 ;_ticket+198
0x9CCC	0x4320 ;_ticket+200
0x9CCE	0x5552 ;_ticket+202
0x9CD0	0x4543 ;_ticket+204
0x9CD2	0x2053 ;_ticket+206
0x9CD4	0x4C0A ;_ticket+208
0x9CD6	0x2041 ;_ticket+210
0x9CD8	0x414D ;_ticket+212
0x9CDA	0x4447 ;_ticket+214
0x9CDC	0x4C41 ;_ticket+216
0x9CDE	0x4E45 ;_ticket+218
0x9CE0	0x2041 ;_ticket+220
0x9CE2	0x4F43 ;_ticket+222
0x9CE4	0x544E ;_ticket+224
0x9CE6	0x4552 ;_ticket+226
0x9CE8	0x4152 ;_ticket+228
0x9CEA	0x2C53 ;_ticket+230
0x9CEC	0x4320 ;_ticket+232
0x9CEE	0x5549 ;_ticket+234
0x9CF0	0x4144 ;_ticket+236
0x9CF2	0x2044 ;_ticket+238
0x9CF4	0x4544 ;_ticket+240
0x9CF6	0x4D20 ;_ticket+242
0x9CF8	0x5845 ;_ticket+244
0x9CFA	0x4349 ;_ticket+246
0x9CFC	0x204F ;_ticket+248
0x9CFE	0x450A ;_ticket+250
0x9D00	0x494D ;_ticket+252
0x9D02	0x4954 ;_ticket+254
0x9D04	0x4F44 ;_ticket+256
0x9D06	0x4520 ;_ticket+258
0x9D08	0x3A4E ;_ticket+260
0x9D0A	0x4120 ;_ticket+262
0x9D0C	0x2E56 ;_ticket+264
0x9D0E	0x4420 ;_ticket+266
0x9D10	0x2045 ;_ticket+268
0x9D12	0x4F4C ;_ticket+270
0x9D14	0x2053 ;_ticket+272
0x9D16	0x494A ;_ticket+274
0x9D18	0x454E ;_ticket+276
0x9D1A	0x4554 ;_ticket+278
0x9D1C	0x2053 ;_ticket+280
0x9D1E	0x2037 ;_ticket+282
0x9D20	0x2059 ;_ticket+284
0x9D22	0x2C39 ;_ticket+286
0x9D24	0x4320 ;_ticket+288
0x9D26	0x4C4F ;_ticket+290
0x9D28	0x202E ;_ticket+292
0x9D2A	0x5241 ;_ticket+294
0x9D2C	0x4F42 ;_ticket+296
0x9D2E	0x454C ;_ticket+298
0x9D30	0x4144 ;_ticket+300
0x9D32	0x2053 ;_ticket+302
0x9D34	0x540A ;_ticket+304
0x9D36	0x414C ;_ticket+306
0x9D38	0x4E4C ;_ticket+308
0x9D3A	0x5045 ;_ticket+310
0x9D3C	0x4E41 ;_ticket+312
0x9D3E	0x4C54 ;_ticket+314
0x9D40	0x2041 ;_ticket+316
0x9D42	0x4445 ;_ticket+318
0x9D44	0x2E4F ;_ticket+320
0x9D46	0x4420 ;_ticket+322
0x9D48	0x2045 ;_ticket+324
0x9D4A	0x454D ;_ticket+326
0x9D4C	0x4958 ;_ticket+328
0x9D4E	0x4F43 ;_ticket+330
0x9D50	0x0A20 ;_ticket+332
0x9D52	0x3002 ;_ticket+334
0x9D54	0x3139 ;_ticket+336
0x9D56	0x3244 ;_ticket+338
0x9D58	0x3131 ;_ticket+340
0x9D5A	0x3131 ;_ticket+342
0x9D5C	0x3642 ;_ticket+344
0x9D5E	0x3031 ;_ticket+346
0x9D60	0x3131 ;_ticket+348
0x9D62	0x3442 ;_ticket+350
0x9D64	0x3035 ;_ticket+352
0x9D66	0x0A31 ;_ticket+354
0x9D68	0x050A ;_ticket+356
0x9D6A	0x3130 ;_ticket+358
0x9D6C	0x3030 ;_ticket+360
0x9D6E	0x020A ;_ticket+362
0x9D70	0x3531 ;_ticket+364
0x9D72	0x4431 ;_ticket+366
0x9D74	0x3636 ;_ticket+368
0x9D76	0x3130 ;_ticket+370
0x9D78	0x4431 ;_ticket+372
0x9D7A	0x3834 ;_ticket+374
0x9D7C	0x3230 ;_ticket+376
0x9D7E	0x4431 ;_ticket+378
0x9D80	0x3836 ;_ticket+380
0x9D82	0x3436 ;_ticket+382
0x9D84	0x4431 ;_ticket+384
0x9D86	0x3737 ;_ticket+386
0x9D88	0x3130 ;_ticket+388
0x9D8A	0x4431 ;_ticket+390
0x9D8C	0x4236 ;_ticket+392
0x9D8E	0x3730 ;_ticket+394
0x9D90	0x670A ;_ticket+396
0x9D92	0x3005 ;_ticket+398
0x9D94	0x3131 ;_ticket+400
0x9D96	0x0246 ;_ticket+402
0x9D98	0x3130 ;_ticket+404
0x9D9A	0x3030 ;_ticket+406
0x9D9C	0x0A0A ;_ticket+408
0x9D9E	0x020A ;_ticket+410
0x9DA0	0x3930 ;_ticket+412
0x9DA2	0x4431 ;_ticket+414
0x9DA4	0x3132 ;_ticket+416
0x9DA6	0x3030 ;_ticket+418
0x9DA8	0x4231 ;_ticket+420
0x9DAA	0x3136 ;_ticket+422
0x9DAC	0x3130 ;_ticket+424
0x9DAE	0x4231 ;_ticket+426
0x9DB0	0x3534 ;_ticket+428
0x9DB2	0x3130 ;_ticket+430
0x9DB4	0x540A ;_ticket+432
0x9DB6	0x5241 ;_ticket+434
0x9DB8	0x4649 ;_ticket+436
0x9DBA	0x3A41 ;_ticket+438
0x9DBC	0x2420 ;_ticket+440
0x9DBE	0x3631 ;_ticket+442
0x9DC0	0x302E ;_ticket+444
0x9DC2	0x2030 ;_ticket+446
0x9DC4	0x6F48 ;_ticket+448
0x9DC6	0x6172 ;_ticket+450
0x9DC8	0x202C ;_ticket+452
0x9DCA	0x7246 ;_ticket+454
0x9DCC	0x6361 ;_ticket+456
0x9DCE	0x6963 ;_ticket+458
0x9DD0	0x6E6F ;_ticket+460
0x9DD2	0x2420 ;_ticket+462
0x9DD4	0x2E34 ;_ticket+464
0x9DD6	0x3030 ;_ticket+466
0x9DD8	0x6320 ;_ticket+468
0x9DDA	0x6461 ;_ticket+470
0x9DDC	0x2061 ;_ticket+472
0x9DDE	0x3531 ;_ticket+474
0x9DE0	0x6D20 ;_ticket+476
0x9DE2	0x6E69 ;_ticket+478
0x9DE4	0x4E0A ;_ticket+480
0x9DE6	0x204F ;_ticket+482
0x9DE8	0x4148 ;_ticket+484
0x9DEA	0x2059 ;_ticket+486
0x9DEC	0x4F54 ;_ticket+488
0x9DEE	0x454C ;_ticket+490
0x9DF0	0x4152 ;_ticket+492
0x9DF2	0x434E ;_ticket+494
0x9DF4	0x4149 ;_ticket+496
0x9DF6	0x0A20 ;_ticket+498
0x9DF8	0x480A ;_ticket+500
0x9DFA	0x524F ;_ticket+502
0x9DFC	0x5241 ;_ticket+504
0x9DFE	0x4F49 ;_ticket+506
0x9E00	0x0A53 ;_ticket+508
0x9E02	0x754C ;_ticket+510
0x9E04	0x656E ;_ticket+512
0x9E06	0x2073 ;_ticket+514
0x9E08	0x2061 ;_ticket+516
0x9E0A	0x6956 ;_ticket+518
0x9E0C	0x7265 ;_ticket+520
0x9E0E	0x656E ;_ticket+522
0x9E10	0x2073 ;_ticket+524
0x9E12	0x6564 ;_ticket+526
0x9E14	0x203A ;_ticket+528
0x9E16	0x2020 ;_ticket+530
0x9E18	0x2020 ;_ticket+532
0x9E1A	0x3A36 ;_ticket+534
0x9E1C	0x3030 ;_ticket+536
0x9E1E	0x4120 ;_ticket+538
0x9E20	0x204D ;_ticket+540
0x9E22	0x2061 ;_ticket+542
0x9E24	0x3A38 ;_ticket+544
0x9E26	0x3030 ;_ticket+546
0x9E28	0x5020 ;_ticket+548
0x9E2A	0x204D ;_ticket+550
0x9E2C	0x530A ;_ticket+552
0x9E2E	0x6261 ;_ticket+554
0x9E30	0x6461 ;_ticket+556
0x9E32	0x736F ;_ticket+558
0x9E34	0x6420 ;_ticket+560
0x9E36	0x3A65 ;_ticket+562
0x9E38	0x3720 ;_ticket+564
0x9E3A	0x303A ;_ticket+566
0x9E3C	0x2030 ;_ticket+568
0x9E3E	0x4D41 ;_ticket+570
0x9E40	0x6120 ;_ticket+572
0x9E42	0x3820 ;_ticket+574
0x9E44	0x303A ;_ticket+576
0x9E46	0x2030 ;_ticket+578
0x9E48	0x4D50 ;_ticket+580
0x9E4A	0x0A20 ;_ticket+582
0x9E4C	0x6F44 ;_ticket+584
0x9E4E	0x696D ;_ticket+586
0x9E50	0x676E ;_ticket+588
0x9E52	0x736F ;_ticket+590
0x9E54	0x6520 ;_ticket+592
0x9E56	0x7478 ;_ticket+594
0x9E58	0x6D65 ;_ticket+596
0x9E5A	0x6F70 ;_ticket+598
0x9E5C	0x6172 ;_ticket+600
0x9E5E	0x656E ;_ticket+602
0x9E60	0x736F ;_ticket+604
0x9E62	0x0A20 ;_ticket+606
0x9E64	0x020A ;_ticket+608
0x9E66	0x3930 ;_ticket+610
0x9E68	0x4431 ;_ticket+612
0x9E6A	0x3132 ;_ticket+614
0x9E6C	0x3030 ;_ticket+616
0x9E6E	0x4231 ;_ticket+618
0x9E70	0x3136 ;_ticket+620
0x9E72	0x3130 ;_ticket+622
0x9E74	0x4231 ;_ticket+624
0x9E76	0x3534 ;_ticket+626
0x9E78	0x3030 ;_ticket+628
0x9E7A	0x450A ;_ticket+630
0x9E7C	0x5453 ;_ticket+632
0x9E7E	0x2041 ;_ticket+634
0x9E80	0x4520 ;_ticket+636
0x9E82	0x504D ;_ticket+638
0x9E84	0x4552 ;_ticket+640
0x9E86	0x4153 ;_ticket+642
0x9E88	0x2020 ;_ticket+644
0x9E8A	0x2059 ;_ticket+646
0x9E8C	0x5320 ;_ticket+648
0x9E8E	0x5355 ;_ticket+650
0x9E90	0x2020 ;_ticket+652
0x9E92	0x5254 ;_ticket+654
0x9E94	0x4241 ;_ticket+656
0x9E96	0x4A41 ;_ticket+658
0x9E98	0x4441 ;_ticket+660
0x9E9A	0x524F ;_ticket+662
0x9E9C	0x5345 ;_ticket+664
0x9E9E	0x2020 ;_ticket+666
0x9EA0	0x4F4E ;_ticket+668
0x9EA2	0x2020 ;_ticket+670
0x9EA4	0x4553 ;_ticket+672
0x9EA6	0x4820 ;_ticket+674
0x9EA8	0x4341 ;_ticket+676
0x9EAA	0x4E45 ;_ticket+678
0x9EAC	0x520A ;_ticket+680
0x9EAE	0x5345 ;_ticket+682
0x9EB0	0x4F50 ;_ticket+684
0x9EB2	0x534E ;_ticket+686
0x9EB4	0x4241 ;_ticket+688
0x9EB6	0x454C ;_ticket+690
0x9EB8	0x2053 ;_ticket+692
0x9EBA	0x5020 ;_ticket+694
0x9EBC	0x524F ;_ticket+696
0x9EBE	0x2020 ;_ticket+698
0x9EC0	0x4F4C ;_ticket+700
0x9EC2	0x2053 ;_ticket+702
0x9EC4	0x4F20 ;_ticket+704
0x9EC6	0x4A42 ;_ticket+706
0x9EC8	0x5445 ;_ticket+708
0x9ECA	0x534F ;_ticket+710
0x9ECC	0x2020 ;_ticket+712
0x9ECE	0x4F4E ;_ticket+714
0x9ED0	0x4420 ;_ticket+716
0x9ED2	0x4345 ;_ticket+718
0x9ED4	0x414C ;_ticket+720
0x9ED6	0x4152 ;_ticket+722
0x9ED8	0x4F44 ;_ticket+724
0x9EDA	0x2053 ;_ticket+726
0x9EDC	0x5920 ;_ticket+728
0x9EDE	0x4D0A ;_ticket+730
0x9EE0	0x534F ;_ticket+732
0x9EE2	0x5254 ;_ticket+734
0x9EE4	0x4441 ;_ticket+736
0x9EE6	0x534F ;_ticket+738
0x9EE8	0x2020 ;_ticket+740
0x9EEA	0x4150 ;_ticket+742
0x9EEC	0x4152 ;_ticket+744
0x9EEE	0x2020 ;_ticket+746
0x9EF0	0x5543 ;_ticket+748
0x9EF2	0x5453 ;_ticket+750
0x9EF4	0x444F ;_ticket+752
0x9EF6	0x4149 ;_ticket+754
0x9EF8	0x2052 ;_ticket+756
0x9EFA	0x4120 ;_ticket+758
0x9EFC	0x204C ;_ticket+760
0x9EFE	0x5220 ;_ticket+762
0x9F00	0x5345 ;_ticket+764
0x9F02	0x4F50 ;_ticket+766
0x9F04	0x534E ;_ticket+768
0x9F06	0x4241 ;_ticket+770
0x9F08	0x454C ;_ticket+772
0x9F0A	0x2020 ;_ticket+774
0x9F0C	0x4544 ;_ticket+776
0x9F0E	0x2020 ;_ticket+778
0x9F10	0x450A ;_ticket+780
0x9F12	0x414C ;_ticket+782
0x9F14	0x4F42 ;_ticket+784
0x9F16	0x4152 ;_ticket+786
0x9F18	0x2052 ;_ticket+788
0x9F1A	0x4520 ;_ticket+790
0x9F1C	0x204C ;_ticket+792
0x9F1E	0x4220 ;_ticket+794
0x9F20	0x4C4F ;_ticket+796
0x9F22	0x5445 ;_ticket+798
0x9F24	0x2C4F ;_ticket+800
0x9F26	0x2020 ;_ticket+802
0x9F28	0x2059 ;_ticket+804
0x9F2A	0x4E20 ;_ticket+806
0x9F2C	0x204F ;_ticket+808
0x9F2E	0x5320 ;_ticket+810
0x9F30	0x2045 ;_ticket+812
0x9F32	0x4520 ;_ticket+814
0x9F34	0x544E ;_ticket+816
0x9F36	0x4552 ;_ticket+818
0x9F38	0x5547 ;_ticket+820
0x9F3A	0x2045 ;_ticket+822
0x9F3C	0x4520 ;_ticket+824
0x9F3E	0x5453 ;_ticket+826
0x9F40	0x2045 ;_ticket+828
0x9F42	0x420A ;_ticket+830
0x9F44	0x4C4F ;_ticket+832
0x9F46	0x5445 ;_ticket+834
0x9F48	0x204F ;_ticket+836
0x9F4A	0x4820 ;_ticket+838
0x9F4C	0x5341 ;_ticket+840
0x9F4E	0x4154 ;_ticket+842
0x9F50	0x2020 ;_ticket+844
0x9F52	0x5551 ;_ticket+846
0x9F54	0x2045 ;_ticket+848
0x9F56	0x5220 ;_ticket+850
0x9F58	0x4345 ;_ticket+852
0x9F5A	0x4249 ;_ticket+854
0x9F5C	0x2041 ;_ticket+856
0x9F5E	0x5553 ;_ticket+858
0x9F60	0x2020 ;_ticket+860
0x9F62	0x4556 ;_ticket+862
0x9F64	0x4948 ;_ticket+864
0x9F66	0x5543 ;_ticket+866
0x9F68	0x4F4C ;_ticket+868
0x9F6A	0x2020 ;_ticket+870
0x9F6C	0x2041 ;_ticket+872
0x9F6E	0x5320 ;_ticket+874
0x9F70	0x2055 ;_ticket+876
0x9F72	0x2020 ;_ticket+878
0x9F74	0x450A ;_ticket+880
0x9F76	0x544E ;_ticket+882
0x9F78	0x5245 ;_ticket+884
0x9F7A	0x2041 ;_ticket+886
0x9F7C	0x5320 ;_ticket+888
0x9F7E	0x5441 ;_ticket+890
0x9F80	0x5349 ;_ticket+892
0x9F82	0x4146 ;_ticket+894
0x9F84	0x4343 ;_ticket+896
0x9F86	0x4F49 ;_ticket+898
0x9F88	0x204E ;_ticket+900
0x9F8A	0x4D49 ;_ticket+902
0x9F8C	0x4F50 ;_ticket+904
0x9F8E	0x5452 ;_ticket+906
0x9F90	0x4E41 ;_ticket+908
0x9F92	0x4554 ;_ticket+910
0x9F94	0x2020 ;_ticket+912
0x9F96	0x454C ;_ticket+914
0x9F98	0x2041 ;_ticket+916
0x9F9A	0x4120 ;_ticket+918
0x9F9C	0x204C ;_ticket+920
0x9F9E	0x5220 ;_ticket+922
0x9FA0	0x5645 ;_ticket+924
0x9FA2	0x5245 ;_ticket+926
0x9FA4	0x4F53 ;_ticket+928
0x9FA6	0x440A ;_ticket+930
0x9FA8	0x2045 ;_ticket+932
0x9FAA	0x4520 ;_ticket+934
0x9FAC	0x5453 ;_ticket+936
0x9FAE	0x2045 ;_ticket+938
0x9FB0	0x4220 ;_ticket+940
0x9FB2	0x4C4F ;_ticket+942
0x9FB4	0x5445 ;_ticket+944
0x9FB6	0x204F ;_ticket+946
0x9FB8	0x4159 ;_ticket+948
0x9FBA	0x2020 ;_ticket+950
0x9FBC	0x5551 ;_ticket+952
0x9FBE	0x2045 ;_ticket+954
0x9FC0	0x4920 ;_ticket+956
0x9FC2	0x444E ;_ticket+958
0x9FC4	0x4349 ;_ticket+960
0x9FC6	0x2041 ;_ticket+962
0x9FC8	0x4C20 ;_ticket+964
0x9FCA	0x534F ;_ticket+966
0x9FCC	0x2020 ;_ticket+968
0x9FCE	0x494C ;_ticket+970
0x9FD0	0x494D ;_ticket+972
0x9FD2	0x4554 ;_ticket+974
0x9FD4	0x2053 ;_ticket+976
0x9FD6	0x2020 ;_ticket+978
0x9FD8	0x440A ;_ticket+980
0x9FDA	0x2045 ;_ticket+982
0x9FDC	0x554E ;_ticket+984
0x9FDE	0x5345 ;_ticket+986
0x9FE0	0x5254 ;_ticket+988
0x9FE2	0x2041 ;_ticket+990
0x9FE4	0x5220 ;_ticket+992
0x9FE6	0x5345 ;_ticket+994
0x9FE8	0x4F50 ;_ticket+996
0x9FEA	0x534E ;_ticket+998
0x9FEC	0x4241 ;_ticket+1000
0x9FEE	0x4C49 ;_ticket+1002
0x9FF0	0x4449 ;_ticket+1004
0x9FF2	0x4441 ;_ticket+1006
0x9FF4	0x202E ;_ticket+1008
0x9FF6	0x2020 ;_ticket+1010
0x9FF8	0x2020 ;_ticket+1012
0x9FFA	0x2020 ;_ticket+1014
0x9FFC	0x2020 ;_ticket+1016
0x9FFE	0x2020 ;_ticket+1018
0xA000	0x2020 ;_ticket+1020
0xA002	0x2020 ;_ticket+1022
0xA004	0x2020 ;_ticket+1024
0xA006	0x2020 ;_ticket+1026
0xA008	0x2020 ;_ticket+1028
0xA00A	0x0A20 ;_ticket+1030
0xA00C	0x4F42 ;_ticket+1032
0xA00E	0x454C ;_ticket+1034
0xA010	0x4F54 ;_ticket+1036
0xA012	0x5020 ;_ticket+1038
0xA014	0x5245 ;_ticket+1040
0xA016	0x4944 ;_ticket+1042
0xA018	0x4F44 ;_ticket+1044
0xA01A	0x203A ;_ticket+1046
0xA01C	0x4C4C ;_ticket+1048
0xA01E	0x4E45 ;_ticket+1050
0xA020	0x4441 ;_ticket+1052
0xA022	0x204F ;_ticket+1054
0xA024	0x4544 ;_ticket+1056
0xA026	0x204C ;_ticket+1058
0xA028	0x4F46 ;_ticket+1060
0xA02A	0x4D52 ;_ticket+1062
0xA02C	0x5441 ;_ticket+1064
0xA02E	0x204F ;_ticket+1066
0xA030	0x4F43 ;_ticket+1068
0xA032	0x5252 ;_ticket+1070
0xA034	0x5345 ;_ticket+1072
0xA036	0x4F50 ;_ticket+1074
0xA038	0x444E ;_ticket+1076
0xA03A	0x4549 ;_ticket+1078
0xA03C	0x544E ;_ticket+1080
0xA03E	0x2045 ;_ticket+1082
0xA040	0x020A ;_ticket+1084
0xA042	0x3531 ;_ticket+1086
0xA044	0x4431 ;_ticket+1088
0xA046	0x3636 ;_ticket+1090
0xA048	0x3130 ;_ticket+1092
0xA04A	0x4431 ;_ticket+1094
0xA04C	0x3834 ;_ticket+1096
0xA04E	0x3230 ;_ticket+1098
0xA050	0x4431 ;_ticket+1100
0xA052	0x3836 ;_ticket+1102
0xA054	0x3436 ;_ticket+1104
0xA056	0x4431 ;_ticket+1106
0xA058	0x3737 ;_ticket+1108
0xA05A	0x3130 ;_ticket+1110
0xA05C	0x4431 ;_ticket+1112
0xA05E	0x4236 ;_ticket+1114
0xA060	0x3430 ;_ticket+1116
0xA062	0x050A ;_ticket+1118
0xA064	0x3130 ;_ticket+1120
0xA066	0x4631 ;_ticket+1122
0xA068	0x3002 ;_ticket+1124
0xA06A	0x3031 ;_ticket+1126
0xA06C	0x0A30 ;_ticket+1128
0xA06E	0x0A0A ;_ticket+1130
0xA070	0x4341 ;_ticket+1132
0xA072	0x4543 ;_ticket+1134
0xA074	0x4153 ;_ticket+1136
0xA076	0x5020 ;_ticket+1138
0xA078	0x5241 ;_ticket+1140
0xA07A	0x494B ;_ticket+1142
0xA07C	0x474E ;_ticket+1144
0xA07E	0x4120 ;_ticket+1146
0xA080	0x5455 ;_ticket+1148
0xA082	0x4D4F ;_ticket+1150
0xA084	0x5441 ;_ticket+1152
0xA086	0x5A49 ;_ticket+1154
0xA088	0x4341 ;_ticket+1156
0xA08A	0x4F49 ;_ticket+1158
0xA08C	0x204E ;_ticket+1160
0xA08E	0x4544 ;_ticket+1162
0xA090	0x4520 ;_ticket+1164
0xA092	0x5453 ;_ticket+1166
0xA094	0x4341 ;_ticket+1168
0xA096	0x4F49 ;_ticket+1170
0xA098	0x414E ;_ticket+1172
0xA09A	0x494D ;_ticket+1174
0xA09C	0x4E45 ;_ticket+1176
0xA09E	0x4F54 ;_ticket+1178
0xA0A0	0x0A53 ;_ticket+1180
0xA0A2	0x2020 ;_ticket+1182
0xA0A4	0x2020 ;_ticket+1184
0xA0A6	0x2020 ;_ticket+1186
0xA0A8	0x2020 ;_ticket+1188
0xA0AA	0x7777 ;_ticket+1190
0xA0AC	0x2E77 ;_ticket+1192
0xA0AE	0x6361 ;_ticket+1194
0xA0B0	0x6563 ;_ticket+1196
0xA0B2	0x6173 ;_ticket+1198
0xA0B4	0x6D2E ;_ticket+1200
0xA0B6	0x2065 ;_ticket+1202
0xA0B8	0x2020 ;_ticket+1204
0xA0BA	0x7620 ;_ticket+1206
0xA0BC	0x6E65 ;_ticket+1208
0xA0BE	0x6174 ;_ticket+1210
0xA0C0	0x4073 ;_ticket+1212
0xA0C2	0x6361 ;_ticket+1214
0xA0C4	0x6563 ;_ticket+1216
0xA0C6	0x6173 ;_ticket+1218
0xA0C8	0x6D2E ;_ticket+1220
0xA0CA	0x2065 ;_ticket+1222
0xA0CC	0x2020 ;_ticket+1224
0xA0CE	0x2020 ;_ticket+1226
0xA0D0	0x2020 ;_ticket+1228
0xA0D2	0x0A20 ;_ticket+1230
0xA0D4	0x3002 ;_ticket+1232
0xA0D6	0x3134 ;_ticket+1234
0xA0D8	0x3544 ;_ticket+1236
0xA0DA	0x3436 ;_ticket+1238
0xA0DC	0x3532 ;_ticket+1240
0xA0DE	0x0A41 ;_ticket+1242
0xA0E0	0x00 ;_ticket+1244
; end of _ticket
;Expendedora.c,0 :: ?ICS_tablePensionados
0xA0E1	0x6550 ;?ICS_tablePensionados+0
0xA0E3	0x736E ;?ICS_tablePensionados+2
0xA0E5	0x6F69 ;?ICS_tablePensionados+4
0xA0E7	0x616E ;?ICS_tablePensionados+6
0xA0E9	0x6F64 ;?ICS_tablePensionados+8
0xA0EB	0x0073 ;?ICS_tablePensionados+10
; end of ?ICS_tablePensionados
;Expendedora.c,0 :: ?ICS?lstr8_Expendedora
0xA0ED	0x6F4E ;?ICS?lstr8_Expendedora+0
0xA0EF	0x7320 ;?ICS?lstr8_Expendedora+2
0xA0F1	0x2065 ;?ICS?lstr8_Expendedora+4
0xA0F3	0x6564 ;?ICS?lstr8_Expendedora+6
0xA0F5	0x6574 ;?ICS?lstr8_Expendedora+8
0xA0F7	0x7463 ;?ICS?lstr8_Expendedora+10
0xA0F9	0x2061 ;?ICS?lstr8_Expendedora+12
0xA0FB	0x7561 ;?ICS?lstr8_Expendedora+14
0xA0FD	0x6F74 ;?ICS?lstr8_Expendedora+16
0xA0FF	0x00 ;?ICS?lstr8_Expendedora+18
; end of ?ICS?lstr8_Expendedora
;Expendedora.c,0 :: ?ICS_tableSoporte
0xA100	0x6F53 ;?ICS_tableSoporte+0
0xA102	0x6F70 ;?ICS_tableSoporte+2
0xA104	0x7472 ;?ICS_tableSoporte+4
0xA106	0x0065 ;?ICS_tableSoporte+6
; end of ?ICS_tableSoporte
;Expendedora.c,0 :: ?ICS?lstr34_Expendedora
0xA108	0x0030 ;?ICS?lstr34_Expendedora+0
; end of ?ICS?lstr34_Expendedora
;Expendedora.c,0 :: ?ICS?lstr5_Expendedora
0xA10A	0x4E20 ;?ICS?lstr5_Expendedora+0
0xA10C	0x5049 ;?ICS?lstr5_Expendedora+2
0xA10E	0x203A ;?ICS?lstr5_Expendedora+4
0xA110	0x00 ;?ICS?lstr5_Expendedora+6
; end of ?ICS?lstr5_Expendedora
;Expendedora.c,0 :: ?ICS?lstr4_Expendedora
0xA111	0x4143 ;?ICS?lstr4_Expendedora+0
0xA113	0x4452 ;?ICS?lstr4_Expendedora+2
0xA115	0x203A ;?ICS?lstr4_Expendedora+4
0xA117	0x00 ;?ICS?lstr4_Expendedora+6
; end of ?ICS?lstr4_Expendedora
;Expendedora.c,0 :: ?ICS_tablePrepago
0xA118	0x7250 ;?ICS_tablePrepago+0
0xA11A	0x7065 ;?ICS_tablePrepago+2
0xA11C	0x6761 ;?ICS_tablePrepago+4
0xA11E	0x006F ;?ICS_tablePrepago+6
; end of ?ICS_tablePrepago
;Expendedora.c,0 :: ?ICS?lstr11_Expendedora
0xA120	0x6150 ;?ICS?lstr11_Expendedora+0
0xA122	0x7373 ;?ICS?lstr11_Expendedora+2
0xA124	0x6162 ;?ICS?lstr11_Expendedora+4
0xA126	0x6B63 ;?ICS?lstr11_Expendedora+6
0xA128	0x6120 ;?ICS?lstr11_Expendedora+8
0xA12A	0x7463 ;?ICS?lstr11_Expendedora+10
0xA12C	0x7669 ;?ICS?lstr11_Expendedora+12
0xA12E	0x006F ;?ICS?lstr11_Expendedora+14
; end of ?ICS?lstr11_Expendedora
;Expendedora.c,0 :: ?ICS_prepagoEstatus
0xA130	0x7365 ;?ICS_prepagoEstatus+0
0xA132	0x6174 ;?ICS_prepagoEstatus+2
0xA134	0x7574 ;?ICS_prepagoEstatus+4
0xA136	0x0073 ;?ICS_prepagoEstatus+6
; end of ?ICS_prepagoEstatus
;Expendedora.c,0 :: ?ICS?lstr12_Expendedora
0xA138	0x6341 ;?ICS?lstr12_Expendedora+0
0xA13A	0x6563 ;?ICS?lstr12_Expendedora+2
0xA13C	0x6F73 ;?ICS?lstr12_Expendedora+4
0xA13E	0x6120 ;?ICS?lstr12_Expendedora+6
0xA140	0x6563 ;?ICS?lstr12_Expendedora+8
0xA142	0x7470 ;?ICS?lstr12_Expendedora+10
0xA144	0x6461 ;?ICS?lstr12_Expendedora+12
0xA146	0x006F ;?ICS?lstr12_Expendedora+14
; end of ?ICS?lstr12_Expendedora
;Expendedora.c,0 :: ?ICS_prepagoSaldo
0xA148	0x6173 ;?ICS_prepagoSaldo+0
0xA14A	0x646C ;?ICS_prepagoSaldo+2
0xA14C	0x006F ;?ICS_prepagoSaldo+4
; end of ?ICS_prepagoSaldo
;Expendedora.c,0 :: ?ICS?lstr10_Expendedora
0xA14E	0x6956 ;?ICS?lstr10_Expendedora+0
0xA150	0x6567 ;?ICS?lstr10_Expendedora+2
0xA152	0x636E ;?ICS?lstr10_Expendedora+4
0xA154	0x6169 ;?ICS?lstr10_Expendedora+6
0xA156	0x7420 ;?ICS?lstr10_Expendedora+8
0xA158	0x7265 ;?ICS?lstr10_Expendedora+10
0xA15A	0x696D ;?ICS?lstr10_Expendedora+12
0xA15C	0x616E ;?ICS?lstr10_Expendedora+14
0xA15E	0x6164 ;?ICS?lstr10_Expendedora+16
0xA160	0x00 ;?ICS?lstr10_Expendedora+18
; end of ?ICS?lstr10_Expendedora
;Expendedora.c,0 :: ?ICS_pensionadosVigencia
0xA161	0x6976 ;?ICS_pensionadosVigencia+0
0xA163	0x6567 ;?ICS_pensionadosVigencia+2
0xA165	0x636E ;?ICS_pensionadosVigencia+4
0xA167	0x6169 ;?ICS_pensionadosVigencia+6
0xA169	0x00 ;?ICS_pensionadosVigencia+8
; end of ?ICS_pensionadosVigencia
;Expendedora.c,0 :: ?ICS_pensionadosID
0xA16A	0x6469 ;?ICS_pensionadosID+0
0xA16C	0x00 ;?ICS_pensionadosID+2
; end of ?ICS_pensionadosID
;Expendedora.c,0 :: ?ICS_pensionadosEstatus
0xA16D	0x7365 ;?ICS_pensionadosEstatus+0
0xA16F	0x6174 ;?ICS_pensionadosEstatus+2
0xA171	0x7574 ;?ICS_pensionadosEstatus+4
0xA173	0x0073 ;?ICS_pensionadosEstatus+6
; end of ?ICS_pensionadosEstatus
;Expendedora.c,0 :: ?ICS?lstr9_Expendedora
0xA175	0x6341 ;?ICS?lstr9_Expendedora+0
0xA177	0x6563 ;?ICS?lstr9_Expendedora+2
0xA179	0x6F73 ;?ICS?lstr9_Expendedora+4
0xA17B	0x6120 ;?ICS?lstr9_Expendedora+6
0xA17D	0x6563 ;?ICS?lstr9_Expendedora+8
0xA17F	0x7470 ;?ICS?lstr9_Expendedora+10
0xA181	0x6461 ;?ICS?lstr9_Expendedora+12
0xA183	0x006F ;?ICS?lstr9_Expendedora+14
; end of ?ICS?lstr9_Expendedora
;Expendedora.c,0 :: ?ICSexpendedora_checkTarjeta_buscarNIP_L0
0xA185	0x00 ;?ICSexpendedora_checkTarjeta_buscarNIP_L0+0
; end of ?ICSexpendedora_checkTarjeta_buscarNIP_L0
;Expendedora.c,0 :: ?ICSexpendedora_checkTarjeta_buscarID_L0
0xA186	0x00 ;?ICSexpendedora_checkTarjeta_buscarID_L0+0
; end of ?ICSexpendedora_checkTarjeta_buscarID_L0
;Expendedora.c,0 :: ?ICSexpendedora_temporizadores_isCanConect_L0
0xA187	0xFF ;?ICSexpendedora_temporizadores_isCanConect_L0+0
; end of ?ICSexpendedora_temporizadores_isCanConect_L0
;Expendedora.c,0 :: ?ICS?lstr32_Expendedora
0xA188	0x7543 ;?ICS?lstr32_Expendedora+0
0xA18A	0x6F70 ;?ICS?lstr32_Expendedora+2
0xA18C	0x6420 ;?ICS?lstr32_Expendedora+4
0xA18E	0x7369 ;?ICS?lstr32_Expendedora+6
0xA190	0x6F70 ;?ICS?lstr32_Expendedora+8
0xA192	0x696E ;?ICS?lstr32_Expendedora+10
0xA194	0x6C62 ;?ICS?lstr32_Expendedora+12
0xA196	0x0065 ;?ICS?lstr32_Expendedora+14
; end of ?ICS?lstr32_Expendedora
;Expendedora.c,0 :: ?ICS?lstr31_Expendedora
0xA198	0x7543 ;?ICS?lstr31_Expendedora+0
0xA19A	0x6F70 ;?ICS?lstr31_Expendedora+2
0xA19C	0x6C20 ;?ICS?lstr31_Expendedora+4
0xA19E	0x656C ;?ICS?lstr31_Expendedora+6
0xA1A0	0x6F6E ;?ICS?lstr31_Expendedora+8
0xA1A2	0x00 ;?ICS?lstr31_Expendedora+10
; end of ?ICS?lstr31_Expendedora
;Expendedora.c,0 :: ?ICS?lstr33_Expendedora
0xA1A3	0x0031 ;?ICS?lstr33_Expendedora+0
; end of ?ICS?lstr33_Expendedora
;Expendedora.c,0 :: ?ICS_flagTMR3
0xA1A5	0x00 ;?ICS_flagTMR3+0
; end of ?ICS_flagTMR3
;Expendedora.c,0 :: ?ICScan_do_write_message_maquinaE_L0
0xA1A6	0x00 ;?ICScan_do_write_message_maquinaE_L0+0
; end of ?ICScan_do_write_message_maquinaE_L0
;Expendedora.c,0 :: ?ICSint_timer3_temp_L0
0xA1A7	0x00 ;?ICSint_timer3_temp_L0+0
; end of ?ICSint_timer3_temp_L0
;Expendedora.c,0 :: ?ICSint_timer1_temp_L0
0xA1A8	0x00 ;?ICSint_timer1_temp_L0+0
; end of ?ICSint_timer1_temp_L0
;Expendedora.c,0 :: ?ICScan_do_read_message_len_L0
0xA1A9	0x00 ;?ICScan_do_read_message_len_L0+0
; end of ?ICScan_do_read_message_len_L0
;Expendedora.c,0 :: ?ICSexpendedora_imprimir_btnCoche_L0
0xA1AA	0x00 ;?ICSexpendedora_imprimir_btnCoche_L0+0
; end of ?ICSexpendedora_imprimir_btnCoche_L0
;Expendedora.c,0 :: ?ICSexpendedora_barrera_sensor_L0
0xA1AB	0x00 ;?ICSexpendedora_barrera_sensor_L0+0
; end of ?ICSexpendedora_barrera_sensor_L0
;Expendedora.c,0 :: ?ICSexpendedora_imprimir_imprimir_L0
0xA1AC	0x00 ;?ICSexpendedora_imprimir_imprimir_L0+0
; end of ?ICSexpendedora_imprimir_imprimir_L0
;Expendedora.c,0 :: ?ICSexpendedora_ticket_puntero_L0
0xA1AD	0x0000 ;?ICSexpendedora_ticket_puntero_L0+0
; end of ?ICSexpendedora_ticket_puntero_L0
;Expendedora.c,0 :: ?ICS_canIp
0xA1AF	0x9500 ;?ICS_canIp+0
0xA1B1	0x1E54 ;?ICS_canIp+2
; end of ?ICS_canIp
;Expendedora.c,0 :: ?ICS?lstr1_Expendedora
0xA1B3	0x6E49 ;?ICS?lstr1_Expendedora+0
0xA1B5	0x6369 ;?ICS?lstr1_Expendedora+2
0xA1B7	0x6169 ;?ICS?lstr1_Expendedora+4
0xA1B9	0x696C ;?ICS?lstr1_Expendedora+6
0xA1BB	0x617A ;?ICS?lstr1_Expendedora+8
0xA1BD	0x646E ;?ICS?lstr1_Expendedora+10
0xA1BF	0x2E6F ;?ICS?lstr1_Expendedora+12
0xA1C1	0x2E2E ;?ICS?lstr1_Expendedora+14
0xA1C3	0x00 ;?ICS?lstr1_Expendedora+16
; end of ?ICS?lstr1_Expendedora
;Expendedora.c,0 :: ?ICS_canMask
0xA1C4	0xFFFF ;?ICS_canMask+0
0xA1C6	0xFFFF ;?ICS_canMask+2
; end of ?ICS_canMask
;Expendedora.c,0 :: ?ICS_prepagoDate
0xA1C8	0x6164 ;?ICS_prepagoDate+0
0xA1CA	0x6574 ;?ICS_prepagoDate+2
0xA1CC	0x00 ;?ICS_prepagoDate+4
; end of ?ICS_prepagoDate
;Expendedora.c,0 :: ?ICS?lstr27_Expendedora
0xA1CD	0x534D ;?ICS?lstr27_Expendedora+0
0xA1CF	0x0047 ;?ICS?lstr27_Expendedora+2
; end of ?ICS?lstr27_Expendedora
;Expendedora.c,0 :: ?ICS?lstr28_Expendedora
0xA1D1	0x00 ;?ICS?lstr28_Expendedora+0
; end of ?ICS?lstr28_Expendedora
;Expendedora.c,0 :: ?ICS?lstr30_Expendedora
0xA1D2	0x6544 ;?ICS?lstr30_Expendedora+0
0xA1D4	0x6973 ;?ICS?lstr30_Expendedora+2
0xA1D6	0x636E ;?ICS?lstr30_Expendedora+4
0xA1D8	0x6F72 ;?ICS?lstr30_Expendedora+6
0xA1DA	0x696E ;?ICS?lstr30_Expendedora+8
0xA1DC	0x617A ;?ICS?lstr30_Expendedora+10
0xA1DE	0x6F64 ;?ICS?lstr30_Expendedora+12
0xA1E0	0x00 ;?ICS?lstr30_Expendedora+14
; end of ?ICS?lstr30_Expendedora
;Expendedora.c,0 :: ?ICS?lstr29_Expendedora
0xA1E1	0x6953 ;?ICS?lstr29_Expendedora+0
0xA1E3	0x636E ;?ICS?lstr29_Expendedora+2
0xA1E5	0x6F72 ;?ICS?lstr29_Expendedora+4
0xA1E7	0x696E ;?ICS?lstr29_Expendedora+6
0xA1E9	0x617A ;?ICS?lstr29_Expendedora+8
0xA1EB	0x6F64 ;?ICS?lstr29_Expendedora+10
0xA1ED	0x00 ;?ICS?lstr29_Expendedora+12
; end of ?ICS?lstr29_Expendedora
;Expendedora.c,0 :: ?ICS_columnaEstado
0xA1EE	0x7365 ;?ICS_columnaEstado+0
0xA1F0	0x6174 ;?ICS_columnaEstado+2
0xA1F2	0x6F64 ;?ICS_columnaEstado+4
0xA1F4	0x00 ;?ICS_columnaEstado+6
; end of ?ICS_columnaEstado
;Expendedora.c,0 :: ?ICS_tableCupo
0xA1F5	0x7543 ;?ICS_tableCupo+0
0xA1F7	0x6F70 ;?ICS_tableCupo+2
0xA1F9	0x00 ;?ICS_tableCupo+4
; end of ?ICS_tableCupo
;Expendedora.c,0 :: ?ICS_tableSyncronia
0xA1FA	0x6953 ;?ICS_tableSyncronia+0
0xA1FC	0x636E ;?ICS_tableSyncronia+2
0xA1FE	0x6F72 ;?ICS_tableSyncronia+4
0xA200	0x696E ;?ICS_tableSyncronia+6
0xA202	0x0061 ;?ICS_tableSyncronia+8
; end of ?ICS_tableSyncronia
;Expendedora.c,0 :: ?ICS?lstr2_Expendedora
0xA204	0x7845 ;?ICS?lstr2_Expendedora+0
0xA206	0x6570 ;?ICS?lstr2_Expendedora+2
0xA208	0x646E ;?ICS?lstr2_Expendedora+4
0xA20A	0x6465 ;?ICS?lstr2_Expendedora+6
0xA20C	0x726F ;?ICS?lstr2_Expendedora+8
0xA20E	0x0061 ;?ICS?lstr2_Expendedora+10
; end of ?ICS?lstr2_Expendedora
;Expendedora.c,0 :: ?ICS?lstr24_Expendedora
0xA210	0x7543 ;?ICS?lstr24_Expendedora+0
0xA212	0x6F70 ;?ICS?lstr24_Expendedora+2
0xA214	0x6C20 ;?ICS?lstr24_Expendedora+4
0xA216	0x656C ;?ICS?lstr24_Expendedora+6
0xA218	0x6F6E ;?ICS?lstr24_Expendedora+8
0xA21A	0x00 ;?ICS?lstr24_Expendedora+10
; end of ?ICS?lstr24_Expendedora
;Expendedora.c,0 :: ?ICS_tempLCD
0xA21B	0x00 ;?ICS_tempLCD+0
; end of ?ICS_tempLCD
;Expendedora.c,0 :: ?ICS_limpiarLCD
0xA21C	0x00 ;?ICS_limpiarLCD+0
; end of ?ICS_limpiarLCD
;Expendedora.c,0 :: ?ICS?lstr25_Expendedora
0xA21D	0x6D49 ;?ICS?lstr25_Expendedora+0
0xA21F	0x7270 ;?ICS?lstr25_Expendedora+2
0xA221	0x6D69 ;?ICS?lstr25_Expendedora+4
0xA223	0x6E65 ;?ICS?lstr25_Expendedora+6
0xA225	0x6F64 ;?ICS?lstr25_Expendedora+8
0xA227	0x2E2E ;?ICS?lstr25_Expendedora+10
0xA229	0x002E ;?ICS?lstr25_Expendedora+12
; end of ?ICS?lstr25_Expendedora
;Expendedora.c,0 :: ?ICS?lstr26_Expendedora
0xA22B	0x6F54 ;?ICS?lstr26_Expendedora+0
0xA22D	0x656D ;?ICS?lstr26_Expendedora+2
0xA22F	0x7320 ;?ICS?lstr26_Expendedora+4
0xA231	0x2075 ;?ICS?lstr26_Expendedora+6
0xA233	0x6F62 ;?ICS?lstr26_Expendedora+8
0xA235	0x656C ;?ICS?lstr26_Expendedora+10
0xA237	0x6F74 ;?ICS?lstr26_Expendedora+12
0xA239	0x00 ;?ICS?lstr26_Expendedora+14
; end of ?ICS?lstr26_Expendedora
;Expendedora.c,0 :: ?ICS_eSensor
0xA23A	0x00 ;?ICS_eSensor+0
; end of ?ICS_eSensor
;Expendedora.c,0 :: ?ICS_folioTotal
0xA23B	0x6F74 ;?ICS_folioTotal+0
0xA23D	0x6174 ;?ICS_folioTotal+2
0xA23F	0x006C ;?ICS_folioTotal+4
; end of ?ICS_folioTotal
;Expendedora.c,0 :: ?ICS_tableFolio
0xA241	0x6F46 ;?ICS_tableFolio+0
0xA243	0x696C ;?ICS_tableFolio+2
0xA245	0x006F ;?ICS_tableFolio+4
; end of ?ICS_tableFolio
;Expendedora.c,0 :: ?ICS_eventosRegistro
0xA247	0x6572 ;?ICS_eventosRegistro+0
0xA249	0x6967 ;?ICS_eventosRegistro+2
0xA24B	0x7473 ;?ICS_eventosRegistro+4
0xA24D	0x6F72 ;?ICS_eventosRegistro+6
0xA24F	0x00 ;?ICS_eventosRegistro+8
; end of ?ICS_eventosRegistro
;Expendedora.c,0 :: ?ICS_eventosEstatus
0xA250	0x7365 ;?ICS_eventosEstatus+0
0xA252	0x6174 ;?ICS_eventosEstatus+2
0xA254	0x7574 ;?ICS_eventosEstatus+4
0xA256	0x0073 ;?ICS_eventosEstatus+6
; end of ?ICS_eventosEstatus
;Expendedora.c,0 :: ?ICS_tableEventosCAN
0xA258	0x7645 ;?ICS_tableEventosCAN+0
0xA25A	0x6E65 ;?ICS_tableEventosCAN+2
0xA25C	0x6F74 ;?ICS_tableEventosCAN+4
0xA25E	0x4373 ;?ICS_tableEventosCAN+6
0xA260	0x4E41 ;?ICS_tableEventosCAN+8
0xA262	0x00 ;?ICS_tableEventosCAN+10
; end of ?ICS_tableEventosCAN
;Expendedora.c,0 :: ?ICS_canId
0xA263	0x01 ;?ICS_canId+0
; end of ?ICS_canId
;Expendedora.c,0 :: ?ICS?lstr35_Expendedora
0xA264	0x0031 ;?ICS?lstr35_Expendedora+0
; end of ?ICS?lstr35_Expendedora
;Expendedora.c,0 :: ?ICS_abrirBarrera
0xA266	0x00 ;?ICS_abrirBarrera+0
; end of ?ICS_abrirBarrera
;Expendedora.c,0 :: ?ICS?lstr3_Expendedora
0xA267	0x7845 ;?ICS?lstr3_Expendedora+0
0xA269	0x6570 ;?ICS?lstr3_Expendedora+2
0xA26B	0x646E ;?ICS?lstr3_Expendedora+4
0xA26D	0x6465 ;?ICS?lstr3_Expendedora+6
0xA26F	0x726F ;?ICS?lstr3_Expendedora+8
0xA271	0x0061 ;?ICS?lstr3_Expendedora+10
; end of ?ICS?lstr3_Expendedora
;Expendedora.c,0 :: ?ICS_flagSecondTMR3
0xA273	0x00 ;?ICS_flagSecondTMR3+0
; end of ?ICS_flagSecondTMR3
;Expendedora.c,0 :: ?ICS_modeBufferEventos
0xA274	0x00 ;?ICS_modeBufferEventos+0
; end of ?ICS_modeBufferEventos
;Expendedora.c,0 :: ?ICS_temp_heartbeat
0xA275	0x0000 ;?ICS_temp_heartbeat+0
; end of ?ICS_temp_heartbeat
;Expendedora.c,0 :: ?ICS?lstr18_Expendedora
0xA277	0x6150 ;?ICS?lstr18_Expendedora+0
0xA279	0x7373 ;?ICS?lstr18_Expendedora+2
0xA27B	0x6162 ;?ICS?lstr18_Expendedora+4
0xA27D	0x6B63 ;?ICS?lstr18_Expendedora+6
0xA27F	0x6120 ;?ICS?lstr18_Expendedora+8
0xA281	0x7463 ;?ICS?lstr18_Expendedora+10
0xA283	0x7669 ;?ICS?lstr18_Expendedora+12
0xA285	0x006F ;?ICS?lstr18_Expendedora+14
; end of ?ICS?lstr18_Expendedora
;Expendedora.c,0 :: ?ICS?lstr17_Expendedora
0xA287	0x6153 ;?ICS?lstr17_Expendedora+0
0xA289	0x646C ;?ICS?lstr17_Expendedora+2
0xA28B	0x206F ;?ICS?lstr17_Expendedora+4
0xA28D	0x6761 ;?ICS?lstr17_Expendedora+6
0xA28F	0x746F ;?ICS?lstr17_Expendedora+8
0xA291	0x6461 ;?ICS?lstr17_Expendedora+10
0xA293	0x006F ;?ICS?lstr17_Expendedora+12
; end of ?ICS?lstr17_Expendedora
;Expendedora.c,0 :: ?ICS_tableKeyOutNip
0xA295	0x654B ;?ICS_tableKeyOutNip+0
0xA297	0x4E79 ;?ICS_tableKeyOutNip+2
0xA299	0x7069 ;?ICS_tableKeyOutNip+4
0xA29B	0x00 ;?ICS_tableKeyOutNip+6
; end of ?ICS_tableKeyOutNip
;Expendedora.c,0 :: ?ICS_keyOutEstatus
0xA29C	0x7365 ;?ICS_keyOutEstatus+0
0xA29E	0x6174 ;?ICS_keyOutEstatus+2
0xA2A0	0x7574 ;?ICS_keyOutEstatus+4
0xA2A2	0x0073 ;?ICS_keyOutEstatus+6
; end of ?ICS_keyOutEstatus
;Expendedora.c,0 :: ?ICS_keyOutNip
0xA2A4	0x696E ;?ICS_keyOutNip+0
0xA2A6	0x0070 ;?ICS_keyOutNip+2
; end of ?ICS_keyOutNip
;Expendedora.c,0 :: ?ICS?lstr16_Expendedora
0xA2A8	0x6341 ;?ICS?lstr16_Expendedora+0
0xA2AA	0x6563 ;?ICS?lstr16_Expendedora+2
0xA2AC	0x6F73 ;?ICS?lstr16_Expendedora+4
0xA2AE	0x6120 ;?ICS?lstr16_Expendedora+6
0xA2B0	0x6563 ;?ICS?lstr16_Expendedora+8
0xA2B2	0x7470 ;?ICS?lstr16_Expendedora+10
0xA2B4	0x6461 ;?ICS?lstr16_Expendedora+12
0xA2B6	0x006F ;?ICS?lstr16_Expendedora+14
; end of ?ICS?lstr16_Expendedora
;Expendedora.c,0 :: ?ICS?lstr14_Expendedora
0xA2B8	0x6150 ;?ICS?lstr14_Expendedora+0
0xA2BA	0x7373 ;?ICS?lstr14_Expendedora+2
0xA2BC	0x6162 ;?ICS?lstr14_Expendedora+4
0xA2BE	0x6B63 ;?ICS?lstr14_Expendedora+6
0xA2C0	0x6120 ;?ICS?lstr14_Expendedora+8
0xA2C2	0x7463 ;?ICS?lstr14_Expendedora+10
0xA2C4	0x7669 ;?ICS?lstr14_Expendedora+12
0xA2C6	0x006F ;?ICS?lstr14_Expendedora+14
; end of ?ICS?lstr14_Expendedora
;Expendedora.c,0 :: ?ICS?lstr13_Expendedora
0xA2C8	0x6153 ;?ICS?lstr13_Expendedora+0
0xA2CA	0x646C ;?ICS?lstr13_Expendedora+2
0xA2CC	0x206F ;?ICS?lstr13_Expendedora+4
0xA2CE	0x6574 ;?ICS?lstr13_Expendedora+6
0xA2D0	0x6D72 ;?ICS?lstr13_Expendedora+8
0xA2D2	0x6E69 ;?ICS?lstr13_Expendedora+10
0xA2D4	0x6461 ;?ICS?lstr13_Expendedora+12
0xA2D6	0x006F ;?ICS?lstr13_Expendedora+14
; end of ?ICS?lstr13_Expendedora
;Expendedora.c,0 :: ?ICS?lstr15_Expendedora
0xA2D8	0x6154 ;?ICS?lstr15_Expendedora+0
0xA2DA	0x6A72 ;?ICS?lstr15_Expendedora+2
0xA2DC	0x7465 ;?ICS?lstr15_Expendedora+4
0xA2DE	0x2061 ;?ICS?lstr15_Expendedora+6
0xA2E0	0x6564 ;?ICS?lstr15_Expendedora+8
0xA2E2	0x6373 ;?ICS?lstr15_Expendedora+10
0xA2E4	0x6E6F ;?ICS?lstr15_Expendedora+12
0xA2E6	0x636F ;?ICS?lstr15_Expendedora+14
0xA2E8	0x6469 ;?ICS?lstr15_Expendedora+16
0xA2EA	0x0061 ;?ICS?lstr15_Expendedora+18
; end of ?ICS?lstr15_Expendedora
;Expendedora.c,0 :: ?ICS_prepagoId
0xA2EC	0x6469 ;?ICS_prepagoId+0
0xA2EE	0x00 ;?ICS_prepagoId+2
; end of ?ICS_prepagoId
;Expendedora.c,0 :: ?ICS_prepagoNip
0xA2EF	0x696E ;?ICS_prepagoNip+0
0xA2F1	0x0070 ;?ICS_prepagoNip+2
; end of ?ICS_prepagoNip
;Expendedora.c,0 :: ?ICS?lstr23_Expendedora
0xA2F3	0x694E ;?ICS?lstr23_Expendedora+0
0xA2F5	0x2070 ;?ICS?lstr23_Expendedora+2
0xA2F7	0x6564 ;?ICS?lstr23_Expendedora+4
0xA2F9	0x6373 ;?ICS?lstr23_Expendedora+6
0xA2FB	0x6F6E ;?ICS?lstr23_Expendedora+8
0xA2FD	0x6963 ;?ICS?lstr23_Expendedora+10
0xA2FF	0x6F64 ;?ICS?lstr23_Expendedora+12
0xA301	0x00 ;?ICS?lstr23_Expendedora+14
; end of ?ICS?lstr23_Expendedora
;Expendedora.c,0 :: ?ICS?lstr19_Expendedora
0xA302	0x0030 ;?ICS?lstr19_Expendedora+0
; end of ?ICS?lstr19_Expendedora
;Expendedora.c,0 :: ?ICS_keyOutDate
0xA304	0x6164 ;?ICS_keyOutDate+0
0xA306	0x6574 ;?ICS_keyOutDate+2
0xA308	0x00 ;?ICS_keyOutDate+4
; end of ?ICS_keyOutDate
;Expendedora.c,0 :: ?ICS?lstr20_Expendedora
0xA309	0x494E ;?ICS?lstr20_Expendedora+0
0xA30B	0x2050 ;?ICS?lstr20_Expendedora+2
0xA30D	0x6361 ;?ICS?lstr20_Expendedora+4
0xA30F	0x7065 ;?ICS?lstr20_Expendedora+6
0xA311	0x6174 ;?ICS?lstr20_Expendedora+8
0xA313	0x6F64 ;?ICS?lstr20_Expendedora+10
0xA315	0x00 ;?ICS?lstr20_Expendedora+12
; end of ?ICS?lstr20_Expendedora
;Expendedora.c,0 :: ?ICS?lstr22_Expendedora
0xA316	0x494E ;?ICS?lstr22_Expendedora+0
0xA318	0x2050 ;?ICS?lstr22_Expendedora+2
0xA31A	0x6E69 ;?ICS?lstr22_Expendedora+4
0xA31C	0x6176 ;?ICS?lstr22_Expendedora+6
0xA31E	0x696C ;?ICS?lstr22_Expendedora+8
0xA320	0x6F64 ;?ICS?lstr22_Expendedora+10
0xA322	0x002A ;?ICS?lstr22_Expendedora+12
; end of ?ICS?lstr22_Expendedora
;Expendedora.c,0 :: ?ICS?lstr21_Expendedora
0xA324	0x494E ;?ICS?lstr21_Expendedora+0
0xA326	0x2050 ;?ICS?lstr21_Expendedora+2
0xA328	0x6564 ;?ICS?lstr21_Expendedora+4
0xA32A	0x6373 ;?ICS?lstr21_Expendedora+6
0xA32C	0x6E6F ;?ICS?lstr21_Expendedora+8
0xA32E	0x636F ;?ICS?lstr21_Expendedora+10
0xA330	0x6469 ;?ICS?lstr21_Expendedora+12
0xA332	0x2A6F ;?ICS?lstr21_Expendedora+14
0xA334	0x00 ;?ICS?lstr21_Expendedora+16
; end of ?ICS?lstr21_Expendedora
;Expendedora.c,0 :: ?ICS?lstr6_Expendedora
0xA335	0x6143 ;?ICS?lstr6_Expendedora+0
0xA337	0x6472 ;?ICS?lstr6_Expendedora+2
0xA339	0x7320 ;?ICS?lstr6_Expendedora+4
0xA33B	0x706F ;?ICS?lstr6_Expendedora+6
0xA33D	0x726F ;?ICS?lstr6_Expendedora+8
0xA33F	0x2074 ;?ICS?lstr6_Expendedora+10
0xA341	0x6C62 ;?ICS?lstr6_Expendedora+12
0xA343	0x636F ;?ICS?lstr6_Expendedora+14
0xA345	0x006B ;?ICS?lstr6_Expendedora+16
; end of ?ICS?lstr6_Expendedora
;Expendedora.c,0 :: ?ICS_soporteID
0xA347	0x6469 ;?ICS_soporteID+0
0xA349	0x00 ;?ICS_soporteID+2
; end of ?ICS_soporteID
;Expendedora.c,0 :: ?ICS?lstr7_Expendedora
0xA34A	0x6154 ;?ICS?lstr7_Expendedora+0
0xA34C	0x6A72 ;?ICS?lstr7_Expendedora+2
0xA34E	0x7465 ;?ICS?lstr7_Expendedora+4
0xA350	0x2061 ;?ICS?lstr7_Expendedora+6
0xA352	0x6C62 ;?ICS?lstr7_Expendedora+8
0xA354	0x716F ;?ICS?lstr7_Expendedora+10
0xA356	0x6575 ;?ICS?lstr7_Expendedora+12
0xA358	0x6461 ;?ICS?lstr7_Expendedora+14
0xA35A	0x0061 ;?ICS?lstr7_Expendedora+16
; end of ?ICS?lstr7_Expendedora
;Expendedora.c,120 :: _CAN_TABLE_MODIFICADO
0xA35C	0x4F4D ;_CAN_TABLE_MODIFICADO+0
0xA35E	0x4944 ;_CAN_TABLE_MODIFICADO+2
0xA360	0x4946 ;_CAN_TABLE_MODIFICADO+4
0xA362	0x4143 ;_CAN_TABLE_MODIFICADO+6
0xA364	0x4F44 ;_CAN_TABLE_MODIFICADO+8
0xA366	0x00 ;_CAN_TABLE_MODIFICADO+10
; end of _CAN_TABLE_MODIFICADO
;Expendedora.c,158 :: _ticketAddr
0xA367	0x0100 ;_ticketAddr+0
0xA369	0x0114 ;_ticketAddr+2
0xA36B	0x011F ;_ticketAddr+4
0xA36D	0x013D ;_ticketAddr+6
0xA36F	0x0000 ;_ticketAddr+8
; end of _ticketAddr
;Expendedora.c,121 :: _CAN_TABLE_NO_FOUND
0xA371	0x4F4E ;_CAN_TABLE_NO_FOUND+0
0xA373	0x4620 ;_CAN_TABLE_NO_FOUND+2
0xA375	0x554F ;_CAN_TABLE_NO_FOUND+4
0xA377	0x444E ;_CAN_TABLE_NO_FOUND+6
0xA379	0x00 ;_CAN_TABLE_NO_FOUND+8
; end of _CAN_TABLE_NO_FOUND
;Expendedora.c,119 :: _CAN_TABLE_ERROR
0xA37A	0x5245 ;_CAN_TABLE_ERROR+0
0xA37C	0x4F52 ;_CAN_TABLE_ERROR+2
0xA37E	0x0052 ;_CAN_TABLE_ERROR+4
; end of _CAN_TABLE_ERROR
;Expendedora.c,586 :: expendedora_checkTarjeta_ACCESO_DENEGADO_L0
0xA380	0x4E4E ;expendedora_checkTarjeta_ACCESO_DENEGADO_L0+0
0xA382	0x4E4E ;expendedora_checkTarjeta_ACCESO_DENEGADO_L0+2
0xA384	0x00 ;expendedora_checkTarjeta_ACCESO_DENEGADO_L0+4
; end of expendedora_checkTarjeta_ACCESO_DENEGADO_L0
;Expendedora.c,94 :: _CAN_COCHE_OUT
0xA385	0x4143 ;_CAN_COCHE_OUT+0
0xA387	0x4F52 ;_CAN_COCHE_OUT+2
0xA389	0x00 ;_CAN_COCHE_OUT+4
; end of _CAN_COCHE_OUT
;Expendedora.c,474 :: expendedora_barrera_BARRERA_ABIERTA_L0
0xA38A	0x504F ;expendedora_barrera_BARRERA_ABIERTA_L0+0
0xA38C	0x4E45 ;expendedora_barrera_BARRERA_ABIERTA_L0+2
0xA38E	0x00 ;expendedora_barrera_BARRERA_ABIERTA_L0+4
; end of expendedora_barrera_BARRERA_ABIERTA_L0
;Expendedora.c,93 :: _CAN_COCHE_IN
0xA38F	0x4143 ;_CAN_COCHE_IN+0
0xA391	0x4952 ;_CAN_COCHE_IN+2
0xA393	0x00 ;_CAN_COCHE_IN+4
; end of _CAN_COCHE_IN
;Expendedora.c,112 :: _CAN_TABLE_ERASE
0xA394	0x5245 ;_CAN_TABLE_ERASE+0
0xA396	0x0053 ;_CAN_TABLE_ERASE+2
; end of _CAN_TABLE_ERASE
;Expendedora.c,111 :: _CAN_TABLE_INFO
0xA398	0x4E49 ;_CAN_TABLE_INFO+0
0xA39A	0x0046 ;_CAN_TABLE_INFO+2
; end of _CAN_TABLE_INFO
;Expendedora.c,1251 :: can_user_read_message_FILAS_ACTUALES_L0
0xA39C	0x5246 ;can_user_read_message_FILAS_ACTUALES_L0+0
0xA39E	0x003A ;can_user_read_message_FILAS_ACTUALES_L0+2
; end of can_user_read_message_FILAS_ACTUALES_L0
;Expendedora.c,110 :: _CAN_TABLE
0xA3A0	0x4254 ;_CAN_TABLE+0
0xA3A2	0x004C ;_CAN_TABLE+2
; end of _CAN_TABLE
;Expendedora.c,103 :: _CAN_SALDO
0xA3A4	0x4C53 ;_CAN_SALDO+0
0xA3A6	0x0044 ;_CAN_SALDO+2
; end of _CAN_SALDO
;Expendedora.c,106 :: _CAN_SOPORTE
0xA3A8	0x4F53 ;_CAN_SOPORTE+0
0xA3AA	0x0050 ;_CAN_SOPORTE+2
; end of _CAN_SOPORTE
;Expendedora.c,105 :: _CAN_SPECIAL_SALDO
0xA3AC	0x5053 ;_CAN_SPECIAL_SALDO+0
0xA3AE	0x0053 ;_CAN_SPECIAL_SALDO+2
; end of _CAN_SPECIAL_SALDO
;Expendedora.c,1252 :: can_user_read_message_FILAS_PROG_L0
0xA3B0	0x5046 ;can_user_read_message_FILAS_PROG_L0+0
0xA3B2	0x003A ;can_user_read_message_FILAS_PROG_L0+2
; end of can_user_read_message_FILAS_PROG_L0
;Expendedora.c,134 :: _CAN_ABRIR
0xA3B4	0x504F ;_CAN_ABRIR+0
0xA3B6	0x004E ;_CAN_ABRIR+2
; end of _CAN_ABRIR
;Expendedora.c,133 :: _CAN_CUPO
0xA3B8	0x5543 ;_CAN_CUPO+0
0xA3BA	0x0050 ;_CAN_CUPO+2
; end of _CAN_CUPO
;Expendedora.c,123 :: _CAN_TPV
0xA3BC	0x5054 ;_CAN_TPV+0
0xA3BE	0x0056 ;_CAN_TPV+2
; end of _CAN_TPV
;Expendedora.c,135 :: _CAN_OUT
0xA3C0	0x554F ;_CAN_OUT+0
0xA3C2	0x0054 ;_CAN_OUT+2
; end of _CAN_OUT
;Expendedora.c,131 :: _CAN_CMD
0xA3C4	0x4D43 ;_CAN_CMD+0
0xA3C6	0x0044 ;_CAN_CMD+2
; end of _CAN_CMD
;Expendedora.c,127 :: _CAN_TBL
0xA3C8	0x4254 ;_CAN_TBL+0
0xA3CA	0x004C ;_CAN_TBL+2
; end of _CAN_TBL
;Expendedora.c,113 :: _CAN_TABLE_RW
0xA3CC	0x5254 ;_CAN_TABLE_RW+0
0xA3CE	0x0057 ;_CAN_TABLE_RW+2
; end of _CAN_TABLE_RW
;Expendedora.c,115 :: _CAN_TABLE_WRITE
0xA3D0	0x4254 ;_CAN_TABLE_WRITE+0
0xA3D2	0x0057 ;_CAN_TABLE_WRITE+2
; end of _CAN_TABLE_WRITE
;Expendedora.c,114 :: _CAN_TABLE_READ
0xA3D4	0x4254 ;_CAN_TABLE_READ+0
0xA3D6	0x0052 ;_CAN_TABLE_READ+2
; end of _CAN_TABLE_READ
;Expendedora.c,102 :: _CAN_PREPAGO
0xA3D8	0x5250 ;_CAN_PREPAGO+0
0xA3DA	0x0045 ;_CAN_PREPAGO+2
; end of _CAN_PREPAGO
;Expendedora.c,101 :: _CAN_PASSBACK
0xA3DC	0x4150 ;_CAN_PASSBACK+0
0xA3DE	0x0053 ;_CAN_PASSBACK+2
; end of _CAN_PASSBACK
;Expendedora.c,126 :: _CAN_NIP
0xA3E0	0x494E ;_CAN_NIP+0
0xA3E2	0x0050 ;_CAN_NIP+2
; end of _CAN_NIP
;Expendedora.c,104 :: _CAN_SPECIAL_DATE
0xA3E4	0x5053 ;_CAN_SPECIAL_DATE+0
0xA3E6	0x0044 ;_CAN_SPECIAL_DATE+2
; end of _CAN_SPECIAL_DATE
;Expendedora.c,473 :: expendedora_barrera_CAN_BAR_L0
0xA3E8	0x4142 ;expendedora_barrera_CAN_BAR_L0+0
0xA3EA	0x0052 ;expendedora_barrera_CAN_BAR_L0+2
; end of expendedora_barrera_CAN_BAR_L0
;Expendedora.c,125 :: _CAN_FOL
0xA3EC	0x4F46 ;_CAN_FOL+0
0xA3EE	0x004C ;_CAN_FOL+2
; end of _CAN_FOL
;Expendedora.c,96 :: _CAN_PENSIONADO
0xA3F0	0x4550 ;_CAN_PENSIONADO+0
0xA3F2	0x004E ;_CAN_PENSIONADO+2
; end of _CAN_PENSIONADO
;Expendedora.c,124 :: _CAN_IDX
0xA3F4	0x4449 ;_CAN_IDX+0
0xA3F6	0x0058 ;_CAN_IDX+2
; end of _CAN_IDX
;Expendedora.c,108 :: _CAN_RTC
0xA3F8	0x5452 ;_CAN_RTC+0
0xA3FA	0x0043 ;_CAN_RTC+2
; end of _CAN_RTC
;Expendedora.c,99 :: _CAN_CONSULTAR
0xA3FC	0x4F43 ;_CAN_CONSULTAR+0
0xA3FE	0x004E ;_CAN_CONSULTAR+2
; end of _CAN_CONSULTAR
;Expendedora.c,116 :: _CAN_TABLE_GET
0xA400	0x4547 ;_CAN_TABLE_GET+0
0xA402	0x0054 ;_CAN_TABLE_GET+2
; end of _CAN_TABLE_GET
;Expendedora.c,117 :: _CAN_TABLE_SET
0xA404	0x4553 ;_CAN_TABLE_SET+0
0xA406	0x0054 ;_CAN_TABLE_SET+2
; end of _CAN_TABLE_SET
;Expendedora.c,100 :: _CAN_VIGENCIA
0xA408	0x4956 ;_CAN_VIGENCIA+0
0xA40A	0x0047 ;_CAN_VIGENCIA+2
; end of _CAN_VIGENCIA
;Expendedora.c,132 :: _CAN_KEY
0xA40C	0x454B ;_CAN_KEY+0
0xA40E	0x0059 ;_CAN_KEY+2
; end of _CAN_KEY
;Expendedora.c,97 :: _CAN_REGISTRAR
0xA410	0x4552 ;_CAN_REGISTRAR+0
0xA412	0x0047 ;_CAN_REGISTRAR+2
; end of _CAN_REGISTRAR
;Expendedora.c,98 :: _CAN_ACTUALIZAR
0xA414	0x4341 ;_CAN_ACTUALIZAR+0
0xA416	0x0054 ;_CAN_ACTUALIZAR+2
; end of _CAN_ACTUALIZAR
;Expendedora.c,1021 :: expendedora_imprimir_convenio_L0
0xA418	0x3131 ;expendedora_imprimir_convenio_L0+0
0xA41A	0x00 ;expendedora_imprimir_convenio_L0+2
; end of expendedora_imprimir_convenio_L0
;Expendedora.c,31 :: _USART_NEW_LINE
0xA41B	0x0A0D ;_USART_NEW_LINE+0
0xA41D	0x00 ;_USART_NEW_LINE+2
; end of _USART_NEW_LINE
;Expendedora.c,129 :: _CAN_MODULE
0xA41E	0x0045 ;_CAN_MODULE+0
; end of _CAN_MODULE
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C      [94]    _I2C_soft_write
0x007A      [84]    _I2C_soft_read
0x00CE      [30]    _I2C_soft_stop
0x00EC      [34]    _I2C_soft_start
0x010E      [98]    _strncmp
0x0170     [600]    _SDIV3232L
0x03C8      [24]    _COMFREM
0x03E0     [130]    _eeprom_i2c_read
0x0462      [62]    _lcd_send_nibble
0x04A0       [8]    _Swap
0x04A8      [80]    _Mul_16X16_U
0x04F8      [50]    _lcd_send_byte
0x052A     [346]    _Div_32x32_S
0x0684     [268]    _mysql_exist
0x0790      [82]    _Mul_32x32_U
0x07E2      [10]    _Delay_1us
0x07EC      [78]    _lcd_gotoxy
0x083A     [470]    __mysql_calculate_address
0x0A10      [30]    _Div_8X8_U
0x0A2E     [178]    _numToString
0x0AE0      [18]    __Lib_SoftI2C_PutZerosToLATSda
0x0AF2      [18]    __Lib_SoftI2C_PutZerosToLATScl
0x0B04     [142]    _eeprom_i2c_write
0x0B92      [24]    _isdigit
0x0BAA     [118]    _clamp_shift
0x0C20      [50]    _Soft_I2C_Stop
0x0C52      [46]    _decToBcd
0x0C80      [66]    _isxdigit
0x0CC2      [32]    _isspace
0x0CE2      [22]    _tolower
0x0CF8     [696]    _DS1307_date
0x0FB0      [24]    _isupper
0x0FC8     [268]    _Soft_I2C_Write
0x10D4     [126]    _can_write_text
0x1152     [160]    _mysql_write_forced
0x11F2      [30]    _string_len
0x1210      [84]    _string_isNumeric
0x1264      [38]    _Soft_I2C_Start
0x128A     [230]    _mysql_write_roundTrip
0x1370     [162]    _stringToNumN
0x1412     [146]    _mysql_read_forced
0x14A4     [176]    _Soft_I2C_Read
0x1554     [176]    _mysql_read
0x1604      [14]    _RES032
0x1612      [26]    _lcd_chr
0x162C      [58]    _strlen
0x1666      [24]    _SETFOV32
0x167E      [26]    _SETFUN32
0x1698      [38]    _bcdToDec
0x16BE       [8]    _FIXSIGN32
0x16C6     [214]    _atoi
0x179C     [562]    _DS1307_write_string
0x19CE     [246]    _xtoi
0x1AC4     [328]    _mysql_write_string
0x1C0C      [74]    _mysql_erase
0x1C56      [80]    _can_set_operation
0x1CA6      [28]    _SETIOV3224
0x1CC2      [54]    _Div_16X16_U
0x1CF8     [748]    _Div_32x32_U
0x1FE4       [8]    _SETFDZ32
0x1FEC      [12]    _usart_write
0x1FF8      [10]    _timer1_reset
0x2002      [62]    _lcd_out
0x2040     [110]    _string_toUpper
0x20AE      [14]    _timer1_enable
0x20BC     [478]    _hexToNum
0x229A     [192]    _mysql_search_forced
0x235A     [606]    _DS1307_read
0x25B8     [312]    _mysql_write
0x26F0      [66]    _string_cmpnc
0x2732     [162]    _stringToNum
0x27D4      [62]    _string_push
0x2812      [96]    _string_cpyc
0x2872      [78]    _string_cpyn
0x28C0     [146]    _mysql_read_string
0x2952     [198]    _buffer_save_send
0x2A18     [120]    _string_addc
0x2A90      [96]    _string_add
0x2AF0      [32]    _lcd_clean_row
0x2B10     [254]    _can_get_id
0x2C0E     [148]    _can_set_id
0x2CA2     [328]    _numToHex
0x2DEA       [6]    _I2C_soft_init
0x2DF0     [490]    _NRM4032
0x2FDA       [2]    _can_user_guardHeartBeat
0x2FDC      [14]    _external_int1_enable
0x2FEA     [738]    _can_write
0x32CC     [312]    _double2longword
0x3404     [982]    _can_read
0x37DA      [22]    _Soft_I2C_Init
0x37F0     [426]    _timer2_open
0x399A      [36]    _external_int1_open
0x39BE      [26]    _external_int0_open
0x39D8      [76]    _can_set_mode
0x3A24      [14]    _external_int0_enable
0x3A32       [6]    _eeprom_i2c_open
0x3A38     [312]    _can_set_baud
0x3B70     [878]    _impresoraTerm_writeDinamicText
0x3EDE     [110]    _can_user_write_message
0x3F4C     [226]    _LongWordToStr
0x402E      [94]    _wiegand26_checkTouch
0x408C      [38]    _longword2double
0x40B2   [10500]    _can_user_read_message
0x69B6     [380]    _Div_32x32_FP
0x6B32      [54]    _string_cmpn
0x6B68     [282]    _timer1_open
0x6C82      [32]    _lcd_cmd
0x6CA2     [200]    _usart_open
0x6D6A     [284]    _timer3_open
0x6E86       [6]    _DS1307_open
0x6E8C      [20]    _EEPROM_Read
0x6EA0     [200]    _lcd_init
0x6F68     [226]    _expendedora_ticket
0x704A      [50]    _int_external_int0
0x707C      [52]    _int_external_int1
0x70B0      [78]    _string_pop
0x70FE     [192]    _mysql_search
0x71BE      [76]    _mysql_init
0x720A     [386]    _encrypt_basic
0x738C      [74]    _wiegand26_open
0x73D6     [182]    _DS1307_getSeconds
0x748C      [68]    _usart_write_line
0x74D0      [74]    _can_heartbeat
0x751A      [46]    _can_desonexion
0x7548     [260]    _LongToStr
0x764C     [586]    _can_do_write_message
0x7896     [318]    _wiegand26_read_card
0x79D4      [72]    _string_cpy
0x7A1C      [20]    _wiegand26_enable
0x7A30     [118]    _clamp
0x7AA6     [360]    _wiegand26_read_nip
0x7C0E      [70]    _can_interrupt
0x7C54     [460]    _can_do_read_message
0x7E20     [144]    _mysql_count_forced
0x7EB0     [572]    _can_open
0x80EC      [80]    _int_timer2
0x813C      [38]    _int_timer1
0x8162      [68]    _int_timer3
0x81A6      [10]    _int_wiegand26
0x81B0      [44]    _int_can
0x81DC     [252]    _expendedora_temporizadores
0x82D8     [278]    _expendedora_barrera
0x83EE    [4074]    _expendedora_checkTarjeta
0x93D8    [1230]    _expendedora_imprimir
0x98A6      [14]    _can_do_work
0x98B4     [228]    _expendedora_bufferEventos
0x9998     [506]    _pic_init
0x9B92      [16]    ___CC2DW
0x9BA2      [28]    _main
0x9BBE      [56]    _interrupt_low
0x9BF6      [14]    _interrupt
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATScl_temp_scl_L0
0x0000       [1]    EEPROM_Write_SaveINTCON_L0
0x0000       [1]    FLASH_Erase_64_SaveINTCON_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATSda_temp_sda_L0
0x0000       [1]    SPI1_Write_tmp_L0
0x0000       [1]    UART1_Init_tmp_L0
0x0001       [1]    __Lib_PS2_Wait_Falling_nsample_L0
0x0001       [1]    UART1_Read___tmp_UART1_Read_L0
0x0001       [1]    I2C1_Rd_tmp_L0
0x0001       [2]    FLASH_Read_N_Bytes_i_L0
0x0001       [1]    FLASH_Write_64_i_L0
0x0001       [1]    FLASH_Erase_Write_64_i_L0
0x0001       [1]    string_cmpn_cont_L0
0x0001       [1]    string_cpyn_cont_L0
0x0001       [1]    ispunct_rslt_L0
0x0001       [1]    ?FLOC___int_usart_rxT614
0x0001       [1]    R1
0x0001       [1]    I2C_soft_read_i_L0
0x0001       [1]    I2C_soft_write_i_L0
0x0002       [2]    strlen_cp_L0
0x0002       [2]    strlen_28j60_cp_L0
0x0002       [2]    memset_28j60_pp_L0
0x0002       [1]    string_pop_result_L0
0x0002       [2]    memcpy_28j60_dd_L0
0x0002       [1]    FLASH_Erase_Write_64_j_L0
0x0002       [2]    memcpy_dd_L0
0x0002       [2]    memchr_s_L0
0x0002       [1]    R2
0x0002       [1]    FLASH_Write_64_SaveINTCON_L0
0x0002       [2]    memset_pp_L0
0x0002       [1]    string_cmpnc_cont_L0
0x0003       [1]    __Lib_CAN_C_A_CANIDToRegs_loVal_L0
0x0003       [1]    MM_Init_i_L0
0x0003       [2]    __Lib_MmcFat16_f16_toInt_l_L0
0x0003       [2]    memmove_tt_L0
0x0003       [2]    Ltrim_original_L0
0x0003       [1]    FLASH_Erase_Write_64_SaveINTCON_L0
0x0003       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT29
0x0003       [2]    MM_TotalFreeMemSize_Tot_L0
0x0003       [1]    R3
0x0004       [2]    memcpy_28j60_ss_L0
0x0004       [1]    __Lib_CAN_C_A_CANIDToRegs_hiVal_L0
0x0004       [1]    R4
0x0004       [2]    memcpy_ss_L0
0x0004       [2]    frexp_pom_L0
0x0004       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT40
0x0004       [2]    strcpy_cp_L0
0x0004       [2]    strcat_cp_L0
0x0004       [2]    strncpy_cp_L0
0x0004       [2]    strncat_cp_L0
0x0004       [2]    __Lib_MemManager_MM_GetMemAlign_P_L0
0x0005       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT54
0x0005       [2]    LongWordToHex_input_half_L0
0x0005       [2]    memmove_ff_L0
0x0005       [1]    MM_TotalFreeMemSize_i_L0
0x0005       [2]    Ltrim_p_L0
0x0005       [2]    LongIntToHex_input_half_L0
0x0005       [1]    __Lib_CAN_C_A_CANIDToRegs_hrVal_L0
0x0005       [1]    R5
0x0006       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT69
0x0006       [1]    __Lib_MemManager_MM_GetMemAlign_i_L0
0x0006       [1]    __Lib_CAN_C_A_CANIDToRegs_hsVal_L0
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    wiegand26_read_card_i_L0
0x0009       [1]    R9
0x0009       [4]    __Lib_MmcFat16_f16_toLong_l_L0
0x000A       [1]    R10
0x000A       [1]    wiegand26_read_card_paridad_L0
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [4]    wiegand26_read_card_aux_L0
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [1]    ___Low_saveWREG
0x0016       [1]    ___Low_saveSTATUS
0x0017       [1]    ___Low_saveBSR
0x001B      [16]    ?lstr18_Expendedora
0x002B      [14]    ?lstr17_Expendedora
0x0039       [7]    _tableKeyOutNip
0x0040       [8]    _keyOutEstatus
0x0048       [4]    _keyOutNip
0x004C      [16]    ?lstr16_Expendedora
0x005C      [16]    ?lstr14_Expendedora
0x006C      [16]    ?lstr13_Expendedora
0x007C      [20]    ?lstr15_Expendedora
0x0090       [3]    _prepagoId
0x0093       [4]    _prepagoNip
0x0097      [15]    ?lstr23_Expendedora
0x00A6       [2]    ?lstr19_Expendedora
0x00A8       [5]    _keyOutDate
0x00AD      [13]    ?lstr20_Expendedora
0x00BA      [14]    ?lstr22_Expendedora
0x00C8      [17]    ?lstr21_Expendedora
0x00D9      [18]    ?lstr6_Expendedora
0x00EB       [3]    _soporteID
0x00EE      [18]    ?lstr7_Expendedora
0x0100      [20]    _ticketTime
0x0114      [11]    _ticketFolio
0x011F      [30]    _ticketCodigo
0x013D      [12]    _tablePensionados
0x0149      [19]    ?lstr8_Expendedora
0x015C       [8]    _tableSoporte
0x0164       [2]    ?lstr34_Expendedora
0x0166       [7]    ?lstr5_Expendedora
0x016D       [7]    ?lstr4_Expendedora
0x0174       [8]    _tablePrepago
0x017C      [16]    ?lstr11_Expendedora
0x018C       [8]    _prepagoEstatus
0x0194      [16]    ?lstr12_Expendedora
0x01A4       [6]    _prepagoSaldo
0x01AA      [19]    ?lstr10_Expendedora
0x01BD       [9]    _pensionadosVigencia
0x01C6       [3]    _pensionadosID
0x01C9       [8]    _pensionadosEstatus
0x01D1      [16]    ?lstr9_Expendedora
0x01E1       [1]    expendedora_checkTarjeta_buscarNIP_L0
0x01E2       [1]    expendedora_checkTarjeta_buscarID_L0
0x01E3       [1]    expendedora_temporizadores_isCanConect_L0
0x01E4      [16]    ?lstr32_Expendedora
0x01F4      [11]    ?lstr31_Expendedora
0x01FF       [2]    ?lstr33_Expendedora
0x0201       [1]    _flagTMR3
0x0202       [1]    can_do_write_message_maquinaE_L0
0x0203       [1]    int_timer3_temp_L0
0x0204       [1]    int_timer1_temp_L0
0x0205       [1]    can_do_read_message_len_L0
0x0206       [1]    expendedora_imprimir_btnCoche_L0
0x0207       [1]    expendedora_barrera_sensor_L0
0x0208       [1]    expendedora_imprimir_imprimir_L0
0x0209       [2]    expendedora_ticket_puntero_L0
0x020B       [4]    _canIp
0x020F      [17]    ?lstr1_Expendedora
0x0220       [4]    _canMask
0x0224       [5]    _prepagoDate
0x0229       [4]    ?lstr27_Expendedora
0x022D       [1]    ?lstr28_Expendedora
0x022E      [15]    ?lstr30_Expendedora
0x023D      [13]    ?lstr29_Expendedora
0x024A       [7]    _columnaEstado
0x0251       [5]    _tableCupo
0x0256      [10]    _tableSyncronia
0x0260      [12]    ?lstr2_Expendedora
0x026C      [11]    ?lstr24_Expendedora
0x0277       [1]    _tempLCD
0x0278       [1]    _limpiarLCD
0x0279      [14]    ?lstr25_Expendedora
0x0287      [15]    ?lstr26_Expendedora
0x0296       [1]    _eSensor
0x0297       [6]    _folioTotal
0x029D       [6]    _tableFolio
0x02A3       [9]    _eventosRegistro
0x02AC       [8]    _eventosEstatus
0x02B4      [11]    _tableEventosCAN
0x02BF       [1]    _canId
0x02C0       [2]    ?lstr35_Expendedora
0x02C2       [1]    _abrirBarrera
0x02C3      [12]    ?lstr3_Expendedora
0x02CF       [1]    _flagSecondTMR3
0x02D0       [1]    _modeBufferEventos
0x02D1       [2]    _temp_heartbeat
0x02D3       [4]    Expendedora_WIEGAN26_DATA
0x02D7       [4]    Expendedora_WIEGAN26_BUFFER
0x02DB       [1]    _canSynchrony
0x02DC       [2]    expendedora_checkTarjeta_fila_L0
0x02DE       [4]    expendedora_checkTarjeta_id_L0
0x02E2       [2]    expendedora_checkTarjeta_nip_L0
0x02E4       [0]    __Lib_SoftI2C___StopWaiting
0x02E5       [1]    can_do_write_message_finalizar_L0
0x02E6       [1]    can_do_write_message_datosEnviados_L0
0x02E7      [20]    expendedora_imprimir_tiempoEvento_L0
0x02FB       [2]    _sampler3
0x02FD       [2]    _WIEGAND_TEMP
0x02FF       [1]    _cupoLleno
0x0300       [1]    _tempSensor
0x0301       [4]    _folio
0x0305      [20]    _msjConst
0x0319      [48]    Expendedora_myTable
0x0349     [175]    _can
0x03F8       [2]    _pilaBufferCAN
0x03FA      [27]    _myRTC
0x0415      [64]    _bufferEeprom
0x0455       [2]    _pilaBufferPointer
0x0457       [5]    Expendedora_buffer
0x045C      [64]    _canCommand
0x049C       [1]    Expendedora_WIEGAN26_CONT
0x049D       [2]    _sampler1
0x049F       [1]    expendedora_bufferEventos_estatus_L0
0x049F       [1]    ?FLOC___expendedora_checkTarjetaT2673
0x04A0       [1]    ?FLOC___expendedora_checkTarjetaT2732
0x04A1       [1]    ?FLOC___expendedora_checkTarjetaT2819
0x04A2       [1]    expendedora_checkTarjeta_vigencia_L0
0x04A3       [1]    expendedora_checkTarjeta_estatus_L0
0x04A4       [5]    expendedora_checkTarjeta_acceso_L0
0x04A9       [4]    expendedora_checkTarjeta_saldo_L0
0x04AD       [4]    expendedora_checkTarjeta_seconds_L0
0x04B1      [13]    expendedora_checkTarjeta_fecha_L0
0x04BE       [1]    expendedora_checkTarjeta_isOtherToday_L0
0x04BF       [2]    FARG_wiegand26_read_card_id
0x04BF       [2]    FARG_string_pop_texto
0x04BF       [4]    can_do_read_message_id_L0
0x04BF       [4]    FARG_timer1_open_time_us
0x04BF       [2]    FARG_wiegand26_read_nip_nip
0x04BF       [4]    FARG_LongToStr_input
0x04BF       [2]    FARG_encrypt_basic_cadena
0x04BF       [2]    FARG_DS1307_getSeconds_HHMMSS
0x04BF       [1]    ?FLOC___can_do_write_messageT670
0x04BF       [2]    FARG_mysql_search_tabla
0x04BF       [2]    FARG_string_cpy_destino
0x04BF       [2]    FARG_usart_write_line_texto
0x04BF       [2]    can_heartbeat_cmdHeartBeat_L0
0x04BF       [2]    FARG_mysql_init_memoryMax
0x04BF       [2]    FARG_EEPROM_Read_address
0x04BF       [4]    FARG_usart_open_baudRate
0x04BF       [1]    FARG_lcd_cmd_comando
0x04BF      [65]    expendedora_ticket_buffer_L0
0x04BF       [4]    FARG_timer3_open_time_us
0x04BF       [4]    FARG_can_open_ip
0x04BF       [2]    FARG_string_cmpn_text1
0x04BF       [4]    FARG_clamp_valor
0x04BF       [1]    lcd_init_i_L0
0x04BF       [1]    FARG_can_interrupt_enable
0x04BF       [2]    FARG_mysql_count_forced_tabla
0x04C0       [1]    FARG_can_interrupt_hihgPriprity
0x04C0       [1]    ?FLOC___can_do_write_messageT701
0x04C1       [2]    FARG_string_cpy_origen
0x04C1       [2]    FARG_mysql_count_forced_columna
0x04C1       [1]    DS1307_getSeconds_cont_L0
0x04C1       [1]    can_do_write_message_cont_L0
0x04C1       [2]    FARG_string_cmpn_text2
0x04C1       [1]    wiegand26_read_nip_i_L0
0x04C1       [1]    usart_write_line_cont_L0
0x04C1       [2]    FARG_mysql_search_columna
0x04C1       [1]    string_pop_cont_L0
0x04C1       [1]    encrypt_basic_cont_L0
0x04C2       [4]    can_do_write_message_id_L0
0x04C2       [4]    DS1307_getSeconds_segundos_L0
0x04C3       [4]    FARG_can_open_mask
0x04C3       [4]    FARG_clamp_min
0x04C3       [1]    can_do_read_message_cont_L0
0x04C3       [1]    FARG_string_cmpn_bytes
0x04C3       [1]    FARG_timer3_open_powerOn
0x04C3       [4]    FARG_mysql_count_forced_buscar
0x04C3       [4]    FARG_mysql_search_buscar
0x04C3       [2]    FARG_LongToStr_output
0x04C3       [1]    string_cpy_cont_L0
0x04C3       [1]    FARG_timer1_open_powerOn
0x04C4       [1]    FARG_timer1_open_enable
0x04C4       [1]    FARG_timer3_open_enable
0x04C5       [1]    FARG_timer3_open_priorityHigh
0x04C5       [2]    LongToStr_i_L0
0x04C5       [1]    FARG_timer1_open_priorityHigh
0x04C6       [1]    timer1_open_i_L0
0x04C6       [1]    timer3_open_i_L0
0x04C7       [2]    FARG_mysql_search_fila
0x04C7       [1]    FARG_can_open_id
0x04C7       [2]    LongToStr_negative_L0
0x04C7       [2]    mysql_count_forced_coincidencias_L0
0x04C7       [4]    FARG_clamp_max
0x04C8       [1]    FARG_can_open_speed_us
0x04C9       [4]    mysql_search_busqueda_L0
0x04C9       [4]    LongToStr_inword_L0
0x04C9       [4]    mysql_count_forced_busqueda_L0
0x0500       [1]    expendedora_ticket_cont_L0
0x0501       [1]    FARG_wiegand26_checkTouch_bytes
0x0501       [1]    FARG_external_int0_open_enable
0x0501       [4]    FARG_can_write_id
0x0501       [1]    FARG_can_set_mode_CAN_MODE
0x0501       [2]    ?FLOC___can_user_read_messageT3791
0x0501       [4]    FARG_timer2_open_time_us
0x0501       [2]    FARG_can_read_id
0x0501       [1]    FARG_external_int0_enable_enable
0x0501       [2]    FARG_can_set_baud_speed_us
0x0501       [4]    FARG_LongWordToStr_input
0x0501       [1]    FARG_can_user_guardHeartBeat_idNodo
0x0501       [1]    FARG_external_int1_enable_enable
0x0501       [2]    FARG_impresoraTerm_writeDinamicText_texto
0x0501       [1]    FARG_external_int1_open_enable
0x0502       [1]    FARG_external_int0_open_edgeOnRising
0x0502       [1]    can_set_mode_modeAct_L0
0x0502       [1]    FARG_external_int1_open_edgeOnRising
0x0502       [1]    wiegand26_checkTouch_i_L0
0x0503       [2]    ?FLOC___can_user_read_messageT3822
0x0503       [1]    wiegand26_checkTouch_nibleH_L0
0x0503       [1]    FARG_external_int1_open_priorityHigh
0x0503       [3]    FARG_impresoraTerm_writeDinamicText_address
0x0503       [2]    FARG_can_read_datos
0x0503       [1]    can_set_baud_Tqp_L0
0x0504       [1]    wiegand26_checkTouch_nibleL_L0
0x0504       [1]    can_set_baud_pre_L0
0x0505       [1]    FARG_timer2_open_powerOn
0x0505       [2]    FARG_can_write_datos
0x0505       [1]    can_user_read_message_sizeKey_L0
0x0505       [2]    FARG_can_read_size
0x0505       [2]    FARG_LongWordToStr_output
0x0506       [1]    impresoraTerm_writeDinamicText_cont2_L0
0x0506       [1]    FARG_timer2_open_enable
0x0506       [1]    can_user_read_message_sizeTotal_L0
0x0507       [1]    impresoraTerm_writeDinamicText_comandos_L0
0x0507       [1]    FARG_can_write_size
0x0507       [2]    LongWordToStr_len_L0
0x0507       [1]    FARG_timer2_open_priorityHigh
0x0507       [1]    ?FLOC___can_readT862
0x0507       [2]    can_user_read_message_fila_L0
0x0508       [2]    impresoraTerm_writeDinamicText_ticketPointer_L0
0x0508       [1]    ?FLOC___can_readT875
0x0508       [1]    FARG_can_write_priority
0x0508       [1]    timer2_open_post_L0
0x0509       [1]    can_user_read_message_vigencia_L0
0x0509       [1]    ?FLOC___can_readT877
0x0509       [1]    timer2_open_pres_L0
0x0509       [2]    FLOC__LongWordToStr
0x0509       [1]    FARG_can_write_rtr
0x050A       [1]    ?FLOC___can_readT885
0x050A       [1]    can_user_read_message_estatus_L0
0x050A       [1]    timer2_open_auxPre_L0
0x050A       [1]    ?FLOC___can_writeT1004
0x050A       [2]    impresoraTerm_writeDinamicText_dir_L0
0x050B       [1]    ?FLOC___can_writeT1012
0x050B       [2]    can_read_receptor_L0
0x050B       [4]    can_user_read_message_idConsulta_L0
0x050C       [1]    ?FLOC___can_writeT1020
0x050C      [11]    impresoraTerm_writeDinamicText_ADRR_ERROR_L0
0x050D       [2]    can_write_transmisor_L0
0x050D       [2]    can_read_regLen_L0
0x050F       [2]    can_write_mascara_L0
0x050F       [4]    can_user_read_message_idNew_L0
0x050F       [2]    can_read_buffer_L0
0x0511       [2]    can_read_bufferBX_L0
0x0511       [2]    can_write_regLen_L0
0x0513       [1]    can_read_ref_L0
0x0513       [2]    can_write_buffer_L0
0x0513       [4]    can_user_read_message_id_L0
0x0515       [1]    can_write_ref_L0
0x0517       [1]    impresoraTerm_writeDinamicText_cont_L0
0x0517       [4]    can_user_read_message_nip_L0
0x051B       [4]    can_user_read_message_saldo_L0
0x051F       [4]    can_user_read_message_auxNip_L0
0x0523       [2]    FARG_mysql_search_forced_tabla
0x0523       [2]    FARG_mysql_write_name
0x0523       [1]    FARG_timer1_enable_enable
0x0523       [3]    FARG_string_cmpnc_text1
0x0523       [1]    FARG_lcd_out_fila
0x0523       [2]    FARG_string_cpyn_destino
0x0523       [2]    FARG_DS1307_read_myDS
0x0523       [2]    FARG_string_addc_destino
0x0523       [2]    FARG_mysql_write_string_name
0x0523       [2]    FARG_xtoi_s
0x0523       [2]    FARG_string_cpyc_destino
0x0523       [2]    FARG_DS1307_write_string_myDS
0x0523       [2]    FARG_atoi_s
0x0523       [1]    FARG_usart_write_caracter
0x0523       [2]    FARG_string_toUpper_cadena
0x0523       [1]    FARG_can_set_operation_CAN_OPERATION
0x0523       [1]    FARG_lcd_clean_row_fila
0x0523       [2]    FARG_can_set_id_address
0x0523       [4]    FARG_numToHex_valor
0x0523       [2]    FARG_string_add_destino
0x0523       [2]    FARG_mysql_erase_name
0x0523       [2]    FARG_string_push_texto
0x0523       [2]    FARG_mysql_read_string_name
0x0523       [2]    FARG_can_get_id_address
0x0523       [2]    FARG_stringToNum_cadena
0x0523       [2]    FARG_hexToNum_hex
0x0523       [1]    FARG_buffer_save_send_guardar
0x0524       [2]    FARG_buffer_save_send_buffer
0x0524       [1]    lcd_clean_row_i_L0
0x0524       [1]    FARG_lcd_out_col
0x0525       [1]    hexToNum_cont_L0
0x0525       [2]    atoi_c_L0
0x0525       [1]    string_toUpper_cont_L0
0x0525       [2]    FARG_mysql_write_column
0x0525       [3]    FARG_string_cpyc_origen
0x0525       [2]    FARG_string_cpyn_origen
0x0525       [1]    stringToNum_cont_L0
0x0525       [2]    FARG_mysql_read_string_column
0x0525       [3]    FARG_string_addc_addEnd
0x0525       [2]    FARG_string_add_addEnd
0x0525       [1]    FARG_string_push_caracter
0x0525       [2]    FARG_DS1307_write_string_date
0x0525       [2]    FARG_mysql_write_string_column
0x0525       [1]    FARG_DS1307_read_formatComplet
0x0525       [4]    can_get_id_value_L0
0x0525       [4]    FARG_can_set_id_value
0x0525       [2]    xtoi_sign_L0
0x0525       [2]    FARG_mysql_search_forced_columna
0x0525       [2]    FARG_lcd_out_texto
0x0526       [1]    string_push_cont_L0
0x0526       [1]    buffer_save_send_result_L0
0x0526       [4]    stringToNum_numero_L0
0x0526       [2]    FARG_string_cmpnc_text2
0x0526       [2]    FLOC__DS1307_read
0x0526       [1]    hexToNum_ref_L0
0x0527       [4]    hexToNum_valor_L0
0x0527       [2]    xtoi_c_L0
0x0527       [1]    lcd_out_cont_L0
0x0527       [2]    FARG_numToHex_cadena
0x0527       [1]    FARG_string_cpyn_size
0x0527       [2]    FARG_mysql_write_string_fila
0x0527       [2]    FLOC__DS1307_write_string
0x0527       [2]    FARG_mysql_write_fila
0x0527       [2]    atoi_a_L0
0x0527       [4]    FARG_mysql_search_forced_buscar
0x0527       [2]    FARG_mysql_read_string_fila
0x0527       [1]    string_add_total_L0
0x0528       [1]    string_addc_total_L0
0x0528       [1]    string_add_cont_L0
0x0528       [1]    FARG_string_cmpnc_bytes
0x0528       [1]    string_cpyc_cont_L0
0x0529       [1]    FARG_numToHex_bytes
0x0529       [2]    atoi_sign_L0
0x0529       [4]    FARG_mysql_write_value
0x0529       [1]    string_addc_cont_L0
0x0529       [2]    xtoi_val_L0
0x0529       [2]    FARG_mysql_write_string_texto
0x0529       [2]    FARG_mysql_read_string_result
0x052A       [1]    numToHex_cont_L0
0x052B       [2]    FLOC__numToHex
0x052B       [1]    mysql_read_string_res_L0
0x052B       [2]    FLOC__hexToNum
0x052B       [2]    FARG_mysql_search_forced_fila
0x052B       [1]    FARG_mysql_write_string_endWrite
0x052C       [1]    mysql_write_string_res_L0
0x052D       [4]    mysql_search_forced_busqueda_L0
0x052D       [1]    FARG_mysql_write_endWrite
0x052E       [1]    mysql_write_res_L0
0x0531       [1]    FARG_isxdigit_character
0x0531       [2]    FARG_DS1307_date_myDS
0x0531       [1]    FARG_lcd_chr_fila
0x0531       [2]    FARG_mysql_write_roundTrip_name
0x0531       [4]    FARG_can_write_text_ipAddress
0x0531       [1]    FARG_isupper_character
0x0531       [1]    FARG_isspace_character
0x0531       [2]    FARG_mysql_write_forced_name
0x0531       [2]    FARG_strlen_s
0x0531       [2]    FARG_string_len_texto
0x0531       [2]    FARG_mysql_read_forced_name
0x0531       [2]    FARG_string_isNumeric_cadena
0x0531       [1]    FARG_Soft_I2C_Write_data_
0x0531       [1]    FARG_bcdToDec_dato
0x0531       [2]    FARG_mysql_read_name
0x0531       [1]    FARG_decToBcd_dato
0x0531       [1]    FARG_tolower_character
0x0531       [2]    FARG_Soft_I2C_Read_ack
0x0531       [2]    FARG_stringToNumN_cadena
0x0532       [1]    isxdigit_rslt_L0
0x0532       [2]    Soft_I2C_Write_temp_L0
0x0532       [1]    FLOC__decToBcd
0x0532       [1]    FARG_lcd_chr_col
0x0533       [1]    string_isNumeric_cont_L0
0x0533       [2]    FARG_mysql_write_roundTrip_column
0x0533       [1]    FARG_stringToNumN_size
0x0533       [1]    string_len_cont_L0
0x0533       [1]    FARG_lcd_chr_c
0x0533       [2]    FARG_mysql_read_forced_column
0x0533       [2]    Soft_I2C_Read_result_L0
0x0533       [1]    FARG_DS1307_date_formatComplet
0x0533       [2]    FARG_mysql_read_column
0x0533       [2]    FARG_mysql_write_forced_column
0x0534       [1]    stringToNumN_cont_L0
0x0534       [1]    DS1307_date_cont_L0
0x0534       [2]    Soft_I2C_Write_result_L0
0x0535       [2]    FARG_mysql_write_roundTrip_texto
0x0535       [2]    FARG_mysql_read_forced_fila
0x0535       [4]    stringToNumN_numero_L0
0x0535       [2]    Soft_I2C_Read_temp_L0
0x0535       [2]    FARG_can_write_text_texto
0x0535       [2]    FARG_mysql_read_fila
0x0535       [2]    FARG_mysql_write_forced_fila
0x0537       [2]    FARG_mysql_write_forced_texto
0x0537       [2]    FARG_mysql_read_forced_result
0x0537       [2]    FARG_mysql_read_result
0x0537       [1]    FARG_mysql_write_roundTrip_bytes
0x0537       [1]    FARG_can_write_text_priority
0x0538       [1]    mysql_write_roundTrip_res_L0
0x0539       [1]    mysql_read_res_L0
0x0539       [1]    mysql_read_forced_res_L0
0x0539       [1]    FARG_mysql_write_forced_bytes
0x053A       [1]    mysql_write_forced_res_L0
0x053B       [4]    FARG_clamp_shift_valor
0x053B       [1]    FARG_isdigit_character
0x053B       [4]    FARG_numToString_valor
0x053B       [2]    FARG__mysql_calculate_address_name
0x053B       [2]    FARG_eeprom_i2c_write_address
0x053B       [1]    FARG_lcd_gotoxy_fila
0x053C       [1]    FARG_lcd_gotoxy_col
0x053D       [2]    FARG_eeprom_i2c_write_datos
0x053D       [2]    FARG__mysql_calculate_address_column
0x053F       [1]    FARG_eeprom_i2c_write_size
0x053F       [2]    FARG_numToString_cadena
0x053F       [2]    _mysql_calculate_address_addressAux_L0
0x053F       [4]    FARG_clamp_shift_min
0x0540       [1]    eeprom_i2c_write_cont_L0
0x0541       [1]    FARG_numToString_digitos
0x0542       [2]    FLOC__numToString
0x0543       [4]    FARG_clamp_shift_max
0x0547       [1]    FARG_lcd_send_byte_address
0x0547       [2]    FARG_mysql_exist_name
0x0548       [1]    FARG_lcd_send_byte_enviar
0x0549       [2]    FARG_eeprom_i2c_read_address
0x0549       [2]    FARG_strncmp_s1
0x0549       [1]    FARG_lcd_send_nibble_nibble
0x0549       [1]    FARG_Swap_input
0x054B       [2]    FARG_strncmp_s2
0x054B       [2]    FARG_eeprom_i2c_read_datos
0x054D       [1]    FARG_eeprom_i2c_read_size
0x054D       [1]    FARG_strncmp_len
0x054E       [1]    eeprom_i2c_read_cont_L0
0x054F       [2]    FLOC__eeprom_i2c_read
0x0551       [1]    FARG_I2C_soft_read_ACK
0x0551       [1]    FARG_I2C_soft_write_dato
0x0552       [1]    I2C_soft_read_result_L0
0x0D63       [1]    RXF6EIDL
0x0D67       [1]    RXF7EIDL
0x0D6B       [1]    RXF8EIDL
0x0D73       [1]    RXF9EIDL
0x0D77       [1]    RXF10EIDL
0x0D7B       [1]    RXF11EIDL
0x0D83       [1]    RXF12EIDL
0x0D87       [1]    RXF13EIDL
0x0D8B       [1]    RXF14EIDL
0x0D93       [1]    RXF15EIDL
0x0DF8       [1]    BSEL0
0x0E20       [1]    B0CON
0x0E24       [1]    B0EIDL
0x0E25       [1]    B0DLC
0x0E26       [1]    B0D0
0x0E30       [1]    B1CON
0x0E34       [1]    B1EIDL
0x0E35       [1]    B1DLC
0x0E36       [1]    B1D0
0x0E40       [1]    B2CON
0x0E44       [1]    B2EIDL
0x0E45       [1]    B2DLC
0x0E46       [1]    B2D0
0x0E50       [1]    B3CON
0x0E54       [1]    B3EIDL
0x0E55       [1]    B3DLC
0x0E56       [1]    B3D0
0x0E60       [1]    B4CON
0x0E64       [1]    B4EIDL
0x0E65       [1]    B4DLC
0x0E66       [1]    B4D0
0x0E70       [1]    B5CON
0x0E74       [1]    B5EIDL
0x0E75       [1]    B5DLC
0x0E76       [1]    B5D0
0x0F03       [1]    RXF0EIDL
0x0F07       [1]    RXF1EIDL
0x0F0B       [1]    RXF2EIDL
0x0F0F       [1]    RXF3EIDL
0x0F13       [1]    RXF4EIDL
0x0F17       [1]    RXF5EIDL
0x0F1B       [1]    RXM0EIDL
0x0F1F       [1]    RXM1EIDL
0x0F20       [1]    TXB2CON
0x0F24       [1]    TXB2EIDL
0x0F25       [1]    TXB2DLC
0x0F26       [1]    TXB2D0
0x0F30       [1]    TXB1CON
0x0F34       [1]    TXB1EIDL
0x0F35       [1]    TXB1DLC
0x0F36       [1]    TXB1D0
0x0F40       [1]    TXB0CON
0x0F44       [1]    TXB0EIDL
0x0F45       [1]    TXB0DLC
0x0F46       [1]    TXB0D0
0x0F50       [1]    RXB1CON
0x0F54       [1]    RXB1EIDL
0x0F56       [1]    RXB1D0
0x0F60       [1]    RXB0CON
0x0F64       [1]    RXB0EIDL
0x0F65       [1]    RXB0DLC
0x0F66       [1]    RXB0D0
0x0F6E       [1]    CANSTAT
0x0F6F       [1]    CANCON
0x0F70       [1]    BRGCON1
0x0F71       [1]    BRGCON2
0x0F72       [1]    BRGCON3
0x0F73       [1]    CIOCON
0x0F74       [1]    COMSTAT
0x0F77       [1]    ECANCON
0x0F80       [0]    SALIDA_RELE1
0x0F80       [0]    LCD_D6
0x0F80       [0]    LCD_D7
0x0F80       [0]    LCD_D5
0x0F80       [0]    LCD_EN
0x0F80       [0]    LCD_D4
0x0F80       [1]    PORTA
0x0F81       [1]    PORTB
0x0F81       [0]    I2C_SCL
0x0F81       [0]    I2C_SDA
0x0F82       [1]    PORTC
0x0F82       [0]    LED_LINK
0x0F83       [0]    SALIDA_RELE3
0x0F83       [0]    SALIDA_RELE4
0x0F83       [0]    SENSOR_COCHE
0x0F83       [0]    BOTON_IMPRIMIR
0x0F83       [0]    SALIDA_RELE5
0x0F83       [0]    Soft_I2C_Sda
0x0F83       [0]    BOTON_ENTRADA1
0x0F83       [1]    PORTD
0x0F84       [1]    PORTE
0x0F84       [0]    Soft_I2C_Scl
0x0F84       [0]    LCD_RS
0x0F84       [0]    SALIDA_RELE2
0x0F92       [0]    LCD_D6_Direction
0x0F92       [0]    LCD_D7_Direction
0x0F92       [0]    LCD_D5_Direction
0x0F92       [1]    TRISA
0x0F92       [0]    LCD_EN_Direction
0x0F92       [0]    SALIDA_RELE1D
0x0F92       [0]    LCD_D4_Direction
0x0F93       [0]    I2C_SDAD
0x0F93       [0]    I2C_SCLD
0x0F93       [1]    TRISB
0x0F94       [1]    TRISC
0x0F94       [0]    LED_LINKD
0x0F95       [1]    TRISD
0x0F95       [0]    SALIDA_RELE3D
0x0F95       [0]    SALIDA_RELE4D
0x0F95       [0]    SALIDA_RELE5D
0x0F95       [0]    BOTON_IMPRIMIRD
0x0F95       [0]    BOTON_ENTRADA1D
0x0F95       [0]    Soft_I2C_Sda_Direction
0x0F95       [0]    SENSOR_COCHED
0x0F96       [0]    Soft_I2C_Scl_Direction
0x0F96       [0]    LCD_RS_Direction
0x0F96       [0]    SALIDA_RELE2D
0x0F96       [1]    TRISE
0x0F9D       [1]    PIE1
0x0F9E       [1]    PIR1
0x0F9F       [1]    IPR1
0x0FA0       [1]    PIE2
0x0FA1       [1]    PIR2
0x0FA2       [1]    IPR2
0x0FA3       [1]    PIE3
0x0FA4       [1]    PIR3
0x0FA5       [1]    IPR3
0x0FA6       [1]    EECON1
0x0FA8       [1]    EEDATA
0x0FA9       [1]    EEADR
0x0FAA       [1]    EEADRH
0x0FAB       [1]    RCSTA
0x0FAC       [1]    TXSTA
0x0FAD       [1]    TXREG
0x0FAF       [1]    SPBRG
0x0FB0       [1]    SPBRGH
0x0FB1       [1]    T3CON
0x0FB2       [1]    TMR3L
0x0FB3       [1]    TMR3H
0x0FB4       [1]    CMCON
0x0FB8       [1]    BAUDCON
0x0FC1       [1]    ADCON1
0x0FCA       [1]    T2CON
0x0FCB       [1]    PR2
0x0FCC       [1]    TMR2
0x0FCD       [1]    T1CON
0x0FCE       [1]    TMR1L
0x0FCF       [1]    TMR1H
0x0FD0       [1]    RCON
0x0FD3       [1]    OSCCON
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FEF       [1]    INDF0
0x0FF0       [1]    INTCON3
0x0FF1       [1]    INTCON2
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x9C04    [1245]    _ticket
0xA0E1      [12]    ?ICS_tablePensionados
0xA0ED      [19]    ?ICS?lstr8_Expendedora
0xA100       [8]    ?ICS_tableSoporte
0xA108       [2]    ?ICS?lstr34_Expendedora
0xA10A       [7]    ?ICS?lstr5_Expendedora
0xA111       [7]    ?ICS?lstr4_Expendedora
0xA118       [8]    ?ICS_tablePrepago
0xA120      [16]    ?ICS?lstr11_Expendedora
0xA130       [8]    ?ICS_prepagoEstatus
0xA138      [16]    ?ICS?lstr12_Expendedora
0xA148       [6]    ?ICS_prepagoSaldo
0xA14E      [19]    ?ICS?lstr10_Expendedora
0xA161       [9]    ?ICS_pensionadosVigencia
0xA16A       [3]    ?ICS_pensionadosID
0xA16D       [8]    ?ICS_pensionadosEstatus
0xA175      [16]    ?ICS?lstr9_Expendedora
0xA185       [1]    ?ICSexpendedora_checkTarjeta_buscarNIP_L0
0xA186       [1]    ?ICSexpendedora_checkTarjeta_buscarID_L0
0xA187       [1]    ?ICSexpendedora_temporizadores_isCanConect_L0
0xA188      [16]    ?ICS?lstr32_Expendedora
0xA198      [11]    ?ICS?lstr31_Expendedora
0xA1A3       [2]    ?ICS?lstr33_Expendedora
0xA1A5       [1]    ?ICS_flagTMR3
0xA1A6       [1]    ?ICScan_do_write_message_maquinaE_L0
0xA1A7       [1]    ?ICSint_timer3_temp_L0
0xA1A8       [1]    ?ICSint_timer1_temp_L0
0xA1A9       [1]    ?ICScan_do_read_message_len_L0
0xA1AA       [1]    ?ICSexpendedora_imprimir_btnCoche_L0
0xA1AB       [1]    ?ICSexpendedora_barrera_sensor_L0
0xA1AC       [1]    ?ICSexpendedora_imprimir_imprimir_L0
0xA1AD       [2]    ?ICSexpendedora_ticket_puntero_L0
0xA1AF       [4]    ?ICS_canIp
0xA1B3      [17]    ?ICS?lstr1_Expendedora
0xA1C4       [4]    ?ICS_canMask
0xA1C8       [5]    ?ICS_prepagoDate
0xA1CD       [4]    ?ICS?lstr27_Expendedora
0xA1D1       [1]    ?ICS?lstr28_Expendedora
0xA1D2      [15]    ?ICS?lstr30_Expendedora
0xA1E1      [13]    ?ICS?lstr29_Expendedora
0xA1EE       [7]    ?ICS_columnaEstado
0xA1F5       [5]    ?ICS_tableCupo
0xA1FA      [10]    ?ICS_tableSyncronia
0xA204      [12]    ?ICS?lstr2_Expendedora
0xA210      [11]    ?ICS?lstr24_Expendedora
0xA21B       [1]    ?ICS_tempLCD
0xA21C       [1]    ?ICS_limpiarLCD
0xA21D      [14]    ?ICS?lstr25_Expendedora
0xA22B      [15]    ?ICS?lstr26_Expendedora
0xA23A       [1]    ?ICS_eSensor
0xA23B       [6]    ?ICS_folioTotal
0xA241       [6]    ?ICS_tableFolio
0xA247       [9]    ?ICS_eventosRegistro
0xA250       [8]    ?ICS_eventosEstatus
0xA258      [11]    ?ICS_tableEventosCAN
0xA263       [1]    ?ICS_canId
0xA264       [2]    ?ICS?lstr35_Expendedora
0xA266       [1]    ?ICS_abrirBarrera
0xA267      [12]    ?ICS?lstr3_Expendedora
0xA273       [1]    ?ICS_flagSecondTMR3
0xA274       [1]    ?ICS_modeBufferEventos
0xA275       [2]    ?ICS_temp_heartbeat
0xA277      [16]    ?ICS?lstr18_Expendedora
0xA287      [14]    ?ICS?lstr17_Expendedora
0xA295       [7]    ?ICS_tableKeyOutNip
0xA29C       [8]    ?ICS_keyOutEstatus
0xA2A4       [4]    ?ICS_keyOutNip
0xA2A8      [16]    ?ICS?lstr16_Expendedora
0xA2B8      [16]    ?ICS?lstr14_Expendedora
0xA2C8      [16]    ?ICS?lstr13_Expendedora
0xA2D8      [20]    ?ICS?lstr15_Expendedora
0xA2EC       [3]    ?ICS_prepagoId
0xA2EF       [4]    ?ICS_prepagoNip
0xA2F3      [15]    ?ICS?lstr23_Expendedora
0xA302       [2]    ?ICS?lstr19_Expendedora
0xA304       [5]    ?ICS_keyOutDate
0xA309      [13]    ?ICS?lstr20_Expendedora
0xA316      [14]    ?ICS?lstr22_Expendedora
0xA324      [17]    ?ICS?lstr21_Expendedora
0xA335      [18]    ?ICS?lstr6_Expendedora
0xA347       [3]    ?ICS_soporteID
0xA34A      [18]    ?ICS?lstr7_Expendedora
0xA35C      [11]    _CAN_TABLE_MODIFICADO
0xA367      [10]    _ticketAddr
0xA371       [9]    _CAN_TABLE_NO_FOUND
0xA37A       [6]    _CAN_TABLE_ERROR
0xA380       [5]    expendedora_checkTarjeta_ACCESO_DENEGADO_L0
0xA385       [5]    _CAN_COCHE_OUT
0xA38A       [5]    expendedora_barrera_BARRERA_ABIERTA_L0
0xA38F       [5]    _CAN_COCHE_IN
0xA394       [4]    _CAN_TABLE_ERASE
0xA398       [4]    _CAN_TABLE_INFO
0xA39C       [4]    can_user_read_message_FILAS_ACTUALES_L0
0xA3A0       [4]    _CAN_TABLE
0xA3A4       [4]    _CAN_SALDO
0xA3A8       [4]    _CAN_SOPORTE
0xA3AC       [4]    _CAN_SPECIAL_SALDO
0xA3B0       [4]    can_user_read_message_FILAS_PROG_L0
0xA3B4       [4]    _CAN_ABRIR
0xA3B8       [4]    _CAN_CUPO
0xA3BC       [4]    _CAN_TPV
0xA3C0       [4]    _CAN_OUT
0xA3C4       [4]    _CAN_CMD
0xA3C8       [4]    _CAN_TBL
0xA3CC       [4]    _CAN_TABLE_RW
0xA3D0       [4]    _CAN_TABLE_WRITE
0xA3D4       [4]    _CAN_TABLE_READ
0xA3D8       [4]    _CAN_PREPAGO
0xA3DC       [4]    _CAN_PASSBACK
0xA3E0       [4]    _CAN_NIP
0xA3E4       [4]    _CAN_SPECIAL_DATE
0xA3E8       [4]    expendedora_barrera_CAN_BAR_L0
0xA3EC       [4]    _CAN_FOL
0xA3F0       [4]    _CAN_PENSIONADO
0xA3F4       [4]    _CAN_IDX
0xA3F8       [4]    _CAN_RTC
0xA3FC       [4]    _CAN_CONSULTAR
0xA400       [4]    _CAN_TABLE_GET
0xA404       [4]    _CAN_TABLE_SET
0xA408       [4]    _CAN_VIGENCIA
0xA40C       [4]    _CAN_KEY
0xA410       [4]    _CAN_REGISTRAR
0xA414       [4]    _CAN_ACTUALIZAR
0xA418       [3]    expendedora_imprimir_convenio_L0
0xA41B       [3]    _USART_NEW_LINE
0xA41E       [2]    _CAN_MODULE
